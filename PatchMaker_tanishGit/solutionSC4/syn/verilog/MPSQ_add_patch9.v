// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MPSQ_add_patch9 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        n_patches,
        n_patches_ap_vld,
        n_patches_read,
        output_patch_stream_V_din,
        output_patch_stream_V_full_n,
        output_patch_stream_V_write,
        wp_superpoints_address0,
        wp_superpoints_ce0,
        wp_superpoints_q0,
        wp_superpoints_address1,
        wp_superpoints_ce1,
        wp_superpoints_q1,
        wp_parameters_address0,
        wp_parameters_ce0,
        wp_parameters_q0,
        patches_superpoints_address0,
        patches_superpoints_ce0,
        patches_superpoints_we0,
        patches_superpoints_d0,
        patches_superpoints_q0,
        patches_superpoints_address1,
        patches_superpoints_ce1,
        patches_superpoints_we1,
        patches_superpoints_d1,
        patches_superpoints_q1,
        patches_parameters_address0,
        patches_parameters_ce0,
        patches_parameters_we0,
        patches_parameters_d0,
        patches_parameters_q0
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_state2 = 18'd2;
parameter    ap_ST_fsm_state3 = 18'd4;
parameter    ap_ST_fsm_state4 = 18'd8;
parameter    ap_ST_fsm_state5 = 18'd16;
parameter    ap_ST_fsm_state6 = 18'd32;
parameter    ap_ST_fsm_state7 = 18'd64;
parameter    ap_ST_fsm_pp1_stage0 = 18'd128;
parameter    ap_ST_fsm_state12 = 18'd256;
parameter    ap_ST_fsm_pp2_stage0 = 18'd512;
parameter    ap_ST_fsm_state17 = 18'd1024;
parameter    ap_ST_fsm_pp3_stage0 = 18'd2048;
parameter    ap_ST_fsm_state22 = 18'd4096;
parameter    ap_ST_fsm_state23 = 18'd8192;
parameter    ap_ST_fsm_state24 = 18'd16384;
parameter    ap_ST_fsm_pp4_stage0 = 18'd32768;
parameter    ap_ST_fsm_state29 = 18'd65536;
parameter    ap_ST_fsm_state30 = 18'd131072;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] n_patches;
output   n_patches_ap_vld;
input  [7:0] n_patches_read;
output  [63:0] output_patch_stream_V_din;
input   output_patch_stream_V_full_n;
output   output_patch_stream_V_write;
output  [7:0] wp_superpoints_address0;
output   wp_superpoints_ce0;
input  [31:0] wp_superpoints_q0;
output  [7:0] wp_superpoints_address1;
output   wp_superpoints_ce1;
input  [31:0] wp_superpoints_q1;
output  [4:0] wp_parameters_address0;
output   wp_parameters_ce0;
input  [31:0] wp_parameters_q0;
output  [7:0] patches_superpoints_address0;
output   patches_superpoints_ce0;
output   patches_superpoints_we0;
output  [63:0] patches_superpoints_d0;
input  [63:0] patches_superpoints_q0;
output  [7:0] patches_superpoints_address1;
output   patches_superpoints_ce1;
output   patches_superpoints_we1;
output  [63:0] patches_superpoints_d1;
input  [63:0] patches_superpoints_q1;
output  [6:0] patches_parameters_address0;
output   patches_parameters_ce0;
output   patches_parameters_we0;
output  [31:0] patches_parameters_d0;
input  [31:0] patches_parameters_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] n_patches;
reg n_patches_ap_vld;
reg output_patch_stream_V_write;
reg[7:0] wp_superpoints_address0;
reg wp_superpoints_ce0;
reg[7:0] wp_superpoints_address1;
reg wp_superpoints_ce1;
reg wp_parameters_ce0;
reg[7:0] patches_superpoints_address0;
reg patches_superpoints_ce0;
reg patches_superpoints_we0;
reg[7:0] patches_superpoints_address1;
reg patches_superpoints_ce1;
reg patches_superpoints_we1;
reg patches_parameters_ce0;
reg patches_parameters_we0;

(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    output_patch_stream_V_blk_n;
reg    ap_enable_reg_pp1_iter3;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln424_reg_1210;
reg   [0:0] icmp_ln424_reg_1210_pp1_iter2_reg;
reg   [6:0] indvar_flatten7_reg_308;
reg   [2:0] a_5_reg_319;
reg   [4:0] b_7_reg_330;
reg   [7:0] indvar_flatten29_reg_341;
reg   [1:0] i_12_reg_352;
reg   [7:0] indvar_flatten15_reg_363;
reg   [2:0] a_6_reg_374;
reg   [4:0] b_8_reg_385;
reg   [6:0] indvar_flatten37_reg_396;
reg   [2:0] a_7_reg_407;
reg   [4:0] b_9_reg_418;
reg   [6:0] indvar_flatten_reg_429;
reg   [2:0] a_reg_440;
reg   [4:0] b_reg_451;
reg   [63:0] reg_477;
wire    ap_CS_fsm_state6;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_state8_pp1_stage0_iter0;
wire    ap_block_state9_pp1_stage0_iter1;
wire    ap_block_state10_pp1_stage0_iter2;
reg    ap_block_state11_pp1_stage0_iter3;
reg    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln424_reg_1210_pp1_iter1_reg;
reg    ap_enable_reg_pp2_iter2;
wire    ap_block_state13_pp2_stage0_iter0;
wire    ap_block_state14_pp2_stage0_iter1;
wire    ap_block_state15_pp2_stage0_iter2;
wire    ap_block_state16_pp2_stage0_iter3;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln435_reg_1240;
reg   [0:0] icmp_ln435_reg_1240_pp2_iter1_reg;
reg   [31:0] reg_484;
reg    ap_enable_reg_pp3_iter2;
wire    ap_block_state18_pp3_stage0_iter0;
wire    ap_block_state19_pp3_stage0_iter1;
wire    ap_block_state20_pp3_stage0_iter2;
wire    ap_block_state21_pp3_stage0_iter3;
wire    ap_block_pp3_stage0_11001;
reg   [0:0] icmp_ln458_reg_1292;
reg   [0:0] icmp_ln458_reg_1292_pp3_iter1_reg;
reg    ap_enable_reg_pp4_iter2;
wire    ap_block_state25_pp4_stage0_iter0;
wire    ap_block_state26_pp4_stage0_iter1;
wire    ap_block_state27_pp4_stage0_iter2;
wire    ap_block_state28_pp4_stage0_iter3;
wire    ap_block_pp4_stage0_11001;
reg   [0:0] icmp_ln378_reg_1332;
reg   [0:0] icmp_ln378_reg_1332_pp4_iter1_reg;
reg   [31:0] reg_490;
wire   [5:0] empty_fu_496_p1;
reg   [5:0] empty_reg_1143;
wire   [0:0] icmp_ln374_fu_500_p2;
reg   [0:0] icmp_ln374_reg_1148;
wire   [0:0] icmp_ln406_fu_506_p2;
reg   [0:0] icmp_ln406_reg_1152;
wire    ap_CS_fsm_state2;
wire   [2:0] add_ln406_fu_512_p2;
reg   [2:0] add_ln406_reg_1156;
wire   [6:0] tmp_s_fu_518_p3;
reg   [6:0] tmp_s_reg_1161;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln874_fu_591_p2;
reg   [0:0] icmp_ln874_reg_1186;
wire   [0:0] icmp_ln419_fu_616_p2;
reg   [0:0] icmp_ln419_reg_1193;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln421_fu_622_p2;
wire   [0:0] icmp_ln874_5_fu_627_p2;
wire    ap_CS_fsm_state7;
wire   [6:0] add_ln424_1_fu_633_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln424_fu_639_p2;
wire   [4:0] select_ln424_fu_657_p3;
reg   [4:0] select_ln424_reg_1214;
wire   [2:0] select_ln424_1_fu_665_p3;
reg   [2:0] select_ln424_1_reg_1219;
wire   [4:0] add_ln427_fu_673_p2;
wire   [7:0] add_ln435_1_fu_710_p2;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire   [0:0] icmp_ln435_fu_722_p2;
reg   [0:0] icmp_ln435_reg_1240_pp2_iter2_reg;
wire   [1:0] select_ln435_1_fu_742_p3;
reg   [1:0] select_ln435_1_reg_1244;
wire   [4:0] select_ln441_fu_812_p3;
reg   [4:0] select_ln441_reg_1251;
wire   [2:0] select_ln441_1_fu_820_p3;
reg   [2:0] select_ln441_1_reg_1256;
wire   [3:0] add_ln452_2_fu_832_p2;
reg   [3:0] add_ln452_2_reg_1262;
wire   [4:0] add_ln447_fu_838_p2;
wire   [7:0] select_ln441_2_fu_850_p3;
wire   [7:0] add_ln452_5_fu_912_p2;
reg   [7:0] add_ln452_5_reg_1282;
reg   [7:0] add_ln452_5_reg_1282_pp2_iter2_reg;
wire   [6:0] add_ln458_1_fu_922_p2;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter0;
wire   [0:0] icmp_ln458_fu_928_p2;
reg   [0:0] icmp_ln458_reg_1292_pp3_iter2_reg;
wire   [4:0] select_ln458_fu_946_p3;
reg   [4:0] select_ln458_reg_1296;
wire   [2:0] select_ln458_1_fu_954_p3;
reg   [2:0] select_ln458_1_reg_1301;
wire   [4:0] add_ln464_fu_962_p2;
wire   [7:0] add_ln469_fu_982_p2;
reg   [7:0] add_ln469_reg_1312;
reg   [7:0] add_ln469_reg_1312_pp3_iter2_reg;
wire   [6:0] add_ln378_1_fu_1032_p2;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter0;
wire   [0:0] icmp_ln378_fu_1038_p2;
reg   [0:0] icmp_ln378_reg_1332_pp4_iter2_reg;
wire   [4:0] select_ln378_fu_1056_p3;
reg   [4:0] select_ln378_reg_1336;
wire   [2:0] select_ln378_1_fu_1064_p3;
reg   [2:0] select_ln378_1_reg_1341;
wire   [4:0] add_ln384_fu_1072_p2;
wire   [7:0] add_ln389_fu_1092_p2;
reg   [7:0] add_ln389_reg_1352;
reg   [7:0] add_ln389_reg_1352_pp4_iter2_reg;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state8;
reg    ap_enable_reg_pp1_iter1;
wire    ap_CS_fsm_state12;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state13;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter3;
wire    ap_CS_fsm_state17;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state18;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter3;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state25;
reg    ap_enable_reg_pp4_iter1;
reg    ap_enable_reg_pp4_iter3;
wire    grp_add_patch_patches_parameters13_fu_462_ap_start;
wire    grp_add_patch_patches_parameters13_fu_462_ap_done;
wire    grp_add_patch_patches_parameters13_fu_462_ap_idle;
wire    grp_add_patch_patches_parameters13_fu_462_ap_ready;
wire   [4:0] grp_add_patch_patches_parameters13_fu_462_wp_parameters_address0;
wire    grp_add_patch_patches_parameters13_fu_462_wp_parameters_ce0;
wire   [6:0] grp_add_patch_patches_parameters13_fu_462_patches_parameters_address0;
wire    grp_add_patch_patches_parameters13_fu_462_patches_parameters_ce0;
wire    grp_add_patch_patches_parameters13_fu_462_patches_parameters_we0;
wire   [31:0] grp_add_patch_patches_parameters13_fu_462_patches_parameters_d0;
wire    grp_encodeCoordinates_fu_470_ap_ready;
wire   [63:0] grp_encodeCoordinates_fu_470_ap_return;
reg   [2:0] i_reg_297;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln874_4_fu_601_p2;
reg   [2:0] ap_phi_mux_a_5_phi_fu_323_p4;
reg   [1:0] ap_phi_mux_i_12_phi_fu_356_p4;
wire    ap_block_pp2_stage0;
reg   [2:0] ap_phi_mux_a_6_phi_fu_378_p4;
reg   [2:0] ap_phi_mux_a_7_phi_fu_411_p4;
wire    ap_block_pp3_stage0;
reg   [2:0] ap_phi_mux_a_phi_fu_444_p4;
wire    ap_block_pp4_stage0;
reg    grp_add_patch_patches_parameters13_fu_462_ap_start_reg;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state30;
wire   [63:0] tmp_9_fu_545_p3;
wire   [63:0] zext_ln874_fu_526_p1;
wire   [63:0] zext_ln874_1_fu_582_p1;
wire   [63:0] tmp_10_fu_559_p3;
wire   [63:0] zext_ln429_2_fu_705_p1;
wire   [63:0] zext_ln452_5_fu_907_p1;
wire   [63:0] zext_ln452_6_fu_918_p1;
wire   [63:0] zext_ln469_2_fu_996_p1;
wire   [63:0] zext_ln469_3_fu_1013_p1;
wire   [63:0] zext_ln469_1_fu_1018_p1;
wire   [63:0] zext_ln389_2_fu_1106_p1;
wire   [63:0] zext_ln389_3_fu_1123_p1;
wire   [63:0] zext_ln389_1_fu_1128_p1;
reg    ap_block_pp1_stage0_01001;
wire   [7:0] zext_ln480_fu_1027_p1;
wire   [7:0] tmp_8_fu_531_p3;
wire   [7:0] or_ln874_fu_539_p2;
wire   [6:0] or_ln874_1_fu_554_p2;
wire   [7:0] tmp_74_cast_fu_568_p3;
wire   [7:0] or_ln874_2_fu_576_p2;
wire   [31:0] trunc_ln69_fu_587_p1;
wire   [31:0] trunc_ln69_2_fu_597_p1;
wire   [2:0] tmp_26_fu_607_p4;
wire   [0:0] icmp_ln427_fu_651_p2;
wire   [2:0] add_ln424_fu_645_p2;
wire   [6:0] tmp_11_fu_679_p3;
wire   [7:0] zext_ln429_fu_686_p1;
wire   [7:0] add_ln429_fu_690_p2;
wire   [7:0] zext_ln429_1_fu_696_p1;
wire   [7:0] add_ln429_1_fu_699_p2;
wire   [0:0] icmp_ln441_fu_728_p2;
wire   [1:0] add_ln435_fu_716_p2;
wire   [1:0] xor_ln435_fu_750_p2;
wire   [1:0] select_ln435_2_fu_756_p3;
wire   [3:0] tmp_28_fu_768_p3;
wire   [3:0] zext_ln452_1_fu_764_p1;
wire   [0:0] icmp_ln447_fu_788_p2;
wire   [0:0] xor_ln435_1_fu_782_p2;
wire   [2:0] select_ln435_fu_734_p3;
wire   [0:0] and_ln435_fu_794_p2;
wire   [0:0] or_ln441_fu_806_p2;
wire   [2:0] add_ln441_fu_800_p2;
wire   [3:0] add_ln452_1_fu_776_p2;
wire   [3:0] zext_ln452_2_fu_828_p1;
wire   [7:0] add_ln441_1_fu_844_p2;
wire   [3:0] tmp_27_fu_861_p3;
wire   [3:0] zext_ln452_fu_858_p1;
wire   [3:0] add_ln452_fu_868_p2;
wire   [3:0] zext_ln452_3_fu_881_p1;
wire   [3:0] add_ln452_3_fu_884_p2;
wire   [7:0] tmp_79_cast_fu_874_p3;
wire   [7:0] zext_ln452_4_fu_898_p1;
wire   [7:0] add_ln452_4_fu_901_p2;
wire   [7:0] tmp_81_cast_fu_890_p3;
wire   [0:0] icmp_ln464_fu_940_p2;
wire   [2:0] add_ln458_fu_934_p2;
wire   [6:0] tmp_12_fu_968_p3;
wire   [7:0] tmp_82_cast_fu_975_p1;
wire   [7:0] zext_ln469_fu_979_p1;
wire   [8:0] tmp_29_fu_988_p3;
wire   [7:0] shl_ln469_fu_1001_p2;
wire   [7:0] or_ln469_fu_1007_p2;
wire   [5:0] add_ln480_fu_1022_p2;
wire   [0:0] icmp_ln384_fu_1050_p2;
wire   [2:0] add_ln378_fu_1044_p2;
wire   [6:0] tmp_fu_1078_p3;
wire   [7:0] tmp_cast_fu_1085_p1;
wire   [7:0] zext_ln389_fu_1089_p1;
wire   [8:0] tmp_25_fu_1098_p3;
wire   [7:0] shl_ln389_fu_1111_p2;
wire   [7:0] or_ln389_fu_1117_p2;
reg    ap_predicate_op209_call_state23;
reg    ap_block_state23_on_subcall_done;
reg   [17:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 18'd1;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter3 = 1'b0;
#0 grp_add_patch_patches_parameters13_fu_462_ap_start_reg = 1'b0;
end

MPSQ_add_patch_patches_parameters13 grp_add_patch_patches_parameters13_fu_462(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_add_patch_patches_parameters13_fu_462_ap_start),
    .ap_done(grp_add_patch_patches_parameters13_fu_462_ap_done),
    .ap_idle(grp_add_patch_patches_parameters13_fu_462_ap_idle),
    .ap_ready(grp_add_patch_patches_parameters13_fu_462_ap_ready),
    .wp_parameters_address0(grp_add_patch_patches_parameters13_fu_462_wp_parameters_address0),
    .wp_parameters_ce0(grp_add_patch_patches_parameters13_fu_462_wp_parameters_ce0),
    .wp_parameters_q0(wp_parameters_q0),
    .patches_parameters_address0(grp_add_patch_patches_parameters13_fu_462_patches_parameters_address0),
    .patches_parameters_ce0(grp_add_patch_patches_parameters13_fu_462_patches_parameters_ce0),
    .patches_parameters_we0(grp_add_patch_patches_parameters13_fu_462_patches_parameters_we0),
    .patches_parameters_d0(grp_add_patch_patches_parameters13_fu_462_patches_parameters_d0),
    .patches_parameters_q0(patches_parameters_q0)
);

MPSQ_encodeCoordinates grp_encodeCoordinates_fu_470(
    .ap_ready(grp_encodeCoordinates_fu_470_ap_ready),
    .phi(reg_484),
    .z(reg_490),
    .ap_return(grp_encodeCoordinates_fu_470_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state8) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((icmp_ln874_5_fu_627_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state8)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state8);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if (((icmp_ln874_5_fu_627_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state13) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state13)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state13);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_enable_reg_pp2_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state18) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state18)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state18);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp3_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state25) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln374_fu_500_p2 == 1'd1))) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp4_exit_iter0_state25)) begin
                ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state25);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln374_fu_500_p2 == 1'd1))) begin
            ap_enable_reg_pp4_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_add_patch_patches_parameters13_fu_462_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state22))) begin
            grp_add_patch_patches_parameters13_fu_462_ap_start_reg <= 1'b1;
        end else if ((grp_add_patch_patches_parameters13_fu_462_ap_ready == 1'b1)) begin
            grp_add_patch_patches_parameters13_fu_462_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln874_5_fu_627_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        a_5_reg_319 <= 3'd0;
    end else if (((icmp_ln424_reg_1210 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        a_5_reg_319 <= select_ln424_1_reg_1219;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln435_reg_1240 == 1'd0))) begin
        a_6_reg_374 <= select_ln441_1_reg_1256;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        a_6_reg_374 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        a_7_reg_407 <= 3'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln458_reg_1292 == 1'd0))) begin
        a_7_reg_407 <= select_ln458_1_reg_1301;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln374_fu_500_p2 == 1'd1))) begin
        a_reg_440 <= 3'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln378_reg_1332 == 1'd0))) begin
        a_reg_440 <= select_ln378_1_reg_1341;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln874_5_fu_627_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        b_7_reg_330 <= 5'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln424_fu_639_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        b_7_reg_330 <= add_ln427_fu_673_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln435_fu_722_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        b_8_reg_385 <= add_ln447_fu_838_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        b_8_reg_385 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        b_9_reg_418 <= 5'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln458_fu_928_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        b_9_reg_418 <= add_ln464_fu_962_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln374_fu_500_p2 == 1'd1))) begin
        b_reg_451 <= 5'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln378_fu_1038_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        b_reg_451 <= add_ln384_fu_1072_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln435_reg_1240 == 1'd0))) begin
        i_12_reg_352 <= select_ln435_1_reg_1244;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        i_12_reg_352 <= 2'd2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln374_fu_500_p2 == 1'd0))) begin
        i_reg_297 <= 3'd0;
    end else if (((icmp_ln874_4_fu_601_p2 == 1'd1) & (icmp_ln874_reg_1186 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln406_reg_1152 == 1'd1))) begin
        i_reg_297 <= add_ln406_reg_1156;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln435_fu_722_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        indvar_flatten15_reg_363 <= select_ln441_2_fu_850_p3;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        indvar_flatten15_reg_363 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln435_fu_722_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        indvar_flatten29_reg_341 <= add_ln435_1_fu_710_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        indvar_flatten29_reg_341 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        indvar_flatten37_reg_396 <= 7'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln458_fu_928_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        indvar_flatten37_reg_396 <= add_ln458_1_fu_922_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln874_5_fu_627_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        indvar_flatten7_reg_308 <= 7'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln424_fu_639_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten7_reg_308 <= add_ln424_1_fu_633_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln374_fu_500_p2 == 1'd1))) begin
        indvar_flatten_reg_429 <= 7'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln378_fu_1038_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        indvar_flatten_reg_429 <= add_ln378_1_fu_1032_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln435_reg_1240_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        reg_477 <= patches_superpoints_q1;
    end else if (((1'b1 == ap_CS_fsm_state6) | ((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln424_reg_1210_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        reg_477 <= patches_superpoints_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln378_reg_1332_pp4_iter1_reg == 1'd0) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
        reg_484 <= wp_superpoints_q0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln458_reg_1292_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        reg_484 <= wp_superpoints_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln378_reg_1332_pp4_iter1_reg == 1'd0) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
        reg_490 <= wp_superpoints_q1;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln458_reg_1292_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        reg_490 <= wp_superpoints_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln378_reg_1332 == 1'd0))) begin
        add_ln389_reg_1352 <= add_ln389_fu_1092_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp4_stage0_11001)) begin
        add_ln389_reg_1352_pp4_iter2_reg <= add_ln389_reg_1352;
        icmp_ln378_reg_1332_pp4_iter2_reg <= icmp_ln378_reg_1332_pp4_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln406_reg_1156 <= add_ln406_fu_512_p2;
        icmp_ln406_reg_1152 <= icmp_ln406_fu_506_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln435_fu_722_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        add_ln452_2_reg_1262 <= add_ln452_2_fu_832_p2;
        select_ln441_reg_1251 <= select_ln441_fu_812_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln435_reg_1240 == 1'd0))) begin
        add_ln452_5_reg_1282 <= add_ln452_5_fu_912_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        add_ln452_5_reg_1282_pp2_iter2_reg <= add_ln452_5_reg_1282;
        icmp_ln435_reg_1240_pp2_iter2_reg <= icmp_ln435_reg_1240_pp2_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln458_reg_1292 == 1'd0))) begin
        add_ln469_reg_1312 <= add_ln469_fu_982_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        add_ln469_reg_1312_pp3_iter2_reg <= add_ln469_reg_1312;
        icmp_ln458_reg_1292_pp3_iter2_reg <= icmp_ln458_reg_1292_pp3_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        empty_reg_1143 <= empty_fu_496_p1;
        icmp_ln374_reg_1148 <= icmp_ln374_fu_500_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        icmp_ln378_reg_1332 <= icmp_ln378_fu_1038_p2;
        icmp_ln378_reg_1332_pp4_iter1_reg <= icmp_ln378_reg_1332;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        icmp_ln419_reg_1193 <= icmp_ln419_fu_616_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln424_reg_1210 <= icmp_ln424_fu_639_p2;
        icmp_ln424_reg_1210_pp1_iter1_reg <= icmp_ln424_reg_1210;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln424_reg_1210_pp1_iter2_reg <= icmp_ln424_reg_1210_pp1_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln435_reg_1240 <= icmp_ln435_fu_722_p2;
        icmp_ln435_reg_1240_pp2_iter1_reg <= icmp_ln435_reg_1240;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln458_reg_1292 <= icmp_ln458_fu_928_p2;
        icmp_ln458_reg_1292_pp3_iter1_reg <= icmp_ln458_reg_1292;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln406_reg_1152 == 1'd1))) begin
        icmp_ln874_reg_1186 <= icmp_ln874_fu_591_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln378_fu_1038_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        select_ln378_1_reg_1341 <= select_ln378_1_fu_1064_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln378_fu_1038_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        select_ln378_reg_1336 <= select_ln378_fu_1056_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln424_fu_639_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        select_ln424_1_reg_1219 <= select_ln424_1_fu_665_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln424_fu_639_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        select_ln424_reg_1214 <= select_ln424_fu_657_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln435_fu_722_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        select_ln435_1_reg_1244 <= select_ln435_1_fu_742_p3;
        select_ln441_1_reg_1256 <= select_ln441_1_fu_820_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln458_fu_928_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        select_ln458_1_reg_1301 <= select_ln458_1_fu_954_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln458_fu_928_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        select_ln458_reg_1296 <= select_ln458_fu_946_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln406_fu_506_p2 == 1'd1))) begin
        tmp_s_reg_1161[6 : 4] <= tmp_s_fu_518_p3[6 : 4];
    end
end

always @ (*) begin
    if ((icmp_ln424_fu_639_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln435_fu_722_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state13 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state13 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln458_fu_928_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state18 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state18 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln378_fu_1038_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state25 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state25 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_state23_on_subcall_done) & (1'b1 == ap_CS_fsm_state23)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter3 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln424_reg_1210 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_a_5_phi_fu_323_p4 = select_ln424_1_reg_1219;
    end else begin
        ap_phi_mux_a_5_phi_fu_323_p4 = a_5_reg_319;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln435_reg_1240 == 1'd0))) begin
        ap_phi_mux_a_6_phi_fu_378_p4 = select_ln441_1_reg_1256;
    end else begin
        ap_phi_mux_a_6_phi_fu_378_p4 = a_6_reg_374;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln458_reg_1292 == 1'd0))) begin
        ap_phi_mux_a_7_phi_fu_411_p4 = select_ln458_1_reg_1301;
    end else begin
        ap_phi_mux_a_7_phi_fu_411_p4 = a_7_reg_407;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln378_reg_1332 == 1'd0))) begin
        ap_phi_mux_a_phi_fu_444_p4 = select_ln378_1_reg_1341;
    end else begin
        ap_phi_mux_a_phi_fu_444_p4 = a_reg_440;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln435_reg_1240 == 1'd0))) begin
        ap_phi_mux_i_12_phi_fu_356_p4 = select_ln435_1_reg_1244;
    end else begin
        ap_phi_mux_i_12_phi_fu_356_p4 = i_12_reg_352;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state23_on_subcall_done) & (1'b1 == ap_CS_fsm_state23))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((grp_add_patch_patches_parameters13_fu_462_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state30))) begin
        n_patches = 8'd1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        n_patches = zext_ln480_fu_1027_p1;
    end else begin
        n_patches = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((grp_add_patch_patches_parameters13_fu_462_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state30)))) begin
        n_patches_ap_vld = 1'b1;
    end else begin
        n_patches_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln424_reg_1210_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        output_patch_stream_V_blk_n = output_patch_stream_V_full_n;
    end else begin
        output_patch_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln424_reg_1210_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        output_patch_stream_V_write = 1'b1;
    end else begin
        output_patch_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | ((icmp_ln419_reg_1193 == 1'd1) & (1'b1 == ap_CS_fsm_state23) & (icmp_ln406_reg_1152 == 1'd1) & (icmp_ln374_reg_1148 == 1'd0)))) begin
        patches_parameters_ce0 = grp_add_patch_patches_parameters13_fu_462_patches_parameters_ce0;
    end else begin
        patches_parameters_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | ((icmp_ln419_reg_1193 == 1'd1) & (1'b1 == ap_CS_fsm_state23) & (icmp_ln406_reg_1152 == 1'd1) & (icmp_ln374_reg_1148 == 1'd0)))) begin
        patches_parameters_we0 = grp_add_patch_patches_parameters13_fu_462_patches_parameters_we0;
    end else begin
        patches_parameters_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        patches_superpoints_address0 = zext_ln452_6_fu_918_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        patches_superpoints_address0 = zext_ln429_2_fu_705_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        patches_superpoints_address0 = 64'd160;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        patches_superpoints_address0 = tmp_10_fu_559_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        patches_superpoints_address0 = zext_ln874_fu_526_p1;
    end else begin
        patches_superpoints_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter3 == 1'b1))) begin
        patches_superpoints_address1 = zext_ln389_1_fu_1128_p1;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        patches_superpoints_address1 = zext_ln469_1_fu_1018_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        patches_superpoints_address1 = zext_ln452_5_fu_907_p1;
    end else begin
        patches_superpoints_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        patches_superpoints_ce0 = 1'b1;
    end else begin
        patches_superpoints_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter3 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        patches_superpoints_ce1 = 1'b1;
    end else begin
        patches_superpoints_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln435_reg_1240_pp2_iter2_reg == 1'd0))) begin
        patches_superpoints_we0 = 1'b1;
    end else begin
        patches_superpoints_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (icmp_ln378_reg_1332_pp4_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1) & (icmp_ln458_reg_1292_pp3_iter2_reg == 1'd0)))) begin
        patches_superpoints_we1 = 1'b1;
    end else begin
        patches_superpoints_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | ((icmp_ln419_reg_1193 == 1'd1) & (1'b1 == ap_CS_fsm_state23) & (icmp_ln406_reg_1152 == 1'd1) & (icmp_ln374_reg_1148 == 1'd0)))) begin
        wp_parameters_ce0 = grp_add_patch_patches_parameters13_fu_462_wp_parameters_ce0;
    end else begin
        wp_parameters_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        wp_superpoints_address0 = zext_ln389_2_fu_1106_p1;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        wp_superpoints_address0 = zext_ln469_3_fu_1013_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        wp_superpoints_address0 = zext_ln874_1_fu_582_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        wp_superpoints_address0 = tmp_9_fu_545_p3;
    end else begin
        wp_superpoints_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        wp_superpoints_address1 = zext_ln389_3_fu_1123_p1;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        wp_superpoints_address1 = zext_ln469_2_fu_996_p1;
    end else begin
        wp_superpoints_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        wp_superpoints_ce0 = 1'b1;
    end else begin
        wp_superpoints_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        wp_superpoints_ce1 = 1'b1;
    end else begin
        wp_superpoints_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln374_fu_500_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln374_fu_500_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln874_4_fu_601_p2 == 1'd1) & (icmp_ln874_reg_1186 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln406_reg_1152 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln406_reg_1152 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln421_fu_622_p2 == 1'd0) & (icmp_ln419_fu_616_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else if (((icmp_ln421_fu_622_p2 == 1'd1) & (icmp_ln419_fu_616_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln874_5_fu_627_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln424_fu_639_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b1) & (ap_enable_reg_pp1_iter2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b1) & (ap_enable_reg_pp1_iter2 == 1'b0)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln424_fu_639_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln435_fu_722_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter3 == 1'b1) & (ap_enable_reg_pp2_iter2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter3 == 1'b1) & (ap_enable_reg_pp2_iter2 == 1'b0)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln435_fu_722_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0) & (icmp_ln458_fu_928_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter3 == 1'b1) & (ap_enable_reg_pp3_iter2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter3 == 1'b1) & (ap_enable_reg_pp3_iter2 == 1'b0)) | ((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0) & (icmp_ln458_fu_928_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((1'b0 == ap_block_state23_on_subcall_done) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter1 == 1'b0) & (icmp_ln378_fu_1038_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter3 == 1'b1) & (ap_enable_reg_pp4_iter2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if ((((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter3 == 1'b1) & (ap_enable_reg_pp4_iter2 == 1'b0)) | ((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter1 == 1'b0) & (icmp_ln378_fu_1038_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            if (((grp_add_patch_patches_parameters13_fu_462_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln378_1_fu_1032_p2 = (indvar_flatten_reg_429 + 7'd1);

assign add_ln378_fu_1044_p2 = (ap_phi_mux_a_phi_fu_444_p4 + 3'd1);

assign add_ln384_fu_1072_p2 = (select_ln378_fu_1056_p3 + 5'd1);

assign add_ln389_fu_1092_p2 = (tmp_cast_fu_1085_p1 + zext_ln389_fu_1089_p1);

assign add_ln406_fu_512_p2 = (i_reg_297 + 3'd1);

assign add_ln424_1_fu_633_p2 = (indvar_flatten7_reg_308 + 7'd1);

assign add_ln424_fu_645_p2 = (ap_phi_mux_a_5_phi_fu_323_p4 + 3'd1);

assign add_ln427_fu_673_p2 = (select_ln424_fu_657_p3 + 5'd1);

assign add_ln429_1_fu_699_p2 = (add_ln429_fu_690_p2 + zext_ln429_1_fu_696_p1);

assign add_ln429_fu_690_p2 = ($signed(zext_ln429_fu_686_p1) + $signed(8'd160));

assign add_ln435_1_fu_710_p2 = (indvar_flatten29_reg_341 + 8'd1);

assign add_ln435_fu_716_p2 = ($signed(ap_phi_mux_i_12_phi_fu_356_p4) + $signed(2'd3));

assign add_ln441_1_fu_844_p2 = (indvar_flatten15_reg_363 + 8'd1);

assign add_ln441_fu_800_p2 = (select_ln435_fu_734_p3 + 3'd1);

assign add_ln447_fu_838_p2 = (select_ln441_fu_812_p3 + 5'd1);

assign add_ln452_1_fu_776_p2 = (tmp_28_fu_768_p3 + zext_ln452_1_fu_764_p1);

assign add_ln452_2_fu_832_p2 = (add_ln452_1_fu_776_p2 + zext_ln452_2_fu_828_p1);

assign add_ln452_3_fu_884_p2 = (add_ln452_fu_868_p2 + zext_ln452_3_fu_881_p1);

assign add_ln452_4_fu_901_p2 = (tmp_79_cast_fu_874_p3 + zext_ln452_4_fu_898_p1);

assign add_ln452_5_fu_912_p2 = (tmp_81_cast_fu_890_p3 + zext_ln452_4_fu_898_p1);

assign add_ln452_fu_868_p2 = (tmp_27_fu_861_p3 + zext_ln452_fu_858_p1);

assign add_ln458_1_fu_922_p2 = (indvar_flatten37_reg_396 + 7'd1);

assign add_ln458_fu_934_p2 = (ap_phi_mux_a_7_phi_fu_411_p4 + 3'd1);

assign add_ln464_fu_962_p2 = (select_ln458_fu_946_p3 + 5'd1);

assign add_ln469_fu_982_p2 = (tmp_82_cast_fu_975_p1 + zext_ln469_fu_979_p1);

assign add_ln480_fu_1022_p2 = (empty_reg_1143 + 6'd1);

assign and_ln435_fu_794_p2 = (xor_ln435_1_fu_782_p2 & icmp_ln447_fu_788_p2);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = ((icmp_ln424_reg_1210_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (output_patch_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((icmp_ln424_reg_1210_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (output_patch_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((icmp_ln424_reg_1210_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (output_patch_stream_V_full_n == 1'b0));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp1_stage0_iter3 = ((icmp_ln424_reg_1210_pp1_iter2_reg == 1'd0) & (output_patch_stream_V_full_n == 1'b0));
end

assign ap_block_state13_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state23_on_subcall_done = ((grp_add_patch_patches_parameters13_fu_462_ap_done == 1'b0) & (ap_predicate_op209_call_state23 == 1'b1));
end

assign ap_block_state25_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp4_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

always @ (*) begin
    ap_predicate_op209_call_state23 = ((icmp_ln419_reg_1193 == 1'd1) & (icmp_ln406_reg_1152 == 1'd1) & (icmp_ln374_reg_1148 == 1'd0));
end

assign empty_fu_496_p1 = n_patches_read[5:0];

assign grp_add_patch_patches_parameters13_fu_462_ap_start = grp_add_patch_patches_parameters13_fu_462_ap_start_reg;

assign icmp_ln374_fu_500_p2 = ((n_patches_read == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln378_fu_1038_p2 = ((indvar_flatten_reg_429 == 7'd80) ? 1'b1 : 1'b0);

assign icmp_ln384_fu_1050_p2 = ((b_reg_451 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln406_fu_506_p2 = ((i_reg_297 < 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln419_fu_616_p2 = ((tmp_26_fu_607_p4 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln421_fu_622_p2 = ((n_patches_read > 8'd2) ? 1'b1 : 1'b0);

assign icmp_ln424_fu_639_p2 = ((indvar_flatten7_reg_308 == 7'd80) ? 1'b1 : 1'b0);

assign icmp_ln427_fu_651_p2 = ((b_7_reg_330 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln435_fu_722_p2 = ((indvar_flatten29_reg_341 == 8'd160) ? 1'b1 : 1'b0);

assign icmp_ln441_fu_728_p2 = ((indvar_flatten15_reg_363 == 8'd80) ? 1'b1 : 1'b0);

assign icmp_ln447_fu_788_p2 = ((b_8_reg_385 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln458_fu_928_p2 = ((indvar_flatten37_reg_396 == 7'd80) ? 1'b1 : 1'b0);

assign icmp_ln464_fu_940_p2 = ((b_9_reg_418 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln874_4_fu_601_p2 = ((trunc_ln69_2_fu_597_p1 == wp_superpoints_q0) ? 1'b1 : 1'b0);

assign icmp_ln874_5_fu_627_p2 = ((reg_477 == 64'd0) ? 1'b1 : 1'b0);

assign icmp_ln874_fu_591_p2 = ((trunc_ln69_fu_587_p1 == wp_superpoints_q0) ? 1'b1 : 1'b0);

assign or_ln389_fu_1117_p2 = (shl_ln389_fu_1111_p2 | 8'd1);

assign or_ln441_fu_806_p2 = (icmp_ln441_fu_728_p2 | and_ln435_fu_794_p2);

assign or_ln469_fu_1007_p2 = (shl_ln469_fu_1001_p2 | 8'd1);

assign or_ln874_1_fu_554_p2 = (tmp_s_reg_1161 | 7'd15);

assign or_ln874_2_fu_576_p2 = (tmp_74_cast_fu_568_p3 | 8'd1);

assign or_ln874_fu_539_p2 = (tmp_8_fu_531_p3 | 8'd1);

assign output_patch_stream_V_din = reg_477;

assign patches_parameters_address0 = grp_add_patch_patches_parameters13_fu_462_patches_parameters_address0;

assign patches_parameters_d0 = grp_add_patch_patches_parameters13_fu_462_patches_parameters_d0;

assign patches_superpoints_d0 = reg_477;

assign patches_superpoints_d1 = grp_encodeCoordinates_fu_470_ap_return;

assign select_ln378_1_fu_1064_p3 = ((icmp_ln384_fu_1050_p2[0:0] == 1'b1) ? add_ln378_fu_1044_p2 : ap_phi_mux_a_phi_fu_444_p4);

assign select_ln378_fu_1056_p3 = ((icmp_ln384_fu_1050_p2[0:0] == 1'b1) ? 5'd0 : b_reg_451);

assign select_ln424_1_fu_665_p3 = ((icmp_ln427_fu_651_p2[0:0] == 1'b1) ? add_ln424_fu_645_p2 : ap_phi_mux_a_5_phi_fu_323_p4);

assign select_ln424_fu_657_p3 = ((icmp_ln427_fu_651_p2[0:0] == 1'b1) ? 5'd0 : b_7_reg_330);

assign select_ln435_1_fu_742_p3 = ((icmp_ln441_fu_728_p2[0:0] == 1'b1) ? add_ln435_fu_716_p2 : ap_phi_mux_i_12_phi_fu_356_p4);

assign select_ln435_2_fu_756_p3 = ((icmp_ln441_fu_728_p2[0:0] == 1'b1) ? xor_ln435_fu_750_p2 : add_ln435_fu_716_p2);

assign select_ln435_fu_734_p3 = ((icmp_ln441_fu_728_p2[0:0] == 1'b1) ? 3'd0 : ap_phi_mux_a_6_phi_fu_378_p4);

assign select_ln441_1_fu_820_p3 = ((and_ln435_fu_794_p2[0:0] == 1'b1) ? add_ln441_fu_800_p2 : select_ln435_fu_734_p3);

assign select_ln441_2_fu_850_p3 = ((icmp_ln441_fu_728_p2[0:0] == 1'b1) ? 8'd1 : add_ln441_1_fu_844_p2);

assign select_ln441_fu_812_p3 = ((or_ln441_fu_806_p2[0:0] == 1'b1) ? 5'd0 : b_8_reg_385);

assign select_ln458_1_fu_954_p3 = ((icmp_ln464_fu_940_p2[0:0] == 1'b1) ? add_ln458_fu_934_p2 : ap_phi_mux_a_7_phi_fu_411_p4);

assign select_ln458_fu_946_p3 = ((icmp_ln464_fu_940_p2[0:0] == 1'b1) ? 5'd0 : b_9_reg_418);

assign shl_ln389_fu_1111_p2 = add_ln389_fu_1092_p2 << 8'd1;

assign shl_ln469_fu_1001_p2 = add_ln469_fu_982_p2 << 8'd1;

assign tmp_10_fu_559_p3 = {{57'd0}, {or_ln874_1_fu_554_p2}};

assign tmp_11_fu_679_p3 = {{select_ln424_1_reg_1219}, {4'd0}};

assign tmp_12_fu_968_p3 = {{select_ln458_1_reg_1301}, {4'd0}};

assign tmp_25_fu_1098_p3 = {{add_ln389_fu_1092_p2}, {1'd0}};

assign tmp_26_fu_607_p4 = {{n_patches_read[7:5]}};

assign tmp_27_fu_861_p3 = {{select_ln435_1_reg_1244}, {2'd0}};

assign tmp_28_fu_768_p3 = {{select_ln435_2_fu_756_p3}, {2'd0}};

assign tmp_29_fu_988_p3 = {{add_ln469_fu_982_p2}, {1'd0}};

assign tmp_74_cast_fu_568_p3 = {{or_ln874_1_fu_554_p2}, {1'd0}};

assign tmp_79_cast_fu_874_p3 = {{add_ln452_2_reg_1262}, {4'd0}};

assign tmp_81_cast_fu_890_p3 = {{add_ln452_3_fu_884_p2}, {4'd0}};

assign tmp_82_cast_fu_975_p1 = tmp_12_fu_968_p3;

assign tmp_8_fu_531_p3 = {{i_reg_297}, {5'd0}};

assign tmp_9_fu_545_p3 = {{56'd0}, {or_ln874_fu_539_p2}};

assign tmp_cast_fu_1085_p1 = tmp_fu_1078_p3;

assign tmp_fu_1078_p3 = {{select_ln378_1_reg_1341}, {4'd0}};

assign tmp_s_fu_518_p3 = {{i_reg_297}, {4'd0}};

assign trunc_ln69_2_fu_597_p1 = patches_superpoints_q0[31:0];

assign trunc_ln69_fu_587_p1 = patches_superpoints_q0[31:0];

assign wp_parameters_address0 = grp_add_patch_patches_parameters13_fu_462_wp_parameters_address0;

assign xor_ln435_1_fu_782_p2 = (icmp_ln441_fu_728_p2 ^ 1'd1);

assign xor_ln435_fu_750_p2 = (ap_phi_mux_i_12_phi_fu_356_p4 ^ 2'd2);

assign zext_ln389_1_fu_1128_p1 = add_ln389_reg_1352_pp4_iter2_reg;

assign zext_ln389_2_fu_1106_p1 = tmp_25_fu_1098_p3;

assign zext_ln389_3_fu_1123_p1 = or_ln389_fu_1117_p2;

assign zext_ln389_fu_1089_p1 = select_ln378_reg_1336;

assign zext_ln429_1_fu_696_p1 = select_ln424_reg_1214;

assign zext_ln429_2_fu_705_p1 = add_ln429_1_fu_699_p2;

assign zext_ln429_fu_686_p1 = tmp_11_fu_679_p3;

assign zext_ln452_1_fu_764_p1 = select_ln435_2_fu_756_p3;

assign zext_ln452_2_fu_828_p1 = select_ln441_1_fu_820_p3;

assign zext_ln452_3_fu_881_p1 = select_ln441_1_reg_1256;

assign zext_ln452_4_fu_898_p1 = select_ln441_reg_1251;

assign zext_ln452_5_fu_907_p1 = add_ln452_4_fu_901_p2;

assign zext_ln452_6_fu_918_p1 = add_ln452_5_reg_1282_pp2_iter2_reg;

assign zext_ln452_fu_858_p1 = select_ln435_1_reg_1244;

assign zext_ln469_1_fu_1018_p1 = add_ln469_reg_1312_pp3_iter2_reg;

assign zext_ln469_2_fu_996_p1 = tmp_29_fu_988_p3;

assign zext_ln469_3_fu_1013_p1 = or_ln469_fu_1007_p2;

assign zext_ln469_fu_979_p1 = select_ln458_reg_1296;

assign zext_ln480_fu_1027_p1 = add_ln480_fu_1022_p2;

assign zext_ln874_1_fu_582_p1 = or_ln874_2_fu_576_p2;

assign zext_ln874_fu_526_p1 = tmp_s_fu_518_p3;

always @ (posedge ap_clk) begin
    tmp_s_reg_1161[3:0] <= 4'b0000;
end

endmodule //MPSQ_add_patch9
