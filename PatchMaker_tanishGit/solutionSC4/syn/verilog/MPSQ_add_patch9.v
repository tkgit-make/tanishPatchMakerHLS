// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MPSQ_add_patch9 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        n_patches,
        n_patches_ap_vld,
        n_patches_read,
        wp_superpoints_address0,
        wp_superpoints_ce0,
        wp_superpoints_q0,
        wp_superpoints_address1,
        wp_superpoints_ce1,
        wp_superpoints_q1,
        wp_parameters_address0,
        wp_parameters_ce0,
        wp_parameters_q0,
        patches_superpoints_address0,
        patches_superpoints_ce0,
        patches_superpoints_we0,
        patches_superpoints_d0,
        patches_superpoints_q0,
        patches_parameters_address0,
        patches_parameters_ce0,
        patches_parameters_we0,
        patches_parameters_d0,
        patches_parameters_address1,
        patches_parameters_ce1,
        patches_parameters_q1
);

parameter    ap_ST_fsm_state1 = 15'd1;
parameter    ap_ST_fsm_state2 = 15'd2;
parameter    ap_ST_fsm_state3 = 15'd4;
parameter    ap_ST_fsm_state4 = 15'd8;
parameter    ap_ST_fsm_state5 = 15'd16;
parameter    ap_ST_fsm_state6 = 15'd32;
parameter    ap_ST_fsm_state7 = 15'd64;
parameter    ap_ST_fsm_state8 = 15'd128;
parameter    ap_ST_fsm_pp1_stage0 = 15'd256;
parameter    ap_ST_fsm_state13 = 15'd512;
parameter    ap_ST_fsm_state14 = 15'd1024;
parameter    ap_ST_fsm_state15 = 15'd2048;
parameter    ap_ST_fsm_pp2_stage0 = 15'd4096;
parameter    ap_ST_fsm_state20 = 15'd8192;
parameter    ap_ST_fsm_state21 = 15'd16384;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] n_patches;
output   n_patches_ap_vld;
input  [7:0] n_patches_read;
output  [7:0] wp_superpoints_address0;
output   wp_superpoints_ce0;
input  [31:0] wp_superpoints_q0;
output  [7:0] wp_superpoints_address1;
output   wp_superpoints_ce1;
input  [31:0] wp_superpoints_q1;
output  [6:0] wp_parameters_address0;
output   wp_parameters_ce0;
input  [31:0] wp_parameters_q0;
output  [11:0] patches_superpoints_address0;
output   patches_superpoints_ce0;
output   patches_superpoints_we0;
output  [63:0] patches_superpoints_d0;
input  [63:0] patches_superpoints_q0;
output  [8:0] patches_parameters_address0;
output   patches_parameters_ce0;
output   patches_parameters_we0;
output  [31:0] patches_parameters_d0;
output  [8:0] patches_parameters_address1;
output   patches_parameters_ce1;
input  [31:0] patches_parameters_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] n_patches;
reg n_patches_ap_vld;
reg[7:0] wp_superpoints_address0;
reg wp_superpoints_ce0;
reg[7:0] wp_superpoints_address1;
reg wp_superpoints_ce1;
reg wp_parameters_ce0;
reg[11:0] patches_superpoints_address0;
reg patches_superpoints_ce0;
reg patches_superpoints_we0;
reg patches_parameters_ce0;
reg patches_parameters_we0;
reg patches_parameters_ce1;

(* fsm_encoding = "none" *) reg   [14:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [6:0] indvar_flatten7_reg_231;
reg   [2:0] a_5_reg_242;
reg   [4:0] b_7_reg_253;
reg   [6:0] indvar_flatten_reg_264;
reg   [2:0] a_reg_275;
reg   [4:0] b_reg_286;
reg   [31:0] reg_315;
wire    ap_CS_fsm_state3;
reg   [0:0] icmp_ln408_reg_745;
wire    ap_CS_fsm_state6;
reg   [0:0] icmp_ln874_reg_794;
wire   [63:0] grp_encodeCoordinates_fu_305_ap_return;
reg   [63:0] reg_319;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_state9_pp1_stage0_iter0;
wire    ap_block_state10_pp1_stage0_iter1;
wire    ap_block_state11_pp1_stage0_iter2;
wire    ap_block_state12_pp1_stage0_iter3;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln424_reg_820;
reg   [0:0] icmp_ln424_reg_820_pp1_iter1_reg;
reg    ap_enable_reg_pp2_iter2;
wire    ap_block_state16_pp2_stage0_iter0;
wire    ap_block_state17_pp2_stage0_iter1;
wire    ap_block_state18_pp2_stage0_iter2;
wire    ap_block_state19_pp2_stage0_iter3;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln380_reg_862;
reg   [0:0] icmp_ln380_reg_862_pp2_iter1_reg;
wire   [5:0] trunc_ln373_fu_324_p1;
reg   [5:0] trunc_ln373_reg_731;
wire   [0:0] icmp_ln376_fu_332_p2;
reg   [0:0] icmp_ln376_reg_736;
wire   [7:0] add_ln410_fu_360_p2;
reg   [7:0] add_ln410_reg_740;
wire   [0:0] icmp_ln408_fu_366_p2;
wire    ap_CS_fsm_state2;
wire   [2:0] add_ln408_fu_372_p2;
reg   [2:0] add_ln408_reg_749;
wire   [7:0] tmp_8_fu_382_p3;
reg   [7:0] tmp_8_reg_754;
wire   [7:0] add_ln410_1_fu_405_p2;
reg   [7:0] add_ln410_1_reg_764;
wire   [11:0] tmp_44_fu_410_p3;
reg   [11:0] tmp_44_reg_769;
wire   [31:0] trunc_ln69_fu_422_p1;
reg   [31:0] trunc_ln69_reg_779;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln874_fu_450_p2;
wire   [31:0] trunc_ln69_2_fu_455_p1;
reg   [31:0] trunc_ln69_2_reg_798;
wire   [0:0] icmp_ln421_fu_473_p2;
reg   [0:0] icmp_ln421_reg_806;
wire    ap_CS_fsm_state8;
wire   [7:0] add_ln435_fu_484_p2;
reg   [7:0] add_ln435_reg_810;
wire   [6:0] add_ln424_1_fu_489_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln424_fu_495_p2;
reg   [0:0] icmp_ln424_reg_820_pp1_iter2_reg;
wire   [4:0] select_ln424_fu_513_p3;
reg   [4:0] select_ln424_reg_824;
reg   [4:0] select_ln424_reg_824_pp1_iter1_reg;
wire   [2:0] select_ln424_1_fu_521_p3;
reg   [2:0] select_ln424_1_reg_830;
reg   [2:0] select_ln424_1_reg_830_pp1_iter1_reg;
wire   [4:0] add_ln430_fu_529_p2;
wire   [11:0] add_ln435_3_fu_604_p2;
reg   [11:0] add_ln435_3_reg_852;
wire   [6:0] add_ln380_1_fu_624_p2;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire   [0:0] icmp_ln380_fu_630_p2;
reg   [0:0] icmp_ln380_reg_862_pp2_iter2_reg;
wire   [4:0] select_ln380_fu_648_p3;
reg   [4:0] select_ln380_reg_866;
wire   [2:0] select_ln380_1_fu_656_p3;
reg   [2:0] select_ln380_1_reg_871;
wire   [4:0] add_ln386_fu_664_p2;
wire   [7:0] add_ln391_fu_684_p2;
reg   [7:0] add_ln391_reg_882;
reg   [7:0] add_ln391_reg_882_pp2_iter2_reg;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state9;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter3;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state16;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter3;
wire    grp_add_patch_patches_parameters14_fu_297_ap_start;
wire    grp_add_patch_patches_parameters14_fu_297_ap_done;
wire    grp_add_patch_patches_parameters14_fu_297_ap_idle;
wire    grp_add_patch_patches_parameters14_fu_297_ap_ready;
wire   [6:0] grp_add_patch_patches_parameters14_fu_297_wp_parameters_address0;
wire    grp_add_patch_patches_parameters14_fu_297_wp_parameters_ce0;
wire   [8:0] grp_add_patch_patches_parameters14_fu_297_patches_parameters_address0;
wire    grp_add_patch_patches_parameters14_fu_297_patches_parameters_ce0;
wire    grp_add_patch_patches_parameters14_fu_297_patches_parameters_we0;
wire   [31:0] grp_add_patch_patches_parameters14_fu_297_patches_parameters_d0;
wire   [8:0] grp_add_patch_patches_parameters14_fu_297_patches_parameters_address1;
wire    grp_add_patch_patches_parameters14_fu_297_patches_parameters_ce1;
wire    grp_encodeCoordinates_fu_305_ap_ready;
reg   [31:0] grp_encodeCoordinates_fu_305_phi;
reg   [31:0] grp_encodeCoordinates_fu_305_z;
reg   [2:0] i_reg_220;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln874_4_fu_459_p2;
reg   [2:0] ap_phi_mux_a_5_phi_fu_246_p4;
wire    ap_block_pp1_stage0;
reg   [2:0] ap_phi_mux_a_phi_fu_279_p4;
wire    ap_block_pp2_stage0;
reg    grp_add_patch_patches_parameters14_fu_297_ap_start_reg;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state21;
wire   [63:0] tmp_9_fu_396_p3;
wire   [63:0] zext_ln410_2_fu_417_p1;
wire   [63:0] tmp_10_fu_431_p3;
wire   [63:0] zext_ln411_fu_445_p1;
wire   [63:0] zext_ln435_4_fu_563_p1;
wire   [63:0] zext_ln435_5_fu_580_p1;
wire   [63:0] zext_ln435_6_fu_610_p1;
wire   [63:0] zext_ln391_2_fu_698_p1;
wire   [63:0] zext_ln391_3_fu_715_p1;
wire   [63:0] zext_ln391_1_fu_720_p1;
wire   [7:0] zext_ln444_fu_619_p1;
wire   [4:0] trunc_ln376_fu_328_p1;
wire   [4:0] sub_fu_338_p2;
wire   [6:0] tmp_fu_348_p3;
wire   [7:0] zext_ln410_1_fu_356_p1;
wire   [7:0] zext_ln410_fu_344_p1;
wire   [7:0] or_ln874_fu_390_p2;
wire   [7:0] zext_ln874_fu_378_p1;
wire   [7:0] or_ln874_1_fu_426_p2;
wire   [11:0] or_ln411_fu_440_p2;
wire   [2:0] tmp_45_fu_464_p4;
wire   [7:0] shl_ln435_fu_479_p2;
wire   [0:0] icmp_ln430_fu_507_p2;
wire   [2:0] add_ln424_fu_501_p2;
wire   [6:0] tmp_11_fu_535_p3;
wire   [7:0] zext_ln435_1_fu_542_p1;
wire   [7:0] zext_ln435_3_fu_546_p1;
wire   [7:0] add_ln435_2_fu_549_p2;
wire   [8:0] tmp_46_fu_555_p3;
wire   [7:0] shl_ln435_1_fu_568_p2;
wire   [7:0] or_ln435_fu_574_p2;
wire   [7:0] zext_ln435_fu_585_p1;
wire   [7:0] add_ln435_1_fu_588_p2;
wire   [11:0] tmp_103_cast_fu_593_p3;
wire   [11:0] zext_ln435_2_fu_601_p1;
wire   [5:0] add_ln444_fu_614_p2;
wire   [0:0] icmp_ln386_fu_642_p2;
wire   [2:0] add_ln380_fu_636_p2;
wire   [6:0] tmp_s_fu_670_p3;
wire   [7:0] tmp_92_cast_fu_677_p1;
wire   [7:0] zext_ln391_fu_681_p1;
wire   [8:0] tmp_43_fu_690_p3;
wire   [7:0] shl_ln391_fu_703_p2;
wire   [7:0] or_ln391_fu_709_p2;
reg    ap_predicate_op122_call_state14;
reg    ap_block_state14_on_subcall_done;
reg   [14:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 15'd1;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 grp_add_patch_patches_parameters14_fu_297_ap_start_reg = 1'b0;
end

MPSQ_add_patch_patches_parameters14 grp_add_patch_patches_parameters14_fu_297(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_add_patch_patches_parameters14_fu_297_ap_start),
    .ap_done(grp_add_patch_patches_parameters14_fu_297_ap_done),
    .ap_idle(grp_add_patch_patches_parameters14_fu_297_ap_idle),
    .ap_ready(grp_add_patch_patches_parameters14_fu_297_ap_ready),
    .wp_parameters_address0(grp_add_patch_patches_parameters14_fu_297_wp_parameters_address0),
    .wp_parameters_ce0(grp_add_patch_patches_parameters14_fu_297_wp_parameters_ce0),
    .wp_parameters_q0(wp_parameters_q0),
    .patches_parameters_address0(grp_add_patch_patches_parameters14_fu_297_patches_parameters_address0),
    .patches_parameters_ce0(grp_add_patch_patches_parameters14_fu_297_patches_parameters_ce0),
    .patches_parameters_we0(grp_add_patch_patches_parameters14_fu_297_patches_parameters_we0),
    .patches_parameters_d0(grp_add_patch_patches_parameters14_fu_297_patches_parameters_d0),
    .patches_parameters_address1(grp_add_patch_patches_parameters14_fu_297_patches_parameters_address1),
    .patches_parameters_ce1(grp_add_patch_patches_parameters14_fu_297_patches_parameters_ce1),
    .patches_parameters_q1(patches_parameters_q1)
);

MPSQ_encodeCoordinates grp_encodeCoordinates_fu_305(
    .ap_ready(grp_encodeCoordinates_fu_305_ap_ready),
    .phi(grp_encodeCoordinates_fu_305_phi),
    .z(grp_encodeCoordinates_fu_305_z),
    .ap_return(grp_encodeCoordinates_fu_305_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln421_fu_473_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state9)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state9);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln421_fu_473_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state16) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln376_fu_332_p2 == 1'd1))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state16)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state16);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln376_fu_332_p2 == 1'd1))) begin
            ap_enable_reg_pp2_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_add_patch_patches_parameters14_fu_297_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state13))) begin
            grp_add_patch_patches_parameters14_fu_297_ap_start_reg <= 1'b1;
        end else if ((grp_add_patch_patches_parameters14_fu_297_ap_ready == 1'b1)) begin
            grp_add_patch_patches_parameters14_fu_297_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln424_reg_820 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        a_5_reg_242 <= select_ln424_1_reg_830;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln421_fu_473_p2 == 1'd1))) begin
        a_5_reg_242 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln376_fu_332_p2 == 1'd1))) begin
        a_reg_275 <= 3'd0;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln380_reg_862 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        a_reg_275 <= select_ln380_1_reg_871;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln424_fu_495_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        b_7_reg_253 <= add_ln430_fu_529_p2;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln421_fu_473_p2 == 1'd1))) begin
        b_7_reg_253 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln376_fu_332_p2 == 1'd1))) begin
        b_reg_286 <= 5'd0;
    end else if (((icmp_ln380_fu_630_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        b_reg_286 <= add_ln386_fu_664_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln874_reg_794 == 1'd1) & (icmp_ln408_reg_745 == 1'd1) & (icmp_ln874_4_fu_459_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        i_reg_220 <= add_ln408_reg_749;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln376_fu_332_p2 == 1'd0))) begin
        i_reg_220 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln424_fu_495_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar_flatten7_reg_231 <= add_ln424_1_fu_489_p2;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln421_fu_473_p2 == 1'd1))) begin
        indvar_flatten7_reg_231 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln376_fu_332_p2 == 1'd1))) begin
        indvar_flatten_reg_264 <= 7'd0;
    end else if (((icmp_ln380_fu_630_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        indvar_flatten_reg_264 <= add_ln380_1_fu_624_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln380_reg_862 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        add_ln391_reg_882 <= add_ln391_fu_684_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        add_ln391_reg_882_pp2_iter2_reg <= add_ln391_reg_882;
        icmp_ln380_reg_862_pp2_iter2_reg <= icmp_ln380_reg_862_pp2_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln408_reg_749 <= add_ln408_fu_372_p2;
        icmp_ln408_reg_745 <= icmp_ln408_fu_366_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln408_fu_366_p2 == 1'd1))) begin
        add_ln410_1_reg_764 <= add_ln410_1_fu_405_p2;
        tmp_8_reg_754[7 : 5] <= tmp_8_fu_382_p3[7 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (icmp_ln376_fu_332_p2 == 1'd0))) begin
        add_ln410_reg_740 <= add_ln410_fu_360_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln424_reg_820_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        add_ln435_3_reg_852 <= add_ln435_3_fu_604_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln421_fu_473_p2 == 1'd1))) begin
        add_ln435_reg_810 <= add_ln435_fu_484_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        icmp_ln376_reg_736 <= icmp_ln376_fu_332_p2;
        trunc_ln373_reg_731 <= trunc_ln373_fu_324_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln380_reg_862 <= icmp_ln380_fu_630_p2;
        icmp_ln380_reg_862_pp2_iter1_reg <= icmp_ln380_reg_862;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        icmp_ln421_reg_806 <= icmp_ln421_fu_473_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln424_reg_820 <= icmp_ln424_fu_495_p2;
        icmp_ln424_reg_820_pp1_iter1_reg <= icmp_ln424_reg_820;
        select_ln424_1_reg_830_pp1_iter1_reg <= select_ln424_1_reg_830;
        select_ln424_reg_824_pp1_iter1_reg <= select_ln424_reg_824;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln424_reg_820_pp1_iter2_reg <= icmp_ln424_reg_820_pp1_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln408_reg_745 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        icmp_ln874_reg_794 <= icmp_ln874_fu_450_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln874_reg_794 == 1'd1) & (icmp_ln408_reg_745 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((icmp_ln408_reg_745 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        reg_315 <= wp_superpoints_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln380_reg_862_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)) | ((icmp_ln424_reg_820_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        reg_319 <= grp_encodeCoordinates_fu_305_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln380_fu_630_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        select_ln380_1_reg_871 <= select_ln380_1_fu_656_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln380_fu_630_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        select_ln380_reg_866 <= select_ln380_fu_648_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln424_fu_495_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        select_ln424_1_reg_830 <= select_ln424_1_fu_521_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln424_fu_495_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        select_ln424_reg_824 <= select_ln424_fu_513_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln408_reg_745 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_44_reg_769[11 : 4] <= tmp_44_fu_410_p3[11 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln874_reg_794 == 1'd1) & (icmp_ln408_reg_745 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        trunc_ln69_2_reg_798 <= trunc_ln69_2_fu_455_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln408_reg_745 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        trunc_ln69_reg_779 <= trunc_ln69_fu_422_p1;
    end
end

always @ (*) begin
    if ((icmp_ln424_fu_495_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln380_fu_630_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state16 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state16 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state14) & (1'b0 == ap_block_state14_on_subcall_done)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln424_reg_820 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_a_5_phi_fu_246_p4 = select_ln424_1_reg_830;
    end else begin
        ap_phi_mux_a_5_phi_fu_246_p4 = a_5_reg_242;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln380_reg_862 == 1'd0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_a_phi_fu_279_p4 = select_ln380_1_reg_871;
    end else begin
        ap_phi_mux_a_phi_fu_279_p4 = a_reg_275;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (1'b0 == ap_block_state14_on_subcall_done))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln380_reg_862_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_encodeCoordinates_fu_305_phi = wp_superpoints_q0;
    end else if (((icmp_ln424_reg_820_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        grp_encodeCoordinates_fu_305_phi = wp_superpoints_q1;
    end else begin
        grp_encodeCoordinates_fu_305_phi = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln380_reg_862_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_encodeCoordinates_fu_305_z = wp_superpoints_q1;
    end else if (((icmp_ln424_reg_820_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        grp_encodeCoordinates_fu_305_z = wp_superpoints_q0;
    end else begin
        grp_encodeCoordinates_fu_305_z = 'bx;
    end
end

always @ (*) begin
    if (((grp_add_patch_patches_parameters14_fu_297_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
        n_patches = 8'd1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        n_patches = zext_ln444_fu_619_p1;
    end else begin
        n_patches = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((grp_add_patch_patches_parameters14_fu_297_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21)))) begin
        n_patches_ap_vld = 1'b1;
    end else begin
        n_patches_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((icmp_ln408_reg_745 == 1'd1) & (1'b1 == ap_CS_fsm_state14) & (icmp_ln421_reg_806 == 1'd1) & (icmp_ln376_reg_736 == 1'd0)))) begin
        patches_parameters_ce0 = grp_add_patch_patches_parameters14_fu_297_patches_parameters_ce0;
    end else begin
        patches_parameters_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((icmp_ln408_reg_745 == 1'd1) & (1'b1 == ap_CS_fsm_state14) & (icmp_ln421_reg_806 == 1'd1) & (icmp_ln376_reg_736 == 1'd0)))) begin
        patches_parameters_ce1 = grp_add_patch_patches_parameters14_fu_297_patches_parameters_ce1;
    end else begin
        patches_parameters_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((icmp_ln408_reg_745 == 1'd1) & (1'b1 == ap_CS_fsm_state14) & (icmp_ln421_reg_806 == 1'd1) & (icmp_ln376_reg_736 == 1'd0)))) begin
        patches_parameters_we0 = grp_add_patch_patches_parameters14_fu_297_patches_parameters_we0;
    end else begin
        patches_parameters_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        patches_superpoints_address0 = zext_ln391_1_fu_720_p1;
    end else if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        patches_superpoints_address0 = zext_ln435_6_fu_610_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        patches_superpoints_address0 = zext_ln411_fu_445_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        patches_superpoints_address0 = zext_ln410_2_fu_417_p1;
    end else begin
        patches_superpoints_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp2_iter3 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        patches_superpoints_ce0 = 1'b1;
    end else begin
        patches_superpoints_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln380_reg_862_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln424_reg_820_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        patches_superpoints_we0 = 1'b1;
    end else begin
        patches_superpoints_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((icmp_ln408_reg_745 == 1'd1) & (1'b1 == ap_CS_fsm_state14) & (icmp_ln421_reg_806 == 1'd1) & (icmp_ln376_reg_736 == 1'd0)))) begin
        wp_parameters_ce0 = grp_add_patch_patches_parameters14_fu_297_wp_parameters_ce0;
    end else begin
        wp_parameters_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        wp_superpoints_address0 = zext_ln391_2_fu_698_p1;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        wp_superpoints_address0 = zext_ln435_5_fu_580_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        wp_superpoints_address0 = tmp_10_fu_431_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        wp_superpoints_address0 = tmp_9_fu_396_p3;
    end else begin
        wp_superpoints_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        wp_superpoints_address1 = zext_ln391_3_fu_715_p1;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        wp_superpoints_address1 = zext_ln435_4_fu_563_p1;
    end else begin
        wp_superpoints_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        wp_superpoints_ce0 = 1'b1;
    end else begin
        wp_superpoints_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        wp_superpoints_ce1 = 1'b1;
    end else begin
        wp_superpoints_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln376_fu_332_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln376_fu_332_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln874_reg_794 == 1'd1) & (icmp_ln408_reg_745 == 1'd1) & (icmp_ln874_4_fu_459_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((icmp_ln408_reg_745 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln421_fu_473_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln424_fu_495_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln424_fu_495_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (1'b0 == ap_block_state14_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln380_fu_630_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) & ~((ap_enable_reg_pp2_iter3 == 1'b1) & (ap_enable_reg_pp2_iter2 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter3 == 1'b1) & (ap_enable_reg_pp2_iter2 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)) | ((ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln380_fu_630_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((grp_add_patch_patches_parameters14_fu_297_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln380_1_fu_624_p2 = (indvar_flatten_reg_264 + 7'd1);

assign add_ln380_fu_636_p2 = (ap_phi_mux_a_phi_fu_279_p4 + 3'd1);

assign add_ln386_fu_664_p2 = (select_ln380_fu_648_p3 + 5'd1);

assign add_ln391_fu_684_p2 = (tmp_92_cast_fu_677_p1 + zext_ln391_fu_681_p1);

assign add_ln408_fu_372_p2 = (i_reg_220 + 3'd1);

assign add_ln410_1_fu_405_p2 = (add_ln410_reg_740 + zext_ln874_fu_378_p1);

assign add_ln410_fu_360_p2 = (zext_ln410_1_fu_356_p1 + zext_ln410_fu_344_p1);

assign add_ln424_1_fu_489_p2 = (indvar_flatten7_reg_231 + 7'd1);

assign add_ln424_fu_501_p2 = (ap_phi_mux_a_5_phi_fu_246_p4 + 3'd1);

assign add_ln430_fu_529_p2 = (select_ln424_fu_513_p3 + 5'd1);

assign add_ln435_1_fu_588_p2 = (add_ln435_reg_810 + zext_ln435_fu_585_p1);

assign add_ln435_2_fu_549_p2 = (zext_ln435_1_fu_542_p1 + zext_ln435_3_fu_546_p1);

assign add_ln435_3_fu_604_p2 = (tmp_103_cast_fu_593_p3 + zext_ln435_2_fu_601_p1);

assign add_ln435_fu_484_p2 = (shl_ln435_fu_479_p2 + n_patches_read);

assign add_ln444_fu_614_p2 = (trunc_ln373_reg_731 + 6'd1);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_on_subcall_done = ((ap_predicate_op122_call_state14 == 1'b1) & (grp_add_patch_patches_parameters14_fu_297_ap_done == 1'b0));
end

assign ap_block_state16_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

always @ (*) begin
    ap_predicate_op122_call_state14 = ((icmp_ln408_reg_745 == 1'd1) & (icmp_ln421_reg_806 == 1'd1) & (icmp_ln376_reg_736 == 1'd0));
end

assign grp_add_patch_patches_parameters14_fu_297_ap_start = grp_add_patch_patches_parameters14_fu_297_ap_start_reg;

assign icmp_ln376_fu_332_p2 = ((n_patches_read == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln380_fu_630_p2 = ((indvar_flatten_reg_264 == 7'd80) ? 1'b1 : 1'b0);

assign icmp_ln386_fu_642_p2 = ((b_reg_286 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln408_fu_366_p2 = ((i_reg_220 < 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln421_fu_473_p2 = ((tmp_45_fu_464_p4 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln424_fu_495_p2 = ((indvar_flatten7_reg_231 == 7'd80) ? 1'b1 : 1'b0);

assign icmp_ln430_fu_507_p2 = ((b_7_reg_253 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln874_4_fu_459_p2 = ((trunc_ln69_2_reg_798 == reg_315) ? 1'b1 : 1'b0);

assign icmp_ln874_fu_450_p2 = ((trunc_ln69_reg_779 == reg_315) ? 1'b1 : 1'b0);

assign or_ln391_fu_709_p2 = (shl_ln391_fu_703_p2 | 8'd1);

assign or_ln411_fu_440_p2 = (tmp_44_reg_769 | 12'd15);

assign or_ln435_fu_574_p2 = (shl_ln435_1_fu_568_p2 | 8'd1);

assign or_ln874_1_fu_426_p2 = (tmp_8_reg_754 | 8'd31);

assign or_ln874_fu_390_p2 = (tmp_8_fu_382_p3 | 8'd1);

assign patches_parameters_address0 = grp_add_patch_patches_parameters14_fu_297_patches_parameters_address0;

assign patches_parameters_address1 = grp_add_patch_patches_parameters14_fu_297_patches_parameters_address1;

assign patches_parameters_d0 = grp_add_patch_patches_parameters14_fu_297_patches_parameters_d0;

assign patches_superpoints_d0 = reg_319;

assign select_ln380_1_fu_656_p3 = ((icmp_ln386_fu_642_p2[0:0] == 1'b1) ? add_ln380_fu_636_p2 : ap_phi_mux_a_phi_fu_279_p4);

assign select_ln380_fu_648_p3 = ((icmp_ln386_fu_642_p2[0:0] == 1'b1) ? 5'd0 : b_reg_286);

assign select_ln424_1_fu_521_p3 = ((icmp_ln430_fu_507_p2[0:0] == 1'b1) ? add_ln424_fu_501_p2 : ap_phi_mux_a_5_phi_fu_246_p4);

assign select_ln424_fu_513_p3 = ((icmp_ln430_fu_507_p2[0:0] == 1'b1) ? 5'd0 : b_7_reg_253);

assign shl_ln391_fu_703_p2 = add_ln391_fu_684_p2 << 8'd1;

assign shl_ln435_1_fu_568_p2 = add_ln435_2_fu_549_p2 << 8'd1;

assign shl_ln435_fu_479_p2 = n_patches_read << 8'd2;

assign sub_fu_338_p2 = ($signed(trunc_ln376_fu_328_p1) + $signed(5'd31));

assign tmp_103_cast_fu_593_p3 = {{add_ln435_1_fu_588_p2}, {4'd0}};

assign tmp_10_fu_431_p3 = {{56'd0}, {or_ln874_1_fu_426_p2}};

assign tmp_11_fu_535_p3 = {{select_ln424_1_reg_830}, {4'd0}};

assign tmp_43_fu_690_p3 = {{add_ln391_fu_684_p2}, {1'd0}};

assign tmp_44_fu_410_p3 = {{add_ln410_1_reg_764}, {4'd0}};

assign tmp_45_fu_464_p4 = {{n_patches_read[7:5]}};

assign tmp_46_fu_555_p3 = {{add_ln435_2_fu_549_p2}, {1'd0}};

assign tmp_8_fu_382_p3 = {{i_reg_220}, {5'd0}};

assign tmp_92_cast_fu_677_p1 = tmp_s_fu_670_p3;

assign tmp_9_fu_396_p3 = {{56'd0}, {or_ln874_fu_390_p2}};

assign tmp_fu_348_p3 = {{sub_fu_338_p2}, {2'd0}};

assign tmp_s_fu_670_p3 = {{select_ln380_1_reg_871}, {4'd0}};

assign trunc_ln373_fu_324_p1 = n_patches_read[5:0];

assign trunc_ln376_fu_328_p1 = n_patches_read[4:0];

assign trunc_ln69_2_fu_455_p1 = patches_superpoints_q0[31:0];

assign trunc_ln69_fu_422_p1 = patches_superpoints_q0[31:0];

assign wp_parameters_address0 = grp_add_patch_patches_parameters14_fu_297_wp_parameters_address0;

assign zext_ln391_1_fu_720_p1 = add_ln391_reg_882_pp2_iter2_reg;

assign zext_ln391_2_fu_698_p1 = tmp_43_fu_690_p3;

assign zext_ln391_3_fu_715_p1 = or_ln391_fu_709_p2;

assign zext_ln391_fu_681_p1 = select_ln380_reg_866;

assign zext_ln410_1_fu_356_p1 = tmp_fu_348_p3;

assign zext_ln410_2_fu_417_p1 = tmp_44_fu_410_p3;

assign zext_ln410_fu_344_p1 = sub_fu_338_p2;

assign zext_ln411_fu_445_p1 = or_ln411_fu_440_p2;

assign zext_ln435_1_fu_542_p1 = tmp_11_fu_535_p3;

assign zext_ln435_2_fu_601_p1 = select_ln424_reg_824_pp1_iter1_reg;

assign zext_ln435_3_fu_546_p1 = select_ln424_reg_824;

assign zext_ln435_4_fu_563_p1 = tmp_46_fu_555_p3;

assign zext_ln435_5_fu_580_p1 = or_ln435_fu_574_p2;

assign zext_ln435_6_fu_610_p1 = add_ln435_3_reg_852;

assign zext_ln435_fu_585_p1 = select_ln424_1_reg_830_pp1_iter1_reg;

assign zext_ln444_fu_619_p1 = add_ln444_fu_614_p2;

assign zext_ln874_fu_378_p1 = i_reg_220;

always @ (posedge ap_clk) begin
    tmp_8_reg_754[4:0] <= 5'b00000;
    tmp_44_reg_769[3:0] <= 4'b0000;
end

endmodule //MPSQ_add_patch9
