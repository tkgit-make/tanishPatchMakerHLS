// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MPSQ_makeSuperPoint_alignedToLine7 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        GDn_points_address0,
        GDn_points_ce0,
        GDn_points_q0,
        i,
        z_top,
        original_ppl,
        init_patch_address0,
        init_patch_ce0,
        init_patch_we0,
        init_patch_d0,
        GDarrayDecoded_address0,
        GDarrayDecoded_ce0,
        GDarrayDecoded_q0
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_pp0_stage0 = 10'd4;
parameter    ap_ST_fsm_state5 = 10'd8;
parameter    ap_ST_fsm_state6 = 10'd16;
parameter    ap_ST_fsm_state7 = 10'd32;
parameter    ap_ST_fsm_state8 = 10'd64;
parameter    ap_ST_fsm_state9 = 10'd128;
parameter    ap_ST_fsm_pp1_stage0 = 10'd256;
parameter    ap_ST_fsm_state12 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] GDn_points_address0;
output   GDn_points_ce0;
input  [31:0] GDn_points_q0;
input  [2:0] i;
input  [31:0] z_top;
input  [31:0] original_ppl;
output  [7:0] init_patch_address0;
output   init_patch_ce0;
output   init_patch_we0;
output  [31:0] init_patch_d0;
output  [11:0] GDarrayDecoded_address0;
output   GDarrayDecoded_ce0;
input  [31:0] GDarrayDecoded_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg GDn_points_ce0;
reg init_patch_ce0;
reg init_patch_we0;
reg[11:0] GDarrayDecoded_address0;
reg GDarrayDecoded_ce0;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    radiiDivisionList_ce0;
wire   [34:0] radiiDivisionList_q0;
reg   [30:0] row_list_size_reg_211;
reg   [5:0] indvar_flatten_reg_235;
reg   [4:0] j_1_reg_246;
reg   [1:0] z_reg_257;
wire    ap_CS_fsm_state2;
reg   [5:0] radiiDivisionList_addr_reg_660;
wire   [7:0] zext_ln1528_fu_333_p1;
reg   [7:0] zext_ln1528_reg_665;
wire   [10:0] tmp_7_fu_337_p3;
reg   [10:0] tmp_7_reg_670;
reg   [31:0] GDn_points_load_reg_676;
wire   [0:0] icmp_ln1526_fu_344_p2;
reg   [0:0] icmp_ln1526_reg_681;
wire   [30:0] trunc_ln1526_fu_350_p1;
reg   [30:0] trunc_ln1526_reg_685;
wire   [30:0] add_ln1528_fu_354_p2;
reg   [30:0] add_ln1528_reg_690;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln1526_1_fu_360_p2;
reg   [0:0] icmp_ln1526_1_reg_695;
wire   [32:0] projectionToRow_fu_435_p2;
reg   [32:0] projectionToRow_reg_704;
wire    ap_CS_fsm_state6;
wire   [31:0] sub_ln1625_fu_488_p2;
reg   [31:0] sub_ln1625_reg_709;
wire    ap_CS_fsm_state7;
wire   [10:0] trunc_ln1625_fu_493_p1;
reg   [10:0] trunc_ln1625_reg_714;
wire   [10:0] temp_start_fu_517_p3;
reg   [10:0] temp_start_reg_719;
wire    ap_CS_fsm_state9;
wire   [5:0] add_ln1671_2_fu_525_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state10_pp1_stage0_iter0;
wire    ap_block_state11_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln1671_fu_531_p2;
reg   [0:0] icmp_ln1671_reg_729;
wire   [1:0] select_ln1671_fu_549_p3;
reg   [1:0] select_ln1671_reg_733;
wire   [4:0] select_ln1671_1_fu_557_p3;
reg   [4:0] select_ln1671_1_reg_738;
wire   [1:0] add_ln1677_fu_602_p2;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter1;
wire    grp_mSP_findLRBounds_fu_276_ap_ready;
wire    grp_mSP_findLRBounds_fu_276_ap_done;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state10;
reg    ap_enable_reg_pp1_iter1;
reg   [7:0] row_list_V_address0;
reg    row_list_V_ce0;
reg    row_list_V_we0;
wire   [31:0] row_list_V_q0;
wire    grp_mSP_findStartIndex_fu_268_ap_start;
wire    grp_mSP_findStartIndex_fu_268_ap_done;
wire    grp_mSP_findStartIndex_fu_268_ap_idle;
wire    grp_mSP_findStartIndex_fu_268_ap_ready;
wire   [7:0] grp_mSP_findStartIndex_fu_268_row_list_address0;
wire    grp_mSP_findStartIndex_fu_268_row_list_ce0;
wire   [31:0] grp_mSP_findStartIndex_fu_268_ap_return_0;
wire   [63:0] grp_mSP_findStartIndex_fu_268_ap_return_1;
wire    grp_mSP_findLRBounds_fu_276_ap_start;
wire    grp_mSP_findLRBounds_fu_276_ap_idle;
wire   [7:0] grp_mSP_findLRBounds_fu_276_row_list_address0;
wire    grp_mSP_findLRBounds_fu_276_row_list_ce0;
wire   [31:0] grp_mSP_findLRBounds_fu_276_ap_return;
reg   [30:0] ap_phi_mux_row_list_size_phi_fu_215_p4;
wire    ap_block_pp0_stage0;
reg   [31:0] row_list_size_0_lcssa_reg_223;
wire    ap_CS_fsm_state5;
reg   [4:0] ap_phi_mux_j_1_phi_fu_250_p4;
wire    ap_block_pp1_stage0;
reg    grp_mSP_findStartIndex_fu_268_ap_start_reg;
reg    grp_mSP_findLRBounds_fu_276_ap_start_reg;
wire    ap_CS_fsm_state8;
wire   [63:0] idxprom_fu_286_p1;
wire   [63:0] zext_ln1531_2_fu_321_p1;
wire   [63:0] zext_ln1528_1_fu_388_p1;
wire   [63:0] row_list_size_cast_fu_393_p1;
wire   [63:0] zext_ln1682_4_fu_597_p1;
wire   [63:0] zext_ln1682_3_fu_631_p1;
wire   [3:0] tmp_5_fu_298_p3;
wire   [5:0] tmp_fu_291_p3;
wire   [5:0] zext_ln1531_1_fu_305_p1;
wire   [5:0] sub_ln1531_fu_309_p2;
wire   [5:0] add_ln1531_fu_315_p2;
wire   [6:0] tmp_6_fu_326_p3;
wire   [10:0] trunc_ln1528_fu_365_p1;
wire   [10:0] add_ln1528_1_fu_369_p2;
wire   [11:0] tmp_9_cast_fu_374_p3;
wire   [11:0] or_ln1528_fu_382_p2;
wire  signed [32:0] sext_ln215_fu_398_p1;
wire  signed [32:0] ret_fu_401_p2;
wire   [34:0] mul_ln1531_fu_415_p0;
wire   [63:0] mul_ln1531_fu_415_p2;
wire   [31:0] i_op_assign_fu_421_p4;
wire  signed [32:0] sext_ln1465_fu_431_p1;
wire   [31:0] add_ln1610_fu_450_p2;
wire   [0:0] icmp_ln1610_fu_456_p2;
wire   [0:0] icmp_ln1615_fu_462_p2;
wire   [0:0] and_ln1610_fu_468_p2;
wire   [31:0] start_index_1_fu_474_p2;
wire   [31:0] start_index_2_fu_480_p3;
wire   [31:0] add_ln1625_fu_497_p2;
wire   [0:0] icmp_ln1625_fu_502_p2;
wire   [10:0] trunc_ln1646_fu_508_p1;
wire   [10:0] add_ln1646_fu_512_p2;
wire   [0:0] icmp_ln1677_fu_543_p2;
wire   [4:0] add_ln1671_fu_537_p2;
wire   [10:0] zext_ln1671_fu_565_p1;
wire   [10:0] add_ln1671_1_fu_569_p2;
wire   [10:0] add_ln1682_1_fu_574_p2;
wire   [11:0] tmp_13_cast_fu_579_p3;
wire   [11:0] zext_ln1682_1_fu_587_p1;
wire   [11:0] add_ln1682_3_fu_591_p2;
wire   [7:0] zext_ln1682_fu_608_p1;
wire   [7:0] add_ln1682_fu_611_p2;
wire   [7:0] shl_ln1671_fu_616_p2;
wire   [7:0] zext_ln1682_2_fu_622_p1;
wire   [7:0] add_ln1682_2_fu_625_p2;
wire    ap_CS_fsm_state12;
reg   [9:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire   [63:0] mul_ln1531_fu_415_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 grp_mSP_findStartIndex_fu_268_ap_start_reg = 1'b0;
#0 grp_mSP_findLRBounds_fu_276_ap_start_reg = 1'b0;
end

MPSQ_straightLineProjectorFromLayerIJtoK_radiiDivisionList #(
    .DataWidth( 35 ),
    .AddressRange( 36 ),
    .AddressWidth( 6 ))
radiiDivisionList_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(radiiDivisionList_addr_reg_660),
    .ce0(radiiDivisionList_ce0),
    .q0(radiiDivisionList_q0)
);

MPSQ_makeSuperPoint_alignedToLine7_row_list_V #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
row_list_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(row_list_V_address0),
    .ce0(row_list_V_ce0),
    .we0(row_list_V_we0),
    .d0(GDarrayDecoded_q0),
    .q0(row_list_V_q0)
);

MPSQ_mSP_findStartIndex grp_mSP_findStartIndex_fu_268(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mSP_findStartIndex_fu_268_ap_start),
    .ap_done(grp_mSP_findStartIndex_fu_268_ap_done),
    .ap_idle(grp_mSP_findStartIndex_fu_268_ap_idle),
    .ap_ready(grp_mSP_findStartIndex_fu_268_ap_ready),
    .row_list_address0(grp_mSP_findStartIndex_fu_268_row_list_address0),
    .row_list_ce0(grp_mSP_findStartIndex_fu_268_row_list_ce0),
    .row_list_q0(row_list_V_q0),
    .row_list_size(row_list_size_0_lcssa_reg_223),
    .projectionToRow(projectionToRow_reg_704),
    .ap_return_0(grp_mSP_findStartIndex_fu_268_ap_return_0),
    .ap_return_1(grp_mSP_findStartIndex_fu_268_ap_return_1)
);

MPSQ_mSP_findLRBounds grp_mSP_findLRBounds_fu_276(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mSP_findLRBounds_fu_276_ap_start),
    .ap_done(grp_mSP_findLRBounds_fu_276_ap_done),
    .ap_idle(grp_mSP_findLRBounds_fu_276_ap_idle),
    .ap_ready(grp_mSP_findLRBounds_fu_276_ap_ready),
    .i(i),
    .row_list_address0(grp_mSP_findLRBounds_fu_276_row_list_address0),
    .row_list_ce0(grp_mSP_findLRBounds_fu_276_row_list_ce0),
    .row_list_q0(row_list_V_q0),
    .row_list_size(row_list_size_0_lcssa_reg_223),
    .ap_return(grp_mSP_findLRBounds_fu_276_ap_return)
);

MPSQ_mul_35ns_33s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 35 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 64 ))
mul_35ns_33s_64_1_1_U20(
    .din0(mul_ln1531_fu_415_p0),
    .din1(ret_fu_401_p2),
    .dout(mul_ln1531_fu_415_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln1526_fu_344_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((icmp_ln1526_fu_344_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state10) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state9) & (grp_mSP_findLRBounds_fu_276_ap_done == 1'b1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state10) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state10);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((1'b1 == ap_CS_fsm_state9) & (grp_mSP_findLRBounds_fu_276_ap_done == 1'b1))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mSP_findLRBounds_fu_276_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_mSP_findLRBounds_fu_276_ap_start_reg <= 1'b1;
        end else if ((grp_mSP_findLRBounds_fu_276_ap_ready == 1'b1)) begin
            grp_mSP_findLRBounds_fu_276_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mSP_findStartIndex_fu_268_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_mSP_findStartIndex_fu_268_ap_start_reg <= 1'b1;
        end else if ((grp_mSP_findStartIndex_fu_268_ap_ready == 1'b1)) begin
            grp_mSP_findStartIndex_fu_268_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln1671_fu_531_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar_flatten_reg_235 <= add_ln1671_2_fu_525_p2;
    end else if (((1'b1 == ap_CS_fsm_state9) & (grp_mSP_findLRBounds_fu_276_ap_done == 1'b1))) begin
        indvar_flatten_reg_235 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1671_reg_729 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        j_1_reg_246 <= select_ln1671_1_reg_738;
    end else if (((1'b1 == ap_CS_fsm_state9) & (grp_mSP_findLRBounds_fu_276_ap_done == 1'b1))) begin
        j_1_reg_246 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1526_reg_681 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        row_list_size_0_lcssa_reg_223 <= GDn_points_load_reg_676;
    end else if (((icmp_ln1526_fu_344_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        row_list_size_0_lcssa_reg_223 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1526_fu_344_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        row_list_size_reg_211 <= 31'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1526_1_reg_695 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        row_list_size_reg_211 <= add_ln1528_reg_690;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln1671_fu_531_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        z_reg_257 <= add_ln1677_fu_602_p2;
    end else if (((1'b1 == ap_CS_fsm_state9) & (grp_mSP_findLRBounds_fu_276_ap_done == 1'b1))) begin
        z_reg_257 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        GDn_points_load_reg_676 <= GDn_points_q0;
        icmp_ln1526_reg_681 <= icmp_ln1526_fu_344_p2;
        radiiDivisionList_addr_reg_660[5 : 1] <= zext_ln1531_2_fu_321_p1[5 : 1];
        tmp_7_reg_670[10 : 8] <= tmp_7_fu_337_p3[10 : 8];
        zext_ln1528_reg_665[6 : 4] <= zext_ln1528_fu_333_p1[6 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln1528_reg_690 <= add_ln1528_fu_354_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln1526_1_reg_695 <= icmp_ln1526_1_fu_360_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln1671_reg_729 <= icmp_ln1671_fu_531_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        projectionToRow_reg_704 <= projectionToRow_fu_435_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln1671_fu_531_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        select_ln1671_1_reg_738 <= select_ln1671_1_fu_557_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln1671_fu_531_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        select_ln1671_reg_733 <= select_ln1671_fu_549_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        sub_ln1625_reg_709 <= sub_ln1625_fu_488_p2;
        trunc_ln1625_reg_714 <= trunc_ln1625_fu_493_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        temp_start_reg_719 <= temp_start_fu_517_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1526_fu_344_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        trunc_ln1526_reg_685 <= trunc_ln1526_fu_350_p1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        GDarrayDecoded_address0 = zext_ln1682_4_fu_597_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        GDarrayDecoded_address0 = zext_ln1528_1_fu_388_p1;
    end else begin
        GDarrayDecoded_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        GDarrayDecoded_ce0 = 1'b1;
    end else begin
        GDarrayDecoded_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        GDn_points_ce0 = 1'b1;
    end else begin
        GDn_points_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1526_1_fu_360_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1671_fu_531_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1671_reg_729 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_j_1_phi_fu_250_p4 = select_ln1671_1_reg_738;
    end else begin
        ap_phi_mux_j_1_phi_fu_250_p4 = j_1_reg_246;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1526_1_reg_695 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_row_list_size_phi_fu_215_p4 = add_ln1528_reg_690;
    end else begin
        ap_phi_mux_row_list_size_phi_fu_215_p4 = row_list_size_reg_211;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        init_patch_ce0 = 1'b1;
    end else begin
        init_patch_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1671_reg_729 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        init_patch_we0 = 1'b1;
    end else begin
        init_patch_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        radiiDivisionList_ce0 = 1'b1;
    end else begin
        radiiDivisionList_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        row_list_V_address0 = row_list_size_cast_fu_393_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        row_list_V_address0 = grp_mSP_findLRBounds_fu_276_row_list_address0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        row_list_V_address0 = grp_mSP_findStartIndex_fu_268_row_list_address0;
    end else begin
        row_list_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        row_list_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        row_list_V_ce0 = grp_mSP_findLRBounds_fu_276_row_list_ce0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        row_list_V_ce0 = grp_mSP_findStartIndex_fu_268_row_list_ce0;
    end else begin
        row_list_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1526_1_reg_695 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        row_list_V_we0 = 1'b1;
    end else begin
        row_list_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln1526_fu_344_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln1526_1_fu_360_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln1526_1_fu_360_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((grp_mSP_findStartIndex_fu_268_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (grp_mSP_findLRBounds_fu_276_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((icmp_ln1671_fu_531_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((icmp_ln1671_fu_531_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign GDn_points_address0 = idxprom_fu_286_p1;

assign add_ln1528_1_fu_369_p2 = (tmp_7_reg_670 + trunc_ln1528_fu_365_p1);

assign add_ln1528_fu_354_p2 = (ap_phi_mux_row_list_size_phi_fu_215_p4 + 31'd1);

assign add_ln1531_fu_315_p2 = (sub_ln1531_fu_309_p2 + 6'd4);

assign add_ln1610_fu_450_p2 = ($signed(row_list_size_0_lcssa_reg_223) + $signed(32'd4294967295));

assign add_ln1625_fu_497_p2 = (sub_ln1625_reg_709 + 32'd1);

assign add_ln1646_fu_512_p2 = (trunc_ln1625_reg_714 + 11'd1);

assign add_ln1671_1_fu_569_p2 = (zext_ln1671_fu_565_p1 + temp_start_reg_719);

assign add_ln1671_2_fu_525_p2 = (indvar_flatten_reg_235 + 6'd1);

assign add_ln1671_fu_537_p2 = (ap_phi_mux_j_1_phi_fu_250_p4 + 5'd1);

assign add_ln1677_fu_602_p2 = (select_ln1671_fu_549_p3 + 2'd1);

assign add_ln1682_1_fu_574_p2 = (tmp_7_reg_670 + add_ln1671_1_fu_569_p2);

assign add_ln1682_2_fu_625_p2 = (shl_ln1671_fu_616_p2 + zext_ln1682_2_fu_622_p1);

assign add_ln1682_3_fu_591_p2 = (tmp_13_cast_fu_579_p3 + zext_ln1682_1_fu_587_p1);

assign add_ln1682_fu_611_p2 = (zext_ln1528_reg_665 + zext_ln1682_fu_608_p1);

assign and_ln1610_fu_468_p2 = (icmp_ln1615_fu_462_p2 & icmp_ln1610_fu_456_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign grp_mSP_findLRBounds_fu_276_ap_start = grp_mSP_findLRBounds_fu_276_ap_start_reg;

assign grp_mSP_findStartIndex_fu_268_ap_start = grp_mSP_findStartIndex_fu_268_ap_start_reg;

assign i_op_assign_fu_421_p4 = {{mul_ln1531_fu_415_p2[63:32]}};

assign icmp_ln1526_1_fu_360_p2 = ((ap_phi_mux_row_list_size_phi_fu_215_p4 == trunc_ln1526_reg_685) ? 1'b1 : 1'b0);

assign icmp_ln1526_fu_344_p2 = (($signed(GDn_points_q0) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1610_fu_456_p2 = ((grp_mSP_findStartIndex_fu_268_ap_return_0 != add_ln1610_fu_450_p2) ? 1'b1 : 1'b0);

assign icmp_ln1615_fu_462_p2 = (($signed(grp_mSP_findStartIndex_fu_268_ap_return_1) < $signed(64'd18446744073709551606)) ? 1'b1 : 1'b0);

assign icmp_ln1625_fu_502_p2 = (($signed(add_ln1625_fu_497_p2) < $signed(grp_mSP_findLRBounds_fu_276_ap_return)) ? 1'b1 : 1'b0);

assign icmp_ln1671_fu_531_p2 = ((indvar_flatten_reg_235 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln1677_fu_543_p2 = ((z_reg_257 == 2'd2) ? 1'b1 : 1'b0);

assign idxprom_fu_286_p1 = i;

assign init_patch_address0 = zext_ln1682_3_fu_631_p1;

assign init_patch_d0 = GDarrayDecoded_q0;

assign mul_ln1531_fu_415_p0 = mul_ln1531_fu_415_p00;

assign mul_ln1531_fu_415_p00 = radiiDivisionList_q0;

assign or_ln1528_fu_382_p2 = (tmp_9_cast_fu_374_p3 | 12'd1);

assign projectionToRow_fu_435_p2 = ($signed(sext_ln1465_fu_431_p1) + $signed(33'd22000100));

assign ret_fu_401_p2 = ($signed(sext_ln215_fu_398_p1) + $signed(33'd8567934492));

assign row_list_size_cast_fu_393_p1 = row_list_size_reg_211;

assign select_ln1671_1_fu_557_p3 = ((icmp_ln1677_fu_543_p2[0:0] == 1'b1) ? add_ln1671_fu_537_p2 : ap_phi_mux_j_1_phi_fu_250_p4);

assign select_ln1671_fu_549_p3 = ((icmp_ln1677_fu_543_p2[0:0] == 1'b1) ? 2'd0 : z_reg_257);

assign sext_ln1465_fu_431_p1 = $signed(i_op_assign_fu_421_p4);

assign sext_ln215_fu_398_p1 = $signed(z_top);

assign shl_ln1671_fu_616_p2 = add_ln1682_fu_611_p2 << 8'd1;

assign start_index_1_fu_474_p2 = (grp_mSP_findStartIndex_fu_268_ap_return_0 + 32'd1);

assign start_index_2_fu_480_p3 = ((and_ln1610_fu_468_p2[0:0] == 1'b1) ? start_index_1_fu_474_p2 : grp_mSP_findStartIndex_fu_268_ap_return_0);

assign sub_ln1531_fu_309_p2 = (tmp_fu_291_p3 - zext_ln1531_1_fu_305_p1);

assign sub_ln1625_fu_488_p2 = (start_index_2_fu_480_p3 - original_ppl);

assign temp_start_fu_517_p3 = ((icmp_ln1625_fu_502_p2[0:0] == 1'b1) ? trunc_ln1646_fu_508_p1 : add_ln1646_fu_512_p2);

assign tmp_13_cast_fu_579_p3 = {{add_ln1682_1_fu_574_p2}, {1'd0}};

assign tmp_5_fu_298_p3 = {{i}, {1'd0}};

assign tmp_6_fu_326_p3 = {{i}, {4'd0}};

assign tmp_7_fu_337_p3 = {{i}, {8'd0}};

assign tmp_9_cast_fu_374_p3 = {{add_ln1528_1_fu_369_p2}, {1'd0}};

assign tmp_fu_291_p3 = {{i}, {3'd0}};

assign trunc_ln1526_fu_350_p1 = GDn_points_q0[30:0];

assign trunc_ln1528_fu_365_p1 = ap_phi_mux_row_list_size_phi_fu_215_p4[10:0];

assign trunc_ln1625_fu_493_p1 = sub_ln1625_fu_488_p2[10:0];

assign trunc_ln1646_fu_508_p1 = grp_mSP_findLRBounds_fu_276_ap_return[10:0];

assign zext_ln1528_1_fu_388_p1 = or_ln1528_fu_382_p2;

assign zext_ln1528_fu_333_p1 = tmp_6_fu_326_p3;

assign zext_ln1531_1_fu_305_p1 = tmp_5_fu_298_p3;

assign zext_ln1531_2_fu_321_p1 = add_ln1531_fu_315_p2;

assign zext_ln1671_fu_565_p1 = select_ln1671_1_fu_557_p3;

assign zext_ln1682_1_fu_587_p1 = select_ln1671_fu_549_p3;

assign zext_ln1682_2_fu_622_p1 = select_ln1671_reg_733;

assign zext_ln1682_3_fu_631_p1 = add_ln1682_2_fu_625_p2;

assign zext_ln1682_4_fu_597_p1 = add_ln1682_3_fu_591_p2;

assign zext_ln1682_fu_608_p1 = select_ln1671_1_reg_738;

always @ (posedge ap_clk) begin
    radiiDivisionList_addr_reg_660[0] <= 1'b0;
    zext_ln1528_reg_665[3:0] <= 4'b0000;
    zext_ln1528_reg_665[7] <= 1'b0;
    tmp_7_reg_670[7:0] <= 8'b00000000;
end

endmodule //MPSQ_makeSuperPoint_alignedToLine7
