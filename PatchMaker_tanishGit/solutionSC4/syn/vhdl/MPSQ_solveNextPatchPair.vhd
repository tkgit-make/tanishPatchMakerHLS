-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity MPSQ_solveNextPatchPair is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    n_patches_i : IN STD_LOGIC_VECTOR (7 downto 0);
    n_patches_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    n_patches_o_ap_vld : OUT STD_LOGIC;
    GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    GDn_points_ce0 : OUT STD_LOGIC;
    GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
    ppl : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (31 downto 0);
    z_top_max_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read7 : IN STD_LOGIC_VECTOR (31 downto 0);
    GDarrayDecoded_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    GDarrayDecoded_ce0 : OUT STD_LOGIC;
    GDarrayDecoded_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    patches_superpoints_ce0 : OUT STD_LOGIC;
    patches_superpoints_we0 : OUT STD_LOGIC;
    patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    patches_superpoints_ce1 : OUT STD_LOGIC;
    patches_superpoints_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_parameters_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    patches_parameters_ce0 : OUT STD_LOGIC;
    patches_parameters_we0 : OUT STD_LOGIC;
    patches_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    patches_parameters_ce1 : OUT STD_LOGIC;
    patches_parameters_we1 : OUT STD_LOGIC;
    patches_parameters_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of MPSQ_solveNextPatchPair is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state87 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state89 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state90 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state91 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state92 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state93 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state94 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state95 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state96 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state97 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state98 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state99 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state100 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state101 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state102 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state103 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state104 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state105 : STD_LOGIC_VECTOR (116 downto 0) := "000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state106 : STD_LOGIC_VECTOR (116 downto 0) := "000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state107 : STD_LOGIC_VECTOR (116 downto 0) := "000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state108 : STD_LOGIC_VECTOR (116 downto 0) := "000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state109 : STD_LOGIC_VECTOR (116 downto 0) := "000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state110 : STD_LOGIC_VECTOR (116 downto 0) := "000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state111 : STD_LOGIC_VECTOR (116 downto 0) := "000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state112 : STD_LOGIC_VECTOR (116 downto 0) := "000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state113 : STD_LOGIC_VECTOR (116 downto 0) := "000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state114 : STD_LOGIC_VECTOR (116 downto 0) := "000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state115 : STD_LOGIC_VECTOR (116 downto 0) := "001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state116 : STD_LOGIC_VECTOR (116 downto 0) := "010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state117 : STD_LOGIC_VECTOR (116 downto 0) := "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_73 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_72 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_74 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv64_FFFFFFFFFFF0BDC0 : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111100001011110111000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_C4747840 : STD_LOGIC_VECTOR (31 downto 0) := "11000100011101000111100001000000";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv64_14 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010100";
    constant ap_const_lv64_10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv64_16 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010110";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv32_FD050F1C : STD_LOGIC_VECTOR (31 downto 0) := "11111101000001010000111100011100";
    constant ap_const_lv32_E4E1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000111001001110000111000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv12_40 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_const_lv32_FD050F80 : STD_LOGIC_VECTOR (31 downto 0) := "11111101000001010000111110000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (116 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal reg_573 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal reg_580 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_531_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_587 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal ap_CS_fsm_state116 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state116 : signal is "none";
    signal grp_makePatch_alignedToLine_fu_504_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ppl_assign4_reg_911 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln794_fu_591_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln794_reg_968 : STD_LOGIC_VECTOR (31 downto 0);
    signal nPatchesAtOriginal_reg_973 : STD_LOGIC_VECTOR (7 downto 0);
    signal lastPatchIndex_fu_601_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal lastPatchIndex_reg_978 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln860_fu_607_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln860_reg_985 : STD_LOGIC_VECTOR (0 downto 0);
    signal thirdLastPatchIndex_fu_613_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal thirdLastPatchIndex_reg_989 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln865_fu_619_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln865_reg_994 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal add_ln865_fu_625_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln865_reg_998 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal icmp_ln886_fu_631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_reg_1011 : STD_LOGIC_VECTOR (0 downto 0);
    signal squarePatch_alternate2_fu_636_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal squarePatch_alternate2_reg_1016 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal icmp_ln880_fu_642_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln880_reg_1021 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln889_1_fu_681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln889_1_reg_1026 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal add_ln891_fu_709_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln891_reg_1030 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln901_fu_715_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln901_reg_1035 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal icmp_ln892_fu_729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln892_reg_1050 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln69_fu_735_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln69_reg_1055 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal trunc_ln69_1_fu_739_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln69_1_reg_1062 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln892_fu_760_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln892_reg_1068 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal ppl_assign_s_reg_1074 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal ret_fu_777_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_reg_1080 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal ret_1_fu_791_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_1_reg_1086 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln534_fu_807_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal grp_getSolveNextPatchPairWhileCondition_fu_545_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1097 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal lastPatchIndex_1_fu_846_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal lastPatchIndex_1_reg_1139 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state115 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state115 : signal is "none";
    signal grp_makeThirdPatch_fu_444_ap_start : STD_LOGIC;
    signal grp_makeThirdPatch_fu_444_ap_done : STD_LOGIC;
    signal grp_makeThirdPatch_fu_444_ap_idle : STD_LOGIC;
    signal grp_makeThirdPatch_fu_444_ap_ready : STD_LOGIC;
    signal grp_makeThirdPatch_fu_444_n_patches_o : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_makeThirdPatch_fu_444_n_patches_o_ap_vld : STD_LOGIC;
    signal grp_makeThirdPatch_fu_444_GDn_points_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_makeThirdPatch_fu_444_GDn_points_ce0 : STD_LOGIC;
    signal grp_makeThirdPatch_fu_444_GDarrayDecoded_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_makeThirdPatch_fu_444_GDarrayDecoded_ce0 : STD_LOGIC;
    signal grp_makeThirdPatch_fu_444_patches_superpoints_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_makeThirdPatch_fu_444_patches_superpoints_ce0 : STD_LOGIC;
    signal grp_makeThirdPatch_fu_444_patches_superpoints_we0 : STD_LOGIC;
    signal grp_makeThirdPatch_fu_444_patches_superpoints_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_makeThirdPatch_fu_444_patches_superpoints_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_makeThirdPatch_fu_444_patches_superpoints_ce1 : STD_LOGIC;
    signal grp_makeThirdPatch_fu_444_patches_parameters_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_makeThirdPatch_fu_444_patches_parameters_ce0 : STD_LOGIC;
    signal grp_makeThirdPatch_fu_444_patches_parameters_we0 : STD_LOGIC;
    signal grp_makeThirdPatch_fu_444_patches_parameters_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeThirdPatch_fu_444_patches_parameters_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_makeThirdPatch_fu_444_patches_parameters_ce1 : STD_LOGIC;
    signal grp_makeThirdPatch_fu_444_patches_parameters_we1 : STD_LOGIC;
    signal grp_makeThirdPatch_fu_444_patches_parameters_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din3 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din4 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din5 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_dout0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_ce : STD_LOGIC;
    signal grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din3 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din4 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din5 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_dout0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_ce : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_471_ap_start : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_471_ap_done : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_471_ap_idle : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_471_ap_ready : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_471_n_patches_o : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_solveComplmentaryPatch_fu_471_n_patches_o_ap_vld : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_471_GDn_points_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_solveComplmentaryPatch_fu_471_GDn_points_ce0 : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_471_GDarrayDecoded_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_solveComplmentaryPatch_fu_471_GDarrayDecoded_ce0 : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_471_patches_superpoints_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_solveComplmentaryPatch_fu_471_patches_superpoints_ce0 : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_471_patches_superpoints_we0 : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_471_patches_superpoints_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_solveComplmentaryPatch_fu_471_patches_superpoints_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_solveComplmentaryPatch_fu_471_patches_superpoints_ce1 : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_471_patches_parameters_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_solveComplmentaryPatch_fu_471_patches_parameters_ce0 : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_471_patches_parameters_we0 : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_471_patches_parameters_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solveComplmentaryPatch_fu_471_patches_parameters_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_solveComplmentaryPatch_fu_471_patches_parameters_ce1 : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_471_ap_return_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_solveComplmentaryPatch_fu_471_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solveComplmentaryPatch_fu_471_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solveComplmentaryPatch_fu_471_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solveComplmentaryPatch_fu_471_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solveComplmentaryPatch_fu_471_ap_return_5 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_solveComplmentaryPatch_fu_471_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solveComplmentaryPatch_fu_471_grp_straightLineProjectorFromLayerIJtoK_fu_531_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solveComplmentaryPatch_fu_471_grp_straightLineProjectorFromLayerIJtoK_fu_531_p_din2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solveComplmentaryPatch_fu_471_grp_straightLineProjectorFromLayerIJtoK_fu_531_p_din3 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_solveComplmentaryPatch_fu_471_grp_straightLineProjectorFromLayerIJtoK_fu_531_p_din4 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_solveComplmentaryPatch_fu_471_grp_straightLineProjectorFromLayerIJtoK_fu_531_p_din5 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_solveComplmentaryPatch_fu_471_grp_straightLineProjectorFromLayerIJtoK_fu_531_p_dout0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solveComplmentaryPatch_fu_471_grp_straightLineProjectorFromLayerIJtoK_fu_531_p_ce : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_471_grp_fu_1144_p_din0 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_solveComplmentaryPatch_fu_471_grp_fu_1144_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_solveComplmentaryPatch_fu_471_grp_fu_1144_p_dout0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_solveComplmentaryPatch_fu_471_grp_fu_1144_p_ce : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_504_ap_start : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_504_ap_done : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_504_ap_idle : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_504_ap_ready : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_504_n_patches_o : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_makePatch_alignedToLine_fu_504_n_patches_o_ap_vld : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_504_GDn_points_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_makePatch_alignedToLine_fu_504_GDn_points_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_504_apexZ0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makePatch_alignedToLine_fu_504_z_top : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makePatch_alignedToLine_fu_504_p_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makePatch_alignedToLine_fu_504_leftRight : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_makePatch_alignedToLine_fu_504_GDarrayDecoded_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_makePatch_alignedToLine_fu_504_GDarrayDecoded_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_504_patches_superpoints_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_makePatch_alignedToLine_fu_504_patches_superpoints_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_504_patches_superpoints_we0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_504_patches_superpoints_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_makePatch_alignedToLine_fu_504_patches_parameters_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_makePatch_alignedToLine_fu_504_patches_parameters_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_504_patches_parameters_we0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_504_patches_parameters_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_531_z_i : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_531_z_j : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_531_i : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_531_j : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_531_k : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_531_ap_ce : STD_LOGIC;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal ap_CS_fsm_state117 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state117 : signal is "none";
    signal grp_getSolveNextPatchPairWhileCondition_fu_545_ap_start : STD_LOGIC;
    signal grp_getSolveNextPatchPairWhileCondition_fu_545_ap_done : STD_LOGIC;
    signal grp_getSolveNextPatchPairWhileCondition_fu_545_ap_idle : STD_LOGIC;
    signal grp_getSolveNextPatchPairWhileCondition_fu_545_ap_ready : STD_LOGIC;
    signal grp_getSolveNextPatchPairWhileCondition_fu_545_GDn_points_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_getSolveNextPatchPairWhileCondition_fu_545_GDn_points_ce0 : STD_LOGIC;
    signal grp_getSolveNextPatchPairWhileCondition_fu_545_patches_parameters_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_getSolveNextPatchPairWhileCondition_fu_545_patches_parameters_ce0 : STD_LOGIC;
    signal grp_areWedgeSuperPointsEqual_fu_561_ap_start : STD_LOGIC;
    signal grp_areWedgeSuperPointsEqual_fu_561_ap_done : STD_LOGIC;
    signal grp_areWedgeSuperPointsEqual_fu_561_ap_idle : STD_LOGIC;
    signal grp_areWedgeSuperPointsEqual_fu_561_ap_ready : STD_LOGIC;
    signal grp_areWedgeSuperPointsEqual_fu_561_wsp2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_areWedgeSuperPointsEqual_fu_561_wsp2_ce0 : STD_LOGIC;
    signal grp_areWedgeSuperPointsEqual_fu_561_wsp2_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_areWedgeSuperPointsEqual_fu_561_wsp2_ce1 : STD_LOGIC;
    signal grp_areWedgeSuperPointsEqual_fu_561_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1148_z_i : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1148_z_j : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1148_i : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1148_j : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1148_k : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1148_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1148_ap_ce : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1156_z_i : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1156_z_j : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1156_i : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1156_j : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1156_k : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1156_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1156_ap_ce : STD_LOGIC;
    signal i_reg_270 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_repeat_original_ph_phi_fu_286_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal repeat_original_ph_reg_282 : STD_LOGIC_VECTOR (0 downto 0);
    signal repeat_original_reg_295 : STD_LOGIC_VECTOR (0 downto 0);
    signal white_space_height_0_reg_308 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_predicate_op279_call_state69 : BOOLEAN;
    signal ap_block_state69_on_subcall_done : BOOLEAN;
    signal icmp_ln934_fu_840_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal previous_white_space_height_0_reg_318 : STD_LOGIC_VECTOR (63 downto 0);
    signal current_z_top_index_0_reg_330 : STD_LOGIC_VECTOR (31 downto 0);
    signal counter_0_reg_342 : STD_LOGIC_VECTOR (31 downto 0);
    signal counterUpshift_0_reg_354 : STD_LOGIC_VECTOR (31 downto 0);
    signal previous_z_top_min_V_0_reg_366 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_top_min_0_reg_378 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_z_top_min_2_ph_phi_fu_391_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_top_min_2_ph_reg_388 : STD_LOGIC_VECTOR (31 downto 0);
    signal ppl_assign_0_reg_399 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_apexZ0_0_reg_409 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_top_min_2_reg_419 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_madeComplementaryPatch_phi_fu_435_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal madeComplementaryPatch_reg_430 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_makeThirdPatch_fu_444_ap_start_reg : STD_LOGIC := '0';
    signal grp_solveComplmentaryPatch_fu_471_ap_start_reg : STD_LOGIC := '0';
    signal grp_makePatch_alignedToLine_fu_504_ap_start_reg : STD_LOGIC := '0';
    signal grp_getSolveNextPatchPairWhileCondition_fu_545_ap_start_reg : STD_LOGIC := '0';
    signal grp_areWedgeSuperPointsEqual_fu_561_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (116 downto 0);
    signal ap_NS_fsm_state7 : STD_LOGIC;
    signal zext_ln891_2_fu_721_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln901_fu_725_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln803_fu_597_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln886_fu_648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notChoppedPatch_fu_652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln889_fu_669_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln889_fu_657_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln889_fu_675_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_1_fu_663_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_687_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_3_fu_698_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln891_fu_694_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln891_1_fu_705_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln878_fu_748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln892_fu_743_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln901_fu_753_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_2_fu_773_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_fu_769_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_2_fu_773_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_4_fu_787_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_3_fu_783_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_4_fu_787_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln878_1_fu_797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal white_space_height_fu_801_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_1144_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1144_p0 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_1144_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1144_ce : STD_LOGIC;
    signal ap_block_state117_on_subcall_done : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component MPSQ_makeThirdPatch IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        n_patches_i : IN STD_LOGIC_VECTOR (7 downto 0);
        n_patches_o : OUT STD_LOGIC_VECTOR (7 downto 0);
        n_patches_o_ap_vld : OUT STD_LOGIC;
        GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        GDn_points_ce0 : OUT STD_LOGIC;
        GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        lastPatchIndex : IN STD_LOGIC_VECTOR (7 downto 0);
        z_top_min : IN STD_LOGIC_VECTOR (31 downto 0);
        z_top_max : IN STD_LOGIC_VECTOR (31 downto 0);
        complementary_apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
        apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ppl : IN STD_LOGIC_VECTOR (31 downto 0);
        GDarrayDecoded_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        GDarrayDecoded_ce0 : OUT STD_LOGIC;
        GDarrayDecoded_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_superpoints_ce0 : OUT STD_LOGIC;
        patches_superpoints_we0 : OUT STD_LOGIC;
        patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_superpoints_ce1 : OUT STD_LOGIC;
        patches_superpoints_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_parameters_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        patches_parameters_ce0 : OUT STD_LOGIC;
        patches_parameters_we0 : OUT STD_LOGIC;
        patches_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        patches_parameters_ce1 : OUT STD_LOGIC;
        patches_parameters_we1 : OUT STD_LOGIC;
        patches_parameters_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din3 : OUT STD_LOGIC_VECTOR (2 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din4 : OUT STD_LOGIC_VECTOR (2 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din5 : OUT STD_LOGIC_VECTOR (2 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_ce : OUT STD_LOGIC;
        grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din3 : OUT STD_LOGIC_VECTOR (2 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din4 : OUT STD_LOGIC_VECTOR (2 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din5 : OUT STD_LOGIC_VECTOR (2 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_ce : OUT STD_LOGIC );
    end component;


    component MPSQ_solveComplmentaryPatch IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        n_patches_i : IN STD_LOGIC_VECTOR (7 downto 0);
        n_patches_o : OUT STD_LOGIC_VECTOR (7 downto 0);
        n_patches_o_ap_vld : OUT STD_LOGIC;
        GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        GDn_points_ce0 : OUT STD_LOGIC;
        GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ppl : IN STD_LOGIC_VECTOR (31 downto 0);
        nPatchesAtOriginal : IN STD_LOGIC_VECTOR (7 downto 0);
        previous_z_top_min_read : IN STD_LOGIC_VECTOR (31 downto 0);
        complementary_apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
        white_space_height_read : IN STD_LOGIC_VECTOR (63 downto 0);
        original_c : IN STD_LOGIC_VECTOR (31 downto 0);
        original_d : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read12 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read13 : IN STD_LOGIC_VECTOR (31 downto 0);
        z_top_min_read : IN STD_LOGIC_VECTOR (31 downto 0);
        GDarrayDecoded_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        GDarrayDecoded_ce0 : OUT STD_LOGIC;
        GDarrayDecoded_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_superpoints_ce0 : OUT STD_LOGIC;
        patches_superpoints_we0 : OUT STD_LOGIC;
        patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_superpoints_ce1 : OUT STD_LOGIC;
        patches_superpoints_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_parameters_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        patches_parameters_ce0 : OUT STD_LOGIC;
        patches_parameters_we0 : OUT STD_LOGIC;
        patches_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        patches_parameters_ce1 : OUT STD_LOGIC;
        patches_parameters_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_531_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_531_p_din2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_531_p_din3 : OUT STD_LOGIC_VECTOR (2 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_531_p_din4 : OUT STD_LOGIC_VECTOR (2 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_531_p_din5 : OUT STD_LOGIC_VECTOR (2 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_531_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_531_p_ce : OUT STD_LOGIC;
        grp_fu_1144_p_din0 : OUT STD_LOGIC_VECTOR (32 downto 0);
        grp_fu_1144_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1144_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1144_p_ce : OUT STD_LOGIC );
    end component;


    component MPSQ_makePatch_alignedToLine IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        n_patches_i : IN STD_LOGIC_VECTOR (7 downto 0);
        n_patches_o : OUT STD_LOGIC_VECTOR (7 downto 0);
        n_patches_o_ap_vld : OUT STD_LOGIC;
        GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        GDn_points_ce0 : OUT STD_LOGIC;
        GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
        z_top : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        leftRight : IN STD_LOGIC_VECTOR (0 downto 0);
        GDarrayDecoded_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        GDarrayDecoded_ce0 : OUT STD_LOGIC;
        GDarrayDecoded_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_superpoints_ce0 : OUT STD_LOGIC;
        patches_superpoints_we0 : OUT STD_LOGIC;
        patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_parameters_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        patches_parameters_ce0 : OUT STD_LOGIC;
        patches_parameters_we0 : OUT STD_LOGIC;
        patches_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MPSQ_straightLineProjectorFromLayerIJtoK IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        z_i : IN STD_LOGIC_VECTOR (31 downto 0);
        z_j : IN STD_LOGIC_VECTOR (31 downto 0);
        i : IN STD_LOGIC_VECTOR (2 downto 0);
        j : IN STD_LOGIC_VECTOR (2 downto 0);
        k : IN STD_LOGIC_VECTOR (2 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component MPSQ_getSolveNextPatchPairWhileCondition IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        GDn_points_ce0 : OUT STD_LOGIC;
        GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        repeat_original : IN STD_LOGIC_VECTOR (0 downto 0);
        white_space_height : IN STD_LOGIC_VECTOR (63 downto 0);
        previous_white_space_height : IN STD_LOGIC_VECTOR (63 downto 0);
        current_z_top_index : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        patches_parameters_ce0 : OUT STD_LOGIC;
        patches_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component MPSQ_areWedgeSuperPointsEqual IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        wsp2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        wsp2_ce0 : OUT STD_LOGIC;
        wsp2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        wsp2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        wsp2_ce1 : OUT STD_LOGIC;
        wsp2_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        wsp1_offset : IN STD_LOGIC_VECTOR (4 downto 0);
        wsp1_offset1 : IN STD_LOGIC_VECTOR (2 downto 0);
        wsp2_offset : IN STD_LOGIC_VECTOR (4 downto 0);
        wsp2_offset3 : IN STD_LOGIC_VECTOR (2 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component MPSQ_mul_33s_64s_64_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (32 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    grp_makeThirdPatch_fu_444 : component MPSQ_makeThirdPatch
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_makeThirdPatch_fu_444_ap_start,
        ap_done => grp_makeThirdPatch_fu_444_ap_done,
        ap_idle => grp_makeThirdPatch_fu_444_ap_idle,
        ap_ready => grp_makeThirdPatch_fu_444_ap_ready,
        n_patches_i => n_patches_i,
        n_patches_o => grp_makeThirdPatch_fu_444_n_patches_o,
        n_patches_o_ap_vld => grp_makeThirdPatch_fu_444_n_patches_o_ap_vld,
        GDn_points_address0 => grp_makeThirdPatch_fu_444_GDn_points_address0,
        GDn_points_ce0 => grp_makeThirdPatch_fu_444_GDn_points_ce0,
        GDn_points_q0 => GDn_points_q0,
        lastPatchIndex => lastPatchIndex_1_reg_1139,
        z_top_min => z_top_min_2_reg_419,
        z_top_max => z_top_max_read,
        complementary_apexZ0 => complementary_apexZ0_0_reg_409,
        apexZ0 => apexZ0,
        ppl => ppl_assign_0_reg_399,
        GDarrayDecoded_address0 => grp_makeThirdPatch_fu_444_GDarrayDecoded_address0,
        GDarrayDecoded_ce0 => grp_makeThirdPatch_fu_444_GDarrayDecoded_ce0,
        GDarrayDecoded_q0 => GDarrayDecoded_q0,
        patches_superpoints_address0 => grp_makeThirdPatch_fu_444_patches_superpoints_address0,
        patches_superpoints_ce0 => grp_makeThirdPatch_fu_444_patches_superpoints_ce0,
        patches_superpoints_we0 => grp_makeThirdPatch_fu_444_patches_superpoints_we0,
        patches_superpoints_d0 => grp_makeThirdPatch_fu_444_patches_superpoints_d0,
        patches_superpoints_q0 => patches_superpoints_q0,
        patches_superpoints_address1 => grp_makeThirdPatch_fu_444_patches_superpoints_address1,
        patches_superpoints_ce1 => grp_makeThirdPatch_fu_444_patches_superpoints_ce1,
        patches_superpoints_q1 => patches_superpoints_q1,
        patches_parameters_address0 => grp_makeThirdPatch_fu_444_patches_parameters_address0,
        patches_parameters_ce0 => grp_makeThirdPatch_fu_444_patches_parameters_ce0,
        patches_parameters_we0 => grp_makeThirdPatch_fu_444_patches_parameters_we0,
        patches_parameters_d0 => grp_makeThirdPatch_fu_444_patches_parameters_d0,
        patches_parameters_q0 => patches_parameters_q0,
        patches_parameters_address1 => grp_makeThirdPatch_fu_444_patches_parameters_address1,
        patches_parameters_ce1 => grp_makeThirdPatch_fu_444_patches_parameters_ce1,
        patches_parameters_we1 => grp_makeThirdPatch_fu_444_patches_parameters_we1,
        patches_parameters_d1 => grp_makeThirdPatch_fu_444_patches_parameters_d1,
        patches_parameters_q1 => patches_parameters_q1,
        grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din1 => grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din1,
        grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din2 => grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din2,
        grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din3 => grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din3,
        grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din4 => grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din4,
        grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din5 => grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din5,
        grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_dout0 => grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_dout0,
        grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_ce => grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_ce,
        grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din1 => grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din1,
        grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din2 => grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din2,
        grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din3 => grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din3,
        grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din4 => grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din4,
        grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din5 => grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din5,
        grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_dout0 => grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_dout0,
        grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_ce => grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_ce);

    grp_solveComplmentaryPatch_fu_471 : component MPSQ_solveComplmentaryPatch
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_solveComplmentaryPatch_fu_471_ap_start,
        ap_done => grp_solveComplmentaryPatch_fu_471_ap_done,
        ap_idle => grp_solveComplmentaryPatch_fu_471_ap_idle,
        ap_ready => grp_solveComplmentaryPatch_fu_471_ap_ready,
        n_patches_i => n_patches_i,
        n_patches_o => grp_solveComplmentaryPatch_fu_471_n_patches_o,
        n_patches_o_ap_vld => grp_solveComplmentaryPatch_fu_471_n_patches_o_ap_vld,
        GDn_points_address0 => grp_solveComplmentaryPatch_fu_471_GDn_points_address0,
        GDn_points_ce0 => grp_solveComplmentaryPatch_fu_471_GDn_points_ce0,
        GDn_points_q0 => GDn_points_q0,
        ppl => ppl_assign_s_reg_1074,
        nPatchesAtOriginal => nPatchesAtOriginal_reg_973,
        previous_z_top_min_read => previous_z_top_min_V_0_reg_366,
        complementary_apexZ0 => trunc_ln69_reg_1055,
        white_space_height_read => white_space_height_0_reg_308,
        original_c => reg_573,
        original_d => reg_580,
        p_read12 => counter_0_reg_342,
        p_read13 => counterUpshift_0_reg_354,
        z_top_min_read => z_top_min_0_reg_378,
        GDarrayDecoded_address0 => grp_solveComplmentaryPatch_fu_471_GDarrayDecoded_address0,
        GDarrayDecoded_ce0 => grp_solveComplmentaryPatch_fu_471_GDarrayDecoded_ce0,
        GDarrayDecoded_q0 => GDarrayDecoded_q0,
        patches_superpoints_address0 => grp_solveComplmentaryPatch_fu_471_patches_superpoints_address0,
        patches_superpoints_ce0 => grp_solveComplmentaryPatch_fu_471_patches_superpoints_ce0,
        patches_superpoints_we0 => grp_solveComplmentaryPatch_fu_471_patches_superpoints_we0,
        patches_superpoints_d0 => grp_solveComplmentaryPatch_fu_471_patches_superpoints_d0,
        patches_superpoints_q0 => patches_superpoints_q0,
        patches_superpoints_address1 => grp_solveComplmentaryPatch_fu_471_patches_superpoints_address1,
        patches_superpoints_ce1 => grp_solveComplmentaryPatch_fu_471_patches_superpoints_ce1,
        patches_superpoints_q1 => patches_superpoints_q1,
        patches_parameters_address0 => grp_solveComplmentaryPatch_fu_471_patches_parameters_address0,
        patches_parameters_ce0 => grp_solveComplmentaryPatch_fu_471_patches_parameters_ce0,
        patches_parameters_we0 => grp_solveComplmentaryPatch_fu_471_patches_parameters_we0,
        patches_parameters_d0 => grp_solveComplmentaryPatch_fu_471_patches_parameters_d0,
        patches_parameters_q0 => patches_parameters_q0,
        patches_parameters_address1 => grp_solveComplmentaryPatch_fu_471_patches_parameters_address1,
        patches_parameters_ce1 => grp_solveComplmentaryPatch_fu_471_patches_parameters_ce1,
        patches_parameters_q1 => patches_parameters_q1,
        ap_return_0 => grp_solveComplmentaryPatch_fu_471_ap_return_0,
        ap_return_1 => grp_solveComplmentaryPatch_fu_471_ap_return_1,
        ap_return_2 => grp_solveComplmentaryPatch_fu_471_ap_return_2,
        ap_return_3 => grp_solveComplmentaryPatch_fu_471_ap_return_3,
        ap_return_4 => grp_solveComplmentaryPatch_fu_471_ap_return_4,
        ap_return_5 => grp_solveComplmentaryPatch_fu_471_ap_return_5,
        ap_return_6 => grp_solveComplmentaryPatch_fu_471_ap_return_6,
        grp_straightLineProjectorFromLayerIJtoK_fu_531_p_din1 => grp_solveComplmentaryPatch_fu_471_grp_straightLineProjectorFromLayerIJtoK_fu_531_p_din1,
        grp_straightLineProjectorFromLayerIJtoK_fu_531_p_din2 => grp_solveComplmentaryPatch_fu_471_grp_straightLineProjectorFromLayerIJtoK_fu_531_p_din2,
        grp_straightLineProjectorFromLayerIJtoK_fu_531_p_din3 => grp_solveComplmentaryPatch_fu_471_grp_straightLineProjectorFromLayerIJtoK_fu_531_p_din3,
        grp_straightLineProjectorFromLayerIJtoK_fu_531_p_din4 => grp_solveComplmentaryPatch_fu_471_grp_straightLineProjectorFromLayerIJtoK_fu_531_p_din4,
        grp_straightLineProjectorFromLayerIJtoK_fu_531_p_din5 => grp_solveComplmentaryPatch_fu_471_grp_straightLineProjectorFromLayerIJtoK_fu_531_p_din5,
        grp_straightLineProjectorFromLayerIJtoK_fu_531_p_dout0 => grp_solveComplmentaryPatch_fu_471_grp_straightLineProjectorFromLayerIJtoK_fu_531_p_dout0,
        grp_straightLineProjectorFromLayerIJtoK_fu_531_p_ce => grp_solveComplmentaryPatch_fu_471_grp_straightLineProjectorFromLayerIJtoK_fu_531_p_ce,
        grp_fu_1144_p_din0 => grp_solveComplmentaryPatch_fu_471_grp_fu_1144_p_din0,
        grp_fu_1144_p_din1 => grp_solveComplmentaryPatch_fu_471_grp_fu_1144_p_din1,
        grp_fu_1144_p_dout0 => grp_solveComplmentaryPatch_fu_471_grp_fu_1144_p_dout0,
        grp_fu_1144_p_ce => grp_solveComplmentaryPatch_fu_471_grp_fu_1144_p_ce);

    grp_makePatch_alignedToLine_fu_504 : component MPSQ_makePatch_alignedToLine
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_makePatch_alignedToLine_fu_504_ap_start,
        ap_done => grp_makePatch_alignedToLine_fu_504_ap_done,
        ap_idle => grp_makePatch_alignedToLine_fu_504_ap_idle,
        ap_ready => grp_makePatch_alignedToLine_fu_504_ap_ready,
        n_patches_i => n_patches_i,
        n_patches_o => grp_makePatch_alignedToLine_fu_504_n_patches_o,
        n_patches_o_ap_vld => grp_makePatch_alignedToLine_fu_504_n_patches_o_ap_vld,
        GDn_points_address0 => grp_makePatch_alignedToLine_fu_504_GDn_points_address0,
        GDn_points_ce0 => grp_makePatch_alignedToLine_fu_504_GDn_points_ce0,
        GDn_points_q0 => GDn_points_q0,
        apexZ0 => grp_makePatch_alignedToLine_fu_504_apexZ0,
        z_top => grp_makePatch_alignedToLine_fu_504_z_top,
        p_read => grp_makePatch_alignedToLine_fu_504_p_read,
        leftRight => grp_makePatch_alignedToLine_fu_504_leftRight,
        GDarrayDecoded_address0 => grp_makePatch_alignedToLine_fu_504_GDarrayDecoded_address0,
        GDarrayDecoded_ce0 => grp_makePatch_alignedToLine_fu_504_GDarrayDecoded_ce0,
        GDarrayDecoded_q0 => GDarrayDecoded_q0,
        patches_superpoints_address0 => grp_makePatch_alignedToLine_fu_504_patches_superpoints_address0,
        patches_superpoints_ce0 => grp_makePatch_alignedToLine_fu_504_patches_superpoints_ce0,
        patches_superpoints_we0 => grp_makePatch_alignedToLine_fu_504_patches_superpoints_we0,
        patches_superpoints_d0 => grp_makePatch_alignedToLine_fu_504_patches_superpoints_d0,
        patches_superpoints_q0 => patches_superpoints_q0,
        patches_parameters_address0 => grp_makePatch_alignedToLine_fu_504_patches_parameters_address0,
        patches_parameters_ce0 => grp_makePatch_alignedToLine_fu_504_patches_parameters_ce0,
        patches_parameters_we0 => grp_makePatch_alignedToLine_fu_504_patches_parameters_we0,
        patches_parameters_d0 => grp_makePatch_alignedToLine_fu_504_patches_parameters_d0,
        patches_parameters_q0 => patches_parameters_q0,
        ap_return => grp_makePatch_alignedToLine_fu_504_ap_return);

    grp_straightLineProjectorFromLayerIJtoK_fu_531 : component MPSQ_straightLineProjectorFromLayerIJtoK
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        z_i => grp_straightLineProjectorFromLayerIJtoK_fu_531_z_i,
        z_j => grp_straightLineProjectorFromLayerIJtoK_fu_531_z_j,
        i => grp_straightLineProjectorFromLayerIJtoK_fu_531_i,
        j => grp_straightLineProjectorFromLayerIJtoK_fu_531_j,
        k => grp_straightLineProjectorFromLayerIJtoK_fu_531_k,
        ap_return => grp_straightLineProjectorFromLayerIJtoK_fu_531_ap_return,
        ap_ce => grp_straightLineProjectorFromLayerIJtoK_fu_531_ap_ce);

    grp_getSolveNextPatchPairWhileCondition_fu_545 : component MPSQ_getSolveNextPatchPairWhileCondition
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_getSolveNextPatchPairWhileCondition_fu_545_ap_start,
        ap_done => grp_getSolveNextPatchPairWhileCondition_fu_545_ap_done,
        ap_idle => grp_getSolveNextPatchPairWhileCondition_fu_545_ap_idle,
        ap_ready => grp_getSolveNextPatchPairWhileCondition_fu_545_ap_ready,
        GDn_points_address0 => grp_getSolveNextPatchPairWhileCondition_fu_545_GDn_points_address0,
        GDn_points_ce0 => grp_getSolveNextPatchPairWhileCondition_fu_545_GDn_points_ce0,
        GDn_points_q0 => GDn_points_q0,
        repeat_original => repeat_original_reg_295,
        white_space_height => white_space_height_0_reg_308,
        previous_white_space_height => previous_white_space_height_0_reg_318,
        current_z_top_index => current_z_top_index_0_reg_330,
        patches_parameters_address0 => grp_getSolveNextPatchPairWhileCondition_fu_545_patches_parameters_address0,
        patches_parameters_ce0 => grp_getSolveNextPatchPairWhileCondition_fu_545_patches_parameters_ce0,
        patches_parameters_q0 => patches_parameters_q0,
        ap_return => grp_getSolveNextPatchPairWhileCondition_fu_545_ap_return);

    grp_areWedgeSuperPointsEqual_fu_561 : component MPSQ_areWedgeSuperPointsEqual
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_areWedgeSuperPointsEqual_fu_561_ap_start,
        ap_done => grp_areWedgeSuperPointsEqual_fu_561_ap_done,
        ap_idle => grp_areWedgeSuperPointsEqual_fu_561_ap_idle,
        ap_ready => grp_areWedgeSuperPointsEqual_fu_561_ap_ready,
        wsp2_address0 => grp_areWedgeSuperPointsEqual_fu_561_wsp2_address0,
        wsp2_ce0 => grp_areWedgeSuperPointsEqual_fu_561_wsp2_ce0,
        wsp2_q0 => patches_superpoints_q0,
        wsp2_address1 => grp_areWedgeSuperPointsEqual_fu_561_wsp2_address1,
        wsp2_ce1 => grp_areWedgeSuperPointsEqual_fu_561_wsp2_ce1,
        wsp2_q1 => patches_superpoints_q1,
        wsp1_offset => lastPatchIndex_reg_978,
        wsp1_offset1 => i_reg_270,
        wsp2_offset => thirdLastPatchIndex_reg_989,
        wsp2_offset3 => i_reg_270,
        ap_return => grp_areWedgeSuperPointsEqual_fu_561_ap_return);

    grp_straightLineProjectorFromLayerIJtoK_fu_1148 : component MPSQ_straightLineProjectorFromLayerIJtoK
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        z_i => grp_straightLineProjectorFromLayerIJtoK_fu_1148_z_i,
        z_j => grp_straightLineProjectorFromLayerIJtoK_fu_1148_z_j,
        i => grp_straightLineProjectorFromLayerIJtoK_fu_1148_i,
        j => grp_straightLineProjectorFromLayerIJtoK_fu_1148_j,
        k => grp_straightLineProjectorFromLayerIJtoK_fu_1148_k,
        ap_return => grp_straightLineProjectorFromLayerIJtoK_fu_1148_ap_return,
        ap_ce => grp_straightLineProjectorFromLayerIJtoK_fu_1148_ap_ce);

    grp_straightLineProjectorFromLayerIJtoK_fu_1156 : component MPSQ_straightLineProjectorFromLayerIJtoK
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        z_i => grp_straightLineProjectorFromLayerIJtoK_fu_1156_z_i,
        z_j => grp_straightLineProjectorFromLayerIJtoK_fu_1156_z_j,
        i => grp_straightLineProjectorFromLayerIJtoK_fu_1156_i,
        j => grp_straightLineProjectorFromLayerIJtoK_fu_1156_j,
        k => grp_straightLineProjectorFromLayerIJtoK_fu_1156_k,
        ap_return => grp_straightLineProjectorFromLayerIJtoK_fu_1156_ap_return,
        ap_ce => grp_straightLineProjectorFromLayerIJtoK_fu_1156_ap_ce);

    mul_33s_64s_64_5_1_U131 : component MPSQ_mul_33s_64s_64_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 33,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1144_p0,
        din1 => grp_fu_1144_p1,
        ce => grp_fu_1144_ce,
        dout => grp_fu_1144_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_areWedgeSuperPointsEqual_fu_561_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_areWedgeSuperPointsEqual_fu_561_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_logic_1 = ap_NS_fsm_state7))) then 
                    grp_areWedgeSuperPointsEqual_fu_561_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_areWedgeSuperPointsEqual_fu_561_ap_ready = ap_const_logic_1)) then 
                    grp_areWedgeSuperPointsEqual_fu_561_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_getSolveNextPatchPairWhileCondition_fu_545_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_getSolveNextPatchPairWhileCondition_fu_545_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
                    grp_getSolveNextPatchPairWhileCondition_fu_545_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_getSolveNextPatchPairWhileCondition_fu_545_ap_ready = ap_const_logic_1)) then 
                    grp_getSolveNextPatchPairWhileCondition_fu_545_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_makePatch_alignedToLine_fu_504_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_makePatch_alignedToLine_fu_504_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state61) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
                    grp_makePatch_alignedToLine_fu_504_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_makePatch_alignedToLine_fu_504_ap_ready = ap_const_logic_1)) then 
                    grp_makePatch_alignedToLine_fu_504_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_makeThirdPatch_fu_444_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_makeThirdPatch_fu_444_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state116) and (ap_phi_mux_madeComplementaryPatch_phi_fu_435_p4 = ap_const_lv1_1))) then 
                    grp_makeThirdPatch_fu_444_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_makeThirdPatch_fu_444_ap_ready = ap_const_logic_1)) then 
                    grp_makeThirdPatch_fu_444_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_solveComplmentaryPatch_fu_471_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_solveComplmentaryPatch_fu_471_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_s_reg_1097 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state68))) then 
                    grp_solveComplmentaryPatch_fu_471_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_solveComplmentaryPatch_fu_471_ap_ready = ap_const_logic_1)) then 
                    grp_solveComplmentaryPatch_fu_471_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    complementary_apexZ0_0_reg_409_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state69) and (ap_const_boolean_0 = ap_block_state69_on_subcall_done) and (((ap_const_lv1_1 = and_ln889_1_reg_1026) and (icmp_ln934_fu_840_p2 = ap_const_lv1_1)) or ((tmp_s_reg_1097 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln889_1_reg_1026))))) then 
                complementary_apexZ0_0_reg_409 <= trunc_ln69_reg_1055;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state58) and (ap_const_lv1_0 = and_ln889_1_fu_681_p2))) then 
                complementary_apexZ0_0_reg_409 <= p_read7;
            end if; 
        end if;
    end process;

    counterUpshift_0_reg_354_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_1097 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln889_1_reg_1026) and (ap_const_logic_1 = ap_CS_fsm_state69) and (icmp_ln934_fu_840_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state69_on_subcall_done))) then 
                counterUpshift_0_reg_354 <= grp_solveComplmentaryPatch_fu_471_ap_return_3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
                counterUpshift_0_reg_354 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    counter_0_reg_342_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_1097 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln889_1_reg_1026) and (ap_const_logic_1 = ap_CS_fsm_state69) and (icmp_ln934_fu_840_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state69_on_subcall_done))) then 
                counter_0_reg_342 <= grp_solveComplmentaryPatch_fu_471_ap_return_2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
                counter_0_reg_342 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    current_z_top_index_0_reg_330_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_1097 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln889_1_reg_1026) and (ap_const_logic_1 = ap_CS_fsm_state69) and (icmp_ln934_fu_840_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state69_on_subcall_done))) then 
                current_z_top_index_0_reg_330 <= grp_solveComplmentaryPatch_fu_471_ap_return_1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
                current_z_top_index_0_reg_330 <= ap_const_lv32_FFFFFFFF;
            end if; 
        end if;
    end process;

    i_reg_270_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln865_reg_994 = ap_const_lv1_1) and (icmp_ln860_reg_985 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11) and (grp_areWedgeSuperPointsEqual_fu_561_ap_return = ap_const_lv1_1))) then 
                i_reg_270 <= add_ln865_reg_998;
            elsif (((icmp_ln860_fu_607_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                i_reg_270 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    madeComplementaryPatch_reg_430_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state69) and (ap_const_boolean_0 = ap_block_state69_on_subcall_done) and (((ap_const_lv1_1 = and_ln889_1_reg_1026) and (icmp_ln934_fu_840_p2 = ap_const_lv1_1)) or ((tmp_s_reg_1097 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln889_1_reg_1026))))) then 
                madeComplementaryPatch_reg_430 <= ap_const_lv1_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state58) and (ap_const_lv1_0 = and_ln889_1_fu_681_p2))) then 
                madeComplementaryPatch_reg_430 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    ppl_assign_0_reg_399_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state69) and (ap_const_boolean_0 = ap_block_state69_on_subcall_done) and (((ap_const_lv1_1 = and_ln889_1_reg_1026) and (icmp_ln934_fu_840_p2 = ap_const_lv1_1)) or ((tmp_s_reg_1097 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln889_1_reg_1026))))) then 
                ppl_assign_0_reg_399 <= ppl_assign_s_reg_1074;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state58) and (ap_const_lv1_0 = and_ln889_1_fu_681_p2))) then 
                ppl_assign_0_reg_399 <= ppl_assign4_reg_911;
            end if; 
        end if;
    end process;

    previous_white_space_height_0_reg_318_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_1097 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln889_1_reg_1026) and (ap_const_logic_1 = ap_CS_fsm_state69) and (icmp_ln934_fu_840_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state69_on_subcall_done))) then 
                previous_white_space_height_0_reg_318 <= grp_solveComplmentaryPatch_fu_471_ap_return_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
                previous_white_space_height_0_reg_318 <= ap_const_lv64_FFFFFFFFFFF0BDC0;
            end if; 
        end if;
    end process;

    previous_z_top_min_V_0_reg_366_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_1097 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln889_1_reg_1026) and (ap_const_logic_1 = ap_CS_fsm_state69) and (icmp_ln934_fu_840_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state69_on_subcall_done))) then 
                previous_z_top_min_V_0_reg_366 <= grp_solveComplmentaryPatch_fu_471_ap_return_4;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
                previous_z_top_min_V_0_reg_366 <= ap_const_lv32_C4747840;
            end if; 
        end if;
    end process;

    reg_573_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
                reg_573 <= patches_parameters_q0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                reg_573 <= patches_parameters_q1;
            end if; 
        end if;
    end process;

    reg_580_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
                reg_580 <= patches_parameters_q1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                reg_580 <= patches_parameters_q0;
            end if; 
        end if;
    end process;

    repeat_original_ph_reg_282_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln865_reg_994 = ap_const_lv1_1) and (icmp_ln860_reg_985 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11) and (grp_areWedgeSuperPointsEqual_fu_561_ap_return = ap_const_lv1_0))) then 
                repeat_original_ph_reg_282 <= ap_const_lv1_0;
            elsif (((icmp_ln865_fu_619_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                repeat_original_ph_reg_282 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    repeat_original_reg_295_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (((icmp_ln865_reg_994 = ap_const_lv1_0) and (icmp_ln860_reg_985 = ap_const_lv1_1)) or ((icmp_ln860_reg_985 = ap_const_lv1_1) and (grp_areWedgeSuperPointsEqual_fu_561_ap_return = ap_const_lv1_0))))) then 
                repeat_original_reg_295 <= ap_phi_mux_repeat_original_ph_phi_fu_286_p4;
            elsif (((icmp_ln860_fu_607_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                repeat_original_reg_295 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    white_space_height_0_reg_308_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_1097 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln889_1_reg_1026) and (ap_const_logic_1 = ap_CS_fsm_state69) and (icmp_ln934_fu_840_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state69_on_subcall_done))) then 
                white_space_height_0_reg_308 <= grp_solveComplmentaryPatch_fu_471_ap_return_5;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
                white_space_height_0_reg_308 <= sext_ln534_fu_807_p1;
            end if; 
        end if;
    end process;

    z_top_min_0_reg_378_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_1097 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln889_1_reg_1026) and (ap_const_logic_1 = ap_CS_fsm_state69) and (icmp_ln934_fu_840_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state69_on_subcall_done))) then 
                z_top_min_0_reg_378 <= grp_solveComplmentaryPatch_fu_471_ap_return_6;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
                z_top_min_0_reg_378 <= select_ln892_reg_1068;
            end if; 
        end if;
    end process;

    z_top_min_2_ph_reg_388_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_1097 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln889_1_reg_1026) and (ap_const_logic_1 = ap_CS_fsm_state69) and (icmp_ln934_fu_840_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_state69_on_subcall_done))) then 
                z_top_min_2_ph_reg_388 <= grp_solveComplmentaryPatch_fu_471_ap_return_6;
            elsif (((tmp_s_reg_1097 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state68))) then 
                z_top_min_2_ph_reg_388 <= z_top_min_0_reg_378;
            end if; 
        end if;
    end process;

    z_top_min_2_reg_419_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state69) and (ap_const_boolean_0 = ap_block_state69_on_subcall_done) and (((ap_const_lv1_1 = and_ln889_1_reg_1026) and (icmp_ln934_fu_840_p2 = ap_const_lv1_1)) or ((tmp_s_reg_1097 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln889_1_reg_1026))))) then 
                z_top_min_2_reg_419 <= ap_phi_mux_z_top_min_2_ph_phi_fu_391_p4;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state58) and (ap_const_lv1_0 = and_ln889_1_fu_681_p2))) then 
                z_top_min_2_reg_419 <= p_read4;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln794_reg_968 <= add_ln794_fu_591_p2;
                icmp_ln860_reg_985 <= icmp_ln860_fu_607_p2;
                lastPatchIndex_reg_978 <= lastPatchIndex_fu_601_p2;
                nPatchesAtOriginal_reg_973 <= n_patches_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                add_ln865_reg_998 <= add_ln865_fu_625_p2;
                icmp_ln865_reg_994 <= icmp_ln865_fu_619_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln889_1_fu_681_p2) and (ap_const_logic_1 = ap_CS_fsm_state58))) then
                    add_ln891_reg_1030(11 downto 4) <= add_ln891_fu_709_p2(11 downto 4);
                    add_ln901_reg_1035(11 downto 4) <= add_ln901_fu_715_p2(11 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state58)) then
                and_ln889_1_reg_1026 <= and_ln889_1_fu_681_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                icmp_ln880_reg_1021 <= icmp_ln880_fu_642_p2;
                squarePatch_alternate2_reg_1016 <= squarePatch_alternate2_fu_636_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                icmp_ln886_reg_1011 <= icmp_ln886_fu_631_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state59)) then
                icmp_ln892_reg_1050 <= icmp_ln892_fu_729_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state115)) then
                lastPatchIndex_1_reg_1139 <= lastPatchIndex_1_fu_846_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                ppl_assign4_reg_911 <= grp_makePatch_alignedToLine_fu_504_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state62)) then
                ppl_assign_s_reg_1074 <= grp_makePatch_alignedToLine_fu_504_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state116) or (ap_const_logic_1 = ap_CS_fsm_state57))) then
                reg_587 <= grp_straightLineProjectorFromLayerIJtoK_fu_531_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state64)) then
                ret_1_reg_1086 <= ret_1_fu_791_p2;
                ret_reg_1080 <= ret_fu_777_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state61)) then
                select_ln892_reg_1068 <= select_ln892_fu_760_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln860_fu_607_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                thirdLastPatchIndex_reg_989 <= thirdLastPatchIndex_fu_613_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then
                tmp_s_reg_1097 <= grp_getSolveNextPatchPairWhileCondition_fu_545_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state60)) then
                trunc_ln69_1_reg_1062 <= trunc_ln69_1_fu_739_p1;
                trunc_ln69_reg_1055 <= trunc_ln69_fu_735_p1;
            end if;
        end if;
    end process;
    add_ln891_reg_1030(3 downto 0) <= "0000";
    add_ln901_reg_1035(3 downto 0) <= "0000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state4, ap_CS_fsm_state2, icmp_ln860_fu_607_p2, icmp_ln860_reg_985, icmp_ln865_fu_619_p2, icmp_ln865_reg_994, ap_CS_fsm_state5, and_ln889_1_fu_681_p2, and_ln889_1_reg_1026, ap_CS_fsm_state58, ap_CS_fsm_state62, tmp_s_reg_1097, ap_CS_fsm_state67, ap_CS_fsm_state69, grp_makePatch_alignedToLine_fu_504_ap_done, ap_CS_fsm_state11, ap_CS_fsm_state117, grp_getSolveNextPatchPairWhileCondition_fu_545_ap_done, grp_areWedgeSuperPointsEqual_fu_561_ap_return, ap_block_state69_on_subcall_done, icmp_ln934_fu_840_p2, ap_block_state117_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_makePatch_alignedToLine_fu_504_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((icmp_ln860_fu_607_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state5 => 
                if (((icmp_ln865_fu_619_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and ((icmp_ln860_reg_985 = ap_const_lv1_0) or ((icmp_ln865_reg_994 = ap_const_lv1_0) or (grp_areWedgeSuperPointsEqual_fu_561_ap_return = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state58) and (ap_const_lv1_0 = and_ln889_1_fu_681_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state69;
                else
                    ap_NS_fsm <= ap_ST_fsm_state59;
                end if;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                if (((grp_makePatch_alignedToLine_fu_504_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state62))) then
                    ap_NS_fsm <= ap_ST_fsm_state63;
                else
                    ap_NS_fsm <= ap_ST_fsm_state62;
                end if;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state67) and (grp_getSolveNextPatchPairWhileCondition_fu_545_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state68;
                else
                    ap_NS_fsm <= ap_ST_fsm_state67;
                end if;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state69) and (ap_const_boolean_0 = ap_block_state69_on_subcall_done) and ((ap_const_lv1_0 = and_ln889_1_reg_1026) or ((tmp_s_reg_1097 = ap_const_lv1_0) or (icmp_ln934_fu_840_p2 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state70;
                elsif (((tmp_s_reg_1097 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln889_1_reg_1026) and (ap_const_logic_1 = ap_CS_fsm_state69) and (icmp_ln934_fu_840_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state69_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state66;
                else
                    ap_NS_fsm <= ap_ST_fsm_state69;
                end if;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state83;
            when ap_ST_fsm_state83 => 
                ap_NS_fsm <= ap_ST_fsm_state84;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_state85;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state86;
            when ap_ST_fsm_state86 => 
                ap_NS_fsm <= ap_ST_fsm_state87;
            when ap_ST_fsm_state87 => 
                ap_NS_fsm <= ap_ST_fsm_state88;
            when ap_ST_fsm_state88 => 
                ap_NS_fsm <= ap_ST_fsm_state89;
            when ap_ST_fsm_state89 => 
                ap_NS_fsm <= ap_ST_fsm_state90;
            when ap_ST_fsm_state90 => 
                ap_NS_fsm <= ap_ST_fsm_state91;
            when ap_ST_fsm_state91 => 
                ap_NS_fsm <= ap_ST_fsm_state92;
            when ap_ST_fsm_state92 => 
                ap_NS_fsm <= ap_ST_fsm_state93;
            when ap_ST_fsm_state93 => 
                ap_NS_fsm <= ap_ST_fsm_state94;
            when ap_ST_fsm_state94 => 
                ap_NS_fsm <= ap_ST_fsm_state95;
            when ap_ST_fsm_state95 => 
                ap_NS_fsm <= ap_ST_fsm_state96;
            when ap_ST_fsm_state96 => 
                ap_NS_fsm <= ap_ST_fsm_state97;
            when ap_ST_fsm_state97 => 
                ap_NS_fsm <= ap_ST_fsm_state98;
            when ap_ST_fsm_state98 => 
                ap_NS_fsm <= ap_ST_fsm_state99;
            when ap_ST_fsm_state99 => 
                ap_NS_fsm <= ap_ST_fsm_state100;
            when ap_ST_fsm_state100 => 
                ap_NS_fsm <= ap_ST_fsm_state101;
            when ap_ST_fsm_state101 => 
                ap_NS_fsm <= ap_ST_fsm_state102;
            when ap_ST_fsm_state102 => 
                ap_NS_fsm <= ap_ST_fsm_state103;
            when ap_ST_fsm_state103 => 
                ap_NS_fsm <= ap_ST_fsm_state104;
            when ap_ST_fsm_state104 => 
                ap_NS_fsm <= ap_ST_fsm_state105;
            when ap_ST_fsm_state105 => 
                ap_NS_fsm <= ap_ST_fsm_state106;
            when ap_ST_fsm_state106 => 
                ap_NS_fsm <= ap_ST_fsm_state107;
            when ap_ST_fsm_state107 => 
                ap_NS_fsm <= ap_ST_fsm_state108;
            when ap_ST_fsm_state108 => 
                ap_NS_fsm <= ap_ST_fsm_state109;
            when ap_ST_fsm_state109 => 
                ap_NS_fsm <= ap_ST_fsm_state110;
            when ap_ST_fsm_state110 => 
                ap_NS_fsm <= ap_ST_fsm_state111;
            when ap_ST_fsm_state111 => 
                ap_NS_fsm <= ap_ST_fsm_state112;
            when ap_ST_fsm_state112 => 
                ap_NS_fsm <= ap_ST_fsm_state113;
            when ap_ST_fsm_state113 => 
                ap_NS_fsm <= ap_ST_fsm_state114;
            when ap_ST_fsm_state114 => 
                ap_NS_fsm <= ap_ST_fsm_state115;
            when ap_ST_fsm_state115 => 
                ap_NS_fsm <= ap_ST_fsm_state116;
            when ap_ST_fsm_state116 => 
                ap_NS_fsm <= ap_ST_fsm_state117;
            when ap_ST_fsm_state117 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state117) and (ap_const_boolean_0 = ap_block_state117_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state117;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    GDarrayDecoded_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state62, ap_CS_fsm_state69, grp_makeThirdPatch_fu_444_GDarrayDecoded_address0, grp_solveComplmentaryPatch_fu_471_GDarrayDecoded_address0, grp_makePatch_alignedToLine_fu_504_GDarrayDecoded_address0, ap_CS_fsm_state117, ap_predicate_op279_call_state69, madeComplementaryPatch_reg_430)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            GDarrayDecoded_address0 <= grp_makePatch_alignedToLine_fu_504_GDarrayDecoded_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state69) and (ap_predicate_op279_call_state69 = ap_const_boolean_1))) then 
            GDarrayDecoded_address0 <= grp_solveComplmentaryPatch_fu_471_GDarrayDecoded_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state117) and (madeComplementaryPatch_reg_430 = ap_const_lv1_1))) then 
            GDarrayDecoded_address0 <= grp_makeThirdPatch_fu_444_GDarrayDecoded_address0;
        else 
            GDarrayDecoded_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    GDarrayDecoded_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state62, ap_CS_fsm_state69, grp_makeThirdPatch_fu_444_GDarrayDecoded_ce0, grp_solveComplmentaryPatch_fu_471_GDarrayDecoded_ce0, grp_makePatch_alignedToLine_fu_504_GDarrayDecoded_ce0, ap_CS_fsm_state117, ap_predicate_op279_call_state69, madeComplementaryPatch_reg_430)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            GDarrayDecoded_ce0 <= grp_makePatch_alignedToLine_fu_504_GDarrayDecoded_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state69) and (ap_predicate_op279_call_state69 = ap_const_boolean_1))) then 
            GDarrayDecoded_ce0 <= grp_solveComplmentaryPatch_fu_471_GDarrayDecoded_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state117) and (madeComplementaryPatch_reg_430 = ap_const_lv1_1))) then 
            GDarrayDecoded_ce0 <= grp_makeThirdPatch_fu_444_GDarrayDecoded_ce0;
        else 
            GDarrayDecoded_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    GDn_points_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state62, ap_CS_fsm_state67, ap_CS_fsm_state69, grp_makeThirdPatch_fu_444_GDn_points_address0, grp_solveComplmentaryPatch_fu_471_GDn_points_address0, grp_makePatch_alignedToLine_fu_504_GDn_points_address0, ap_CS_fsm_state117, grp_getSolveNextPatchPairWhileCondition_fu_545_GDn_points_address0, ap_predicate_op279_call_state69, madeComplementaryPatch_reg_430)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            GDn_points_address0 <= grp_getSolveNextPatchPairWhileCondition_fu_545_GDn_points_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            GDn_points_address0 <= grp_makePatch_alignedToLine_fu_504_GDn_points_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state69) and (ap_predicate_op279_call_state69 = ap_const_boolean_1))) then 
            GDn_points_address0 <= grp_solveComplmentaryPatch_fu_471_GDn_points_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state117) and (madeComplementaryPatch_reg_430 = ap_const_lv1_1))) then 
            GDn_points_address0 <= grp_makeThirdPatch_fu_444_GDn_points_address0;
        else 
            GDn_points_address0 <= "XXX";
        end if; 
    end process;


    GDn_points_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state62, ap_CS_fsm_state67, ap_CS_fsm_state69, grp_makeThirdPatch_fu_444_GDn_points_ce0, grp_solveComplmentaryPatch_fu_471_GDn_points_ce0, grp_makePatch_alignedToLine_fu_504_GDn_points_ce0, ap_CS_fsm_state117, grp_getSolveNextPatchPairWhileCondition_fu_545_GDn_points_ce0, ap_predicate_op279_call_state69, madeComplementaryPatch_reg_430)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            GDn_points_ce0 <= grp_getSolveNextPatchPairWhileCondition_fu_545_GDn_points_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            GDn_points_ce0 <= grp_makePatch_alignedToLine_fu_504_GDn_points_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state69) and (ap_predicate_op279_call_state69 = ap_const_boolean_1))) then 
            GDn_points_ce0 <= grp_solveComplmentaryPatch_fu_471_GDn_points_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state117) and (madeComplementaryPatch_reg_430 = ap_const_lv1_1))) then 
            GDn_points_ce0 <= grp_makeThirdPatch_fu_444_GDn_points_ce0;
        else 
            GDn_points_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln794_fu_591_p2 <= std_logic_vector(unsigned(p_read1) + unsigned(ap_const_lv32_1));
    add_ln865_fu_625_p2 <= std_logic_vector(unsigned(i_reg_270) + unsigned(ap_const_lv3_1));
    add_ln891_fu_709_p2 <= std_logic_vector(unsigned(zext_ln891_fu_694_p1) + unsigned(zext_ln891_1_fu_705_p1));
    add_ln901_fu_715_p2 <= std_logic_vector(unsigned(add_ln891_fu_709_p2) + unsigned(ap_const_lv12_40));
    and_ln886_fu_648_p2 <= (squarePatch_alternate2_reg_1016 and icmp_ln886_reg_1011);
    and_ln889_1_fu_681_p2 <= (icmp_ln886_1_fu_663_p2 and and_ln889_fu_675_p2);
    and_ln889_fu_675_p2 <= (xor_ln889_fu_657_p2 and icmp_ln889_fu_669_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state115 <= ap_CS_fsm(114);
    ap_CS_fsm_state116 <= ap_CS_fsm(115);
    ap_CS_fsm_state117 <= ap_CS_fsm(116);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state65 <= ap_CS_fsm(64);
    ap_CS_fsm_state66 <= ap_CS_fsm(65);
    ap_CS_fsm_state67 <= ap_CS_fsm(66);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_NS_fsm_state7 <= ap_NS_fsm(6);

    ap_block_state117_on_subcall_done_assign_proc : process(grp_makeThirdPatch_fu_444_ap_done, madeComplementaryPatch_reg_430)
    begin
                ap_block_state117_on_subcall_done <= ((grp_makeThirdPatch_fu_444_ap_done = ap_const_logic_0) and (madeComplementaryPatch_reg_430 = ap_const_lv1_1));
    end process;


    ap_block_state69_on_subcall_done_assign_proc : process(grp_solveComplmentaryPatch_fu_471_ap_done, ap_predicate_op279_call_state69)
    begin
                ap_block_state69_on_subcall_done <= ((grp_solveComplmentaryPatch_fu_471_ap_done = ap_const_logic_0) and (ap_predicate_op279_call_state69 = ap_const_boolean_1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state117, ap_block_state117_on_subcall_done)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_fsm_state117) and (ap_const_boolean_0 = ap_block_state117_on_subcall_done)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_madeComplementaryPatch_phi_fu_435_p4 <= madeComplementaryPatch_reg_430;

    ap_phi_mux_repeat_original_ph_phi_fu_286_p4_assign_proc : process(icmp_ln860_reg_985, icmp_ln865_reg_994, ap_CS_fsm_state11, grp_areWedgeSuperPointsEqual_fu_561_ap_return, repeat_original_ph_reg_282)
    begin
        if (((icmp_ln865_reg_994 = ap_const_lv1_1) and (icmp_ln860_reg_985 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11) and (grp_areWedgeSuperPointsEqual_fu_561_ap_return = ap_const_lv1_0))) then 
            ap_phi_mux_repeat_original_ph_phi_fu_286_p4 <= ap_const_lv1_0;
        else 
            ap_phi_mux_repeat_original_ph_phi_fu_286_p4 <= repeat_original_ph_reg_282;
        end if; 
    end process;


    ap_phi_mux_z_top_min_2_ph_phi_fu_391_p4_assign_proc : process(and_ln889_1_reg_1026, tmp_s_reg_1097, ap_CS_fsm_state69, grp_solveComplmentaryPatch_fu_471_ap_return_6, icmp_ln934_fu_840_p2, z_top_min_2_ph_reg_388)
    begin
        if (((tmp_s_reg_1097 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln889_1_reg_1026) and (ap_const_logic_1 = ap_CS_fsm_state69) and (icmp_ln934_fu_840_p2 = ap_const_lv1_1))) then 
            ap_phi_mux_z_top_min_2_ph_phi_fu_391_p4 <= grp_solveComplmentaryPatch_fu_471_ap_return_6;
        else 
            ap_phi_mux_z_top_min_2_ph_phi_fu_391_p4 <= z_top_min_2_ph_reg_388;
        end if; 
    end process;


    ap_predicate_op279_call_state69_assign_proc : process(and_ln889_1_reg_1026, tmp_s_reg_1097)
    begin
                ap_predicate_op279_call_state69 <= ((tmp_s_reg_1097 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln889_1_reg_1026));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state117, ap_block_state117_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state117) and (ap_const_boolean_0 = ap_block_state117_on_subcall_done))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= reg_580;
    ap_return_1 <= add_ln794_reg_968;
    ap_return_2 <= reg_573;
    ap_return_3 <= reg_587;
    ap_return_4 <= complementary_apexZ0_0_reg_409;
    ap_return_5 <= reg_573;
    ap_return_6 <= z_top_min_2_reg_419;
    grp_areWedgeSuperPointsEqual_fu_561_ap_start <= grp_areWedgeSuperPointsEqual_fu_561_ap_start_reg;

    grp_fu_1144_ce_assign_proc : process(ap_CS_fsm_state69, grp_solveComplmentaryPatch_fu_471_grp_fu_1144_p_ce, ap_CS_fsm_state68)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state68))) then 
            grp_fu_1144_ce <= grp_solveComplmentaryPatch_fu_471_grp_fu_1144_p_ce;
        else 
            grp_fu_1144_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_1144_p0 <= grp_solveComplmentaryPatch_fu_471_grp_fu_1144_p_din0;
    grp_fu_1144_p1 <= grp_solveComplmentaryPatch_fu_471_grp_fu_1144_p_din1;
    grp_getSolveNextPatchPairWhileCondition_fu_545_ap_start <= grp_getSolveNextPatchPairWhileCondition_fu_545_ap_start_reg;
    grp_makePatch_alignedToLine_fu_504_ap_start <= grp_makePatch_alignedToLine_fu_504_ap_start_reg;

    grp_makePatch_alignedToLine_fu_504_apexZ0_assign_proc : process(apexZ0, ap_CS_fsm_state2, trunc_ln69_reg_1055, ap_CS_fsm_state62)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            grp_makePatch_alignedToLine_fu_504_apexZ0 <= trunc_ln69_reg_1055;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_makePatch_alignedToLine_fu_504_apexZ0 <= apexZ0;
        else 
            grp_makePatch_alignedToLine_fu_504_apexZ0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_makePatch_alignedToLine_fu_504_leftRight_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state62)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            grp_makePatch_alignedToLine_fu_504_leftRight <= ap_const_lv1_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_makePatch_alignedToLine_fu_504_leftRight <= ap_const_lv1_0;
        else 
            grp_makePatch_alignedToLine_fu_504_leftRight <= "X";
        end if; 
    end process;


    grp_makePatch_alignedToLine_fu_504_p_read_assign_proc : process(ppl, ppl_assign4_reg_911, ap_CS_fsm_state2, ap_CS_fsm_state62)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            grp_makePatch_alignedToLine_fu_504_p_read <= ppl_assign4_reg_911;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_makePatch_alignedToLine_fu_504_p_read <= ppl;
        else 
            grp_makePatch_alignedToLine_fu_504_p_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_makePatch_alignedToLine_fu_504_z_top_assign_proc : process(z_top_max_read, ap_CS_fsm_state2, select_ln892_reg_1068, ap_CS_fsm_state62)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            grp_makePatch_alignedToLine_fu_504_z_top <= select_ln892_reg_1068;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_makePatch_alignedToLine_fu_504_z_top <= z_top_max_read;
        else 
            grp_makePatch_alignedToLine_fu_504_z_top <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_makeThirdPatch_fu_444_ap_start <= grp_makeThirdPatch_fu_444_ap_start_reg;
    grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_dout0 <= grp_straightLineProjectorFromLayerIJtoK_fu_1148_ap_return;
    grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_dout0 <= grp_straightLineProjectorFromLayerIJtoK_fu_1156_ap_return;
    grp_solveComplmentaryPatch_fu_471_ap_start <= grp_solveComplmentaryPatch_fu_471_ap_start_reg;
    grp_solveComplmentaryPatch_fu_471_grp_fu_1144_p_dout0 <= grp_fu_1144_p2;
    grp_solveComplmentaryPatch_fu_471_grp_straightLineProjectorFromLayerIJtoK_fu_531_p_dout0 <= grp_straightLineProjectorFromLayerIJtoK_fu_531_ap_return;

    grp_straightLineProjectorFromLayerIJtoK_fu_1148_ap_ce_assign_proc : process(ap_CS_fsm_state116, grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_ce, ap_CS_fsm_state117)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state116) or (ap_const_logic_1 = ap_CS_fsm_state117))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_1148_ap_ce <= grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_ce;
        elsif (not((ap_const_boolean_1 = ap_const_boolean_1))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_1148_ap_ce <= ap_const_logic_0;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_1148_ap_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_straightLineProjectorFromLayerIJtoK_fu_1148_i <= grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din3;
    grp_straightLineProjectorFromLayerIJtoK_fu_1148_j <= grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din4;
    grp_straightLineProjectorFromLayerIJtoK_fu_1148_k <= grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din5;
    grp_straightLineProjectorFromLayerIJtoK_fu_1148_z_i <= grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din1;
    grp_straightLineProjectorFromLayerIJtoK_fu_1148_z_j <= grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din2;

    grp_straightLineProjectorFromLayerIJtoK_fu_1156_ap_ce_assign_proc : process(ap_CS_fsm_state116, grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_ce, ap_CS_fsm_state117)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state116) or (ap_const_logic_1 = ap_CS_fsm_state117))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_1156_ap_ce <= grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_ce;
        elsif (not((ap_const_boolean_1 = ap_const_boolean_1))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_1156_ap_ce <= ap_const_logic_0;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_1156_ap_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_straightLineProjectorFromLayerIJtoK_fu_1156_i <= grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din3;
    grp_straightLineProjectorFromLayerIJtoK_fu_1156_j <= grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din4;
    grp_straightLineProjectorFromLayerIJtoK_fu_1156_k <= grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din5;
    grp_straightLineProjectorFromLayerIJtoK_fu_1156_z_i <= grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din1;
    grp_straightLineProjectorFromLayerIJtoK_fu_1156_z_j <= grp_makeThirdPatch_fu_444_grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din2;

    grp_straightLineProjectorFromLayerIJtoK_fu_531_ap_ce_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state58, ap_CS_fsm_state59, ap_CS_fsm_state60, ap_CS_fsm_state61, ap_CS_fsm_state62, ap_CS_fsm_state64, ap_CS_fsm_state65, ap_CS_fsm_state67, ap_CS_fsm_state69, grp_solveComplmentaryPatch_fu_471_grp_straightLineProjectorFromLayerIJtoK_fu_531_p_ce, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state63, ap_CS_fsm_state66, ap_CS_fsm_state68, ap_CS_fsm_state70, ap_CS_fsm_state117)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state68))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_531_ap_ce <= grp_solveComplmentaryPatch_fu_471_grp_straightLineProjectorFromLayerIJtoK_fu_531_p_ce;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state117) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_531_ap_ce <= ap_const_logic_0;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_531_ap_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_531_i_assign_proc : process(ap_CS_fsm_state71, ap_CS_fsm_state12, ap_CS_fsm_state69, grp_solveComplmentaryPatch_fu_471_grp_straightLineProjectorFromLayerIJtoK_fu_531_p_din3, ap_CS_fsm_state68)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state68))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_531_i <= grp_solveComplmentaryPatch_fu_471_grp_straightLineProjectorFromLayerIJtoK_fu_531_p_din3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state71))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_531_i <= ap_const_lv3_5;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_531_i <= ap_const_lv3_5;
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_531_j_assign_proc : process(ap_CS_fsm_state71, ap_CS_fsm_state12, ap_CS_fsm_state69, grp_solveComplmentaryPatch_fu_471_grp_straightLineProjectorFromLayerIJtoK_fu_531_p_din4, ap_CS_fsm_state68)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state68))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_531_j <= grp_solveComplmentaryPatch_fu_471_grp_straightLineProjectorFromLayerIJtoK_fu_531_p_din4;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state71))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_531_j <= ap_const_lv3_1;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_531_j <= ap_const_lv3_1;
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_531_k_assign_proc : process(ap_CS_fsm_state71, ap_CS_fsm_state12, ap_CS_fsm_state69, grp_solveComplmentaryPatch_fu_471_grp_straightLineProjectorFromLayerIJtoK_fu_531_p_din5, ap_CS_fsm_state68)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state68))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_531_k <= grp_solveComplmentaryPatch_fu_471_grp_straightLineProjectorFromLayerIJtoK_fu_531_p_din5;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state71))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_531_k <= ap_const_lv3_0;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_531_k <= ap_const_lv3_0;
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_531_z_i_assign_proc : process(patches_parameters_q0, reg_573, ap_CS_fsm_state71, ap_CS_fsm_state12, ap_CS_fsm_state69, grp_solveComplmentaryPatch_fu_471_grp_straightLineProjectorFromLayerIJtoK_fu_531_p_din1, ap_CS_fsm_state68)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state68))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_531_z_i <= grp_solveComplmentaryPatch_fu_471_grp_straightLineProjectorFromLayerIJtoK_fu_531_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_531_z_i <= patches_parameters_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_531_z_i <= reg_573;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_531_z_i <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_531_z_j_assign_proc : process(patches_parameters_q1, ap_CS_fsm_state71, ap_CS_fsm_state12, ap_CS_fsm_state69, grp_solveComplmentaryPatch_fu_471_grp_straightLineProjectorFromLayerIJtoK_fu_531_p_din2, ap_CS_fsm_state68)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state68))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_531_z_j <= grp_solveComplmentaryPatch_fu_471_grp_straightLineProjectorFromLayerIJtoK_fu_531_p_din2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state71))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_531_z_j <= patches_parameters_q1;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_531_z_j <= patches_parameters_q1;
        end if; 
    end process;

    icmp_ln860_fu_607_p2 <= "1" when (unsigned(n_patches_i) > unsigned(ap_const_lv8_2)) else "0";
    icmp_ln865_fu_619_p2 <= "1" when (unsigned(i_reg_270) < unsigned(ap_const_lv3_5)) else "0";
    icmp_ln878_1_fu_797_p2 <= "1" when (signed(ret_reg_1080) < signed(ret_1_reg_1086)) else "0";
    icmp_ln878_fu_748_p2 <= "1" when (signed(trunc_ln69_1_reg_1062) > signed(ap_const_lv32_FD050F80)) else "0";
    icmp_ln880_fu_642_p2 <= "0" when (patches_parameters_q1 = ap_const_lv32_0) else "1";
    icmp_ln886_1_fu_663_p2 <= "1" when (signed(reg_573) > signed(ap_const_lv32_FD050F1C)) else "0";
    icmp_ln886_fu_631_p2 <= "1" when (signed(patches_parameters_q0) > signed(z_top_max_read)) else "0";
    icmp_ln889_fu_669_p2 <= "1" when (signed(reg_587) < signed(ap_const_lv32_E4E1C0)) else "0";
    icmp_ln892_fu_729_p2 <= "1" when (patches_parameters_q0 = ap_const_lv32_0) else "0";
    icmp_ln934_fu_840_p2 <= "1" when (signed(grp_solveComplmentaryPatch_fu_471_ap_return_2) > signed(ap_const_lv32_19)) else "0";
    lastPatchIndex_1_fu_846_p2 <= std_logic_vector(unsigned(n_patches_i) + unsigned(ap_const_lv8_FF));
    lastPatchIndex_fu_601_p2 <= std_logic_vector(unsigned(trunc_ln803_fu_597_p1) + unsigned(ap_const_lv5_1F));

    n_patches_o_assign_proc : process(n_patches_i, ap_CS_fsm_state2, ap_CS_fsm_state62, ap_CS_fsm_state69, grp_makeThirdPatch_fu_444_n_patches_o, grp_makeThirdPatch_fu_444_n_patches_o_ap_vld, grp_solveComplmentaryPatch_fu_471_n_patches_o, grp_solveComplmentaryPatch_fu_471_n_patches_o_ap_vld, grp_makePatch_alignedToLine_fu_504_n_patches_o, grp_makePatch_alignedToLine_fu_504_n_patches_o_ap_vld, ap_CS_fsm_state117, ap_predicate_op279_call_state69, madeComplementaryPatch_reg_430)
    begin
        if ((((grp_makePatch_alignedToLine_fu_504_n_patches_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state62)) or ((grp_makePatch_alignedToLine_fu_504_n_patches_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            n_patches_o <= grp_makePatch_alignedToLine_fu_504_n_patches_o;
        elsif (((grp_solveComplmentaryPatch_fu_471_n_patches_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state69) and (ap_predicate_op279_call_state69 = ap_const_boolean_1))) then 
            n_patches_o <= grp_solveComplmentaryPatch_fu_471_n_patches_o;
        elsif (((grp_makeThirdPatch_fu_444_n_patches_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state117) and (madeComplementaryPatch_reg_430 = ap_const_lv1_1))) then 
            n_patches_o <= grp_makeThirdPatch_fu_444_n_patches_o;
        else 
            n_patches_o <= n_patches_i;
        end if; 
    end process;


    n_patches_o_ap_vld_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state62, ap_CS_fsm_state69, grp_makeThirdPatch_fu_444_n_patches_o_ap_vld, grp_solveComplmentaryPatch_fu_471_n_patches_o_ap_vld, grp_makePatch_alignedToLine_fu_504_n_patches_o_ap_vld, ap_CS_fsm_state117, ap_predicate_op279_call_state69, madeComplementaryPatch_reg_430)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            n_patches_o_ap_vld <= grp_makePatch_alignedToLine_fu_504_n_patches_o_ap_vld;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state69) and (ap_predicate_op279_call_state69 = ap_const_boolean_1))) then 
            n_patches_o_ap_vld <= grp_solveComplmentaryPatch_fu_471_n_patches_o_ap_vld;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state117) and (madeComplementaryPatch_reg_430 = ap_const_lv1_1))) then 
            n_patches_o_ap_vld <= grp_makeThirdPatch_fu_444_n_patches_o_ap_vld;
        else 
            n_patches_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    notChoppedPatch_fu_652_p2 <= (icmp_ln880_reg_1021 or and_ln886_fu_648_p2);
    or_ln892_fu_743_p2 <= (repeat_original_reg_295 or icmp_ln892_reg_1050);

    patches_parameters_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state12, ap_CS_fsm_state58, ap_CS_fsm_state62, ap_CS_fsm_state67, ap_CS_fsm_state69, grp_makeThirdPatch_fu_444_patches_parameters_address0, grp_solveComplmentaryPatch_fu_471_patches_parameters_address0, grp_makePatch_alignedToLine_fu_504_patches_parameters_address0, ap_CS_fsm_state11, ap_CS_fsm_state63, ap_CS_fsm_state70, ap_CS_fsm_state117, grp_getSolveNextPatchPairWhileCondition_fu_545_patches_parameters_address0, ap_predicate_op279_call_state69, madeComplementaryPatch_reg_430)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            patches_parameters_address0 <= ap_const_lv64_D(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            patches_parameters_address0 <= ap_const_lv64_16(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            patches_parameters_address0 <= ap_const_lv64_10(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            patches_parameters_address0 <= ap_const_lv64_9(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            patches_parameters_address0 <= ap_const_lv64_F(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            patches_parameters_address0 <= grp_getSolveNextPatchPairWhileCondition_fu_545_patches_parameters_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_address0 <= grp_makePatch_alignedToLine_fu_504_patches_parameters_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state69) and (ap_predicate_op279_call_state69 = ap_const_boolean_1))) then 
            patches_parameters_address0 <= grp_solveComplmentaryPatch_fu_471_patches_parameters_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state117) and (madeComplementaryPatch_reg_430 = ap_const_lv1_1))) then 
            patches_parameters_address0 <= grp_makeThirdPatch_fu_444_patches_parameters_address0;
        else 
            patches_parameters_address0 <= "XXXXXXX";
        end if; 
    end process;


    patches_parameters_address1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state12, ap_CS_fsm_state69, grp_makeThirdPatch_fu_444_patches_parameters_address1, grp_solveComplmentaryPatch_fu_471_patches_parameters_address1, ap_CS_fsm_state11, ap_CS_fsm_state63, ap_CS_fsm_state70, ap_CS_fsm_state117, ap_predicate_op279_call_state69, madeComplementaryPatch_reg_430)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            patches_parameters_address1 <= ap_const_lv64_B(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            patches_parameters_address1 <= ap_const_lv64_14(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            patches_parameters_address1 <= ap_const_lv64_C(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            patches_parameters_address1 <= ap_const_lv64_D(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state69) and (ap_predicate_op279_call_state69 = ap_const_boolean_1))) then 
            patches_parameters_address1 <= grp_solveComplmentaryPatch_fu_471_patches_parameters_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state117) and (madeComplementaryPatch_reg_430 = ap_const_lv1_1))) then 
            patches_parameters_address1 <= grp_makeThirdPatch_fu_444_patches_parameters_address1;
        else 
            patches_parameters_address1 <= "XXXXXXX";
        end if; 
    end process;


    patches_parameters_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state12, ap_CS_fsm_state58, ap_CS_fsm_state62, ap_CS_fsm_state67, ap_CS_fsm_state69, grp_makeThirdPatch_fu_444_patches_parameters_ce0, grp_solveComplmentaryPatch_fu_471_patches_parameters_ce0, grp_makePatch_alignedToLine_fu_504_patches_parameters_ce0, ap_CS_fsm_state11, ap_CS_fsm_state63, ap_CS_fsm_state70, ap_CS_fsm_state117, grp_getSolveNextPatchPairWhileCondition_fu_545_patches_parameters_ce0, ap_predicate_op279_call_state69, madeComplementaryPatch_reg_430)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            patches_parameters_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            patches_parameters_ce0 <= grp_getSolveNextPatchPairWhileCondition_fu_545_patches_parameters_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_ce0 <= grp_makePatch_alignedToLine_fu_504_patches_parameters_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state69) and (ap_predicate_op279_call_state69 = ap_const_boolean_1))) then 
            patches_parameters_ce0 <= grp_solveComplmentaryPatch_fu_471_patches_parameters_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state117) and (madeComplementaryPatch_reg_430 = ap_const_lv1_1))) then 
            patches_parameters_ce0 <= grp_makeThirdPatch_fu_444_patches_parameters_ce0;
        else 
            patches_parameters_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    patches_parameters_ce1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state12, ap_CS_fsm_state69, grp_makeThirdPatch_fu_444_patches_parameters_ce1, grp_solveComplmentaryPatch_fu_471_patches_parameters_ce1, ap_CS_fsm_state11, ap_CS_fsm_state63, ap_CS_fsm_state70, ap_CS_fsm_state117, ap_predicate_op279_call_state69, madeComplementaryPatch_reg_430)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            patches_parameters_ce1 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state69) and (ap_predicate_op279_call_state69 = ap_const_boolean_1))) then 
            patches_parameters_ce1 <= grp_solveComplmentaryPatch_fu_471_patches_parameters_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state117) and (madeComplementaryPatch_reg_430 = ap_const_lv1_1))) then 
            patches_parameters_ce1 <= grp_makeThirdPatch_fu_444_patches_parameters_ce1;
        else 
            patches_parameters_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    patches_parameters_d0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state62, ap_CS_fsm_state69, grp_makeThirdPatch_fu_444_patches_parameters_d0, grp_solveComplmentaryPatch_fu_471_patches_parameters_d0, grp_makePatch_alignedToLine_fu_504_patches_parameters_d0, ap_CS_fsm_state117, ap_predicate_op279_call_state69, madeComplementaryPatch_reg_430)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_d0 <= grp_makePatch_alignedToLine_fu_504_patches_parameters_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state69) and (ap_predicate_op279_call_state69 = ap_const_boolean_1))) then 
            patches_parameters_d0 <= grp_solveComplmentaryPatch_fu_471_patches_parameters_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state117) and (madeComplementaryPatch_reg_430 = ap_const_lv1_1))) then 
            patches_parameters_d0 <= grp_makeThirdPatch_fu_444_patches_parameters_d0;
        else 
            patches_parameters_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    patches_parameters_d1 <= grp_makeThirdPatch_fu_444_patches_parameters_d1;

    patches_parameters_we0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state62, ap_CS_fsm_state69, grp_makeThirdPatch_fu_444_patches_parameters_we0, grp_solveComplmentaryPatch_fu_471_patches_parameters_we0, grp_makePatch_alignedToLine_fu_504_patches_parameters_we0, ap_CS_fsm_state117, ap_predicate_op279_call_state69, madeComplementaryPatch_reg_430)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_we0 <= grp_makePatch_alignedToLine_fu_504_patches_parameters_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state69) and (ap_predicate_op279_call_state69 = ap_const_boolean_1))) then 
            patches_parameters_we0 <= grp_solveComplmentaryPatch_fu_471_patches_parameters_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state117) and (madeComplementaryPatch_reg_430 = ap_const_lv1_1))) then 
            patches_parameters_we0 <= grp_makeThirdPatch_fu_444_patches_parameters_we0;
        else 
            patches_parameters_we0 <= ap_const_logic_0;
        end if; 
    end process;


    patches_parameters_we1_assign_proc : process(grp_makeThirdPatch_fu_444_patches_parameters_we1, ap_CS_fsm_state117, madeComplementaryPatch_reg_430)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state117) and (madeComplementaryPatch_reg_430 = ap_const_lv1_1))) then 
            patches_parameters_we1 <= grp_makeThirdPatch_fu_444_patches_parameters_we1;
        else 
            patches_parameters_we1 <= ap_const_logic_0;
        end if; 
    end process;


    patches_superpoints_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state59, ap_CS_fsm_state62, ap_CS_fsm_state69, grp_makeThirdPatch_fu_444_patches_superpoints_address0, grp_solveComplmentaryPatch_fu_471_patches_superpoints_address0, grp_makePatch_alignedToLine_fu_504_patches_superpoints_address0, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state117, grp_areWedgeSuperPointsEqual_fu_561_wsp2_address0, ap_predicate_op279_call_state69, madeComplementaryPatch_reg_430, zext_ln901_fu_725_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            patches_superpoints_address0 <= zext_ln901_fu_725_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            patches_superpoints_address0 <= grp_areWedgeSuperPointsEqual_fu_561_wsp2_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_superpoints_address0 <= grp_makePatch_alignedToLine_fu_504_patches_superpoints_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state69) and (ap_predicate_op279_call_state69 = ap_const_boolean_1))) then 
            patches_superpoints_address0 <= grp_solveComplmentaryPatch_fu_471_patches_superpoints_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state117) and (madeComplementaryPatch_reg_430 = ap_const_lv1_1))) then 
            patches_superpoints_address0 <= grp_makeThirdPatch_fu_444_patches_superpoints_address0;
        else 
            patches_superpoints_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    patches_superpoints_address1_assign_proc : process(ap_CS_fsm_state59, ap_CS_fsm_state69, grp_makeThirdPatch_fu_444_patches_superpoints_address1, grp_solveComplmentaryPatch_fu_471_patches_superpoints_address1, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state117, grp_areWedgeSuperPointsEqual_fu_561_wsp2_address1, ap_predicate_op279_call_state69, madeComplementaryPatch_reg_430, zext_ln891_2_fu_721_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            patches_superpoints_address1 <= zext_ln891_2_fu_721_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            patches_superpoints_address1 <= grp_areWedgeSuperPointsEqual_fu_561_wsp2_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state69) and (ap_predicate_op279_call_state69 = ap_const_boolean_1))) then 
            patches_superpoints_address1 <= grp_solveComplmentaryPatch_fu_471_patches_superpoints_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state117) and (madeComplementaryPatch_reg_430 = ap_const_lv1_1))) then 
            patches_superpoints_address1 <= grp_makeThirdPatch_fu_444_patches_superpoints_address1;
        else 
            patches_superpoints_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    patches_superpoints_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state59, ap_CS_fsm_state62, ap_CS_fsm_state69, grp_makeThirdPatch_fu_444_patches_superpoints_ce0, grp_solveComplmentaryPatch_fu_471_patches_superpoints_ce0, grp_makePatch_alignedToLine_fu_504_patches_superpoints_ce0, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state117, grp_areWedgeSuperPointsEqual_fu_561_wsp2_ce0, ap_predicate_op279_call_state69, madeComplementaryPatch_reg_430)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            patches_superpoints_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            patches_superpoints_ce0 <= grp_areWedgeSuperPointsEqual_fu_561_wsp2_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_superpoints_ce0 <= grp_makePatch_alignedToLine_fu_504_patches_superpoints_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state69) and (ap_predicate_op279_call_state69 = ap_const_boolean_1))) then 
            patches_superpoints_ce0 <= grp_solveComplmentaryPatch_fu_471_patches_superpoints_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state117) and (madeComplementaryPatch_reg_430 = ap_const_lv1_1))) then 
            patches_superpoints_ce0 <= grp_makeThirdPatch_fu_444_patches_superpoints_ce0;
        else 
            patches_superpoints_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    patches_superpoints_ce1_assign_proc : process(ap_CS_fsm_state59, ap_CS_fsm_state69, grp_makeThirdPatch_fu_444_patches_superpoints_ce1, grp_solveComplmentaryPatch_fu_471_patches_superpoints_ce1, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state117, grp_areWedgeSuperPointsEqual_fu_561_wsp2_ce1, ap_predicate_op279_call_state69, madeComplementaryPatch_reg_430)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            patches_superpoints_ce1 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            patches_superpoints_ce1 <= grp_areWedgeSuperPointsEqual_fu_561_wsp2_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state69) and (ap_predicate_op279_call_state69 = ap_const_boolean_1))) then 
            patches_superpoints_ce1 <= grp_solveComplmentaryPatch_fu_471_patches_superpoints_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state117) and (madeComplementaryPatch_reg_430 = ap_const_lv1_1))) then 
            patches_superpoints_ce1 <= grp_makeThirdPatch_fu_444_patches_superpoints_ce1;
        else 
            patches_superpoints_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    patches_superpoints_d0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state62, ap_CS_fsm_state69, grp_makeThirdPatch_fu_444_patches_superpoints_d0, grp_solveComplmentaryPatch_fu_471_patches_superpoints_d0, grp_makePatch_alignedToLine_fu_504_patches_superpoints_d0, ap_CS_fsm_state117, ap_predicate_op279_call_state69, madeComplementaryPatch_reg_430)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_superpoints_d0 <= grp_makePatch_alignedToLine_fu_504_patches_superpoints_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state69) and (ap_predicate_op279_call_state69 = ap_const_boolean_1))) then 
            patches_superpoints_d0 <= grp_solveComplmentaryPatch_fu_471_patches_superpoints_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state117) and (madeComplementaryPatch_reg_430 = ap_const_lv1_1))) then 
            patches_superpoints_d0 <= grp_makeThirdPatch_fu_444_patches_superpoints_d0;
        else 
            patches_superpoints_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    patches_superpoints_we0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state62, ap_CS_fsm_state69, grp_makeThirdPatch_fu_444_patches_superpoints_we0, grp_solveComplmentaryPatch_fu_471_patches_superpoints_we0, grp_makePatch_alignedToLine_fu_504_patches_superpoints_we0, ap_CS_fsm_state117, ap_predicate_op279_call_state69, madeComplementaryPatch_reg_430)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_superpoints_we0 <= grp_makePatch_alignedToLine_fu_504_patches_superpoints_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state69) and (ap_predicate_op279_call_state69 = ap_const_boolean_1))) then 
            patches_superpoints_we0 <= grp_solveComplmentaryPatch_fu_471_patches_superpoints_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state117) and (madeComplementaryPatch_reg_430 = ap_const_lv1_1))) then 
            patches_superpoints_we0 <= grp_makeThirdPatch_fu_444_patches_superpoints_we0;
        else 
            patches_superpoints_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ret_1_fu_791_p2 <= std_logic_vector(signed(sext_ln215_3_fu_783_p1) - signed(sext_ln215_4_fu_787_p1));
    ret_fu_777_p2 <= std_logic_vector(signed(sext_ln215_fu_769_p1) - signed(sext_ln215_2_fu_773_p1));
    select_ln892_fu_760_p3 <= 
        select_ln901_fu_753_p3 when (or_ln892_fu_743_p2(0) = '1') else 
        reg_580;
    select_ln901_fu_753_p3 <= 
        trunc_ln69_1_reg_1062 when (icmp_ln878_fu_748_p2(0) = '1') else 
        ap_const_lv32_FD050F80;
    sext_ln215_2_fu_773_p0 <= patches_parameters_q0;
        sext_ln215_2_fu_773_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln215_2_fu_773_p0),33));

        sext_ln215_3_fu_783_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_580),33));

    sext_ln215_4_fu_787_p0 <= patches_parameters_q1;
        sext_ln215_4_fu_787_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln215_4_fu_787_p0),33));

        sext_ln215_fu_769_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_573),33));

        sext_ln534_fu_807_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(white_space_height_fu_801_p3),64));

    squarePatch_alternate2_fu_636_p2 <= "0" when (patches_parameters_q0 = ap_const_lv32_0) else "1";
    thirdLastPatchIndex_fu_613_p2 <= std_logic_vector(unsigned(trunc_ln803_fu_597_p1) + unsigned(ap_const_lv5_1D));
    tmp_3_fu_698_p3 <= (lastPatchIndex_reg_978 & ap_const_lv4_0);
    tmp_fu_687_p3 <= (lastPatchIndex_reg_978 & ap_const_lv6_0);
    trunc_ln69_1_fu_739_p1 <= patches_superpoints_q0(32 - 1 downto 0);
    trunc_ln69_fu_735_p1 <= patches_superpoints_q1(32 - 1 downto 0);
    trunc_ln803_fu_597_p1 <= n_patches_i(5 - 1 downto 0);
    white_space_height_fu_801_p3 <= 
        ret_1_reg_1086 when (icmp_ln878_1_fu_797_p2(0) = '1') else 
        ret_reg_1080;
    xor_ln889_fu_657_p2 <= (notChoppedPatch_fu_652_p2 xor ap_const_lv1_1);
    zext_ln891_1_fu_705_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_698_p3),12));
    zext_ln891_2_fu_721_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln891_reg_1030),64));
    zext_ln891_fu_694_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_687_p3),12));
    zext_ln901_fu_725_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln901_reg_1035),64));
end behav;
