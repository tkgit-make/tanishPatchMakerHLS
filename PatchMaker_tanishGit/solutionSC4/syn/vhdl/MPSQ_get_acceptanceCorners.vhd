-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity MPSQ_get_acceptanceCorners is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    wp_parameters_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    wp_parameters_ce0 : OUT STD_LOGIC;
    wp_parameters_we0 : OUT STD_LOGIC;
    wp_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    wp_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    wp_parameters_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    wp_parameters_ce1 : OUT STD_LOGIC;
    wp_parameters_we1 : OUT STD_LOGIC;
    wp_parameters_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    wp_parameters_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of MPSQ_get_acceptanceCorners is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (18 downto 0) := "0000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (18 downto 0) := "0000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (18 downto 0) := "0000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (18 downto 0) := "0000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (18 downto 0) := "0000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (18 downto 0) := "0001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (18 downto 0) := "0010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (18 downto 0) := "0100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (18 downto 0) := "1000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_FA0A1F00 : STD_LOGIC_VECTOR (31 downto 0) := "11111010000010100001111100000000";
    constant ap_const_lv32_5F5E100 : STD_LOGIC_VECTOR (31 downto 0) := "00000101111101011110000100000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv64_54 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001010100";
    constant ap_const_lv64_4E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001001110";
    constant ap_const_lv64_48 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001001000";
    constant ap_const_lv64_5A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001011010";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_30 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110000";
    constant ap_const_lv64_31 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110001";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_36 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110110";
    constant ap_const_lv64_37 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110111";
    constant ap_const_lv64_3C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111100";
    constant ap_const_lv64_3D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111101";
    constant ap_const_lv64_42 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001000010";
    constant ap_const_lv64_43 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001000011";
    constant ap_const_lv64_12 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010010";
    constant ap_const_lv64_13 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010011";
    constant ap_const_lv64_14 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010100";
    constant ap_const_lv64_15 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal wp_parameters_addr_reg_513 : STD_LOGIC_VECTOR (6 downto 0);
    signal wp_parameters_addr_6_reg_519 : STD_LOGIC_VECTOR (6 downto 0);
    signal wp_parameters_addr_7_reg_524 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal wp_parameters_addr_8_reg_530 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln248_fu_341_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln248_reg_607 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal wp_parameters_addr_22_reg_622 : STD_LOGIC_VECTOR (6 downto 0);
    signal wp_parameters_addr_23_reg_627 : STD_LOGIC_VECTOR (6 downto 0);
    signal a_corner_min_V_1_fu_427_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_corner_min_V_1_reg_635 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal b_corner_min_V_2_fu_441_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_corner_min_V_2_reg_640 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_corner_max_V_1_fu_455_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal d_corner_max_V_2_fu_469_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal wp_parameters_load_reg_655 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal wp_parameters_load_1_reg_661 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln874_fu_477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln874_reg_666 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal icmp_ln886_8_fu_501_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_8_reg_679 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal icmp_ln878_10_fu_507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_10_reg_683 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal i_reg_263 : STD_LOGIC_VECTOR (2 downto 0);
    signal d_corner_max_V_reg_274 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_corner_max_V_reg_287 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_corner_min_V_reg_300 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_corner_min_V_reg_314 : STD_LOGIC_VECTOR (31 downto 0);
    signal arrayidx1756319_load_0_reg_327 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln878_fu_377_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln878_1_fu_388_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln886_fu_399_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln886_1_fu_410_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln248_fu_415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal icmp_ln874_1_fu_483_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal icmp_ln874_2_fu_489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal icmp_ln874_3_fu_495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal tmp_fu_347_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_fu_359_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln878_fu_355_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln878_1_fu_367_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln878_fu_371_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln878_fu_382_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln886_fu_393_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln886_1_fu_404_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln878_fu_421_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_9_fu_435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_fu_449_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_7_fu_463_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    a_corner_min_V_reg_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                a_corner_min_V_reg_314 <= a_corner_min_V_1_reg_635;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                a_corner_min_V_reg_314 <= ap_const_lv32_5F5E100;
            end if; 
        end if;
    end process;

    arrayidx1756319_load_0_reg_327_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln886_8_fu_501_p2 = ap_const_lv1_0))) then 
                arrayidx1756319_load_0_reg_327 <= c_corner_max_V_reg_287;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state18) and (icmp_ln886_8_reg_679 = ap_const_lv1_1))) then 
                arrayidx1756319_load_0_reg_327 <= b_corner_min_V_reg_300;
            end if; 
        end if;
    end process;

    b_corner_min_V_reg_300_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                b_corner_min_V_reg_300 <= b_corner_min_V_2_reg_640;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                b_corner_min_V_reg_300 <= ap_const_lv32_5F5E100;
            end if; 
        end if;
    end process;

    c_corner_max_V_reg_287_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                c_corner_max_V_reg_287 <= c_corner_max_V_1_fu_455_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                c_corner_max_V_reg_287 <= ap_const_lv32_FA0A1F00;
            end if; 
        end if;
    end process;

    d_corner_max_V_reg_274_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                d_corner_max_V_reg_274 <= d_corner_max_V_2_fu_469_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                d_corner_max_V_reg_274 <= ap_const_lv32_FA0A1F00;
            end if; 
        end if;
    end process;

    i_reg_263_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                i_reg_263 <= add_ln248_reg_607;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                i_reg_263 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                a_corner_min_V_1_reg_635 <= a_corner_min_V_1_fu_427_p3;
                b_corner_min_V_2_reg_640 <= b_corner_min_V_2_fu_441_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln248_reg_607 <= add_ln248_fu_341_p2;
                    wp_parameters_addr_22_reg_622(6 downto 1) <= zext_ln886_fu_399_p1(7 - 1 downto 0)(6 downto 1);
                    wp_parameters_addr_23_reg_627(6 downto 1) <= zext_ln886_1_fu_410_p1(7 - 1 downto 0)(6 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                icmp_ln874_reg_666 <= icmp_ln874_fu_477_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                icmp_ln878_10_reg_683 <= icmp_ln878_10_fu_507_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                icmp_ln886_8_reg_679 <= icmp_ln886_8_fu_501_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                wp_parameters_load_1_reg_661 <= wp_parameters_q0;
                wp_parameters_load_reg_655 <= wp_parameters_q1;
            end if;
        end if;
    end process;
    wp_parameters_addr_22_reg_622(0) <= '0';
    wp_parameters_addr_23_reg_627(0) <= '1';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, icmp_ln886_8_fu_501_p2, ap_CS_fsm_state16, icmp_ln248_fu_415_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln248_fu_415_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln886_8_fu_501_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    a_corner_min_V_1_fu_427_p3 <= 
        wp_parameters_q1 when (icmp_ln878_fu_421_p2(0) = '1') else 
        a_corner_min_V_reg_314;
    add_ln248_fu_341_p2 <= std_logic_vector(unsigned(i_reg_263) + unsigned(ap_const_lv3_1));
    add_ln886_1_fu_404_p2 <= std_logic_vector(signed(sub_ln878_fu_371_p2) + signed(ap_const_lv7_3));
    add_ln886_fu_393_p2 <= std_logic_vector(signed(sub_ln878_fu_371_p2) + signed(ap_const_lv7_2));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    b_corner_min_V_2_fu_441_p3 <= 
        wp_parameters_q0 when (icmp_ln878_9_fu_435_p2(0) = '1') else 
        b_corner_min_V_reg_300;
    c_corner_max_V_1_fu_455_p3 <= 
        wp_parameters_q1 when (icmp_ln886_fu_449_p2(0) = '1') else 
        c_corner_max_V_reg_287;
    d_corner_max_V_2_fu_469_p3 <= 
        wp_parameters_q0 when (icmp_ln886_7_fu_463_p2(0) = '1') else 
        d_corner_max_V_reg_274;
    icmp_ln248_fu_415_p2 <= "1" when (i_reg_263 = ap_const_lv3_4) else "0";
    icmp_ln874_1_fu_483_p2 <= "1" when (b_corner_min_V_reg_300 = wp_parameters_q1) else "0";
    icmp_ln874_2_fu_489_p2 <= "1" when (c_corner_max_V_reg_287 = wp_parameters_q0) else "0";
    icmp_ln874_3_fu_495_p2 <= "1" when (d_corner_max_V_reg_274 = wp_parameters_q1) else "0";
    icmp_ln874_fu_477_p2 <= "1" when (a_corner_min_V_reg_314 = wp_parameters_q1) else "0";
    icmp_ln878_10_fu_507_p2 <= "1" when (signed(b_corner_min_V_reg_300) < signed(d_corner_max_V_reg_274)) else "0";
    icmp_ln878_9_fu_435_p2 <= "1" when (signed(wp_parameters_q0) < signed(b_corner_min_V_reg_300)) else "0";
    icmp_ln878_fu_421_p2 <= "1" when (signed(wp_parameters_q1) < signed(a_corner_min_V_reg_314)) else "0";
    icmp_ln886_7_fu_463_p2 <= "1" when (signed(wp_parameters_q0) > signed(d_corner_max_V_reg_274)) else "0";
    icmp_ln886_8_fu_501_p2 <= "1" when (signed(c_corner_max_V_reg_287) > signed(a_corner_min_V_reg_314)) else "0";
    icmp_ln886_fu_449_p2 <= "1" when (signed(wp_parameters_q1) > signed(c_corner_max_V_reg_287)) else "0";
    or_ln878_fu_382_p2 <= (sub_ln878_fu_371_p2 or ap_const_lv7_1);
        sext_ln878_1_fu_388_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(or_ln878_fu_382_p2),64));

        sext_ln878_fu_377_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln878_fu_371_p2),64));

    sub_ln878_fu_371_p2 <= std_logic_vector(unsigned(zext_ln878_fu_355_p1) - unsigned(zext_ln878_1_fu_367_p1));
    tmp_fu_347_p3 <= (i_reg_263 & ap_const_lv3_0);
    tmp_s_fu_359_p3 <= (i_reg_263 & ap_const_lv1_0);
    wp_parameters_addr_6_reg_519 <= ap_const_lv64_4E(7 - 1 downto 0);
    wp_parameters_addr_7_reg_524 <= ap_const_lv64_48(7 - 1 downto 0);
    wp_parameters_addr_8_reg_530 <= ap_const_lv64_5A(7 - 1 downto 0);
    wp_parameters_addr_reg_513 <= ap_const_lv64_54(7 - 1 downto 0);

    wp_parameters_address0_assign_proc : process(ap_CS_fsm_state1, wp_parameters_addr_6_reg_519, ap_CS_fsm_state2, wp_parameters_addr_8_reg_530, ap_CS_fsm_state3, wp_parameters_addr_23_reg_627, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state16, ap_CS_fsm_state18, sext_ln878_1_fu_388_p1, icmp_ln248_fu_415_p2, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            wp_parameters_address0 <= wp_parameters_addr_8_reg_530;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            wp_parameters_address0 <= ap_const_lv64_48(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            wp_parameters_address0 <= ap_const_lv64_14(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            wp_parameters_address0 <= wp_parameters_addr_6_reg_519;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            wp_parameters_address0 <= ap_const_lv64_54(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            wp_parameters_address0 <= ap_const_lv64_3C(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            wp_parameters_address0 <= ap_const_lv64_43(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            wp_parameters_address0 <= ap_const_lv64_3D(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            wp_parameters_address0 <= ap_const_lv64_31(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            wp_parameters_address0 <= wp_parameters_addr_23_reg_627;
        elsif (((icmp_ln248_fu_415_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            wp_parameters_address0 <= ap_const_lv64_5(7 - 1 downto 0);
        elsif (((icmp_ln248_fu_415_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            wp_parameters_address0 <= sext_ln878_1_fu_388_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            wp_parameters_address0 <= ap_const_lv64_5A(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            wp_parameters_address0 <= ap_const_lv64_4E(7 - 1 downto 0);
        else 
            wp_parameters_address0 <= "XXXXXXX";
        end if; 
    end process;


    wp_parameters_address1_assign_proc : process(ap_CS_fsm_state1, wp_parameters_addr_reg_513, wp_parameters_addr_7_reg_524, ap_CS_fsm_state2, ap_CS_fsm_state3, wp_parameters_addr_22_reg_622, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state16, ap_CS_fsm_state18, sext_ln878_fu_377_p1, icmp_ln248_fu_415_p2, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            wp_parameters_address1 <= ap_const_lv64_31(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            wp_parameters_address1 <= ap_const_lv64_5A(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            wp_parameters_address1 <= ap_const_lv64_15(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            wp_parameters_address1 <= wp_parameters_addr_7_reg_524;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            wp_parameters_address1 <= wp_parameters_addr_reg_513;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            wp_parameters_address1 <= ap_const_lv64_13(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            wp_parameters_address1 <= ap_const_lv64_42(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            wp_parameters_address1 <= ap_const_lv64_36(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            wp_parameters_address1 <= ap_const_lv64_30(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            wp_parameters_address1 <= ap_const_lv64_37(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            wp_parameters_address1 <= ap_const_lv64_12(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            wp_parameters_address1 <= wp_parameters_addr_22_reg_622;
        elsif (((icmp_ln248_fu_415_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            wp_parameters_address1 <= ap_const_lv64_4(7 - 1 downto 0);
        elsif (((icmp_ln248_fu_415_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            wp_parameters_address1 <= sext_ln878_fu_377_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            wp_parameters_address1 <= ap_const_lv64_48(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            wp_parameters_address1 <= ap_const_lv64_54(7 - 1 downto 0);
        else 
            wp_parameters_address1 <= "XXXXXXX";
        end if; 
    end process;


    wp_parameters_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state16, ap_CS_fsm_state18, icmp_ln248_fu_415_p2, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((icmp_ln248_fu_415_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((icmp_ln248_fu_415_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            wp_parameters_ce0 <= ap_const_logic_1;
        else 
            wp_parameters_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    wp_parameters_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state16, ap_CS_fsm_state18, icmp_ln248_fu_415_p2, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((icmp_ln248_fu_415_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((icmp_ln248_fu_415_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            wp_parameters_ce1 <= ap_const_logic_1;
        else 
            wp_parameters_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    wp_parameters_d0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, wp_parameters_load_reg_655, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state16, ap_CS_fsm_state18, d_corner_max_V_reg_274, c_corner_max_V_reg_287, b_corner_min_V_reg_300, a_corner_min_V_reg_314, arrayidx1756319_load_0_reg_327, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            wp_parameters_d0 <= arrayidx1756319_load_0_reg_327;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            wp_parameters_d0 <= b_corner_min_V_reg_300;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            wp_parameters_d0 <= wp_parameters_load_reg_655;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            wp_parameters_d0 <= d_corner_max_V_reg_274;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            wp_parameters_d0 <= c_corner_max_V_reg_287;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            wp_parameters_d0 <= a_corner_min_V_reg_314;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            wp_parameters_d0 <= ap_const_lv32_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            wp_parameters_d0 <= ap_const_lv32_1;
        else 
            wp_parameters_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    wp_parameters_d1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, wp_parameters_load_reg_655, wp_parameters_load_1_reg_661, ap_CS_fsm_state7, ap_CS_fsm_state16, ap_CS_fsm_state18, b_corner_min_V_reg_300, arrayidx1756319_load_0_reg_327, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            wp_parameters_d1 <= arrayidx1756319_load_0_reg_327;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            wp_parameters_d1 <= ap_const_lv32_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            wp_parameters_d1 <= wp_parameters_load_1_reg_661;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            wp_parameters_d1 <= wp_parameters_load_reg_655;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            wp_parameters_d1 <= b_corner_min_V_reg_300;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            wp_parameters_d1 <= ap_const_lv32_1;
        else 
            wp_parameters_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    wp_parameters_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state6, icmp_ln874_reg_666, ap_CS_fsm_state7, ap_CS_fsm_state16, icmp_ln878_10_fu_507_p2, icmp_ln878_10_reg_683, ap_CS_fsm_state18, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, icmp_ln874_1_fu_483_p2, ap_CS_fsm_state14, icmp_ln874_2_fu_489_p2, icmp_ln874_3_fu_495_p2, ap_CS_fsm_state17, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln878_10_reg_683 = ap_const_lv1_1)) or ((icmp_ln874_3_fu_495_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((icmp_ln874_2_fu_489_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((icmp_ln874_1_fu_483_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln874_reg_666 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln874_reg_666 = ap_const_lv1_0)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state18) and (icmp_ln878_10_fu_507_p2 = ap_const_lv1_1)))) then 
            wp_parameters_we0 <= ap_const_logic_1;
        else 
            wp_parameters_we0 <= ap_const_logic_0;
        end if; 
    end process;


    wp_parameters_we1_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln886_8_reg_679, ap_CS_fsm_state16, icmp_ln878_10_reg_683, ap_CS_fsm_state18, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state12, icmp_ln874_1_fu_483_p2, ap_CS_fsm_state14, icmp_ln874_2_fu_489_p2, icmp_ln874_3_fu_495_p2, ap_CS_fsm_state17, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln878_10_reg_683 = ap_const_lv1_1)) or ((icmp_ln874_3_fu_495_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((icmp_ln874_2_fu_489_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((icmp_ln874_1_fu_483_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state18) and (icmp_ln886_8_reg_679 = ap_const_lv1_1)))) then 
            wp_parameters_we1 <= ap_const_logic_1;
        else 
            wp_parameters_we1 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln878_1_fu_367_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_359_p3),7));
    zext_ln878_fu_355_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_347_p3),7));
    zext_ln886_1_fu_410_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln886_1_fu_404_p2),64));
    zext_ln886_fu_399_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln886_fu_393_p2),64));
end behav;
