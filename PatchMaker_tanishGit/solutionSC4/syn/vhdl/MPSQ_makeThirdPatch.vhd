-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity MPSQ_makeThirdPatch is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    n_patches_i : IN STD_LOGIC_VECTOR (7 downto 0);
    n_patches_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    n_patches_o_ap_vld : OUT STD_LOGIC;
    GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    GDn_points_ce0 : OUT STD_LOGIC;
    GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    lastPatchIndex : IN STD_LOGIC_VECTOR (7 downto 0);
    z_top_min : IN STD_LOGIC_VECTOR (31 downto 0);
    z_top_max : IN STD_LOGIC_VECTOR (31 downto 0);
    complementary_apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
    apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
    ppl : IN STD_LOGIC_VECTOR (31 downto 0);
    GDarrayDecoded_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    GDarrayDecoded_ce0 : OUT STD_LOGIC;
    GDarrayDecoded_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    patches_superpoints_ce0 : OUT STD_LOGIC;
    patches_superpoints_we0 : OUT STD_LOGIC;
    patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    patches_superpoints_ce1 : OUT STD_LOGIC;
    patches_superpoints_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_parameters_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    patches_parameters_ce0 : OUT STD_LOGIC;
    patches_parameters_we0 : OUT STD_LOGIC;
    patches_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    patches_parameters_ce1 : OUT STD_LOGIC;
    patches_parameters_we1 : OUT STD_LOGIC;
    patches_parameters_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din3 : OUT STD_LOGIC_VECTOR (2 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din4 : OUT STD_LOGIC_VECTOR (2 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din5 : OUT STD_LOGIC_VECTOR (2 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_ce : OUT STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_start : OUT STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_ready : IN STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_done : IN STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_idle : IN STD_LOGIC );
end;


architecture behav of MPSQ_makeThirdPatch is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (80 downto 0) := "000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (80 downto 0) := "000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (80 downto 0) := "000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (80 downto 0) := "000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (80 downto 0) := "000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (80 downto 0) := "000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (80 downto 0) := "000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (80 downto 0) := "000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (80 downto 0) := "000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (80 downto 0) := "001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (80 downto 0) := "010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (80 downto 0) := "100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv64_2A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101010";
    constant ap_const_lv64_1E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011110";
    constant ap_const_lv64_24 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100100";
    constant ap_const_lv64_18 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011000";
    constant ap_const_lv32_FFF0BDC0 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111100001011110111000000";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv9_20 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_const_lv9_C0 : STD_LOGIC_VECTOR (8 downto 0) := "011000000";
    constant ap_const_lv9_8 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_const_lv9_30 : STD_LOGIC_VECTOR (8 downto 0) := "000110000";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_11E1A2FF : STD_LOGIC_VECTOR (31 downto 0) := "00010001111000011010001011111111";
    constant ap_const_lv33_1FFFFFF9C : STD_LOGIC_VECTOR (32 downto 0) := "111111111111111111111111110011100";
    constant ap_const_lv33_32 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000110010";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv32_E4E1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000111001001110000111000000";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_FD : STD_LOGIC_VECTOR (7 downto 0) := "11111101";
    constant ap_const_boolean_0 : BOOLEAN := false;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_straightLineProjectorFromLayerIJtoK_fu_538_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_564 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal reg_568 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal makeHorizontallyShiftedPatch_reg_427 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal empty_fu_579_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_reg_1382 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln996_fu_584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln996_reg_1388 : STD_LOGIC_VECTOR (0 downto 0);
    signal secondLastPatchIndex_fu_590_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal secondLastPatchIndex_reg_1399 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal secondLastPatchIndex_1_fu_595_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal secondLastPatchIndex_1_reg_1404 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal xor_ln1009_fu_602_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1009_reg_1409 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1011_fu_608_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln1011_reg_1414 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal original_topR_jL_V_reg_1444 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln1012_fu_660_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1012_reg_1451 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal patches_parameters_addr_9_reg_1483 : STD_LOGIC_VECTOR (8 downto 0);
    signal patches_parameters_addr_14_reg_1488 : STD_LOGIC_VECTOR (8 downto 0);
    signal patches_parameters_addr_15_reg_1493 : STD_LOGIC_VECTOR (8 downto 0);
    signal phitmp_fu_791_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal original_topL_jL_V_3_reg_1503 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal icmp_ln886_2_fu_797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_2_reg_1512 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal icmp_ln878_2_fu_813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_2_reg_1516 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp4_fu_835_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal complementary_topR_jR_V_3_reg_1525 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal and_ln1022_fu_863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1022_reg_1534 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal phitmp3_fu_885_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal complementary_topL_jR_V_3_reg_1543 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal icmp_ln886_4_fu_891_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_4_reg_1552 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal icmp_ln878_4_fu_907_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_4_reg_1556 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp5_fu_929_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal or_ln1082_fu_935_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1082_reg_1579 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1082_2_fu_951_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1082_2_reg_1584 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal complementary_topR_jL_V_reg_1589 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal complementary_topL_jL_V_reg_1594 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_5_fu_957_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_5_reg_1599 : STD_LOGIC_VECTOR (0 downto 0);
    signal horizontalShiftTop_fu_963_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal horizontalShiftBottom_fu_967_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1062_fu_997_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shiftOriginal_1_fu_1001_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shiftOriginal_1_reg_1631 : STD_LOGIC_VECTOR (0 downto 0);
    signal lnot_fu_1011_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lnot_reg_1645 : STD_LOGIC_VECTOR (0 downto 0);
    signal newZtop_V_1_fu_1017_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newZtop_V_1_reg_1650 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1050_fu_1023_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal or_ln1082_1_fu_1043_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1082_1_reg_1662 : STD_LOGIC_VECTOR (0 downto 0);
    signal loopCounter_2_fu_1048_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loopCounter_2_reg_1666 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln1082_2_fu_1062_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1082_2_reg_1671 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1082_1_fu_1101_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1082_1_reg_1675 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln534_fu_1113_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln534_reg_1679 : STD_LOGIC_VECTOR (31 downto 0);
    signal shifted_Align_5_fu_1136_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal shifted_Align_5_reg_1684 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1050_1_fu_1143_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1050_1_reg_1689 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln1102_fu_1151_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1102_reg_1695 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal grp_makePatch_alignedToLine_fu_484_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ppl_assign1_reg_1700 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal add_ln1108_fu_1162_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1108_reg_1705 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal complementary_topR_jR_V_4_fu_1168_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topR_jR_V_4_reg_1710 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal complementary_topL_jR_V_4_fu_1175_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topL_jR_V_4_reg_1717 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topR_jR_V_3_fu_1182_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topR_jR_V_3_reg_1724 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topL_jR_V_3_fu_1189_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topL_jR_V_3_reg_1731 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topL_jL_V_4_fu_1196_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topL_jL_V_4_reg_1737 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal original_topR_jL_V_3_fu_1203_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topR_jL_V_3_reg_1744 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topR_jL_V_3_fu_1210_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topR_jL_V_3_reg_1751 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topL_jL_V_3_fu_1217_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topL_jL_V_3_reg_1757 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_17_fu_1224_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_17_reg_1763 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal sext_ln215_18_fu_1227_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_18_reg_1768 : STD_LOGIC_VECTOR (32 downto 0);
    signal horizontalShiftTop_1_fu_1230_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal horizontalShiftTop_1_reg_1773 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_19_fu_1234_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_19_reg_1778 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_20_fu_1237_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_20_reg_1783 : STD_LOGIC_VECTOR (32 downto 0);
    signal horizontalShiftBottom_1_fu_1240_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal horizontalShiftBottom_1_reg_1788 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln878_6_fu_1244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_6_reg_1793 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal horizontalOverlapTop_V_1_fu_1280_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal horizontalOverlapTop_V_1_reg_1797 : STD_LOGIC_VECTOR (31 downto 0);
    signal horizontalOverlapBottom_V_1_fu_1318_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal horizontalOverlapBottom_V_1_reg_1802 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln1157_fu_1346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1157_reg_1810 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state78 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal icmp_ln1159_fu_1351_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1159_reg_1814 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln1161_fu_1363_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1161_reg_1818 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state80 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal grp_makePatch_alignedToLine_fu_484_ap_start : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_484_ap_done : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_484_ap_idle : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_484_ap_ready : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_484_n_patches_o : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_makePatch_alignedToLine_fu_484_n_patches_o_ap_vld : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_484_GDn_points_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_makePatch_alignedToLine_fu_484_GDn_points_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_484_GDarrayDecoded_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_makePatch_alignedToLine_fu_484_GDarrayDecoded_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_484_patches_superpoints_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_makePatch_alignedToLine_fu_484_patches_superpoints_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_484_patches_superpoints_we0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_484_patches_superpoints_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_makePatch_alignedToLine_fu_484_patches_parameters_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_makePatch_alignedToLine_fu_484_patches_parameters_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_484_patches_parameters_we0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_484_patches_parameters_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makePatch_alignedToLine_fu_484_patches_parameters_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_makePatch_alignedToLine_fu_484_patches_parameters_ce1 : STD_LOGIC;
    signal grp_getShadows_fu_509_ap_start : STD_LOGIC;
    signal grp_getShadows_fu_509_ap_done : STD_LOGIC;
    signal grp_getShadows_fu_509_ap_idle : STD_LOGIC;
    signal grp_getShadows_fu_509_ap_ready : STD_LOGIC;
    signal grp_getShadows_fu_509_wp_superpoints_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_getShadows_fu_509_wp_superpoints_ce0 : STD_LOGIC;
    signal grp_getShadows_fu_509_wp_superpoints_offset : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_getShadows_fu_509_wp_parameters_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_getShadows_fu_509_wp_parameters_ce0 : STD_LOGIC;
    signal grp_getShadows_fu_509_wp_parameters_we0 : STD_LOGIC;
    signal grp_getShadows_fu_509_wp_parameters_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getShadows_fu_509_wp_parameters_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_getShadows_fu_509_wp_parameters_ce1 : STD_LOGIC;
    signal grp_getShadows_fu_509_wp_parameters_we1 : STD_LOGIC;
    signal grp_getShadows_fu_509_wp_parameters_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getShadows_fu_509_wp_parameters_offset : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_delete_patch_fu_526_ap_start : STD_LOGIC;
    signal grp_delete_patch_fu_526_ap_done : STD_LOGIC;
    signal grp_delete_patch_fu_526_ap_idle : STD_LOGIC;
    signal grp_delete_patch_fu_526_ap_ready : STD_LOGIC;
    signal grp_delete_patch_fu_526_n_patches : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_delete_patch_fu_526_n_patches_ap_vld : STD_LOGIC;
    signal grp_delete_patch_fu_526_index : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_delete_patch_fu_526_patches_superpoints_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_delete_patch_fu_526_patches_superpoints_ce0 : STD_LOGIC;
    signal grp_delete_patch_fu_526_patches_superpoints_we0 : STD_LOGIC;
    signal grp_delete_patch_fu_526_patches_superpoints_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_delete_patch_fu_526_patches_superpoints_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_delete_patch_fu_526_patches_superpoints_ce1 : STD_LOGIC;
    signal grp_delete_patch_fu_526_patches_parameters_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_delete_patch_fu_526_patches_parameters_ce0 : STD_LOGIC;
    signal grp_delete_patch_fu_526_patches_parameters_we0 : STD_LOGIC;
    signal grp_delete_patch_fu_526_patches_parameters_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_delete_patch_fu_526_patches_parameters_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_delete_patch_fu_526_patches_parameters_ce1 : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_538_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_538_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_538_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_538_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_538_ap_ce : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_538_z_i : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_538_z_j : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_538_i : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_538_j : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_538_k : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_65_reg_254 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_66_reg_266 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_67_reg_281 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal empty_68_reg_293 : STD_LOGIC_VECTOR (0 downto 0);
    signal ppl_assign_0_reg_307 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal icmp_ln1147_fu_1334_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_69_reg_317 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_70_reg_326 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topR_jR_V_reg_335 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topL_jL_V_reg_345 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topR_jL_V_1_reg_355 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topL_jR_V_reg_365 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topR_jL_V_1_reg_375 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topL_jL_V_1_reg_385 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topR_jR_V_1_reg_395 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topL_jR_V_1_reg_405 : STD_LOGIC_VECTOR (31 downto 0);
    signal newZtop_V_reg_415 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_432_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal shifted_Align_2_reg_441 : STD_LOGIC_VECTOR (63 downto 0);
    signal loopCounter_reg_451 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_ln166_reg_463 : STD_LOGIC_VECTOR (31 downto 0);
    signal agg_tmp178_0_reg_473 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makePatch_alignedToLine_fu_484_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal grp_getShadows_fu_509_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal grp_delete_patch_fu_526_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal ap_CS_fsm_state81 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state81 : signal is "none";
    signal grp_straightLineProjectorFromLayerIJtoK_fu_538_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (80 downto 0);
    signal ap_NS_fsm_state7 : STD_LOGIC;
    signal ap_NS_fsm_state17 : STD_LOGIC;
    signal ap_NS_fsm_state27 : STD_LOGIC;
    signal ap_NS_fsm_state37 : STD_LOGIC;
    signal ap_NS_fsm_state44 : STD_LOGIC;
    signal ap_NS_fsm_state45 : STD_LOGIC;
    signal ap_NS_fsm_state64 : STD_LOGIC;
    signal ap_NS_fsm_state72 : STD_LOGIC;
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal zext_ln1011_2_fu_643_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1015_fu_686_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1035_2_fu_728_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1036_2_fu_770_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal horizontalOverlapBottom_V_fu_134 : STD_LOGIC_VECTOR (31 downto 0);
    signal horizontalOverlapTop_V_fu_138 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal tmp_fu_615_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_626_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1011_fu_622_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1011_1_fu_633_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1011_fu_637_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln886_fu_648_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln878_fu_654_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_fu_648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_fu_654_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1015_fu_666_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln1015_1_fu_673_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1015_fu_680_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln1035_fu_691_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_12_fu_698_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_710_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1035_fu_706_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1035_1_fu_718_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1035_fu_722_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln1036_fu_733_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_14_fu_740_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_752_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1036_fu_748_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1036_1_fu_760_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1036_fu_764_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_16_fu_775_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_573_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln180_fu_783_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_2_fu_797_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_12_fu_804_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_fu_801_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_12_fu_804_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_fu_807_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_17_fu_819_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln180_4_fu_827_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_14_fu_844_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_13_fu_841_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_14_fu_844_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_7_fu_847_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln878_3_fu_859_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_3_fu_853_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_3_fu_859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_869_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln180_5_fu_877_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_4_fu_891_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_16_fu_898_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_15_fu_895_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_16_fu_898_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_8_fu_901_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_19_fu_913_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln180_6_fu_921_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_971_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal shifted_Align_fu_979_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shifted_Align_fu_979_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shifted_Align_1_fu_991_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shifted_Align_fu_979_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal shifted_Align_1_fu_991_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal shiftOriginal_fu_985_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i301_not_fu_1006_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_1027_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln1082_fu_1037_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_1068_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln1082_1_fu_1078_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1082_3_fu_1084_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1082_fu_1089_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1082_fu_1095_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_5_fu_1107_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln534_fu_1121_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shifted_Align_3_fu_1124_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shifted_Align_4_fu_1130_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1102_fu_1147_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln1108_fu_1158_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln215_21_fu_1250_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_22_fu_1258_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_9_fu_1253_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_10_fu_1261_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln878_7_fu_1266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1130_fu_1272_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1130_1_fu_1276_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_23_fu_1288_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_24_fu_1296_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_11_fu_1291_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_12_fu_1299_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln878_8_fu_1304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1131_fu_1310_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1131_1_fu_1314_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_6_fu_1340_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1161_fu_1357_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_predicate_op389_call_state81 : BOOLEAN;
    signal ap_block_state81_on_subcall_done : BOOLEAN;
    signal ap_block_state55_on_subcall_done : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component MPSQ_makePatch_alignedToLine IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        n_patches_i : IN STD_LOGIC_VECTOR (7 downto 0);
        n_patches_o : OUT STD_LOGIC_VECTOR (7 downto 0);
        n_patches_o_ap_vld : OUT STD_LOGIC;
        GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        GDn_points_ce0 : OUT STD_LOGIC;
        GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
        z_top : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        leftRight : IN STD_LOGIC_VECTOR (0 downto 0);
        GDarrayDecoded_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        GDarrayDecoded_ce0 : OUT STD_LOGIC;
        GDarrayDecoded_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_superpoints_ce0 : OUT STD_LOGIC;
        patches_superpoints_we0 : OUT STD_LOGIC;
        patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_parameters_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        patches_parameters_ce0 : OUT STD_LOGIC;
        patches_parameters_we0 : OUT STD_LOGIC;
        patches_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        patches_parameters_ce1 : OUT STD_LOGIC;
        patches_parameters_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MPSQ_getShadows IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        wp_superpoints_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        wp_superpoints_ce0 : OUT STD_LOGIC;
        wp_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        wp_superpoints_offset : IN STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        wp_parameters_ce0 : OUT STD_LOGIC;
        wp_parameters_we0 : OUT STD_LOGIC;
        wp_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        wp_parameters_ce1 : OUT STD_LOGIC;
        wp_parameters_we1 : OUT STD_LOGIC;
        wp_parameters_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters_offset : IN STD_LOGIC_VECTOR (0 downto 0);
        zTopMin : IN STD_LOGIC_VECTOR (31 downto 0);
        zTopMax : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MPSQ_delete_patch IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        n_patches : OUT STD_LOGIC_VECTOR (7 downto 0);
        n_patches_ap_vld : OUT STD_LOGIC;
        n_patches_read : IN STD_LOGIC_VECTOR (7 downto 0);
        index : IN STD_LOGIC_VECTOR (8 downto 0);
        patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_superpoints_ce0 : OUT STD_LOGIC;
        patches_superpoints_we0 : OUT STD_LOGIC;
        patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_superpoints_ce1 : OUT STD_LOGIC;
        patches_superpoints_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_parameters_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        patches_parameters_ce0 : OUT STD_LOGIC;
        patches_parameters_we0 : OUT STD_LOGIC;
        patches_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        patches_parameters_ce1 : OUT STD_LOGIC;
        patches_parameters_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MPSQ_straightLineProjectorFromLayerIJtoK IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        z_i : IN STD_LOGIC_VECTOR (31 downto 0);
        z_j : IN STD_LOGIC_VECTOR (31 downto 0);
        i : IN STD_LOGIC_VECTOR (2 downto 0);
        j : IN STD_LOGIC_VECTOR (2 downto 0);
        k : IN STD_LOGIC_VECTOR (2 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_makePatch_alignedToLine_fu_484 : component MPSQ_makePatch_alignedToLine
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_makePatch_alignedToLine_fu_484_ap_start,
        ap_done => grp_makePatch_alignedToLine_fu_484_ap_done,
        ap_idle => grp_makePatch_alignedToLine_fu_484_ap_idle,
        ap_ready => grp_makePatch_alignedToLine_fu_484_ap_ready,
        n_patches_i => n_patches_i,
        n_patches_o => grp_makePatch_alignedToLine_fu_484_n_patches_o,
        n_patches_o_ap_vld => grp_makePatch_alignedToLine_fu_484_n_patches_o_ap_vld,
        GDn_points_address0 => grp_makePatch_alignedToLine_fu_484_GDn_points_address0,
        GDn_points_ce0 => grp_makePatch_alignedToLine_fu_484_GDn_points_ce0,
        GDn_points_q0 => GDn_points_q0,
        apexZ0 => trunc_ln1050_1_reg_1689,
        z_top => newZtop_V_1_reg_1650,
        p_read => ppl_assign_0_reg_307,
        leftRight => lnot_reg_1645,
        GDarrayDecoded_address0 => grp_makePatch_alignedToLine_fu_484_GDarrayDecoded_address0,
        GDarrayDecoded_ce0 => grp_makePatch_alignedToLine_fu_484_GDarrayDecoded_ce0,
        GDarrayDecoded_q0 => GDarrayDecoded_q0,
        patches_superpoints_address0 => grp_makePatch_alignedToLine_fu_484_patches_superpoints_address0,
        patches_superpoints_ce0 => grp_makePatch_alignedToLine_fu_484_patches_superpoints_ce0,
        patches_superpoints_we0 => grp_makePatch_alignedToLine_fu_484_patches_superpoints_we0,
        patches_superpoints_d0 => grp_makePatch_alignedToLine_fu_484_patches_superpoints_d0,
        patches_superpoints_q0 => patches_superpoints_q0,
        patches_parameters_address0 => grp_makePatch_alignedToLine_fu_484_patches_parameters_address0,
        patches_parameters_ce0 => grp_makePatch_alignedToLine_fu_484_patches_parameters_ce0,
        patches_parameters_we0 => grp_makePatch_alignedToLine_fu_484_patches_parameters_we0,
        patches_parameters_d0 => grp_makePatch_alignedToLine_fu_484_patches_parameters_d0,
        patches_parameters_address1 => grp_makePatch_alignedToLine_fu_484_patches_parameters_address1,
        patches_parameters_ce1 => grp_makePatch_alignedToLine_fu_484_patches_parameters_ce1,
        patches_parameters_q1 => patches_parameters_q1,
        ap_return => grp_makePatch_alignedToLine_fu_484_ap_return);

    grp_getShadows_fu_509 : component MPSQ_getShadows
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_getShadows_fu_509_ap_start,
        ap_done => grp_getShadows_fu_509_ap_done,
        ap_idle => grp_getShadows_fu_509_ap_idle,
        ap_ready => grp_getShadows_fu_509_ap_ready,
        wp_superpoints_address0 => grp_getShadows_fu_509_wp_superpoints_address0,
        wp_superpoints_ce0 => grp_getShadows_fu_509_wp_superpoints_ce0,
        wp_superpoints_q0 => patches_superpoints_q0,
        wp_superpoints_offset => grp_getShadows_fu_509_wp_superpoints_offset,
        wp_parameters_address0 => grp_getShadows_fu_509_wp_parameters_address0,
        wp_parameters_ce0 => grp_getShadows_fu_509_wp_parameters_ce0,
        wp_parameters_we0 => grp_getShadows_fu_509_wp_parameters_we0,
        wp_parameters_d0 => grp_getShadows_fu_509_wp_parameters_d0,
        wp_parameters_address1 => grp_getShadows_fu_509_wp_parameters_address1,
        wp_parameters_ce1 => grp_getShadows_fu_509_wp_parameters_ce1,
        wp_parameters_we1 => grp_getShadows_fu_509_wp_parameters_we1,
        wp_parameters_d1 => grp_getShadows_fu_509_wp_parameters_d1,
        wp_parameters_offset => grp_getShadows_fu_509_wp_parameters_offset,
        zTopMin => z_top_min,
        zTopMax => z_top_max);

    grp_delete_patch_fu_526 : component MPSQ_delete_patch
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_delete_patch_fu_526_ap_start,
        ap_done => grp_delete_patch_fu_526_ap_done,
        ap_idle => grp_delete_patch_fu_526_ap_idle,
        ap_ready => grp_delete_patch_fu_526_ap_ready,
        n_patches => grp_delete_patch_fu_526_n_patches,
        n_patches_ap_vld => grp_delete_patch_fu_526_n_patches_ap_vld,
        n_patches_read => reg_568,
        index => grp_delete_patch_fu_526_index,
        patches_superpoints_address0 => grp_delete_patch_fu_526_patches_superpoints_address0,
        patches_superpoints_ce0 => grp_delete_patch_fu_526_patches_superpoints_ce0,
        patches_superpoints_we0 => grp_delete_patch_fu_526_patches_superpoints_we0,
        patches_superpoints_d0 => grp_delete_patch_fu_526_patches_superpoints_d0,
        patches_superpoints_address1 => grp_delete_patch_fu_526_patches_superpoints_address1,
        patches_superpoints_ce1 => grp_delete_patch_fu_526_patches_superpoints_ce1,
        patches_superpoints_q1 => patches_superpoints_q1,
        patches_parameters_address0 => grp_delete_patch_fu_526_patches_parameters_address0,
        patches_parameters_ce0 => grp_delete_patch_fu_526_patches_parameters_ce0,
        patches_parameters_we0 => grp_delete_patch_fu_526_patches_parameters_we0,
        patches_parameters_d0 => grp_delete_patch_fu_526_patches_parameters_d0,
        patches_parameters_address1 => grp_delete_patch_fu_526_patches_parameters_address1,
        patches_parameters_ce1 => grp_delete_patch_fu_526_patches_parameters_ce1,
        patches_parameters_q1 => patches_parameters_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_delete_patch_fu_526_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_delete_patch_fu_526_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state54))) then 
                    grp_delete_patch_fu_526_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_delete_patch_fu_526_ap_ready = ap_const_logic_1)) then 
                    grp_delete_patch_fu_526_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_getShadows_fu_509_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_getShadows_fu_509_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                    grp_getShadows_fu_509_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_getShadows_fu_509_ap_ready = ap_const_logic_1)) then 
                    grp_getShadows_fu_509_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_makePatch_alignedToLine_fu_484_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_makePatch_alignedToLine_fu_484_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
                    grp_makePatch_alignedToLine_fu_484_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_makePatch_alignedToLine_fu_484_ap_ready = ap_const_logic_1)) then 
                    grp_makePatch_alignedToLine_fu_484_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_538_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_straightLineProjectorFromLayerIJtoK_fu_538_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_NS_fsm_state72) and ((ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state52))) or ((shiftOriginal_1_reg_1631 = ap_const_lv1_1) and (ap_const_logic_1 = ap_NS_fsm_state64) and (ap_const_logic_1 = ap_CS_fsm_state63)) or ((ap_const_logic_1 = ap_NS_fsm_state45) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((ap_const_logic_1 = ap_NS_fsm_state44) and ((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state43))) or ((ap_const_logic_1 = ap_NS_fsm_state37) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((ap_const_logic_1 = ap_NS_fsm_state27) and (ap_const_logic_1 = ap_CS_fsm_state26) and (ap_const_lv1_1 = and_ln1022_fu_863_p2)) or ((ap_const_logic_1 = ap_NS_fsm_state17) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((ap_const_logic_1 = ap_NS_fsm_state7) and (ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_1 = and_ln1012_fu_660_p2)))) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_538_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_straightLineProjectorFromLayerIJtoK_fu_538_ap_ready = ap_const_logic_1)) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_538_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    agg_tmp178_0_reg_473_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1147_fu_1334_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                agg_tmp178_0_reg_473 <= newZtop_V_1_reg_1650;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state52) and (((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_432_p4 = ap_const_lv1_1) and (or_ln1082_1_fu_1043_p2 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln1082_1_fu_1101_p2)) or ((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_432_p4 = ap_const_lv1_1) and (or_ln1082_1_fu_1043_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln1082_2_fu_1062_p2))))) then 
                agg_tmp178_0_reg_473 <= newZtop_V_reg_415;
            end if; 
        end if;
    end process;

    complementary_topL_jL_V_1_reg_385_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1147_fu_1334_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                complementary_topL_jL_V_1_reg_385 <= complementary_topL_jL_V_3_reg_1757;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                complementary_topL_jL_V_1_reg_385 <= complementary_topL_jL_V_reg_1594;
            end if; 
        end if;
    end process;

    complementary_topL_jR_V_reg_365_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1147_fu_1334_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                complementary_topL_jR_V_reg_365 <= complementary_topL_jR_V_4_reg_1717;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                complementary_topL_jR_V_reg_365 <= complementary_topL_jR_V_3_reg_1543;
            end if; 
        end if;
    end process;

    complementary_topR_jL_V_1_reg_375_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1147_fu_1334_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                complementary_topR_jL_V_1_reg_375 <= complementary_topR_jL_V_3_reg_1751;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                complementary_topR_jL_V_1_reg_375 <= complementary_topR_jL_V_reg_1589;
            end if; 
        end if;
    end process;

    complementary_topR_jR_V_reg_335_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1147_fu_1334_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                complementary_topR_jR_V_reg_335 <= complementary_topR_jR_V_4_reg_1710;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                complementary_topR_jR_V_reg_335 <= complementary_topR_jR_V_3_reg_1525;
            end if; 
        end if;
    end process;

    empty_65_reg_254_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln1012_reg_1451) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                empty_65_reg_254 <= ap_const_lv1_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (ap_const_lv1_1 = and_ln1012_reg_1451))) then 
                empty_65_reg_254 <= phitmp_fu_791_p2;
            end if; 
        end if;
    end process;

    empty_66_reg_266_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln878_2_fu_813_p2 = ap_const_lv1_0) and (icmp_ln886_2_fu_797_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((icmp_ln886_2_fu_797_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
                empty_66_reg_266 <= ap_const_lv1_1;
            elsif (((icmp_ln878_2_reg_1516 = ap_const_lv1_1) and (icmp_ln886_2_reg_1512 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                empty_66_reg_266 <= phitmp4_fu_835_p2;
            end if; 
        end if;
    end process;

    empty_67_reg_281_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln1022_reg_1534) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                empty_67_reg_281 <= ap_const_lv1_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state34) and (ap_const_lv1_1 = and_ln1022_reg_1534))) then 
                empty_67_reg_281 <= phitmp3_fu_885_p2;
            end if; 
        end if;
    end process;

    empty_68_reg_293_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln878_4_fu_907_p2 = ap_const_lv1_0) and (icmp_ln886_4_fu_891_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((icmp_ln886_4_fu_891_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36)))) then 
                empty_68_reg_293 <= ap_const_lv1_1;
            elsif (((icmp_ln878_4_reg_1556 = ap_const_lv1_1) and (icmp_ln886_4_reg_1552 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state44))) then 
                empty_68_reg_293 <= phitmp5_fu_929_p2;
            end if; 
        end if;
    end process;

    empty_69_reg_317_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1147_fu_1334_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                empty_69_reg_317 <= horizontalShiftBottom_1_reg_1788;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                empty_69_reg_317 <= horizontalShiftBottom_fu_967_p2;
            end if; 
        end if;
    end process;

    empty_70_reg_326_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1147_fu_1334_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                empty_70_reg_326 <= horizontalShiftTop_1_reg_1773;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                empty_70_reg_326 <= horizontalShiftTop_fu_963_p2;
            end if; 
        end if;
    end process;

    horizontalOverlapBottom_V_fu_134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
                horizontalOverlapBottom_V_fu_134 <= ap_const_lv32_FFF0BDC0;
            elsif (((icmp_ln878_6_reg_1793 = ap_const_lv1_1) and (shiftOriginal_1_reg_1631 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                horizontalOverlapBottom_V_fu_134 <= horizontalOverlapBottom_V_1_reg_1802;
            end if; 
        end if;
    end process;

    horizontalOverlapTop_V_fu_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
                horizontalOverlapTop_V_fu_138 <= ap_const_lv32_FFF0BDC0;
            elsif (((icmp_ln878_6_reg_1793 = ap_const_lv1_1) and (shiftOriginal_1_reg_1631 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                horizontalOverlapTop_V_fu_138 <= horizontalOverlapTop_V_1_reg_1797;
            end if; 
        end if;
    end process;

    loopCounter_reg_451_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1147_fu_1334_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                loopCounter_reg_451 <= loopCounter_2_reg_1666;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                loopCounter_reg_451 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    makeHorizontallyShiftedPatch_reg_427_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1147_fu_1334_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                makeHorizontallyShiftedPatch_reg_427 <= ap_const_lv1_1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                makeHorizontallyShiftedPatch_reg_427 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    newZtop_V_reg_415_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1147_fu_1334_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                newZtop_V_reg_415 <= newZtop_V_1_reg_1650;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                newZtop_V_reg_415 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    original_topL_jL_V_reg_345_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1147_fu_1334_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                original_topL_jL_V_reg_345 <= original_topL_jL_V_4_reg_1737;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                original_topL_jL_V_reg_345 <= original_topL_jL_V_3_reg_1503;
            end if; 
        end if;
    end process;

    original_topL_jR_V_1_reg_405_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1147_fu_1334_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                original_topL_jR_V_1_reg_405 <= original_topL_jR_V_3_reg_1731;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                original_topL_jR_V_1_reg_405 <= patches_parameters_q1;
            end if; 
        end if;
    end process;

    original_topR_jL_V_1_reg_355_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1147_fu_1334_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                original_topR_jL_V_1_reg_355 <= original_topR_jL_V_3_reg_1744;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                original_topR_jL_V_1_reg_355 <= original_topR_jL_V_reg_1444;
            end if; 
        end if;
    end process;

    original_topR_jR_V_1_reg_395_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1147_fu_1334_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                original_topR_jR_V_1_reg_395 <= original_topR_jR_V_3_reg_1724;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                original_topR_jR_V_1_reg_395 <= patches_parameters_q0;
            end if; 
        end if;
    end process;

    phi_ln166_reg_463_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1147_fu_1334_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                phi_ln166_reg_463 <= trunc_ln1050_1_reg_1689;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state52) and (((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_432_p4 = ap_const_lv1_1) and (or_ln1082_1_fu_1043_p2 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln1082_1_fu_1101_p2)) or ((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_432_p4 = ap_const_lv1_1) and (or_ln1082_1_fu_1043_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln1082_2_fu_1062_p2))))) then 
                phi_ln166_reg_463 <= trunc_ln1050_fu_1023_p1;
            end if; 
        end if;
    end process;

    ppl_assign_0_reg_307_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1147_fu_1334_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                ppl_assign_0_reg_307 <= ppl_assign1_reg_1700;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                ppl_assign_0_reg_307 <= ppl;
            end if; 
        end if;
    end process;

    shifted_Align_2_reg_441_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1147_fu_1334_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                shifted_Align_2_reg_441 <= shifted_Align_5_reg_1684;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                shifted_Align_2_reg_441 <= sext_ln1062_fu_997_p1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state54)) then
                add_ln1102_reg_1695 <= add_ln1102_fu_1151_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state58)) then
                add_ln1108_reg_1705 <= add_ln1108_fu_1162_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                and_ln1012_reg_1451 <= and_ln1012_fu_660_p2;
                original_topR_jL_V_reg_1444 <= patches_parameters_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                and_ln1022_reg_1534 <= and_ln1022_fu_863_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln1082_1_fu_1043_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state52))) then
                and_ln1082_1_reg_1675 <= and_ln1082_1_fu_1101_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln1082_1_fu_1043_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state52))) then
                and_ln1082_2_reg_1671 <= and_ln1082_2_fu_1062_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state78)) then
                and_ln1157_reg_1810 <= and_ln1157_fu_1346_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state63)) then
                complementary_topL_jL_V_3_reg_1757 <= complementary_topL_jL_V_3_fu_1217_p3;
                complementary_topR_jL_V_3_reg_1751 <= complementary_topR_jL_V_3_fu_1210_p3;
                original_topL_jL_V_4_reg_1737 <= original_topL_jL_V_4_fu_1196_p3;
                original_topR_jL_V_3_reg_1744 <= original_topR_jL_V_3_fu_1203_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state50)) then
                complementary_topL_jL_V_reg_1594 <= patches_parameters_q0;
                complementary_topR_jL_V_reg_1589 <= patches_parameters_q1;
                icmp_ln886_5_reg_1599 <= icmp_ln886_5_fu_957_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                complementary_topL_jR_V_3_reg_1543 <= patches_parameters_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state62)) then
                complementary_topL_jR_V_4_reg_1717 <= complementary_topL_jR_V_4_fu_1175_p3;
                complementary_topR_jR_V_4_reg_1710 <= complementary_topR_jR_V_4_fu_1168_p3;
                original_topL_jR_V_3_reg_1731 <= original_topL_jR_V_3_fu_1189_p3;
                original_topR_jR_V_3_reg_1724 <= original_topR_jR_V_3_fu_1182_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                complementary_topR_jR_V_3_reg_1525 <= patches_parameters_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                empty_reg_1382 <= empty_fu_579_p1;
                icmp_ln996_reg_1388 <= icmp_ln996_fu_584_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln878_6_fu_1244_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state70))) then
                horizontalOverlapBottom_V_1_reg_1802 <= horizontalOverlapBottom_V_1_fu_1318_p3;
                horizontalOverlapTop_V_1_reg_1797 <= horizontalOverlapTop_V_1_fu_1280_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state64)) then
                horizontalShiftBottom_1_reg_1788 <= horizontalShiftBottom_1_fu_1240_p2;
                horizontalShiftTop_1_reg_1773 <= horizontalShiftTop_1_fu_1230_p2;
                sext_ln215_17_reg_1763 <= sext_ln215_17_fu_1224_p1;
                sext_ln215_18_reg_1768 <= sext_ln215_18_fu_1227_p1;
                sext_ln215_19_reg_1778 <= sext_ln215_19_fu_1234_p1;
                sext_ln215_20_reg_1783 <= sext_ln215_20_fu_1237_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state79)) then
                icmp_ln1159_reg_1814 <= icmp_ln1159_fu_1351_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln886_2_fu_797_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                icmp_ln878_2_reg_1516 <= icmp_ln878_2_fu_813_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln886_4_fu_891_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then
                icmp_ln878_4_reg_1556 <= icmp_ln878_4_fu_907_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state70)) then
                icmp_ln878_6_reg_1793 <= icmp_ln878_6_fu_1244_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                icmp_ln886_2_reg_1512 <= icmp_ln886_2_fu_797_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                icmp_ln886_4_reg_1552 <= icmp_ln886_4_fu_891_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state51)) then
                lnot_reg_1645 <= lnot_fu_1011_p2;
                newZtop_V_1_reg_1650 <= newZtop_V_1_fu_1017_p3;
                shiftOriginal_1_reg_1631 <= shiftOriginal_1_fu_1001_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state52)) then
                loopCounter_2_reg_1666 <= loopCounter_2_fu_1048_p2;
                or_ln1082_1_reg_1662 <= or_ln1082_1_fu_1043_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state45)) then
                or_ln1082_2_reg_1584 <= or_ln1082_2_fu_951_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then
                or_ln1082_reg_1579 <= or_ln1082_fu_935_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                original_topL_jL_V_3_reg_1503 <= patches_parameters_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                    patches_parameters_addr_14_reg_1488(8 downto 3) <= zext_ln1035_2_fu_728_p1(9 - 1 downto 0)(8 downto 3);
                    patches_parameters_addr_15_reg_1493(8 downto 3) <= zext_ln1036_2_fu_770_p1(9 - 1 downto 0)(8 downto 3);
                    patches_parameters_addr_9_reg_1483(8 downto 3) <= sext_ln1015_fu_686_p1(9 - 1 downto 0)(8 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state57)) then
                ppl_assign1_reg_1700 <= grp_makePatch_alignedToLine_fu_484_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state13))) then
                reg_564 <= grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state79) or ((ap_const_logic_1 = ap_CS_fsm_state53) and (makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1)))) then
                reg_568 <= n_patches_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                secondLastPatchIndex_1_reg_1404 <= secondLastPatchIndex_1_fu_595_p3;
                xor_ln1009_reg_1409 <= xor_ln1009_fu_602_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln996_reg_1388 = ap_const_lv1_0))) then
                secondLastPatchIndex_reg_1399 <= secondLastPatchIndex_fu_590_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                    select_ln1011_reg_1414(4 downto 2) <= select_ln1011_fu_608_p3(4 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state52) and (((or_ln1082_1_fu_1043_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1082_1_fu_1101_p2)) or ((or_ln1082_1_fu_1043_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1082_2_fu_1062_p2))))) then
                select_ln534_reg_1679 <= select_ln534_fu_1113_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state53)) then
                shifted_Align_5_reg_1684 <= shifted_Align_5_fu_1136_p3;
                trunc_ln1050_1_reg_1689 <= trunc_ln1050_1_fu_1143_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state80)) then
                    zext_ln1161_reg_1818(7 downto 0) <= zext_ln1161_fu_1363_p1(7 downto 0);
            end if;
        end if;
    end process;
    select_ln1011_reg_1414(1 downto 0) <= "10";
    patches_parameters_addr_9_reg_1483(2 downto 0) <= "000";
    patches_parameters_addr_14_reg_1488(2 downto 0) <= "010";
    patches_parameters_addr_15_reg_1493(2 downto 0) <= "110";
    zext_ln1161_reg_1818(8) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state53, makeHorizontallyShiftedPatch_reg_427, ap_CS_fsm_state79, ap_CS_fsm_state2, ap_CS_fsm_state4, and_ln1012_reg_1451, ap_CS_fsm_state7, icmp_ln886_2_fu_797_p2, ap_CS_fsm_state16, icmp_ln878_2_fu_813_p2, and_ln1022_reg_1534, icmp_ln886_4_fu_891_p2, ap_CS_fsm_state36, icmp_ln878_4_fu_907_p2, shiftOriginal_1_reg_1631, ap_CS_fsm_state52, or_ln1082_1_fu_1043_p2, and_ln1082_2_fu_1062_p2, and_ln1082_1_fu_1101_p2, ap_CS_fsm_state57, ap_CS_fsm_state64, and_ln1157_fu_1346_p2, ap_CS_fsm_state78, icmp_ln1159_fu_1351_p2, grp_makePatch_alignedToLine_fu_484_ap_done, grp_getShadows_fu_509_ap_done, ap_CS_fsm_state27, ap_CS_fsm_state71, icmp_ln1147_fu_1334_p2, ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_432_p4, ap_CS_fsm_state60, ap_CS_fsm_state55, ap_CS_fsm_state81, ap_block_state81_on_subcall_done, ap_block_state55_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_getShadows_fu_509_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_getShadows_fu_509_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_lv1_0 = and_ln1012_reg_1451) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((icmp_ln878_2_fu_813_p2 = ap_const_lv1_1) and (icmp_ln886_2_fu_797_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                if (((ap_const_lv1_0 = and_ln1022_reg_1534) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                if (((icmp_ln878_4_fu_907_p2 = ap_const_lv1_1) and (icmp_ln886_4_fu_891_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state52) and (((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_432_p4 = ap_const_lv1_0) and (or_ln1082_1_fu_1043_p2 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln1082_1_fu_1101_p2)) or ((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_432_p4 = ap_const_lv1_0) and (or_ln1082_1_fu_1043_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln1082_2_fu_1062_p2))))) then
                    ap_NS_fsm <= ap_ST_fsm_state81;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state52) and (((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_432_p4 = ap_const_lv1_1) and (or_ln1082_1_fu_1043_p2 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln1082_1_fu_1101_p2)) or ((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_432_p4 = ap_const_lv1_1) and (or_ln1082_1_fu_1043_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln1082_2_fu_1062_p2))))) then
                    ap_NS_fsm <= ap_ST_fsm_state72;
                else
                    ap_NS_fsm <= ap_ST_fsm_state53;
                end if;
            when ap_ST_fsm_state53 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state53) and (makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state55) and (ap_const_boolean_0 = ap_block_state55_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state56;
                else
                    ap_NS_fsm <= ap_ST_fsm_state55;
                end if;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                if (((grp_makePatch_alignedToLine_fu_484_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state57))) then
                    ap_NS_fsm <= ap_ST_fsm_state58;
                else
                    ap_NS_fsm <= ap_ST_fsm_state57;
                end if;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                if (((grp_getShadows_fu_509_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state60))) then
                    ap_NS_fsm <= ap_ST_fsm_state61;
                else
                    ap_NS_fsm <= ap_ST_fsm_state60;
                end if;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                if (((shiftOriginal_1_reg_1631 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state64))) then
                    ap_NS_fsm <= ap_ST_fsm_state71;
                else
                    ap_NS_fsm <= ap_ST_fsm_state65;
                end if;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                if (((icmp_ln1147_fu_1334_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state71))) then
                    ap_NS_fsm <= ap_ST_fsm_state72;
                else
                    ap_NS_fsm <= ap_ST_fsm_state52;
                end if;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                if (((ap_const_lv1_0 = and_ln1157_fu_1346_p2) and (ap_const_logic_1 = ap_CS_fsm_state78))) then
                    ap_NS_fsm <= ap_ST_fsm_state81;
                else
                    ap_NS_fsm <= ap_ST_fsm_state79;
                end if;
            when ap_ST_fsm_state79 => 
                if (((icmp_ln1159_fu_1351_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state79))) then
                    ap_NS_fsm <= ap_ST_fsm_state81;
                else
                    ap_NS_fsm <= ap_ST_fsm_state80;
                end if;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state81) and (ap_const_boolean_0 = ap_block_state81_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state81;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    GDarrayDecoded_address0 <= grp_makePatch_alignedToLine_fu_484_GDarrayDecoded_address0;
    GDarrayDecoded_ce0 <= grp_makePatch_alignedToLine_fu_484_GDarrayDecoded_ce0;
    GDn_points_address0 <= grp_makePatch_alignedToLine_fu_484_GDn_points_address0;
    GDn_points_ce0 <= grp_makePatch_alignedToLine_fu_484_GDn_points_ce0;
    add_ln1102_fu_1151_p2 <= std_logic_vector(unsigned(zext_ln1102_fu_1147_p1) + unsigned(ap_const_lv9_1FF));
    add_ln1108_fu_1162_p2 <= std_logic_vector(unsigned(trunc_ln1108_fu_1158_p1) + unsigned(ap_const_lv5_1F));
    add_ln1161_fu_1357_p2 <= std_logic_vector(unsigned(reg_568) + unsigned(ap_const_lv8_FD));
    and_ln1012_fu_660_p2 <= (icmp_ln886_fu_648_p2 and icmp_ln878_fu_654_p2);
    and_ln1022_fu_863_p2 <= (icmp_ln886_3_fu_853_p2 and icmp_ln878_3_fu_859_p2);
    and_ln1082_1_fu_1101_p2 <= (grp_fu_554_p2 and and_ln1082_fu_1095_p2);
    and_ln1082_2_fu_1062_p2 <= (grp_fu_559_p2 and grp_fu_554_p2);
    and_ln1082_fu_1095_p2 <= (xor_ln1082_fu_1089_p2 and grp_fu_559_p2);
    and_ln1157_fu_1346_p2 <= (shiftOriginal_1_reg_1631 and icmp_ln886_6_fu_1340_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state78 <= ap_CS_fsm(77);
    ap_CS_fsm_state79 <= ap_CS_fsm(78);
    ap_CS_fsm_state80 <= ap_CS_fsm(79);
    ap_CS_fsm_state81 <= ap_CS_fsm(80);
    ap_NS_fsm_state17 <= ap_NS_fsm(16);
    ap_NS_fsm_state27 <= ap_NS_fsm(26);
    ap_NS_fsm_state37 <= ap_NS_fsm(36);
    ap_NS_fsm_state44 <= ap_NS_fsm(43);
    ap_NS_fsm_state45 <= ap_NS_fsm(44);
    ap_NS_fsm_state64 <= ap_NS_fsm(63);
    ap_NS_fsm_state7 <= ap_NS_fsm(6);
    ap_NS_fsm_state72 <= ap_NS_fsm(71);

    ap_block_state55_on_subcall_done_assign_proc : process(makeHorizontallyShiftedPatch_reg_427, grp_delete_patch_fu_526_ap_done)
    begin
                ap_block_state55_on_subcall_done <= ((grp_delete_patch_fu_526_ap_done = ap_const_logic_0) and (makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1));
    end process;


    ap_block_state81_on_subcall_done_assign_proc : process(grp_delete_patch_fu_526_ap_done, ap_predicate_op389_call_state81)
    begin
                ap_block_state81_on_subcall_done <= ((grp_delete_patch_fu_526_ap_done = ap_const_logic_0) and (ap_predicate_op389_call_state81 = ap_const_boolean_1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state81, ap_block_state81_on_subcall_done)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state81) and (ap_const_boolean_0 = ap_block_state81_on_subcall_done)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_432_p4 <= makeHorizontallyShiftedPatch_reg_427;

    ap_predicate_op389_call_state81_assign_proc : process(makeHorizontallyShiftedPatch_reg_427, or_ln1082_1_reg_1662, and_ln1082_2_reg_1671, and_ln1082_1_reg_1675, and_ln1157_reg_1810, icmp_ln1159_reg_1814)
    begin
                ap_predicate_op389_call_state81 <= ((((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (or_ln1082_1_reg_1662 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (ap_const_lv1_1 = and_ln1082_1_reg_1675)) or ((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1))) or ((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (or_ln1082_1_reg_1662 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (ap_const_lv1_1 = and_ln1082_2_reg_1671)));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state81, ap_block_state81_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state81) and (ap_const_boolean_0 = ap_block_state81_on_subcall_done))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cmp_i_i301_not_fu_1006_p2 <= (icmp_ln886_5_reg_1599 xor ap_const_lv1_1);
    complementary_topL_jL_V_3_fu_1217_p3 <= 
        complementary_topL_jL_V_1_reg_385 when (shiftOriginal_1_reg_1631(0) = '1') else 
        patches_parameters_q1;
    complementary_topL_jR_V_4_fu_1175_p3 <= 
        complementary_topL_jR_V_reg_365 when (shiftOriginal_1_reg_1631(0) = '1') else 
        patches_parameters_q1;
    complementary_topR_jL_V_3_fu_1210_p3 <= 
        complementary_topR_jL_V_1_reg_375 when (shiftOriginal_1_reg_1631(0) = '1') else 
        patches_parameters_q0;
    complementary_topR_jR_V_4_fu_1168_p3 <= 
        complementary_topR_jR_V_reg_335 when (shiftOriginal_1_reg_1631(0) = '1') else 
        patches_parameters_q0;
    empty_fu_579_p1 <= lastPatchIndex(5 - 1 downto 0);
    grp_delete_patch_fu_526_ap_start <= grp_delete_patch_fu_526_ap_start_reg;

    grp_delete_patch_fu_526_index_assign_proc : process(makeHorizontallyShiftedPatch_reg_427, or_ln1082_1_reg_1662, and_ln1082_2_reg_1671, and_ln1082_1_reg_1675, add_ln1102_reg_1695, and_ln1157_reg_1810, icmp_ln1159_reg_1814, zext_ln1161_reg_1818, ap_CS_fsm_state55, ap_CS_fsm_state81)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state81) and ((((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (or_ln1082_1_reg_1662 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (ap_const_lv1_1 = and_ln1082_1_reg_1675)) or ((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1))) or ((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (or_ln1082_1_reg_1662 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (ap_const_lv1_1 = and_ln1082_2_reg_1671))))) then 
            grp_delete_patch_fu_526_index <= zext_ln1161_reg_1818;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1))) then 
            grp_delete_patch_fu_526_index <= add_ln1102_reg_1695;
        else 
            grp_delete_patch_fu_526_index <= "XXXXXXXXX";
        end if; 
    end process;

    grp_fu_554_p2 <= "1" when (signed(horizontalOverlapTop_V_fu_138) < signed(ap_const_lv32_1)) else "0";
    grp_fu_559_p2 <= "1" when (signed(horizontalOverlapBottom_V_fu_134) < signed(ap_const_lv32_1)) else "0";
    grp_fu_573_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(reg_564));
    grp_getShadows_fu_509_ap_start <= grp_getShadows_fu_509_ap_start_reg;

    grp_getShadows_fu_509_wp_parameters_offset_assign_proc : process(ap_CS_fsm_state2, xor_ln1009_reg_1409, ap_CS_fsm_state4, ap_CS_fsm_state60)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_getShadows_fu_509_wp_parameters_offset <= xor_ln1009_reg_1409;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_getShadows_fu_509_wp_parameters_offset <= ap_const_lv1_0;
        else 
            grp_getShadows_fu_509_wp_parameters_offset <= "X";
        end if; 
    end process;


    grp_getShadows_fu_509_wp_superpoints_offset_assign_proc : process(empty_reg_1382, ap_CS_fsm_state2, secondLastPatchIndex_1_reg_1404, ap_CS_fsm_state4, add_ln1108_reg_1705, ap_CS_fsm_state60)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            grp_getShadows_fu_509_wp_superpoints_offset <= add_ln1108_reg_1705;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_getShadows_fu_509_wp_superpoints_offset <= secondLastPatchIndex_1_reg_1404;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_getShadows_fu_509_wp_superpoints_offset <= empty_reg_1382;
        else 
            grp_getShadows_fu_509_wp_superpoints_offset <= "XXXXX";
        end if; 
    end process;

    grp_makePatch_alignedToLine_fu_484_ap_start <= grp_makePatch_alignedToLine_fu_484_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_ce <= ap_const_logic_1;
    grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din1 <= grp_straightLineProjectorFromLayerIJtoK_fu_538_z_i;
    grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din2 <= grp_straightLineProjectorFromLayerIJtoK_fu_538_z_j;
    grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din3 <= ap_const_lv3_1;
    grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din4 <= ap_const_lv3_5;
    grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din5 <= ap_const_lv3_0;
    grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_start <= grp_straightLineProjectorFromLayerIJtoK_fu_538_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_538_ap_ce <= ap_const_logic_1;
    grp_straightLineProjectorFromLayerIJtoK_fu_538_ap_done <= grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_done;
    grp_straightLineProjectorFromLayerIJtoK_fu_538_ap_idle <= grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_idle;
    grp_straightLineProjectorFromLayerIJtoK_fu_538_ap_ready <= grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_ready;
    grp_straightLineProjectorFromLayerIJtoK_fu_538_ap_return <= grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_dout0;
    grp_straightLineProjectorFromLayerIJtoK_fu_538_ap_start <= grp_straightLineProjectorFromLayerIJtoK_fu_538_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_538_i <= ap_const_lv3_1;
    grp_straightLineProjectorFromLayerIJtoK_fu_538_j <= ap_const_lv3_5;
    grp_straightLineProjectorFromLayerIJtoK_fu_538_k <= ap_const_lv3_0;

    grp_straightLineProjectorFromLayerIJtoK_fu_538_z_i_assign_proc : process(complementary_apexZ0, apexZ0, original_topR_jL_V_reg_1444, and_ln1012_reg_1451, ap_CS_fsm_state7, original_topL_jL_V_3_reg_1503, complementary_topR_jR_V_3_reg_1525, and_ln1022_reg_1534, complementary_topL_jR_V_3_reg_1543, ap_CS_fsm_state44, ap_CS_fsm_state45, shiftOriginal_1_reg_1631, original_topR_jR_V_3_reg_1724, ap_CS_fsm_state64, ap_CS_fsm_state27, phi_ln166_reg_463, ap_CS_fsm_state17, ap_CS_fsm_state37, ap_CS_fsm_state72)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_538_z_i <= phi_ln166_reg_463;
        elsif (((shiftOriginal_1_reg_1631 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state64))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_538_z_i <= original_topR_jR_V_3_reg_1724;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_538_z_i <= apexZ0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_538_z_i <= complementary_apexZ0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_538_z_i <= complementary_topL_jR_V_3_reg_1543;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) and (ap_const_lv1_1 = and_ln1022_reg_1534))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_538_z_i <= complementary_topR_jR_V_3_reg_1525;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_538_z_i <= original_topL_jL_V_3_reg_1503;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_1 = and_ln1012_reg_1451))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_538_z_i <= original_topR_jL_V_reg_1444;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_538_z_i <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_538_z_j_assign_proc : process(z_top_min, z_top_max, and_ln1012_reg_1451, ap_CS_fsm_state7, and_ln1022_reg_1534, ap_CS_fsm_state44, ap_CS_fsm_state45, shiftOriginal_1_reg_1631, ap_CS_fsm_state64, ap_CS_fsm_state27, agg_tmp178_0_reg_473, ap_CS_fsm_state17, ap_CS_fsm_state37, ap_CS_fsm_state72)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_538_z_j <= agg_tmp178_0_reg_473;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state44))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_538_z_j <= z_top_min;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or ((shiftOriginal_1_reg_1631 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state64)) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (ap_const_lv1_1 = and_ln1022_reg_1534)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_1 = and_ln1012_reg_1451)))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_538_z_j <= z_top_max;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_538_z_j <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    horizontalOverlapBottom_V_1_fu_1318_p3 <= 
        trunc_ln1131_fu_1310_p1 when (icmp_ln878_8_fu_1304_p2(0) = '1') else 
        trunc_ln1131_1_fu_1314_p1;
    horizontalOverlapTop_V_1_fu_1280_p3 <= 
        trunc_ln1130_fu_1272_p1 when (icmp_ln878_7_fu_1266_p2(0) = '1') else 
        trunc_ln1130_1_fu_1276_p1;
    horizontalShiftBottom_1_fu_1240_p2 <= std_logic_vector(signed(original_topL_jL_V_4_reg_1737) - signed(complementary_topL_jR_V_4_reg_1717));
    horizontalShiftBottom_fu_967_p2 <= std_logic_vector(signed(original_topL_jL_V_3_reg_1503) - signed(complementary_topL_jR_V_3_reg_1543));
    horizontalShiftTop_1_fu_1230_p2 <= std_logic_vector(signed(original_topR_jL_V_3_reg_1744) - signed(complementary_topR_jR_V_4_reg_1710));
    horizontalShiftTop_fu_963_p2 <= std_logic_vector(unsigned(original_topR_jL_V_reg_1444) - unsigned(complementary_topR_jR_V_3_reg_1525));
    icmp_ln1082_1_fu_1078_p2 <= "1" when (signed(tmp_22_fu_1068_p4) < signed(ap_const_lv31_1)) else "0";
    icmp_ln1082_fu_1037_p2 <= "1" when (signed(tmp_21_fu_1027_p4) < signed(ap_const_lv31_1)) else "0";
    icmp_ln1147_fu_1334_p2 <= "1" when (signed(loopCounter_reg_451) > signed(ap_const_lv32_19)) else "0";
    icmp_ln1159_fu_1351_p2 <= "1" when (unsigned(n_patches_i) > unsigned(ap_const_lv8_2)) else "0";
    icmp_ln878_2_fu_813_p2 <= "1" when (signed(ret_fu_807_p2) < signed(ap_const_lv33_1FFFFFF9C)) else "0";
    icmp_ln878_3_fu_859_p1 <= apexZ0;
    icmp_ln878_3_fu_859_p2 <= "1" when (signed(complementary_topR_jR_V_3_reg_1525) < signed(icmp_ln878_3_fu_859_p1)) else "0";
    icmp_ln878_4_fu_907_p2 <= "1" when (signed(ret_8_fu_901_p2) < signed(ap_const_lv33_1FFFFFF9C)) else "0";
    icmp_ln878_5_fu_1107_p2 <= "1" when (signed(empty_70_reg_326) < signed(empty_69_reg_317)) else "0";
    icmp_ln878_6_fu_1244_p2 <= "1" when (signed(grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_dout0) < signed(ap_const_lv32_E4E1C0)) else "0";
    icmp_ln878_7_fu_1266_p2 <= "1" when (signed(ret_9_fu_1253_p2) < signed(ret_10_fu_1261_p2)) else "0";
    icmp_ln878_8_fu_1304_p2 <= "1" when (signed(ret_11_fu_1291_p2) < signed(ret_12_fu_1299_p2)) else "0";
    icmp_ln878_fu_654_p1 <= apexZ0;
    icmp_ln878_fu_654_p2 <= "1" when (signed(patches_parameters_q0) < signed(icmp_ln878_fu_654_p1)) else "0";
    icmp_ln886_2_fu_797_p1 <= complementary_apexZ0;
    icmp_ln886_2_fu_797_p2 <= "1" when (signed(original_topL_jL_V_3_reg_1503) > signed(icmp_ln886_2_fu_797_p1)) else "0";
    icmp_ln886_3_fu_853_p2 <= "1" when (signed(ret_7_fu_847_p2) > signed(ap_const_lv33_32)) else "0";
    icmp_ln886_4_fu_891_p1 <= complementary_apexZ0;
    icmp_ln886_4_fu_891_p2 <= "1" when (signed(complementary_topL_jR_V_3_reg_1543) > signed(icmp_ln886_4_fu_891_p1)) else "0";
    icmp_ln886_5_fu_957_p2 <= "1" when (signed(grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_dout0) > signed(ap_const_lv32_0)) else "0";
    icmp_ln886_6_fu_1340_p2 <= "1" when (signed(grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_dout0) > signed(ap_const_lv32_E4E1C0)) else "0";
    icmp_ln886_fu_648_p1 <= complementary_apexZ0;
    icmp_ln886_fu_648_p2 <= "1" when (signed(patches_parameters_q0) > signed(icmp_ln886_fu_648_p1)) else "0";
    icmp_ln996_fu_584_p2 <= "1" when (lastPatchIndex = ap_const_lv8_0) else "0";
    lnot_fu_1011_p2 <= (tmp_20_fu_971_p3 and cmp_i_i301_not_fu_1006_p2);
    loopCounter_2_fu_1048_p2 <= std_logic_vector(unsigned(loopCounter_reg_451) + unsigned(ap_const_lv32_1));

    n_patches_o_assign_proc : process(n_patches_i, makeHorizontallyShiftedPatch_reg_427, or_ln1082_1_reg_1662, and_ln1082_2_reg_1671, and_ln1082_1_reg_1675, ap_CS_fsm_state57, and_ln1157_reg_1810, icmp_ln1159_reg_1814, grp_makePatch_alignedToLine_fu_484_n_patches_o, grp_makePatch_alignedToLine_fu_484_n_patches_o_ap_vld, grp_delete_patch_fu_526_n_patches, grp_delete_patch_fu_526_n_patches_ap_vld, ap_CS_fsm_state55, ap_CS_fsm_state81)
    begin
        if ((((grp_delete_patch_fu_526_n_patches_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state81) and ((((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (or_ln1082_1_reg_1662 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (ap_const_lv1_1 = and_ln1082_1_reg_1675)) or ((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1))) or ((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (or_ln1082_1_reg_1662 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (ap_const_lv1_1 = and_ln1082_2_reg_1671)))) or ((grp_delete_patch_fu_526_n_patches_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1)))) then 
            n_patches_o <= grp_delete_patch_fu_526_n_patches;
        elsif (((grp_makePatch_alignedToLine_fu_484_n_patches_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            n_patches_o <= grp_makePatch_alignedToLine_fu_484_n_patches_o;
        else 
            n_patches_o <= n_patches_i;
        end if; 
    end process;


    n_patches_o_ap_vld_assign_proc : process(makeHorizontallyShiftedPatch_reg_427, or_ln1082_1_reg_1662, and_ln1082_2_reg_1671, and_ln1082_1_reg_1675, ap_CS_fsm_state57, and_ln1157_reg_1810, icmp_ln1159_reg_1814, grp_makePatch_alignedToLine_fu_484_n_patches_o_ap_vld, grp_delete_patch_fu_526_n_patches_ap_vld, ap_CS_fsm_state55, ap_CS_fsm_state81)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state81) and ((((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (or_ln1082_1_reg_1662 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (ap_const_lv1_1 = and_ln1082_1_reg_1675)) or ((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1))) or ((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (or_ln1082_1_reg_1662 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (ap_const_lv1_1 = and_ln1082_2_reg_1671)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1)))) then 
            n_patches_o_ap_vld <= grp_delete_patch_fu_526_n_patches_ap_vld;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            n_patches_o_ap_vld <= grp_makePatch_alignedToLine_fu_484_n_patches_o_ap_vld;
        else 
            n_patches_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    newZtop_V_1_fu_1017_p3 <= 
        z_top_max when (shiftOriginal_1_fu_1001_p2(0) = '1') else 
        z_top_min;
    or_ln1082_1_fu_1043_p2 <= (or_ln1082_reg_1579 or icmp_ln1082_fu_1037_p2);
    or_ln1082_2_fu_951_p2 <= (empty_68_reg_293 or empty_66_reg_266);
    or_ln1082_3_fu_1084_p2 <= (or_ln1082_2_reg_1584 or icmp_ln1082_1_fu_1078_p2);
    or_ln1082_fu_935_p2 <= (empty_67_reg_281 or empty_65_reg_254);
    original_topL_jL_V_4_fu_1196_p3 <= 
        patches_parameters_q1 when (shiftOriginal_1_reg_1631(0) = '1') else 
        original_topL_jL_V_reg_345;
    original_topL_jR_V_3_fu_1189_p3 <= 
        patches_parameters_q1 when (shiftOriginal_1_reg_1631(0) = '1') else 
        original_topL_jR_V_1_reg_405;
    original_topR_jL_V_3_fu_1203_p3 <= 
        patches_parameters_q0 when (shiftOriginal_1_reg_1631(0) = '1') else 
        original_topR_jL_V_1_reg_355;
    original_topR_jR_V_3_fu_1182_p3 <= 
        patches_parameters_q0 when (shiftOriginal_1_reg_1631(0) = '1') else 
        original_topR_jR_V_1_reg_395;

    patches_parameters_address0_assign_proc : process(makeHorizontallyShiftedPatch_reg_427, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state5, patches_parameters_addr_9_reg_1483, patches_parameters_addr_14_reg_1488, ap_CS_fsm_state14, ap_CS_fsm_state24, ap_CS_fsm_state34, ap_CS_fsm_state50, or_ln1082_1_reg_1662, and_ln1082_2_reg_1671, and_ln1082_1_reg_1675, ap_CS_fsm_state57, ap_CS_fsm_state62, and_ln1157_reg_1810, icmp_ln1159_reg_1814, grp_makePatch_alignedToLine_fu_484_patches_parameters_address0, grp_getShadows_fu_509_wp_parameters_address0, grp_delete_patch_fu_526_patches_parameters_address0, ap_CS_fsm_state60, ap_CS_fsm_state55, ap_CS_fsm_state81, zext_ln1011_2_fu_643_p1, ap_CS_fsm_state49, ap_CS_fsm_state61)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            patches_parameters_address0 <= ap_const_lv64_24(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            patches_parameters_address0 <= patches_parameters_addr_14_reg_1488;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            patches_parameters_address0 <= ap_const_lv64_18(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            patches_parameters_address0 <= ap_const_lv64_1E(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            patches_parameters_address0 <= ap_const_lv64_2A(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            patches_parameters_address0 <= patches_parameters_addr_9_reg_1483;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            patches_parameters_address0 <= zext_ln1011_2_fu_643_p1(9 - 1 downto 0);
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state81) and ((((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (or_ln1082_1_reg_1662 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (ap_const_lv1_1 = and_ln1082_1_reg_1675)) or ((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1))) or ((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (or_ln1082_1_reg_1662 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (ap_const_lv1_1 = and_ln1082_2_reg_1671)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1)))) then 
            patches_parameters_address0 <= grp_delete_patch_fu_526_patches_parameters_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_address0 <= grp_getShadows_fu_509_wp_parameters_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            patches_parameters_address0 <= grp_makePatch_alignedToLine_fu_484_patches_parameters_address0;
        else 
            patches_parameters_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    patches_parameters_address1_assign_proc : process(makeHorizontallyShiftedPatch_reg_427, ap_CS_fsm_state2, ap_CS_fsm_state4, patches_parameters_addr_15_reg_1493, ap_CS_fsm_state50, or_ln1082_1_reg_1662, and_ln1082_2_reg_1671, and_ln1082_1_reg_1675, ap_CS_fsm_state57, ap_CS_fsm_state62, and_ln1157_reg_1810, icmp_ln1159_reg_1814, grp_makePatch_alignedToLine_fu_484_patches_parameters_address1, grp_getShadows_fu_509_wp_parameters_address1, grp_delete_patch_fu_526_patches_parameters_address1, ap_CS_fsm_state60, ap_CS_fsm_state55, ap_CS_fsm_state81, ap_CS_fsm_state49, ap_CS_fsm_state61)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            patches_parameters_address1 <= ap_const_lv64_18(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            patches_parameters_address1 <= ap_const_lv64_1E(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            patches_parameters_address1 <= patches_parameters_addr_15_reg_1493;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            patches_parameters_address1 <= ap_const_lv64_24(9 - 1 downto 0);
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state81) and ((((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (or_ln1082_1_reg_1662 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (ap_const_lv1_1 = and_ln1082_1_reg_1675)) or ((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1))) or ((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (or_ln1082_1_reg_1662 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (ap_const_lv1_1 = and_ln1082_2_reg_1671)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1)))) then 
            patches_parameters_address1 <= grp_delete_patch_fu_526_patches_parameters_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_address1 <= grp_getShadows_fu_509_wp_parameters_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            patches_parameters_address1 <= grp_makePatch_alignedToLine_fu_484_patches_parameters_address1;
        else 
            patches_parameters_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    patches_parameters_ce0_assign_proc : process(makeHorizontallyShiftedPatch_reg_427, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state14, ap_CS_fsm_state24, ap_CS_fsm_state34, ap_CS_fsm_state50, or_ln1082_1_reg_1662, and_ln1082_2_reg_1671, and_ln1082_1_reg_1675, ap_CS_fsm_state57, ap_CS_fsm_state62, and_ln1157_reg_1810, icmp_ln1159_reg_1814, grp_makePatch_alignedToLine_fu_484_patches_parameters_ce0, grp_getShadows_fu_509_wp_parameters_ce0, grp_delete_patch_fu_526_patches_parameters_ce0, ap_CS_fsm_state60, ap_CS_fsm_state55, ap_CS_fsm_state81, ap_CS_fsm_state49, ap_CS_fsm_state61)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            patches_parameters_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state81) and ((((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (or_ln1082_1_reg_1662 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (ap_const_lv1_1 = and_ln1082_1_reg_1675)) or ((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1))) or ((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (or_ln1082_1_reg_1662 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (ap_const_lv1_1 = and_ln1082_2_reg_1671)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1)))) then 
            patches_parameters_ce0 <= grp_delete_patch_fu_526_patches_parameters_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_ce0 <= grp_getShadows_fu_509_wp_parameters_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            patches_parameters_ce0 <= grp_makePatch_alignedToLine_fu_484_patches_parameters_ce0;
        else 
            patches_parameters_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    patches_parameters_ce1_assign_proc : process(makeHorizontallyShiftedPatch_reg_427, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state50, or_ln1082_1_reg_1662, and_ln1082_2_reg_1671, and_ln1082_1_reg_1675, ap_CS_fsm_state57, ap_CS_fsm_state62, and_ln1157_reg_1810, icmp_ln1159_reg_1814, grp_makePatch_alignedToLine_fu_484_patches_parameters_ce1, grp_getShadows_fu_509_wp_parameters_ce1, grp_delete_patch_fu_526_patches_parameters_ce1, ap_CS_fsm_state60, ap_CS_fsm_state55, ap_CS_fsm_state81, ap_CS_fsm_state49, ap_CS_fsm_state61)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            patches_parameters_ce1 <= ap_const_logic_1;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state81) and ((((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (or_ln1082_1_reg_1662 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (ap_const_lv1_1 = and_ln1082_1_reg_1675)) or ((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1))) or ((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (or_ln1082_1_reg_1662 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (ap_const_lv1_1 = and_ln1082_2_reg_1671)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1)))) then 
            patches_parameters_ce1 <= grp_delete_patch_fu_526_patches_parameters_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_ce1 <= grp_getShadows_fu_509_wp_parameters_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            patches_parameters_ce1 <= grp_makePatch_alignedToLine_fu_484_patches_parameters_ce1;
        else 
            patches_parameters_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    patches_parameters_d0_assign_proc : process(makeHorizontallyShiftedPatch_reg_427, ap_CS_fsm_state2, ap_CS_fsm_state4, or_ln1082_1_reg_1662, and_ln1082_2_reg_1671, and_ln1082_1_reg_1675, ap_CS_fsm_state57, and_ln1157_reg_1810, icmp_ln1159_reg_1814, grp_makePatch_alignedToLine_fu_484_patches_parameters_d0, grp_getShadows_fu_509_wp_parameters_d0, grp_delete_patch_fu_526_patches_parameters_d0, ap_CS_fsm_state60, ap_CS_fsm_state55, ap_CS_fsm_state81)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state81) and ((((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (or_ln1082_1_reg_1662 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (ap_const_lv1_1 = and_ln1082_1_reg_1675)) or ((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1))) or ((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (or_ln1082_1_reg_1662 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (ap_const_lv1_1 = and_ln1082_2_reg_1671)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1)))) then 
            patches_parameters_d0 <= grp_delete_patch_fu_526_patches_parameters_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_d0 <= grp_getShadows_fu_509_wp_parameters_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            patches_parameters_d0 <= grp_makePatch_alignedToLine_fu_484_patches_parameters_d0;
        else 
            patches_parameters_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    patches_parameters_d1 <= grp_getShadows_fu_509_wp_parameters_d1;

    patches_parameters_we0_assign_proc : process(makeHorizontallyShiftedPatch_reg_427, ap_CS_fsm_state2, ap_CS_fsm_state4, or_ln1082_1_reg_1662, and_ln1082_2_reg_1671, and_ln1082_1_reg_1675, ap_CS_fsm_state57, and_ln1157_reg_1810, icmp_ln1159_reg_1814, grp_makePatch_alignedToLine_fu_484_patches_parameters_we0, grp_getShadows_fu_509_wp_parameters_we0, grp_delete_patch_fu_526_patches_parameters_we0, ap_CS_fsm_state60, ap_CS_fsm_state55, ap_CS_fsm_state81)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state81) and ((((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (or_ln1082_1_reg_1662 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (ap_const_lv1_1 = and_ln1082_1_reg_1675)) or ((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1))) or ((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (or_ln1082_1_reg_1662 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (ap_const_lv1_1 = and_ln1082_2_reg_1671)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1)))) then 
            patches_parameters_we0 <= grp_delete_patch_fu_526_patches_parameters_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_we0 <= grp_getShadows_fu_509_wp_parameters_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            patches_parameters_we0 <= grp_makePatch_alignedToLine_fu_484_patches_parameters_we0;
        else 
            patches_parameters_we0 <= ap_const_logic_0;
        end if; 
    end process;


    patches_parameters_we1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, grp_getShadows_fu_509_wp_parameters_we1, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_we1 <= grp_getShadows_fu_509_wp_parameters_we1;
        else 
            patches_parameters_we1 <= ap_const_logic_0;
        end if; 
    end process;


    patches_superpoints_address0_assign_proc : process(makeHorizontallyShiftedPatch_reg_427, ap_CS_fsm_state2, ap_CS_fsm_state4, or_ln1082_1_reg_1662, and_ln1082_2_reg_1671, and_ln1082_1_reg_1675, ap_CS_fsm_state57, and_ln1157_reg_1810, icmp_ln1159_reg_1814, grp_makePatch_alignedToLine_fu_484_patches_superpoints_address0, grp_getShadows_fu_509_wp_superpoints_address0, grp_delete_patch_fu_526_patches_superpoints_address0, ap_CS_fsm_state60, ap_CS_fsm_state55, ap_CS_fsm_state81)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state81) and ((((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (or_ln1082_1_reg_1662 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (ap_const_lv1_1 = and_ln1082_1_reg_1675)) or ((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1))) or ((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (or_ln1082_1_reg_1662 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (ap_const_lv1_1 = and_ln1082_2_reg_1671)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1)))) then 
            patches_superpoints_address0 <= grp_delete_patch_fu_526_patches_superpoints_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_superpoints_address0 <= grp_getShadows_fu_509_wp_superpoints_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            patches_superpoints_address0 <= grp_makePatch_alignedToLine_fu_484_patches_superpoints_address0;
        else 
            patches_superpoints_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    patches_superpoints_address1 <= grp_delete_patch_fu_526_patches_superpoints_address1;

    patches_superpoints_ce0_assign_proc : process(makeHorizontallyShiftedPatch_reg_427, ap_CS_fsm_state2, ap_CS_fsm_state4, or_ln1082_1_reg_1662, and_ln1082_2_reg_1671, and_ln1082_1_reg_1675, ap_CS_fsm_state57, and_ln1157_reg_1810, icmp_ln1159_reg_1814, grp_makePatch_alignedToLine_fu_484_patches_superpoints_ce0, grp_getShadows_fu_509_wp_superpoints_ce0, grp_delete_patch_fu_526_patches_superpoints_ce0, ap_CS_fsm_state60, ap_CS_fsm_state55, ap_CS_fsm_state81)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state81) and ((((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (or_ln1082_1_reg_1662 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (ap_const_lv1_1 = and_ln1082_1_reg_1675)) or ((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1))) or ((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (or_ln1082_1_reg_1662 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (ap_const_lv1_1 = and_ln1082_2_reg_1671)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1)))) then 
            patches_superpoints_ce0 <= grp_delete_patch_fu_526_patches_superpoints_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_superpoints_ce0 <= grp_getShadows_fu_509_wp_superpoints_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            patches_superpoints_ce0 <= grp_makePatch_alignedToLine_fu_484_patches_superpoints_ce0;
        else 
            patches_superpoints_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    patches_superpoints_ce1_assign_proc : process(makeHorizontallyShiftedPatch_reg_427, or_ln1082_1_reg_1662, and_ln1082_2_reg_1671, and_ln1082_1_reg_1675, and_ln1157_reg_1810, icmp_ln1159_reg_1814, grp_delete_patch_fu_526_patches_superpoints_ce1, ap_CS_fsm_state55, ap_CS_fsm_state81)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state81) and ((((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (or_ln1082_1_reg_1662 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (ap_const_lv1_1 = and_ln1082_1_reg_1675)) or ((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1))) or ((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (or_ln1082_1_reg_1662 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (ap_const_lv1_1 = and_ln1082_2_reg_1671)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1)))) then 
            patches_superpoints_ce1 <= grp_delete_patch_fu_526_patches_superpoints_ce1;
        else 
            patches_superpoints_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    patches_superpoints_d0_assign_proc : process(makeHorizontallyShiftedPatch_reg_427, or_ln1082_1_reg_1662, and_ln1082_2_reg_1671, and_ln1082_1_reg_1675, ap_CS_fsm_state57, and_ln1157_reg_1810, icmp_ln1159_reg_1814, grp_makePatch_alignedToLine_fu_484_patches_superpoints_d0, grp_delete_patch_fu_526_patches_superpoints_d0, ap_CS_fsm_state55, ap_CS_fsm_state81)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state81) and ((((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (or_ln1082_1_reg_1662 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (ap_const_lv1_1 = and_ln1082_1_reg_1675)) or ((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1))) or ((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (or_ln1082_1_reg_1662 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (ap_const_lv1_1 = and_ln1082_2_reg_1671)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1)))) then 
            patches_superpoints_d0 <= grp_delete_patch_fu_526_patches_superpoints_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            patches_superpoints_d0 <= grp_makePatch_alignedToLine_fu_484_patches_superpoints_d0;
        else 
            patches_superpoints_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    patches_superpoints_we0_assign_proc : process(makeHorizontallyShiftedPatch_reg_427, or_ln1082_1_reg_1662, and_ln1082_2_reg_1671, and_ln1082_1_reg_1675, ap_CS_fsm_state57, and_ln1157_reg_1810, icmp_ln1159_reg_1814, grp_makePatch_alignedToLine_fu_484_patches_superpoints_we0, grp_delete_patch_fu_526_patches_superpoints_we0, ap_CS_fsm_state55, ap_CS_fsm_state81)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state81) and ((((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (or_ln1082_1_reg_1662 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (ap_const_lv1_1 = and_ln1082_1_reg_1675)) or ((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1))) or ((icmp_ln1159_reg_1814 = ap_const_lv1_1) and (or_ln1082_1_reg_1662 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1157_reg_1810) and (ap_const_lv1_1 = and_ln1082_2_reg_1671)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_427 = ap_const_lv1_1)))) then 
            patches_superpoints_we0 <= grp_delete_patch_fu_526_patches_superpoints_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            patches_superpoints_we0 <= grp_makePatch_alignedToLine_fu_484_patches_superpoints_we0;
        else 
            patches_superpoints_we0 <= ap_const_logic_0;
        end if; 
    end process;

    phitmp3_fu_885_p2 <= "1" when (unsigned(select_ln180_5_fu_877_p3) > unsigned(ap_const_lv32_11E1A2FF)) else "0";
    phitmp4_fu_835_p2 <= "1" when (unsigned(select_ln180_4_fu_827_p3) > unsigned(ap_const_lv32_11E1A2FF)) else "0";
    phitmp5_fu_929_p2 <= "1" when (unsigned(select_ln180_6_fu_921_p3) > unsigned(ap_const_lv32_11E1A2FF)) else "0";
    phitmp_fu_791_p2 <= "1" when (unsigned(select_ln180_fu_783_p3) > unsigned(ap_const_lv32_11E1A2FF)) else "0";
    ret_10_fu_1261_p2 <= std_logic_vector(signed(sext_ln215_18_reg_1768) - signed(sext_ln215_22_fu_1258_p1));
    ret_11_fu_1291_p2 <= std_logic_vector(signed(sext_ln215_23_fu_1288_p1) - signed(sext_ln215_19_reg_1778));
    ret_12_fu_1299_p2 <= std_logic_vector(signed(sext_ln215_20_reg_1783) - signed(sext_ln215_24_fu_1296_p1));
    ret_7_fu_847_p2 <= std_logic_vector(signed(sext_ln215_13_fu_841_p1) - signed(sext_ln215_14_fu_844_p1));
    ret_8_fu_901_p2 <= std_logic_vector(signed(sext_ln215_15_fu_895_p1) - signed(sext_ln215_16_fu_898_p1));
    ret_9_fu_1253_p2 <= std_logic_vector(signed(sext_ln215_21_fu_1250_p1) - signed(sext_ln215_17_reg_1763));
    ret_fu_807_p2 <= std_logic_vector(signed(sext_ln215_fu_801_p1) - signed(sext_ln215_12_fu_804_p1));
    secondLastPatchIndex_1_fu_595_p3 <= 
        ap_const_lv5_0 when (icmp_ln996_reg_1388(0) = '1') else 
        secondLastPatchIndex_reg_1399;
    secondLastPatchIndex_fu_590_p2 <= std_logic_vector(unsigned(empty_reg_1382) + unsigned(ap_const_lv5_1F));
    select_ln1011_fu_608_p3 <= 
        ap_const_lv5_6 when (icmp_ln996_reg_1388(0) = '1') else 
        ap_const_lv5_1A;
    select_ln1015_1_fu_673_p3 <= 
        ap_const_lv9_8 when (icmp_ln996_reg_1388(0) = '1') else 
        ap_const_lv9_30;
    select_ln1015_fu_666_p3 <= 
        ap_const_lv9_20 when (icmp_ln996_reg_1388(0) = '1') else 
        ap_const_lv9_C0;
    select_ln1035_fu_691_p3 <= 
        ap_const_lv5_7 when (icmp_ln996_reg_1388(0) = '1') else 
        ap_const_lv5_1B;
    select_ln1036_fu_733_p3 <= 
        ap_const_lv5_5 when (icmp_ln996_reg_1388(0) = '1') else 
        ap_const_lv5_19;
    select_ln180_4_fu_827_p3 <= 
        grp_fu_573_p2 when (tmp_17_fu_819_p3(0) = '1') else 
        reg_564;
    select_ln180_5_fu_877_p3 <= 
        grp_fu_573_p2 when (tmp_18_fu_869_p3(0) = '1') else 
        reg_564;
    select_ln180_6_fu_921_p3 <= 
        grp_fu_573_p2 when (tmp_19_fu_913_p3(0) = '1') else 
        reg_564;
    select_ln180_fu_783_p3 <= 
        grp_fu_573_p2 when (tmp_16_fu_775_p3(0) = '1') else 
        reg_564;
    select_ln534_fu_1113_p3 <= 
        empty_69_reg_317 when (icmp_ln878_5_fu_1107_p2(0) = '1') else 
        empty_70_reg_326;
        sext_ln1015_fu_686_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1015_fu_680_p2),64));

        sext_ln1062_fu_997_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shifted_Align_1_fu_991_p3),64));

    sext_ln215_12_fu_804_p0 <= apexZ0;
        sext_ln215_12_fu_804_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln215_12_fu_804_p0),33));

        sext_ln215_13_fu_841_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(complementary_topR_jR_V_3_reg_1525),33));

    sext_ln215_14_fu_844_p0 <= complementary_apexZ0;
        sext_ln215_14_fu_844_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln215_14_fu_844_p0),33));

        sext_ln215_15_fu_895_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(complementary_topL_jR_V_3_reg_1543),33));

    sext_ln215_16_fu_898_p0 <= apexZ0;
        sext_ln215_16_fu_898_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln215_16_fu_898_p0),33));

        sext_ln215_17_fu_1224_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(original_topR_jL_V_3_reg_1744),33));

        sext_ln215_18_fu_1227_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(complementary_topR_jR_V_4_reg_1710),33));

        sext_ln215_19_fu_1234_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(original_topL_jL_V_4_reg_1737),33));

        sext_ln215_20_fu_1237_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(complementary_topL_jR_V_4_reg_1717),33));

        sext_ln215_21_fu_1250_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(complementary_topR_jL_V_3_reg_1751),33));

        sext_ln215_22_fu_1258_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(original_topR_jR_V_3_reg_1724),33));

        sext_ln215_23_fu_1288_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(complementary_topL_jL_V_3_reg_1757),33));

        sext_ln215_24_fu_1296_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(original_topL_jR_V_3_reg_1731),33));

        sext_ln215_fu_801_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(original_topL_jL_V_3_reg_1503),33));

        sext_ln534_fu_1121_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln534_reg_1679),64));

    shiftOriginal_1_fu_1001_p2 <= (shiftOriginal_fu_985_p2 or icmp_ln886_5_reg_1599);
    shiftOriginal_fu_985_p2 <= (tmp_20_fu_971_p3 xor ap_const_lv1_1);
    shifted_Align_1_fu_991_p1 <= apexZ0;
    shifted_Align_1_fu_991_p3 <= 
        shifted_Align_1_fu_991_p1 when (icmp_ln886_5_reg_1599(0) = '1') else 
        shifted_Align_fu_979_p3;
    shifted_Align_3_fu_1124_p2 <= std_logic_vector(unsigned(shifted_Align_2_reg_441) - unsigned(sext_ln534_fu_1121_p1));
    shifted_Align_4_fu_1130_p2 <= std_logic_vector(unsigned(shifted_Align_2_reg_441) + unsigned(sext_ln534_fu_1121_p1));
    shifted_Align_5_fu_1136_p3 <= 
        shifted_Align_3_fu_1124_p2 when (shiftOriginal_1_reg_1631(0) = '1') else 
        shifted_Align_4_fu_1130_p2;
    shifted_Align_fu_979_p1 <= complementary_apexZ0;
    shifted_Align_fu_979_p2 <= apexZ0;
    shifted_Align_fu_979_p3 <= 
        shifted_Align_fu_979_p1 when (tmp_20_fu_971_p3(0) = '1') else 
        shifted_Align_fu_979_p2;
    sub_ln1011_fu_637_p2 <= std_logic_vector(unsigned(zext_ln1011_fu_622_p1) - unsigned(zext_ln1011_1_fu_633_p1));
    sub_ln1015_fu_680_p2 <= std_logic_vector(unsigned(select_ln1015_fu_666_p3) - unsigned(select_ln1015_1_fu_673_p3));
    sub_ln1035_fu_722_p2 <= std_logic_vector(unsigned(zext_ln1035_fu_706_p1) - unsigned(zext_ln1035_1_fu_718_p1));
    sub_ln1036_fu_764_p2 <= std_logic_vector(unsigned(zext_ln1036_fu_748_p1) - unsigned(zext_ln1036_1_fu_760_p1));
    tmp_11_fu_626_p3 <= (select_ln1011_reg_1414 & ap_const_lv1_0);
    tmp_12_fu_698_p3 <= (select_ln1035_fu_691_p3 & ap_const_lv3_0);
    tmp_13_fu_710_p3 <= (select_ln1035_fu_691_p3 & ap_const_lv1_0);
    tmp_14_fu_740_p3 <= (select_ln1036_fu_733_p3 & ap_const_lv3_0);
    tmp_15_fu_752_p3 <= (select_ln1036_fu_733_p3 & ap_const_lv1_0);
    tmp_16_fu_775_p3 <= reg_564(31 downto 31);
    tmp_17_fu_819_p3 <= reg_564(31 downto 31);
    tmp_18_fu_869_p3 <= reg_564(31 downto 31);
    tmp_19_fu_913_p3 <= reg_564(31 downto 31);
    tmp_20_fu_971_p3 <= grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_dout0(31 downto 31);
    tmp_21_fu_1027_p4 <= empty_70_reg_326(31 downto 1);
    tmp_22_fu_1068_p4 <= empty_69_reg_317(31 downto 1);
    tmp_fu_615_p3 <= (select_ln1011_reg_1414 & ap_const_lv3_0);
    trunc_ln1050_1_fu_1143_p1 <= shifted_Align_5_fu_1136_p3(32 - 1 downto 0);
    trunc_ln1050_fu_1023_p1 <= shifted_Align_2_reg_441(32 - 1 downto 0);
    trunc_ln1108_fu_1158_p1 <= n_patches_i(5 - 1 downto 0);
    trunc_ln1130_1_fu_1276_p1 <= ret_9_fu_1253_p2(32 - 1 downto 0);
    trunc_ln1130_fu_1272_p1 <= ret_10_fu_1261_p2(32 - 1 downto 0);
    trunc_ln1131_1_fu_1314_p1 <= ret_11_fu_1291_p2(32 - 1 downto 0);
    trunc_ln1131_fu_1310_p1 <= ret_12_fu_1299_p2(32 - 1 downto 0);
    xor_ln1009_fu_602_p2 <= (icmp_ln996_reg_1388 xor ap_const_lv1_1);
    xor_ln1082_fu_1089_p2 <= (or_ln1082_3_fu_1084_p2 xor ap_const_lv1_1);
    zext_ln1011_1_fu_633_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_626_p3),9));
    zext_ln1011_2_fu_643_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln1011_fu_637_p2),64));
    zext_ln1011_fu_622_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_615_p3),9));
    zext_ln1035_1_fu_718_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_fu_710_p3),9));
    zext_ln1035_2_fu_728_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln1035_fu_722_p2),64));
    zext_ln1035_fu_706_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_698_p3),9));
    zext_ln1036_1_fu_760_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_fu_752_p3),9));
    zext_ln1036_2_fu_770_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln1036_fu_764_p2),64));
    zext_ln1036_fu_748_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_fu_740_p3),9));
    zext_ln1102_fu_1147_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_568),9));
    zext_ln1161_fu_1363_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1161_fu_1357_p2),9));
end behav;
