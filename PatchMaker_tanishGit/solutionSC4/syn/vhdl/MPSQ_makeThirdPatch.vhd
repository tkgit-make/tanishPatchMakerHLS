-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity MPSQ_makeThirdPatch is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    n_patches_i : IN STD_LOGIC_VECTOR (7 downto 0);
    n_patches_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    n_patches_o_ap_vld : OUT STD_LOGIC;
    GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    GDn_points_ce0 : OUT STD_LOGIC;
    GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    lastPatchIndex : IN STD_LOGIC_VECTOR (7 downto 0);
    z_top_min : IN STD_LOGIC_VECTOR (31 downto 0);
    z_top_max : IN STD_LOGIC_VECTOR (31 downto 0);
    complementary_apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
    apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
    ppl : IN STD_LOGIC_VECTOR (31 downto 0);
    GDarrayDecoded_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    GDarrayDecoded_ce0 : OUT STD_LOGIC;
    GDarrayDecoded_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    patches_superpoints_ce0 : OUT STD_LOGIC;
    patches_superpoints_we0 : OUT STD_LOGIC;
    patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    patches_superpoints_ce1 : OUT STD_LOGIC;
    patches_superpoints_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_parameters_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    patches_parameters_ce0 : OUT STD_LOGIC;
    patches_parameters_we0 : OUT STD_LOGIC;
    patches_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    patches_parameters_ce1 : OUT STD_LOGIC;
    patches_parameters_we1 : OUT STD_LOGIC;
    patches_parameters_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din3 : OUT STD_LOGIC_VECTOR (2 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din4 : OUT STD_LOGIC_VECTOR (2 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din5 : OUT STD_LOGIC_VECTOR (2 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_ce : OUT STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_start : OUT STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_ready : IN STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_done : IN STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_idle : IN STD_LOGIC );
end;


architecture behav of MPSQ_makeThirdPatch is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (80 downto 0) := "000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (80 downto 0) := "000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (80 downto 0) := "000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (80 downto 0) := "000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (80 downto 0) := "000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (80 downto 0) := "000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (80 downto 0) := "000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (80 downto 0) := "000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (80 downto 0) := "000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (80 downto 0) := "001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (80 downto 0) := "010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (80 downto 0) := "100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv64_2A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101010";
    constant ap_const_lv64_1E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011110";
    constant ap_const_lv64_24 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100100";
    constant ap_const_lv64_18 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011000";
    constant ap_const_lv32_FFF0BDC0 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111100001011110111000000";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv9_20 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_const_lv9_C0 : STD_LOGIC_VECTOR (8 downto 0) := "011000000";
    constant ap_const_lv9_8 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_const_lv9_30 : STD_LOGIC_VECTOR (8 downto 0) := "000110000";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_11E1A2FF : STD_LOGIC_VECTOR (31 downto 0) := "00010001111000011010001011111111";
    constant ap_const_lv33_1FFFFFF9C : STD_LOGIC_VECTOR (32 downto 0) := "111111111111111111111111110011100";
    constant ap_const_lv33_32 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000110010";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv32_E4E1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000111001001110000111000000";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_FD : STD_LOGIC_VECTOR (7 downto 0) := "11111101";
    constant ap_const_boolean_0 : BOOLEAN := false;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_straightLineProjectorFromLayerIJtoK_fu_534_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_560 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal reg_564 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal makeHorizontallyShiftedPatch_reg_425 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal empty_fu_575_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_reg_1378 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln1000_fu_580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1000_reg_1384 : STD_LOGIC_VECTOR (0 downto 0);
    signal secondLastPatchIndex_fu_586_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal secondLastPatchIndex_reg_1395 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal secondLastPatchIndex_1_fu_591_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal secondLastPatchIndex_1_reg_1400 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal xor_ln1013_fu_598_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1013_reg_1405 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1015_fu_604_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln1015_reg_1410 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal original_topR_jL_V_reg_1440 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln1016_fu_656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1016_reg_1447 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal patches_parameters_addr_9_reg_1479 : STD_LOGIC_VECTOR (8 downto 0);
    signal patches_parameters_addr_14_reg_1484 : STD_LOGIC_VECTOR (8 downto 0);
    signal patches_parameters_addr_15_reg_1489 : STD_LOGIC_VECTOR (8 downto 0);
    signal phitmp_fu_787_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal original_topL_jL_V_3_reg_1499 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal icmp_ln886_2_fu_793_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_2_reg_1508 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal icmp_ln878_2_fu_809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_2_reg_1512 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp4_fu_831_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal complementary_topR_jR_V_3_reg_1521 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal and_ln1026_fu_859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1026_reg_1530 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal phitmp3_fu_881_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal complementary_topL_jR_V_3_reg_1539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal icmp_ln886_4_fu_887_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_4_reg_1548 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal icmp_ln878_4_fu_903_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_4_reg_1552 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp5_fu_925_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal or_ln1086_fu_931_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1086_reg_1575 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1086_2_fu_947_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1086_2_reg_1580 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal complementary_topR_jL_V_reg_1585 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal complementary_topL_jL_V_reg_1590 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_5_fu_953_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_5_reg_1595 : STD_LOGIC_VECTOR (0 downto 0);
    signal horizontalShiftTop_fu_959_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal horizontalShiftBottom_fu_963_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1066_fu_993_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shiftOriginal_1_fu_997_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shiftOriginal_1_reg_1627 : STD_LOGIC_VECTOR (0 downto 0);
    signal lnot_fu_1007_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lnot_reg_1641 : STD_LOGIC_VECTOR (0 downto 0);
    signal newZtop_V_1_fu_1013_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newZtop_V_1_reg_1646 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1054_fu_1019_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal or_ln1086_1_fu_1039_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1086_1_reg_1658 : STD_LOGIC_VECTOR (0 downto 0);
    signal loopCounter_2_fu_1044_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loopCounter_2_reg_1662 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln1086_2_fu_1058_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1086_2_reg_1667 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1086_1_fu_1097_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1086_1_reg_1671 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln534_fu_1109_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln534_reg_1675 : STD_LOGIC_VECTOR (31 downto 0);
    signal shifted_Align_5_fu_1132_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal shifted_Align_5_reg_1680 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1054_1_fu_1139_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1054_1_reg_1685 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln1106_fu_1147_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1106_reg_1691 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal grp_makePatch_alignedToLine_fu_482_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ppl_assign1_reg_1696 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal add_ln1112_fu_1158_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1112_reg_1701 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal complementary_topR_jR_V_4_fu_1164_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topR_jR_V_4_reg_1706 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal complementary_topL_jR_V_4_fu_1171_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topL_jR_V_4_reg_1713 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topR_jR_V_3_fu_1178_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topR_jR_V_3_reg_1720 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topL_jR_V_3_fu_1185_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topL_jR_V_3_reg_1727 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topL_jL_V_4_fu_1192_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topL_jL_V_4_reg_1733 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal original_topR_jL_V_3_fu_1199_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topR_jL_V_3_reg_1740 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topR_jL_V_3_fu_1206_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topR_jL_V_3_reg_1747 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topL_jL_V_3_fu_1213_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topL_jL_V_3_reg_1753 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_17_fu_1220_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_17_reg_1759 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal sext_ln215_18_fu_1223_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_18_reg_1764 : STD_LOGIC_VECTOR (32 downto 0);
    signal horizontalShiftTop_1_fu_1226_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal horizontalShiftTop_1_reg_1769 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_19_fu_1230_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_19_reg_1774 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_20_fu_1233_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_20_reg_1779 : STD_LOGIC_VECTOR (32 downto 0);
    signal horizontalShiftBottom_1_fu_1236_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal horizontalShiftBottom_1_reg_1784 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln878_6_fu_1240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_6_reg_1789 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal horizontalOverlapTop_V_1_fu_1276_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal horizontalOverlapTop_V_1_reg_1793 : STD_LOGIC_VECTOR (31 downto 0);
    signal horizontalOverlapBottom_V_1_fu_1314_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal horizontalOverlapBottom_V_1_reg_1798 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln1161_fu_1342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1161_reg_1806 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state78 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal icmp_ln1163_fu_1347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1163_reg_1810 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln1165_fu_1359_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1165_reg_1814 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state80 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal grp_makePatch_alignedToLine_fu_482_ap_start : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_482_ap_done : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_482_ap_idle : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_482_ap_ready : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_482_n_patches_o : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_makePatch_alignedToLine_fu_482_n_patches_o_ap_vld : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_482_GDn_points_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_makePatch_alignedToLine_fu_482_GDn_points_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_482_GDarrayDecoded_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_makePatch_alignedToLine_fu_482_GDarrayDecoded_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_482_patches_superpoints_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_makePatch_alignedToLine_fu_482_patches_superpoints_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_482_patches_superpoints_we0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_482_patches_superpoints_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_makePatch_alignedToLine_fu_482_patches_parameters_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_makePatch_alignedToLine_fu_482_patches_parameters_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_482_patches_parameters_we0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_482_patches_parameters_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makePatch_alignedToLine_fu_482_patches_parameters_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_makePatch_alignedToLine_fu_482_patches_parameters_ce1 : STD_LOGIC;
    signal grp_getShadows_fu_505_ap_start : STD_LOGIC;
    signal grp_getShadows_fu_505_ap_done : STD_LOGIC;
    signal grp_getShadows_fu_505_ap_idle : STD_LOGIC;
    signal grp_getShadows_fu_505_ap_ready : STD_LOGIC;
    signal grp_getShadows_fu_505_wp_superpoints_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_getShadows_fu_505_wp_superpoints_ce0 : STD_LOGIC;
    signal grp_getShadows_fu_505_wp_superpoints_offset : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_getShadows_fu_505_wp_parameters_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_getShadows_fu_505_wp_parameters_ce0 : STD_LOGIC;
    signal grp_getShadows_fu_505_wp_parameters_we0 : STD_LOGIC;
    signal grp_getShadows_fu_505_wp_parameters_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getShadows_fu_505_wp_parameters_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_getShadows_fu_505_wp_parameters_ce1 : STD_LOGIC;
    signal grp_getShadows_fu_505_wp_parameters_we1 : STD_LOGIC;
    signal grp_getShadows_fu_505_wp_parameters_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getShadows_fu_505_wp_parameters_offset : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_delete_patch_fu_522_ap_start : STD_LOGIC;
    signal grp_delete_patch_fu_522_ap_done : STD_LOGIC;
    signal grp_delete_patch_fu_522_ap_idle : STD_LOGIC;
    signal grp_delete_patch_fu_522_ap_ready : STD_LOGIC;
    signal grp_delete_patch_fu_522_n_patches : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_delete_patch_fu_522_n_patches_ap_vld : STD_LOGIC;
    signal grp_delete_patch_fu_522_index : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_delete_patch_fu_522_patches_superpoints_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_delete_patch_fu_522_patches_superpoints_ce0 : STD_LOGIC;
    signal grp_delete_patch_fu_522_patches_superpoints_we0 : STD_LOGIC;
    signal grp_delete_patch_fu_522_patches_superpoints_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_delete_patch_fu_522_patches_superpoints_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_delete_patch_fu_522_patches_superpoints_ce1 : STD_LOGIC;
    signal grp_delete_patch_fu_522_patches_parameters_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_delete_patch_fu_522_patches_parameters_ce0 : STD_LOGIC;
    signal grp_delete_patch_fu_522_patches_parameters_we0 : STD_LOGIC;
    signal grp_delete_patch_fu_522_patches_parameters_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_delete_patch_fu_522_patches_parameters_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_delete_patch_fu_522_patches_parameters_ce1 : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_534_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_534_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_534_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_534_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_534_ap_ce : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_534_z_i : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_534_z_j : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_534_i : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_534_j : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_534_k : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_65_reg_252 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_66_reg_264 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_67_reg_279 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal empty_68_reg_291 : STD_LOGIC_VECTOR (0 downto 0);
    signal ppl_assign_0_reg_305 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal icmp_ln1151_fu_1330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_69_reg_315 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_70_reg_324 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topR_jR_V_reg_333 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topL_jL_V_reg_343 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topR_jL_V_1_reg_353 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topL_jR_V_reg_363 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topR_jL_V_1_reg_373 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topL_jL_V_1_reg_383 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topR_jR_V_1_reg_393 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topL_jR_V_1_reg_403 : STD_LOGIC_VECTOR (31 downto 0);
    signal newZtop_V_reg_413 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_430_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal shifted_Align_2_reg_439 : STD_LOGIC_VECTOR (63 downto 0);
    signal loopCounter_reg_449 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_ln166_reg_461 : STD_LOGIC_VECTOR (31 downto 0);
    signal agg_tmp178_0_reg_471 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makePatch_alignedToLine_fu_482_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal grp_getShadows_fu_505_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal grp_delete_patch_fu_522_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal ap_CS_fsm_state81 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state81 : signal is "none";
    signal grp_straightLineProjectorFromLayerIJtoK_fu_534_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (80 downto 0);
    signal ap_NS_fsm_state7 : STD_LOGIC;
    signal ap_NS_fsm_state17 : STD_LOGIC;
    signal ap_NS_fsm_state27 : STD_LOGIC;
    signal ap_NS_fsm_state37 : STD_LOGIC;
    signal ap_NS_fsm_state44 : STD_LOGIC;
    signal ap_NS_fsm_state45 : STD_LOGIC;
    signal ap_NS_fsm_state64 : STD_LOGIC;
    signal ap_NS_fsm_state72 : STD_LOGIC;
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal zext_ln1015_2_fu_639_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1019_fu_682_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1039_2_fu_724_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1040_2_fu_766_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal horizontalOverlapBottom_V_fu_132 : STD_LOGIC_VECTOR (31 downto 0);
    signal horizontalOverlapTop_V_fu_136 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal tmp_fu_611_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_622_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1015_fu_618_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1015_1_fu_629_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1015_fu_633_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln886_fu_644_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln878_fu_650_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_fu_644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_fu_650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1019_fu_662_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln1019_1_fu_669_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1019_fu_676_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln1039_fu_687_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_12_fu_694_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_706_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1039_fu_702_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1039_1_fu_714_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1039_fu_718_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln1040_fu_729_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_14_fu_736_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_748_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1040_fu_744_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1040_1_fu_756_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1040_fu_760_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_16_fu_771_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_569_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln180_fu_779_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_2_fu_793_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_12_fu_800_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_fu_797_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_12_fu_800_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_fu_803_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_17_fu_815_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln180_4_fu_823_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_14_fu_840_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_13_fu_837_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_14_fu_840_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_7_fu_843_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln878_3_fu_855_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_3_fu_849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_3_fu_855_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_865_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln180_5_fu_873_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_4_fu_887_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_16_fu_894_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_15_fu_891_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_16_fu_894_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_8_fu_897_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_19_fu_909_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln180_6_fu_917_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_967_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal shifted_Align_fu_975_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shifted_Align_fu_975_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shifted_Align_1_fu_987_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shifted_Align_fu_975_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal shifted_Align_1_fu_987_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal shiftOriginal_fu_981_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i301_not_fu_1002_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_1023_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln1086_fu_1033_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_555_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_1064_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln1086_1_fu_1074_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1086_3_fu_1080_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1086_fu_1085_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1086_fu_1091_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_5_fu_1103_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln534_fu_1117_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shifted_Align_3_fu_1120_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shifted_Align_4_fu_1126_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1106_fu_1143_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln1112_fu_1154_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln215_21_fu_1246_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_22_fu_1254_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_9_fu_1249_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_10_fu_1257_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln878_7_fu_1262_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1134_fu_1268_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1134_1_fu_1272_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_23_fu_1284_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_24_fu_1292_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_11_fu_1287_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_12_fu_1295_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln878_8_fu_1300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1135_fu_1306_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1135_1_fu_1310_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_6_fu_1336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1165_fu_1353_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_predicate_op389_call_state81 : BOOLEAN;
    signal ap_block_state81_on_subcall_done : BOOLEAN;
    signal ap_block_state55_on_subcall_done : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component MPSQ_makePatch_alignedToLine IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        n_patches_i : IN STD_LOGIC_VECTOR (7 downto 0);
        n_patches_o : OUT STD_LOGIC_VECTOR (7 downto 0);
        n_patches_o_ap_vld : OUT STD_LOGIC;
        GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        GDn_points_ce0 : OUT STD_LOGIC;
        GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
        z_top : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        leftRight : IN STD_LOGIC_VECTOR (0 downto 0);
        GDarrayDecoded_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        GDarrayDecoded_ce0 : OUT STD_LOGIC;
        GDarrayDecoded_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_superpoints_ce0 : OUT STD_LOGIC;
        patches_superpoints_we0 : OUT STD_LOGIC;
        patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_parameters_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        patches_parameters_ce0 : OUT STD_LOGIC;
        patches_parameters_we0 : OUT STD_LOGIC;
        patches_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        patches_parameters_ce1 : OUT STD_LOGIC;
        patches_parameters_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MPSQ_getShadows IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        wp_superpoints_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        wp_superpoints_ce0 : OUT STD_LOGIC;
        wp_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        wp_superpoints_offset : IN STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        wp_parameters_ce0 : OUT STD_LOGIC;
        wp_parameters_we0 : OUT STD_LOGIC;
        wp_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        wp_parameters_ce1 : OUT STD_LOGIC;
        wp_parameters_we1 : OUT STD_LOGIC;
        wp_parameters_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters_offset : IN STD_LOGIC_VECTOR (0 downto 0);
        zTopMin : IN STD_LOGIC_VECTOR (31 downto 0);
        zTopMax : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MPSQ_delete_patch IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        n_patches : OUT STD_LOGIC_VECTOR (7 downto 0);
        n_patches_ap_vld : OUT STD_LOGIC;
        n_patches_read : IN STD_LOGIC_VECTOR (7 downto 0);
        index : IN STD_LOGIC_VECTOR (8 downto 0);
        patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_superpoints_ce0 : OUT STD_LOGIC;
        patches_superpoints_we0 : OUT STD_LOGIC;
        patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_superpoints_ce1 : OUT STD_LOGIC;
        patches_superpoints_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_parameters_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        patches_parameters_ce0 : OUT STD_LOGIC;
        patches_parameters_we0 : OUT STD_LOGIC;
        patches_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        patches_parameters_ce1 : OUT STD_LOGIC;
        patches_parameters_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MPSQ_straightLineProjectorFromLayerIJtoK IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        z_i : IN STD_LOGIC_VECTOR (31 downto 0);
        z_j : IN STD_LOGIC_VECTOR (31 downto 0);
        i : IN STD_LOGIC_VECTOR (2 downto 0);
        j : IN STD_LOGIC_VECTOR (2 downto 0);
        k : IN STD_LOGIC_VECTOR (2 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_makePatch_alignedToLine_fu_482 : component MPSQ_makePatch_alignedToLine
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_makePatch_alignedToLine_fu_482_ap_start,
        ap_done => grp_makePatch_alignedToLine_fu_482_ap_done,
        ap_idle => grp_makePatch_alignedToLine_fu_482_ap_idle,
        ap_ready => grp_makePatch_alignedToLine_fu_482_ap_ready,
        n_patches_i => n_patches_i,
        n_patches_o => grp_makePatch_alignedToLine_fu_482_n_patches_o,
        n_patches_o_ap_vld => grp_makePatch_alignedToLine_fu_482_n_patches_o_ap_vld,
        GDn_points_address0 => grp_makePatch_alignedToLine_fu_482_GDn_points_address0,
        GDn_points_ce0 => grp_makePatch_alignedToLine_fu_482_GDn_points_ce0,
        GDn_points_q0 => GDn_points_q0,
        apexZ0 => trunc_ln1054_1_reg_1685,
        z_top => newZtop_V_1_reg_1646,
        p_read => ppl_assign_0_reg_305,
        leftRight => lnot_reg_1641,
        GDarrayDecoded_address0 => grp_makePatch_alignedToLine_fu_482_GDarrayDecoded_address0,
        GDarrayDecoded_ce0 => grp_makePatch_alignedToLine_fu_482_GDarrayDecoded_ce0,
        GDarrayDecoded_q0 => GDarrayDecoded_q0,
        patches_superpoints_address0 => grp_makePatch_alignedToLine_fu_482_patches_superpoints_address0,
        patches_superpoints_ce0 => grp_makePatch_alignedToLine_fu_482_patches_superpoints_ce0,
        patches_superpoints_we0 => grp_makePatch_alignedToLine_fu_482_patches_superpoints_we0,
        patches_superpoints_d0 => grp_makePatch_alignedToLine_fu_482_patches_superpoints_d0,
        patches_superpoints_q0 => patches_superpoints_q0,
        patches_parameters_address0 => grp_makePatch_alignedToLine_fu_482_patches_parameters_address0,
        patches_parameters_ce0 => grp_makePatch_alignedToLine_fu_482_patches_parameters_ce0,
        patches_parameters_we0 => grp_makePatch_alignedToLine_fu_482_patches_parameters_we0,
        patches_parameters_d0 => grp_makePatch_alignedToLine_fu_482_patches_parameters_d0,
        patches_parameters_address1 => grp_makePatch_alignedToLine_fu_482_patches_parameters_address1,
        patches_parameters_ce1 => grp_makePatch_alignedToLine_fu_482_patches_parameters_ce1,
        patches_parameters_q1 => patches_parameters_q1,
        ap_return => grp_makePatch_alignedToLine_fu_482_ap_return);

    grp_getShadows_fu_505 : component MPSQ_getShadows
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_getShadows_fu_505_ap_start,
        ap_done => grp_getShadows_fu_505_ap_done,
        ap_idle => grp_getShadows_fu_505_ap_idle,
        ap_ready => grp_getShadows_fu_505_ap_ready,
        wp_superpoints_address0 => grp_getShadows_fu_505_wp_superpoints_address0,
        wp_superpoints_ce0 => grp_getShadows_fu_505_wp_superpoints_ce0,
        wp_superpoints_q0 => patches_superpoints_q0,
        wp_superpoints_offset => grp_getShadows_fu_505_wp_superpoints_offset,
        wp_parameters_address0 => grp_getShadows_fu_505_wp_parameters_address0,
        wp_parameters_ce0 => grp_getShadows_fu_505_wp_parameters_ce0,
        wp_parameters_we0 => grp_getShadows_fu_505_wp_parameters_we0,
        wp_parameters_d0 => grp_getShadows_fu_505_wp_parameters_d0,
        wp_parameters_address1 => grp_getShadows_fu_505_wp_parameters_address1,
        wp_parameters_ce1 => grp_getShadows_fu_505_wp_parameters_ce1,
        wp_parameters_we1 => grp_getShadows_fu_505_wp_parameters_we1,
        wp_parameters_d1 => grp_getShadows_fu_505_wp_parameters_d1,
        wp_parameters_offset => grp_getShadows_fu_505_wp_parameters_offset,
        zTopMin => z_top_min,
        zTopMax => z_top_max);

    grp_delete_patch_fu_522 : component MPSQ_delete_patch
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_delete_patch_fu_522_ap_start,
        ap_done => grp_delete_patch_fu_522_ap_done,
        ap_idle => grp_delete_patch_fu_522_ap_idle,
        ap_ready => grp_delete_patch_fu_522_ap_ready,
        n_patches => grp_delete_patch_fu_522_n_patches,
        n_patches_ap_vld => grp_delete_patch_fu_522_n_patches_ap_vld,
        n_patches_read => reg_564,
        index => grp_delete_patch_fu_522_index,
        patches_superpoints_address0 => grp_delete_patch_fu_522_patches_superpoints_address0,
        patches_superpoints_ce0 => grp_delete_patch_fu_522_patches_superpoints_ce0,
        patches_superpoints_we0 => grp_delete_patch_fu_522_patches_superpoints_we0,
        patches_superpoints_d0 => grp_delete_patch_fu_522_patches_superpoints_d0,
        patches_superpoints_address1 => grp_delete_patch_fu_522_patches_superpoints_address1,
        patches_superpoints_ce1 => grp_delete_patch_fu_522_patches_superpoints_ce1,
        patches_superpoints_q1 => patches_superpoints_q1,
        patches_parameters_address0 => grp_delete_patch_fu_522_patches_parameters_address0,
        patches_parameters_ce0 => grp_delete_patch_fu_522_patches_parameters_ce0,
        patches_parameters_we0 => grp_delete_patch_fu_522_patches_parameters_we0,
        patches_parameters_d0 => grp_delete_patch_fu_522_patches_parameters_d0,
        patches_parameters_address1 => grp_delete_patch_fu_522_patches_parameters_address1,
        patches_parameters_ce1 => grp_delete_patch_fu_522_patches_parameters_ce1,
        patches_parameters_q1 => patches_parameters_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_delete_patch_fu_522_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_delete_patch_fu_522_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state54))) then 
                    grp_delete_patch_fu_522_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_delete_patch_fu_522_ap_ready = ap_const_logic_1)) then 
                    grp_delete_patch_fu_522_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_getShadows_fu_505_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_getShadows_fu_505_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                    grp_getShadows_fu_505_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_getShadows_fu_505_ap_ready = ap_const_logic_1)) then 
                    grp_getShadows_fu_505_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_makePatch_alignedToLine_fu_482_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_makePatch_alignedToLine_fu_482_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
                    grp_makePatch_alignedToLine_fu_482_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_makePatch_alignedToLine_fu_482_ap_ready = ap_const_logic_1)) then 
                    grp_makePatch_alignedToLine_fu_482_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_534_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_straightLineProjectorFromLayerIJtoK_fu_534_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_NS_fsm_state72) and ((ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state52))) or ((shiftOriginal_1_reg_1627 = ap_const_lv1_1) and (ap_const_logic_1 = ap_NS_fsm_state64) and (ap_const_logic_1 = ap_CS_fsm_state63)) or ((ap_const_logic_1 = ap_NS_fsm_state45) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((ap_const_logic_1 = ap_NS_fsm_state44) and ((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state43))) or ((ap_const_logic_1 = ap_NS_fsm_state37) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((ap_const_logic_1 = ap_NS_fsm_state27) and (ap_const_logic_1 = ap_CS_fsm_state26) and (ap_const_lv1_1 = and_ln1026_fu_859_p2)) or ((ap_const_logic_1 = ap_NS_fsm_state17) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((ap_const_logic_1 = ap_NS_fsm_state7) and (ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_1 = and_ln1016_fu_656_p2)))) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_534_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_straightLineProjectorFromLayerIJtoK_fu_534_ap_ready = ap_const_logic_1)) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_534_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    agg_tmp178_0_reg_471_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1151_fu_1330_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                agg_tmp178_0_reg_471 <= newZtop_V_1_reg_1646;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state52) and (((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_430_p4 = ap_const_lv1_1) and (or_ln1086_1_fu_1039_p2 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln1086_1_fu_1097_p2)) or ((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_430_p4 = ap_const_lv1_1) and (or_ln1086_1_fu_1039_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln1086_2_fu_1058_p2))))) then 
                agg_tmp178_0_reg_471 <= newZtop_V_reg_413;
            end if; 
        end if;
    end process;

    complementary_topL_jL_V_1_reg_383_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1151_fu_1330_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                complementary_topL_jL_V_1_reg_383 <= complementary_topL_jL_V_3_reg_1753;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                complementary_topL_jL_V_1_reg_383 <= complementary_topL_jL_V_reg_1590;
            end if; 
        end if;
    end process;

    complementary_topL_jR_V_reg_363_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1151_fu_1330_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                complementary_topL_jR_V_reg_363 <= complementary_topL_jR_V_4_reg_1713;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                complementary_topL_jR_V_reg_363 <= complementary_topL_jR_V_3_reg_1539;
            end if; 
        end if;
    end process;

    complementary_topR_jL_V_1_reg_373_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1151_fu_1330_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                complementary_topR_jL_V_1_reg_373 <= complementary_topR_jL_V_3_reg_1747;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                complementary_topR_jL_V_1_reg_373 <= complementary_topR_jL_V_reg_1585;
            end if; 
        end if;
    end process;

    complementary_topR_jR_V_reg_333_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1151_fu_1330_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                complementary_topR_jR_V_reg_333 <= complementary_topR_jR_V_4_reg_1706;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                complementary_topR_jR_V_reg_333 <= complementary_topR_jR_V_3_reg_1521;
            end if; 
        end if;
    end process;

    empty_65_reg_252_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln1016_reg_1447) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                empty_65_reg_252 <= ap_const_lv1_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (ap_const_lv1_1 = and_ln1016_reg_1447))) then 
                empty_65_reg_252 <= phitmp_fu_787_p2;
            end if; 
        end if;
    end process;

    empty_66_reg_264_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln878_2_fu_809_p2 = ap_const_lv1_0) and (icmp_ln886_2_fu_793_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((icmp_ln886_2_fu_793_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
                empty_66_reg_264 <= ap_const_lv1_1;
            elsif (((icmp_ln878_2_reg_1512 = ap_const_lv1_1) and (icmp_ln886_2_reg_1508 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                empty_66_reg_264 <= phitmp4_fu_831_p2;
            end if; 
        end if;
    end process;

    empty_67_reg_279_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln1026_reg_1530) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                empty_67_reg_279 <= ap_const_lv1_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state34) and (ap_const_lv1_1 = and_ln1026_reg_1530))) then 
                empty_67_reg_279 <= phitmp3_fu_881_p2;
            end if; 
        end if;
    end process;

    empty_68_reg_291_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln878_4_fu_903_p2 = ap_const_lv1_0) and (icmp_ln886_4_fu_887_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((icmp_ln886_4_fu_887_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36)))) then 
                empty_68_reg_291 <= ap_const_lv1_1;
            elsif (((icmp_ln878_4_reg_1552 = ap_const_lv1_1) and (icmp_ln886_4_reg_1548 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state44))) then 
                empty_68_reg_291 <= phitmp5_fu_925_p2;
            end if; 
        end if;
    end process;

    empty_69_reg_315_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1151_fu_1330_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                empty_69_reg_315 <= horizontalShiftBottom_1_reg_1784;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                empty_69_reg_315 <= horizontalShiftBottom_fu_963_p2;
            end if; 
        end if;
    end process;

    empty_70_reg_324_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1151_fu_1330_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                empty_70_reg_324 <= horizontalShiftTop_1_reg_1769;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                empty_70_reg_324 <= horizontalShiftTop_fu_959_p2;
            end if; 
        end if;
    end process;

    horizontalOverlapBottom_V_fu_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
                horizontalOverlapBottom_V_fu_132 <= ap_const_lv32_FFF0BDC0;
            elsif (((icmp_ln878_6_reg_1789 = ap_const_lv1_1) and (shiftOriginal_1_reg_1627 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                horizontalOverlapBottom_V_fu_132 <= horizontalOverlapBottom_V_1_reg_1798;
            end if; 
        end if;
    end process;

    horizontalOverlapTop_V_fu_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
                horizontalOverlapTop_V_fu_136 <= ap_const_lv32_FFF0BDC0;
            elsif (((icmp_ln878_6_reg_1789 = ap_const_lv1_1) and (shiftOriginal_1_reg_1627 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                horizontalOverlapTop_V_fu_136 <= horizontalOverlapTop_V_1_reg_1793;
            end if; 
        end if;
    end process;

    loopCounter_reg_449_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1151_fu_1330_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                loopCounter_reg_449 <= loopCounter_2_reg_1662;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                loopCounter_reg_449 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    makeHorizontallyShiftedPatch_reg_425_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1151_fu_1330_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                makeHorizontallyShiftedPatch_reg_425 <= ap_const_lv1_1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                makeHorizontallyShiftedPatch_reg_425 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    newZtop_V_reg_413_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1151_fu_1330_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                newZtop_V_reg_413 <= newZtop_V_1_reg_1646;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                newZtop_V_reg_413 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    original_topL_jL_V_reg_343_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1151_fu_1330_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                original_topL_jL_V_reg_343 <= original_topL_jL_V_4_reg_1733;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                original_topL_jL_V_reg_343 <= original_topL_jL_V_3_reg_1499;
            end if; 
        end if;
    end process;

    original_topL_jR_V_1_reg_403_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1151_fu_1330_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                original_topL_jR_V_1_reg_403 <= original_topL_jR_V_3_reg_1727;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                original_topL_jR_V_1_reg_403 <= patches_parameters_q1;
            end if; 
        end if;
    end process;

    original_topR_jL_V_1_reg_353_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1151_fu_1330_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                original_topR_jL_V_1_reg_353 <= original_topR_jL_V_3_reg_1740;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                original_topR_jL_V_1_reg_353 <= original_topR_jL_V_reg_1440;
            end if; 
        end if;
    end process;

    original_topR_jR_V_1_reg_393_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1151_fu_1330_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                original_topR_jR_V_1_reg_393 <= original_topR_jR_V_3_reg_1720;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                original_topR_jR_V_1_reg_393 <= patches_parameters_q0;
            end if; 
        end if;
    end process;

    phi_ln166_reg_461_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1151_fu_1330_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                phi_ln166_reg_461 <= trunc_ln1054_1_reg_1685;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state52) and (((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_430_p4 = ap_const_lv1_1) and (or_ln1086_1_fu_1039_p2 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln1086_1_fu_1097_p2)) or ((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_430_p4 = ap_const_lv1_1) and (or_ln1086_1_fu_1039_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln1086_2_fu_1058_p2))))) then 
                phi_ln166_reg_461 <= trunc_ln1054_fu_1019_p1;
            end if; 
        end if;
    end process;

    ppl_assign_0_reg_305_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1151_fu_1330_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                ppl_assign_0_reg_305 <= ppl_assign1_reg_1696;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                ppl_assign_0_reg_305 <= ppl;
            end if; 
        end if;
    end process;

    shifted_Align_2_reg_439_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1151_fu_1330_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                shifted_Align_2_reg_439 <= shifted_Align_5_reg_1680;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                shifted_Align_2_reg_439 <= sext_ln1066_fu_993_p1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state54)) then
                add_ln1106_reg_1691 <= add_ln1106_fu_1147_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state58)) then
                add_ln1112_reg_1701 <= add_ln1112_fu_1158_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                and_ln1016_reg_1447 <= and_ln1016_fu_656_p2;
                original_topR_jL_V_reg_1440 <= patches_parameters_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                and_ln1026_reg_1530 <= and_ln1026_fu_859_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln1086_1_fu_1039_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state52))) then
                and_ln1086_1_reg_1671 <= and_ln1086_1_fu_1097_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln1086_1_fu_1039_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state52))) then
                and_ln1086_2_reg_1667 <= and_ln1086_2_fu_1058_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state78)) then
                and_ln1161_reg_1806 <= and_ln1161_fu_1342_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state63)) then
                complementary_topL_jL_V_3_reg_1753 <= complementary_topL_jL_V_3_fu_1213_p3;
                complementary_topR_jL_V_3_reg_1747 <= complementary_topR_jL_V_3_fu_1206_p3;
                original_topL_jL_V_4_reg_1733 <= original_topL_jL_V_4_fu_1192_p3;
                original_topR_jL_V_3_reg_1740 <= original_topR_jL_V_3_fu_1199_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state50)) then
                complementary_topL_jL_V_reg_1590 <= patches_parameters_q0;
                complementary_topR_jL_V_reg_1585 <= patches_parameters_q1;
                icmp_ln886_5_reg_1595 <= icmp_ln886_5_fu_953_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                complementary_topL_jR_V_3_reg_1539 <= patches_parameters_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state62)) then
                complementary_topL_jR_V_4_reg_1713 <= complementary_topL_jR_V_4_fu_1171_p3;
                complementary_topR_jR_V_4_reg_1706 <= complementary_topR_jR_V_4_fu_1164_p3;
                original_topL_jR_V_3_reg_1727 <= original_topL_jR_V_3_fu_1185_p3;
                original_topR_jR_V_3_reg_1720 <= original_topR_jR_V_3_fu_1178_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                complementary_topR_jR_V_3_reg_1521 <= patches_parameters_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                empty_reg_1378 <= empty_fu_575_p1;
                icmp_ln1000_reg_1384 <= icmp_ln1000_fu_580_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln878_6_fu_1240_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state70))) then
                horizontalOverlapBottom_V_1_reg_1798 <= horizontalOverlapBottom_V_1_fu_1314_p3;
                horizontalOverlapTop_V_1_reg_1793 <= horizontalOverlapTop_V_1_fu_1276_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state64)) then
                horizontalShiftBottom_1_reg_1784 <= horizontalShiftBottom_1_fu_1236_p2;
                horizontalShiftTop_1_reg_1769 <= horizontalShiftTop_1_fu_1226_p2;
                sext_ln215_17_reg_1759 <= sext_ln215_17_fu_1220_p1;
                sext_ln215_18_reg_1764 <= sext_ln215_18_fu_1223_p1;
                sext_ln215_19_reg_1774 <= sext_ln215_19_fu_1230_p1;
                sext_ln215_20_reg_1779 <= sext_ln215_20_fu_1233_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state79)) then
                icmp_ln1163_reg_1810 <= icmp_ln1163_fu_1347_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln886_2_fu_793_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                icmp_ln878_2_reg_1512 <= icmp_ln878_2_fu_809_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln886_4_fu_887_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then
                icmp_ln878_4_reg_1552 <= icmp_ln878_4_fu_903_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state70)) then
                icmp_ln878_6_reg_1789 <= icmp_ln878_6_fu_1240_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                icmp_ln886_2_reg_1508 <= icmp_ln886_2_fu_793_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                icmp_ln886_4_reg_1548 <= icmp_ln886_4_fu_887_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state51)) then
                lnot_reg_1641 <= lnot_fu_1007_p2;
                newZtop_V_1_reg_1646 <= newZtop_V_1_fu_1013_p3;
                shiftOriginal_1_reg_1627 <= shiftOriginal_1_fu_997_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state52)) then
                loopCounter_2_reg_1662 <= loopCounter_2_fu_1044_p2;
                or_ln1086_1_reg_1658 <= or_ln1086_1_fu_1039_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state45)) then
                or_ln1086_2_reg_1580 <= or_ln1086_2_fu_947_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then
                or_ln1086_reg_1575 <= or_ln1086_fu_931_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                original_topL_jL_V_3_reg_1499 <= patches_parameters_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                    patches_parameters_addr_14_reg_1484(8 downto 3) <= zext_ln1039_2_fu_724_p1(9 - 1 downto 0)(8 downto 3);
                    patches_parameters_addr_15_reg_1489(8 downto 3) <= zext_ln1040_2_fu_766_p1(9 - 1 downto 0)(8 downto 3);
                    patches_parameters_addr_9_reg_1479(8 downto 3) <= sext_ln1019_fu_682_p1(9 - 1 downto 0)(8 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state57)) then
                ppl_assign1_reg_1696 <= grp_makePatch_alignedToLine_fu_482_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state13))) then
                reg_560 <= grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state79) or ((ap_const_logic_1 = ap_CS_fsm_state53) and (makeHorizontallyShiftedPatch_reg_425 = ap_const_lv1_1)))) then
                reg_564 <= n_patches_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                secondLastPatchIndex_1_reg_1400 <= secondLastPatchIndex_1_fu_591_p3;
                xor_ln1013_reg_1405 <= xor_ln1013_fu_598_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1000_reg_1384 = ap_const_lv1_0))) then
                secondLastPatchIndex_reg_1395 <= secondLastPatchIndex_fu_586_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                    select_ln1015_reg_1410(4 downto 2) <= select_ln1015_fu_604_p3(4 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state52) and (((or_ln1086_1_fu_1039_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1086_1_fu_1097_p2)) or ((or_ln1086_1_fu_1039_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1086_2_fu_1058_p2))))) then
                select_ln534_reg_1675 <= select_ln534_fu_1109_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state53)) then
                shifted_Align_5_reg_1680 <= shifted_Align_5_fu_1132_p3;
                trunc_ln1054_1_reg_1685 <= trunc_ln1054_1_fu_1139_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state80)) then
                    zext_ln1165_reg_1814(7 downto 0) <= zext_ln1165_fu_1359_p1(7 downto 0);
            end if;
        end if;
    end process;
    select_ln1015_reg_1410(1 downto 0) <= "10";
    patches_parameters_addr_9_reg_1479(2 downto 0) <= "000";
    patches_parameters_addr_14_reg_1484(2 downto 0) <= "010";
    patches_parameters_addr_15_reg_1489(2 downto 0) <= "110";
    zext_ln1165_reg_1814(8) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state53, makeHorizontallyShiftedPatch_reg_425, ap_CS_fsm_state79, ap_CS_fsm_state2, ap_CS_fsm_state4, and_ln1016_reg_1447, ap_CS_fsm_state7, icmp_ln886_2_fu_793_p2, ap_CS_fsm_state16, icmp_ln878_2_fu_809_p2, and_ln1026_reg_1530, icmp_ln886_4_fu_887_p2, ap_CS_fsm_state36, icmp_ln878_4_fu_903_p2, shiftOriginal_1_reg_1627, ap_CS_fsm_state52, or_ln1086_1_fu_1039_p2, and_ln1086_2_fu_1058_p2, and_ln1086_1_fu_1097_p2, ap_CS_fsm_state57, ap_CS_fsm_state64, and_ln1161_fu_1342_p2, ap_CS_fsm_state78, icmp_ln1163_fu_1347_p2, grp_makePatch_alignedToLine_fu_482_ap_done, grp_getShadows_fu_505_ap_done, ap_CS_fsm_state27, ap_CS_fsm_state71, icmp_ln1151_fu_1330_p2, ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_430_p4, ap_CS_fsm_state60, ap_CS_fsm_state55, ap_CS_fsm_state81, ap_block_state81_on_subcall_done, ap_block_state55_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_getShadows_fu_505_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_getShadows_fu_505_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_lv1_0 = and_ln1016_reg_1447) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((icmp_ln878_2_fu_809_p2 = ap_const_lv1_1) and (icmp_ln886_2_fu_793_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                if (((ap_const_lv1_0 = and_ln1026_reg_1530) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                if (((icmp_ln878_4_fu_903_p2 = ap_const_lv1_1) and (icmp_ln886_4_fu_887_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state52) and (((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_430_p4 = ap_const_lv1_0) and (or_ln1086_1_fu_1039_p2 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln1086_1_fu_1097_p2)) or ((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_430_p4 = ap_const_lv1_0) and (or_ln1086_1_fu_1039_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln1086_2_fu_1058_p2))))) then
                    ap_NS_fsm <= ap_ST_fsm_state81;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state52) and (((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_430_p4 = ap_const_lv1_1) and (or_ln1086_1_fu_1039_p2 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln1086_1_fu_1097_p2)) or ((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_430_p4 = ap_const_lv1_1) and (or_ln1086_1_fu_1039_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln1086_2_fu_1058_p2))))) then
                    ap_NS_fsm <= ap_ST_fsm_state72;
                else
                    ap_NS_fsm <= ap_ST_fsm_state53;
                end if;
            when ap_ST_fsm_state53 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state53) and (makeHorizontallyShiftedPatch_reg_425 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state55) and (ap_const_boolean_0 = ap_block_state55_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state56;
                else
                    ap_NS_fsm <= ap_ST_fsm_state55;
                end if;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                if (((grp_makePatch_alignedToLine_fu_482_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state57))) then
                    ap_NS_fsm <= ap_ST_fsm_state58;
                else
                    ap_NS_fsm <= ap_ST_fsm_state57;
                end if;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                if (((grp_getShadows_fu_505_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state60))) then
                    ap_NS_fsm <= ap_ST_fsm_state61;
                else
                    ap_NS_fsm <= ap_ST_fsm_state60;
                end if;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                if (((shiftOriginal_1_reg_1627 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state64))) then
                    ap_NS_fsm <= ap_ST_fsm_state71;
                else
                    ap_NS_fsm <= ap_ST_fsm_state65;
                end if;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                if (((icmp_ln1151_fu_1330_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state71))) then
                    ap_NS_fsm <= ap_ST_fsm_state72;
                else
                    ap_NS_fsm <= ap_ST_fsm_state52;
                end if;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                if (((ap_const_lv1_0 = and_ln1161_fu_1342_p2) and (ap_const_logic_1 = ap_CS_fsm_state78))) then
                    ap_NS_fsm <= ap_ST_fsm_state81;
                else
                    ap_NS_fsm <= ap_ST_fsm_state79;
                end if;
            when ap_ST_fsm_state79 => 
                if (((icmp_ln1163_fu_1347_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state79))) then
                    ap_NS_fsm <= ap_ST_fsm_state81;
                else
                    ap_NS_fsm <= ap_ST_fsm_state80;
                end if;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state81) and (ap_const_boolean_0 = ap_block_state81_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state81;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    GDarrayDecoded_address0 <= grp_makePatch_alignedToLine_fu_482_GDarrayDecoded_address0;
    GDarrayDecoded_ce0 <= grp_makePatch_alignedToLine_fu_482_GDarrayDecoded_ce0;
    GDn_points_address0 <= grp_makePatch_alignedToLine_fu_482_GDn_points_address0;
    GDn_points_ce0 <= grp_makePatch_alignedToLine_fu_482_GDn_points_ce0;
    add_ln1106_fu_1147_p2 <= std_logic_vector(unsigned(zext_ln1106_fu_1143_p1) + unsigned(ap_const_lv9_1FF));
    add_ln1112_fu_1158_p2 <= std_logic_vector(unsigned(trunc_ln1112_fu_1154_p1) + unsigned(ap_const_lv5_1F));
    add_ln1165_fu_1353_p2 <= std_logic_vector(unsigned(reg_564) + unsigned(ap_const_lv8_FD));
    and_ln1016_fu_656_p2 <= (icmp_ln886_fu_644_p2 and icmp_ln878_fu_650_p2);
    and_ln1026_fu_859_p2 <= (icmp_ln886_3_fu_849_p2 and icmp_ln878_3_fu_855_p2);
    and_ln1086_1_fu_1097_p2 <= (grp_fu_550_p2 and and_ln1086_fu_1091_p2);
    and_ln1086_2_fu_1058_p2 <= (grp_fu_555_p2 and grp_fu_550_p2);
    and_ln1086_fu_1091_p2 <= (xor_ln1086_fu_1085_p2 and grp_fu_555_p2);
    and_ln1161_fu_1342_p2 <= (shiftOriginal_1_reg_1627 and icmp_ln886_6_fu_1336_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state78 <= ap_CS_fsm(77);
    ap_CS_fsm_state79 <= ap_CS_fsm(78);
    ap_CS_fsm_state80 <= ap_CS_fsm(79);
    ap_CS_fsm_state81 <= ap_CS_fsm(80);
    ap_NS_fsm_state17 <= ap_NS_fsm(16);
    ap_NS_fsm_state27 <= ap_NS_fsm(26);
    ap_NS_fsm_state37 <= ap_NS_fsm(36);
    ap_NS_fsm_state44 <= ap_NS_fsm(43);
    ap_NS_fsm_state45 <= ap_NS_fsm(44);
    ap_NS_fsm_state64 <= ap_NS_fsm(63);
    ap_NS_fsm_state7 <= ap_NS_fsm(6);
    ap_NS_fsm_state72 <= ap_NS_fsm(71);

    ap_block_state55_on_subcall_done_assign_proc : process(makeHorizontallyShiftedPatch_reg_425, grp_delete_patch_fu_522_ap_done)
    begin
                ap_block_state55_on_subcall_done <= ((grp_delete_patch_fu_522_ap_done = ap_const_logic_0) and (makeHorizontallyShiftedPatch_reg_425 = ap_const_lv1_1));
    end process;


    ap_block_state81_on_subcall_done_assign_proc : process(grp_delete_patch_fu_522_ap_done, ap_predicate_op389_call_state81)
    begin
                ap_block_state81_on_subcall_done <= ((grp_delete_patch_fu_522_ap_done = ap_const_logic_0) and (ap_predicate_op389_call_state81 = ap_const_boolean_1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state81, ap_block_state81_on_subcall_done)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state81) and (ap_const_boolean_0 = ap_block_state81_on_subcall_done)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_430_p4 <= makeHorizontallyShiftedPatch_reg_425;

    ap_predicate_op389_call_state81_assign_proc : process(makeHorizontallyShiftedPatch_reg_425, or_ln1086_1_reg_1658, and_ln1086_2_reg_1667, and_ln1086_1_reg_1671, and_ln1161_reg_1806, icmp_ln1163_reg_1810)
    begin
                ap_predicate_op389_call_state81 <= ((((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (or_ln1086_1_reg_1658 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (ap_const_lv1_1 = and_ln1086_1_reg_1671)) or ((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (makeHorizontallyShiftedPatch_reg_425 = ap_const_lv1_1))) or ((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (or_ln1086_1_reg_1658 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (ap_const_lv1_1 = and_ln1086_2_reg_1667)));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state81, ap_block_state81_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state81) and (ap_const_boolean_0 = ap_block_state81_on_subcall_done))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cmp_i_i301_not_fu_1002_p2 <= (icmp_ln886_5_reg_1595 xor ap_const_lv1_1);
    complementary_topL_jL_V_3_fu_1213_p3 <= 
        complementary_topL_jL_V_1_reg_383 when (shiftOriginal_1_reg_1627(0) = '1') else 
        patches_parameters_q1;
    complementary_topL_jR_V_4_fu_1171_p3 <= 
        complementary_topL_jR_V_reg_363 when (shiftOriginal_1_reg_1627(0) = '1') else 
        patches_parameters_q1;
    complementary_topR_jL_V_3_fu_1206_p3 <= 
        complementary_topR_jL_V_1_reg_373 when (shiftOriginal_1_reg_1627(0) = '1') else 
        patches_parameters_q0;
    complementary_topR_jR_V_4_fu_1164_p3 <= 
        complementary_topR_jR_V_reg_333 when (shiftOriginal_1_reg_1627(0) = '1') else 
        patches_parameters_q0;
    empty_fu_575_p1 <= lastPatchIndex(5 - 1 downto 0);
    grp_delete_patch_fu_522_ap_start <= grp_delete_patch_fu_522_ap_start_reg;

    grp_delete_patch_fu_522_index_assign_proc : process(makeHorizontallyShiftedPatch_reg_425, or_ln1086_1_reg_1658, and_ln1086_2_reg_1667, and_ln1086_1_reg_1671, add_ln1106_reg_1691, and_ln1161_reg_1806, icmp_ln1163_reg_1810, zext_ln1165_reg_1814, ap_CS_fsm_state55, ap_CS_fsm_state81)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state81) and ((((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (or_ln1086_1_reg_1658 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (ap_const_lv1_1 = and_ln1086_1_reg_1671)) or ((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (makeHorizontallyShiftedPatch_reg_425 = ap_const_lv1_1))) or ((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (or_ln1086_1_reg_1658 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (ap_const_lv1_1 = and_ln1086_2_reg_1667))))) then 
            grp_delete_patch_fu_522_index <= zext_ln1165_reg_1814;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_425 = ap_const_lv1_1))) then 
            grp_delete_patch_fu_522_index <= add_ln1106_reg_1691;
        else 
            grp_delete_patch_fu_522_index <= "XXXXXXXXX";
        end if; 
    end process;

    grp_fu_550_p2 <= "1" when (signed(horizontalOverlapTop_V_fu_136) < signed(ap_const_lv32_1)) else "0";
    grp_fu_555_p2 <= "1" when (signed(horizontalOverlapBottom_V_fu_132) < signed(ap_const_lv32_1)) else "0";
    grp_fu_569_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(reg_560));
    grp_getShadows_fu_505_ap_start <= grp_getShadows_fu_505_ap_start_reg;

    grp_getShadows_fu_505_wp_parameters_offset_assign_proc : process(ap_CS_fsm_state2, xor_ln1013_reg_1405, ap_CS_fsm_state4, ap_CS_fsm_state60)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_getShadows_fu_505_wp_parameters_offset <= xor_ln1013_reg_1405;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_getShadows_fu_505_wp_parameters_offset <= ap_const_lv1_0;
        else 
            grp_getShadows_fu_505_wp_parameters_offset <= "X";
        end if; 
    end process;


    grp_getShadows_fu_505_wp_superpoints_offset_assign_proc : process(empty_reg_1378, ap_CS_fsm_state2, secondLastPatchIndex_1_reg_1400, ap_CS_fsm_state4, add_ln1112_reg_1701, ap_CS_fsm_state60)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            grp_getShadows_fu_505_wp_superpoints_offset <= add_ln1112_reg_1701;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_getShadows_fu_505_wp_superpoints_offset <= secondLastPatchIndex_1_reg_1400;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_getShadows_fu_505_wp_superpoints_offset <= empty_reg_1378;
        else 
            grp_getShadows_fu_505_wp_superpoints_offset <= "XXXXX";
        end if; 
    end process;

    grp_makePatch_alignedToLine_fu_482_ap_start <= grp_makePatch_alignedToLine_fu_482_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_ce <= ap_const_logic_1;
    grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din1 <= grp_straightLineProjectorFromLayerIJtoK_fu_534_z_i;
    grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din2 <= grp_straightLineProjectorFromLayerIJtoK_fu_534_z_j;
    grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din3 <= ap_const_lv3_1;
    grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din4 <= ap_const_lv3_5;
    grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din5 <= ap_const_lv3_0;
    grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_start <= grp_straightLineProjectorFromLayerIJtoK_fu_534_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_534_ap_ce <= ap_const_logic_1;
    grp_straightLineProjectorFromLayerIJtoK_fu_534_ap_done <= grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_done;
    grp_straightLineProjectorFromLayerIJtoK_fu_534_ap_idle <= grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_idle;
    grp_straightLineProjectorFromLayerIJtoK_fu_534_ap_ready <= grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_ready;
    grp_straightLineProjectorFromLayerIJtoK_fu_534_ap_return <= grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_dout0;
    grp_straightLineProjectorFromLayerIJtoK_fu_534_ap_start <= grp_straightLineProjectorFromLayerIJtoK_fu_534_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_534_i <= ap_const_lv3_1;
    grp_straightLineProjectorFromLayerIJtoK_fu_534_j <= ap_const_lv3_5;
    grp_straightLineProjectorFromLayerIJtoK_fu_534_k <= ap_const_lv3_0;

    grp_straightLineProjectorFromLayerIJtoK_fu_534_z_i_assign_proc : process(complementary_apexZ0, apexZ0, original_topR_jL_V_reg_1440, and_ln1016_reg_1447, ap_CS_fsm_state7, original_topL_jL_V_3_reg_1499, complementary_topR_jR_V_3_reg_1521, and_ln1026_reg_1530, complementary_topL_jR_V_3_reg_1539, ap_CS_fsm_state44, ap_CS_fsm_state45, shiftOriginal_1_reg_1627, original_topR_jR_V_3_reg_1720, ap_CS_fsm_state64, ap_CS_fsm_state27, phi_ln166_reg_461, ap_CS_fsm_state17, ap_CS_fsm_state37, ap_CS_fsm_state72)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_534_z_i <= phi_ln166_reg_461;
        elsif (((shiftOriginal_1_reg_1627 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state64))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_534_z_i <= original_topR_jR_V_3_reg_1720;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_534_z_i <= apexZ0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_534_z_i <= complementary_apexZ0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_534_z_i <= complementary_topL_jR_V_3_reg_1539;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) and (ap_const_lv1_1 = and_ln1026_reg_1530))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_534_z_i <= complementary_topR_jR_V_3_reg_1521;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_534_z_i <= original_topL_jL_V_3_reg_1499;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_1 = and_ln1016_reg_1447))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_534_z_i <= original_topR_jL_V_reg_1440;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_534_z_i <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_534_z_j_assign_proc : process(z_top_min, z_top_max, and_ln1016_reg_1447, ap_CS_fsm_state7, and_ln1026_reg_1530, ap_CS_fsm_state44, ap_CS_fsm_state45, shiftOriginal_1_reg_1627, ap_CS_fsm_state64, ap_CS_fsm_state27, agg_tmp178_0_reg_471, ap_CS_fsm_state17, ap_CS_fsm_state37, ap_CS_fsm_state72)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_534_z_j <= agg_tmp178_0_reg_471;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state44))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_534_z_j <= z_top_min;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or ((shiftOriginal_1_reg_1627 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state64)) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (ap_const_lv1_1 = and_ln1026_reg_1530)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_1 = and_ln1016_reg_1447)))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_534_z_j <= z_top_max;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_534_z_j <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    horizontalOverlapBottom_V_1_fu_1314_p3 <= 
        trunc_ln1135_fu_1306_p1 when (icmp_ln878_8_fu_1300_p2(0) = '1') else 
        trunc_ln1135_1_fu_1310_p1;
    horizontalOverlapTop_V_1_fu_1276_p3 <= 
        trunc_ln1134_fu_1268_p1 when (icmp_ln878_7_fu_1262_p2(0) = '1') else 
        trunc_ln1134_1_fu_1272_p1;
    horizontalShiftBottom_1_fu_1236_p2 <= std_logic_vector(signed(original_topL_jL_V_4_reg_1733) - signed(complementary_topL_jR_V_4_reg_1713));
    horizontalShiftBottom_fu_963_p2 <= std_logic_vector(signed(original_topL_jL_V_3_reg_1499) - signed(complementary_topL_jR_V_3_reg_1539));
    horizontalShiftTop_1_fu_1226_p2 <= std_logic_vector(signed(original_topR_jL_V_3_reg_1740) - signed(complementary_topR_jR_V_4_reg_1706));
    horizontalShiftTop_fu_959_p2 <= std_logic_vector(unsigned(original_topR_jL_V_reg_1440) - unsigned(complementary_topR_jR_V_3_reg_1521));
    icmp_ln1000_fu_580_p2 <= "1" when (lastPatchIndex = ap_const_lv8_0) else "0";
    icmp_ln1086_1_fu_1074_p2 <= "1" when (signed(tmp_22_fu_1064_p4) < signed(ap_const_lv31_1)) else "0";
    icmp_ln1086_fu_1033_p2 <= "1" when (signed(tmp_21_fu_1023_p4) < signed(ap_const_lv31_1)) else "0";
    icmp_ln1151_fu_1330_p2 <= "1" when (signed(loopCounter_reg_449) > signed(ap_const_lv32_19)) else "0";
    icmp_ln1163_fu_1347_p2 <= "1" when (unsigned(n_patches_i) > unsigned(ap_const_lv8_2)) else "0";
    icmp_ln878_2_fu_809_p2 <= "1" when (signed(ret_fu_803_p2) < signed(ap_const_lv33_1FFFFFF9C)) else "0";
    icmp_ln878_3_fu_855_p1 <= apexZ0;
    icmp_ln878_3_fu_855_p2 <= "1" when (signed(complementary_topR_jR_V_3_reg_1521) < signed(icmp_ln878_3_fu_855_p1)) else "0";
    icmp_ln878_4_fu_903_p2 <= "1" when (signed(ret_8_fu_897_p2) < signed(ap_const_lv33_1FFFFFF9C)) else "0";
    icmp_ln878_5_fu_1103_p2 <= "1" when (signed(empty_70_reg_324) < signed(empty_69_reg_315)) else "0";
    icmp_ln878_6_fu_1240_p2 <= "1" when (signed(grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_dout0) < signed(ap_const_lv32_E4E1C0)) else "0";
    icmp_ln878_7_fu_1262_p2 <= "1" when (signed(ret_9_fu_1249_p2) < signed(ret_10_fu_1257_p2)) else "0";
    icmp_ln878_8_fu_1300_p2 <= "1" when (signed(ret_11_fu_1287_p2) < signed(ret_12_fu_1295_p2)) else "0";
    icmp_ln878_fu_650_p1 <= apexZ0;
    icmp_ln878_fu_650_p2 <= "1" when (signed(patches_parameters_q0) < signed(icmp_ln878_fu_650_p1)) else "0";
    icmp_ln886_2_fu_793_p1 <= complementary_apexZ0;
    icmp_ln886_2_fu_793_p2 <= "1" when (signed(original_topL_jL_V_3_reg_1499) > signed(icmp_ln886_2_fu_793_p1)) else "0";
    icmp_ln886_3_fu_849_p2 <= "1" when (signed(ret_7_fu_843_p2) > signed(ap_const_lv33_32)) else "0";
    icmp_ln886_4_fu_887_p1 <= complementary_apexZ0;
    icmp_ln886_4_fu_887_p2 <= "1" when (signed(complementary_topL_jR_V_3_reg_1539) > signed(icmp_ln886_4_fu_887_p1)) else "0";
    icmp_ln886_5_fu_953_p2 <= "1" when (signed(grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_dout0) > signed(ap_const_lv32_0)) else "0";
    icmp_ln886_6_fu_1336_p2 <= "1" when (signed(grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_dout0) > signed(ap_const_lv32_E4E1C0)) else "0";
    icmp_ln886_fu_644_p1 <= complementary_apexZ0;
    icmp_ln886_fu_644_p2 <= "1" when (signed(patches_parameters_q0) > signed(icmp_ln886_fu_644_p1)) else "0";
    lnot_fu_1007_p2 <= (tmp_20_fu_967_p3 and cmp_i_i301_not_fu_1002_p2);
    loopCounter_2_fu_1044_p2 <= std_logic_vector(unsigned(loopCounter_reg_449) + unsigned(ap_const_lv32_1));

    n_patches_o_assign_proc : process(n_patches_i, makeHorizontallyShiftedPatch_reg_425, or_ln1086_1_reg_1658, and_ln1086_2_reg_1667, and_ln1086_1_reg_1671, ap_CS_fsm_state57, and_ln1161_reg_1806, icmp_ln1163_reg_1810, grp_makePatch_alignedToLine_fu_482_n_patches_o, grp_makePatch_alignedToLine_fu_482_n_patches_o_ap_vld, grp_delete_patch_fu_522_n_patches, grp_delete_patch_fu_522_n_patches_ap_vld, ap_CS_fsm_state55, ap_CS_fsm_state81)
    begin
        if ((((grp_delete_patch_fu_522_n_patches_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state81) and ((((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (or_ln1086_1_reg_1658 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (ap_const_lv1_1 = and_ln1086_1_reg_1671)) or ((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (makeHorizontallyShiftedPatch_reg_425 = ap_const_lv1_1))) or ((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (or_ln1086_1_reg_1658 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (ap_const_lv1_1 = and_ln1086_2_reg_1667)))) or ((grp_delete_patch_fu_522_n_patches_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_425 = ap_const_lv1_1)))) then 
            n_patches_o <= grp_delete_patch_fu_522_n_patches;
        elsif (((grp_makePatch_alignedToLine_fu_482_n_patches_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            n_patches_o <= grp_makePatch_alignedToLine_fu_482_n_patches_o;
        else 
            n_patches_o <= n_patches_i;
        end if; 
    end process;


    n_patches_o_ap_vld_assign_proc : process(makeHorizontallyShiftedPatch_reg_425, or_ln1086_1_reg_1658, and_ln1086_2_reg_1667, and_ln1086_1_reg_1671, ap_CS_fsm_state57, and_ln1161_reg_1806, icmp_ln1163_reg_1810, grp_makePatch_alignedToLine_fu_482_n_patches_o_ap_vld, grp_delete_patch_fu_522_n_patches_ap_vld, ap_CS_fsm_state55, ap_CS_fsm_state81)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state81) and ((((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (or_ln1086_1_reg_1658 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (ap_const_lv1_1 = and_ln1086_1_reg_1671)) or ((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (makeHorizontallyShiftedPatch_reg_425 = ap_const_lv1_1))) or ((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (or_ln1086_1_reg_1658 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (ap_const_lv1_1 = and_ln1086_2_reg_1667)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_425 = ap_const_lv1_1)))) then 
            n_patches_o_ap_vld <= grp_delete_patch_fu_522_n_patches_ap_vld;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            n_patches_o_ap_vld <= grp_makePatch_alignedToLine_fu_482_n_patches_o_ap_vld;
        else 
            n_patches_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    newZtop_V_1_fu_1013_p3 <= 
        z_top_max when (shiftOriginal_1_fu_997_p2(0) = '1') else 
        z_top_min;
    or_ln1086_1_fu_1039_p2 <= (or_ln1086_reg_1575 or icmp_ln1086_fu_1033_p2);
    or_ln1086_2_fu_947_p2 <= (empty_68_reg_291 or empty_66_reg_264);
    or_ln1086_3_fu_1080_p2 <= (or_ln1086_2_reg_1580 or icmp_ln1086_1_fu_1074_p2);
    or_ln1086_fu_931_p2 <= (empty_67_reg_279 or empty_65_reg_252);
    original_topL_jL_V_4_fu_1192_p3 <= 
        patches_parameters_q1 when (shiftOriginal_1_reg_1627(0) = '1') else 
        original_topL_jL_V_reg_343;
    original_topL_jR_V_3_fu_1185_p3 <= 
        patches_parameters_q1 when (shiftOriginal_1_reg_1627(0) = '1') else 
        original_topL_jR_V_1_reg_403;
    original_topR_jL_V_3_fu_1199_p3 <= 
        patches_parameters_q0 when (shiftOriginal_1_reg_1627(0) = '1') else 
        original_topR_jL_V_1_reg_353;
    original_topR_jR_V_3_fu_1178_p3 <= 
        patches_parameters_q0 when (shiftOriginal_1_reg_1627(0) = '1') else 
        original_topR_jR_V_1_reg_393;

    patches_parameters_address0_assign_proc : process(makeHorizontallyShiftedPatch_reg_425, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state5, patches_parameters_addr_9_reg_1479, patches_parameters_addr_14_reg_1484, ap_CS_fsm_state14, ap_CS_fsm_state24, ap_CS_fsm_state34, ap_CS_fsm_state50, or_ln1086_1_reg_1658, and_ln1086_2_reg_1667, and_ln1086_1_reg_1671, ap_CS_fsm_state57, ap_CS_fsm_state62, and_ln1161_reg_1806, icmp_ln1163_reg_1810, grp_makePatch_alignedToLine_fu_482_patches_parameters_address0, grp_getShadows_fu_505_wp_parameters_address0, grp_delete_patch_fu_522_patches_parameters_address0, ap_CS_fsm_state60, ap_CS_fsm_state55, ap_CS_fsm_state81, zext_ln1015_2_fu_639_p1, ap_CS_fsm_state49, ap_CS_fsm_state61)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            patches_parameters_address0 <= ap_const_lv64_24(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            patches_parameters_address0 <= patches_parameters_addr_14_reg_1484;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            patches_parameters_address0 <= ap_const_lv64_18(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            patches_parameters_address0 <= ap_const_lv64_1E(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            patches_parameters_address0 <= ap_const_lv64_2A(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            patches_parameters_address0 <= patches_parameters_addr_9_reg_1479;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            patches_parameters_address0 <= zext_ln1015_2_fu_639_p1(9 - 1 downto 0);
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state81) and ((((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (or_ln1086_1_reg_1658 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (ap_const_lv1_1 = and_ln1086_1_reg_1671)) or ((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (makeHorizontallyShiftedPatch_reg_425 = ap_const_lv1_1))) or ((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (or_ln1086_1_reg_1658 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (ap_const_lv1_1 = and_ln1086_2_reg_1667)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_425 = ap_const_lv1_1)))) then 
            patches_parameters_address0 <= grp_delete_patch_fu_522_patches_parameters_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_address0 <= grp_getShadows_fu_505_wp_parameters_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            patches_parameters_address0 <= grp_makePatch_alignedToLine_fu_482_patches_parameters_address0;
        else 
            patches_parameters_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    patches_parameters_address1_assign_proc : process(makeHorizontallyShiftedPatch_reg_425, ap_CS_fsm_state2, ap_CS_fsm_state4, patches_parameters_addr_15_reg_1489, ap_CS_fsm_state50, or_ln1086_1_reg_1658, and_ln1086_2_reg_1667, and_ln1086_1_reg_1671, ap_CS_fsm_state57, ap_CS_fsm_state62, and_ln1161_reg_1806, icmp_ln1163_reg_1810, grp_makePatch_alignedToLine_fu_482_patches_parameters_address1, grp_getShadows_fu_505_wp_parameters_address1, grp_delete_patch_fu_522_patches_parameters_address1, ap_CS_fsm_state60, ap_CS_fsm_state55, ap_CS_fsm_state81, ap_CS_fsm_state49, ap_CS_fsm_state61)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            patches_parameters_address1 <= ap_const_lv64_18(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            patches_parameters_address1 <= ap_const_lv64_1E(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            patches_parameters_address1 <= patches_parameters_addr_15_reg_1489;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            patches_parameters_address1 <= ap_const_lv64_24(9 - 1 downto 0);
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state81) and ((((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (or_ln1086_1_reg_1658 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (ap_const_lv1_1 = and_ln1086_1_reg_1671)) or ((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (makeHorizontallyShiftedPatch_reg_425 = ap_const_lv1_1))) or ((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (or_ln1086_1_reg_1658 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (ap_const_lv1_1 = and_ln1086_2_reg_1667)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_425 = ap_const_lv1_1)))) then 
            patches_parameters_address1 <= grp_delete_patch_fu_522_patches_parameters_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_address1 <= grp_getShadows_fu_505_wp_parameters_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            patches_parameters_address1 <= grp_makePatch_alignedToLine_fu_482_patches_parameters_address1;
        else 
            patches_parameters_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    patches_parameters_ce0_assign_proc : process(makeHorizontallyShiftedPatch_reg_425, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state14, ap_CS_fsm_state24, ap_CS_fsm_state34, ap_CS_fsm_state50, or_ln1086_1_reg_1658, and_ln1086_2_reg_1667, and_ln1086_1_reg_1671, ap_CS_fsm_state57, ap_CS_fsm_state62, and_ln1161_reg_1806, icmp_ln1163_reg_1810, grp_makePatch_alignedToLine_fu_482_patches_parameters_ce0, grp_getShadows_fu_505_wp_parameters_ce0, grp_delete_patch_fu_522_patches_parameters_ce0, ap_CS_fsm_state60, ap_CS_fsm_state55, ap_CS_fsm_state81, ap_CS_fsm_state49, ap_CS_fsm_state61)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            patches_parameters_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state81) and ((((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (or_ln1086_1_reg_1658 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (ap_const_lv1_1 = and_ln1086_1_reg_1671)) or ((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (makeHorizontallyShiftedPatch_reg_425 = ap_const_lv1_1))) or ((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (or_ln1086_1_reg_1658 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (ap_const_lv1_1 = and_ln1086_2_reg_1667)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_425 = ap_const_lv1_1)))) then 
            patches_parameters_ce0 <= grp_delete_patch_fu_522_patches_parameters_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_ce0 <= grp_getShadows_fu_505_wp_parameters_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            patches_parameters_ce0 <= grp_makePatch_alignedToLine_fu_482_patches_parameters_ce0;
        else 
            patches_parameters_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    patches_parameters_ce1_assign_proc : process(makeHorizontallyShiftedPatch_reg_425, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state50, or_ln1086_1_reg_1658, and_ln1086_2_reg_1667, and_ln1086_1_reg_1671, ap_CS_fsm_state57, ap_CS_fsm_state62, and_ln1161_reg_1806, icmp_ln1163_reg_1810, grp_makePatch_alignedToLine_fu_482_patches_parameters_ce1, grp_getShadows_fu_505_wp_parameters_ce1, grp_delete_patch_fu_522_patches_parameters_ce1, ap_CS_fsm_state60, ap_CS_fsm_state55, ap_CS_fsm_state81, ap_CS_fsm_state49, ap_CS_fsm_state61)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            patches_parameters_ce1 <= ap_const_logic_1;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state81) and ((((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (or_ln1086_1_reg_1658 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (ap_const_lv1_1 = and_ln1086_1_reg_1671)) or ((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (makeHorizontallyShiftedPatch_reg_425 = ap_const_lv1_1))) or ((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (or_ln1086_1_reg_1658 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (ap_const_lv1_1 = and_ln1086_2_reg_1667)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_425 = ap_const_lv1_1)))) then 
            patches_parameters_ce1 <= grp_delete_patch_fu_522_patches_parameters_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_ce1 <= grp_getShadows_fu_505_wp_parameters_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            patches_parameters_ce1 <= grp_makePatch_alignedToLine_fu_482_patches_parameters_ce1;
        else 
            patches_parameters_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    patches_parameters_d0_assign_proc : process(makeHorizontallyShiftedPatch_reg_425, ap_CS_fsm_state2, ap_CS_fsm_state4, or_ln1086_1_reg_1658, and_ln1086_2_reg_1667, and_ln1086_1_reg_1671, ap_CS_fsm_state57, and_ln1161_reg_1806, icmp_ln1163_reg_1810, grp_makePatch_alignedToLine_fu_482_patches_parameters_d0, grp_getShadows_fu_505_wp_parameters_d0, grp_delete_patch_fu_522_patches_parameters_d0, ap_CS_fsm_state60, ap_CS_fsm_state55, ap_CS_fsm_state81)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state81) and ((((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (or_ln1086_1_reg_1658 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (ap_const_lv1_1 = and_ln1086_1_reg_1671)) or ((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (makeHorizontallyShiftedPatch_reg_425 = ap_const_lv1_1))) or ((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (or_ln1086_1_reg_1658 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (ap_const_lv1_1 = and_ln1086_2_reg_1667)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_425 = ap_const_lv1_1)))) then 
            patches_parameters_d0 <= grp_delete_patch_fu_522_patches_parameters_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_d0 <= grp_getShadows_fu_505_wp_parameters_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            patches_parameters_d0 <= grp_makePatch_alignedToLine_fu_482_patches_parameters_d0;
        else 
            patches_parameters_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    patches_parameters_d1 <= grp_getShadows_fu_505_wp_parameters_d1;

    patches_parameters_we0_assign_proc : process(makeHorizontallyShiftedPatch_reg_425, ap_CS_fsm_state2, ap_CS_fsm_state4, or_ln1086_1_reg_1658, and_ln1086_2_reg_1667, and_ln1086_1_reg_1671, ap_CS_fsm_state57, and_ln1161_reg_1806, icmp_ln1163_reg_1810, grp_makePatch_alignedToLine_fu_482_patches_parameters_we0, grp_getShadows_fu_505_wp_parameters_we0, grp_delete_patch_fu_522_patches_parameters_we0, ap_CS_fsm_state60, ap_CS_fsm_state55, ap_CS_fsm_state81)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state81) and ((((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (or_ln1086_1_reg_1658 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (ap_const_lv1_1 = and_ln1086_1_reg_1671)) or ((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (makeHorizontallyShiftedPatch_reg_425 = ap_const_lv1_1))) or ((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (or_ln1086_1_reg_1658 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (ap_const_lv1_1 = and_ln1086_2_reg_1667)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_425 = ap_const_lv1_1)))) then 
            patches_parameters_we0 <= grp_delete_patch_fu_522_patches_parameters_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_we0 <= grp_getShadows_fu_505_wp_parameters_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            patches_parameters_we0 <= grp_makePatch_alignedToLine_fu_482_patches_parameters_we0;
        else 
            patches_parameters_we0 <= ap_const_logic_0;
        end if; 
    end process;


    patches_parameters_we1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, grp_getShadows_fu_505_wp_parameters_we1, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_we1 <= grp_getShadows_fu_505_wp_parameters_we1;
        else 
            patches_parameters_we1 <= ap_const_logic_0;
        end if; 
    end process;


    patches_superpoints_address0_assign_proc : process(makeHorizontallyShiftedPatch_reg_425, ap_CS_fsm_state2, ap_CS_fsm_state4, or_ln1086_1_reg_1658, and_ln1086_2_reg_1667, and_ln1086_1_reg_1671, ap_CS_fsm_state57, and_ln1161_reg_1806, icmp_ln1163_reg_1810, grp_makePatch_alignedToLine_fu_482_patches_superpoints_address0, grp_getShadows_fu_505_wp_superpoints_address0, grp_delete_patch_fu_522_patches_superpoints_address0, ap_CS_fsm_state60, ap_CS_fsm_state55, ap_CS_fsm_state81)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state81) and ((((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (or_ln1086_1_reg_1658 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (ap_const_lv1_1 = and_ln1086_1_reg_1671)) or ((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (makeHorizontallyShiftedPatch_reg_425 = ap_const_lv1_1))) or ((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (or_ln1086_1_reg_1658 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (ap_const_lv1_1 = and_ln1086_2_reg_1667)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_425 = ap_const_lv1_1)))) then 
            patches_superpoints_address0 <= grp_delete_patch_fu_522_patches_superpoints_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_superpoints_address0 <= grp_getShadows_fu_505_wp_superpoints_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            patches_superpoints_address0 <= grp_makePatch_alignedToLine_fu_482_patches_superpoints_address0;
        else 
            patches_superpoints_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    patches_superpoints_address1 <= grp_delete_patch_fu_522_patches_superpoints_address1;

    patches_superpoints_ce0_assign_proc : process(makeHorizontallyShiftedPatch_reg_425, ap_CS_fsm_state2, ap_CS_fsm_state4, or_ln1086_1_reg_1658, and_ln1086_2_reg_1667, and_ln1086_1_reg_1671, ap_CS_fsm_state57, and_ln1161_reg_1806, icmp_ln1163_reg_1810, grp_makePatch_alignedToLine_fu_482_patches_superpoints_ce0, grp_getShadows_fu_505_wp_superpoints_ce0, grp_delete_patch_fu_522_patches_superpoints_ce0, ap_CS_fsm_state60, ap_CS_fsm_state55, ap_CS_fsm_state81)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state81) and ((((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (or_ln1086_1_reg_1658 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (ap_const_lv1_1 = and_ln1086_1_reg_1671)) or ((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (makeHorizontallyShiftedPatch_reg_425 = ap_const_lv1_1))) or ((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (or_ln1086_1_reg_1658 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (ap_const_lv1_1 = and_ln1086_2_reg_1667)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_425 = ap_const_lv1_1)))) then 
            patches_superpoints_ce0 <= grp_delete_patch_fu_522_patches_superpoints_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_superpoints_ce0 <= grp_getShadows_fu_505_wp_superpoints_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            patches_superpoints_ce0 <= grp_makePatch_alignedToLine_fu_482_patches_superpoints_ce0;
        else 
            patches_superpoints_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    patches_superpoints_ce1_assign_proc : process(makeHorizontallyShiftedPatch_reg_425, or_ln1086_1_reg_1658, and_ln1086_2_reg_1667, and_ln1086_1_reg_1671, and_ln1161_reg_1806, icmp_ln1163_reg_1810, grp_delete_patch_fu_522_patches_superpoints_ce1, ap_CS_fsm_state55, ap_CS_fsm_state81)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state81) and ((((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (or_ln1086_1_reg_1658 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (ap_const_lv1_1 = and_ln1086_1_reg_1671)) or ((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (makeHorizontallyShiftedPatch_reg_425 = ap_const_lv1_1))) or ((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (or_ln1086_1_reg_1658 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (ap_const_lv1_1 = and_ln1086_2_reg_1667)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_425 = ap_const_lv1_1)))) then 
            patches_superpoints_ce1 <= grp_delete_patch_fu_522_patches_superpoints_ce1;
        else 
            patches_superpoints_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    patches_superpoints_d0_assign_proc : process(makeHorizontallyShiftedPatch_reg_425, or_ln1086_1_reg_1658, and_ln1086_2_reg_1667, and_ln1086_1_reg_1671, ap_CS_fsm_state57, and_ln1161_reg_1806, icmp_ln1163_reg_1810, grp_makePatch_alignedToLine_fu_482_patches_superpoints_d0, grp_delete_patch_fu_522_patches_superpoints_d0, ap_CS_fsm_state55, ap_CS_fsm_state81)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state81) and ((((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (or_ln1086_1_reg_1658 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (ap_const_lv1_1 = and_ln1086_1_reg_1671)) or ((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (makeHorizontallyShiftedPatch_reg_425 = ap_const_lv1_1))) or ((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (or_ln1086_1_reg_1658 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (ap_const_lv1_1 = and_ln1086_2_reg_1667)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_425 = ap_const_lv1_1)))) then 
            patches_superpoints_d0 <= grp_delete_patch_fu_522_patches_superpoints_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            patches_superpoints_d0 <= grp_makePatch_alignedToLine_fu_482_patches_superpoints_d0;
        else 
            patches_superpoints_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    patches_superpoints_we0_assign_proc : process(makeHorizontallyShiftedPatch_reg_425, or_ln1086_1_reg_1658, and_ln1086_2_reg_1667, and_ln1086_1_reg_1671, ap_CS_fsm_state57, and_ln1161_reg_1806, icmp_ln1163_reg_1810, grp_makePatch_alignedToLine_fu_482_patches_superpoints_we0, grp_delete_patch_fu_522_patches_superpoints_we0, ap_CS_fsm_state55, ap_CS_fsm_state81)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state81) and ((((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (or_ln1086_1_reg_1658 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (ap_const_lv1_1 = and_ln1086_1_reg_1671)) or ((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (makeHorizontallyShiftedPatch_reg_425 = ap_const_lv1_1))) or ((icmp_ln1163_reg_1810 = ap_const_lv1_1) and (or_ln1086_1_reg_1658 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1161_reg_1806) and (ap_const_lv1_1 = and_ln1086_2_reg_1667)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_425 = ap_const_lv1_1)))) then 
            patches_superpoints_we0 <= grp_delete_patch_fu_522_patches_superpoints_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            patches_superpoints_we0 <= grp_makePatch_alignedToLine_fu_482_patches_superpoints_we0;
        else 
            patches_superpoints_we0 <= ap_const_logic_0;
        end if; 
    end process;

    phitmp3_fu_881_p2 <= "1" when (unsigned(select_ln180_5_fu_873_p3) > unsigned(ap_const_lv32_11E1A2FF)) else "0";
    phitmp4_fu_831_p2 <= "1" when (unsigned(select_ln180_4_fu_823_p3) > unsigned(ap_const_lv32_11E1A2FF)) else "0";
    phitmp5_fu_925_p2 <= "1" when (unsigned(select_ln180_6_fu_917_p3) > unsigned(ap_const_lv32_11E1A2FF)) else "0";
    phitmp_fu_787_p2 <= "1" when (unsigned(select_ln180_fu_779_p3) > unsigned(ap_const_lv32_11E1A2FF)) else "0";
    ret_10_fu_1257_p2 <= std_logic_vector(signed(sext_ln215_18_reg_1764) - signed(sext_ln215_22_fu_1254_p1));
    ret_11_fu_1287_p2 <= std_logic_vector(signed(sext_ln215_23_fu_1284_p1) - signed(sext_ln215_19_reg_1774));
    ret_12_fu_1295_p2 <= std_logic_vector(signed(sext_ln215_20_reg_1779) - signed(sext_ln215_24_fu_1292_p1));
    ret_7_fu_843_p2 <= std_logic_vector(signed(sext_ln215_13_fu_837_p1) - signed(sext_ln215_14_fu_840_p1));
    ret_8_fu_897_p2 <= std_logic_vector(signed(sext_ln215_15_fu_891_p1) - signed(sext_ln215_16_fu_894_p1));
    ret_9_fu_1249_p2 <= std_logic_vector(signed(sext_ln215_21_fu_1246_p1) - signed(sext_ln215_17_reg_1759));
    ret_fu_803_p2 <= std_logic_vector(signed(sext_ln215_fu_797_p1) - signed(sext_ln215_12_fu_800_p1));
    secondLastPatchIndex_1_fu_591_p3 <= 
        ap_const_lv5_0 when (icmp_ln1000_reg_1384(0) = '1') else 
        secondLastPatchIndex_reg_1395;
    secondLastPatchIndex_fu_586_p2 <= std_logic_vector(unsigned(empty_reg_1378) + unsigned(ap_const_lv5_1F));
    select_ln1015_fu_604_p3 <= 
        ap_const_lv5_6 when (icmp_ln1000_reg_1384(0) = '1') else 
        ap_const_lv5_1A;
    select_ln1019_1_fu_669_p3 <= 
        ap_const_lv9_8 when (icmp_ln1000_reg_1384(0) = '1') else 
        ap_const_lv9_30;
    select_ln1019_fu_662_p3 <= 
        ap_const_lv9_20 when (icmp_ln1000_reg_1384(0) = '1') else 
        ap_const_lv9_C0;
    select_ln1039_fu_687_p3 <= 
        ap_const_lv5_7 when (icmp_ln1000_reg_1384(0) = '1') else 
        ap_const_lv5_1B;
    select_ln1040_fu_729_p3 <= 
        ap_const_lv5_5 when (icmp_ln1000_reg_1384(0) = '1') else 
        ap_const_lv5_19;
    select_ln180_4_fu_823_p3 <= 
        grp_fu_569_p2 when (tmp_17_fu_815_p3(0) = '1') else 
        reg_560;
    select_ln180_5_fu_873_p3 <= 
        grp_fu_569_p2 when (tmp_18_fu_865_p3(0) = '1') else 
        reg_560;
    select_ln180_6_fu_917_p3 <= 
        grp_fu_569_p2 when (tmp_19_fu_909_p3(0) = '1') else 
        reg_560;
    select_ln180_fu_779_p3 <= 
        grp_fu_569_p2 when (tmp_16_fu_771_p3(0) = '1') else 
        reg_560;
    select_ln534_fu_1109_p3 <= 
        empty_69_reg_315 when (icmp_ln878_5_fu_1103_p2(0) = '1') else 
        empty_70_reg_324;
        sext_ln1019_fu_682_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1019_fu_676_p2),64));

        sext_ln1066_fu_993_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shifted_Align_1_fu_987_p3),64));

    sext_ln215_12_fu_800_p0 <= apexZ0;
        sext_ln215_12_fu_800_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln215_12_fu_800_p0),33));

        sext_ln215_13_fu_837_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(complementary_topR_jR_V_3_reg_1521),33));

    sext_ln215_14_fu_840_p0 <= complementary_apexZ0;
        sext_ln215_14_fu_840_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln215_14_fu_840_p0),33));

        sext_ln215_15_fu_891_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(complementary_topL_jR_V_3_reg_1539),33));

    sext_ln215_16_fu_894_p0 <= apexZ0;
        sext_ln215_16_fu_894_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln215_16_fu_894_p0),33));

        sext_ln215_17_fu_1220_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(original_topR_jL_V_3_reg_1740),33));

        sext_ln215_18_fu_1223_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(complementary_topR_jR_V_4_reg_1706),33));

        sext_ln215_19_fu_1230_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(original_topL_jL_V_4_reg_1733),33));

        sext_ln215_20_fu_1233_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(complementary_topL_jR_V_4_reg_1713),33));

        sext_ln215_21_fu_1246_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(complementary_topR_jL_V_3_reg_1747),33));

        sext_ln215_22_fu_1254_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(original_topR_jR_V_3_reg_1720),33));

        sext_ln215_23_fu_1284_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(complementary_topL_jL_V_3_reg_1753),33));

        sext_ln215_24_fu_1292_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(original_topL_jR_V_3_reg_1727),33));

        sext_ln215_fu_797_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(original_topL_jL_V_3_reg_1499),33));

        sext_ln534_fu_1117_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln534_reg_1675),64));

    shiftOriginal_1_fu_997_p2 <= (shiftOriginal_fu_981_p2 or icmp_ln886_5_reg_1595);
    shiftOriginal_fu_981_p2 <= (tmp_20_fu_967_p3 xor ap_const_lv1_1);
    shifted_Align_1_fu_987_p1 <= apexZ0;
    shifted_Align_1_fu_987_p3 <= 
        shifted_Align_1_fu_987_p1 when (icmp_ln886_5_reg_1595(0) = '1') else 
        shifted_Align_fu_975_p3;
    shifted_Align_3_fu_1120_p2 <= std_logic_vector(unsigned(shifted_Align_2_reg_439) - unsigned(sext_ln534_fu_1117_p1));
    shifted_Align_4_fu_1126_p2 <= std_logic_vector(unsigned(shifted_Align_2_reg_439) + unsigned(sext_ln534_fu_1117_p1));
    shifted_Align_5_fu_1132_p3 <= 
        shifted_Align_3_fu_1120_p2 when (shiftOriginal_1_reg_1627(0) = '1') else 
        shifted_Align_4_fu_1126_p2;
    shifted_Align_fu_975_p1 <= complementary_apexZ0;
    shifted_Align_fu_975_p2 <= apexZ0;
    shifted_Align_fu_975_p3 <= 
        shifted_Align_fu_975_p1 when (tmp_20_fu_967_p3(0) = '1') else 
        shifted_Align_fu_975_p2;
    sub_ln1015_fu_633_p2 <= std_logic_vector(unsigned(zext_ln1015_fu_618_p1) - unsigned(zext_ln1015_1_fu_629_p1));
    sub_ln1019_fu_676_p2 <= std_logic_vector(unsigned(select_ln1019_fu_662_p3) - unsigned(select_ln1019_1_fu_669_p3));
    sub_ln1039_fu_718_p2 <= std_logic_vector(unsigned(zext_ln1039_fu_702_p1) - unsigned(zext_ln1039_1_fu_714_p1));
    sub_ln1040_fu_760_p2 <= std_logic_vector(unsigned(zext_ln1040_fu_744_p1) - unsigned(zext_ln1040_1_fu_756_p1));
    tmp_11_fu_622_p3 <= (select_ln1015_reg_1410 & ap_const_lv1_0);
    tmp_12_fu_694_p3 <= (select_ln1039_fu_687_p3 & ap_const_lv3_0);
    tmp_13_fu_706_p3 <= (select_ln1039_fu_687_p3 & ap_const_lv1_0);
    tmp_14_fu_736_p3 <= (select_ln1040_fu_729_p3 & ap_const_lv3_0);
    tmp_15_fu_748_p3 <= (select_ln1040_fu_729_p3 & ap_const_lv1_0);
    tmp_16_fu_771_p3 <= reg_560(31 downto 31);
    tmp_17_fu_815_p3 <= reg_560(31 downto 31);
    tmp_18_fu_865_p3 <= reg_560(31 downto 31);
    tmp_19_fu_909_p3 <= reg_560(31 downto 31);
    tmp_20_fu_967_p3 <= grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_dout0(31 downto 31);
    tmp_21_fu_1023_p4 <= empty_70_reg_324(31 downto 1);
    tmp_22_fu_1064_p4 <= empty_69_reg_315(31 downto 1);
    tmp_fu_611_p3 <= (select_ln1015_reg_1410 & ap_const_lv3_0);
    trunc_ln1054_1_fu_1139_p1 <= shifted_Align_5_fu_1132_p3(32 - 1 downto 0);
    trunc_ln1054_fu_1019_p1 <= shifted_Align_2_reg_439(32 - 1 downto 0);
    trunc_ln1112_fu_1154_p1 <= n_patches_i(5 - 1 downto 0);
    trunc_ln1134_1_fu_1272_p1 <= ret_9_fu_1249_p2(32 - 1 downto 0);
    trunc_ln1134_fu_1268_p1 <= ret_10_fu_1257_p2(32 - 1 downto 0);
    trunc_ln1135_1_fu_1310_p1 <= ret_11_fu_1287_p2(32 - 1 downto 0);
    trunc_ln1135_fu_1306_p1 <= ret_12_fu_1295_p2(32 - 1 downto 0);
    xor_ln1013_fu_598_p2 <= (icmp_ln1000_reg_1384 xor ap_const_lv1_1);
    xor_ln1086_fu_1085_p2 <= (or_ln1086_3_fu_1080_p2 xor ap_const_lv1_1);
    zext_ln1015_1_fu_629_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_622_p3),9));
    zext_ln1015_2_fu_639_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln1015_fu_633_p2),64));
    zext_ln1015_fu_618_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_611_p3),9));
    zext_ln1039_1_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_fu_706_p3),9));
    zext_ln1039_2_fu_724_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln1039_fu_718_p2),64));
    zext_ln1039_fu_702_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_694_p3),9));
    zext_ln1040_1_fu_756_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_fu_748_p3),9));
    zext_ln1040_2_fu_766_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln1040_fu_760_p2),64));
    zext_ln1040_fu_744_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_fu_736_p3),9));
    zext_ln1106_fu_1143_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_564),9));
    zext_ln1165_fu_1359_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1165_fu_1353_p2),9));
end behav;
