-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity MPSQ_getParallelograms is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    wp_superpoints_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    wp_superpoints_ce0 : OUT STD_LOGIC;
    wp_superpoints_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    wp_superpoints_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    wp_superpoints_ce1 : OUT STD_LOGIC;
    wp_superpoints_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    wp_parameters_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    wp_parameters_ce0 : OUT STD_LOGIC;
    wp_parameters_we0 : OUT STD_LOGIC;
    wp_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    wp_parameters_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    wp_parameters_ce1 : OUT STD_LOGIC;
    wp_parameters_we1 : OUT STD_LOGIC;
    wp_parameters_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of MPSQ_getParallelograms is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (12 downto 0) := "0000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (12 downto 0) := "0000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (12 downto 0) := "0000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (12 downto 0) := "0000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (12 downto 0) := "0000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (12 downto 0) := "0000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (12 downto 0) := "0001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (12 downto 0) := "0010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (12 downto 0) := "0100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_1F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011111";
    constant ap_const_lv32_FEB04E1C : STD_LOGIC_VECTOR (31 downto 0) := "11111110101100000100111000011100";
    constant ap_const_lv32_14FB1E4 : STD_LOGIC_VECTOR (31 downto 0) := "00000001010011111011000111100100";
    constant ap_const_lv26_15EF424 : STD_LOGIC_VECTOR (25 downto 0) := "01010111101111010000100100";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv56_0 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_1F : STD_LOGIC_VECTOR (7 downto 0) := "00011111";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv7_4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_const_lv7_5 : STD_LOGIC_VECTOR (6 downto 0) := "0000101";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal reg_230 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal reg_236 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln878_fu_242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_reg_456 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_14_fu_248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_14_reg_461 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln46_fu_290_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln46_reg_466 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal sext_ln43_fu_302_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln43_reg_473 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal add_ln64_fu_350_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln64_reg_493 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln71_fu_356_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln71_reg_502 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln71_fu_384_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln71_reg_508 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_straightLineProjectorFromLayerIJtoK_fu_204_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal c_V_reg_516 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_straightLineProjectorFromLayerIJtoK_fu_217_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal d_V_reg_521 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_176_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_176_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_176_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_176_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_176_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_190_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_190_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_190_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_190_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_190_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_204_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_204_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_204_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_204_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_217_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_217_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_217_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_217_ap_ready : STD_LOGIC;
    signal i_reg_164 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_straightLineProjectorFromLayerIJtoK_fu_176_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_NS_fsm_state6 : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_190_ap_start_reg : STD_LOGIC := '0';
    signal grp_straightLineProjectorFromLayerIJtoK_fu_204_ap_start_reg : STD_LOGIC := '0';
    signal grp_straightLineProjectorFromLayerIJtoK_fu_217_ap_start_reg : STD_LOGIC := '0';
    signal tmp_s_fu_320_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_fu_335_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln75_fu_396_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln76_fu_407_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln71_fu_412_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln72_fu_421_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln73_fu_431_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln74_fu_441_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal z1_min_V_fu_254_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal z1_max_V_fu_265_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_fu_276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln44_fu_272_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal z1_max_V_1_fu_282_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln43_fu_261_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal z1_min_V_1_fu_294_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_fu_306_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln61_fu_314_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln62_fu_329_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_fu_362_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_4_fu_373_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln71_fu_369_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln71_1_fu_380_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln75_fu_390_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln76_fu_401_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln72_fu_416_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln73_fu_426_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln74_fu_436_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln59_fu_344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component MPSQ_straightLineProjectorFromLayerIJtoK IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        z_i : IN STD_LOGIC_VECTOR (31 downto 0);
        z_j : IN STD_LOGIC_VECTOR (31 downto 0);
        i : IN STD_LOGIC_VECTOR (2 downto 0);
        j : IN STD_LOGIC_VECTOR (2 downto 0);
        k : IN STD_LOGIC_VECTOR (2 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_straightLineProjectorFromLayerIJtoK_fu_176 : component MPSQ_straightLineProjectorFromLayerIJtoK
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_straightLineProjectorFromLayerIJtoK_fu_176_ap_start,
        ap_done => grp_straightLineProjectorFromLayerIJtoK_fu_176_ap_done,
        ap_idle => grp_straightLineProjectorFromLayerIJtoK_fu_176_ap_idle,
        ap_ready => grp_straightLineProjectorFromLayerIJtoK_fu_176_ap_ready,
        ap_ce => ap_const_logic_1,
        z_i => sext_ln43_reg_473,
        z_j => reg_236,
        i => ap_const_lv3_1,
        j => add_ln64_reg_493,
        k => ap_const_lv3_5,
        ap_return => grp_straightLineProjectorFromLayerIJtoK_fu_176_ap_return);

    grp_straightLineProjectorFromLayerIJtoK_fu_190 : component MPSQ_straightLineProjectorFromLayerIJtoK
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_straightLineProjectorFromLayerIJtoK_fu_190_ap_start,
        ap_done => grp_straightLineProjectorFromLayerIJtoK_fu_190_ap_done,
        ap_idle => grp_straightLineProjectorFromLayerIJtoK_fu_190_ap_idle,
        ap_ready => grp_straightLineProjectorFromLayerIJtoK_fu_190_ap_ready,
        ap_ce => ap_const_logic_1,
        z_i => sext_ln46_reg_466,
        z_j => reg_236,
        i => ap_const_lv3_1,
        j => add_ln64_reg_493,
        k => ap_const_lv3_5,
        ap_return => grp_straightLineProjectorFromLayerIJtoK_fu_190_ap_return);

    grp_straightLineProjectorFromLayerIJtoK_fu_204 : component MPSQ_straightLineProjectorFromLayerIJtoK
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_straightLineProjectorFromLayerIJtoK_fu_204_ap_start,
        ap_done => grp_straightLineProjectorFromLayerIJtoK_fu_204_ap_done,
        ap_idle => grp_straightLineProjectorFromLayerIJtoK_fu_204_ap_idle,
        ap_ready => grp_straightLineProjectorFromLayerIJtoK_fu_204_ap_ready,
        ap_ce => ap_const_logic_1,
        z_i => sext_ln43_reg_473,
        z_j => reg_230,
        i => ap_const_lv3_1,
        j => add_ln64_reg_493,
        k => ap_const_lv3_5,
        ap_return => grp_straightLineProjectorFromLayerIJtoK_fu_204_ap_return);

    grp_straightLineProjectorFromLayerIJtoK_fu_217 : component MPSQ_straightLineProjectorFromLayerIJtoK
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_straightLineProjectorFromLayerIJtoK_fu_217_ap_start,
        ap_done => grp_straightLineProjectorFromLayerIJtoK_fu_217_ap_done,
        ap_idle => grp_straightLineProjectorFromLayerIJtoK_fu_217_ap_idle,
        ap_ready => grp_straightLineProjectorFromLayerIJtoK_fu_217_ap_ready,
        ap_ce => ap_const_logic_1,
        z_i => sext_ln46_reg_466,
        z_j => reg_230,
        i => ap_const_lv3_1,
        j => add_ln64_reg_493,
        k => ap_const_lv3_5,
        ap_return => grp_straightLineProjectorFromLayerIJtoK_fu_217_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_176_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_straightLineProjectorFromLayerIJtoK_fu_176_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = ap_NS_fsm_state6))) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_176_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_straightLineProjectorFromLayerIJtoK_fu_176_ap_ready = ap_const_logic_1)) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_176_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_190_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_straightLineProjectorFromLayerIJtoK_fu_190_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = ap_NS_fsm_state6))) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_190_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_straightLineProjectorFromLayerIJtoK_fu_190_ap_ready = ap_const_logic_1)) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_190_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_204_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_straightLineProjectorFromLayerIJtoK_fu_204_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = ap_NS_fsm_state6))) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_204_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_straightLineProjectorFromLayerIJtoK_fu_204_ap_ready = ap_const_logic_1)) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_204_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_217_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_straightLineProjectorFromLayerIJtoK_fu_217_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = ap_NS_fsm_state6))) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_217_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_straightLineProjectorFromLayerIJtoK_fu_217_ap_ready = ap_const_logic_1)) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_217_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                i_reg_164 <= add_ln64_reg_493;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                i_reg_164 <= ap_const_lv3_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                add_ln64_reg_493 <= add_ln64_fu_350_p2;
                add_ln71_reg_502 <= add_ln71_fu_356_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                c_V_reg_516 <= grp_straightLineProjectorFromLayerIJtoK_fu_204_ap_return;
                d_V_reg_521 <= grp_straightLineProjectorFromLayerIJtoK_fu_217_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                icmp_ln878_14_reg_461 <= icmp_ln878_14_fu_248_p2;
                icmp_ln878_reg_456 <= icmp_ln878_fu_242_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state2))) then
                reg_230 <= wp_superpoints_q1;
                reg_236 <= wp_superpoints_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                sext_ln43_reg_473 <= sext_ln43_fu_302_p1;
                sext_ln46_reg_466 <= sext_ln46_fu_290_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                    sub_ln71_reg_508(6 downto 1) <= sub_ln71_fu_384_p2(6 downto 1);
            end if;
        end if;
    end process;
    sub_ln71_reg_508(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state4, icmp_ln59_fu_344_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((icmp_ln59_fu_344_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXX";
        end case;
    end process;
    add_ln64_fu_350_p2 <= std_logic_vector(unsigned(i_reg_164) + unsigned(ap_const_lv3_1));
    add_ln71_fu_356_p2 <= std_logic_vector(unsigned(i_reg_164) + unsigned(ap_const_lv3_7));
    add_ln73_fu_426_p2 <= std_logic_vector(signed(sub_ln71_reg_508) + signed(ap_const_lv7_2));
    add_ln74_fu_436_p2 <= std_logic_vector(signed(sub_ln71_reg_508) + signed(ap_const_lv7_3));
    add_ln75_fu_390_p2 <= std_logic_vector(signed(sub_ln71_fu_384_p2) + signed(ap_const_lv7_4));
    add_ln76_fu_401_p2 <= std_logic_vector(signed(sub_ln71_fu_384_p2) + signed(ap_const_lv7_5));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_NS_fsm_state6 <= ap_NS_fsm(5);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state4, icmp_ln59_fu_344_p2)
    begin
        if ((((icmp_ln59_fu_344_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state4, icmp_ln59_fu_344_p2)
    begin
        if (((icmp_ln59_fu_344_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_straightLineProjectorFromLayerIJtoK_fu_176_ap_start <= grp_straightLineProjectorFromLayerIJtoK_fu_176_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_190_ap_start <= grp_straightLineProjectorFromLayerIJtoK_fu_190_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_204_ap_start <= grp_straightLineProjectorFromLayerIJtoK_fu_204_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_217_ap_start <= grp_straightLineProjectorFromLayerIJtoK_fu_217_ap_start_reg;
    icmp_ln59_fu_344_p2 <= "1" when (i_reg_164 = ap_const_lv3_5) else "0";
    icmp_ln878_14_fu_248_p2 <= "1" when (signed(wp_superpoints_q0) < signed(ap_const_lv32_14FB1E4)) else "0";
    icmp_ln878_fu_242_p2 <= "1" when (signed(wp_superpoints_q1) < signed(ap_const_lv32_FEB04E1C)) else "0";
    icmp_ln886_fu_276_p2 <= "1" when (signed(z1_min_V_fu_254_p3) > signed(z1_max_V_fu_265_p3)) else "0";
    or_ln61_fu_314_p2 <= (tmp_fu_306_p3 or ap_const_lv8_1);
    or_ln62_fu_329_p2 <= (tmp_fu_306_p3 or ap_const_lv8_1F);
    or_ln72_fu_416_p2 <= (sub_ln71_reg_508 or ap_const_lv7_1);
        sext_ln43_fu_302_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(z1_min_V_1_fu_294_p3),32));

        sext_ln46_fu_290_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(z1_max_V_1_fu_282_p3),32));

        sext_ln71_fu_412_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln71_reg_508),64));

        sext_ln72_fu_421_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(or_ln72_fu_416_p2),64));

    sub_ln71_fu_384_p2 <= std_logic_vector(unsigned(zext_ln71_fu_369_p1) - unsigned(zext_ln71_1_fu_380_p1));
    tmp_2_fu_335_p3 <= (ap_const_lv56_0 & or_ln62_fu_329_p2);
    tmp_3_fu_362_p3 <= (add_ln71_reg_502 & ap_const_lv3_0);
    tmp_4_fu_373_p3 <= (add_ln71_reg_502 & ap_const_lv1_0);
    tmp_fu_306_p3 <= (i_reg_164 & ap_const_lv5_0);
    tmp_s_fu_320_p3 <= (ap_const_lv56_0 & or_ln61_fu_314_p2);
    trunc_ln43_fu_261_p1 <= z1_min_V_fu_254_p3(26 - 1 downto 0);
    trunc_ln44_fu_272_p1 <= z1_max_V_fu_265_p3(26 - 1 downto 0);

    wp_parameters_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state12, ap_CS_fsm_state13, zext_ln76_fu_407_p1, sext_ln72_fu_421_p1, zext_ln74_fu_441_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            wp_parameters_address0 <= zext_ln74_fu_441_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            wp_parameters_address0 <= sext_ln72_fu_421_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            wp_parameters_address0 <= zext_ln76_fu_407_p1(7 - 1 downto 0);
        else 
            wp_parameters_address0 <= "XXXXXXX";
        end if; 
    end process;


    wp_parameters_address1_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state12, ap_CS_fsm_state13, zext_ln75_fu_396_p1, sext_ln71_fu_412_p1, zext_ln73_fu_431_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            wp_parameters_address1 <= zext_ln73_fu_431_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            wp_parameters_address1 <= sext_ln71_fu_412_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            wp_parameters_address1 <= zext_ln75_fu_396_p1(7 - 1 downto 0);
        else 
            wp_parameters_address1 <= "XXXXXXX";
        end if; 
    end process;


    wp_parameters_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state12, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            wp_parameters_ce0 <= ap_const_logic_1;
        else 
            wp_parameters_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    wp_parameters_ce1_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state12, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            wp_parameters_ce1 <= ap_const_logic_1;
        else 
            wp_parameters_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    wp_parameters_d0_assign_proc : process(sext_ln46_reg_466, ap_CS_fsm_state6, ap_CS_fsm_state12, d_V_reg_521, grp_straightLineProjectorFromLayerIJtoK_fu_190_ap_return, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            wp_parameters_d0 <= d_V_reg_521;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            wp_parameters_d0 <= grp_straightLineProjectorFromLayerIJtoK_fu_190_ap_return;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            wp_parameters_d0 <= sext_ln46_reg_466;
        else 
            wp_parameters_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    wp_parameters_d1_assign_proc : process(sext_ln43_reg_473, ap_CS_fsm_state6, c_V_reg_516, ap_CS_fsm_state12, grp_straightLineProjectorFromLayerIJtoK_fu_176_ap_return, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            wp_parameters_d1 <= c_V_reg_516;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            wp_parameters_d1 <= grp_straightLineProjectorFromLayerIJtoK_fu_176_ap_return;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            wp_parameters_d1 <= sext_ln43_reg_473;
        else 
            wp_parameters_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    wp_parameters_we0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state12, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            wp_parameters_we0 <= ap_const_logic_1;
        else 
            wp_parameters_we0 <= ap_const_logic_0;
        end if; 
    end process;


    wp_parameters_we1_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state12, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            wp_parameters_we1 <= ap_const_logic_1;
        else 
            wp_parameters_we1 <= ap_const_logic_0;
        end if; 
    end process;


    wp_superpoints_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state4, tmp_2_fu_335_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            wp_superpoints_address0 <= tmp_2_fu_335_p3(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            wp_superpoints_address0 <= ap_const_lv64_1F(8 - 1 downto 0);
        else 
            wp_superpoints_address0 <= "XXXXXXXX";
        end if; 
    end process;


    wp_superpoints_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state4, tmp_s_fu_320_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            wp_superpoints_address1 <= tmp_s_fu_320_p3(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            wp_superpoints_address1 <= ap_const_lv64_1(8 - 1 downto 0);
        else 
            wp_superpoints_address1 <= "XXXXXXXX";
        end if; 
    end process;


    wp_superpoints_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            wp_superpoints_ce0 <= ap_const_logic_1;
        else 
            wp_superpoints_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    wp_superpoints_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            wp_superpoints_ce1 <= ap_const_logic_1;
        else 
            wp_superpoints_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    z1_max_V_1_fu_282_p3 <= 
        ap_const_lv26_15EF424 when (icmp_ln886_fu_276_p2(0) = '1') else 
        trunc_ln44_fu_272_p1;
    z1_max_V_fu_265_p3 <= 
        reg_236 when (icmp_ln878_14_reg_461(0) = '1') else 
        ap_const_lv32_14FB1E4;
    z1_min_V_1_fu_294_p3 <= 
        ap_const_lv26_15EF424 when (icmp_ln886_fu_276_p2(0) = '1') else 
        trunc_ln43_fu_261_p1;
    z1_min_V_fu_254_p3 <= 
        ap_const_lv32_FEB04E1C when (icmp_ln878_reg_456(0) = '1') else 
        reg_230;
    zext_ln71_1_fu_380_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_373_p3),7));
    zext_ln71_fu_369_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_362_p3),7));
    zext_ln73_fu_431_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln73_fu_426_p2),64));
    zext_ln74_fu_441_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln74_fu_436_p2),64));
    zext_ln75_fu_396_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln75_fu_390_p2),64));
    zext_ln76_fu_407_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln76_fu_401_p2),64));
end behav;
