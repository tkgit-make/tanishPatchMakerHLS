// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MPSQ_get_acceptanceCorners (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        wp_parameters_address0,
        wp_parameters_ce0,
        wp_parameters_we0,
        wp_parameters_d0,
        wp_parameters_q0,
        wp_parameters_address1,
        wp_parameters_ce1,
        wp_parameters_we1,
        wp_parameters_d1,
        wp_parameters_q1
);

parameter    ap_ST_fsm_state1 = 19'd1;
parameter    ap_ST_fsm_state2 = 19'd2;
parameter    ap_ST_fsm_pp0_stage0 = 19'd4;
parameter    ap_ST_fsm_pp0_stage1 = 19'd8;
parameter    ap_ST_fsm_state6 = 19'd16;
parameter    ap_ST_fsm_state7 = 19'd32;
parameter    ap_ST_fsm_state8 = 19'd64;
parameter    ap_ST_fsm_state9 = 19'd128;
parameter    ap_ST_fsm_state10 = 19'd256;
parameter    ap_ST_fsm_state11 = 19'd512;
parameter    ap_ST_fsm_state12 = 19'd1024;
parameter    ap_ST_fsm_state13 = 19'd2048;
parameter    ap_ST_fsm_state14 = 19'd4096;
parameter    ap_ST_fsm_state15 = 19'd8192;
parameter    ap_ST_fsm_state16 = 19'd16384;
parameter    ap_ST_fsm_state17 = 19'd32768;
parameter    ap_ST_fsm_state18 = 19'd65536;
parameter    ap_ST_fsm_state19 = 19'd131072;
parameter    ap_ST_fsm_state20 = 19'd262144;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] wp_parameters_address0;
output   wp_parameters_ce0;
output   wp_parameters_we0;
output  [31:0] wp_parameters_d0;
input  [31:0] wp_parameters_q0;
output  [6:0] wp_parameters_address1;
output   wp_parameters_ce1;
output   wp_parameters_we1;
output  [31:0] wp_parameters_d1;
input  [31:0] wp_parameters_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[6:0] wp_parameters_address0;
reg wp_parameters_ce0;
reg wp_parameters_we0;
reg[31:0] wp_parameters_d0;
reg[6:0] wp_parameters_address1;
reg wp_parameters_ce1;
reg wp_parameters_we1;
reg[31:0] wp_parameters_d1;

(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [2:0] i_reg_271;
reg   [31:0] d_corner_max_V_reg_282;
reg   [31:0] c_corner_max_V_reg_295;
reg   [31:0] b_corner_min_V_reg_308;
reg   [31:0] a_corner_min_V_reg_322;
wire   [6:0] wp_parameters_addr_reg_519;
wire   [6:0] wp_parameters_addr_6_reg_525;
wire   [6:0] wp_parameters_addr_7_reg_530;
wire    ap_CS_fsm_state2;
wire   [6:0] wp_parameters_addr_8_reg_536;
wire   [2:0] add_ln248_fu_349_p2;
reg   [2:0] add_ln248_reg_613;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln248_fu_355_p2;
reg   [0:0] icmp_ln248_reg_618;
wire  signed [6:0] sub_ln878_fu_385_p2;
reg  signed [6:0] sub_ln878_reg_622;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
wire   [31:0] a_corner_min_V_1_fu_433_p3;
reg   [31:0] a_corner_min_V_1_reg_648;
wire   [31:0] b_corner_min_V_2_fu_447_p3;
reg   [31:0] b_corner_min_V_2_reg_653;
wire   [31:0] c_corner_max_V_1_fu_461_p3;
reg    ap_enable_reg_pp0_iter1;
wire   [31:0] d_corner_max_V_2_fu_475_p3;
reg   [31:0] wp_parameters_load_reg_668;
wire    ap_CS_fsm_state7;
reg   [31:0] wp_parameters_load_1_reg_674;
wire   [0:0] icmp_ln874_fu_483_p2;
reg   [0:0] icmp_ln874_reg_679;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln886_4_fu_507_p2;
reg   [0:0] icmp_ln886_4_reg_692;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln878_2_fu_513_p2;
reg   [0:0] icmp_ln878_2_reg_696;
wire    ap_CS_fsm_state19;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
wire    ap_block_pp0_stage1_subdone;
reg   [2:0] ap_phi_mux_i_phi_fu_275_p4;
wire    ap_block_pp0_stage0;
reg   [31:0] arrayidx1756319_load_0_reg_335;
wire  signed [63:0] sext_ln878_fu_391_p1;
wire  signed [63:0] sext_ln878_1_fu_402_p1;
wire   [63:0] zext_ln886_fu_412_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln886_2_fu_422_p1;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire   [0:0] icmp_ln874_1_fu_489_p2;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire   [0:0] icmp_ln874_2_fu_495_p2;
wire    ap_CS_fsm_state16;
wire   [0:0] icmp_ln874_3_fu_501_p2;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state20;
wire   [5:0] tmp_fu_361_p3;
wire   [3:0] tmp_s_fu_373_p3;
wire   [6:0] zext_ln878_fu_369_p1;
wire   [6:0] zext_ln878_1_fu_381_p1;
wire   [6:0] or_ln878_fu_396_p2;
wire   [6:0] add_ln886_fu_407_p2;
wire   [6:0] add_ln886_2_fu_417_p2;
wire   [0:0] icmp_ln878_fu_427_p2;
wire   [0:0] icmp_ln878_1_fu_441_p2;
wire   [0:0] icmp_ln886_fu_455_p2;
wire   [0:0] icmp_ln886_3_fu_469_p2;
reg   [18:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 19'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln248_reg_618 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        a_corner_min_V_reg_322 <= a_corner_min_V_1_reg_648;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        a_corner_min_V_reg_322 <= 32'd4294967293;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln886_4_fu_507_p2 == 1'd0))) begin
        arrayidx1756319_load_0_reg_335 <= c_corner_max_V_reg_295;
    end else if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln886_4_reg_692 == 1'd1))) begin
        arrayidx1756319_load_0_reg_335 <= b_corner_min_V_reg_308;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln248_reg_618 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        b_corner_min_V_reg_308 <= b_corner_min_V_2_reg_653;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        b_corner_min_V_reg_308 <= 32'd4294967293;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln248_reg_618 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        c_corner_max_V_reg_295 <= c_corner_max_V_1_fu_461_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        c_corner_max_V_reg_295 <= 32'd2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln248_reg_618 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        d_corner_max_V_reg_282 <= d_corner_max_V_2_fu_475_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        d_corner_max_V_reg_282 <= 32'd2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln248_reg_618 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_271 <= add_ln248_reg_613;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_271 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln248_reg_618 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        a_corner_min_V_1_reg_648 <= a_corner_min_V_1_fu_433_p3;
        b_corner_min_V_2_reg_653 <= b_corner_min_V_2_fu_447_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln248_reg_613 <= add_ln248_fu_349_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln248_reg_618 <= icmp_ln248_fu_355_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        icmp_ln874_reg_679 <= icmp_ln874_fu_483_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        icmp_ln878_2_reg_696 <= icmp_ln878_2_fu_513_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        icmp_ln886_4_reg_692 <= icmp_ln886_4_fu_507_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln248_fu_355_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sub_ln878_reg_622[6 : 1] <= sub_ln878_fu_385_p2[6 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        wp_parameters_load_1_reg_674 <= wp_parameters_q0;
        wp_parameters_load_reg_668 <= wp_parameters_q1;
    end
end

always @ (*) begin
    if ((icmp_ln248_fu_355_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln248_reg_618 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_275_p4 = add_ln248_reg_613;
    end else begin
        ap_phi_mux_i_phi_fu_275_p4 = i_reg_271;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        wp_parameters_address0 = wp_parameters_addr_8_reg_536;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        wp_parameters_address0 = 64'd72;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        wp_parameters_address0 = 64'd20;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        wp_parameters_address0 = wp_parameters_addr_6_reg_525;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11))) begin
        wp_parameters_address0 = 64'd84;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        wp_parameters_address0 = 64'd60;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state9))) begin
        wp_parameters_address0 = 64'd67;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state8))) begin
        wp_parameters_address0 = 64'd61;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        wp_parameters_address0 = 64'd49;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        wp_parameters_address0 = 64'd5;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        wp_parameters_address0 = zext_ln886_2_fu_422_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        wp_parameters_address0 = sext_ln878_1_fu_402_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        wp_parameters_address0 = 64'd90;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        wp_parameters_address0 = 64'd78;
    end else begin
        wp_parameters_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        wp_parameters_address1 = 64'd49;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        wp_parameters_address1 = 64'd90;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        wp_parameters_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        wp_parameters_address1 = wp_parameters_addr_7_reg_530;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state17))) begin
        wp_parameters_address1 = wp_parameters_addr_reg_519;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        wp_parameters_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        wp_parameters_address1 = 64'd66;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        wp_parameters_address1 = 64'd54;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        wp_parameters_address1 = 64'd48;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state8))) begin
        wp_parameters_address1 = 64'd55;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        wp_parameters_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        wp_parameters_address1 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        wp_parameters_address1 = zext_ln886_fu_412_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        wp_parameters_address1 = sext_ln878_fu_391_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        wp_parameters_address1 = 64'd72;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        wp_parameters_address1 = 64'd84;
    end else begin
        wp_parameters_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        wp_parameters_ce0 = 1'b1;
    end else begin
        wp_parameters_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        wp_parameters_ce1 = 1'b1;
    end else begin
        wp_parameters_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        wp_parameters_d0 = arrayidx1756319_load_0_reg_335;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        wp_parameters_d0 = b_corner_min_V_reg_308;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        wp_parameters_d0 = wp_parameters_load_reg_668;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        wp_parameters_d0 = d_corner_max_V_reg_282;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        wp_parameters_d0 = c_corner_max_V_reg_295;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        wp_parameters_d0 = a_corner_min_V_reg_322;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state17))) begin
        wp_parameters_d0 = 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state19))) begin
        wp_parameters_d0 = 32'd1;
    end else begin
        wp_parameters_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        wp_parameters_d1 = arrayidx1756319_load_0_reg_335;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state17))) begin
        wp_parameters_d1 = 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        wp_parameters_d1 = wp_parameters_load_1_reg_674;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        wp_parameters_d1 = wp_parameters_load_reg_668;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state8))) begin
        wp_parameters_d1 = b_corner_min_V_reg_308;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state1))) begin
        wp_parameters_d1 = 32'd1;
    end else begin
        wp_parameters_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state20) & (icmp_ln878_2_reg_696 == 1'd1)) | ((icmp_ln874_3_fu_501_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17)) | ((icmp_ln874_2_fu_495_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15)) | ((icmp_ln874_1_fu_489_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13)) | ((1'b1 == ap_CS_fsm_state12) & (icmp_ln874_reg_679 == 1'd0)) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln874_reg_679 == 1'd0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state19) & (icmp_ln878_2_fu_513_p2 == 1'd1)))) begin
        wp_parameters_we0 = 1'b1;
    end else begin
        wp_parameters_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | ((1'b1 == ap_CS_fsm_state20) & (icmp_ln878_2_reg_696 == 1'd1)) | ((icmp_ln874_3_fu_501_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17)) | ((icmp_ln874_2_fu_495_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15)) | ((icmp_ln874_1_fu_489_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state19) & (icmp_ln886_4_reg_692 == 1'd1)))) begin
        wp_parameters_we1 = 1'b1;
    end else begin
        wp_parameters_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln248_fu_355_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((icmp_ln248_fu_355_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln886_4_fu_507_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_corner_min_V_1_fu_433_p3 = ((icmp_ln878_fu_427_p2[0:0] == 1'b1) ? wp_parameters_q1 : a_corner_min_V_reg_322);

assign add_ln248_fu_349_p2 = (ap_phi_mux_i_phi_fu_275_p4 + 3'd1);

assign add_ln886_2_fu_417_p2 = ($signed(sub_ln878_reg_622) + $signed(7'd3));

assign add_ln886_fu_407_p2 = ($signed(sub_ln878_reg_622) + $signed(7'd2));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign b_corner_min_V_2_fu_447_p3 = ((icmp_ln878_1_fu_441_p2[0:0] == 1'b1) ? wp_parameters_q0 : b_corner_min_V_reg_308);

assign c_corner_max_V_1_fu_461_p3 = ((icmp_ln886_fu_455_p2[0:0] == 1'b1) ? wp_parameters_q1 : c_corner_max_V_reg_295);

assign d_corner_max_V_2_fu_475_p3 = ((icmp_ln886_3_fu_469_p2[0:0] == 1'b1) ? wp_parameters_q0 : d_corner_max_V_reg_282);

assign icmp_ln248_fu_355_p2 = ((ap_phi_mux_i_phi_fu_275_p4 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln874_1_fu_489_p2 = ((b_corner_min_V_reg_308 == wp_parameters_q1) ? 1'b1 : 1'b0);

assign icmp_ln874_2_fu_495_p2 = ((c_corner_max_V_reg_295 == wp_parameters_q0) ? 1'b1 : 1'b0);

assign icmp_ln874_3_fu_501_p2 = ((d_corner_max_V_reg_282 == wp_parameters_q1) ? 1'b1 : 1'b0);

assign icmp_ln874_fu_483_p2 = ((a_corner_min_V_reg_322 == wp_parameters_q1) ? 1'b1 : 1'b0);

assign icmp_ln878_1_fu_441_p2 = (($signed(wp_parameters_q0) < $signed(b_corner_min_V_reg_308)) ? 1'b1 : 1'b0);

assign icmp_ln878_2_fu_513_p2 = (($signed(b_corner_min_V_reg_308) < $signed(d_corner_max_V_reg_282)) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_427_p2 = (($signed(wp_parameters_q1) < $signed(a_corner_min_V_reg_322)) ? 1'b1 : 1'b0);

assign icmp_ln886_3_fu_469_p2 = (($signed(wp_parameters_q0) > $signed(d_corner_max_V_reg_282)) ? 1'b1 : 1'b0);

assign icmp_ln886_4_fu_507_p2 = (($signed(c_corner_max_V_reg_295) > $signed(a_corner_min_V_reg_322)) ? 1'b1 : 1'b0);

assign icmp_ln886_fu_455_p2 = (($signed(wp_parameters_q1) > $signed(c_corner_max_V_reg_295)) ? 1'b1 : 1'b0);

assign or_ln878_fu_396_p2 = (sub_ln878_fu_385_p2 | 7'd1);

assign sext_ln878_1_fu_402_p1 = $signed(or_ln878_fu_396_p2);

assign sext_ln878_fu_391_p1 = sub_ln878_fu_385_p2;

assign sub_ln878_fu_385_p2 = (zext_ln878_fu_369_p1 - zext_ln878_1_fu_381_p1);

assign tmp_fu_361_p3 = {{ap_phi_mux_i_phi_fu_275_p4}, {3'd0}};

assign tmp_s_fu_373_p3 = {{ap_phi_mux_i_phi_fu_275_p4}, {1'd0}};

assign wp_parameters_addr_6_reg_525 = 64'd78;

assign wp_parameters_addr_7_reg_530 = 64'd72;

assign wp_parameters_addr_8_reg_536 = 64'd90;

assign wp_parameters_addr_reg_519 = 64'd84;

assign zext_ln878_1_fu_381_p1 = tmp_s_fu_373_p3;

assign zext_ln878_fu_369_p1 = tmp_fu_361_p3;

assign zext_ln886_2_fu_422_p1 = add_ln886_2_fu_417_p2;

assign zext_ln886_fu_412_p1 = add_ln886_fu_407_p2;

always @ (posedge ap_clk) begin
    sub_ln878_reg_622[0] <= 1'b0;
end

endmodule //MPSQ_get_acceptanceCorners
