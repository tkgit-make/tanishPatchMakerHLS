// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MPSQ_solveNextPatchPair (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        n_patches_i,
        n_patches_o,
        n_patches_o_ap_vld,
        GDn_points_address0,
        GDn_points_ce0,
        GDn_points_q0,
        tempArray_address0,
        tempArray_ce0,
        tempArray_we0,
        tempArray_d0,
        tempArray_address1,
        tempArray_ce1,
        tempArray_we1,
        tempArray_d1,
        ppl,
        p_read3,
        GDarrayDecoded_address0,
        GDarrayDecoded_ce0,
        GDarrayDecoded_q0,
        patches_superpoints_address0,
        patches_superpoints_ce0,
        patches_superpoints_we0,
        patches_superpoints_d0,
        patches_superpoints_q0,
        patches_parameters_address0,
        patches_parameters_ce0,
        patches_parameters_we0,
        patches_parameters_d0,
        patches_parameters_q0,
        patches_parameters_address1,
        patches_parameters_ce1,
        patches_parameters_q1,
        grp_straightLineProjectorFromLayerIJtoK_fu_97_p_din1,
        grp_straightLineProjectorFromLayerIJtoK_fu_97_p_din2,
        grp_straightLineProjectorFromLayerIJtoK_fu_97_p_din3,
        grp_straightLineProjectorFromLayerIJtoK_fu_97_p_din4,
        grp_straightLineProjectorFromLayerIJtoK_fu_97_p_din5,
        grp_straightLineProjectorFromLayerIJtoK_fu_97_p_dout0,
        grp_straightLineProjectorFromLayerIJtoK_fu_97_p_ce,
        grp_straightLineProjectorFromLayerIJtoK_fu_97_p_start,
        grp_straightLineProjectorFromLayerIJtoK_fu_97_p_ready,
        grp_straightLineProjectorFromLayerIJtoK_fu_97_p_done,
        grp_straightLineProjectorFromLayerIJtoK_fu_97_p_idle
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_state3 = 7'd4;
parameter    ap_ST_fsm_state4 = 7'd8;
parameter    ap_ST_fsm_state5 = 7'd16;
parameter    ap_ST_fsm_state6 = 7'd32;
parameter    ap_ST_fsm_state7 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] n_patches_i;
output  [7:0] n_patches_o;
output   n_patches_o_ap_vld;
output  [2:0] GDn_points_address0;
output   GDn_points_ce0;
input  [31:0] GDn_points_q0;
output  [7:0] tempArray_address0;
output   tempArray_ce0;
output   tempArray_we0;
output  [63:0] tempArray_d0;
output  [7:0] tempArray_address1;
output   tempArray_ce1;
output   tempArray_we1;
output  [63:0] tempArray_d1;
input  [31:0] ppl;
input  [31:0] p_read3;
output  [11:0] GDarrayDecoded_address0;
output   GDarrayDecoded_ce0;
input  [31:0] GDarrayDecoded_q0;
output  [11:0] patches_superpoints_address0;
output   patches_superpoints_ce0;
output   patches_superpoints_we0;
output  [31:0] patches_superpoints_d0;
input  [31:0] patches_superpoints_q0;
output  [11:0] patches_parameters_address0;
output   patches_parameters_ce0;
output   patches_parameters_we0;
output  [31:0] patches_parameters_d0;
input  [31:0] patches_parameters_q0;
output  [11:0] patches_parameters_address1;
output   patches_parameters_ce1;
input  [31:0] patches_parameters_q1;
output  [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_97_p_din1;
output  [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_97_p_din2;
output  [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_97_p_din3;
output  [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_97_p_din4;
output  [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_97_p_din5;
input  [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_97_p_dout0;
output   grp_straightLineProjectorFromLayerIJtoK_fu_97_p_ce;
output   grp_straightLineProjectorFromLayerIJtoK_fu_97_p_start;
input   grp_straightLineProjectorFromLayerIJtoK_fu_97_p_ready;
input   grp_straightLineProjectorFromLayerIJtoK_fu_97_p_done;
input   grp_straightLineProjectorFromLayerIJtoK_fu_97_p_idle;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] n_patches_o;
reg n_patches_o_ap_vld;
reg[7:0] tempArray_address0;
reg tempArray_ce0;
reg tempArray_we0;
reg[63:0] tempArray_d0;
reg[7:0] tempArray_address1;
reg tempArray_ce1;
reg tempArray_we1;
reg[63:0] tempArray_d1;
reg[11:0] patches_parameters_address0;
reg patches_parameters_ce0;
reg patches_parameters_we0;
reg[11:0] patches_parameters_address1;
reg patches_parameters_ce1;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [11:0] sub_ln787_fu_318_p2;
reg   [11:0] sub_ln787_reg_498;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln886_2_fu_377_p2;
reg   [0:0] icmp_ln886_2_reg_526;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln886_fu_403_p2;
reg   [0:0] icmp_ln886_reg_541;
wire   [0:0] icmp_ln886_1_fu_408_p2;
reg   [0:0] icmp_ln886_1_reg_546;
wire   [0:0] icmp_ln841_fu_418_p2;
reg   [0:0] icmp_ln841_reg_551;
wire   [0:0] and_ln886_fu_430_p2;
reg   [0:0] and_ln886_reg_556;
wire    ap_CS_fsm_state6;
wire   [0:0] and_ln841_1_fu_468_p2;
reg   [0:0] and_ln841_1_reg_561;
wire    grp_makePatch_alignedToLine_fu_250_ap_start;
wire    grp_makePatch_alignedToLine_fu_250_ap_done;
wire    grp_makePatch_alignedToLine_fu_250_ap_idle;
wire    grp_makePatch_alignedToLine_fu_250_ap_ready;
wire   [7:0] grp_makePatch_alignedToLine_fu_250_n_patches_o;
wire    grp_makePatch_alignedToLine_fu_250_n_patches_o_ap_vld;
wire   [2:0] grp_makePatch_alignedToLine_fu_250_GDn_points_address0;
wire    grp_makePatch_alignedToLine_fu_250_GDn_points_ce0;
wire   [11:0] grp_makePatch_alignedToLine_fu_250_GDarrayDecoded_address0;
wire    grp_makePatch_alignedToLine_fu_250_GDarrayDecoded_ce0;
wire   [11:0] grp_makePatch_alignedToLine_fu_250_patches_superpoints_address0;
wire    grp_makePatch_alignedToLine_fu_250_patches_superpoints_ce0;
wire    grp_makePatch_alignedToLine_fu_250_patches_superpoints_we0;
wire   [31:0] grp_makePatch_alignedToLine_fu_250_patches_superpoints_d0;
wire   [11:0] grp_makePatch_alignedToLine_fu_250_patches_parameters_address0;
wire    grp_makePatch_alignedToLine_fu_250_patches_parameters_ce0;
wire    grp_makePatch_alignedToLine_fu_250_patches_parameters_we0;
wire   [31:0] grp_makePatch_alignedToLine_fu_250_patches_parameters_d0;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_272_ap_start;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_272_ap_done;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_272_ap_idle;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_272_ap_ready;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_272_ap_ce;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_272_z_i;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_272_z_j;
wire   [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_272_i;
wire   [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_272_j;
wire   [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_272_k;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_272_ap_return;
reg    grp_makePatch_alignedToLine_fu_250_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_straightLineProjectorFromLayerIJtoK_fu_272_ap_start_reg;
reg   [6:0] ap_NS_fsm;
wire    ap_NS_fsm_state4;
wire   [63:0] zext_ln787_2_fu_341_p1;
wire   [63:0] zext_ln787_1_fu_330_p1;
wire   [63:0] zext_ln886_fu_357_p1;
wire   [63:0] zext_ln886_1_fu_367_p1;
wire   [63:0] zext_ln534_fu_388_p1;
wire   [63:0] zext_ln534_1_fu_398_p1;
wire    ap_CS_fsm_state7;
wire  signed [63:0] sext_ln534_1_fu_372_p1;
wire  signed [63:0] sext_ln534_fu_413_p1;
wire   [63:0] zext_ln840_fu_452_p1;
wire   [63:0] zext_ln842_fu_473_p1;
wire   [63:0] zext_ln841_fu_478_p1;
wire   [63:0] zext_ln843_fu_482_p1;
wire   [4:0] trunc_ln750_fu_288_p1;
wire   [4:0] lastPatchIndex_fu_292_p2;
wire   [7:0] tmp_4_fu_306_p3;
wire   [11:0] tmp_fu_298_p3;
wire   [11:0] zext_ln787_fu_314_p1;
wire   [11:0] add_ln787_fu_324_p2;
wire   [11:0] add_ln787_1_fu_335_p2;
wire   [11:0] add_ln886_fu_346_p2;
wire   [11:0] or_ln886_fu_351_p2;
wire   [11:0] add_ln886_1_fu_362_p2;
wire  signed [31:0] sext_ln534_1_fu_372_p0;
wire  signed [31:0] icmp_ln886_2_fu_377_p0;
wire   [11:0] add_ln534_fu_383_p2;
wire   [11:0] add_ln534_1_fu_393_p2;
wire  signed [31:0] sext_ln534_fu_413_p0;
wire  signed [31:0] icmp_ln841_fu_418_p0;
wire   [0:0] squarePatch_alternate2_fu_424_p2;
wire   [0:0] icmp_ln827_fu_440_p2;
wire   [0:0] notChoppedPatch_fu_446_p2;
wire   [0:0] xor_ln841_fu_457_p2;
wire   [0:0] and_ln841_fu_463_p2;
wire   [0:0] and_ln886_1_fu_435_p2;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 grp_makePatch_alignedToLine_fu_250_ap_start_reg = 1'b0;
#0 grp_straightLineProjectorFromLayerIJtoK_fu_272_ap_start_reg = 1'b0;
end

MPSQ_makePatch_alignedToLine grp_makePatch_alignedToLine_fu_250(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_makePatch_alignedToLine_fu_250_ap_start),
    .ap_done(grp_makePatch_alignedToLine_fu_250_ap_done),
    .ap_idle(grp_makePatch_alignedToLine_fu_250_ap_idle),
    .ap_ready(grp_makePatch_alignedToLine_fu_250_ap_ready),
    .n_patches_i(n_patches_i),
    .n_patches_o(grp_makePatch_alignedToLine_fu_250_n_patches_o),
    .n_patches_o_ap_vld(grp_makePatch_alignedToLine_fu_250_n_patches_o_ap_vld),
    .GDn_points_address0(grp_makePatch_alignedToLine_fu_250_GDn_points_address0),
    .GDn_points_ce0(grp_makePatch_alignedToLine_fu_250_GDn_points_ce0),
    .GDn_points_q0(GDn_points_q0),
    .z_top(p_read3),
    .p_read(ppl),
    .GDarrayDecoded_address0(grp_makePatch_alignedToLine_fu_250_GDarrayDecoded_address0),
    .GDarrayDecoded_ce0(grp_makePatch_alignedToLine_fu_250_GDarrayDecoded_ce0),
    .GDarrayDecoded_q0(GDarrayDecoded_q0),
    .patches_superpoints_address0(grp_makePatch_alignedToLine_fu_250_patches_superpoints_address0),
    .patches_superpoints_ce0(grp_makePatch_alignedToLine_fu_250_patches_superpoints_ce0),
    .patches_superpoints_we0(grp_makePatch_alignedToLine_fu_250_patches_superpoints_we0),
    .patches_superpoints_d0(grp_makePatch_alignedToLine_fu_250_patches_superpoints_d0),
    .patches_superpoints_q0(patches_superpoints_q0),
    .patches_parameters_address0(grp_makePatch_alignedToLine_fu_250_patches_parameters_address0),
    .patches_parameters_ce0(grp_makePatch_alignedToLine_fu_250_patches_parameters_ce0),
    .patches_parameters_we0(grp_makePatch_alignedToLine_fu_250_patches_parameters_we0),
    .patches_parameters_d0(grp_makePatch_alignedToLine_fu_250_patches_parameters_d0),
    .patches_parameters_q0(patches_parameters_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_makePatch_alignedToLine_fu_250_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_makePatch_alignedToLine_fu_250_ap_start_reg <= 1'b1;
        end else if ((grp_makePatch_alignedToLine_fu_250_ap_ready == 1'b1)) begin
            grp_makePatch_alignedToLine_fu_250_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_272_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) & (1'b1 == ap_NS_fsm_state4))) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_272_ap_start_reg <= 1'b1;
        end else if ((grp_straightLineProjectorFromLayerIJtoK_fu_272_ap_ready == 1'b1)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_272_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        and_ln841_1_reg_561 <= and_ln841_1_fu_468_p2;
        and_ln886_reg_556 <= and_ln886_fu_430_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        icmp_ln841_reg_551 <= icmp_ln841_fu_418_p2;
        icmp_ln886_1_reg_546 <= icmp_ln886_1_fu_408_p2;
        icmp_ln886_reg_541 <= icmp_ln886_fu_403_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        icmp_ln886_2_reg_526 <= icmp_ln886_2_fu_377_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        sub_ln787_reg_498[11 : 3] <= sub_ln787_fu_318_p2[11 : 3];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_makePatch_alignedToLine_fu_250_n_patches_o_ap_vld == 1'b1))) begin
        n_patches_o = grp_makePatch_alignedToLine_fu_250_n_patches_o;
    end else begin
        n_patches_o = n_patches_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        n_patches_o_ap_vld = grp_makePatch_alignedToLine_fu_250_n_patches_o_ap_vld;
    end else begin
        n_patches_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        patches_parameters_address0 = zext_ln534_1_fu_398_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        patches_parameters_address0 = zext_ln886_1_fu_367_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        patches_parameters_address0 = zext_ln787_1_fu_330_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        patches_parameters_address0 = grp_makePatch_alignedToLine_fu_250_patches_parameters_address0;
    end else begin
        patches_parameters_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        patches_parameters_address1 = zext_ln534_fu_388_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        patches_parameters_address1 = zext_ln886_fu_357_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        patches_parameters_address1 = zext_ln787_2_fu_341_p1;
    end else begin
        patches_parameters_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5))) begin
        patches_parameters_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        patches_parameters_ce0 = grp_makePatch_alignedToLine_fu_250_patches_parameters_ce0;
    end else begin
        patches_parameters_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5))) begin
        patches_parameters_ce1 = 1'b1;
    end else begin
        patches_parameters_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        patches_parameters_we0 = grp_makePatch_alignedToLine_fu_250_patches_parameters_we0;
    end else begin
        patches_parameters_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tempArray_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tempArray_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tempArray_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        tempArray_address0 = 64'd3;
    end else begin
        tempArray_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tempArray_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tempArray_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tempArray_address1 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        tempArray_address1 = 64'd1;
    end else begin
        tempArray_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        tempArray_ce0 = 1'b1;
    end else begin
        tempArray_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        tempArray_ce1 = 1'b1;
    end else begin
        tempArray_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tempArray_d0 = zext_ln843_fu_482_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tempArray_d0 = zext_ln842_fu_473_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tempArray_d0 = sext_ln534_1_fu_372_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        tempArray_d0 = 64'd18446744073659551516;
    end else begin
        tempArray_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tempArray_d1 = zext_ln841_fu_478_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tempArray_d1 = zext_ln840_fu_452_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tempArray_d1 = sext_ln534_fu_413_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        tempArray_d1 = 64'd15000000;
    end else begin
        tempArray_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        tempArray_we0 = 1'b1;
    end else begin
        tempArray_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        tempArray_we1 = 1'b1;
    end else begin
        tempArray_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_makePatch_alignedToLine_fu_250_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign GDarrayDecoded_address0 = grp_makePatch_alignedToLine_fu_250_GDarrayDecoded_address0;

assign GDarrayDecoded_ce0 = grp_makePatch_alignedToLine_fu_250_GDarrayDecoded_ce0;

assign GDn_points_address0 = grp_makePatch_alignedToLine_fu_250_GDn_points_address0;

assign GDn_points_ce0 = grp_makePatch_alignedToLine_fu_250_GDn_points_ce0;

assign add_ln534_1_fu_393_p2 = (sub_ln787_reg_498 + 12'd72);

assign add_ln534_fu_383_p2 = (sub_ln787_reg_498 + 12'd84);

assign add_ln787_1_fu_335_p2 = (sub_ln787_fu_318_p2 + 12'd61);

assign add_ln787_fu_324_p2 = (sub_ln787_fu_318_p2 + 12'd60);

assign add_ln886_1_fu_362_p2 = (sub_ln787_reg_498 + 12'd55);

assign add_ln886_fu_346_p2 = (sub_ln787_reg_498 + 12'd48);

assign and_ln841_1_fu_468_p2 = (icmp_ln886_2_reg_526 & and_ln841_fu_463_p2);

assign and_ln841_fu_463_p2 = (xor_ln841_fu_457_p2 & icmp_ln841_reg_551);

assign and_ln886_1_fu_435_p2 = (icmp_ln886_1_reg_546 & and_ln886_fu_430_p2);

assign and_ln886_fu_430_p2 = (squarePatch_alternate2_fu_424_p2 & icmp_ln886_reg_541);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_NS_fsm_state4 = ap_NS_fsm[32'd3];

assign grp_makePatch_alignedToLine_fu_250_ap_start = grp_makePatch_alignedToLine_fu_250_ap_start_reg;

assign grp_straightLineProjectorFromLayerIJtoK_fu_272_ap_ce = 1'b1;

assign grp_straightLineProjectorFromLayerIJtoK_fu_272_ap_done = grp_straightLineProjectorFromLayerIJtoK_fu_97_p_done;

assign grp_straightLineProjectorFromLayerIJtoK_fu_272_ap_idle = grp_straightLineProjectorFromLayerIJtoK_fu_97_p_idle;

assign grp_straightLineProjectorFromLayerIJtoK_fu_272_ap_ready = grp_straightLineProjectorFromLayerIJtoK_fu_97_p_ready;

assign grp_straightLineProjectorFromLayerIJtoK_fu_272_ap_return = grp_straightLineProjectorFromLayerIJtoK_fu_97_p_dout0;

assign grp_straightLineProjectorFromLayerIJtoK_fu_272_ap_start = grp_straightLineProjectorFromLayerIJtoK_fu_272_ap_start_reg;

assign grp_straightLineProjectorFromLayerIJtoK_fu_272_i = 3'd5;

assign grp_straightLineProjectorFromLayerIJtoK_fu_272_j = 3'd1;

assign grp_straightLineProjectorFromLayerIJtoK_fu_272_k = 3'd0;

assign grp_straightLineProjectorFromLayerIJtoK_fu_272_z_i = patches_parameters_q1;

assign grp_straightLineProjectorFromLayerIJtoK_fu_272_z_j = patches_parameters_q0;

assign grp_straightLineProjectorFromLayerIJtoK_fu_97_p_ce = 1'b1;

assign grp_straightLineProjectorFromLayerIJtoK_fu_97_p_din1 = patches_parameters_q1;

assign grp_straightLineProjectorFromLayerIJtoK_fu_97_p_din2 = patches_parameters_q0;

assign grp_straightLineProjectorFromLayerIJtoK_fu_97_p_din3 = 3'd5;

assign grp_straightLineProjectorFromLayerIJtoK_fu_97_p_din4 = 3'd1;

assign grp_straightLineProjectorFromLayerIJtoK_fu_97_p_din5 = 3'd0;

assign grp_straightLineProjectorFromLayerIJtoK_fu_97_p_start = grp_straightLineProjectorFromLayerIJtoK_fu_272_ap_start_reg;

assign icmp_ln827_fu_440_p2 = ((patches_parameters_q1 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln841_fu_418_p0 = grp_straightLineProjectorFromLayerIJtoK_fu_97_p_dout0;

assign icmp_ln841_fu_418_p2 = (($signed(icmp_ln841_fu_418_p0) < $signed(32'd15000000)) ? 1'b1 : 1'b0);

assign icmp_ln886_1_fu_408_p2 = (($signed(patches_parameters_q0) > $signed(p_read3)) ? 1'b1 : 1'b0);

assign icmp_ln886_2_fu_377_p0 = patches_parameters_q1;

assign icmp_ln886_2_fu_377_p2 = (($signed(icmp_ln886_2_fu_377_p0) > $signed(32'd4244967196)) ? 1'b1 : 1'b0);

assign icmp_ln886_fu_403_p2 = (($signed(patches_parameters_q1) > $signed(p_read3)) ? 1'b1 : 1'b0);

assign lastPatchIndex_fu_292_p2 = ($signed(trunc_ln750_fu_288_p1) + $signed(5'd31));

assign notChoppedPatch_fu_446_p2 = (icmp_ln827_fu_440_p2 | and_ln886_fu_430_p2);

assign or_ln886_fu_351_p2 = (12'd1 | add_ln886_fu_346_p2);

assign patches_parameters_d0 = grp_makePatch_alignedToLine_fu_250_patches_parameters_d0;

assign patches_superpoints_address0 = grp_makePatch_alignedToLine_fu_250_patches_superpoints_address0;

assign patches_superpoints_ce0 = grp_makePatch_alignedToLine_fu_250_patches_superpoints_ce0;

assign patches_superpoints_d0 = grp_makePatch_alignedToLine_fu_250_patches_superpoints_d0;

assign patches_superpoints_we0 = grp_makePatch_alignedToLine_fu_250_patches_superpoints_we0;

assign sext_ln534_1_fu_372_p0 = patches_parameters_q1;

assign sext_ln534_1_fu_372_p1 = sext_ln534_1_fu_372_p0;

assign sext_ln534_fu_413_p0 = grp_straightLineProjectorFromLayerIJtoK_fu_97_p_dout0;

assign sext_ln534_fu_413_p1 = sext_ln534_fu_413_p0;

assign squarePatch_alternate2_fu_424_p2 = ((patches_parameters_q0 != 32'd0) ? 1'b1 : 1'b0);

assign sub_ln787_fu_318_p2 = (tmp_fu_298_p3 - zext_ln787_fu_314_p1);

assign tmp_4_fu_306_p3 = {{lastPatchIndex_fu_292_p2}, {3'd0}};

assign tmp_fu_298_p3 = {{lastPatchIndex_fu_292_p2}, {7'd0}};

assign trunc_ln750_fu_288_p1 = n_patches_i[4:0];

assign xor_ln841_fu_457_p2 = (notChoppedPatch_fu_446_p2 ^ 1'd1);

assign zext_ln534_1_fu_398_p1 = add_ln534_1_fu_393_p2;

assign zext_ln534_fu_388_p1 = add_ln534_fu_383_p2;

assign zext_ln787_1_fu_330_p1 = add_ln787_fu_324_p2;

assign zext_ln787_2_fu_341_p1 = add_ln787_1_fu_335_p2;

assign zext_ln787_fu_314_p1 = tmp_4_fu_306_p3;

assign zext_ln840_fu_452_p1 = notChoppedPatch_fu_446_p2;

assign zext_ln841_fu_478_p1 = and_ln841_1_reg_561;

assign zext_ln842_fu_473_p1 = and_ln886_1_fu_435_p2;

assign zext_ln843_fu_482_p1 = and_ln886_reg_556;

assign zext_ln886_1_fu_367_p1 = add_ln886_1_fu_362_p2;

assign zext_ln886_fu_357_p1 = or_ln886_fu_351_p2;

always @ (posedge ap_clk) begin
    sub_ln787_reg_498[2:0] <= 3'b000;
end

endmodule //MPSQ_solveNextPatchPair
