// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MPSQ_makeThirdPatch (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        n_patches_i,
        n_patches_o,
        n_patches_o_ap_vld,
        GDn_points_address0,
        GDn_points_ce0,
        GDn_points_q0,
        lastPatchIndex,
        z_top_min,
        z_top_max,
        complementary_apexZ0,
        apexZ0,
        ppl,
        GDarrayDecoded_address0,
        GDarrayDecoded_ce0,
        GDarrayDecoded_q0,
        patches_superpoints_address0,
        patches_superpoints_ce0,
        patches_superpoints_we0,
        patches_superpoints_d0,
        patches_superpoints_q0,
        patches_superpoints_address1,
        patches_superpoints_ce1,
        patches_superpoints_q1,
        patches_parameters_address0,
        patches_parameters_ce0,
        patches_parameters_we0,
        patches_parameters_d0,
        patches_parameters_q0,
        patches_parameters_address1,
        patches_parameters_ce1,
        patches_parameters_we1,
        patches_parameters_d1,
        patches_parameters_q1,
        grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din1,
        grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din2,
        grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din3,
        grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din4,
        grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din5,
        grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_dout0,
        grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_ce,
        grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din1,
        grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din2,
        grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din3,
        grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din4,
        grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din5,
        grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_dout0,
        grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_ce
);

parameter    ap_ST_fsm_state1 = 354'd1;
parameter    ap_ST_fsm_state2 = 354'd2;
parameter    ap_ST_fsm_state3 = 354'd4;
parameter    ap_ST_fsm_state4 = 354'd8;
parameter    ap_ST_fsm_state5 = 354'd16;
parameter    ap_ST_fsm_state6 = 354'd32;
parameter    ap_ST_fsm_state7 = 354'd64;
parameter    ap_ST_fsm_state8 = 354'd128;
parameter    ap_ST_fsm_state9 = 354'd256;
parameter    ap_ST_fsm_state10 = 354'd512;
parameter    ap_ST_fsm_state11 = 354'd1024;
parameter    ap_ST_fsm_state12 = 354'd2048;
parameter    ap_ST_fsm_state13 = 354'd4096;
parameter    ap_ST_fsm_state14 = 354'd8192;
parameter    ap_ST_fsm_state15 = 354'd16384;
parameter    ap_ST_fsm_state16 = 354'd32768;
parameter    ap_ST_fsm_state17 = 354'd65536;
parameter    ap_ST_fsm_state18 = 354'd131072;
parameter    ap_ST_fsm_state19 = 354'd262144;
parameter    ap_ST_fsm_state20 = 354'd524288;
parameter    ap_ST_fsm_state21 = 354'd1048576;
parameter    ap_ST_fsm_state22 = 354'd2097152;
parameter    ap_ST_fsm_state23 = 354'd4194304;
parameter    ap_ST_fsm_state24 = 354'd8388608;
parameter    ap_ST_fsm_state25 = 354'd16777216;
parameter    ap_ST_fsm_state26 = 354'd33554432;
parameter    ap_ST_fsm_state27 = 354'd67108864;
parameter    ap_ST_fsm_state28 = 354'd134217728;
parameter    ap_ST_fsm_state29 = 354'd268435456;
parameter    ap_ST_fsm_state30 = 354'd536870912;
parameter    ap_ST_fsm_state31 = 354'd1073741824;
parameter    ap_ST_fsm_state32 = 354'd2147483648;
parameter    ap_ST_fsm_state33 = 354'd4294967296;
parameter    ap_ST_fsm_state34 = 354'd8589934592;
parameter    ap_ST_fsm_state35 = 354'd17179869184;
parameter    ap_ST_fsm_state36 = 354'd34359738368;
parameter    ap_ST_fsm_state37 = 354'd68719476736;
parameter    ap_ST_fsm_state38 = 354'd137438953472;
parameter    ap_ST_fsm_state39 = 354'd274877906944;
parameter    ap_ST_fsm_state40 = 354'd549755813888;
parameter    ap_ST_fsm_state41 = 354'd1099511627776;
parameter    ap_ST_fsm_state42 = 354'd2199023255552;
parameter    ap_ST_fsm_state43 = 354'd4398046511104;
parameter    ap_ST_fsm_state44 = 354'd8796093022208;
parameter    ap_ST_fsm_state45 = 354'd17592186044416;
parameter    ap_ST_fsm_state46 = 354'd35184372088832;
parameter    ap_ST_fsm_state47 = 354'd70368744177664;
parameter    ap_ST_fsm_state48 = 354'd140737488355328;
parameter    ap_ST_fsm_state49 = 354'd281474976710656;
parameter    ap_ST_fsm_state50 = 354'd562949953421312;
parameter    ap_ST_fsm_state51 = 354'd1125899906842624;
parameter    ap_ST_fsm_state52 = 354'd2251799813685248;
parameter    ap_ST_fsm_state53 = 354'd4503599627370496;
parameter    ap_ST_fsm_state54 = 354'd9007199254740992;
parameter    ap_ST_fsm_state55 = 354'd18014398509481984;
parameter    ap_ST_fsm_state56 = 354'd36028797018963968;
parameter    ap_ST_fsm_state57 = 354'd72057594037927936;
parameter    ap_ST_fsm_state58 = 354'd144115188075855872;
parameter    ap_ST_fsm_state59 = 354'd288230376151711744;
parameter    ap_ST_fsm_state60 = 354'd576460752303423488;
parameter    ap_ST_fsm_state61 = 354'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 354'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 354'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 354'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 354'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 354'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 354'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 354'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 354'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 354'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 354'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 354'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 354'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 354'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 354'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 354'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 354'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 354'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 354'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 354'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 354'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 354'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 354'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 354'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 354'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 354'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 354'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 354'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 354'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 354'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 354'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 354'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 354'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 354'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 354'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 354'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 354'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 354'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 354'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 354'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 354'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 354'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 354'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 354'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 354'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 354'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 354'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 354'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 354'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 354'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 354'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 354'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 354'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 354'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 354'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 354'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 354'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 354'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 354'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 354'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 354'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 354'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 354'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 354'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 354'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 354'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 354'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 354'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 354'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 354'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 354'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 354'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 354'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 354'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 354'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 354'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 354'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 354'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 354'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 354'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 354'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 354'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 354'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 354'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 354'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 354'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 354'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 354'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 354'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 354'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state151 = 354'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state152 = 354'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state153 = 354'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state154 = 354'd11417981541647679048466287755595961091061972992;
parameter    ap_ST_fsm_state155 = 354'd22835963083295358096932575511191922182123945984;
parameter    ap_ST_fsm_state156 = 354'd45671926166590716193865151022383844364247891968;
parameter    ap_ST_fsm_state157 = 354'd91343852333181432387730302044767688728495783936;
parameter    ap_ST_fsm_state158 = 354'd182687704666362864775460604089535377456991567872;
parameter    ap_ST_fsm_state159 = 354'd365375409332725729550921208179070754913983135744;
parameter    ap_ST_fsm_state160 = 354'd730750818665451459101842416358141509827966271488;
parameter    ap_ST_fsm_state161 = 354'd1461501637330902918203684832716283019655932542976;
parameter    ap_ST_fsm_state162 = 354'd2923003274661805836407369665432566039311865085952;
parameter    ap_ST_fsm_state163 = 354'd5846006549323611672814739330865132078623730171904;
parameter    ap_ST_fsm_state164 = 354'd11692013098647223345629478661730264157247460343808;
parameter    ap_ST_fsm_state165 = 354'd23384026197294446691258957323460528314494920687616;
parameter    ap_ST_fsm_state166 = 354'd46768052394588893382517914646921056628989841375232;
parameter    ap_ST_fsm_state167 = 354'd93536104789177786765035829293842113257979682750464;
parameter    ap_ST_fsm_state168 = 354'd187072209578355573530071658587684226515959365500928;
parameter    ap_ST_fsm_state169 = 354'd374144419156711147060143317175368453031918731001856;
parameter    ap_ST_fsm_state170 = 354'd748288838313422294120286634350736906063837462003712;
parameter    ap_ST_fsm_state171 = 354'd1496577676626844588240573268701473812127674924007424;
parameter    ap_ST_fsm_state172 = 354'd2993155353253689176481146537402947624255349848014848;
parameter    ap_ST_fsm_state173 = 354'd5986310706507378352962293074805895248510699696029696;
parameter    ap_ST_fsm_state174 = 354'd11972621413014756705924586149611790497021399392059392;
parameter    ap_ST_fsm_state175 = 354'd23945242826029513411849172299223580994042798784118784;
parameter    ap_ST_fsm_state176 = 354'd47890485652059026823698344598447161988085597568237568;
parameter    ap_ST_fsm_state177 = 354'd95780971304118053647396689196894323976171195136475136;
parameter    ap_ST_fsm_state178 = 354'd191561942608236107294793378393788647952342390272950272;
parameter    ap_ST_fsm_state179 = 354'd383123885216472214589586756787577295904684780545900544;
parameter    ap_ST_fsm_state180 = 354'd766247770432944429179173513575154591809369561091801088;
parameter    ap_ST_fsm_state181 = 354'd1532495540865888858358347027150309183618739122183602176;
parameter    ap_ST_fsm_state182 = 354'd3064991081731777716716694054300618367237478244367204352;
parameter    ap_ST_fsm_state183 = 354'd6129982163463555433433388108601236734474956488734408704;
parameter    ap_ST_fsm_state184 = 354'd12259964326927110866866776217202473468949912977468817408;
parameter    ap_ST_fsm_state185 = 354'd24519928653854221733733552434404946937899825954937634816;
parameter    ap_ST_fsm_state186 = 354'd49039857307708443467467104868809893875799651909875269632;
parameter    ap_ST_fsm_state187 = 354'd98079714615416886934934209737619787751599303819750539264;
parameter    ap_ST_fsm_state188 = 354'd196159429230833773869868419475239575503198607639501078528;
parameter    ap_ST_fsm_state189 = 354'd392318858461667547739736838950479151006397215279002157056;
parameter    ap_ST_fsm_state190 = 354'd784637716923335095479473677900958302012794430558004314112;
parameter    ap_ST_fsm_state191 = 354'd1569275433846670190958947355801916604025588861116008628224;
parameter    ap_ST_fsm_state192 = 354'd3138550867693340381917894711603833208051177722232017256448;
parameter    ap_ST_fsm_state193 = 354'd6277101735386680763835789423207666416102355444464034512896;
parameter    ap_ST_fsm_state194 = 354'd12554203470773361527671578846415332832204710888928069025792;
parameter    ap_ST_fsm_state195 = 354'd25108406941546723055343157692830665664409421777856138051584;
parameter    ap_ST_fsm_state196 = 354'd50216813883093446110686315385661331328818843555712276103168;
parameter    ap_ST_fsm_state197 = 354'd100433627766186892221372630771322662657637687111424552206336;
parameter    ap_ST_fsm_state198 = 354'd200867255532373784442745261542645325315275374222849104412672;
parameter    ap_ST_fsm_state199 = 354'd401734511064747568885490523085290650630550748445698208825344;
parameter    ap_ST_fsm_state200 = 354'd803469022129495137770981046170581301261101496891396417650688;
parameter    ap_ST_fsm_state201 = 354'd1606938044258990275541962092341162602522202993782792835301376;
parameter    ap_ST_fsm_state202 = 354'd3213876088517980551083924184682325205044405987565585670602752;
parameter    ap_ST_fsm_state203 = 354'd6427752177035961102167848369364650410088811975131171341205504;
parameter    ap_ST_fsm_state204 = 354'd12855504354071922204335696738729300820177623950262342682411008;
parameter    ap_ST_fsm_state205 = 354'd25711008708143844408671393477458601640355247900524685364822016;
parameter    ap_ST_fsm_state206 = 354'd51422017416287688817342786954917203280710495801049370729644032;
parameter    ap_ST_fsm_state207 = 354'd102844034832575377634685573909834406561420991602098741459288064;
parameter    ap_ST_fsm_state208 = 354'd205688069665150755269371147819668813122841983204197482918576128;
parameter    ap_ST_fsm_state209 = 354'd411376139330301510538742295639337626245683966408394965837152256;
parameter    ap_ST_fsm_state210 = 354'd822752278660603021077484591278675252491367932816789931674304512;
parameter    ap_ST_fsm_state211 = 354'd1645504557321206042154969182557350504982735865633579863348609024;
parameter    ap_ST_fsm_state212 = 354'd3291009114642412084309938365114701009965471731267159726697218048;
parameter    ap_ST_fsm_state213 = 354'd6582018229284824168619876730229402019930943462534319453394436096;
parameter    ap_ST_fsm_state214 = 354'd13164036458569648337239753460458804039861886925068638906788872192;
parameter    ap_ST_fsm_state215 = 354'd26328072917139296674479506920917608079723773850137277813577744384;
parameter    ap_ST_fsm_state216 = 354'd52656145834278593348959013841835216159447547700274555627155488768;
parameter    ap_ST_fsm_state217 = 354'd105312291668557186697918027683670432318895095400549111254310977536;
parameter    ap_ST_fsm_state218 = 354'd210624583337114373395836055367340864637790190801098222508621955072;
parameter    ap_ST_fsm_state219 = 354'd421249166674228746791672110734681729275580381602196445017243910144;
parameter    ap_ST_fsm_state220 = 354'd842498333348457493583344221469363458551160763204392890034487820288;
parameter    ap_ST_fsm_state221 = 354'd1684996666696914987166688442938726917102321526408785780068975640576;
parameter    ap_ST_fsm_state222 = 354'd3369993333393829974333376885877453834204643052817571560137951281152;
parameter    ap_ST_fsm_state223 = 354'd6739986666787659948666753771754907668409286105635143120275902562304;
parameter    ap_ST_fsm_state224 = 354'd13479973333575319897333507543509815336818572211270286240551805124608;
parameter    ap_ST_fsm_state225 = 354'd26959946667150639794667015087019630673637144422540572481103610249216;
parameter    ap_ST_fsm_state226 = 354'd53919893334301279589334030174039261347274288845081144962207220498432;
parameter    ap_ST_fsm_state227 = 354'd107839786668602559178668060348078522694548577690162289924414440996864;
parameter    ap_ST_fsm_state228 = 354'd215679573337205118357336120696157045389097155380324579848828881993728;
parameter    ap_ST_fsm_state229 = 354'd431359146674410236714672241392314090778194310760649159697657763987456;
parameter    ap_ST_fsm_state230 = 354'd862718293348820473429344482784628181556388621521298319395315527974912;
parameter    ap_ST_fsm_state231 = 354'd1725436586697640946858688965569256363112777243042596638790631055949824;
parameter    ap_ST_fsm_state232 = 354'd3450873173395281893717377931138512726225554486085193277581262111899648;
parameter    ap_ST_fsm_state233 = 354'd6901746346790563787434755862277025452451108972170386555162524223799296;
parameter    ap_ST_fsm_state234 = 354'd13803492693581127574869511724554050904902217944340773110325048447598592;
parameter    ap_ST_fsm_state235 = 354'd27606985387162255149739023449108101809804435888681546220650096895197184;
parameter    ap_ST_fsm_state236 = 354'd55213970774324510299478046898216203619608871777363092441300193790394368;
parameter    ap_ST_fsm_state237 = 354'd110427941548649020598956093796432407239217743554726184882600387580788736;
parameter    ap_ST_fsm_state238 = 354'd220855883097298041197912187592864814478435487109452369765200775161577472;
parameter    ap_ST_fsm_state239 = 354'd441711766194596082395824375185729628956870974218904739530401550323154944;
parameter    ap_ST_fsm_state240 = 354'd883423532389192164791648750371459257913741948437809479060803100646309888;
parameter    ap_ST_fsm_state241 = 354'd1766847064778384329583297500742918515827483896875618958121606201292619776;
parameter    ap_ST_fsm_state242 = 354'd3533694129556768659166595001485837031654967793751237916243212402585239552;
parameter    ap_ST_fsm_state243 = 354'd7067388259113537318333190002971674063309935587502475832486424805170479104;
parameter    ap_ST_fsm_state244 = 354'd14134776518227074636666380005943348126619871175004951664972849610340958208;
parameter    ap_ST_fsm_state245 = 354'd28269553036454149273332760011886696253239742350009903329945699220681916416;
parameter    ap_ST_fsm_state246 = 354'd56539106072908298546665520023773392506479484700019806659891398441363832832;
parameter    ap_ST_fsm_state247 = 354'd113078212145816597093331040047546785012958969400039613319782796882727665664;
parameter    ap_ST_fsm_state248 = 354'd226156424291633194186662080095093570025917938800079226639565593765455331328;
parameter    ap_ST_fsm_state249 = 354'd452312848583266388373324160190187140051835877600158453279131187530910662656;
parameter    ap_ST_fsm_state250 = 354'd904625697166532776746648320380374280103671755200316906558262375061821325312;
parameter    ap_ST_fsm_state251 = 354'd1809251394333065553493296640760748560207343510400633813116524750123642650624;
parameter    ap_ST_fsm_state252 = 354'd3618502788666131106986593281521497120414687020801267626233049500247285301248;
parameter    ap_ST_fsm_state253 = 354'd7237005577332262213973186563042994240829374041602535252466099000494570602496;
parameter    ap_ST_fsm_state254 = 354'd14474011154664524427946373126085988481658748083205070504932198000989141204992;
parameter    ap_ST_fsm_state255 = 354'd28948022309329048855892746252171976963317496166410141009864396001978282409984;
parameter    ap_ST_fsm_state256 = 354'd57896044618658097711785492504343953926634992332820282019728792003956564819968;
parameter    ap_ST_fsm_state257 = 354'd115792089237316195423570985008687907853269984665640564039457584007913129639936;
parameter    ap_ST_fsm_state258 = 354'd231584178474632390847141970017375815706539969331281128078915168015826259279872;
parameter    ap_ST_fsm_state259 = 354'd463168356949264781694283940034751631413079938662562256157830336031652518559744;
parameter    ap_ST_fsm_state260 = 354'd926336713898529563388567880069503262826159877325124512315660672063305037119488;
parameter    ap_ST_fsm_state261 = 354'd1852673427797059126777135760139006525652319754650249024631321344126610074238976;
parameter    ap_ST_fsm_state262 = 354'd3705346855594118253554271520278013051304639509300498049262642688253220148477952;
parameter    ap_ST_fsm_state263 = 354'd7410693711188236507108543040556026102609279018600996098525285376506440296955904;
parameter    ap_ST_fsm_state264 = 354'd14821387422376473014217086081112052205218558037201992197050570753012880593911808;
parameter    ap_ST_fsm_state265 = 354'd29642774844752946028434172162224104410437116074403984394101141506025761187823616;
parameter    ap_ST_fsm_state266 = 354'd59285549689505892056868344324448208820874232148807968788202283012051522375647232;
parameter    ap_ST_fsm_state267 = 354'd118571099379011784113736688648896417641748464297615937576404566024103044751294464;
parameter    ap_ST_fsm_state268 = 354'd237142198758023568227473377297792835283496928595231875152809132048206089502588928;
parameter    ap_ST_fsm_state269 = 354'd474284397516047136454946754595585670566993857190463750305618264096412179005177856;
parameter    ap_ST_fsm_state270 = 354'd948568795032094272909893509191171341133987714380927500611236528192824358010355712;
parameter    ap_ST_fsm_state271 = 354'd1897137590064188545819787018382342682267975428761855001222473056385648716020711424;
parameter    ap_ST_fsm_state272 = 354'd3794275180128377091639574036764685364535950857523710002444946112771297432041422848;
parameter    ap_ST_fsm_state273 = 354'd7588550360256754183279148073529370729071901715047420004889892225542594864082845696;
parameter    ap_ST_fsm_state274 = 354'd15177100720513508366558296147058741458143803430094840009779784451085189728165691392;
parameter    ap_ST_fsm_state275 = 354'd30354201441027016733116592294117482916287606860189680019559568902170379456331382784;
parameter    ap_ST_fsm_state276 = 354'd60708402882054033466233184588234965832575213720379360039119137804340758912662765568;
parameter    ap_ST_fsm_state277 = 354'd121416805764108066932466369176469931665150427440758720078238275608681517825325531136;
parameter    ap_ST_fsm_state278 = 354'd242833611528216133864932738352939863330300854881517440156476551217363035650651062272;
parameter    ap_ST_fsm_state279 = 354'd485667223056432267729865476705879726660601709763034880312953102434726071301302124544;
parameter    ap_ST_fsm_state280 = 354'd971334446112864535459730953411759453321203419526069760625906204869452142602604249088;
parameter    ap_ST_fsm_state281 = 354'd1942668892225729070919461906823518906642406839052139521251812409738904285205208498176;
parameter    ap_ST_fsm_state282 = 354'd3885337784451458141838923813647037813284813678104279042503624819477808570410416996352;
parameter    ap_ST_fsm_state283 = 354'd7770675568902916283677847627294075626569627356208558085007249638955617140820833992704;
parameter    ap_ST_fsm_state284 = 354'd15541351137805832567355695254588151253139254712417116170014499277911234281641667985408;
parameter    ap_ST_fsm_state285 = 354'd31082702275611665134711390509176302506278509424834232340028998555822468563283335970816;
parameter    ap_ST_fsm_state286 = 354'd62165404551223330269422781018352605012557018849668464680057997111644937126566671941632;
parameter    ap_ST_fsm_state287 = 354'd124330809102446660538845562036705210025114037699336929360115994223289874253133343883264;
parameter    ap_ST_fsm_state288 = 354'd248661618204893321077691124073410420050228075398673858720231988446579748506266687766528;
parameter    ap_ST_fsm_state289 = 354'd497323236409786642155382248146820840100456150797347717440463976893159497012533375533056;
parameter    ap_ST_fsm_state290 = 354'd994646472819573284310764496293641680200912301594695434880927953786318994025066751066112;
parameter    ap_ST_fsm_state291 = 354'd1989292945639146568621528992587283360401824603189390869761855907572637988050133502132224;
parameter    ap_ST_fsm_state292 = 354'd3978585891278293137243057985174566720803649206378781739523711815145275976100267004264448;
parameter    ap_ST_fsm_state293 = 354'd7957171782556586274486115970349133441607298412757563479047423630290551952200534008528896;
parameter    ap_ST_fsm_state294 = 354'd15914343565113172548972231940698266883214596825515126958094847260581103904401068017057792;
parameter    ap_ST_fsm_state295 = 354'd31828687130226345097944463881396533766429193651030253916189694521162207808802136034115584;
parameter    ap_ST_fsm_state296 = 354'd63657374260452690195888927762793067532858387302060507832379389042324415617604272068231168;
parameter    ap_ST_fsm_state297 = 354'd127314748520905380391777855525586135065716774604121015664758778084648831235208544136462336;
parameter    ap_ST_fsm_state298 = 354'd254629497041810760783555711051172270131433549208242031329517556169297662470417088272924672;
parameter    ap_ST_fsm_state299 = 354'd509258994083621521567111422102344540262867098416484062659035112338595324940834176545849344;
parameter    ap_ST_fsm_state300 = 354'd1018517988167243043134222844204689080525734196832968125318070224677190649881668353091698688;
parameter    ap_ST_fsm_state301 = 354'd2037035976334486086268445688409378161051468393665936250636140449354381299763336706183397376;
parameter    ap_ST_fsm_state302 = 354'd4074071952668972172536891376818756322102936787331872501272280898708762599526673412366794752;
parameter    ap_ST_fsm_state303 = 354'd8148143905337944345073782753637512644205873574663745002544561797417525199053346824733589504;
parameter    ap_ST_fsm_state304 = 354'd16296287810675888690147565507275025288411747149327490005089123594835050398106693649467179008;
parameter    ap_ST_fsm_state305 = 354'd32592575621351777380295131014550050576823494298654980010178247189670100796213387298934358016;
parameter    ap_ST_fsm_state306 = 354'd65185151242703554760590262029100101153646988597309960020356494379340201592426774597868716032;
parameter    ap_ST_fsm_state307 = 354'd130370302485407109521180524058200202307293977194619920040712988758680403184853549195737432064;
parameter    ap_ST_fsm_state308 = 354'd260740604970814219042361048116400404614587954389239840081425977517360806369707098391474864128;
parameter    ap_ST_fsm_state309 = 354'd521481209941628438084722096232800809229175908778479680162851955034721612739414196782949728256;
parameter    ap_ST_fsm_state310 = 354'd1042962419883256876169444192465601618458351817556959360325703910069443225478828393565899456512;
parameter    ap_ST_fsm_state311 = 354'd2085924839766513752338888384931203236916703635113918720651407820138886450957656787131798913024;
parameter    ap_ST_fsm_state312 = 354'd4171849679533027504677776769862406473833407270227837441302815640277772901915313574263597826048;
parameter    ap_ST_fsm_state313 = 354'd8343699359066055009355553539724812947666814540455674882605631280555545803830627148527195652096;
parameter    ap_ST_fsm_state314 = 354'd16687398718132110018711107079449625895333629080911349765211262561111091607661254297054391304192;
parameter    ap_ST_fsm_state315 = 354'd33374797436264220037422214158899251790667258161822699530422525122222183215322508594108782608384;
parameter    ap_ST_fsm_state316 = 354'd66749594872528440074844428317798503581334516323645399060845050244444366430645017188217565216768;
parameter    ap_ST_fsm_state317 = 354'd133499189745056880149688856635597007162669032647290798121690100488888732861290034376435130433536;
parameter    ap_ST_fsm_state318 = 354'd266998379490113760299377713271194014325338065294581596243380200977777465722580068752870260867072;
parameter    ap_ST_fsm_state319 = 354'd533996758980227520598755426542388028650676130589163192486760401955554931445160137505740521734144;
parameter    ap_ST_fsm_state320 = 354'd1067993517960455041197510853084776057301352261178326384973520803911109862890320275011481043468288;
parameter    ap_ST_fsm_state321 = 354'd2135987035920910082395021706169552114602704522356652769947041607822219725780640550022962086936576;
parameter    ap_ST_fsm_state322 = 354'd4271974071841820164790043412339104229205409044713305539894083215644439451561281100045924173873152;
parameter    ap_ST_fsm_state323 = 354'd8543948143683640329580086824678208458410818089426611079788166431288878903122562200091848347746304;
parameter    ap_ST_fsm_state324 = 354'd17087896287367280659160173649356416916821636178853222159576332862577757806245124400183696695492608;
parameter    ap_ST_fsm_state325 = 354'd34175792574734561318320347298712833833643272357706444319152665725155515612490248800367393390985216;
parameter    ap_ST_fsm_state326 = 354'd68351585149469122636640694597425667667286544715412888638305331450311031224980497600734786781970432;
parameter    ap_ST_fsm_state327 = 354'd136703170298938245273281389194851335334573089430825777276610662900622062449960995201469573563940864;
parameter    ap_ST_fsm_state328 = 354'd273406340597876490546562778389702670669146178861651554553221325801244124899921990402939147127881728;
parameter    ap_ST_fsm_state329 = 354'd546812681195752981093125556779405341338292357723303109106442651602488249799843980805878294255763456;
parameter    ap_ST_fsm_state330 = 354'd1093625362391505962186251113558810682676584715446606218212885303204976499599687961611756588511526912;
parameter    ap_ST_fsm_state331 = 354'd2187250724783011924372502227117621365353169430893212436425770606409952999199375923223513177023053824;
parameter    ap_ST_fsm_state332 = 354'd4374501449566023848745004454235242730706338861786424872851541212819905998398751846447026354046107648;
parameter    ap_ST_fsm_state333 = 354'd8749002899132047697490008908470485461412677723572849745703082425639811996797503692894052708092215296;
parameter    ap_ST_fsm_state334 = 354'd17498005798264095394980017816940970922825355447145699491406164851279623993595007385788105416184430592;
parameter    ap_ST_fsm_state335 = 354'd34996011596528190789960035633881941845650710894291398982812329702559247987190014771576210832368861184;
parameter    ap_ST_fsm_state336 = 354'd69992023193056381579920071267763883691301421788582797965624659405118495974380029543152421664737722368;
parameter    ap_ST_fsm_state337 = 354'd139984046386112763159840142535527767382602843577165595931249318810236991948760059086304843329475444736;
parameter    ap_ST_fsm_state338 = 354'd279968092772225526319680285071055534765205687154331191862498637620473983897520118172609686658950889472;
parameter    ap_ST_fsm_state339 = 354'd559936185544451052639360570142111069530411374308662383724997275240947967795040236345219373317901778944;
parameter    ap_ST_fsm_state340 = 354'd1119872371088902105278721140284222139060822748617324767449994550481895935590080472690438746635803557888;
parameter    ap_ST_fsm_state341 = 354'd2239744742177804210557442280568444278121645497234649534899989100963791871180160945380877493271607115776;
parameter    ap_ST_fsm_state342 = 354'd4479489484355608421114884561136888556243290994469299069799978201927583742360321890761754986543214231552;
parameter    ap_ST_fsm_state343 = 354'd8958978968711216842229769122273777112486581988938598139599956403855167484720643781523509973086428463104;
parameter    ap_ST_fsm_state344 = 354'd17917957937422433684459538244547554224973163977877196279199912807710334969441287563047019946172856926208;
parameter    ap_ST_fsm_state345 = 354'd35835915874844867368919076489095108449946327955754392558399825615420669938882575126094039892345713852416;
parameter    ap_ST_fsm_state346 = 354'd71671831749689734737838152978190216899892655911508785116799651230841339877765150252188079784691427704832;
parameter    ap_ST_fsm_state347 = 354'd143343663499379469475676305956380433799785311823017570233599302461682679755530300504376159569382855409664;
parameter    ap_ST_fsm_state348 = 354'd286687326998758938951352611912760867599570623646035140467198604923365359511060601008752319138765710819328;
parameter    ap_ST_fsm_state349 = 354'd573374653997517877902705223825521735199141247292070280934397209846730719022121202017504638277531421638656;
parameter    ap_ST_fsm_state350 = 354'd1146749307995035755805410447651043470398282494584140561868794419693461438044242404035009276555062843277312;
parameter    ap_ST_fsm_state351 = 354'd2293498615990071511610820895302086940796564989168281123737588839386922876088484808070018553110125686554624;
parameter    ap_ST_fsm_state352 = 354'd4586997231980143023221641790604173881593129978336562247475177678773845752176969616140037106220251373109248;
parameter    ap_ST_fsm_state353 = 354'd9173994463960286046443283581208347763186259956673124494950355357547691504353939232280074212440502746218496;
parameter    ap_ST_fsm_state354 = 354'd18347988927920572092886567162416695526372519913346248989900710715095383008707878464560148424881005492436992;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] n_patches_i;
output  [7:0] n_patches_o;
output   n_patches_o_ap_vld;
output  [2:0] GDn_points_address0;
output   GDn_points_ce0;
input  [31:0] GDn_points_q0;
input  [7:0] lastPatchIndex;
input  [31:0] z_top_min;
input  [31:0] z_top_max;
input  [31:0] complementary_apexZ0;
input  [31:0] apexZ0;
input  [31:0] ppl;
output  [11:0] GDarrayDecoded_address0;
output   GDarrayDecoded_ce0;
input  [31:0] GDarrayDecoded_q0;
output  [11:0] patches_superpoints_address0;
output   patches_superpoints_ce0;
output   patches_superpoints_we0;
output  [63:0] patches_superpoints_d0;
input  [63:0] patches_superpoints_q0;
output  [11:0] patches_superpoints_address1;
output   patches_superpoints_ce1;
input  [63:0] patches_superpoints_q1;
output  [6:0] patches_parameters_address0;
output   patches_parameters_ce0;
output   patches_parameters_we0;
output  [31:0] patches_parameters_d0;
input  [31:0] patches_parameters_q0;
output  [6:0] patches_parameters_address1;
output   patches_parameters_ce1;
output   patches_parameters_we1;
output  [31:0] patches_parameters_d1;
input  [31:0] patches_parameters_q1;
output  [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din1;
output  [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din2;
output  [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din3;
output  [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din4;
output  [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din5;
input  [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_dout0;
output   grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_ce;
output  [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din1;
output  [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din2;
output  [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din3;
output  [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din4;
output  [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din5;
input  [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_dout0;
output   grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] n_patches_o;
reg n_patches_o_ap_vld;
reg[11:0] patches_superpoints_address0;
reg patches_superpoints_ce0;
reg patches_superpoints_we0;
reg[63:0] patches_superpoints_d0;
reg patches_superpoints_ce1;
reg[6:0] patches_parameters_address0;
reg patches_parameters_ce0;
reg patches_parameters_we0;
reg[31:0] patches_parameters_d0;
reg[6:0] patches_parameters_address1;
reg patches_parameters_ce1;
reg patches_parameters_we1;

(* fsm_encoding = "none" *) reg   [353:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_502_ap_return;
reg   [31:0] reg_556;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state101;
wire    ap_CS_fsm_state150;
wire    ap_CS_fsm_state199;
wire    ap_CS_fsm_state303;
wire    ap_CS_fsm_state351;
reg   [7:0] reg_560;
wire    ap_CS_fsm_state248;
reg   [0:0] makeHorizontallyShiftedPatch_reg_407;
wire    ap_CS_fsm_state352;
wire   [0:0] and_ln1154_fu_1214_p2;
wire   [4:0] empty_fu_571_p1;
reg   [4:0] empty_reg_1251;
wire   [0:0] icmp_ln993_fu_576_p2;
reg   [0:0] icmp_ln993_reg_1257;
wire   [4:0] secondLastPatchIndex_fu_582_p2;
reg   [4:0] secondLastPatchIndex_reg_1267;
wire    ap_CS_fsm_state2;
wire   [4:0] secondLastPatchIndex_1_fu_587_p3;
reg   [4:0] secondLastPatchIndex_1_reg_1272;
wire    ap_CS_fsm_state3;
wire   [0:0] xor_ln1006_fu_594_p2;
reg   [0:0] xor_ln1006_reg_1277;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
reg   [31:0] original_topR_jL_V_reg_1306;
wire   [0:0] and_ln1009_fu_614_p2;
reg   [0:0] and_ln1009_reg_1313;
wire    ap_CS_fsm_state7;
reg   [6:0] patches_parameters_addr_9_reg_1345;
reg   [6:0] patches_parameters_addr_14_reg_1350;
reg   [6:0] patches_parameters_addr_15_reg_1355;
wire   [0:0] phitmp_fu_660_p2;
wire    ap_CS_fsm_state53;
reg  signed [31:0] original_topL_jL_V_3_reg_1365;
wire    ap_CS_fsm_state54;
wire   [0:0] grp_fu_540_p2;
reg   [0:0] icmp_ln886_2_reg_1373;
wire   [0:0] icmp_ln878_2_fu_678_p2;
reg   [0:0] icmp_ln878_2_reg_1377;
wire    ap_CS_fsm_state55;
wire   [0:0] phitmp4_fu_700_p2;
wire    ap_CS_fsm_state102;
reg  signed [31:0] complementary_topR_jR_V_3_reg_1386;
wire    ap_CS_fsm_state103;
wire   [0:0] and_ln1019_fu_728_p2;
reg   [0:0] and_ln1019_reg_1395;
wire    ap_CS_fsm_state104;
wire   [0:0] phitmp3_fu_750_p2;
wire    ap_CS_fsm_state151;
reg  signed [31:0] complementary_topL_jR_V_3_reg_1404;
wire    ap_CS_fsm_state152;
wire   [0:0] icmp_ln886_4_fu_756_p2;
reg   [0:0] icmp_ln886_4_reg_1413;
wire    ap_CS_fsm_state153;
wire   [0:0] icmp_ln878_4_fu_772_p2;
reg   [0:0] icmp_ln878_4_reg_1417;
wire   [0:0] phitmp5_fu_794_p2;
wire    ap_CS_fsm_state200;
wire   [0:0] or_ln1079_fu_800_p2;
reg   [0:0] or_ln1079_reg_1440;
wire   [0:0] or_ln1079_2_fu_816_p2;
reg   [0:0] or_ln1079_2_reg_1445;
wire    ap_CS_fsm_state201;
reg   [31:0] complementary_topR_jL_V_reg_1450;
wire    ap_CS_fsm_state245;
reg   [31:0] complementary_topL_jL_V_reg_1455;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_514_ap_return;
reg   [31:0] z0_complementary_cCorner_V_reg_1460;
reg   [0:0] tmp_14_reg_1465;
wire   [31:0] horizontalShiftTop_fu_830_p2;
wire    ap_CS_fsm_state246;
wire   [31:0] horizontalShiftBottom_fu_834_p2;
wire  signed [63:0] sext_ln1059_fu_860_p1;
wire   [0:0] shiftOriginal_1_fu_864_p2;
reg   [0:0] shiftOriginal_1_reg_1497;
wire   [0:0] lnot_fu_876_p2;
reg   [0:0] lnot_reg_1511;
wire   [31:0] newZtop_V_1_fu_881_p3;
reg   [31:0] newZtop_V_1_reg_1516;
wire   [31:0] trunc_ln1047_fu_887_p1;
wire    ap_CS_fsm_state247;
wire   [0:0] or_ln1079_1_fu_907_p2;
reg   [0:0] or_ln1079_1_reg_1528;
wire   [31:0] loopCounter_2_fu_912_p2;
reg   [31:0] loopCounter_2_reg_1532;
wire   [0:0] and_ln1079_2_fu_926_p2;
reg   [0:0] and_ln1079_2_reg_1537;
wire   [0:0] and_ln1079_1_fu_965_p2;
reg   [0:0] and_ln1079_1_reg_1541;
wire   [31:0] select_ln534_fu_977_p3;
reg   [31:0] select_ln534_reg_1545;
wire   [63:0] shifted_Align_5_fu_1000_p3;
reg   [63:0] shifted_Align_5_reg_1550;
wire   [31:0] trunc_ln1047_1_fu_1007_p1;
reg   [31:0] trunc_ln1047_1_reg_1555;
wire   [8:0] add_ln1099_fu_1015_p2;
reg   [8:0] add_ln1099_reg_1561;
wire    ap_CS_fsm_state249;
wire   [31:0] grp_makePatch_alignedToLine_fu_464_ap_return;
reg   [31:0] ppl_assign1_reg_1566;
wire    ap_CS_fsm_state252;
wire   [4:0] add_ln1105_fu_1026_p2;
reg   [4:0] add_ln1105_reg_1571;
wire    ap_CS_fsm_state253;
wire  signed [31:0] complementary_topR_jR_V_4_fu_1032_p3;
reg  signed [31:0] complementary_topR_jR_V_4_reg_1576;
wire    ap_CS_fsm_state257;
wire  signed [31:0] complementary_topL_jR_V_4_fu_1039_p3;
reg  signed [31:0] complementary_topL_jR_V_4_reg_1583;
wire  signed [31:0] original_topR_jR_V_3_fu_1046_p3;
reg  signed [31:0] original_topR_jR_V_3_reg_1590;
wire  signed [31:0] original_topL_jR_V_3_fu_1053_p3;
reg  signed [31:0] original_topL_jR_V_3_reg_1597;
wire  signed [31:0] original_topL_jL_V_4_fu_1060_p3;
reg  signed [31:0] original_topL_jL_V_4_reg_1603;
wire    ap_CS_fsm_state258;
wire  signed [31:0] original_topR_jL_V_3_fu_1067_p3;
reg  signed [31:0] original_topR_jL_V_3_reg_1608;
wire  signed [31:0] complementary_topR_jL_V_3_fu_1074_p3;
reg  signed [31:0] complementary_topR_jL_V_3_reg_1613;
wire  signed [31:0] complementary_topL_jL_V_3_fu_1081_p3;
reg  signed [31:0] complementary_topL_jL_V_3_reg_1619;
wire  signed [32:0] sext_ln215_17_fu_1088_p1;
reg  signed [32:0] sext_ln215_17_reg_1625;
wire  signed [32:0] sext_ln215_18_fu_1092_p1;
reg  signed [32:0] sext_ln215_18_reg_1630;
wire   [31:0] horizontalShiftTop_1_fu_1095_p2;
reg   [31:0] horizontalShiftTop_1_reg_1635;
wire  signed [32:0] sext_ln215_19_fu_1100_p1;
reg  signed [32:0] sext_ln215_19_reg_1640;
wire  signed [32:0] sext_ln215_20_fu_1104_p1;
reg  signed [32:0] sext_ln215_20_reg_1645;
wire   [31:0] horizontalShiftBottom_1_fu_1107_p2;
reg   [31:0] horizontalShiftBottom_1_reg_1650;
wire   [0:0] icmp_ln878_6_fu_1112_p2;
reg   [0:0] icmp_ln878_6_reg_1655;
wire    ap_CS_fsm_state304;
wire   [31:0] horizontalOverlapTop_V_1_fu_1148_p3;
reg   [31:0] horizontalOverlapTop_V_1_reg_1659;
wire   [31:0] horizontalOverlapBottom_V_1_fu_1186_p3;
reg   [31:0] horizontalOverlapBottom_V_1_reg_1664;
reg   [0:0] and_ln1154_reg_1672;
wire   [0:0] icmp_ln1156_fu_1219_p2;
reg   [0:0] icmp_ln1156_reg_1676;
wire   [8:0] zext_ln1158_fu_1231_p1;
reg   [8:0] zext_ln1158_reg_1680;
wire    ap_CS_fsm_state353;
wire    grp_makePatch_alignedToLine_fu_464_ap_start;
wire    grp_makePatch_alignedToLine_fu_464_ap_done;
wire    grp_makePatch_alignedToLine_fu_464_ap_idle;
wire    grp_makePatch_alignedToLine_fu_464_ap_ready;
wire   [7:0] grp_makePatch_alignedToLine_fu_464_n_patches_o;
wire    grp_makePatch_alignedToLine_fu_464_n_patches_o_ap_vld;
wire   [2:0] grp_makePatch_alignedToLine_fu_464_GDn_points_address0;
wire    grp_makePatch_alignedToLine_fu_464_GDn_points_ce0;
wire   [11:0] grp_makePatch_alignedToLine_fu_464_GDarrayDecoded_address0;
wire    grp_makePatch_alignedToLine_fu_464_GDarrayDecoded_ce0;
wire   [11:0] grp_makePatch_alignedToLine_fu_464_patches_superpoints_address0;
wire    grp_makePatch_alignedToLine_fu_464_patches_superpoints_ce0;
wire    grp_makePatch_alignedToLine_fu_464_patches_superpoints_we0;
wire   [63:0] grp_makePatch_alignedToLine_fu_464_patches_superpoints_d0;
wire   [6:0] grp_makePatch_alignedToLine_fu_464_patches_parameters_address0;
wire    grp_makePatch_alignedToLine_fu_464_patches_parameters_ce0;
wire    grp_makePatch_alignedToLine_fu_464_patches_parameters_we0;
wire   [31:0] grp_makePatch_alignedToLine_fu_464_patches_parameters_d0;
wire    grp_getShadows_fu_487_ap_start;
wire    grp_getShadows_fu_487_ap_done;
wire    grp_getShadows_fu_487_ap_idle;
wire    grp_getShadows_fu_487_ap_ready;
wire   [11:0] grp_getShadows_fu_487_wp_superpoints_address0;
wire    grp_getShadows_fu_487_wp_superpoints_ce0;
reg   [4:0] grp_getShadows_fu_487_wp_superpoints_offset;
wire   [6:0] grp_getShadows_fu_487_wp_parameters_address0;
wire    grp_getShadows_fu_487_wp_parameters_ce0;
wire    grp_getShadows_fu_487_wp_parameters_we0;
wire   [31:0] grp_getShadows_fu_487_wp_parameters_d0;
wire   [6:0] grp_getShadows_fu_487_wp_parameters_address1;
wire    grp_getShadows_fu_487_wp_parameters_ce1;
wire    grp_getShadows_fu_487_wp_parameters_we1;
wire   [31:0] grp_getShadows_fu_487_wp_parameters_d1;
reg   [0:0] grp_getShadows_fu_487_wp_parameters_offset;
reg   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_502_z_i;
reg   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_502_z_j;
wire   [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_502_i;
wire   [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_502_j;
wire   [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_502_k;
reg    grp_straightLineProjectorFromLayerIJtoK_fu_502_ap_ce;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state105;
wire    ap_CS_fsm_state154;
wire    ap_CS_fsm_state202;
wire    ap_CS_fsm_state203;
wire    ap_CS_fsm_state204;
wire    ap_CS_fsm_state205;
wire    ap_CS_fsm_state206;
wire    ap_CS_fsm_state207;
wire    ap_CS_fsm_state208;
wire    ap_CS_fsm_state209;
wire    ap_CS_fsm_state210;
wire    ap_CS_fsm_state211;
wire    ap_CS_fsm_state212;
wire    ap_CS_fsm_state213;
wire    ap_CS_fsm_state214;
wire    ap_CS_fsm_state215;
wire    ap_CS_fsm_state216;
wire    ap_CS_fsm_state217;
wire    ap_CS_fsm_state218;
wire    ap_CS_fsm_state219;
wire    ap_CS_fsm_state220;
wire    ap_CS_fsm_state221;
wire    ap_CS_fsm_state222;
wire    ap_CS_fsm_state223;
wire    ap_CS_fsm_state224;
wire    ap_CS_fsm_state225;
wire    ap_CS_fsm_state226;
wire    ap_CS_fsm_state227;
wire    ap_CS_fsm_state228;
wire    ap_CS_fsm_state229;
wire    ap_CS_fsm_state230;
wire    ap_CS_fsm_state231;
wire    ap_CS_fsm_state232;
wire    ap_CS_fsm_state233;
wire    ap_CS_fsm_state234;
wire    ap_CS_fsm_state235;
wire    ap_CS_fsm_state236;
wire    ap_CS_fsm_state237;
wire    ap_CS_fsm_state238;
wire    ap_CS_fsm_state239;
wire    ap_CS_fsm_state240;
wire    ap_CS_fsm_state241;
wire    ap_CS_fsm_state242;
wire    ap_CS_fsm_state243;
wire    ap_CS_fsm_state244;
wire    ap_CS_fsm_state306;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state250;
wire    ap_CS_fsm_state251;
wire    ap_CS_fsm_state254;
wire    ap_CS_fsm_state255;
wire    ap_CS_fsm_state256;
wire    ap_CS_fsm_state305;
wire    ap_CS_fsm_state354;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_514_z_i;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_514_z_j;
wire   [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_514_i;
wire   [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_514_j;
wire   [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_514_k;
reg    grp_straightLineProjectorFromLayerIJtoK_fu_514_ap_ce;
wire    grp_delete_patch_fu_528_ap_start;
wire    grp_delete_patch_fu_528_ap_done;
wire    grp_delete_patch_fu_528_ap_idle;
wire    grp_delete_patch_fu_528_ap_ready;
wire   [7:0] grp_delete_patch_fu_528_n_patches;
wire    grp_delete_patch_fu_528_n_patches_ap_vld;
reg   [8:0] grp_delete_patch_fu_528_index;
wire   [11:0] grp_delete_patch_fu_528_patches_superpoints_address0;
wire    grp_delete_patch_fu_528_patches_superpoints_ce0;
wire    grp_delete_patch_fu_528_patches_superpoints_we0;
wire   [63:0] grp_delete_patch_fu_528_patches_superpoints_d0;
wire   [11:0] grp_delete_patch_fu_528_patches_superpoints_address1;
wire    grp_delete_patch_fu_528_patches_superpoints_ce1;
wire   [6:0] grp_delete_patch_fu_528_patches_parameters_address0;
wire    grp_delete_patch_fu_528_patches_parameters_ce0;
wire    grp_delete_patch_fu_528_patches_parameters_we0;
wire   [31:0] grp_delete_patch_fu_528_patches_parameters_d0;
wire   [6:0] grp_delete_patch_fu_528_patches_parameters_address1;
wire    grp_delete_patch_fu_528_patches_parameters_ce1;
reg   [0:0] empty_69_reg_234;
reg   [0:0] empty_70_reg_246;
reg   [0:0] empty_71_reg_261;
reg   [0:0] empty_72_reg_273;
reg   [31:0] ppl_assign_0_reg_287;
wire   [0:0] icmp_ln1144_fu_1202_p2;
reg   [31:0] empty_73_reg_297;
reg   [31:0] empty_74_reg_306;
reg   [31:0] complementary_topR_jR_V_reg_315;
reg   [31:0] original_topL_jL_V_reg_325;
reg   [31:0] original_topR_jL_V_1_reg_335;
reg   [31:0] complementary_topL_jR_V_reg_345;
reg   [31:0] complementary_topR_jL_V_1_reg_355;
reg   [31:0] complementary_topL_jL_V_1_reg_365;
reg   [31:0] original_topR_jR_V_1_reg_375;
reg   [31:0] original_topL_jR_V_1_reg_385;
reg   [31:0] newZtop_V_reg_395;
wire   [0:0] ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_412_p4;
reg   [63:0] shifted_Align_2_reg_421;
reg   [31:0] loopCounter_reg_431;
reg   [31:0] phi_ln166_reg_443;
reg   [31:0] agg_tmp178_0_reg_453;
reg    grp_makePatch_alignedToLine_fu_464_ap_start_reg;
reg    grp_getShadows_fu_487_ap_start_reg;
reg    grp_delete_patch_fu_528_ap_start_reg;
wire   [63:0] select_ln1008_1_fu_600_p3;
wire   [63:0] select_ln1008_fu_620_p3;
wire   [63:0] select_ln1032_fu_628_p3;
wire   [63:0] select_ln1033_fu_636_p3;
reg   [31:0] horizontalOverlapBottom_V_fu_114;
reg   [31:0] horizontalOverlapTop_V_fu_118;
wire  signed [31:0] grp_fu_540_p1;
wire  signed [31:0] icmp_ln878_fu_608_p1;
wire   [0:0] icmp_ln878_fu_608_p2;
wire   [0:0] tmp_fu_644_p3;
wire   [31:0] grp_fu_565_p2;
wire   [31:0] select_ln180_fu_652_p3;
wire  signed [31:0] sext_ln215_12_fu_669_p0;
wire  signed [32:0] sext_ln215_fu_666_p1;
wire  signed [32:0] sext_ln215_12_fu_669_p1;
wire   [32:0] ret_fu_672_p2;
wire   [0:0] tmp_11_fu_684_p3;
wire   [31:0] select_ln180_4_fu_692_p3;
wire  signed [31:0] sext_ln215_14_fu_709_p0;
wire  signed [32:0] sext_ln215_13_fu_706_p1;
wire  signed [32:0] sext_ln215_14_fu_709_p1;
wire   [32:0] ret_7_fu_712_p2;
wire  signed [31:0] icmp_ln878_3_fu_724_p1;
wire   [0:0] icmp_ln886_3_fu_718_p2;
wire   [0:0] icmp_ln878_3_fu_724_p2;
wire   [0:0] tmp_12_fu_734_p3;
wire   [31:0] select_ln180_5_fu_742_p3;
wire  signed [31:0] icmp_ln886_4_fu_756_p1;
wire  signed [31:0] sext_ln215_16_fu_763_p0;
wire  signed [32:0] sext_ln215_15_fu_760_p1;
wire  signed [32:0] sext_ln215_16_fu_763_p1;
wire   [32:0] ret_8_fu_766_p2;
wire   [0:0] tmp_13_fu_778_p3;
wire   [31:0] select_ln180_6_fu_786_p3;
wire  signed [31:0] shifted_Align_fu_838_p1;
wire  signed [31:0] shifted_Align_fu_838_p2;
wire   [0:0] icmp_ln886_5_fu_848_p2;
wire  signed [31:0] shifted_Align_1_fu_853_p1;
wire   [31:0] shifted_Align_fu_838_p3;
wire   [31:0] shifted_Align_1_fu_853_p3;
wire   [0:0] shiftOriginal_fu_843_p2;
wire   [0:0] cmp_i_i301_not_fu_870_p2;
wire   [30:0] tmp_15_fu_891_p4;
wire   [0:0] icmp_ln1079_fu_901_p2;
wire   [0:0] grp_fu_546_p2;
wire   [0:0] grp_fu_551_p2;
wire   [30:0] tmp_16_fu_932_p4;
wire   [0:0] icmp_ln1079_1_fu_942_p2;
wire   [0:0] or_ln1079_3_fu_948_p2;
wire   [0:0] xor_ln1079_fu_953_p2;
wire   [0:0] and_ln1079_fu_959_p2;
wire   [0:0] icmp_ln878_5_fu_971_p2;
wire  signed [63:0] sext_ln534_fu_985_p1;
wire   [63:0] shifted_Align_3_fu_988_p2;
wire   [63:0] shifted_Align_4_fu_994_p2;
wire   [8:0] zext_ln1099_fu_1011_p1;
wire   [4:0] trunc_ln1105_fu_1022_p1;
wire  signed [32:0] sext_ln215_21_fu_1118_p1;
wire  signed [32:0] sext_ln215_22_fu_1126_p1;
wire   [32:0] ret_9_fu_1121_p2;
wire   [32:0] ret_10_fu_1129_p2;
wire   [0:0] icmp_ln878_7_fu_1134_p2;
wire   [31:0] trunc_ln1127_fu_1140_p1;
wire   [31:0] trunc_ln1127_1_fu_1144_p1;
wire  signed [32:0] sext_ln215_23_fu_1156_p1;
wire  signed [32:0] sext_ln215_24_fu_1164_p1;
wire   [32:0] ret_11_fu_1159_p2;
wire   [32:0] ret_12_fu_1167_p2;
wire   [0:0] icmp_ln878_8_fu_1172_p2;
wire   [31:0] trunc_ln1128_fu_1178_p1;
wire   [31:0] trunc_ln1128_1_fu_1182_p1;
wire   [0:0] icmp_ln886_6_fu_1208_p2;
wire   [7:0] add_ln1158_fu_1225_p2;
reg    ap_predicate_op953_call_state354;
reg    ap_block_state354_on_subcall_done;
reg   [353:0] ap_NS_fsm;
reg    ap_block_state250_on_subcall_done;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 354'd1;
#0 grp_makePatch_alignedToLine_fu_464_ap_start_reg = 1'b0;
#0 grp_getShadows_fu_487_ap_start_reg = 1'b0;
#0 grp_delete_patch_fu_528_ap_start_reg = 1'b0;
end

MPSQ_makePatch_alignedToLine grp_makePatch_alignedToLine_fu_464(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_makePatch_alignedToLine_fu_464_ap_start),
    .ap_done(grp_makePatch_alignedToLine_fu_464_ap_done),
    .ap_idle(grp_makePatch_alignedToLine_fu_464_ap_idle),
    .ap_ready(grp_makePatch_alignedToLine_fu_464_ap_ready),
    .n_patches_i(n_patches_i),
    .n_patches_o(grp_makePatch_alignedToLine_fu_464_n_patches_o),
    .n_patches_o_ap_vld(grp_makePatch_alignedToLine_fu_464_n_patches_o_ap_vld),
    .GDn_points_address0(grp_makePatch_alignedToLine_fu_464_GDn_points_address0),
    .GDn_points_ce0(grp_makePatch_alignedToLine_fu_464_GDn_points_ce0),
    .GDn_points_q0(GDn_points_q0),
    .apexZ0(trunc_ln1047_1_reg_1555),
    .z_top(newZtop_V_1_reg_1516),
    .p_read(ppl_assign_0_reg_287),
    .leftRight(lnot_reg_1511),
    .GDarrayDecoded_address0(grp_makePatch_alignedToLine_fu_464_GDarrayDecoded_address0),
    .GDarrayDecoded_ce0(grp_makePatch_alignedToLine_fu_464_GDarrayDecoded_ce0),
    .GDarrayDecoded_q0(GDarrayDecoded_q0),
    .patches_superpoints_address0(grp_makePatch_alignedToLine_fu_464_patches_superpoints_address0),
    .patches_superpoints_ce0(grp_makePatch_alignedToLine_fu_464_patches_superpoints_ce0),
    .patches_superpoints_we0(grp_makePatch_alignedToLine_fu_464_patches_superpoints_we0),
    .patches_superpoints_d0(grp_makePatch_alignedToLine_fu_464_patches_superpoints_d0),
    .patches_superpoints_q0(patches_superpoints_q0),
    .patches_parameters_address0(grp_makePatch_alignedToLine_fu_464_patches_parameters_address0),
    .patches_parameters_ce0(grp_makePatch_alignedToLine_fu_464_patches_parameters_ce0),
    .patches_parameters_we0(grp_makePatch_alignedToLine_fu_464_patches_parameters_we0),
    .patches_parameters_d0(grp_makePatch_alignedToLine_fu_464_patches_parameters_d0),
    .patches_parameters_q0(patches_parameters_q0),
    .ap_return(grp_makePatch_alignedToLine_fu_464_ap_return)
);

MPSQ_getShadows grp_getShadows_fu_487(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_getShadows_fu_487_ap_start),
    .ap_done(grp_getShadows_fu_487_ap_done),
    .ap_idle(grp_getShadows_fu_487_ap_idle),
    .ap_ready(grp_getShadows_fu_487_ap_ready),
    .wp_superpoints_address0(grp_getShadows_fu_487_wp_superpoints_address0),
    .wp_superpoints_ce0(grp_getShadows_fu_487_wp_superpoints_ce0),
    .wp_superpoints_q0(patches_superpoints_q0),
    .wp_superpoints_offset(grp_getShadows_fu_487_wp_superpoints_offset),
    .wp_parameters_address0(grp_getShadows_fu_487_wp_parameters_address0),
    .wp_parameters_ce0(grp_getShadows_fu_487_wp_parameters_ce0),
    .wp_parameters_we0(grp_getShadows_fu_487_wp_parameters_we0),
    .wp_parameters_d0(grp_getShadows_fu_487_wp_parameters_d0),
    .wp_parameters_address1(grp_getShadows_fu_487_wp_parameters_address1),
    .wp_parameters_ce1(grp_getShadows_fu_487_wp_parameters_ce1),
    .wp_parameters_we1(grp_getShadows_fu_487_wp_parameters_we1),
    .wp_parameters_d1(grp_getShadows_fu_487_wp_parameters_d1),
    .wp_parameters_offset(grp_getShadows_fu_487_wp_parameters_offset),
    .zTopMin(z_top_min),
    .zTopMax(z_top_max)
);

MPSQ_delete_patch grp_delete_patch_fu_528(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_delete_patch_fu_528_ap_start),
    .ap_done(grp_delete_patch_fu_528_ap_done),
    .ap_idle(grp_delete_patch_fu_528_ap_idle),
    .ap_ready(grp_delete_patch_fu_528_ap_ready),
    .n_patches(grp_delete_patch_fu_528_n_patches),
    .n_patches_ap_vld(grp_delete_patch_fu_528_n_patches_ap_vld),
    .n_patches_read(reg_560),
    .index(grp_delete_patch_fu_528_index),
    .patches_superpoints_address0(grp_delete_patch_fu_528_patches_superpoints_address0),
    .patches_superpoints_ce0(grp_delete_patch_fu_528_patches_superpoints_ce0),
    .patches_superpoints_we0(grp_delete_patch_fu_528_patches_superpoints_we0),
    .patches_superpoints_d0(grp_delete_patch_fu_528_patches_superpoints_d0),
    .patches_superpoints_address1(grp_delete_patch_fu_528_patches_superpoints_address1),
    .patches_superpoints_ce1(grp_delete_patch_fu_528_patches_superpoints_ce1),
    .patches_superpoints_q1(patches_superpoints_q1),
    .patches_parameters_address0(grp_delete_patch_fu_528_patches_parameters_address0),
    .patches_parameters_ce0(grp_delete_patch_fu_528_patches_parameters_ce0),
    .patches_parameters_we0(grp_delete_patch_fu_528_patches_parameters_we0),
    .patches_parameters_d0(grp_delete_patch_fu_528_patches_parameters_d0),
    .patches_parameters_address1(grp_delete_patch_fu_528_patches_parameters_address1),
    .patches_parameters_ce1(grp_delete_patch_fu_528_patches_parameters_ce1),
    .patches_parameters_q1(patches_parameters_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_delete_patch_fu_528_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state353) | (1'b1 == ap_CS_fsm_state249))) begin
            grp_delete_patch_fu_528_ap_start_reg <= 1'b1;
        end else if ((grp_delete_patch_fu_528_ap_ready == 1'b1)) begin
            grp_delete_patch_fu_528_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_getShadows_fu_487_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state254) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
            grp_getShadows_fu_487_ap_start_reg <= 1'b1;
        end else if ((grp_getShadows_fu_487_ap_ready == 1'b1)) begin
            grp_getShadows_fu_487_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_makePatch_alignedToLine_fu_464_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state251)) begin
            grp_makePatch_alignedToLine_fu_464_ap_start_reg <= 1'b1;
        end else if ((grp_makePatch_alignedToLine_fu_464_ap_ready == 1'b1)) begin
            grp_makePatch_alignedToLine_fu_464_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1144_fu_1202_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state305))) begin
        agg_tmp178_0_reg_453 <= newZtop_V_1_reg_1516;
    end else if (((1'b1 == ap_CS_fsm_state247) & (((or_ln1079_1_fu_907_p2 == 1'd1) & (1'd0 == and_ln1079_1_fu_965_p2) & (ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_412_p4 == 1'd1)) | ((or_ln1079_1_fu_907_p2 == 1'd0) & (1'd0 == and_ln1079_2_fu_926_p2) & (ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_412_p4 == 1'd1))))) begin
        agg_tmp178_0_reg_453 <= newZtop_V_reg_395;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1144_fu_1202_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state305))) begin
        complementary_topL_jL_V_1_reg_365 <= complementary_topL_jL_V_3_reg_1619;
    end else if ((1'b1 == ap_CS_fsm_state246)) begin
        complementary_topL_jL_V_1_reg_365 <= complementary_topL_jL_V_reg_1455;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1144_fu_1202_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state305))) begin
        complementary_topL_jR_V_reg_345 <= complementary_topL_jR_V_4_reg_1583;
    end else if ((1'b1 == ap_CS_fsm_state246)) begin
        complementary_topL_jR_V_reg_345 <= complementary_topL_jR_V_3_reg_1404;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1144_fu_1202_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state305))) begin
        complementary_topR_jL_V_1_reg_355 <= complementary_topR_jL_V_3_reg_1613;
    end else if ((1'b1 == ap_CS_fsm_state246)) begin
        complementary_topR_jL_V_1_reg_355 <= complementary_topR_jL_V_reg_1450;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1144_fu_1202_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state305))) begin
        complementary_topR_jR_V_reg_315 <= complementary_topR_jR_V_4_reg_1576;
    end else if ((1'b1 == ap_CS_fsm_state246)) begin
        complementary_topR_jR_V_reg_315 <= complementary_topR_jR_V_3_reg_1386;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln1009_reg_1313) & (1'b1 == ap_CS_fsm_state7))) begin
        empty_69_reg_234 <= 1'd1;
    end else if (((1'd1 == and_ln1009_reg_1313) & (1'b1 == ap_CS_fsm_state53))) begin
        empty_69_reg_234 <= phitmp_fu_660_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln878_2_fu_678_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state55)) | ((grp_fu_540_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54)))) begin
        empty_70_reg_246 <= 1'd1;
    end else if (((icmp_ln878_2_reg_1377 == 1'd1) & (icmp_ln886_2_reg_1373 == 1'd1) & (1'b1 == ap_CS_fsm_state102))) begin
        empty_70_reg_246 <= phitmp4_fu_700_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln1019_reg_1395) & (1'b1 == ap_CS_fsm_state105))) begin
        empty_71_reg_261 <= 1'd1;
    end else if (((1'd1 == and_ln1019_reg_1395) & (1'b1 == ap_CS_fsm_state151))) begin
        empty_71_reg_261 <= phitmp3_fu_750_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln878_4_fu_772_p2 == 1'd0) & (icmp_ln886_4_fu_756_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state153)) | ((icmp_ln886_4_fu_756_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state153)))) begin
        empty_72_reg_273 <= 1'd1;
    end else if (((icmp_ln878_4_reg_1417 == 1'd1) & (icmp_ln886_4_reg_1413 == 1'd1) & (1'b1 == ap_CS_fsm_state200))) begin
        empty_72_reg_273 <= phitmp5_fu_794_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1144_fu_1202_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state305))) begin
        empty_73_reg_297 <= horizontalShiftBottom_1_reg_1650;
    end else if ((1'b1 == ap_CS_fsm_state246)) begin
        empty_73_reg_297 <= horizontalShiftBottom_fu_834_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1144_fu_1202_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state305))) begin
        empty_74_reg_306 <= horizontalShiftTop_1_reg_1635;
    end else if ((1'b1 == ap_CS_fsm_state246)) begin
        empty_74_reg_306 <= horizontalShiftTop_fu_830_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state200)) begin
        horizontalOverlapBottom_V_fu_114 <= 32'd4293967296;
    end else if (((icmp_ln878_6_reg_1655 == 1'd1) & (shiftOriginal_1_reg_1497 == 1'd1) & (1'b1 == ap_CS_fsm_state305))) begin
        horizontalOverlapBottom_V_fu_114 <= horizontalOverlapBottom_V_1_reg_1664;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state200)) begin
        horizontalOverlapTop_V_fu_118 <= 32'd4293967296;
    end else if (((icmp_ln878_6_reg_1655 == 1'd1) & (shiftOriginal_1_reg_1497 == 1'd1) & (1'b1 == ap_CS_fsm_state305))) begin
        horizontalOverlapTop_V_fu_118 <= horizontalOverlapTop_V_1_reg_1659;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1144_fu_1202_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state305))) begin
        loopCounter_reg_431 <= loopCounter_2_reg_1532;
    end else if ((1'b1 == ap_CS_fsm_state246)) begin
        loopCounter_reg_431 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1144_fu_1202_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state305))) begin
        makeHorizontallyShiftedPatch_reg_407 <= 1'd1;
    end else if ((1'b1 == ap_CS_fsm_state246)) begin
        makeHorizontallyShiftedPatch_reg_407 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1144_fu_1202_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state305))) begin
        newZtop_V_reg_395 <= newZtop_V_1_reg_1516;
    end else if ((1'b1 == ap_CS_fsm_state246)) begin
        newZtop_V_reg_395 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1144_fu_1202_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state305))) begin
        original_topL_jL_V_reg_325 <= original_topL_jL_V_4_reg_1603;
    end else if ((1'b1 == ap_CS_fsm_state246)) begin
        original_topL_jL_V_reg_325 <= original_topL_jL_V_3_reg_1365;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1144_fu_1202_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state305))) begin
        original_topL_jR_V_1_reg_385 <= original_topL_jR_V_3_reg_1597;
    end else if ((1'b1 == ap_CS_fsm_state246)) begin
        original_topL_jR_V_1_reg_385 <= patches_parameters_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1144_fu_1202_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state305))) begin
        original_topR_jL_V_1_reg_335 <= original_topR_jL_V_3_reg_1608;
    end else if ((1'b1 == ap_CS_fsm_state246)) begin
        original_topR_jL_V_1_reg_335 <= original_topR_jL_V_reg_1306;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1144_fu_1202_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state305))) begin
        original_topR_jR_V_1_reg_375 <= original_topR_jR_V_3_reg_1590;
    end else if ((1'b1 == ap_CS_fsm_state246)) begin
        original_topR_jR_V_1_reg_375 <= patches_parameters_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1144_fu_1202_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state305))) begin
        phi_ln166_reg_443 <= trunc_ln1047_1_reg_1555;
    end else if (((1'b1 == ap_CS_fsm_state247) & (((or_ln1079_1_fu_907_p2 == 1'd1) & (1'd0 == and_ln1079_1_fu_965_p2) & (ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_412_p4 == 1'd1)) | ((or_ln1079_1_fu_907_p2 == 1'd0) & (1'd0 == and_ln1079_2_fu_926_p2) & (ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_412_p4 == 1'd1))))) begin
        phi_ln166_reg_443 <= trunc_ln1047_fu_887_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1144_fu_1202_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state305))) begin
        ppl_assign_0_reg_287 <= ppl_assign1_reg_1566;
    end else if ((1'b1 == ap_CS_fsm_state246)) begin
        ppl_assign_0_reg_287 <= ppl;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1144_fu_1202_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state305))) begin
        shifted_Align_2_reg_421 <= shifted_Align_5_reg_1550;
    end else if ((1'b1 == ap_CS_fsm_state246)) begin
        shifted_Align_2_reg_421 <= sext_ln1059_fu_860_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state249)) begin
        add_ln1099_reg_1561 <= add_ln1099_fu_1015_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state253)) begin
        add_ln1105_reg_1571 <= add_ln1105_fu_1026_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        and_ln1009_reg_1313 <= and_ln1009_fu_614_p2;
        original_topR_jL_V_reg_1306 <= patches_parameters_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        and_ln1019_reg_1395 <= and_ln1019_fu_728_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln1079_1_fu_907_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state247))) begin
        and_ln1079_1_reg_1541 <= and_ln1079_1_fu_965_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln1079_1_fu_907_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state247))) begin
        and_ln1079_2_reg_1537 <= and_ln1079_2_fu_926_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state352)) begin
        and_ln1154_reg_1672 <= and_ln1154_fu_1214_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state258)) begin
        complementary_topL_jL_V_3_reg_1619 <= complementary_topL_jL_V_3_fu_1081_p3;
        complementary_topR_jL_V_3_reg_1613 <= complementary_topR_jL_V_3_fu_1074_p3;
        horizontalShiftBottom_1_reg_1650 <= horizontalShiftBottom_1_fu_1107_p2;
        horizontalShiftTop_1_reg_1635 <= horizontalShiftTop_1_fu_1095_p2;
        original_topL_jL_V_4_reg_1603 <= original_topL_jL_V_4_fu_1060_p3;
        original_topR_jL_V_3_reg_1608 <= original_topR_jL_V_3_fu_1067_p3;
        sext_ln215_17_reg_1625 <= sext_ln215_17_fu_1088_p1;
        sext_ln215_18_reg_1630 <= sext_ln215_18_fu_1092_p1;
        sext_ln215_19_reg_1640 <= sext_ln215_19_fu_1100_p1;
        sext_ln215_20_reg_1645 <= sext_ln215_20_fu_1104_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state245)) begin
        complementary_topL_jL_V_reg_1455 <= patches_parameters_q0;
        complementary_topR_jL_V_reg_1450 <= patches_parameters_q1;
        tmp_14_reg_1465 <= grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_dout0[32'd31];
        z0_complementary_cCorner_V_reg_1460 <= grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state152)) begin
        complementary_topL_jR_V_3_reg_1404 <= patches_parameters_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state257)) begin
        complementary_topL_jR_V_4_reg_1583 <= complementary_topL_jR_V_4_fu_1039_p3;
        complementary_topR_jR_V_4_reg_1576 <= complementary_topR_jR_V_4_fu_1032_p3;
        original_topL_jR_V_3_reg_1597 <= original_topL_jR_V_3_fu_1053_p3;
        original_topR_jR_V_3_reg_1590 <= original_topR_jR_V_3_fu_1046_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state103)) begin
        complementary_topR_jR_V_3_reg_1386 <= patches_parameters_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        empty_reg_1251 <= empty_fu_571_p1;
        icmp_ln993_reg_1257 <= icmp_ln993_fu_576_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_6_fu_1112_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state304))) begin
        horizontalOverlapBottom_V_1_reg_1664 <= horizontalOverlapBottom_V_1_fu_1186_p3;
        horizontalOverlapTop_V_1_reg_1659 <= horizontalOverlapTop_V_1_fu_1148_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln1154_fu_1214_p2) & (1'b1 == ap_CS_fsm_state352))) begin
        icmp_ln1156_reg_1676 <= icmp_ln1156_fu_1219_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        icmp_ln878_2_reg_1377 <= icmp_ln878_2_fu_678_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln886_4_fu_756_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state153))) begin
        icmp_ln878_4_reg_1417 <= icmp_ln878_4_fu_772_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state304)) begin
        icmp_ln878_6_reg_1655 <= icmp_ln878_6_fu_1112_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        icmp_ln886_2_reg_1373 <= grp_fu_540_p2;
        original_topL_jL_V_3_reg_1365 <= patches_parameters_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state153)) begin
        icmp_ln886_4_reg_1413 <= icmp_ln886_4_fu_756_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state246)) begin
        lnot_reg_1511 <= lnot_fu_876_p2;
        newZtop_V_1_reg_1516 <= newZtop_V_1_fu_881_p3;
        shiftOriginal_1_reg_1497 <= shiftOriginal_1_fu_864_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state247)) begin
        loopCounter_2_reg_1532 <= loopCounter_2_fu_912_p2;
        or_ln1079_1_reg_1528 <= or_ln1079_1_fu_907_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state201)) begin
        or_ln1079_2_reg_1445 <= or_ln1079_2_fu_816_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state200)) begin
        or_ln1079_reg_1440 <= or_ln1079_fu_800_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        patches_parameters_addr_14_reg_1350[4 : 3] <= select_ln1032_fu_628_p3[4 : 3];
        patches_parameters_addr_15_reg_1355[4 : 3] <= select_ln1033_fu_636_p3[4 : 3];
        patches_parameters_addr_9_reg_1345[4 : 3] <= select_ln1008_fu_620_p3[4 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state252)) begin
        ppl_assign1_reg_1566 <= grp_makePatch_alignedToLine_fu_464_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state351) | (1'b1 == ap_CS_fsm_state303) | (1'b1 == ap_CS_fsm_state199) | (1'b1 == ap_CS_fsm_state150) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state52))) begin
        reg_556 <= grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd1 == and_ln1154_fu_1214_p2) & (1'b1 == ap_CS_fsm_state352)) | ((makeHorizontallyShiftedPatch_reg_407 == 1'd1) & (1'b1 == ap_CS_fsm_state248)))) begin
        reg_560 <= n_patches_i;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        secondLastPatchIndex_1_reg_1272 <= secondLastPatchIndex_1_fu_587_p3;
        xor_ln1006_reg_1277 <= xor_ln1006_fu_594_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln993_reg_1257 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        secondLastPatchIndex_reg_1267 <= secondLastPatchIndex_fu_582_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state247) & (((or_ln1079_1_fu_907_p2 == 1'd1) & (1'd1 == and_ln1079_1_fu_965_p2)) | ((or_ln1079_1_fu_907_p2 == 1'd0) & (1'd1 == and_ln1079_2_fu_926_p2))))) begin
        select_ln534_reg_1545 <= select_ln534_fu_977_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state248)) begin
        shifted_Align_5_reg_1550 <= shifted_Align_5_fu_1000_p3;
        trunc_ln1047_1_reg_1555 <= trunc_ln1047_1_fu_1007_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state353)) begin
        zext_ln1158_reg_1680[7 : 0] <= zext_ln1158_fu_1231_p1[7 : 0];
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_state354_on_subcall_done) & (1'b1 == ap_CS_fsm_state354)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state354_on_subcall_done) & (1'b1 == ap_CS_fsm_state354))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state354) & ((((icmp_ln1156_reg_1676 == 1'd1) & (or_ln1079_1_reg_1528 == 1'd1) & (1'd1 == and_ln1154_reg_1672) & (1'd1 == and_ln1079_1_reg_1541)) | ((icmp_ln1156_reg_1676 == 1'd1) & (1'd1 == and_ln1154_reg_1672) & (makeHorizontallyShiftedPatch_reg_407 == 1'd1))) | ((icmp_ln1156_reg_1676 == 1'd1) & (or_ln1079_1_reg_1528 == 1'd0) & (1'd1 == and_ln1154_reg_1672) & (1'd1 == and_ln1079_2_reg_1537))))) begin
        grp_delete_patch_fu_528_index = zext_ln1158_reg_1680;
    end else if (((makeHorizontallyShiftedPatch_reg_407 == 1'd1) & (1'b1 == ap_CS_fsm_state250))) begin
        grp_delete_patch_fu_528_index = add_ln1099_reg_1561;
    end else begin
        grp_delete_patch_fu_528_index = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_getShadows_fu_487_wp_parameters_offset = xor_ln1006_reg_1277;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state255))) begin
        grp_getShadows_fu_487_wp_parameters_offset = 1'd0;
    end else begin
        grp_getShadows_fu_487_wp_parameters_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state255)) begin
        grp_getShadows_fu_487_wp_superpoints_offset = add_ln1105_reg_1571;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_getShadows_fu_487_wp_superpoints_offset = secondLastPatchIndex_1_reg_1272;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_getShadows_fu_487_wp_superpoints_offset = empty_reg_1251;
    end else begin
        grp_getShadows_fu_487_wp_superpoints_offset = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state353) | (1'b1 == ap_CS_fsm_state304) | (1'b1 == ap_CS_fsm_state257) | (1'b1 == ap_CS_fsm_state253) | (1'b1 == ap_CS_fsm_state252) | (1'b1 == ap_CS_fsm_state249) | (1'b1 == ap_CS_fsm_state247) | (1'b1 == ap_CS_fsm_state246) | (1'b1 == ap_CS_fsm_state153) | (1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state352) | (1'b1 == ap_CS_fsm_state248) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state354) | (1'b1 == ap_CS_fsm_state305) | (1'b1 == ap_CS_fsm_state256) | (1'b1 == ap_CS_fsm_state255) | (1'b1 == ap_CS_fsm_state254) | (1'b1 == ap_CS_fsm_state251) | (1'b1 == ap_CS_fsm_state250) | (1'b1 == ap_CS_fsm_state4))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_502_ap_ce = 1'b0;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_502_ap_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state306)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_502_z_i = phi_ln166_reg_443;
    end else if (((shiftOriginal_1_reg_1497 == 1'd1) & (1'b1 == ap_CS_fsm_state258))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_502_z_i = original_topR_jR_V_3_reg_1590;
    end else if ((1'b1 == ap_CS_fsm_state200)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_502_z_i = apexZ0;
    end else if ((1'b1 == ap_CS_fsm_state154)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_502_z_i = complementary_topL_jR_V_3_reg_1404;
    end else if (((1'd1 == and_ln1019_reg_1395) & (1'b1 == ap_CS_fsm_state105))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_502_z_i = complementary_topR_jR_V_3_reg_1386;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_502_z_i = original_topL_jL_V_3_reg_1365;
    end else if (((1'd1 == and_ln1009_reg_1313) & (1'b1 == ap_CS_fsm_state7))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_502_z_i = original_topR_jL_V_reg_1306;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_502_z_i = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state306)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_502_z_j = agg_tmp178_0_reg_453;
    end else if (((1'b1 == ap_CS_fsm_state154) | (1'b1 == ap_CS_fsm_state56))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_502_z_j = z_top_min;
    end else if (((1'b1 == ap_CS_fsm_state200) | ((shiftOriginal_1_reg_1497 == 1'd1) & (1'b1 == ap_CS_fsm_state258)) | ((1'd1 == and_ln1019_reg_1395) & (1'b1 == ap_CS_fsm_state105)) | ((1'd1 == and_ln1009_reg_1313) & (1'b1 == ap_CS_fsm_state7)))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_502_z_j = z_top_max;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_502_z_j = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state245) | (1'b1 == ap_CS_fsm_state201) | (1'b1 == ap_CS_fsm_state200) | (1'b1 == ap_CS_fsm_state244) | (1'b1 == ap_CS_fsm_state243) | (1'b1 == ap_CS_fsm_state242) | (1'b1 == ap_CS_fsm_state241) | (1'b1 == ap_CS_fsm_state240) | (1'b1 == ap_CS_fsm_state239) | (1'b1 == ap_CS_fsm_state238) | (1'b1 == ap_CS_fsm_state237) | (1'b1 == ap_CS_fsm_state236) | (1'b1 == ap_CS_fsm_state235) | (1'b1 == ap_CS_fsm_state234) | (1'b1 == ap_CS_fsm_state233) | (1'b1 == ap_CS_fsm_state232) | (1'b1 == ap_CS_fsm_state231) | (1'b1 == ap_CS_fsm_state230) | (1'b1 == ap_CS_fsm_state229) | (1'b1 == ap_CS_fsm_state228) | (1'b1 == ap_CS_fsm_state227) | (1'b1 == ap_CS_fsm_state226) | (1'b1 == ap_CS_fsm_state225) | (1'b1 == ap_CS_fsm_state224) | (1'b1 == ap_CS_fsm_state223) | (1'b1 == ap_CS_fsm_state222) | (1'b1 == ap_CS_fsm_state221) | (1'b1 == ap_CS_fsm_state220) | (1'b1 == ap_CS_fsm_state219) | (1'b1 == ap_CS_fsm_state218) | (1'b1 == ap_CS_fsm_state217) | (1'b1 == ap_CS_fsm_state216) | (1'b1 == ap_CS_fsm_state215) | (1'b1 == ap_CS_fsm_state214) | (1'b1 == ap_CS_fsm_state213) | (1'b1 == ap_CS_fsm_state212) | (1'b1 == ap_CS_fsm_state211) | (1'b1 == ap_CS_fsm_state210) | (1'b1 == ap_CS_fsm_state209) | (1'b1 == ap_CS_fsm_state208) | (1'b1 == ap_CS_fsm_state207) | (1'b1 == ap_CS_fsm_state206) | (1'b1 == ap_CS_fsm_state205) | (1'b1 == ap_CS_fsm_state204) | (1'b1 == ap_CS_fsm_state203) | (1'b1 == ap_CS_fsm_state202))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_514_ap_ce = 1'b1;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_514_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((makeHorizontallyShiftedPatch_reg_407 == 1'd1) & (grp_delete_patch_fu_528_n_patches_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state250)) | ((grp_delete_patch_fu_528_n_patches_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state354) & ((((icmp_ln1156_reg_1676 == 1'd1) & (or_ln1079_1_reg_1528 == 1'd1) & (1'd1 == and_ln1154_reg_1672) & (1'd1 == and_ln1079_1_reg_1541)) | ((icmp_ln1156_reg_1676 == 1'd1) & (1'd1 == and_ln1154_reg_1672) & (makeHorizontallyShiftedPatch_reg_407 == 1'd1))) | ((icmp_ln1156_reg_1676 == 1'd1) & (or_ln1079_1_reg_1528 == 1'd0) & (1'd1 == and_ln1154_reg_1672) & (1'd1 == and_ln1079_2_reg_1537)))))) begin
        n_patches_o = grp_delete_patch_fu_528_n_patches;
    end else if (((grp_makePatch_alignedToLine_fu_464_n_patches_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state252))) begin
        n_patches_o = grp_makePatch_alignedToLine_fu_464_n_patches_o;
    end else begin
        n_patches_o = n_patches_i;
    end
end

always @ (*) begin
    if ((((makeHorizontallyShiftedPatch_reg_407 == 1'd1) & (1'b1 == ap_CS_fsm_state250)) | ((1'b1 == ap_CS_fsm_state354) & ((((icmp_ln1156_reg_1676 == 1'd1) & (or_ln1079_1_reg_1528 == 1'd1) & (1'd1 == and_ln1154_reg_1672) & (1'd1 == and_ln1079_1_reg_1541)) | ((icmp_ln1156_reg_1676 == 1'd1) & (1'd1 == and_ln1154_reg_1672) & (makeHorizontallyShiftedPatch_reg_407 == 1'd1))) | ((icmp_ln1156_reg_1676 == 1'd1) & (or_ln1079_1_reg_1528 == 1'd0) & (1'd1 == and_ln1154_reg_1672) & (1'd1 == and_ln1079_2_reg_1537)))))) begin
        n_patches_o_ap_vld = grp_delete_patch_fu_528_n_patches_ap_vld;
    end else if ((1'b1 == ap_CS_fsm_state252)) begin
        n_patches_o_ap_vld = grp_makePatch_alignedToLine_fu_464_n_patches_o_ap_vld;
    end else begin
        n_patches_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state257)) begin
        patches_parameters_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state245)) begin
        patches_parameters_address0 = patches_parameters_addr_14_reg_1350;
    end else if ((1'b1 == ap_CS_fsm_state244)) begin
        patches_parameters_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state151)) begin
        patches_parameters_address0 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state256))) begin
        patches_parameters_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        patches_parameters_address0 = patches_parameters_addr_9_reg_1345;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        patches_parameters_address0 = select_ln1008_1_fu_600_p3;
    end else if ((((makeHorizontallyShiftedPatch_reg_407 == 1'd1) & (1'b1 == ap_CS_fsm_state250)) | ((1'b1 == ap_CS_fsm_state354) & ((((icmp_ln1156_reg_1676 == 1'd1) & (or_ln1079_1_reg_1528 == 1'd1) & (1'd1 == and_ln1154_reg_1672) & (1'd1 == and_ln1079_1_reg_1541)) | ((icmp_ln1156_reg_1676 == 1'd1) & (1'd1 == and_ln1154_reg_1672) & (makeHorizontallyShiftedPatch_reg_407 == 1'd1))) | ((icmp_ln1156_reg_1676 == 1'd1) & (or_ln1079_1_reg_1528 == 1'd0) & (1'd1 == and_ln1154_reg_1672) & (1'd1 == and_ln1079_2_reg_1537)))))) begin
        patches_parameters_address0 = grp_delete_patch_fu_528_patches_parameters_address0;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state255) | (1'b1 == ap_CS_fsm_state4))) begin
        patches_parameters_address0 = grp_getShadows_fu_487_wp_parameters_address0;
    end else if ((1'b1 == ap_CS_fsm_state252)) begin
        patches_parameters_address0 = grp_makePatch_alignedToLine_fu_464_patches_parameters_address0;
    end else begin
        patches_parameters_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state257)) begin
        patches_parameters_address1 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state256)) begin
        patches_parameters_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state245)) begin
        patches_parameters_address1 = patches_parameters_addr_15_reg_1355;
    end else if ((1'b1 == ap_CS_fsm_state244)) begin
        patches_parameters_address1 = 64'd4;
    end else if ((((makeHorizontallyShiftedPatch_reg_407 == 1'd1) & (1'b1 == ap_CS_fsm_state250)) | ((1'b1 == ap_CS_fsm_state354) & ((((icmp_ln1156_reg_1676 == 1'd1) & (or_ln1079_1_reg_1528 == 1'd1) & (1'd1 == and_ln1154_reg_1672) & (1'd1 == and_ln1079_1_reg_1541)) | ((icmp_ln1156_reg_1676 == 1'd1) & (1'd1 == and_ln1154_reg_1672) & (makeHorizontallyShiftedPatch_reg_407 == 1'd1))) | ((icmp_ln1156_reg_1676 == 1'd1) & (or_ln1079_1_reg_1528 == 1'd0) & (1'd1 == and_ln1154_reg_1672) & (1'd1 == and_ln1079_2_reg_1537)))))) begin
        patches_parameters_address1 = grp_delete_patch_fu_528_patches_parameters_address1;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state255) | (1'b1 == ap_CS_fsm_state4))) begin
        patches_parameters_address1 = grp_getShadows_fu_487_wp_parameters_address1;
    end else begin
        patches_parameters_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state257) | (1'b1 == ap_CS_fsm_state245) | (1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state256) | (1'b1 == ap_CS_fsm_state244))) begin
        patches_parameters_ce0 = 1'b1;
    end else if ((((makeHorizontallyShiftedPatch_reg_407 == 1'd1) & (1'b1 == ap_CS_fsm_state250)) | ((1'b1 == ap_CS_fsm_state354) & ((((icmp_ln1156_reg_1676 == 1'd1) & (or_ln1079_1_reg_1528 == 1'd1) & (1'd1 == and_ln1154_reg_1672) & (1'd1 == and_ln1079_1_reg_1541)) | ((icmp_ln1156_reg_1676 == 1'd1) & (1'd1 == and_ln1154_reg_1672) & (makeHorizontallyShiftedPatch_reg_407 == 1'd1))) | ((icmp_ln1156_reg_1676 == 1'd1) & (or_ln1079_1_reg_1528 == 1'd0) & (1'd1 == and_ln1154_reg_1672) & (1'd1 == and_ln1079_2_reg_1537)))))) begin
        patches_parameters_ce0 = grp_delete_patch_fu_528_patches_parameters_ce0;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state255) | (1'b1 == ap_CS_fsm_state4))) begin
        patches_parameters_ce0 = grp_getShadows_fu_487_wp_parameters_ce0;
    end else if ((1'b1 == ap_CS_fsm_state252)) begin
        patches_parameters_ce0 = grp_makePatch_alignedToLine_fu_464_patches_parameters_ce0;
    end else begin
        patches_parameters_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state257) | (1'b1 == ap_CS_fsm_state245) | (1'b1 == ap_CS_fsm_state256) | (1'b1 == ap_CS_fsm_state244))) begin
        patches_parameters_ce1 = 1'b1;
    end else if ((((makeHorizontallyShiftedPatch_reg_407 == 1'd1) & (1'b1 == ap_CS_fsm_state250)) | ((1'b1 == ap_CS_fsm_state354) & ((((icmp_ln1156_reg_1676 == 1'd1) & (or_ln1079_1_reg_1528 == 1'd1) & (1'd1 == and_ln1154_reg_1672) & (1'd1 == and_ln1079_1_reg_1541)) | ((icmp_ln1156_reg_1676 == 1'd1) & (1'd1 == and_ln1154_reg_1672) & (makeHorizontallyShiftedPatch_reg_407 == 1'd1))) | ((icmp_ln1156_reg_1676 == 1'd1) & (or_ln1079_1_reg_1528 == 1'd0) & (1'd1 == and_ln1154_reg_1672) & (1'd1 == and_ln1079_2_reg_1537)))))) begin
        patches_parameters_ce1 = grp_delete_patch_fu_528_patches_parameters_ce1;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state255) | (1'b1 == ap_CS_fsm_state4))) begin
        patches_parameters_ce1 = grp_getShadows_fu_487_wp_parameters_ce1;
    end else begin
        patches_parameters_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((makeHorizontallyShiftedPatch_reg_407 == 1'd1) & (1'b1 == ap_CS_fsm_state250)) | ((1'b1 == ap_CS_fsm_state354) & ((((icmp_ln1156_reg_1676 == 1'd1) & (or_ln1079_1_reg_1528 == 1'd1) & (1'd1 == and_ln1154_reg_1672) & (1'd1 == and_ln1079_1_reg_1541)) | ((icmp_ln1156_reg_1676 == 1'd1) & (1'd1 == and_ln1154_reg_1672) & (makeHorizontallyShiftedPatch_reg_407 == 1'd1))) | ((icmp_ln1156_reg_1676 == 1'd1) & (or_ln1079_1_reg_1528 == 1'd0) & (1'd1 == and_ln1154_reg_1672) & (1'd1 == and_ln1079_2_reg_1537)))))) begin
        patches_parameters_d0 = grp_delete_patch_fu_528_patches_parameters_d0;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state255) | (1'b1 == ap_CS_fsm_state4))) begin
        patches_parameters_d0 = grp_getShadows_fu_487_wp_parameters_d0;
    end else if ((1'b1 == ap_CS_fsm_state252)) begin
        patches_parameters_d0 = grp_makePatch_alignedToLine_fu_464_patches_parameters_d0;
    end else begin
        patches_parameters_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((makeHorizontallyShiftedPatch_reg_407 == 1'd1) & (1'b1 == ap_CS_fsm_state250)) | ((1'b1 == ap_CS_fsm_state354) & ((((icmp_ln1156_reg_1676 == 1'd1) & (or_ln1079_1_reg_1528 == 1'd1) & (1'd1 == and_ln1154_reg_1672) & (1'd1 == and_ln1079_1_reg_1541)) | ((icmp_ln1156_reg_1676 == 1'd1) & (1'd1 == and_ln1154_reg_1672) & (makeHorizontallyShiftedPatch_reg_407 == 1'd1))) | ((icmp_ln1156_reg_1676 == 1'd1) & (or_ln1079_1_reg_1528 == 1'd0) & (1'd1 == and_ln1154_reg_1672) & (1'd1 == and_ln1079_2_reg_1537)))))) begin
        patches_parameters_we0 = grp_delete_patch_fu_528_patches_parameters_we0;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state255) | (1'b1 == ap_CS_fsm_state4))) begin
        patches_parameters_we0 = grp_getShadows_fu_487_wp_parameters_we0;
    end else if ((1'b1 == ap_CS_fsm_state252)) begin
        patches_parameters_we0 = grp_makePatch_alignedToLine_fu_464_patches_parameters_we0;
    end else begin
        patches_parameters_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state255) | (1'b1 == ap_CS_fsm_state4))) begin
        patches_parameters_we1 = grp_getShadows_fu_487_wp_parameters_we1;
    end else begin
        patches_parameters_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((makeHorizontallyShiftedPatch_reg_407 == 1'd1) & (1'b1 == ap_CS_fsm_state250)) | ((1'b1 == ap_CS_fsm_state354) & ((((icmp_ln1156_reg_1676 == 1'd1) & (or_ln1079_1_reg_1528 == 1'd1) & (1'd1 == and_ln1154_reg_1672) & (1'd1 == and_ln1079_1_reg_1541)) | ((icmp_ln1156_reg_1676 == 1'd1) & (1'd1 == and_ln1154_reg_1672) & (makeHorizontallyShiftedPatch_reg_407 == 1'd1))) | ((icmp_ln1156_reg_1676 == 1'd1) & (or_ln1079_1_reg_1528 == 1'd0) & (1'd1 == and_ln1154_reg_1672) & (1'd1 == and_ln1079_2_reg_1537)))))) begin
        patches_superpoints_address0 = grp_delete_patch_fu_528_patches_superpoints_address0;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state255) | (1'b1 == ap_CS_fsm_state4))) begin
        patches_superpoints_address0 = grp_getShadows_fu_487_wp_superpoints_address0;
    end else if ((1'b1 == ap_CS_fsm_state252)) begin
        patches_superpoints_address0 = grp_makePatch_alignedToLine_fu_464_patches_superpoints_address0;
    end else begin
        patches_superpoints_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((makeHorizontallyShiftedPatch_reg_407 == 1'd1) & (1'b1 == ap_CS_fsm_state250)) | ((1'b1 == ap_CS_fsm_state354) & ((((icmp_ln1156_reg_1676 == 1'd1) & (or_ln1079_1_reg_1528 == 1'd1) & (1'd1 == and_ln1154_reg_1672) & (1'd1 == and_ln1079_1_reg_1541)) | ((icmp_ln1156_reg_1676 == 1'd1) & (1'd1 == and_ln1154_reg_1672) & (makeHorizontallyShiftedPatch_reg_407 == 1'd1))) | ((icmp_ln1156_reg_1676 == 1'd1) & (or_ln1079_1_reg_1528 == 1'd0) & (1'd1 == and_ln1154_reg_1672) & (1'd1 == and_ln1079_2_reg_1537)))))) begin
        patches_superpoints_ce0 = grp_delete_patch_fu_528_patches_superpoints_ce0;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state255) | (1'b1 == ap_CS_fsm_state4))) begin
        patches_superpoints_ce0 = grp_getShadows_fu_487_wp_superpoints_ce0;
    end else if ((1'b1 == ap_CS_fsm_state252)) begin
        patches_superpoints_ce0 = grp_makePatch_alignedToLine_fu_464_patches_superpoints_ce0;
    end else begin
        patches_superpoints_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((makeHorizontallyShiftedPatch_reg_407 == 1'd1) & (1'b1 == ap_CS_fsm_state250)) | ((1'b1 == ap_CS_fsm_state354) & ((((icmp_ln1156_reg_1676 == 1'd1) & (or_ln1079_1_reg_1528 == 1'd1) & (1'd1 == and_ln1154_reg_1672) & (1'd1 == and_ln1079_1_reg_1541)) | ((icmp_ln1156_reg_1676 == 1'd1) & (1'd1 == and_ln1154_reg_1672) & (makeHorizontallyShiftedPatch_reg_407 == 1'd1))) | ((icmp_ln1156_reg_1676 == 1'd1) & (or_ln1079_1_reg_1528 == 1'd0) & (1'd1 == and_ln1154_reg_1672) & (1'd1 == and_ln1079_2_reg_1537)))))) begin
        patches_superpoints_ce1 = grp_delete_patch_fu_528_patches_superpoints_ce1;
    end else begin
        patches_superpoints_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((makeHorizontallyShiftedPatch_reg_407 == 1'd1) & (1'b1 == ap_CS_fsm_state250)) | ((1'b1 == ap_CS_fsm_state354) & ((((icmp_ln1156_reg_1676 == 1'd1) & (or_ln1079_1_reg_1528 == 1'd1) & (1'd1 == and_ln1154_reg_1672) & (1'd1 == and_ln1079_1_reg_1541)) | ((icmp_ln1156_reg_1676 == 1'd1) & (1'd1 == and_ln1154_reg_1672) & (makeHorizontallyShiftedPatch_reg_407 == 1'd1))) | ((icmp_ln1156_reg_1676 == 1'd1) & (or_ln1079_1_reg_1528 == 1'd0) & (1'd1 == and_ln1154_reg_1672) & (1'd1 == and_ln1079_2_reg_1537)))))) begin
        patches_superpoints_d0 = grp_delete_patch_fu_528_patches_superpoints_d0;
    end else if ((1'b1 == ap_CS_fsm_state252)) begin
        patches_superpoints_d0 = grp_makePatch_alignedToLine_fu_464_patches_superpoints_d0;
    end else begin
        patches_superpoints_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((makeHorizontallyShiftedPatch_reg_407 == 1'd1) & (1'b1 == ap_CS_fsm_state250)) | ((1'b1 == ap_CS_fsm_state354) & ((((icmp_ln1156_reg_1676 == 1'd1) & (or_ln1079_1_reg_1528 == 1'd1) & (1'd1 == and_ln1154_reg_1672) & (1'd1 == and_ln1079_1_reg_1541)) | ((icmp_ln1156_reg_1676 == 1'd1) & (1'd1 == and_ln1154_reg_1672) & (makeHorizontallyShiftedPatch_reg_407 == 1'd1))) | ((icmp_ln1156_reg_1676 == 1'd1) & (or_ln1079_1_reg_1528 == 1'd0) & (1'd1 == and_ln1154_reg_1672) & (1'd1 == and_ln1079_2_reg_1537)))))) begin
        patches_superpoints_we0 = grp_delete_patch_fu_528_patches_superpoints_we0;
    end else if ((1'b1 == ap_CS_fsm_state252)) begin
        patches_superpoints_we0 = grp_makePatch_alignedToLine_fu_464_patches_superpoints_we0;
    end else begin
        patches_superpoints_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_getShadows_fu_487_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_getShadows_fu_487_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'd0 == and_ln1009_reg_1313) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            if (((grp_fu_540_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
                ap_NS_fsm = ap_ST_fsm_state102;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        ap_ST_fsm_state55 : begin
            if (((icmp_ln878_2_fu_678_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state55))) begin
                ap_NS_fsm = ap_ST_fsm_state102;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            if (((1'd0 == and_ln1019_reg_1395) & (1'b1 == ap_CS_fsm_state105))) begin
                ap_NS_fsm = ap_ST_fsm_state151;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state106;
            end
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state153 : begin
            if (((icmp_ln878_4_fu_772_p2 == 1'd1) & (icmp_ln886_4_fu_756_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state153))) begin
                ap_NS_fsm = ap_ST_fsm_state154;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state200;
            end
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state156;
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state157;
        end
        ap_ST_fsm_state157 : begin
            ap_NS_fsm = ap_ST_fsm_state158;
        end
        ap_ST_fsm_state158 : begin
            ap_NS_fsm = ap_ST_fsm_state159;
        end
        ap_ST_fsm_state159 : begin
            ap_NS_fsm = ap_ST_fsm_state160;
        end
        ap_ST_fsm_state160 : begin
            ap_NS_fsm = ap_ST_fsm_state161;
        end
        ap_ST_fsm_state161 : begin
            ap_NS_fsm = ap_ST_fsm_state162;
        end
        ap_ST_fsm_state162 : begin
            ap_NS_fsm = ap_ST_fsm_state163;
        end
        ap_ST_fsm_state163 : begin
            ap_NS_fsm = ap_ST_fsm_state164;
        end
        ap_ST_fsm_state164 : begin
            ap_NS_fsm = ap_ST_fsm_state165;
        end
        ap_ST_fsm_state165 : begin
            ap_NS_fsm = ap_ST_fsm_state166;
        end
        ap_ST_fsm_state166 : begin
            ap_NS_fsm = ap_ST_fsm_state167;
        end
        ap_ST_fsm_state167 : begin
            ap_NS_fsm = ap_ST_fsm_state168;
        end
        ap_ST_fsm_state168 : begin
            ap_NS_fsm = ap_ST_fsm_state169;
        end
        ap_ST_fsm_state169 : begin
            ap_NS_fsm = ap_ST_fsm_state170;
        end
        ap_ST_fsm_state170 : begin
            ap_NS_fsm = ap_ST_fsm_state171;
        end
        ap_ST_fsm_state171 : begin
            ap_NS_fsm = ap_ST_fsm_state172;
        end
        ap_ST_fsm_state172 : begin
            ap_NS_fsm = ap_ST_fsm_state173;
        end
        ap_ST_fsm_state173 : begin
            ap_NS_fsm = ap_ST_fsm_state174;
        end
        ap_ST_fsm_state174 : begin
            ap_NS_fsm = ap_ST_fsm_state175;
        end
        ap_ST_fsm_state175 : begin
            ap_NS_fsm = ap_ST_fsm_state176;
        end
        ap_ST_fsm_state176 : begin
            ap_NS_fsm = ap_ST_fsm_state177;
        end
        ap_ST_fsm_state177 : begin
            ap_NS_fsm = ap_ST_fsm_state178;
        end
        ap_ST_fsm_state178 : begin
            ap_NS_fsm = ap_ST_fsm_state179;
        end
        ap_ST_fsm_state179 : begin
            ap_NS_fsm = ap_ST_fsm_state180;
        end
        ap_ST_fsm_state180 : begin
            ap_NS_fsm = ap_ST_fsm_state181;
        end
        ap_ST_fsm_state181 : begin
            ap_NS_fsm = ap_ST_fsm_state182;
        end
        ap_ST_fsm_state182 : begin
            ap_NS_fsm = ap_ST_fsm_state183;
        end
        ap_ST_fsm_state183 : begin
            ap_NS_fsm = ap_ST_fsm_state184;
        end
        ap_ST_fsm_state184 : begin
            ap_NS_fsm = ap_ST_fsm_state185;
        end
        ap_ST_fsm_state185 : begin
            ap_NS_fsm = ap_ST_fsm_state186;
        end
        ap_ST_fsm_state186 : begin
            ap_NS_fsm = ap_ST_fsm_state187;
        end
        ap_ST_fsm_state187 : begin
            ap_NS_fsm = ap_ST_fsm_state188;
        end
        ap_ST_fsm_state188 : begin
            ap_NS_fsm = ap_ST_fsm_state189;
        end
        ap_ST_fsm_state189 : begin
            ap_NS_fsm = ap_ST_fsm_state190;
        end
        ap_ST_fsm_state190 : begin
            ap_NS_fsm = ap_ST_fsm_state191;
        end
        ap_ST_fsm_state191 : begin
            ap_NS_fsm = ap_ST_fsm_state192;
        end
        ap_ST_fsm_state192 : begin
            ap_NS_fsm = ap_ST_fsm_state193;
        end
        ap_ST_fsm_state193 : begin
            ap_NS_fsm = ap_ST_fsm_state194;
        end
        ap_ST_fsm_state194 : begin
            ap_NS_fsm = ap_ST_fsm_state195;
        end
        ap_ST_fsm_state195 : begin
            ap_NS_fsm = ap_ST_fsm_state196;
        end
        ap_ST_fsm_state196 : begin
            ap_NS_fsm = ap_ST_fsm_state197;
        end
        ap_ST_fsm_state197 : begin
            ap_NS_fsm = ap_ST_fsm_state198;
        end
        ap_ST_fsm_state198 : begin
            ap_NS_fsm = ap_ST_fsm_state199;
        end
        ap_ST_fsm_state199 : begin
            ap_NS_fsm = ap_ST_fsm_state200;
        end
        ap_ST_fsm_state200 : begin
            ap_NS_fsm = ap_ST_fsm_state201;
        end
        ap_ST_fsm_state201 : begin
            ap_NS_fsm = ap_ST_fsm_state202;
        end
        ap_ST_fsm_state202 : begin
            ap_NS_fsm = ap_ST_fsm_state203;
        end
        ap_ST_fsm_state203 : begin
            ap_NS_fsm = ap_ST_fsm_state204;
        end
        ap_ST_fsm_state204 : begin
            ap_NS_fsm = ap_ST_fsm_state205;
        end
        ap_ST_fsm_state205 : begin
            ap_NS_fsm = ap_ST_fsm_state206;
        end
        ap_ST_fsm_state206 : begin
            ap_NS_fsm = ap_ST_fsm_state207;
        end
        ap_ST_fsm_state207 : begin
            ap_NS_fsm = ap_ST_fsm_state208;
        end
        ap_ST_fsm_state208 : begin
            ap_NS_fsm = ap_ST_fsm_state209;
        end
        ap_ST_fsm_state209 : begin
            ap_NS_fsm = ap_ST_fsm_state210;
        end
        ap_ST_fsm_state210 : begin
            ap_NS_fsm = ap_ST_fsm_state211;
        end
        ap_ST_fsm_state211 : begin
            ap_NS_fsm = ap_ST_fsm_state212;
        end
        ap_ST_fsm_state212 : begin
            ap_NS_fsm = ap_ST_fsm_state213;
        end
        ap_ST_fsm_state213 : begin
            ap_NS_fsm = ap_ST_fsm_state214;
        end
        ap_ST_fsm_state214 : begin
            ap_NS_fsm = ap_ST_fsm_state215;
        end
        ap_ST_fsm_state215 : begin
            ap_NS_fsm = ap_ST_fsm_state216;
        end
        ap_ST_fsm_state216 : begin
            ap_NS_fsm = ap_ST_fsm_state217;
        end
        ap_ST_fsm_state217 : begin
            ap_NS_fsm = ap_ST_fsm_state218;
        end
        ap_ST_fsm_state218 : begin
            ap_NS_fsm = ap_ST_fsm_state219;
        end
        ap_ST_fsm_state219 : begin
            ap_NS_fsm = ap_ST_fsm_state220;
        end
        ap_ST_fsm_state220 : begin
            ap_NS_fsm = ap_ST_fsm_state221;
        end
        ap_ST_fsm_state221 : begin
            ap_NS_fsm = ap_ST_fsm_state222;
        end
        ap_ST_fsm_state222 : begin
            ap_NS_fsm = ap_ST_fsm_state223;
        end
        ap_ST_fsm_state223 : begin
            ap_NS_fsm = ap_ST_fsm_state224;
        end
        ap_ST_fsm_state224 : begin
            ap_NS_fsm = ap_ST_fsm_state225;
        end
        ap_ST_fsm_state225 : begin
            ap_NS_fsm = ap_ST_fsm_state226;
        end
        ap_ST_fsm_state226 : begin
            ap_NS_fsm = ap_ST_fsm_state227;
        end
        ap_ST_fsm_state227 : begin
            ap_NS_fsm = ap_ST_fsm_state228;
        end
        ap_ST_fsm_state228 : begin
            ap_NS_fsm = ap_ST_fsm_state229;
        end
        ap_ST_fsm_state229 : begin
            ap_NS_fsm = ap_ST_fsm_state230;
        end
        ap_ST_fsm_state230 : begin
            ap_NS_fsm = ap_ST_fsm_state231;
        end
        ap_ST_fsm_state231 : begin
            ap_NS_fsm = ap_ST_fsm_state232;
        end
        ap_ST_fsm_state232 : begin
            ap_NS_fsm = ap_ST_fsm_state233;
        end
        ap_ST_fsm_state233 : begin
            ap_NS_fsm = ap_ST_fsm_state234;
        end
        ap_ST_fsm_state234 : begin
            ap_NS_fsm = ap_ST_fsm_state235;
        end
        ap_ST_fsm_state235 : begin
            ap_NS_fsm = ap_ST_fsm_state236;
        end
        ap_ST_fsm_state236 : begin
            ap_NS_fsm = ap_ST_fsm_state237;
        end
        ap_ST_fsm_state237 : begin
            ap_NS_fsm = ap_ST_fsm_state238;
        end
        ap_ST_fsm_state238 : begin
            ap_NS_fsm = ap_ST_fsm_state239;
        end
        ap_ST_fsm_state239 : begin
            ap_NS_fsm = ap_ST_fsm_state240;
        end
        ap_ST_fsm_state240 : begin
            ap_NS_fsm = ap_ST_fsm_state241;
        end
        ap_ST_fsm_state241 : begin
            ap_NS_fsm = ap_ST_fsm_state242;
        end
        ap_ST_fsm_state242 : begin
            ap_NS_fsm = ap_ST_fsm_state243;
        end
        ap_ST_fsm_state243 : begin
            ap_NS_fsm = ap_ST_fsm_state244;
        end
        ap_ST_fsm_state244 : begin
            ap_NS_fsm = ap_ST_fsm_state245;
        end
        ap_ST_fsm_state245 : begin
            ap_NS_fsm = ap_ST_fsm_state246;
        end
        ap_ST_fsm_state246 : begin
            ap_NS_fsm = ap_ST_fsm_state247;
        end
        ap_ST_fsm_state247 : begin
            if (((1'b1 == ap_CS_fsm_state247) & (((or_ln1079_1_fu_907_p2 == 1'd1) & (1'd0 == and_ln1079_1_fu_965_p2) & (ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_412_p4 == 1'd0)) | ((or_ln1079_1_fu_907_p2 == 1'd0) & (1'd0 == and_ln1079_2_fu_926_p2) & (ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_412_p4 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state354;
            end else if (((1'b1 == ap_CS_fsm_state247) & (((or_ln1079_1_fu_907_p2 == 1'd1) & (1'd0 == and_ln1079_1_fu_965_p2) & (ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_412_p4 == 1'd1)) | ((or_ln1079_1_fu_907_p2 == 1'd0) & (1'd0 == and_ln1079_2_fu_926_p2) & (ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_412_p4 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state306;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state248;
            end
        end
        ap_ST_fsm_state248 : begin
            if (((makeHorizontallyShiftedPatch_reg_407 == 1'd0) & (1'b1 == ap_CS_fsm_state248))) begin
                ap_NS_fsm = ap_ST_fsm_state250;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state249;
            end
        end
        ap_ST_fsm_state249 : begin
            ap_NS_fsm = ap_ST_fsm_state250;
        end
        ap_ST_fsm_state250 : begin
            if (((1'b0 == ap_block_state250_on_subcall_done) & (1'b1 == ap_CS_fsm_state250))) begin
                ap_NS_fsm = ap_ST_fsm_state251;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state250;
            end
        end
        ap_ST_fsm_state251 : begin
            ap_NS_fsm = ap_ST_fsm_state252;
        end
        ap_ST_fsm_state252 : begin
            if (((grp_makePatch_alignedToLine_fu_464_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state252))) begin
                ap_NS_fsm = ap_ST_fsm_state253;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state252;
            end
        end
        ap_ST_fsm_state253 : begin
            ap_NS_fsm = ap_ST_fsm_state254;
        end
        ap_ST_fsm_state254 : begin
            ap_NS_fsm = ap_ST_fsm_state255;
        end
        ap_ST_fsm_state255 : begin
            if (((grp_getShadows_fu_487_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state255))) begin
                ap_NS_fsm = ap_ST_fsm_state256;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state255;
            end
        end
        ap_ST_fsm_state256 : begin
            ap_NS_fsm = ap_ST_fsm_state257;
        end
        ap_ST_fsm_state257 : begin
            ap_NS_fsm = ap_ST_fsm_state258;
        end
        ap_ST_fsm_state258 : begin
            if (((shiftOriginal_1_reg_1497 == 1'd0) & (1'b1 == ap_CS_fsm_state258))) begin
                ap_NS_fsm = ap_ST_fsm_state305;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state259;
            end
        end
        ap_ST_fsm_state259 : begin
            ap_NS_fsm = ap_ST_fsm_state260;
        end
        ap_ST_fsm_state260 : begin
            ap_NS_fsm = ap_ST_fsm_state261;
        end
        ap_ST_fsm_state261 : begin
            ap_NS_fsm = ap_ST_fsm_state262;
        end
        ap_ST_fsm_state262 : begin
            ap_NS_fsm = ap_ST_fsm_state263;
        end
        ap_ST_fsm_state263 : begin
            ap_NS_fsm = ap_ST_fsm_state264;
        end
        ap_ST_fsm_state264 : begin
            ap_NS_fsm = ap_ST_fsm_state265;
        end
        ap_ST_fsm_state265 : begin
            ap_NS_fsm = ap_ST_fsm_state266;
        end
        ap_ST_fsm_state266 : begin
            ap_NS_fsm = ap_ST_fsm_state267;
        end
        ap_ST_fsm_state267 : begin
            ap_NS_fsm = ap_ST_fsm_state268;
        end
        ap_ST_fsm_state268 : begin
            ap_NS_fsm = ap_ST_fsm_state269;
        end
        ap_ST_fsm_state269 : begin
            ap_NS_fsm = ap_ST_fsm_state270;
        end
        ap_ST_fsm_state270 : begin
            ap_NS_fsm = ap_ST_fsm_state271;
        end
        ap_ST_fsm_state271 : begin
            ap_NS_fsm = ap_ST_fsm_state272;
        end
        ap_ST_fsm_state272 : begin
            ap_NS_fsm = ap_ST_fsm_state273;
        end
        ap_ST_fsm_state273 : begin
            ap_NS_fsm = ap_ST_fsm_state274;
        end
        ap_ST_fsm_state274 : begin
            ap_NS_fsm = ap_ST_fsm_state275;
        end
        ap_ST_fsm_state275 : begin
            ap_NS_fsm = ap_ST_fsm_state276;
        end
        ap_ST_fsm_state276 : begin
            ap_NS_fsm = ap_ST_fsm_state277;
        end
        ap_ST_fsm_state277 : begin
            ap_NS_fsm = ap_ST_fsm_state278;
        end
        ap_ST_fsm_state278 : begin
            ap_NS_fsm = ap_ST_fsm_state279;
        end
        ap_ST_fsm_state279 : begin
            ap_NS_fsm = ap_ST_fsm_state280;
        end
        ap_ST_fsm_state280 : begin
            ap_NS_fsm = ap_ST_fsm_state281;
        end
        ap_ST_fsm_state281 : begin
            ap_NS_fsm = ap_ST_fsm_state282;
        end
        ap_ST_fsm_state282 : begin
            ap_NS_fsm = ap_ST_fsm_state283;
        end
        ap_ST_fsm_state283 : begin
            ap_NS_fsm = ap_ST_fsm_state284;
        end
        ap_ST_fsm_state284 : begin
            ap_NS_fsm = ap_ST_fsm_state285;
        end
        ap_ST_fsm_state285 : begin
            ap_NS_fsm = ap_ST_fsm_state286;
        end
        ap_ST_fsm_state286 : begin
            ap_NS_fsm = ap_ST_fsm_state287;
        end
        ap_ST_fsm_state287 : begin
            ap_NS_fsm = ap_ST_fsm_state288;
        end
        ap_ST_fsm_state288 : begin
            ap_NS_fsm = ap_ST_fsm_state289;
        end
        ap_ST_fsm_state289 : begin
            ap_NS_fsm = ap_ST_fsm_state290;
        end
        ap_ST_fsm_state290 : begin
            ap_NS_fsm = ap_ST_fsm_state291;
        end
        ap_ST_fsm_state291 : begin
            ap_NS_fsm = ap_ST_fsm_state292;
        end
        ap_ST_fsm_state292 : begin
            ap_NS_fsm = ap_ST_fsm_state293;
        end
        ap_ST_fsm_state293 : begin
            ap_NS_fsm = ap_ST_fsm_state294;
        end
        ap_ST_fsm_state294 : begin
            ap_NS_fsm = ap_ST_fsm_state295;
        end
        ap_ST_fsm_state295 : begin
            ap_NS_fsm = ap_ST_fsm_state296;
        end
        ap_ST_fsm_state296 : begin
            ap_NS_fsm = ap_ST_fsm_state297;
        end
        ap_ST_fsm_state297 : begin
            ap_NS_fsm = ap_ST_fsm_state298;
        end
        ap_ST_fsm_state298 : begin
            ap_NS_fsm = ap_ST_fsm_state299;
        end
        ap_ST_fsm_state299 : begin
            ap_NS_fsm = ap_ST_fsm_state300;
        end
        ap_ST_fsm_state300 : begin
            ap_NS_fsm = ap_ST_fsm_state301;
        end
        ap_ST_fsm_state301 : begin
            ap_NS_fsm = ap_ST_fsm_state302;
        end
        ap_ST_fsm_state302 : begin
            ap_NS_fsm = ap_ST_fsm_state303;
        end
        ap_ST_fsm_state303 : begin
            ap_NS_fsm = ap_ST_fsm_state304;
        end
        ap_ST_fsm_state304 : begin
            ap_NS_fsm = ap_ST_fsm_state305;
        end
        ap_ST_fsm_state305 : begin
            if (((icmp_ln1144_fu_1202_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state305))) begin
                ap_NS_fsm = ap_ST_fsm_state306;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state247;
            end
        end
        ap_ST_fsm_state306 : begin
            ap_NS_fsm = ap_ST_fsm_state307;
        end
        ap_ST_fsm_state307 : begin
            ap_NS_fsm = ap_ST_fsm_state308;
        end
        ap_ST_fsm_state308 : begin
            ap_NS_fsm = ap_ST_fsm_state309;
        end
        ap_ST_fsm_state309 : begin
            ap_NS_fsm = ap_ST_fsm_state310;
        end
        ap_ST_fsm_state310 : begin
            ap_NS_fsm = ap_ST_fsm_state311;
        end
        ap_ST_fsm_state311 : begin
            ap_NS_fsm = ap_ST_fsm_state312;
        end
        ap_ST_fsm_state312 : begin
            ap_NS_fsm = ap_ST_fsm_state313;
        end
        ap_ST_fsm_state313 : begin
            ap_NS_fsm = ap_ST_fsm_state314;
        end
        ap_ST_fsm_state314 : begin
            ap_NS_fsm = ap_ST_fsm_state315;
        end
        ap_ST_fsm_state315 : begin
            ap_NS_fsm = ap_ST_fsm_state316;
        end
        ap_ST_fsm_state316 : begin
            ap_NS_fsm = ap_ST_fsm_state317;
        end
        ap_ST_fsm_state317 : begin
            ap_NS_fsm = ap_ST_fsm_state318;
        end
        ap_ST_fsm_state318 : begin
            ap_NS_fsm = ap_ST_fsm_state319;
        end
        ap_ST_fsm_state319 : begin
            ap_NS_fsm = ap_ST_fsm_state320;
        end
        ap_ST_fsm_state320 : begin
            ap_NS_fsm = ap_ST_fsm_state321;
        end
        ap_ST_fsm_state321 : begin
            ap_NS_fsm = ap_ST_fsm_state322;
        end
        ap_ST_fsm_state322 : begin
            ap_NS_fsm = ap_ST_fsm_state323;
        end
        ap_ST_fsm_state323 : begin
            ap_NS_fsm = ap_ST_fsm_state324;
        end
        ap_ST_fsm_state324 : begin
            ap_NS_fsm = ap_ST_fsm_state325;
        end
        ap_ST_fsm_state325 : begin
            ap_NS_fsm = ap_ST_fsm_state326;
        end
        ap_ST_fsm_state326 : begin
            ap_NS_fsm = ap_ST_fsm_state327;
        end
        ap_ST_fsm_state327 : begin
            ap_NS_fsm = ap_ST_fsm_state328;
        end
        ap_ST_fsm_state328 : begin
            ap_NS_fsm = ap_ST_fsm_state329;
        end
        ap_ST_fsm_state329 : begin
            ap_NS_fsm = ap_ST_fsm_state330;
        end
        ap_ST_fsm_state330 : begin
            ap_NS_fsm = ap_ST_fsm_state331;
        end
        ap_ST_fsm_state331 : begin
            ap_NS_fsm = ap_ST_fsm_state332;
        end
        ap_ST_fsm_state332 : begin
            ap_NS_fsm = ap_ST_fsm_state333;
        end
        ap_ST_fsm_state333 : begin
            ap_NS_fsm = ap_ST_fsm_state334;
        end
        ap_ST_fsm_state334 : begin
            ap_NS_fsm = ap_ST_fsm_state335;
        end
        ap_ST_fsm_state335 : begin
            ap_NS_fsm = ap_ST_fsm_state336;
        end
        ap_ST_fsm_state336 : begin
            ap_NS_fsm = ap_ST_fsm_state337;
        end
        ap_ST_fsm_state337 : begin
            ap_NS_fsm = ap_ST_fsm_state338;
        end
        ap_ST_fsm_state338 : begin
            ap_NS_fsm = ap_ST_fsm_state339;
        end
        ap_ST_fsm_state339 : begin
            ap_NS_fsm = ap_ST_fsm_state340;
        end
        ap_ST_fsm_state340 : begin
            ap_NS_fsm = ap_ST_fsm_state341;
        end
        ap_ST_fsm_state341 : begin
            ap_NS_fsm = ap_ST_fsm_state342;
        end
        ap_ST_fsm_state342 : begin
            ap_NS_fsm = ap_ST_fsm_state343;
        end
        ap_ST_fsm_state343 : begin
            ap_NS_fsm = ap_ST_fsm_state344;
        end
        ap_ST_fsm_state344 : begin
            ap_NS_fsm = ap_ST_fsm_state345;
        end
        ap_ST_fsm_state345 : begin
            ap_NS_fsm = ap_ST_fsm_state346;
        end
        ap_ST_fsm_state346 : begin
            ap_NS_fsm = ap_ST_fsm_state347;
        end
        ap_ST_fsm_state347 : begin
            ap_NS_fsm = ap_ST_fsm_state348;
        end
        ap_ST_fsm_state348 : begin
            ap_NS_fsm = ap_ST_fsm_state349;
        end
        ap_ST_fsm_state349 : begin
            ap_NS_fsm = ap_ST_fsm_state350;
        end
        ap_ST_fsm_state350 : begin
            ap_NS_fsm = ap_ST_fsm_state351;
        end
        ap_ST_fsm_state351 : begin
            ap_NS_fsm = ap_ST_fsm_state352;
        end
        ap_ST_fsm_state352 : begin
            if (((icmp_ln1156_fu_1219_p2 == 1'd1) & (1'd1 == and_ln1154_fu_1214_p2) & (1'b1 == ap_CS_fsm_state352))) begin
                ap_NS_fsm = ap_ST_fsm_state353;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state354;
            end
        end
        ap_ST_fsm_state353 : begin
            ap_NS_fsm = ap_ST_fsm_state354;
        end
        ap_ST_fsm_state354 : begin
            if (((1'b0 == ap_block_state354_on_subcall_done) & (1'b1 == ap_CS_fsm_state354))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state354;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign GDarrayDecoded_address0 = grp_makePatch_alignedToLine_fu_464_GDarrayDecoded_address0;

assign GDarrayDecoded_ce0 = grp_makePatch_alignedToLine_fu_464_GDarrayDecoded_ce0;

assign GDn_points_address0 = grp_makePatch_alignedToLine_fu_464_GDn_points_address0;

assign GDn_points_ce0 = grp_makePatch_alignedToLine_fu_464_GDn_points_ce0;

assign add_ln1099_fu_1015_p2 = ($signed(zext_ln1099_fu_1011_p1) + $signed(9'd511));

assign add_ln1105_fu_1026_p2 = ($signed(trunc_ln1105_fu_1022_p1) + $signed(5'd31));

assign add_ln1158_fu_1225_p2 = ($signed(reg_560) + $signed(8'd253));

assign and_ln1009_fu_614_p2 = (icmp_ln878_fu_608_p2 & grp_fu_540_p2);

assign and_ln1019_fu_728_p2 = (icmp_ln886_3_fu_718_p2 & icmp_ln878_3_fu_724_p2);

assign and_ln1079_1_fu_965_p2 = (grp_fu_546_p2 & and_ln1079_fu_959_p2);

assign and_ln1079_2_fu_926_p2 = (grp_fu_551_p2 & grp_fu_546_p2);

assign and_ln1079_fu_959_p2 = (xor_ln1079_fu_953_p2 & grp_fu_551_p2);

assign and_ln1154_fu_1214_p2 = (shiftOriginal_1_reg_1497 & icmp_ln886_6_fu_1208_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state150 = ap_CS_fsm[32'd149];

assign ap_CS_fsm_state151 = ap_CS_fsm[32'd150];

assign ap_CS_fsm_state152 = ap_CS_fsm[32'd151];

assign ap_CS_fsm_state153 = ap_CS_fsm[32'd152];

assign ap_CS_fsm_state154 = ap_CS_fsm[32'd153];

assign ap_CS_fsm_state199 = ap_CS_fsm[32'd198];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state200 = ap_CS_fsm[32'd199];

assign ap_CS_fsm_state201 = ap_CS_fsm[32'd200];

assign ap_CS_fsm_state202 = ap_CS_fsm[32'd201];

assign ap_CS_fsm_state203 = ap_CS_fsm[32'd202];

assign ap_CS_fsm_state204 = ap_CS_fsm[32'd203];

assign ap_CS_fsm_state205 = ap_CS_fsm[32'd204];

assign ap_CS_fsm_state206 = ap_CS_fsm[32'd205];

assign ap_CS_fsm_state207 = ap_CS_fsm[32'd206];

assign ap_CS_fsm_state208 = ap_CS_fsm[32'd207];

assign ap_CS_fsm_state209 = ap_CS_fsm[32'd208];

assign ap_CS_fsm_state210 = ap_CS_fsm[32'd209];

assign ap_CS_fsm_state211 = ap_CS_fsm[32'd210];

assign ap_CS_fsm_state212 = ap_CS_fsm[32'd211];

assign ap_CS_fsm_state213 = ap_CS_fsm[32'd212];

assign ap_CS_fsm_state214 = ap_CS_fsm[32'd213];

assign ap_CS_fsm_state215 = ap_CS_fsm[32'd214];

assign ap_CS_fsm_state216 = ap_CS_fsm[32'd215];

assign ap_CS_fsm_state217 = ap_CS_fsm[32'd216];

assign ap_CS_fsm_state218 = ap_CS_fsm[32'd217];

assign ap_CS_fsm_state219 = ap_CS_fsm[32'd218];

assign ap_CS_fsm_state220 = ap_CS_fsm[32'd219];

assign ap_CS_fsm_state221 = ap_CS_fsm[32'd220];

assign ap_CS_fsm_state222 = ap_CS_fsm[32'd221];

assign ap_CS_fsm_state223 = ap_CS_fsm[32'd222];

assign ap_CS_fsm_state224 = ap_CS_fsm[32'd223];

assign ap_CS_fsm_state225 = ap_CS_fsm[32'd224];

assign ap_CS_fsm_state226 = ap_CS_fsm[32'd225];

assign ap_CS_fsm_state227 = ap_CS_fsm[32'd226];

assign ap_CS_fsm_state228 = ap_CS_fsm[32'd227];

assign ap_CS_fsm_state229 = ap_CS_fsm[32'd228];

assign ap_CS_fsm_state230 = ap_CS_fsm[32'd229];

assign ap_CS_fsm_state231 = ap_CS_fsm[32'd230];

assign ap_CS_fsm_state232 = ap_CS_fsm[32'd231];

assign ap_CS_fsm_state233 = ap_CS_fsm[32'd232];

assign ap_CS_fsm_state234 = ap_CS_fsm[32'd233];

assign ap_CS_fsm_state235 = ap_CS_fsm[32'd234];

assign ap_CS_fsm_state236 = ap_CS_fsm[32'd235];

assign ap_CS_fsm_state237 = ap_CS_fsm[32'd236];

assign ap_CS_fsm_state238 = ap_CS_fsm[32'd237];

assign ap_CS_fsm_state239 = ap_CS_fsm[32'd238];

assign ap_CS_fsm_state240 = ap_CS_fsm[32'd239];

assign ap_CS_fsm_state241 = ap_CS_fsm[32'd240];

assign ap_CS_fsm_state242 = ap_CS_fsm[32'd241];

assign ap_CS_fsm_state243 = ap_CS_fsm[32'd242];

assign ap_CS_fsm_state244 = ap_CS_fsm[32'd243];

assign ap_CS_fsm_state245 = ap_CS_fsm[32'd244];

assign ap_CS_fsm_state246 = ap_CS_fsm[32'd245];

assign ap_CS_fsm_state247 = ap_CS_fsm[32'd246];

assign ap_CS_fsm_state248 = ap_CS_fsm[32'd247];

assign ap_CS_fsm_state249 = ap_CS_fsm[32'd248];

assign ap_CS_fsm_state250 = ap_CS_fsm[32'd249];

assign ap_CS_fsm_state251 = ap_CS_fsm[32'd250];

assign ap_CS_fsm_state252 = ap_CS_fsm[32'd251];

assign ap_CS_fsm_state253 = ap_CS_fsm[32'd252];

assign ap_CS_fsm_state254 = ap_CS_fsm[32'd253];

assign ap_CS_fsm_state255 = ap_CS_fsm[32'd254];

assign ap_CS_fsm_state256 = ap_CS_fsm[32'd255];

assign ap_CS_fsm_state257 = ap_CS_fsm[32'd256];

assign ap_CS_fsm_state258 = ap_CS_fsm[32'd257];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state303 = ap_CS_fsm[32'd302];

assign ap_CS_fsm_state304 = ap_CS_fsm[32'd303];

assign ap_CS_fsm_state305 = ap_CS_fsm[32'd304];

assign ap_CS_fsm_state306 = ap_CS_fsm[32'd305];

assign ap_CS_fsm_state351 = ap_CS_fsm[32'd350];

assign ap_CS_fsm_state352 = ap_CS_fsm[32'd351];

assign ap_CS_fsm_state353 = ap_CS_fsm[32'd352];

assign ap_CS_fsm_state354 = ap_CS_fsm[32'd353];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

always @ (*) begin
    ap_block_state250_on_subcall_done = ((makeHorizontallyShiftedPatch_reg_407 == 1'd1) & (grp_delete_patch_fu_528_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state354_on_subcall_done = ((ap_predicate_op953_call_state354 == 1'b1) & (grp_delete_patch_fu_528_ap_done == 1'b0));
end

assign ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_412_p4 = makeHorizontallyShiftedPatch_reg_407;

always @ (*) begin
    ap_predicate_op953_call_state354 = ((((icmp_ln1156_reg_1676 == 1'd1) & (or_ln1079_1_reg_1528 == 1'd1) & (1'd1 == and_ln1154_reg_1672) & (1'd1 == and_ln1079_1_reg_1541)) | ((icmp_ln1156_reg_1676 == 1'd1) & (1'd1 == and_ln1154_reg_1672) & (makeHorizontallyShiftedPatch_reg_407 == 1'd1))) | ((icmp_ln1156_reg_1676 == 1'd1) & (or_ln1079_1_reg_1528 == 1'd0) & (1'd1 == and_ln1154_reg_1672) & (1'd1 == and_ln1079_2_reg_1537)));
end

assign cmp_i_i301_not_fu_870_p2 = (icmp_ln886_5_fu_848_p2 ^ 1'd1);

assign complementary_topL_jL_V_3_fu_1081_p3 = ((shiftOriginal_1_reg_1497[0:0] == 1'b1) ? complementary_topL_jL_V_1_reg_365 : patches_parameters_q1);

assign complementary_topL_jR_V_4_fu_1039_p3 = ((shiftOriginal_1_reg_1497[0:0] == 1'b1) ? complementary_topL_jR_V_reg_345 : patches_parameters_q1);

assign complementary_topR_jL_V_3_fu_1074_p3 = ((shiftOriginal_1_reg_1497[0:0] == 1'b1) ? complementary_topR_jL_V_1_reg_355 : patches_parameters_q0);

assign complementary_topR_jR_V_4_fu_1032_p3 = ((shiftOriginal_1_reg_1497[0:0] == 1'b1) ? complementary_topR_jR_V_reg_315 : patches_parameters_q0);

assign empty_fu_571_p1 = lastPatchIndex[4:0];

assign grp_delete_patch_fu_528_ap_start = grp_delete_patch_fu_528_ap_start_reg;

assign grp_fu_540_p1 = complementary_apexZ0;

assign grp_fu_540_p2 = (($signed(patches_parameters_q0) > $signed(grp_fu_540_p1)) ? 1'b1 : 1'b0);

assign grp_fu_546_p2 = (($signed(horizontalOverlapTop_V_fu_118) < $signed(32'd1)) ? 1'b1 : 1'b0);

assign grp_fu_551_p2 = (($signed(horizontalOverlapBottom_V_fu_114) < $signed(32'd1)) ? 1'b1 : 1'b0);

assign grp_fu_565_p2 = (32'd0 - reg_556);

assign grp_getShadows_fu_487_ap_start = grp_getShadows_fu_487_ap_start_reg;

assign grp_makePatch_alignedToLine_fu_464_ap_start = grp_makePatch_alignedToLine_fu_464_ap_start_reg;

assign grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_ce = grp_straightLineProjectorFromLayerIJtoK_fu_502_ap_ce;

assign grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din1 = grp_straightLineProjectorFromLayerIJtoK_fu_502_z_i;

assign grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din2 = grp_straightLineProjectorFromLayerIJtoK_fu_502_z_j;

assign grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din3 = 3'd1;

assign grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din4 = 3'd5;

assign grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_din5 = 3'd0;

assign grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_ce = grp_straightLineProjectorFromLayerIJtoK_fu_514_ap_ce;

assign grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din1 = complementary_apexZ0;

assign grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din2 = z_top_min;

assign grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din3 = 3'd1;

assign grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din4 = 3'd5;

assign grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_din5 = 3'd0;

assign grp_straightLineProjectorFromLayerIJtoK_fu_502_ap_return = grp_straightLineProjectorFromLayerIJtoK_fu_1148_p_dout0;

assign grp_straightLineProjectorFromLayerIJtoK_fu_502_i = 3'd1;

assign grp_straightLineProjectorFromLayerIJtoK_fu_502_j = 3'd5;

assign grp_straightLineProjectorFromLayerIJtoK_fu_502_k = 3'd0;

assign grp_straightLineProjectorFromLayerIJtoK_fu_514_ap_return = grp_straightLineProjectorFromLayerIJtoK_fu_1156_p_dout0;

assign grp_straightLineProjectorFromLayerIJtoK_fu_514_i = 3'd1;

assign grp_straightLineProjectorFromLayerIJtoK_fu_514_j = 3'd5;

assign grp_straightLineProjectorFromLayerIJtoK_fu_514_k = 3'd0;

assign grp_straightLineProjectorFromLayerIJtoK_fu_514_z_i = complementary_apexZ0;

assign grp_straightLineProjectorFromLayerIJtoK_fu_514_z_j = z_top_min;

assign horizontalOverlapBottom_V_1_fu_1186_p3 = ((icmp_ln878_8_fu_1172_p2[0:0] == 1'b1) ? trunc_ln1128_fu_1178_p1 : trunc_ln1128_1_fu_1182_p1);

assign horizontalOverlapTop_V_1_fu_1148_p3 = ((icmp_ln878_7_fu_1134_p2[0:0] == 1'b1) ? trunc_ln1127_fu_1140_p1 : trunc_ln1127_1_fu_1144_p1);

assign horizontalShiftBottom_1_fu_1107_p2 = ($signed(original_topL_jL_V_4_fu_1060_p3) - $signed(complementary_topL_jR_V_4_reg_1583));

assign horizontalShiftBottom_fu_834_p2 = ($signed(original_topL_jL_V_3_reg_1365) - $signed(complementary_topL_jR_V_3_reg_1404));

assign horizontalShiftTop_1_fu_1095_p2 = ($signed(original_topR_jL_V_3_fu_1067_p3) - $signed(complementary_topR_jR_V_4_reg_1576));

assign horizontalShiftTop_fu_830_p2 = ($signed(original_topR_jL_V_reg_1306) - $signed(complementary_topR_jR_V_3_reg_1386));

assign icmp_ln1079_1_fu_942_p2 = (($signed(tmp_16_fu_932_p4) < $signed(31'd1)) ? 1'b1 : 1'b0);

assign icmp_ln1079_fu_901_p2 = (($signed(tmp_15_fu_891_p4) < $signed(31'd1)) ? 1'b1 : 1'b0);

assign icmp_ln1144_fu_1202_p2 = (($signed(loopCounter_reg_431) > $signed(32'd25)) ? 1'b1 : 1'b0);

assign icmp_ln1156_fu_1219_p2 = ((n_patches_i > 8'd2) ? 1'b1 : 1'b0);

assign icmp_ln878_2_fu_678_p2 = (($signed(ret_fu_672_p2) < $signed(33'd8589934492)) ? 1'b1 : 1'b0);

assign icmp_ln878_3_fu_724_p1 = apexZ0;

assign icmp_ln878_3_fu_724_p2 = (($signed(complementary_topR_jR_V_3_reg_1386) < $signed(icmp_ln878_3_fu_724_p1)) ? 1'b1 : 1'b0);

assign icmp_ln878_4_fu_772_p2 = (($signed(ret_8_fu_766_p2) < $signed(33'd8589934492)) ? 1'b1 : 1'b0);

assign icmp_ln878_5_fu_971_p2 = (($signed(empty_74_reg_306) < $signed(empty_73_reg_297)) ? 1'b1 : 1'b0);

assign icmp_ln878_6_fu_1112_p2 = (($signed(reg_556) < $signed(32'd15000000)) ? 1'b1 : 1'b0);

assign icmp_ln878_7_fu_1134_p2 = (($signed(ret_9_fu_1121_p2) < $signed(ret_10_fu_1129_p2)) ? 1'b1 : 1'b0);

assign icmp_ln878_8_fu_1172_p2 = (($signed(ret_11_fu_1159_p2) < $signed(ret_12_fu_1167_p2)) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_608_p1 = apexZ0;

assign icmp_ln878_fu_608_p2 = (($signed(patches_parameters_q0) < $signed(icmp_ln878_fu_608_p1)) ? 1'b1 : 1'b0);

assign icmp_ln886_3_fu_718_p2 = (($signed(ret_7_fu_712_p2) > $signed(33'd50)) ? 1'b1 : 1'b0);

assign icmp_ln886_4_fu_756_p1 = complementary_apexZ0;

assign icmp_ln886_4_fu_756_p2 = (($signed(complementary_topL_jR_V_3_reg_1404) > $signed(icmp_ln886_4_fu_756_p1)) ? 1'b1 : 1'b0);

assign icmp_ln886_5_fu_848_p2 = (($signed(z0_complementary_cCorner_V_reg_1460) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln886_6_fu_1208_p2 = (($signed(reg_556) > $signed(32'd15000000)) ? 1'b1 : 1'b0);

assign icmp_ln993_fu_576_p2 = ((lastPatchIndex == 8'd0) ? 1'b1 : 1'b0);

assign lnot_fu_876_p2 = (tmp_14_reg_1465 & cmp_i_i301_not_fu_870_p2);

assign loopCounter_2_fu_912_p2 = (loopCounter_reg_431 + 32'd1);

assign newZtop_V_1_fu_881_p3 = ((shiftOriginal_1_fu_864_p2[0:0] == 1'b1) ? z_top_max : z_top_min);

assign or_ln1079_1_fu_907_p2 = (or_ln1079_reg_1440 | icmp_ln1079_fu_901_p2);

assign or_ln1079_2_fu_816_p2 = (empty_72_reg_273 | empty_70_reg_246);

assign or_ln1079_3_fu_948_p2 = (or_ln1079_2_reg_1445 | icmp_ln1079_1_fu_942_p2);

assign or_ln1079_fu_800_p2 = (empty_71_reg_261 | empty_69_reg_234);

assign original_topL_jL_V_4_fu_1060_p3 = ((shiftOriginal_1_reg_1497[0:0] == 1'b1) ? patches_parameters_q1 : original_topL_jL_V_reg_325);

assign original_topL_jR_V_3_fu_1053_p3 = ((shiftOriginal_1_reg_1497[0:0] == 1'b1) ? patches_parameters_q1 : original_topL_jR_V_1_reg_385);

assign original_topR_jL_V_3_fu_1067_p3 = ((shiftOriginal_1_reg_1497[0:0] == 1'b1) ? patches_parameters_q0 : original_topR_jL_V_1_reg_335);

assign original_topR_jR_V_3_fu_1046_p3 = ((shiftOriginal_1_reg_1497[0:0] == 1'b1) ? patches_parameters_q0 : original_topR_jR_V_1_reg_375);

assign patches_parameters_d1 = grp_getShadows_fu_487_wp_parameters_d1;

assign patches_superpoints_address1 = grp_delete_patch_fu_528_patches_superpoints_address1;

assign phitmp3_fu_750_p2 = ((select_ln180_5_fu_742_p3 > 32'd299999999) ? 1'b1 : 1'b0);

assign phitmp4_fu_700_p2 = ((select_ln180_4_fu_692_p3 > 32'd299999999) ? 1'b1 : 1'b0);

assign phitmp5_fu_794_p2 = ((select_ln180_6_fu_786_p3 > 32'd299999999) ? 1'b1 : 1'b0);

assign phitmp_fu_660_p2 = ((select_ln180_fu_652_p3 > 32'd299999999) ? 1'b1 : 1'b0);

assign ret_10_fu_1129_p2 = ($signed(sext_ln215_18_reg_1630) - $signed(sext_ln215_22_fu_1126_p1));

assign ret_11_fu_1159_p2 = ($signed(sext_ln215_23_fu_1156_p1) - $signed(sext_ln215_19_reg_1640));

assign ret_12_fu_1167_p2 = ($signed(sext_ln215_20_reg_1645) - $signed(sext_ln215_24_fu_1164_p1));

assign ret_7_fu_712_p2 = ($signed(sext_ln215_13_fu_706_p1) - $signed(sext_ln215_14_fu_709_p1));

assign ret_8_fu_766_p2 = ($signed(sext_ln215_15_fu_760_p1) - $signed(sext_ln215_16_fu_763_p1));

assign ret_9_fu_1121_p2 = ($signed(sext_ln215_21_fu_1118_p1) - $signed(sext_ln215_17_reg_1625));

assign ret_fu_672_p2 = ($signed(sext_ln215_fu_666_p1) - $signed(sext_ln215_12_fu_669_p1));

assign secondLastPatchIndex_1_fu_587_p3 = ((icmp_ln993_reg_1257[0:0] == 1'b1) ? 5'd0 : secondLastPatchIndex_reg_1267);

assign secondLastPatchIndex_fu_582_p2 = ($signed(empty_reg_1251) + $signed(5'd31));

assign select_ln1008_1_fu_600_p3 = ((icmp_ln993_reg_1257[0:0] == 1'b1) ? 64'd4 : 64'd28);

assign select_ln1008_fu_620_p3 = ((icmp_ln993_reg_1257[0:0] == 1'b1) ? 64'd0 : 64'd24);

assign select_ln1032_fu_628_p3 = ((icmp_ln993_reg_1257[0:0] == 1'b1) ? 64'd6 : 64'd30);

assign select_ln1033_fu_636_p3 = ((icmp_ln993_reg_1257[0:0] == 1'b1) ? 64'd2 : 64'd26);

assign select_ln180_4_fu_692_p3 = ((tmp_11_fu_684_p3[0:0] == 1'b1) ? grp_fu_565_p2 : reg_556);

assign select_ln180_5_fu_742_p3 = ((tmp_12_fu_734_p3[0:0] == 1'b1) ? grp_fu_565_p2 : reg_556);

assign select_ln180_6_fu_786_p3 = ((tmp_13_fu_778_p3[0:0] == 1'b1) ? grp_fu_565_p2 : reg_556);

assign select_ln180_fu_652_p3 = ((tmp_fu_644_p3[0:0] == 1'b1) ? grp_fu_565_p2 : reg_556);

assign select_ln534_fu_977_p3 = ((icmp_ln878_5_fu_971_p2[0:0] == 1'b1) ? empty_73_reg_297 : empty_74_reg_306);

assign sext_ln1059_fu_860_p1 = $signed(shifted_Align_1_fu_853_p3);

assign sext_ln215_12_fu_669_p0 = apexZ0;

assign sext_ln215_12_fu_669_p1 = sext_ln215_12_fu_669_p0;

assign sext_ln215_13_fu_706_p1 = complementary_topR_jR_V_3_reg_1386;

assign sext_ln215_14_fu_709_p0 = complementary_apexZ0;

assign sext_ln215_14_fu_709_p1 = sext_ln215_14_fu_709_p0;

assign sext_ln215_15_fu_760_p1 = complementary_topL_jR_V_3_reg_1404;

assign sext_ln215_16_fu_763_p0 = apexZ0;

assign sext_ln215_16_fu_763_p1 = sext_ln215_16_fu_763_p0;

assign sext_ln215_17_fu_1088_p1 = original_topR_jL_V_3_fu_1067_p3;

assign sext_ln215_18_fu_1092_p1 = complementary_topR_jR_V_4_reg_1576;

assign sext_ln215_19_fu_1100_p1 = original_topL_jL_V_4_fu_1060_p3;

assign sext_ln215_20_fu_1104_p1 = complementary_topL_jR_V_4_reg_1583;

assign sext_ln215_21_fu_1118_p1 = complementary_topR_jL_V_3_reg_1613;

assign sext_ln215_22_fu_1126_p1 = original_topR_jR_V_3_reg_1590;

assign sext_ln215_23_fu_1156_p1 = complementary_topL_jL_V_3_reg_1619;

assign sext_ln215_24_fu_1164_p1 = original_topL_jR_V_3_reg_1597;

assign sext_ln215_fu_666_p1 = original_topL_jL_V_3_reg_1365;

assign sext_ln534_fu_985_p1 = $signed(select_ln534_reg_1545);

assign shiftOriginal_1_fu_864_p2 = (shiftOriginal_fu_843_p2 | icmp_ln886_5_fu_848_p2);

assign shiftOriginal_fu_843_p2 = (tmp_14_reg_1465 ^ 1'd1);

assign shifted_Align_1_fu_853_p1 = apexZ0;

assign shifted_Align_1_fu_853_p3 = ((icmp_ln886_5_fu_848_p2[0:0] == 1'b1) ? shifted_Align_1_fu_853_p1 : shifted_Align_fu_838_p3);

assign shifted_Align_3_fu_988_p2 = ($signed(shifted_Align_2_reg_421) - $signed(sext_ln534_fu_985_p1));

assign shifted_Align_4_fu_994_p2 = ($signed(shifted_Align_2_reg_421) + $signed(sext_ln534_fu_985_p1));

assign shifted_Align_5_fu_1000_p3 = ((shiftOriginal_1_reg_1497[0:0] == 1'b1) ? shifted_Align_3_fu_988_p2 : shifted_Align_4_fu_994_p2);

assign shifted_Align_fu_838_p1 = complementary_apexZ0;

assign shifted_Align_fu_838_p2 = apexZ0;

assign shifted_Align_fu_838_p3 = ((tmp_14_reg_1465[0:0] == 1'b1) ? shifted_Align_fu_838_p1 : shifted_Align_fu_838_p2);

assign tmp_11_fu_684_p3 = reg_556[32'd31];

assign tmp_12_fu_734_p3 = reg_556[32'd31];

assign tmp_13_fu_778_p3 = reg_556[32'd31];

assign tmp_15_fu_891_p4 = {{empty_74_reg_306[31:1]}};

assign tmp_16_fu_932_p4 = {{empty_73_reg_297[31:1]}};

assign tmp_fu_644_p3 = reg_556[32'd31];

assign trunc_ln1047_1_fu_1007_p1 = shifted_Align_5_fu_1000_p3[31:0];

assign trunc_ln1047_fu_887_p1 = shifted_Align_2_reg_421[31:0];

assign trunc_ln1105_fu_1022_p1 = n_patches_i[4:0];

assign trunc_ln1127_1_fu_1144_p1 = ret_9_fu_1121_p2[31:0];

assign trunc_ln1127_fu_1140_p1 = ret_10_fu_1129_p2[31:0];

assign trunc_ln1128_1_fu_1182_p1 = ret_11_fu_1159_p2[31:0];

assign trunc_ln1128_fu_1178_p1 = ret_12_fu_1167_p2[31:0];

assign xor_ln1006_fu_594_p2 = (icmp_ln993_reg_1257 ^ 1'd1);

assign xor_ln1079_fu_953_p2 = (or_ln1079_3_fu_948_p2 ^ 1'd1);

assign zext_ln1099_fu_1011_p1 = reg_560;

assign zext_ln1158_fu_1231_p1 = add_ln1158_fu_1225_p2;

always @ (posedge ap_clk) begin
    patches_parameters_addr_9_reg_1345[2:0] <= 3'b000;
    patches_parameters_addr_9_reg_1345[6:5] <= 2'b00;
    patches_parameters_addr_14_reg_1350[2:0] <= 3'b110;
    patches_parameters_addr_14_reg_1350[6:5] <= 2'b00;
    patches_parameters_addr_15_reg_1355[2:0] <= 3'b010;
    patches_parameters_addr_15_reg_1355[6:5] <= 2'b00;
    zext_ln1158_reg_1680[8] <= 1'b0;
end

endmodule //MPSQ_makeThirdPatch
