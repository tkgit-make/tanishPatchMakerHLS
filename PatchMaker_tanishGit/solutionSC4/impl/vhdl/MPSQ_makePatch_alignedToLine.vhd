-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity MPSQ_makePatch_alignedToLine is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    n_patches_i : IN STD_LOGIC_VECTOR (7 downto 0);
    n_patches_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    n_patches_o_ap_vld : OUT STD_LOGIC;
    GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    GDn_points_ce0 : OUT STD_LOGIC;
    GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    z_top : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read : IN STD_LOGIC_VECTOR (31 downto 0);
    GDarrayDecoded_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    GDarrayDecoded_ce0 : OUT STD_LOGIC;
    GDarrayDecoded_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    patches_superpoints_ce0 : OUT STD_LOGIC;
    patches_superpoints_we0 : OUT STD_LOGIC;
    patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    patches_superpoints_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    patches_parameters_ce0 : OUT STD_LOGIC;
    patches_parameters_we0 : OUT STD_LOGIC;
    patches_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of MPSQ_makePatch_alignedToLine is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_A0 : STD_LOGIC_VECTOR (7 downto 0) := "10100000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv7_20 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv7_78 : STD_LOGIC_VECTOR (6 downto 0) := "1111000";
    constant ap_const_lv6_18 : STD_LOGIC_VECTOR (5 downto 0) := "011000";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal add_ln1414_1_fu_415_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal select_ln1414_1_fu_447_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln1414_fu_421_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1420_1_fu_505_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1426_fu_544_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln1420_2_fu_556_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1440_fu_564_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln1440_reg_932 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln1440_fu_570_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1457_1_fu_576_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal select_ln1457_1_fu_608_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln1457_fu_582_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1463_1_fu_666_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1469_fu_705_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln1463_2_fu_717_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1487_1_fu_725_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal select_ln1487_1_fu_757_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln1487_fu_731_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1493_1_fu_815_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln1499_fu_874_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln1493_2_fu_886_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal init_patch_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal init_patch_V_ce0 : STD_LOGIC;
    signal init_patch_V_we0 : STD_LOGIC;
    signal init_patch_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal init_patch_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal NPpatches_superpoints_V_ce0 : STD_LOGIC;
    signal NPpatches_superpoints_V_we0 : STD_LOGIC;
    signal NPpatches_superpoints_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_V_ce1 : STD_LOGIC;
    signal NPpatches_superpoints_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_parameters_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal NPpatches_parameters_V_ce0 : STD_LOGIC;
    signal NPpatches_parameters_V_we0 : STD_LOGIC;
    signal NPpatches_parameters_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_parameters_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_parameters_V_ce1 : STD_LOGIC;
    signal NPpatches_parameters_V_we1 : STD_LOGIC;
    signal NPpatches_parameters_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeSuperPoint_alignedToLine7_fu_376_ap_start : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine7_fu_376_ap_done : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine7_fu_376_ap_idle : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine7_fu_376_ap_ready : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine7_fu_376_GDn_points_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_makeSuperPoint_alignedToLine7_fu_376_GDn_points_ce0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine7_fu_376_init_patch_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_makeSuperPoint_alignedToLine7_fu_376_init_patch_ce0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine7_fu_376_init_patch_we0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine7_fu_376_init_patch_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeSuperPoint_alignedToLine7_fu_376_GDarrayDecoded_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_makeSuperPoint_alignedToLine7_fu_376_GDarrayDecoded_ce0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_393_ap_start : STD_LOGIC;
    signal grp_wedgePatch_init_fu_393_ap_done : STD_LOGIC;
    signal grp_wedgePatch_init_fu_393_ap_idle : STD_LOGIC;
    signal grp_wedgePatch_init_fu_393_ap_ready : STD_LOGIC;
    signal grp_wedgePatch_init_fu_393_wp_superpoints_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_wedgePatch_init_fu_393_wp_superpoints_ce0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_393_wp_superpoints_we0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_393_wp_superpoints_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_wedgePatch_init_fu_393_wp_superpoints_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_wedgePatch_init_fu_393_wp_superpoints_ce1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_393_wp_parameters_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_wedgePatch_init_fu_393_wp_parameters_ce0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_393_wp_parameters_we0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_393_wp_parameters_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_wedgePatch_init_fu_393_wp_parameters_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_wedgePatch_init_fu_393_wp_parameters_ce1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_393_wp_parameters_we1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_393_wp_parameters_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_wedgePatch_init_fu_393_superpointsI_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_wedgePatch_init_fu_393_superpointsI_ce0 : STD_LOGIC;
    signal grp_add_patch5_fu_402_ap_start : STD_LOGIC;
    signal grp_add_patch5_fu_402_ap_done : STD_LOGIC;
    signal grp_add_patch5_fu_402_ap_idle : STD_LOGIC;
    signal grp_add_patch5_fu_402_ap_ready : STD_LOGIC;
    signal grp_add_patch5_fu_402_n_patches : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_add_patch5_fu_402_n_patches_ap_vld : STD_LOGIC;
    signal grp_add_patch5_fu_402_wp_superpoints_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_add_patch5_fu_402_wp_superpoints_ce0 : STD_LOGIC;
    signal grp_add_patch5_fu_402_wp_parameters_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_add_patch5_fu_402_wp_parameters_ce0 : STD_LOGIC;
    signal grp_add_patch5_fu_402_patches_superpoints_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_add_patch5_fu_402_patches_superpoints_ce0 : STD_LOGIC;
    signal grp_add_patch5_fu_402_patches_superpoints_we0 : STD_LOGIC;
    signal grp_add_patch5_fu_402_patches_superpoints_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_add_patch5_fu_402_patches_parameters_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_add_patch5_fu_402_patches_parameters_ce0 : STD_LOGIC;
    signal grp_add_patch5_fu_402_patches_parameters_we0 : STD_LOGIC;
    signal grp_add_patch5_fu_402_patches_parameters_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten13_reg_199 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_reg_210 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten_reg_221 : STD_LOGIC_VECTOR (6 downto 0);
    signal b_reg_232 : STD_LOGIC_VECTOR (4 downto 0);
    signal c_reg_243 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_reg_254 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal indvar_flatten35_reg_266 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_1_reg_277 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten21_reg_288 : STD_LOGIC_VECTOR (6 downto 0);
    signal c_1_reg_299 : STD_LOGIC_VECTOR (4 downto 0);
    signal d_reg_310 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten57_reg_321 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal b_2_reg_332 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten43_reg_343 : STD_LOGIC_VECTOR (5 downto 0);
    signal c_2_reg_354 : STD_LOGIC_VECTOR (2 downto 0);
    signal d_1_reg_365 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_makeSuperPoint_alignedToLine7_fu_376_ap_start_reg : STD_LOGIC := '0';
    signal grp_wedgePatch_init_fu_393_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_add_patch5_fu_402_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal zext_ln1431_2_fu_539_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1474_2_fu_700_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1504_2_fu_869_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln1420_fu_433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1414_fu_427_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_455_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln1426_fu_473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1414_fu_467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1414_fu_439_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln1414_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1420_fu_491_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1420_fu_485_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln1420_fu_463_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1431_fu_513_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1431_fu_517_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1420_fu_497_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_34_fu_523_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1431_1_fu_529_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1431_1_fu_533_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1420_1_fu_550_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln1463_fu_594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1457_fu_588_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_616_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln1469_fu_634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1457_fu_628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1457_fu_600_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln1457_fu_640_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1463_fu_652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1463_fu_646_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln1463_fu_624_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1474_fu_674_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1474_fu_678_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1463_fu_658_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_37_fu_684_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1474_1_fu_690_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1474_1_fu_694_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1463_1_fu_711_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln1493_fu_743_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1487_fu_737_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_fu_765_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln1499_fu_783_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1487_fu_777_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1487_fu_749_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln1487_fu_789_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1493_fu_801_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1493_fu_795_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln1493_fu_773_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1504_fu_823_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln1504_fu_827_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln1504_fu_833_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl_cast_fu_837_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl1_cast_fu_845_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln1493_fu_807_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln1504_fu_853_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1504_1_fu_859_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1504_1_fu_863_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1493_1_fu_880_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component MPSQ_makeSuperPoint_alignedToLine7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        GDn_points_ce0 : OUT STD_LOGIC;
        GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        i : IN STD_LOGIC_VECTOR (2 downto 0);
        z_top : IN STD_LOGIC_VECTOR (31 downto 0);
        original_ppl : IN STD_LOGIC_VECTOR (31 downto 0);
        init_patch_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        init_patch_ce0 : OUT STD_LOGIC;
        init_patch_we0 : OUT STD_LOGIC;
        init_patch_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        GDarrayDecoded_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        GDarrayDecoded_ce0 : OUT STD_LOGIC;
        GDarrayDecoded_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MPSQ_wedgePatch_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        wp_superpoints_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        wp_superpoints_ce0 : OUT STD_LOGIC;
        wp_superpoints_we0 : OUT STD_LOGIC;
        wp_superpoints_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        wp_superpoints_ce1 : OUT STD_LOGIC;
        wp_superpoints_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        wp_parameters_ce0 : OUT STD_LOGIC;
        wp_parameters_we0 : OUT STD_LOGIC;
        wp_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        wp_parameters_ce1 : OUT STD_LOGIC;
        wp_parameters_we1 : OUT STD_LOGIC;
        wp_parameters_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        superpointsI_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        superpointsI_ce0 : OUT STD_LOGIC;
        superpointsI_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MPSQ_add_patch5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        n_patches : OUT STD_LOGIC_VECTOR (7 downto 0);
        n_patches_ap_vld : OUT STD_LOGIC;
        n_patches_read : IN STD_LOGIC_VECTOR (7 downto 0);
        wp_superpoints_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        wp_superpoints_ce0 : OUT STD_LOGIC;
        wp_superpoints_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        wp_parameters_ce0 : OUT STD_LOGIC;
        wp_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_superpoints_ce0 : OUT STD_LOGIC;
        patches_superpoints_we0 : OUT STD_LOGIC;
        patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        patches_superpoints_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_parameters_ce0 : OUT STD_LOGIC;
        patches_parameters_we0 : OUT STD_LOGIC;
        patches_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MPSQ_makePatch_alignedToLine_init_patch_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MPSQ_makePatch_alignedToLine_NPpatches_superpoints_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MPSQ_makePatch_alignedToLine_NPpatches_parameters_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    init_patch_V_U : component MPSQ_makePatch_alignedToLine_init_patch_V
    generic map (
        DataWidth => 32,
        AddressRange => 160,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => init_patch_V_address0,
        ce0 => init_patch_V_ce0,
        we0 => init_patch_V_we0,
        d0 => init_patch_V_d0,
        q0 => init_patch_V_q0);

    NPpatches_superpoints_V_U : component MPSQ_makePatch_alignedToLine_NPpatches_superpoints_V
    generic map (
        DataWidth => 32,
        AddressRange => 160,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => NPpatches_superpoints_V_address0,
        ce0 => NPpatches_superpoints_V_ce0,
        we0 => NPpatches_superpoints_V_we0,
        d0 => NPpatches_superpoints_V_d0,
        q0 => NPpatches_superpoints_V_q0,
        address1 => grp_wedgePatch_init_fu_393_wp_superpoints_address1,
        ce1 => NPpatches_superpoints_V_ce1,
        q1 => NPpatches_superpoints_V_q1);

    NPpatches_parameters_V_U : component MPSQ_makePatch_alignedToLine_NPpatches_parameters_V
    generic map (
        DataWidth => 32,
        AddressRange => 120,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => NPpatches_parameters_V_address0,
        ce0 => NPpatches_parameters_V_ce0,
        we0 => NPpatches_parameters_V_we0,
        d0 => NPpatches_parameters_V_d0,
        q0 => NPpatches_parameters_V_q0,
        address1 => grp_wedgePatch_init_fu_393_wp_parameters_address1,
        ce1 => NPpatches_parameters_V_ce1,
        we1 => NPpatches_parameters_V_we1,
        d1 => grp_wedgePatch_init_fu_393_wp_parameters_d1,
        q1 => NPpatches_parameters_V_q1);

    grp_makeSuperPoint_alignedToLine7_fu_376 : component MPSQ_makeSuperPoint_alignedToLine7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_makeSuperPoint_alignedToLine7_fu_376_ap_start,
        ap_done => grp_makeSuperPoint_alignedToLine7_fu_376_ap_done,
        ap_idle => grp_makeSuperPoint_alignedToLine7_fu_376_ap_idle,
        ap_ready => grp_makeSuperPoint_alignedToLine7_fu_376_ap_ready,
        GDn_points_address0 => grp_makeSuperPoint_alignedToLine7_fu_376_GDn_points_address0,
        GDn_points_ce0 => grp_makeSuperPoint_alignedToLine7_fu_376_GDn_points_ce0,
        GDn_points_q0 => GDn_points_q0,
        i => i_reg_254,
        z_top => z_top,
        original_ppl => p_read,
        init_patch_address0 => grp_makeSuperPoint_alignedToLine7_fu_376_init_patch_address0,
        init_patch_ce0 => grp_makeSuperPoint_alignedToLine7_fu_376_init_patch_ce0,
        init_patch_we0 => grp_makeSuperPoint_alignedToLine7_fu_376_init_patch_we0,
        init_patch_d0 => grp_makeSuperPoint_alignedToLine7_fu_376_init_patch_d0,
        GDarrayDecoded_address0 => grp_makeSuperPoint_alignedToLine7_fu_376_GDarrayDecoded_address0,
        GDarrayDecoded_ce0 => grp_makeSuperPoint_alignedToLine7_fu_376_GDarrayDecoded_ce0,
        GDarrayDecoded_q0 => GDarrayDecoded_q0);

    grp_wedgePatch_init_fu_393 : component MPSQ_wedgePatch_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_wedgePatch_init_fu_393_ap_start,
        ap_done => grp_wedgePatch_init_fu_393_ap_done,
        ap_idle => grp_wedgePatch_init_fu_393_ap_idle,
        ap_ready => grp_wedgePatch_init_fu_393_ap_ready,
        wp_superpoints_address0 => grp_wedgePatch_init_fu_393_wp_superpoints_address0,
        wp_superpoints_ce0 => grp_wedgePatch_init_fu_393_wp_superpoints_ce0,
        wp_superpoints_we0 => grp_wedgePatch_init_fu_393_wp_superpoints_we0,
        wp_superpoints_d0 => grp_wedgePatch_init_fu_393_wp_superpoints_d0,
        wp_superpoints_q0 => NPpatches_superpoints_V_q0,
        wp_superpoints_address1 => grp_wedgePatch_init_fu_393_wp_superpoints_address1,
        wp_superpoints_ce1 => grp_wedgePatch_init_fu_393_wp_superpoints_ce1,
        wp_superpoints_q1 => NPpatches_superpoints_V_q1,
        wp_parameters_address0 => grp_wedgePatch_init_fu_393_wp_parameters_address0,
        wp_parameters_ce0 => grp_wedgePatch_init_fu_393_wp_parameters_ce0,
        wp_parameters_we0 => grp_wedgePatch_init_fu_393_wp_parameters_we0,
        wp_parameters_d0 => grp_wedgePatch_init_fu_393_wp_parameters_d0,
        wp_parameters_q0 => NPpatches_parameters_V_q0,
        wp_parameters_address1 => grp_wedgePatch_init_fu_393_wp_parameters_address1,
        wp_parameters_ce1 => grp_wedgePatch_init_fu_393_wp_parameters_ce1,
        wp_parameters_we1 => grp_wedgePatch_init_fu_393_wp_parameters_we1,
        wp_parameters_d1 => grp_wedgePatch_init_fu_393_wp_parameters_d1,
        wp_parameters_q1 => NPpatches_parameters_V_q1,
        superpointsI_address0 => grp_wedgePatch_init_fu_393_superpointsI_address0,
        superpointsI_ce0 => grp_wedgePatch_init_fu_393_superpointsI_ce0,
        superpointsI_q0 => init_patch_V_q0);

    grp_add_patch5_fu_402 : component MPSQ_add_patch5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_add_patch5_fu_402_ap_start,
        ap_done => grp_add_patch5_fu_402_ap_done,
        ap_idle => grp_add_patch5_fu_402_ap_idle,
        ap_ready => grp_add_patch5_fu_402_ap_ready,
        n_patches => grp_add_patch5_fu_402_n_patches,
        n_patches_ap_vld => grp_add_patch5_fu_402_n_patches_ap_vld,
        n_patches_read => n_patches_i,
        wp_superpoints_address0 => grp_add_patch5_fu_402_wp_superpoints_address0,
        wp_superpoints_ce0 => grp_add_patch5_fu_402_wp_superpoints_ce0,
        wp_superpoints_q0 => NPpatches_superpoints_V_q0,
        wp_parameters_address0 => grp_add_patch5_fu_402_wp_parameters_address0,
        wp_parameters_ce0 => grp_add_patch5_fu_402_wp_parameters_ce0,
        wp_parameters_q0 => NPpatches_parameters_V_q0,
        patches_superpoints_address0 => grp_add_patch5_fu_402_patches_superpoints_address0,
        patches_superpoints_ce0 => grp_add_patch5_fu_402_patches_superpoints_ce0,
        patches_superpoints_we0 => grp_add_patch5_fu_402_patches_superpoints_we0,
        patches_superpoints_d0 => grp_add_patch5_fu_402_patches_superpoints_d0,
        patches_superpoints_q0 => patches_superpoints_q0,
        patches_parameters_address0 => grp_add_patch5_fu_402_patches_parameters_address0,
        patches_parameters_ce0 => grp_add_patch5_fu_402_patches_parameters_ce0,
        patches_parameters_we0 => grp_add_patch5_fu_402_patches_parameters_we0,
        patches_parameters_d0 => grp_add_patch5_fu_402_patches_parameters_d0,
        patches_parameters_q0 => patches_parameters_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_add_patch5_fu_402_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_add_patch5_fu_402_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    grp_add_patch5_fu_402_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_add_patch5_fu_402_ap_ready = ap_const_logic_1)) then 
                    grp_add_patch5_fu_402_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_makeSuperPoint_alignedToLine7_fu_376_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_makeSuperPoint_alignedToLine7_fu_376_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln1440_fu_570_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    grp_makeSuperPoint_alignedToLine7_fu_376_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_makeSuperPoint_alignedToLine7_fu_376_ap_ready = ap_const_logic_1)) then 
                    grp_makeSuperPoint_alignedToLine7_fu_376_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_wedgePatch_init_fu_393_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_wedgePatch_init_fu_393_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    grp_wedgePatch_init_fu_393_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_wedgePatch_init_fu_393_ap_ready = ap_const_logic_1)) then 
                    grp_wedgePatch_init_fu_393_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    a_reg_210_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1414_fu_421_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                a_reg_210 <= select_ln1414_1_fu_447_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                a_reg_210 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    b_1_reg_277_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1440_fu_570_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                b_1_reg_277 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1457_fu_582_p2 = ap_const_lv1_0))) then 
                b_1_reg_277 <= select_ln1457_1_fu_608_p3;
            end if; 
        end if;
    end process;

    b_2_reg_332_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                b_2_reg_332 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln1487_fu_731_p2 = ap_const_lv1_0))) then 
                b_2_reg_332 <= select_ln1487_1_fu_757_p3;
            end if; 
        end if;
    end process;

    b_reg_232_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1414_fu_421_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                b_reg_232 <= select_ln1420_1_fu_505_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                b_reg_232 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    c_1_reg_299_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1440_fu_570_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                c_1_reg_299 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1457_fu_582_p2 = ap_const_lv1_0))) then 
                c_1_reg_299 <= select_ln1463_1_fu_666_p3;
            end if; 
        end if;
    end process;

    c_2_reg_354_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                c_2_reg_354 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln1487_fu_731_p2 = ap_const_lv1_0))) then 
                c_2_reg_354 <= select_ln1493_1_fu_815_p3;
            end if; 
        end if;
    end process;

    c_reg_243_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1414_fu_421_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                c_reg_243 <= add_ln1426_fu_544_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                c_reg_243 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    d_1_reg_365_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                d_1_reg_365 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln1487_fu_731_p2 = ap_const_lv1_0))) then 
                d_1_reg_365 <= add_ln1499_fu_874_p2;
            end if; 
        end if;
    end process;

    d_reg_310_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1440_fu_570_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                d_reg_310 <= ap_const_lv2_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1457_fu_582_p2 = ap_const_lv1_0))) then 
                d_reg_310 <= add_ln1469_fu_705_p2;
            end if; 
        end if;
    end process;

    i_reg_254_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                i_reg_254 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_makeSuperPoint_alignedToLine7_fu_376_ap_done = ap_const_logic_1))) then 
                i_reg_254 <= add_ln1440_reg_932;
            end if; 
        end if;
    end process;

    indvar_flatten13_reg_199_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1414_fu_421_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                indvar_flatten13_reg_199 <= add_ln1414_1_fu_415_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten13_reg_199 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    indvar_flatten21_reg_288_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1440_fu_570_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                indvar_flatten21_reg_288 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1457_fu_582_p2 = ap_const_lv1_0))) then 
                indvar_flatten21_reg_288 <= select_ln1463_2_fu_717_p3;
            end if; 
        end if;
    end process;

    indvar_flatten35_reg_266_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1440_fu_570_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                indvar_flatten35_reg_266 <= ap_const_lv8_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1457_fu_582_p2 = ap_const_lv1_0))) then 
                indvar_flatten35_reg_266 <= add_ln1457_1_fu_576_p2;
            end if; 
        end if;
    end process;

    indvar_flatten43_reg_343_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                indvar_flatten43_reg_343 <= ap_const_lv6_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln1487_fu_731_p2 = ap_const_lv1_0))) then 
                indvar_flatten43_reg_343 <= select_ln1493_2_fu_886_p3;
            end if; 
        end if;
    end process;

    indvar_flatten57_reg_321_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                indvar_flatten57_reg_321 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln1487_fu_731_p2 = ap_const_lv1_0))) then 
                indvar_flatten57_reg_321 <= add_ln1487_1_fu_725_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_221_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1414_fu_421_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                indvar_flatten_reg_221 <= select_ln1420_2_fu_556_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_221 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln1440_reg_932 <= add_ln1440_fu_564_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln1414_fu_421_p2, ap_CS_fsm_state4, icmp_ln1440_fu_570_p2, ap_CS_fsm_state6, icmp_ln1457_fu_582_p2, ap_CS_fsm_state8, icmp_ln1487_fu_731_p2, ap_CS_fsm_state10, grp_makeSuperPoint_alignedToLine7_fu_376_ap_done, grp_wedgePatch_init_fu_393_ap_done, grp_add_patch5_fu_402_ap_done, ap_CS_fsm_state5, ap_CS_fsm_state12)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln1414_fu_421_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((icmp_ln1440_fu_570_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_makeSuperPoint_alignedToLine7_fu_376_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1457_fu_582_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln1487_fu_731_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((grp_wedgePatch_init_fu_393_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((grp_add_patch5_fu_402_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    GDarrayDecoded_address0 <= grp_makeSuperPoint_alignedToLine7_fu_376_GDarrayDecoded_address0;
    GDarrayDecoded_ce0 <= grp_makeSuperPoint_alignedToLine7_fu_376_GDarrayDecoded_ce0;
    GDn_points_address0 <= grp_makeSuperPoint_alignedToLine7_fu_376_GDn_points_address0;
    GDn_points_ce0 <= grp_makeSuperPoint_alignedToLine7_fu_376_GDn_points_ce0;

    NPpatches_parameters_V_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state10, grp_wedgePatch_init_fu_393_wp_parameters_address0, grp_add_patch5_fu_402_wp_parameters_address0, ap_CS_fsm_state12, zext_ln1504_2_fu_869_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            NPpatches_parameters_V_address0 <= zext_ln1504_2_fu_869_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_parameters_V_address0 <= grp_add_patch5_fu_402_wp_parameters_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_address0 <= grp_wedgePatch_init_fu_393_wp_parameters_address0;
        else 
            NPpatches_parameters_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    NPpatches_parameters_V_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state10, grp_wedgePatch_init_fu_393_wp_parameters_ce0, grp_add_patch5_fu_402_wp_parameters_ce0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            NPpatches_parameters_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_parameters_V_ce0 <= grp_add_patch5_fu_402_wp_parameters_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_ce0 <= grp_wedgePatch_init_fu_393_wp_parameters_ce0;
        else 
            NPpatches_parameters_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_ce1_assign_proc : process(ap_CS_fsm_state10, grp_wedgePatch_init_fu_393_wp_parameters_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_ce1 <= grp_wedgePatch_init_fu_393_wp_parameters_ce1;
        else 
            NPpatches_parameters_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_d0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state10, grp_wedgePatch_init_fu_393_wp_parameters_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            NPpatches_parameters_V_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_d0 <= grp_wedgePatch_init_fu_393_wp_parameters_d0;
        else 
            NPpatches_parameters_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    NPpatches_parameters_V_we0_assign_proc : process(ap_CS_fsm_state8, icmp_ln1487_fu_731_p2, ap_CS_fsm_state10, grp_wedgePatch_init_fu_393_wp_parameters_we0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln1487_fu_731_p2 = ap_const_lv1_0))) then 
            NPpatches_parameters_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_we0 <= grp_wedgePatch_init_fu_393_wp_parameters_we0;
        else 
            NPpatches_parameters_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_we1_assign_proc : process(ap_CS_fsm_state10, grp_wedgePatch_init_fu_393_wp_parameters_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_we1 <= grp_wedgePatch_init_fu_393_wp_parameters_we1;
        else 
            NPpatches_parameters_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_V_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state10, grp_wedgePatch_init_fu_393_wp_superpoints_address0, grp_add_patch5_fu_402_wp_superpoints_address0, ap_CS_fsm_state12, zext_ln1474_2_fu_700_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            NPpatches_superpoints_V_address0 <= zext_ln1474_2_fu_700_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_V_address0 <= grp_add_patch5_fu_402_wp_superpoints_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_V_address0 <= grp_wedgePatch_init_fu_393_wp_superpoints_address0;
        else 
            NPpatches_superpoints_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    NPpatches_superpoints_V_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state10, grp_wedgePatch_init_fu_393_wp_superpoints_ce0, grp_add_patch5_fu_402_wp_superpoints_ce0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            NPpatches_superpoints_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_V_ce0 <= grp_add_patch5_fu_402_wp_superpoints_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_V_ce0 <= grp_wedgePatch_init_fu_393_wp_superpoints_ce0;
        else 
            NPpatches_superpoints_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_V_ce1_assign_proc : process(ap_CS_fsm_state10, grp_wedgePatch_init_fu_393_wp_superpoints_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_V_ce1 <= grp_wedgePatch_init_fu_393_wp_superpoints_ce1;
        else 
            NPpatches_superpoints_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_V_d0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state10, grp_wedgePatch_init_fu_393_wp_superpoints_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            NPpatches_superpoints_V_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_V_d0 <= grp_wedgePatch_init_fu_393_wp_superpoints_d0;
        else 
            NPpatches_superpoints_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    NPpatches_superpoints_V_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln1457_fu_582_p2, ap_CS_fsm_state10, grp_wedgePatch_init_fu_393_wp_superpoints_we0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1457_fu_582_p2 = ap_const_lv1_0))) then 
            NPpatches_superpoints_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_V_we0 <= grp_wedgePatch_init_fu_393_wp_superpoints_we0;
        else 
            NPpatches_superpoints_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln1414_1_fu_415_p2 <= std_logic_vector(unsigned(indvar_flatten13_reg_199) + unsigned(ap_const_lv8_1));
    add_ln1414_fu_427_p2 <= std_logic_vector(unsigned(a_reg_210) + unsigned(ap_const_lv3_1));
    add_ln1420_1_fu_550_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_221) + unsigned(ap_const_lv7_1));
    add_ln1420_fu_485_p2 <= std_logic_vector(unsigned(select_ln1414_fu_439_p3) + unsigned(ap_const_lv5_1));
    add_ln1426_fu_544_p2 <= std_logic_vector(unsigned(select_ln1420_fu_497_p3) + unsigned(ap_const_lv2_1));
    add_ln1431_1_fu_533_p2 <= std_logic_vector(unsigned(empty_34_fu_523_p2) + unsigned(zext_ln1431_1_fu_529_p1));
    add_ln1431_fu_517_p2 <= std_logic_vector(unsigned(zext_ln1420_fu_463_p1) + unsigned(zext_ln1431_fu_513_p1));
    add_ln1440_fu_564_p2 <= std_logic_vector(unsigned(i_reg_254) + unsigned(ap_const_lv3_1));
    add_ln1457_1_fu_576_p2 <= std_logic_vector(unsigned(indvar_flatten35_reg_266) + unsigned(ap_const_lv8_1));
    add_ln1457_fu_588_p2 <= std_logic_vector(unsigned(b_1_reg_277) + unsigned(ap_const_lv3_1));
    add_ln1463_1_fu_711_p2 <= std_logic_vector(unsigned(indvar_flatten21_reg_288) + unsigned(ap_const_lv7_1));
    add_ln1463_fu_646_p2 <= std_logic_vector(unsigned(select_ln1457_fu_600_p3) + unsigned(ap_const_lv5_1));
    add_ln1469_fu_705_p2 <= std_logic_vector(unsigned(select_ln1463_fu_658_p3) + unsigned(ap_const_lv2_1));
    add_ln1474_1_fu_694_p2 <= std_logic_vector(unsigned(empty_37_fu_684_p2) + unsigned(zext_ln1474_1_fu_690_p1));
    add_ln1474_fu_678_p2 <= std_logic_vector(unsigned(zext_ln1463_fu_624_p1) + unsigned(zext_ln1474_fu_674_p1));
    add_ln1487_1_fu_725_p2 <= std_logic_vector(unsigned(indvar_flatten57_reg_321) + unsigned(ap_const_lv7_1));
    add_ln1487_fu_737_p2 <= std_logic_vector(unsigned(b_2_reg_332) + unsigned(ap_const_lv3_1));
    add_ln1493_1_fu_880_p2 <= std_logic_vector(unsigned(indvar_flatten43_reg_343) + unsigned(ap_const_lv6_1));
    add_ln1493_fu_795_p2 <= std_logic_vector(unsigned(select_ln1487_fu_749_p3) + unsigned(ap_const_lv3_1));
    add_ln1499_fu_874_p2 <= std_logic_vector(unsigned(select_ln1493_fu_807_p3) + unsigned(ap_const_lv3_1));
    add_ln1504_1_fu_863_p2 <= std_logic_vector(unsigned(sub_ln1504_fu_853_p2) + unsigned(zext_ln1504_1_fu_859_p1));
    add_ln1504_fu_827_p2 <= std_logic_vector(unsigned(zext_ln1493_fu_773_p1) + unsigned(zext_ln1504_fu_823_p1));
    and_ln1414_fu_479_p2 <= (xor_ln1414_fu_467_p2 and icmp_ln1426_fu_473_p2);
    and_ln1457_fu_640_p2 <= (xor_ln1457_fu_628_p2 and icmp_ln1469_fu_634_p2);
    and_ln1487_fu_789_p2 <= (xor_ln1487_fu_777_p2 and icmp_ln1499_fu_783_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_add_patch5_fu_402_ap_done, ap_CS_fsm_state12)
    begin
        if ((((grp_add_patch5_fu_402_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_add_patch5_fu_402_ap_done, ap_CS_fsm_state12)
    begin
        if (((grp_add_patch5_fu_402_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    empty_34_fu_523_p2 <= std_logic_vector(shift_left(unsigned(add_ln1431_fu_517_p2),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    empty_37_fu_684_p2 <= std_logic_vector(shift_left(unsigned(add_ln1474_fu_678_p2),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    grp_add_patch5_fu_402_ap_start <= grp_add_patch5_fu_402_ap_start_reg;
    grp_makeSuperPoint_alignedToLine7_fu_376_ap_start <= grp_makeSuperPoint_alignedToLine7_fu_376_ap_start_reg;
    grp_wedgePatch_init_fu_393_ap_start <= grp_wedgePatch_init_fu_393_ap_start_reg;
    icmp_ln1414_fu_421_p2 <= "1" when (indvar_flatten13_reg_199 = ap_const_lv8_A0) else "0";
    icmp_ln1420_fu_433_p2 <= "1" when (indvar_flatten_reg_221 = ap_const_lv7_20) else "0";
    icmp_ln1426_fu_473_p2 <= "1" when (c_reg_243 = ap_const_lv2_2) else "0";
    icmp_ln1440_fu_570_p2 <= "1" when (i_reg_254 = ap_const_lv3_5) else "0";
    icmp_ln1457_fu_582_p2 <= "1" when (indvar_flatten35_reg_266 = ap_const_lv8_A0) else "0";
    icmp_ln1463_fu_594_p2 <= "1" when (indvar_flatten21_reg_288 = ap_const_lv7_20) else "0";
    icmp_ln1469_fu_634_p2 <= "1" when (d_reg_310 = ap_const_lv2_2) else "0";
    icmp_ln1487_fu_731_p2 <= "1" when (indvar_flatten57_reg_321 = ap_const_lv7_78) else "0";
    icmp_ln1493_fu_743_p2 <= "1" when (indvar_flatten43_reg_343 = ap_const_lv6_18) else "0";
    icmp_ln1499_fu_783_p2 <= "1" when (d_1_reg_365 = ap_const_lv3_6) else "0";

    init_patch_V_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state10, grp_makeSuperPoint_alignedToLine7_fu_376_init_patch_address0, grp_wedgePatch_init_fu_393_superpointsI_address0, ap_CS_fsm_state5, zext_ln1431_2_fu_539_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            init_patch_V_address0 <= zext_ln1431_2_fu_539_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            init_patch_V_address0 <= grp_wedgePatch_init_fu_393_superpointsI_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_V_address0 <= grp_makeSuperPoint_alignedToLine7_fu_376_init_patch_address0;
        else 
            init_patch_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    init_patch_V_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state10, grp_makeSuperPoint_alignedToLine7_fu_376_init_patch_ce0, grp_wedgePatch_init_fu_393_superpointsI_ce0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            init_patch_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            init_patch_V_ce0 <= grp_wedgePatch_init_fu_393_superpointsI_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_V_ce0 <= grp_makeSuperPoint_alignedToLine7_fu_376_init_patch_ce0;
        else 
            init_patch_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_V_d0_assign_proc : process(ap_CS_fsm_state2, grp_makeSuperPoint_alignedToLine7_fu_376_init_patch_d0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            init_patch_V_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_V_d0 <= grp_makeSuperPoint_alignedToLine7_fu_376_init_patch_d0;
        else 
            init_patch_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_V_we0_assign_proc : process(ap_CS_fsm_state2, icmp_ln1414_fu_421_p2, grp_makeSuperPoint_alignedToLine7_fu_376_init_patch_we0, ap_CS_fsm_state5)
    begin
        if (((icmp_ln1414_fu_421_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            init_patch_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_V_we0 <= grp_makeSuperPoint_alignedToLine7_fu_376_init_patch_we0;
        else 
            init_patch_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    n_patches_o_assign_proc : process(n_patches_i, grp_add_patch5_fu_402_n_patches, grp_add_patch5_fu_402_n_patches_ap_vld, ap_CS_fsm_state12)
    begin
        if (((grp_add_patch5_fu_402_n_patches_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            n_patches_o <= grp_add_patch5_fu_402_n_patches;
        else 
            n_patches_o <= n_patches_i;
        end if; 
    end process;


    n_patches_o_ap_vld_assign_proc : process(grp_add_patch5_fu_402_n_patches_ap_vld, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            n_patches_o_ap_vld <= grp_add_patch5_fu_402_n_patches_ap_vld;
        else 
            n_patches_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    or_ln1420_fu_491_p2 <= (icmp_ln1420_fu_433_p2 or and_ln1414_fu_479_p2);
    or_ln1463_fu_652_p2 <= (icmp_ln1463_fu_594_p2 or and_ln1457_fu_640_p2);
    or_ln1493_fu_801_p2 <= (icmp_ln1493_fu_743_p2 or and_ln1487_fu_789_p2);
    p_shl1_cast_fu_845_p3 <= (add_ln1504_fu_827_p2 & ap_const_lv1_0);
    p_shl_cast_fu_837_p3 <= (trunc_ln1504_fu_833_p1 & ap_const_lv3_0);
    patches_parameters_address0 <= grp_add_patch5_fu_402_patches_parameters_address0;
    patches_parameters_ce0 <= grp_add_patch5_fu_402_patches_parameters_ce0;
    patches_parameters_d0 <= grp_add_patch5_fu_402_patches_parameters_d0;
    patches_parameters_we0 <= grp_add_patch5_fu_402_patches_parameters_we0;
    patches_superpoints_address0 <= grp_add_patch5_fu_402_patches_superpoints_address0;
    patches_superpoints_ce0 <= grp_add_patch5_fu_402_patches_superpoints_ce0;
    patches_superpoints_d0 <= grp_add_patch5_fu_402_patches_superpoints_d0;
    patches_superpoints_we0 <= grp_add_patch5_fu_402_patches_superpoints_we0;
    select_ln1414_1_fu_447_p3 <= 
        add_ln1414_fu_427_p2 when (icmp_ln1420_fu_433_p2(0) = '1') else 
        a_reg_210;
    select_ln1414_fu_439_p3 <= 
        ap_const_lv5_0 when (icmp_ln1420_fu_433_p2(0) = '1') else 
        b_reg_232;
    select_ln1420_1_fu_505_p3 <= 
        add_ln1420_fu_485_p2 when (and_ln1414_fu_479_p2(0) = '1') else 
        select_ln1414_fu_439_p3;
    select_ln1420_2_fu_556_p3 <= 
        ap_const_lv7_1 when (icmp_ln1420_fu_433_p2(0) = '1') else 
        add_ln1420_1_fu_550_p2;
    select_ln1420_fu_497_p3 <= 
        ap_const_lv2_0 when (or_ln1420_fu_491_p2(0) = '1') else 
        c_reg_243;
    select_ln1457_1_fu_608_p3 <= 
        add_ln1457_fu_588_p2 when (icmp_ln1463_fu_594_p2(0) = '1') else 
        b_1_reg_277;
    select_ln1457_fu_600_p3 <= 
        ap_const_lv5_0 when (icmp_ln1463_fu_594_p2(0) = '1') else 
        c_1_reg_299;
    select_ln1463_1_fu_666_p3 <= 
        add_ln1463_fu_646_p2 when (and_ln1457_fu_640_p2(0) = '1') else 
        select_ln1457_fu_600_p3;
    select_ln1463_2_fu_717_p3 <= 
        ap_const_lv7_1 when (icmp_ln1463_fu_594_p2(0) = '1') else 
        add_ln1463_1_fu_711_p2;
    select_ln1463_fu_658_p3 <= 
        ap_const_lv2_0 when (or_ln1463_fu_652_p2(0) = '1') else 
        d_reg_310;
    select_ln1487_1_fu_757_p3 <= 
        add_ln1487_fu_737_p2 when (icmp_ln1493_fu_743_p2(0) = '1') else 
        b_2_reg_332;
    select_ln1487_fu_749_p3 <= 
        ap_const_lv3_0 when (icmp_ln1493_fu_743_p2(0) = '1') else 
        c_2_reg_354;
    select_ln1493_1_fu_815_p3 <= 
        add_ln1493_fu_795_p2 when (and_ln1487_fu_789_p2(0) = '1') else 
        select_ln1487_fu_749_p3;
    select_ln1493_2_fu_886_p3 <= 
        ap_const_lv6_1 when (icmp_ln1493_fu_743_p2(0) = '1') else 
        add_ln1493_1_fu_880_p2;
    select_ln1493_fu_807_p3 <= 
        ap_const_lv3_0 when (or_ln1493_fu_801_p2(0) = '1') else 
        d_1_reg_365;
    sub_ln1504_fu_853_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_837_p3) - unsigned(p_shl1_cast_fu_845_p3));
    tmp_1_fu_765_p3 <= (select_ln1487_1_fu_757_p3 & ap_const_lv2_0);
    tmp_fu_455_p3 <= (select_ln1414_1_fu_447_p3 & ap_const_lv4_0);
    tmp_s_fu_616_p3 <= (select_ln1457_1_fu_608_p3 & ap_const_lv4_0);
    trunc_ln1504_fu_833_p1 <= add_ln1504_fu_827_p2(4 - 1 downto 0);
    xor_ln1414_fu_467_p2 <= (icmp_ln1420_fu_433_p2 xor ap_const_lv1_1);
    xor_ln1457_fu_628_p2 <= (icmp_ln1463_fu_594_p2 xor ap_const_lv1_1);
    xor_ln1487_fu_777_p2 <= (icmp_ln1493_fu_743_p2 xor ap_const_lv1_1);
    zext_ln1420_fu_463_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_455_p3),8));
    zext_ln1431_1_fu_529_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1420_fu_497_p3),8));
    zext_ln1431_2_fu_539_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1431_1_fu_533_p2),64));
    zext_ln1431_fu_513_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1420_1_fu_505_p3),8));
    zext_ln1463_fu_624_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_616_p3),8));
    zext_ln1474_1_fu_690_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1463_fu_658_p3),8));
    zext_ln1474_2_fu_700_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1474_1_fu_694_p2),64));
    zext_ln1474_fu_674_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1463_1_fu_666_p3),8));
    zext_ln1493_fu_773_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_765_p3),6));
    zext_ln1504_1_fu_859_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1493_fu_807_p3),7));
    zext_ln1504_2_fu_869_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1504_1_fu_863_p2),64));
    zext_ln1504_fu_823_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1493_1_fu_815_p3),6));
end behav;
