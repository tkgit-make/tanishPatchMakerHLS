-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity MPSQ_makeThirdPatch is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    n_patches_i : IN STD_LOGIC_VECTOR (7 downto 0);
    n_patches_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    n_patches_o_ap_vld : OUT STD_LOGIC;
    GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    GDn_points_ce0 : OUT STD_LOGIC;
    GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_patch_stream_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    output_patch_stream_V_full_n : IN STD_LOGIC;
    output_patch_stream_V_write : OUT STD_LOGIC;
    lastPatchIndex : IN STD_LOGIC_VECTOR (7 downto 0);
    z_top_min : IN STD_LOGIC_VECTOR (31 downto 0);
    z_top_max : IN STD_LOGIC_VECTOR (31 downto 0);
    complementary_apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
    apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
    ppl : IN STD_LOGIC_VECTOR (31 downto 0);
    GDarrayDecoded_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    GDarrayDecoded_ce0 : OUT STD_LOGIC;
    GDarrayDecoded_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    patches_superpoints_ce0 : OUT STD_LOGIC;
    patches_superpoints_we0 : OUT STD_LOGIC;
    patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    patches_superpoints_ce1 : OUT STD_LOGIC;
    patches_superpoints_we1 : OUT STD_LOGIC;
    patches_superpoints_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_parameters_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    patches_parameters_ce0 : OUT STD_LOGIC;
    patches_parameters_we0 : OUT STD_LOGIC;
    patches_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    patches_parameters_ce1 : OUT STD_LOGIC;
    patches_parameters_we1 : OUT STD_LOGIC;
    patches_parameters_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1072_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1072_p_din2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1072_p_din3 : OUT STD_LOGIC_VECTOR (2 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1072_p_din4 : OUT STD_LOGIC_VECTOR (2 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1072_p_din5 : OUT STD_LOGIC_VECTOR (2 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1072_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1072_p_ce : OUT STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1072_p_start : OUT STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1072_p_ready : IN STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1072_p_done : IN STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1072_p_idle : IN STD_LOGIC );
end;


architecture behav of MPSQ_makeThirdPatch is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (78 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (78 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (78 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (78 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (78 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (78 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (78 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (78 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (78 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (78 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_FFF0BDC0 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111100001011110111000000";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv64_1C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011100";
    constant ap_const_lv64_18 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011000";
    constant ap_const_lv64_1E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011110";
    constant ap_const_lv64_1A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011010";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_11E1A2FF : STD_LOGIC_VECTOR (31 downto 0) := "00010001111000011010001011111111";
    constant ap_const_lv33_1FFFFFF9C : STD_LOGIC_VECTOR (32 downto 0) := "111111111111111111111111110011100";
    constant ap_const_lv33_32 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000110010";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv32_E4E1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000111001001110000111000000";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_boolean_0 : BOOLEAN := false;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_straightLineProjectorFromLayerIJtoK_fu_525_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_557 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal reg_561 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal makeHorizontallyShiftedPatch_reg_409 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state77 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal icmp_ln1066_fu_572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1066_reg_1199 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal original_topR_jL_V_reg_1233 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln1069_fu_594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1069_reg_1240 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal patches_parameters_addr_9_reg_1272 : STD_LOGIC_VECTOR (6 downto 0);
    signal patches_parameters_addr_14_reg_1277 : STD_LOGIC_VECTOR (6 downto 0);
    signal patches_parameters_addr_15_reg_1282 : STD_LOGIC_VECTOR (6 downto 0);
    signal phitmp_fu_640_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal original_topL_jL_V_3_reg_1292 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_fu_541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_2_reg_1300 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_2_fu_658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_2_reg_1304 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal phitmp4_fu_680_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal complementary_topR_jR_V_3_reg_1313 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal and_ln1079_fu_708_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1079_reg_1322 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal phitmp3_fu_730_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal complementary_topL_jR_V_3_reg_1331 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal icmp_ln886_4_fu_736_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_4_reg_1340 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal icmp_ln878_4_fu_752_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_4_reg_1344 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp5_fu_774_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal or_ln1139_fu_780_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1139_reg_1367 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1139_2_fu_796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1139_2_reg_1372 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal complementary_topR_jL_V_reg_1377 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal complementary_topL_jL_V_reg_1382 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_5_fu_802_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_5_reg_1387 : STD_LOGIC_VECTOR (0 downto 0);
    signal horizontalShiftTop_fu_808_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal horizontalShiftBottom_fu_812_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1119_fu_842_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shiftOriginal_1_fu_846_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shiftOriginal_1_reg_1419 : STD_LOGIC_VECTOR (0 downto 0);
    signal lnot_fu_856_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lnot_reg_1433 : STD_LOGIC_VECTOR (0 downto 0);
    signal newZtop_V_1_fu_862_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newZtop_V_1_reg_1438 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1107_fu_868_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal or_ln1139_1_fu_888_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1139_1_reg_1450 : STD_LOGIC_VECTOR (0 downto 0);
    signal loopCounter_2_fu_893_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loopCounter_2_reg_1454 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln1139_2_fu_907_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1139_2_reg_1459 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1139_1_fu_946_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1139_1_reg_1463 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln534_fu_958_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln534_reg_1467 : STD_LOGIC_VECTOR (31 downto 0);
    signal shifted_Align_5_fu_981_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal shifted_Align_5_reg_1472 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1107_1_fu_988_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1107_1_reg_1477 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makePatch_alignedToLine_fu_466_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ppl_assign1_reg_1483 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal complementary_topR_jR_V_4_fu_992_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topR_jR_V_4_reg_1488 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal complementary_topL_jR_V_4_fu_999_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topL_jR_V_4_reg_1495 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topR_jR_V_3_fu_1006_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topR_jR_V_3_reg_1502 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topL_jR_V_3_fu_1013_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topL_jR_V_3_reg_1509 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topL_jL_V_4_fu_1020_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topL_jL_V_4_reg_1515 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal original_topR_jL_V_3_fu_1027_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topR_jL_V_3_reg_1520 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topR_jL_V_3_fu_1034_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topR_jL_V_3_reg_1525 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topL_jL_V_3_fu_1041_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topL_jL_V_3_reg_1531 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_17_fu_1048_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_17_reg_1537 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_18_fu_1052_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_18_reg_1542 : STD_LOGIC_VECTOR (32 downto 0);
    signal horizontalShiftTop_1_fu_1055_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal horizontalShiftTop_1_reg_1547 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_19_fu_1060_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_19_reg_1552 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_20_fu_1064_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_20_reg_1557 : STD_LOGIC_VECTOR (32 downto 0);
    signal horizontalShiftBottom_1_fu_1067_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal horizontalShiftBottom_1_reg_1562 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln878_6_fu_1072_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_6_reg_1567 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal horizontalOverlapTop_V_1_fu_1108_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal horizontalOverlapTop_V_1_reg_1571 : STD_LOGIC_VECTOR (31 downto 0);
    signal horizontalOverlapBottom_V_1_fu_1146_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal horizontalOverlapBottom_V_1_reg_1576 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln1214_fu_1174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1214_reg_1584 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal icmp_ln1216_fu_1179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1216_reg_1588 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_makePatch_alignedToLine_fu_466_ap_start : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_466_ap_done : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_466_ap_idle : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_466_ap_ready : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_466_n_patches_o : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_makePatch_alignedToLine_fu_466_n_patches_o_ap_vld : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_466_GDn_points_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_makePatch_alignedToLine_fu_466_GDn_points_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_466_output_patch_stream_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_makePatch_alignedToLine_fu_466_output_patch_stream_V_write : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_466_GDarrayDecoded_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_makePatch_alignedToLine_fu_466_GDarrayDecoded_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_466_patches_superpoints_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_makePatch_alignedToLine_fu_466_patches_superpoints_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_466_patches_superpoints_we0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_466_patches_superpoints_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_makePatch_alignedToLine_fu_466_patches_superpoints_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_makePatch_alignedToLine_fu_466_patches_superpoints_ce1 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_466_patches_superpoints_we1 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_466_patches_superpoints_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_makePatch_alignedToLine_fu_466_patches_parameters_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_makePatch_alignedToLine_fu_466_patches_parameters_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_466_patches_parameters_we0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_466_patches_parameters_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getShadows_fu_493_ap_start : STD_LOGIC;
    signal grp_getShadows_fu_493_ap_done : STD_LOGIC;
    signal grp_getShadows_fu_493_ap_idle : STD_LOGIC;
    signal grp_getShadows_fu_493_ap_ready : STD_LOGIC;
    signal grp_getShadows_fu_493_wp_superpoints_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_getShadows_fu_493_wp_superpoints_ce0 : STD_LOGIC;
    signal grp_getShadows_fu_493_wp_superpoints_offset : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_getShadows_fu_493_wp_parameters_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_getShadows_fu_493_wp_parameters_ce0 : STD_LOGIC;
    signal grp_getShadows_fu_493_wp_parameters_we0 : STD_LOGIC;
    signal grp_getShadows_fu_493_wp_parameters_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getShadows_fu_493_wp_parameters_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_getShadows_fu_493_wp_parameters_ce1 : STD_LOGIC;
    signal grp_getShadows_fu_493_wp_parameters_we1 : STD_LOGIC;
    signal grp_getShadows_fu_493_wp_parameters_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getShadows_fu_493_wp_parameters_offset : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_delete_patch_fu_511_ap_start : STD_LOGIC;
    signal grp_delete_patch_fu_511_ap_done : STD_LOGIC;
    signal grp_delete_patch_fu_511_ap_idle : STD_LOGIC;
    signal grp_delete_patch_fu_511_ap_ready : STD_LOGIC;
    signal grp_delete_patch_fu_511_n_patches : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_delete_patch_fu_511_n_patches_ap_vld : STD_LOGIC;
    signal grp_delete_patch_fu_511_index : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_delete_patch_fu_511_patches_superpoints_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_delete_patch_fu_511_patches_superpoints_ce0 : STD_LOGIC;
    signal grp_delete_patch_fu_511_patches_superpoints_we0 : STD_LOGIC;
    signal grp_delete_patch_fu_511_patches_superpoints_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_delete_patch_fu_511_patches_superpoints_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_delete_patch_fu_511_patches_superpoints_ce1 : STD_LOGIC;
    signal grp_delete_patch_fu_511_patches_parameters_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_delete_patch_fu_511_patches_parameters_ce0 : STD_LOGIC;
    signal grp_delete_patch_fu_511_patches_parameters_we0 : STD_LOGIC;
    signal grp_delete_patch_fu_511_patches_parameters_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_delete_patch_fu_511_patches_parameters_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_delete_patch_fu_511_patches_parameters_ce1 : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_525_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_525_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_525_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_525_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_525_ap_ce : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_525_z_i : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_525_z_j : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_525_i : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_525_j : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_525_k : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_236 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_77_reg_248 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_78_reg_263 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal empty_79_reg_275 : STD_LOGIC_VECTOR (0 downto 0);
    signal ppl_assign_0_reg_289 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal icmp_ln1204_fu_1162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_80_reg_299 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_81_reg_308 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topR_jR_V_reg_317 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topL_jL_V_reg_327 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topR_jL_V_1_reg_337 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topL_jR_V_reg_347 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topR_jL_V_1_reg_357 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topL_jL_V_1_reg_367 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topR_jR_V_1_reg_377 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topL_jR_V_1_reg_387 : STD_LOGIC_VECTOR (31 downto 0);
    signal newZtop_V_reg_397 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_414_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal shifted_Align_2_reg_423 : STD_LOGIC_VECTOR (63 downto 0);
    signal loopCounter_reg_433 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_ln166_reg_445 : STD_LOGIC_VECTOR (31 downto 0);
    signal agg_tmp172_0_reg_455 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makePatch_alignedToLine_fu_466_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal grp_getShadows_fu_493_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal grp_delete_patch_fu_511_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal ap_CS_fsm_state78 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal grp_straightLineProjectorFromLayerIJtoK_fu_525_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (78 downto 0);
    signal ap_NS_fsm_state7 : STD_LOGIC;
    signal ap_NS_fsm_state17 : STD_LOGIC;
    signal ap_NS_fsm_state27 : STD_LOGIC;
    signal ap_NS_fsm_state37 : STD_LOGIC;
    signal ap_NS_fsm_state44 : STD_LOGIC;
    signal ap_NS_fsm_state45 : STD_LOGIC;
    signal ap_NS_fsm_state62 : STD_LOGIC;
    signal ap_NS_fsm_state70 : STD_LOGIC;
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal select_ln1068_1_fu_580_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln1068_fu_600_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln1092_fu_608_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln1093_fu_616_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal horizontalOverlapBottom_V_fu_116 : STD_LOGIC_VECTOR (31 downto 0);
    signal horizontalOverlapTop_V_fu_120 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal grp_fu_541_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln878_fu_588_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln878_fu_588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_624_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_566_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln180_fu_632_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_12_fu_649_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_fu_646_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_12_fu_649_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_fu_652_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_12_fu_664_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln180_4_fu_672_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_14_fu_689_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_13_fu_686_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_14_fu_689_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_7_fu_692_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln878_3_fu_704_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_3_fu_698_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_3_fu_704_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_714_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln180_5_fu_722_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_4_fu_736_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_16_fu_743_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_15_fu_740_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_16_fu_743_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_8_fu_746_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_14_fu_758_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln180_6_fu_766_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_816_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal shifted_Align_fu_824_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shifted_Align_fu_824_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shifted_Align_1_fu_836_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shifted_Align_fu_824_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal shifted_Align_1_fu_836_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal shiftOriginal_fu_830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i301_not_fu_851_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_872_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln1139_fu_882_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_547_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_552_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_913_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln1139_1_fu_923_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1139_3_fu_929_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1139_fu_934_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1139_fu_940_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_5_fu_952_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln534_fu_966_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shifted_Align_3_fu_969_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shifted_Align_4_fu_975_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln215_21_fu_1078_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_22_fu_1086_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_9_fu_1081_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_10_fu_1089_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln878_7_fu_1094_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1187_fu_1100_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1187_1_fu_1104_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_23_fu_1116_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_24_fu_1124_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_11_fu_1119_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_12_fu_1127_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln878_8_fu_1132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1188_fu_1138_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1188_1_fu_1142_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_6_fu_1168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op356_call_state79 : BOOLEAN;
    signal ap_block_state79_on_subcall_done : BOOLEAN;
    signal ap_block_state55_on_subcall_done : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component MPSQ_makePatch_alignedToLine IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        n_patches_i : IN STD_LOGIC_VECTOR (7 downto 0);
        n_patches_o : OUT STD_LOGIC_VECTOR (7 downto 0);
        n_patches_o_ap_vld : OUT STD_LOGIC;
        GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        GDn_points_ce0 : OUT STD_LOGIC;
        GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_patch_stream_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        output_patch_stream_V_full_n : IN STD_LOGIC;
        output_patch_stream_V_write : OUT STD_LOGIC;
        apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
        z_top : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        leftRight : IN STD_LOGIC_VECTOR (0 downto 0);
        GDarrayDecoded_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        GDarrayDecoded_ce0 : OUT STD_LOGIC;
        GDarrayDecoded_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        patches_superpoints_ce0 : OUT STD_LOGIC;
        patches_superpoints_we0 : OUT STD_LOGIC;
        patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        patches_superpoints_ce1 : OUT STD_LOGIC;
        patches_superpoints_we1 : OUT STD_LOGIC;
        patches_superpoints_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_parameters_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        patches_parameters_ce0 : OUT STD_LOGIC;
        patches_parameters_we0 : OUT STD_LOGIC;
        patches_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MPSQ_getShadows IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        wp_superpoints_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        wp_superpoints_ce0 : OUT STD_LOGIC;
        wp_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        wp_superpoints_offset : IN STD_LOGIC_VECTOR (0 downto 0);
        wp_parameters_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        wp_parameters_ce0 : OUT STD_LOGIC;
        wp_parameters_we0 : OUT STD_LOGIC;
        wp_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        wp_parameters_ce1 : OUT STD_LOGIC;
        wp_parameters_we1 : OUT STD_LOGIC;
        wp_parameters_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters_offset : IN STD_LOGIC_VECTOR (0 downto 0);
        zTopMin : IN STD_LOGIC_VECTOR (31 downto 0);
        zTopMax : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MPSQ_delete_patch IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        n_patches : OUT STD_LOGIC_VECTOR (7 downto 0);
        n_patches_ap_vld : OUT STD_LOGIC;
        n_patches_read : IN STD_LOGIC_VECTOR (7 downto 0);
        index : IN STD_LOGIC_VECTOR (1 downto 0);
        patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        patches_superpoints_ce0 : OUT STD_LOGIC;
        patches_superpoints_we0 : OUT STD_LOGIC;
        patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        patches_superpoints_ce1 : OUT STD_LOGIC;
        patches_superpoints_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_parameters_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        patches_parameters_ce0 : OUT STD_LOGIC;
        patches_parameters_we0 : OUT STD_LOGIC;
        patches_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        patches_parameters_ce1 : OUT STD_LOGIC;
        patches_parameters_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MPSQ_straightLineProjectorFromLayerIJtoK IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        z_i : IN STD_LOGIC_VECTOR (31 downto 0);
        z_j : IN STD_LOGIC_VECTOR (31 downto 0);
        i : IN STD_LOGIC_VECTOR (2 downto 0);
        j : IN STD_LOGIC_VECTOR (2 downto 0);
        k : IN STD_LOGIC_VECTOR (2 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_makePatch_alignedToLine_fu_466 : component MPSQ_makePatch_alignedToLine
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_makePatch_alignedToLine_fu_466_ap_start,
        ap_done => grp_makePatch_alignedToLine_fu_466_ap_done,
        ap_idle => grp_makePatch_alignedToLine_fu_466_ap_idle,
        ap_ready => grp_makePatch_alignedToLine_fu_466_ap_ready,
        n_patches_i => n_patches_i,
        n_patches_o => grp_makePatch_alignedToLine_fu_466_n_patches_o,
        n_patches_o_ap_vld => grp_makePatch_alignedToLine_fu_466_n_patches_o_ap_vld,
        GDn_points_address0 => grp_makePatch_alignedToLine_fu_466_GDn_points_address0,
        GDn_points_ce0 => grp_makePatch_alignedToLine_fu_466_GDn_points_ce0,
        GDn_points_q0 => GDn_points_q0,
        output_patch_stream_V_din => grp_makePatch_alignedToLine_fu_466_output_patch_stream_V_din,
        output_patch_stream_V_full_n => output_patch_stream_V_full_n,
        output_patch_stream_V_write => grp_makePatch_alignedToLine_fu_466_output_patch_stream_V_write,
        apexZ0 => trunc_ln1107_1_reg_1477,
        z_top => newZtop_V_1_reg_1438,
        p_read => ppl_assign_0_reg_289,
        leftRight => lnot_reg_1433,
        GDarrayDecoded_address0 => grp_makePatch_alignedToLine_fu_466_GDarrayDecoded_address0,
        GDarrayDecoded_ce0 => grp_makePatch_alignedToLine_fu_466_GDarrayDecoded_ce0,
        GDarrayDecoded_q0 => GDarrayDecoded_q0,
        patches_superpoints_address0 => grp_makePatch_alignedToLine_fu_466_patches_superpoints_address0,
        patches_superpoints_ce0 => grp_makePatch_alignedToLine_fu_466_patches_superpoints_ce0,
        patches_superpoints_we0 => grp_makePatch_alignedToLine_fu_466_patches_superpoints_we0,
        patches_superpoints_d0 => grp_makePatch_alignedToLine_fu_466_patches_superpoints_d0,
        patches_superpoints_q0 => patches_superpoints_q0,
        patches_superpoints_address1 => grp_makePatch_alignedToLine_fu_466_patches_superpoints_address1,
        patches_superpoints_ce1 => grp_makePatch_alignedToLine_fu_466_patches_superpoints_ce1,
        patches_superpoints_we1 => grp_makePatch_alignedToLine_fu_466_patches_superpoints_we1,
        patches_superpoints_d1 => grp_makePatch_alignedToLine_fu_466_patches_superpoints_d1,
        patches_superpoints_q1 => patches_superpoints_q1,
        patches_parameters_address0 => grp_makePatch_alignedToLine_fu_466_patches_parameters_address0,
        patches_parameters_ce0 => grp_makePatch_alignedToLine_fu_466_patches_parameters_ce0,
        patches_parameters_we0 => grp_makePatch_alignedToLine_fu_466_patches_parameters_we0,
        patches_parameters_d0 => grp_makePatch_alignedToLine_fu_466_patches_parameters_d0,
        patches_parameters_q0 => patches_parameters_q0,
        ap_return => grp_makePatch_alignedToLine_fu_466_ap_return);

    grp_getShadows_fu_493 : component MPSQ_getShadows
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_getShadows_fu_493_ap_start,
        ap_done => grp_getShadows_fu_493_ap_done,
        ap_idle => grp_getShadows_fu_493_ap_idle,
        ap_ready => grp_getShadows_fu_493_ap_ready,
        wp_superpoints_address0 => grp_getShadows_fu_493_wp_superpoints_address0,
        wp_superpoints_ce0 => grp_getShadows_fu_493_wp_superpoints_ce0,
        wp_superpoints_q0 => patches_superpoints_q0,
        wp_superpoints_offset => grp_getShadows_fu_493_wp_superpoints_offset,
        wp_parameters_address0 => grp_getShadows_fu_493_wp_parameters_address0,
        wp_parameters_ce0 => grp_getShadows_fu_493_wp_parameters_ce0,
        wp_parameters_we0 => grp_getShadows_fu_493_wp_parameters_we0,
        wp_parameters_d0 => grp_getShadows_fu_493_wp_parameters_d0,
        wp_parameters_address1 => grp_getShadows_fu_493_wp_parameters_address1,
        wp_parameters_ce1 => grp_getShadows_fu_493_wp_parameters_ce1,
        wp_parameters_we1 => grp_getShadows_fu_493_wp_parameters_we1,
        wp_parameters_d1 => grp_getShadows_fu_493_wp_parameters_d1,
        wp_parameters_offset => grp_getShadows_fu_493_wp_parameters_offset,
        zTopMin => z_top_min,
        zTopMax => z_top_max);

    grp_delete_patch_fu_511 : component MPSQ_delete_patch
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_delete_patch_fu_511_ap_start,
        ap_done => grp_delete_patch_fu_511_ap_done,
        ap_idle => grp_delete_patch_fu_511_ap_idle,
        ap_ready => grp_delete_patch_fu_511_ap_ready,
        n_patches => grp_delete_patch_fu_511_n_patches,
        n_patches_ap_vld => grp_delete_patch_fu_511_n_patches_ap_vld,
        n_patches_read => reg_561,
        index => grp_delete_patch_fu_511_index,
        patches_superpoints_address0 => grp_delete_patch_fu_511_patches_superpoints_address0,
        patches_superpoints_ce0 => grp_delete_patch_fu_511_patches_superpoints_ce0,
        patches_superpoints_we0 => grp_delete_patch_fu_511_patches_superpoints_we0,
        patches_superpoints_d0 => grp_delete_patch_fu_511_patches_superpoints_d0,
        patches_superpoints_address1 => grp_delete_patch_fu_511_patches_superpoints_address1,
        patches_superpoints_ce1 => grp_delete_patch_fu_511_patches_superpoints_ce1,
        patches_superpoints_q1 => patches_superpoints_q1,
        patches_parameters_address0 => grp_delete_patch_fu_511_patches_parameters_address0,
        patches_parameters_ce0 => grp_delete_patch_fu_511_patches_parameters_ce0,
        patches_parameters_we0 => grp_delete_patch_fu_511_patches_parameters_we0,
        patches_parameters_d0 => grp_delete_patch_fu_511_patches_parameters_d0,
        patches_parameters_address1 => grp_delete_patch_fu_511_patches_parameters_address1,
        patches_parameters_ce1 => grp_delete_patch_fu_511_patches_parameters_ce1,
        patches_parameters_q1 => patches_parameters_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_delete_patch_fu_511_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_delete_patch_fu_511_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state54))) then 
                    grp_delete_patch_fu_511_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_delete_patch_fu_511_ap_ready = ap_const_logic_1)) then 
                    grp_delete_patch_fu_511_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_getShadows_fu_493_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_getShadows_fu_493_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                    grp_getShadows_fu_493_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_getShadows_fu_493_ap_ready = ap_const_logic_1)) then 
                    grp_getShadows_fu_493_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_makePatch_alignedToLine_fu_466_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_makePatch_alignedToLine_fu_466_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
                    grp_makePatch_alignedToLine_fu_466_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_makePatch_alignedToLine_fu_466_ap_ready = ap_const_logic_1)) then 
                    grp_makePatch_alignedToLine_fu_466_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_525_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_straightLineProjectorFromLayerIJtoK_fu_525_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_NS_fsm_state70) and ((ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state52))) or ((shiftOriginal_1_reg_1419 = ap_const_lv1_1) and (ap_const_logic_1 = ap_NS_fsm_state62) and (ap_const_logic_1 = ap_CS_fsm_state61)) or ((ap_const_logic_1 = ap_NS_fsm_state45) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((ap_const_logic_1 = ap_NS_fsm_state44) and ((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state43))) or ((ap_const_logic_1 = ap_NS_fsm_state37) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((ap_const_logic_1 = ap_NS_fsm_state27) and (ap_const_logic_1 = ap_CS_fsm_state26) and (ap_const_lv1_1 = and_ln1079_fu_708_p2)) or ((ap_const_logic_1 = ap_NS_fsm_state17) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((ap_const_logic_1 = ap_NS_fsm_state7) and (ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_1 = and_ln1069_fu_594_p2)))) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_525_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_straightLineProjectorFromLayerIJtoK_fu_525_ap_ready = ap_const_logic_1)) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_525_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    agg_tmp172_0_reg_455_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1204_fu_1162_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
                agg_tmp172_0_reg_455 <= newZtop_V_1_reg_1438;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state52) and (((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_414_p4 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln1139_2_fu_907_p2) and (or_ln1139_1_fu_888_p2 = ap_const_lv1_0)) or ((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_414_p4 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln1139_1_fu_946_p2) and (or_ln1139_1_fu_888_p2 = ap_const_lv1_1))))) then 
                agg_tmp172_0_reg_455 <= newZtop_V_reg_397;
            end if; 
        end if;
    end process;

    complementary_topL_jL_V_1_reg_367_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1204_fu_1162_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
                complementary_topL_jL_V_1_reg_367 <= complementary_topL_jL_V_3_reg_1531;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                complementary_topL_jL_V_1_reg_367 <= complementary_topL_jL_V_reg_1382;
            end if; 
        end if;
    end process;

    complementary_topL_jR_V_reg_347_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1204_fu_1162_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
                complementary_topL_jR_V_reg_347 <= complementary_topL_jR_V_4_reg_1495;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                complementary_topL_jR_V_reg_347 <= complementary_topL_jR_V_3_reg_1331;
            end if; 
        end if;
    end process;

    complementary_topR_jL_V_1_reg_357_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1204_fu_1162_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
                complementary_topR_jL_V_1_reg_357 <= complementary_topR_jL_V_3_reg_1525;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                complementary_topR_jL_V_1_reg_357 <= complementary_topR_jL_V_reg_1377;
            end if; 
        end if;
    end process;

    complementary_topR_jR_V_reg_317_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1204_fu_1162_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
                complementary_topR_jR_V_reg_317 <= complementary_topR_jR_V_4_reg_1488;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                complementary_topR_jR_V_reg_317 <= complementary_topR_jR_V_3_reg_1313;
            end if; 
        end if;
    end process;

    empty_77_reg_248_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln878_2_fu_658_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((grp_fu_541_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
                empty_77_reg_248 <= ap_const_lv1_1;
            elsif (((icmp_ln878_2_reg_1304 = ap_const_lv1_1) and (icmp_ln886_2_reg_1300 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                empty_77_reg_248 <= phitmp4_fu_680_p2;
            end if; 
        end if;
    end process;

    empty_78_reg_263_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln1079_reg_1322) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                empty_78_reg_263 <= ap_const_lv1_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state34) and (ap_const_lv1_1 = and_ln1079_reg_1322))) then 
                empty_78_reg_263 <= phitmp3_fu_730_p2;
            end if; 
        end if;
    end process;

    empty_79_reg_275_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln878_4_fu_752_p2 = ap_const_lv1_0) and (icmp_ln886_4_fu_736_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((icmp_ln886_4_fu_736_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36)))) then 
                empty_79_reg_275 <= ap_const_lv1_1;
            elsif (((icmp_ln878_4_reg_1344 = ap_const_lv1_1) and (icmp_ln886_4_reg_1340 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state44))) then 
                empty_79_reg_275 <= phitmp5_fu_774_p2;
            end if; 
        end if;
    end process;

    empty_80_reg_299_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1204_fu_1162_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
                empty_80_reg_299 <= horizontalShiftBottom_1_reg_1562;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                empty_80_reg_299 <= horizontalShiftBottom_fu_812_p2;
            end if; 
        end if;
    end process;

    empty_81_reg_308_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1204_fu_1162_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
                empty_81_reg_308 <= horizontalShiftTop_1_reg_1547;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                empty_81_reg_308 <= horizontalShiftTop_fu_808_p2;
            end if; 
        end if;
    end process;

    empty_reg_236_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln1069_reg_1240) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                empty_reg_236 <= ap_const_lv1_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (ap_const_lv1_1 = and_ln1069_reg_1240))) then 
                empty_reg_236 <= phitmp_fu_640_p2;
            end if; 
        end if;
    end process;

    horizontalOverlapBottom_V_fu_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
                horizontalOverlapBottom_V_fu_116 <= ap_const_lv32_FFF0BDC0;
            elsif (((icmp_ln878_6_reg_1567 = ap_const_lv1_1) and (shiftOriginal_1_reg_1419 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
                horizontalOverlapBottom_V_fu_116 <= horizontalOverlapBottom_V_1_reg_1576;
            end if; 
        end if;
    end process;

    horizontalOverlapTop_V_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
                horizontalOverlapTop_V_fu_120 <= ap_const_lv32_FFF0BDC0;
            elsif (((icmp_ln878_6_reg_1567 = ap_const_lv1_1) and (shiftOriginal_1_reg_1419 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
                horizontalOverlapTop_V_fu_120 <= horizontalOverlapTop_V_1_reg_1571;
            end if; 
        end if;
    end process;

    loopCounter_reg_433_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1204_fu_1162_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
                loopCounter_reg_433 <= loopCounter_2_reg_1454;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                loopCounter_reg_433 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    makeHorizontallyShiftedPatch_reg_409_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1204_fu_1162_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
                makeHorizontallyShiftedPatch_reg_409 <= ap_const_lv1_1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                makeHorizontallyShiftedPatch_reg_409 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    newZtop_V_reg_397_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1204_fu_1162_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
                newZtop_V_reg_397 <= newZtop_V_1_reg_1438;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                newZtop_V_reg_397 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    original_topL_jL_V_reg_327_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1204_fu_1162_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
                original_topL_jL_V_reg_327 <= original_topL_jL_V_4_reg_1515;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                original_topL_jL_V_reg_327 <= original_topL_jL_V_3_reg_1292;
            end if; 
        end if;
    end process;

    original_topL_jR_V_1_reg_387_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1204_fu_1162_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
                original_topL_jR_V_1_reg_387 <= original_topL_jR_V_3_reg_1509;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                original_topL_jR_V_1_reg_387 <= patches_parameters_q1;
            end if; 
        end if;
    end process;

    original_topR_jL_V_1_reg_337_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1204_fu_1162_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
                original_topR_jL_V_1_reg_337 <= original_topR_jL_V_3_reg_1520;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                original_topR_jL_V_1_reg_337 <= original_topR_jL_V_reg_1233;
            end if; 
        end if;
    end process;

    original_topR_jR_V_1_reg_377_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1204_fu_1162_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
                original_topR_jR_V_1_reg_377 <= original_topR_jR_V_3_reg_1502;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                original_topR_jR_V_1_reg_377 <= patches_parameters_q0;
            end if; 
        end if;
    end process;

    phi_ln166_reg_445_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1204_fu_1162_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
                phi_ln166_reg_445 <= trunc_ln1107_1_reg_1477;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state52) and (((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_414_p4 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln1139_2_fu_907_p2) and (or_ln1139_1_fu_888_p2 = ap_const_lv1_0)) or ((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_414_p4 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln1139_1_fu_946_p2) and (or_ln1139_1_fu_888_p2 = ap_const_lv1_1))))) then 
                phi_ln166_reg_445 <= trunc_ln1107_fu_868_p1;
            end if; 
        end if;
    end process;

    ppl_assign_0_reg_289_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1204_fu_1162_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
                ppl_assign_0_reg_289 <= ppl_assign1_reg_1483;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                ppl_assign_0_reg_289 <= ppl;
            end if; 
        end if;
    end process;

    shifted_Align_2_reg_423_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1204_fu_1162_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
                shifted_Align_2_reg_423 <= shifted_Align_5_reg_1472;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                shifted_Align_2_reg_423 <= sext_ln1119_fu_842_p1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                and_ln1069_reg_1240 <= and_ln1069_fu_594_p2;
                original_topR_jL_V_reg_1233 <= patches_parameters_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                and_ln1079_reg_1322 <= and_ln1079_fu_708_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln1139_1_fu_888_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state52))) then
                and_ln1139_1_reg_1463 <= and_ln1139_1_fu_946_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln1139_1_fu_888_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state52))) then
                and_ln1139_2_reg_1459 <= and_ln1139_2_fu_907_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state76)) then
                and_ln1214_reg_1584 <= and_ln1214_fu_1174_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state62)) then
                complementary_topL_jL_V_3_reg_1531 <= complementary_topL_jL_V_3_fu_1041_p3;
                complementary_topR_jL_V_3_reg_1525 <= complementary_topR_jL_V_3_fu_1034_p3;
                horizontalShiftBottom_1_reg_1562 <= horizontalShiftBottom_1_fu_1067_p2;
                horizontalShiftTop_1_reg_1547 <= horizontalShiftTop_1_fu_1055_p2;
                original_topL_jL_V_4_reg_1515 <= original_topL_jL_V_4_fu_1020_p3;
                original_topR_jL_V_3_reg_1520 <= original_topR_jL_V_3_fu_1027_p3;
                sext_ln215_17_reg_1537 <= sext_ln215_17_fu_1048_p1;
                sext_ln215_18_reg_1542 <= sext_ln215_18_fu_1052_p1;
                sext_ln215_19_reg_1552 <= sext_ln215_19_fu_1060_p1;
                sext_ln215_20_reg_1557 <= sext_ln215_20_fu_1064_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state50)) then
                complementary_topL_jL_V_reg_1382 <= patches_parameters_q0;
                complementary_topR_jL_V_reg_1377 <= patches_parameters_q1;
                icmp_ln886_5_reg_1387 <= icmp_ln886_5_fu_802_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                complementary_topL_jR_V_3_reg_1331 <= patches_parameters_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state61)) then
                complementary_topL_jR_V_4_reg_1495 <= complementary_topL_jR_V_4_fu_999_p3;
                complementary_topR_jR_V_4_reg_1488 <= complementary_topR_jR_V_4_fu_992_p3;
                original_topL_jR_V_3_reg_1509 <= original_topL_jR_V_3_fu_1013_p3;
                original_topR_jR_V_3_reg_1502 <= original_topR_jR_V_3_fu_1006_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                complementary_topR_jR_V_3_reg_1313 <= patches_parameters_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln878_6_fu_1072_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state68))) then
                horizontalOverlapBottom_V_1_reg_1576 <= horizontalOverlapBottom_V_1_fu_1146_p3;
                horizontalOverlapTop_V_1_reg_1571 <= horizontalOverlapTop_V_1_fu_1108_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                icmp_ln1066_reg_1199 <= icmp_ln1066_fu_572_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state77)) then
                icmp_ln1216_reg_1588 <= icmp_ln1216_fu_1179_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                icmp_ln878_2_reg_1304 <= icmp_ln878_2_fu_658_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln886_4_fu_736_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then
                icmp_ln878_4_reg_1344 <= icmp_ln878_4_fu_752_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state68)) then
                icmp_ln878_6_reg_1567 <= icmp_ln878_6_fu_1072_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                icmp_ln886_2_reg_1300 <= grp_fu_541_p2;
                original_topL_jL_V_3_reg_1292 <= patches_parameters_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                icmp_ln886_4_reg_1340 <= icmp_ln886_4_fu_736_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state51)) then
                lnot_reg_1433 <= lnot_fu_856_p2;
                newZtop_V_1_reg_1438 <= newZtop_V_1_fu_862_p3;
                shiftOriginal_1_reg_1419 <= shiftOriginal_1_fu_846_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state52)) then
                loopCounter_2_reg_1454 <= loopCounter_2_fu_893_p2;
                or_ln1139_1_reg_1450 <= or_ln1139_1_fu_888_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state45)) then
                or_ln1139_2_reg_1372 <= or_ln1139_2_fu_796_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then
                or_ln1139_reg_1367 <= or_ln1139_fu_780_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                    patches_parameters_addr_14_reg_1277(4 downto 3) <= select_ln1092_fu_608_p3(7 - 1 downto 0)(4 downto 3);
                    patches_parameters_addr_15_reg_1282(4 downto 3) <= select_ln1093_fu_616_p3(7 - 1 downto 0)(4 downto 3);
                    patches_parameters_addr_9_reg_1272(4 downto 3) <= select_ln1068_fu_600_p3(7 - 1 downto 0)(4 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state57)) then
                ppl_assign1_reg_1483 <= grp_makePatch_alignedToLine_fu_466_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state13))) then
                reg_557 <= grp_straightLineProjectorFromLayerIJtoK_fu_1072_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state77) or ((ap_const_logic_1 = ap_CS_fsm_state53) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1)))) then
                reg_561 <= n_patches_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state52) and (((or_ln1139_1_fu_888_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1139_1_fu_946_p2)) or ((or_ln1139_1_fu_888_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1139_2_fu_907_p2))))) then
                select_ln534_reg_1467 <= select_ln534_fu_958_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state53)) then
                shifted_Align_5_reg_1472 <= shifted_Align_5_fu_981_p3;
                trunc_ln1107_1_reg_1477 <= trunc_ln1107_1_fu_988_p1;
            end if;
        end if;
    end process;
    patches_parameters_addr_9_reg_1272(2 downto 0) <= "000";
    patches_parameters_addr_9_reg_1272(6 downto 5) <= "00";
    patches_parameters_addr_14_reg_1277(2 downto 0) <= "110";
    patches_parameters_addr_14_reg_1277(6 downto 5) <= "00";
    patches_parameters_addr_15_reg_1282(2 downto 0) <= "010";
    patches_parameters_addr_15_reg_1282(6 downto 5) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state53, makeHorizontallyShiftedPatch_reg_409, ap_CS_fsm_state77, and_ln1069_reg_1240, ap_CS_fsm_state7, ap_CS_fsm_state15, grp_fu_541_p2, icmp_ln878_2_fu_658_p2, ap_CS_fsm_state16, and_ln1079_reg_1322, icmp_ln886_4_fu_736_p2, ap_CS_fsm_state36, icmp_ln878_4_fu_752_p2, shiftOriginal_1_reg_1419, ap_CS_fsm_state52, or_ln1139_1_fu_888_p2, and_ln1139_2_fu_907_p2, and_ln1139_1_fu_946_p2, ap_CS_fsm_state57, ap_CS_fsm_state62, and_ln1214_fu_1174_p2, ap_CS_fsm_state76, icmp_ln1216_fu_1179_p2, grp_makePatch_alignedToLine_fu_466_ap_done, grp_getShadows_fu_493_ap_done, ap_CS_fsm_state27, ap_CS_fsm_state69, icmp_ln1204_fu_1162_p2, ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_414_p4, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state59, ap_CS_fsm_state55, ap_CS_fsm_state79, ap_block_state79_on_subcall_done, ap_block_state55_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_getShadows_fu_493_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_getShadows_fu_493_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_lv1_0 = and_ln1069_reg_1240) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((grp_fu_541_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state16 => 
                if (((icmp_ln878_2_fu_658_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                if (((ap_const_lv1_0 = and_ln1079_reg_1322) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                if (((icmp_ln878_4_fu_752_p2 = ap_const_lv1_1) and (icmp_ln886_4_fu_736_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state52) and (((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_414_p4 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln1139_2_fu_907_p2) and (or_ln1139_1_fu_888_p2 = ap_const_lv1_0)) or ((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_414_p4 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln1139_1_fu_946_p2) and (or_ln1139_1_fu_888_p2 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state79;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state52) and (((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_414_p4 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln1139_2_fu_907_p2) and (or_ln1139_1_fu_888_p2 = ap_const_lv1_0)) or ((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_414_p4 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln1139_1_fu_946_p2) and (or_ln1139_1_fu_888_p2 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state70;
                else
                    ap_NS_fsm <= ap_ST_fsm_state53;
                end if;
            when ap_ST_fsm_state53 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state53) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state55) and (ap_const_boolean_0 = ap_block_state55_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state56;
                else
                    ap_NS_fsm <= ap_ST_fsm_state55;
                end if;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                if (((grp_makePatch_alignedToLine_fu_466_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state57))) then
                    ap_NS_fsm <= ap_ST_fsm_state58;
                else
                    ap_NS_fsm <= ap_ST_fsm_state57;
                end if;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                if (((grp_getShadows_fu_493_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state59))) then
                    ap_NS_fsm <= ap_ST_fsm_state60;
                else
                    ap_NS_fsm <= ap_ST_fsm_state59;
                end if;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                if (((shiftOriginal_1_reg_1419 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state62))) then
                    ap_NS_fsm <= ap_ST_fsm_state69;
                else
                    ap_NS_fsm <= ap_ST_fsm_state63;
                end if;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                if (((icmp_ln1204_fu_1162_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state69))) then
                    ap_NS_fsm <= ap_ST_fsm_state70;
                else
                    ap_NS_fsm <= ap_ST_fsm_state52;
                end if;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                if (((ap_const_lv1_0 = and_ln1214_fu_1174_p2) and (ap_const_logic_1 = ap_CS_fsm_state76))) then
                    ap_NS_fsm <= ap_ST_fsm_state79;
                else
                    ap_NS_fsm <= ap_ST_fsm_state77;
                end if;
            when ap_ST_fsm_state77 => 
                if (((icmp_ln1216_fu_1179_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state77))) then
                    ap_NS_fsm <= ap_ST_fsm_state79;
                else
                    ap_NS_fsm <= ap_ST_fsm_state78;
                end if;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state79) and (ap_const_boolean_0 = ap_block_state79_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state79;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    GDarrayDecoded_address0 <= grp_makePatch_alignedToLine_fu_466_GDarrayDecoded_address0;
    GDarrayDecoded_ce0 <= grp_makePatch_alignedToLine_fu_466_GDarrayDecoded_ce0;
    GDn_points_address0 <= grp_makePatch_alignedToLine_fu_466_GDn_points_address0;
    GDn_points_ce0 <= grp_makePatch_alignedToLine_fu_466_GDn_points_ce0;
    and_ln1069_fu_594_p2 <= (icmp_ln878_fu_588_p2 and grp_fu_541_p2);
    and_ln1079_fu_708_p2 <= (icmp_ln886_3_fu_698_p2 and icmp_ln878_3_fu_704_p2);
    and_ln1139_1_fu_946_p2 <= (grp_fu_547_p2 and and_ln1139_fu_940_p2);
    and_ln1139_2_fu_907_p2 <= (grp_fu_552_p2 and grp_fu_547_p2);
    and_ln1139_fu_940_p2 <= (xor_ln1139_fu_934_p2 and grp_fu_552_p2);
    and_ln1214_fu_1174_p2 <= (shiftOriginal_1_reg_1419 and icmp_ln886_6_fu_1168_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state76 <= ap_CS_fsm(75);
    ap_CS_fsm_state77 <= ap_CS_fsm(76);
    ap_CS_fsm_state78 <= ap_CS_fsm(77);
    ap_CS_fsm_state79 <= ap_CS_fsm(78);
    ap_NS_fsm_state17 <= ap_NS_fsm(16);
    ap_NS_fsm_state27 <= ap_NS_fsm(26);
    ap_NS_fsm_state37 <= ap_NS_fsm(36);
    ap_NS_fsm_state44 <= ap_NS_fsm(43);
    ap_NS_fsm_state45 <= ap_NS_fsm(44);
    ap_NS_fsm_state62 <= ap_NS_fsm(61);
    ap_NS_fsm_state7 <= ap_NS_fsm(6);
    ap_NS_fsm_state70 <= ap_NS_fsm(69);

    ap_block_state55_on_subcall_done_assign_proc : process(makeHorizontallyShiftedPatch_reg_409, grp_delete_patch_fu_511_ap_done)
    begin
                ap_block_state55_on_subcall_done <= ((grp_delete_patch_fu_511_ap_done = ap_const_logic_0) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1));
    end process;


    ap_block_state79_on_subcall_done_assign_proc : process(grp_delete_patch_fu_511_ap_done, ap_predicate_op356_call_state79)
    begin
                ap_block_state79_on_subcall_done <= ((grp_delete_patch_fu_511_ap_done = ap_const_logic_0) and (ap_predicate_op356_call_state79 = ap_const_boolean_1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state79, ap_block_state79_on_subcall_done)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state79) and (ap_const_boolean_0 = ap_block_state79_on_subcall_done)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_414_p4 <= makeHorizontallyShiftedPatch_reg_409;

    ap_predicate_op356_call_state79_assign_proc : process(makeHorizontallyShiftedPatch_reg_409, or_ln1139_1_reg_1450, and_ln1139_2_reg_1459, and_ln1139_1_reg_1463, and_ln1214_reg_1584, icmp_ln1216_reg_1588)
    begin
                ap_predicate_op356_call_state79 <= ((((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (or_ln1139_1_reg_1450 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (ap_const_lv1_1 = and_ln1139_1_reg_1463)) or ((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1))) or ((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (or_ln1139_1_reg_1450 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (ap_const_lv1_1 = and_ln1139_2_reg_1459)));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state79, ap_block_state79_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state79) and (ap_const_boolean_0 = ap_block_state79_on_subcall_done))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cmp_i_i301_not_fu_851_p2 <= (icmp_ln886_5_reg_1387 xor ap_const_lv1_1);
    complementary_topL_jL_V_3_fu_1041_p3 <= 
        complementary_topL_jL_V_1_reg_367 when (shiftOriginal_1_reg_1419(0) = '1') else 
        patches_parameters_q1;
    complementary_topL_jR_V_4_fu_999_p3 <= 
        complementary_topL_jR_V_reg_347 when (shiftOriginal_1_reg_1419(0) = '1') else 
        patches_parameters_q1;
    complementary_topR_jL_V_3_fu_1034_p3 <= 
        complementary_topR_jL_V_1_reg_357 when (shiftOriginal_1_reg_1419(0) = '1') else 
        patches_parameters_q0;
    complementary_topR_jR_V_4_fu_992_p3 <= 
        complementary_topR_jR_V_reg_317 when (shiftOriginal_1_reg_1419(0) = '1') else 
        patches_parameters_q0;
    grp_delete_patch_fu_511_ap_start <= grp_delete_patch_fu_511_ap_start_reg;

    grp_delete_patch_fu_511_index_assign_proc : process(makeHorizontallyShiftedPatch_reg_409, or_ln1139_1_reg_1450, and_ln1139_2_reg_1459, and_ln1139_1_reg_1463, and_ln1214_reg_1584, icmp_ln1216_reg_1588, ap_CS_fsm_state55, ap_CS_fsm_state79)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state79) and ((((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (or_ln1139_1_reg_1450 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (ap_const_lv1_1 = and_ln1139_1_reg_1463)) or ((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1))) or ((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (or_ln1139_1_reg_1450 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (ap_const_lv1_1 = and_ln1139_2_reg_1459))))) then 
            grp_delete_patch_fu_511_index <= ap_const_lv2_2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1))) then 
            grp_delete_patch_fu_511_index <= ap_const_lv2_0;
        else 
            grp_delete_patch_fu_511_index <= "XX";
        end if; 
    end process;

    grp_fu_541_p1 <= complementary_apexZ0;
    grp_fu_541_p2 <= "1" when (signed(patches_parameters_q0) > signed(grp_fu_541_p1)) else "0";
    grp_fu_547_p2 <= "1" when (signed(horizontalOverlapTop_V_fu_120) < signed(ap_const_lv32_1)) else "0";
    grp_fu_552_p2 <= "1" when (signed(horizontalOverlapBottom_V_fu_116) < signed(ap_const_lv32_1)) else "0";
    grp_fu_566_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(reg_557));
    grp_getShadows_fu_493_ap_start <= grp_getShadows_fu_493_ap_start_reg;

    grp_getShadows_fu_493_wp_parameters_offset_assign_proc : process(icmp_ln1066_reg_1199, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_getShadows_fu_493_wp_parameters_offset <= icmp_ln1066_reg_1199;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_getShadows_fu_493_wp_parameters_offset <= ap_const_lv1_0;
        else 
            grp_getShadows_fu_493_wp_parameters_offset <= "X";
        end if; 
    end process;


    grp_getShadows_fu_493_wp_superpoints_offset_assign_proc : process(icmp_ln1066_reg_1199, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_getShadows_fu_493_wp_superpoints_offset <= icmp_ln1066_reg_1199;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_getShadows_fu_493_wp_superpoints_offset <= ap_const_lv1_0;
        else 
            grp_getShadows_fu_493_wp_superpoints_offset <= "X";
        end if; 
    end process;

    grp_makePatch_alignedToLine_fu_466_ap_start <= grp_makePatch_alignedToLine_fu_466_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_1072_p_ce <= ap_const_logic_1;
    grp_straightLineProjectorFromLayerIJtoK_fu_1072_p_din1 <= grp_straightLineProjectorFromLayerIJtoK_fu_525_z_i;
    grp_straightLineProjectorFromLayerIJtoK_fu_1072_p_din2 <= grp_straightLineProjectorFromLayerIJtoK_fu_525_z_j;
    grp_straightLineProjectorFromLayerIJtoK_fu_1072_p_din3 <= ap_const_lv3_1;
    grp_straightLineProjectorFromLayerIJtoK_fu_1072_p_din4 <= ap_const_lv3_5;
    grp_straightLineProjectorFromLayerIJtoK_fu_1072_p_din5 <= ap_const_lv3_0;
    grp_straightLineProjectorFromLayerIJtoK_fu_1072_p_start <= grp_straightLineProjectorFromLayerIJtoK_fu_525_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_525_ap_ce <= ap_const_logic_1;
    grp_straightLineProjectorFromLayerIJtoK_fu_525_ap_done <= grp_straightLineProjectorFromLayerIJtoK_fu_1072_p_done;
    grp_straightLineProjectorFromLayerIJtoK_fu_525_ap_idle <= grp_straightLineProjectorFromLayerIJtoK_fu_1072_p_idle;
    grp_straightLineProjectorFromLayerIJtoK_fu_525_ap_ready <= grp_straightLineProjectorFromLayerIJtoK_fu_1072_p_ready;
    grp_straightLineProjectorFromLayerIJtoK_fu_525_ap_return <= grp_straightLineProjectorFromLayerIJtoK_fu_1072_p_dout0;
    grp_straightLineProjectorFromLayerIJtoK_fu_525_ap_start <= grp_straightLineProjectorFromLayerIJtoK_fu_525_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_525_i <= ap_const_lv3_1;
    grp_straightLineProjectorFromLayerIJtoK_fu_525_j <= ap_const_lv3_5;
    grp_straightLineProjectorFromLayerIJtoK_fu_525_k <= ap_const_lv3_0;

    grp_straightLineProjectorFromLayerIJtoK_fu_525_z_i_assign_proc : process(complementary_apexZ0, apexZ0, original_topR_jL_V_reg_1233, and_ln1069_reg_1240, ap_CS_fsm_state7, original_topL_jL_V_3_reg_1292, complementary_topR_jR_V_3_reg_1313, and_ln1079_reg_1322, complementary_topL_jR_V_3_reg_1331, ap_CS_fsm_state44, ap_CS_fsm_state45, shiftOriginal_1_reg_1419, original_topR_jR_V_3_reg_1502, ap_CS_fsm_state62, ap_CS_fsm_state27, phi_ln166_reg_445, ap_CS_fsm_state17, ap_CS_fsm_state37, ap_CS_fsm_state70)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_525_z_i <= phi_ln166_reg_445;
        elsif (((shiftOriginal_1_reg_1419 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state62))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_525_z_i <= original_topR_jR_V_3_reg_1502;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_525_z_i <= apexZ0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_525_z_i <= complementary_apexZ0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_525_z_i <= complementary_topL_jR_V_3_reg_1331;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) and (ap_const_lv1_1 = and_ln1079_reg_1322))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_525_z_i <= complementary_topR_jR_V_3_reg_1313;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_525_z_i <= original_topL_jL_V_3_reg_1292;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_1 = and_ln1069_reg_1240))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_525_z_i <= original_topR_jL_V_reg_1233;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_525_z_i <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_525_z_j_assign_proc : process(z_top_min, z_top_max, and_ln1069_reg_1240, ap_CS_fsm_state7, and_ln1079_reg_1322, ap_CS_fsm_state44, ap_CS_fsm_state45, shiftOriginal_1_reg_1419, ap_CS_fsm_state62, ap_CS_fsm_state27, agg_tmp172_0_reg_455, ap_CS_fsm_state17, ap_CS_fsm_state37, ap_CS_fsm_state70)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_525_z_j <= agg_tmp172_0_reg_455;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state44))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_525_z_j <= z_top_min;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or ((shiftOriginal_1_reg_1419 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state62)) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (ap_const_lv1_1 = and_ln1079_reg_1322)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_1 = and_ln1069_reg_1240)))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_525_z_j <= z_top_max;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_525_z_j <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    horizontalOverlapBottom_V_1_fu_1146_p3 <= 
        trunc_ln1188_fu_1138_p1 when (icmp_ln878_8_fu_1132_p2(0) = '1') else 
        trunc_ln1188_1_fu_1142_p1;
    horizontalOverlapTop_V_1_fu_1108_p3 <= 
        trunc_ln1187_fu_1100_p1 when (icmp_ln878_7_fu_1094_p2(0) = '1') else 
        trunc_ln1187_1_fu_1104_p1;
    horizontalShiftBottom_1_fu_1067_p2 <= std_logic_vector(signed(original_topL_jL_V_4_fu_1020_p3) - signed(complementary_topL_jR_V_4_reg_1495));
    horizontalShiftBottom_fu_812_p2 <= std_logic_vector(signed(original_topL_jL_V_3_reg_1292) - signed(complementary_topL_jR_V_3_reg_1331));
    horizontalShiftTop_1_fu_1055_p2 <= std_logic_vector(signed(original_topR_jL_V_3_fu_1027_p3) - signed(complementary_topR_jR_V_4_reg_1488));
    horizontalShiftTop_fu_808_p2 <= std_logic_vector(unsigned(original_topR_jL_V_reg_1233) - unsigned(complementary_topR_jR_V_3_reg_1313));
    icmp_ln1066_fu_572_p2 <= "0" when (lastPatchIndex = ap_const_lv8_0) else "1";
    icmp_ln1139_1_fu_923_p2 <= "1" when (signed(tmp_17_fu_913_p4) < signed(ap_const_lv31_1)) else "0";
    icmp_ln1139_fu_882_p2 <= "1" when (signed(tmp_16_fu_872_p4) < signed(ap_const_lv31_1)) else "0";
    icmp_ln1204_fu_1162_p2 <= "1" when (signed(loopCounter_reg_433) > signed(ap_const_lv32_19)) else "0";
    icmp_ln1216_fu_1179_p2 <= "1" when (unsigned(n_patches_i) > unsigned(ap_const_lv8_2)) else "0";
    icmp_ln878_2_fu_658_p2 <= "1" when (signed(ret_fu_652_p2) < signed(ap_const_lv33_1FFFFFF9C)) else "0";
    icmp_ln878_3_fu_704_p1 <= apexZ0;
    icmp_ln878_3_fu_704_p2 <= "1" when (signed(complementary_topR_jR_V_3_reg_1313) < signed(icmp_ln878_3_fu_704_p1)) else "0";
    icmp_ln878_4_fu_752_p2 <= "1" when (signed(ret_8_fu_746_p2) < signed(ap_const_lv33_1FFFFFF9C)) else "0";
    icmp_ln878_5_fu_952_p2 <= "1" when (signed(empty_81_reg_308) < signed(empty_80_reg_299)) else "0";
    icmp_ln878_6_fu_1072_p2 <= "1" when (signed(grp_straightLineProjectorFromLayerIJtoK_fu_1072_p_dout0) < signed(ap_const_lv32_E4E1C0)) else "0";
    icmp_ln878_7_fu_1094_p2 <= "1" when (signed(ret_9_fu_1081_p2) < signed(ret_10_fu_1089_p2)) else "0";
    icmp_ln878_8_fu_1132_p2 <= "1" when (signed(ret_11_fu_1119_p2) < signed(ret_12_fu_1127_p2)) else "0";
    icmp_ln878_fu_588_p1 <= apexZ0;
    icmp_ln878_fu_588_p2 <= "1" when (signed(patches_parameters_q0) < signed(icmp_ln878_fu_588_p1)) else "0";
    icmp_ln886_3_fu_698_p2 <= "1" when (signed(ret_7_fu_692_p2) > signed(ap_const_lv33_32)) else "0";
    icmp_ln886_4_fu_736_p1 <= complementary_apexZ0;
    icmp_ln886_4_fu_736_p2 <= "1" when (signed(complementary_topL_jR_V_3_reg_1331) > signed(icmp_ln886_4_fu_736_p1)) else "0";
    icmp_ln886_5_fu_802_p2 <= "1" when (signed(grp_straightLineProjectorFromLayerIJtoK_fu_1072_p_dout0) > signed(ap_const_lv32_0)) else "0";
    icmp_ln886_6_fu_1168_p2 <= "1" when (signed(grp_straightLineProjectorFromLayerIJtoK_fu_1072_p_dout0) > signed(ap_const_lv32_E4E1C0)) else "0";
    lnot_fu_856_p2 <= (tmp_15_fu_816_p3 and cmp_i_i301_not_fu_851_p2);
    loopCounter_2_fu_893_p2 <= std_logic_vector(unsigned(loopCounter_reg_433) + unsigned(ap_const_lv32_1));

    n_patches_o_assign_proc : process(n_patches_i, makeHorizontallyShiftedPatch_reg_409, or_ln1139_1_reg_1450, and_ln1139_2_reg_1459, and_ln1139_1_reg_1463, ap_CS_fsm_state57, and_ln1214_reg_1584, icmp_ln1216_reg_1588, grp_makePatch_alignedToLine_fu_466_n_patches_o, grp_makePatch_alignedToLine_fu_466_n_patches_o_ap_vld, grp_delete_patch_fu_511_n_patches, grp_delete_patch_fu_511_n_patches_ap_vld, ap_CS_fsm_state55, ap_CS_fsm_state79)
    begin
        if ((((grp_delete_patch_fu_511_n_patches_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state79) and ((((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (or_ln1139_1_reg_1450 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (ap_const_lv1_1 = and_ln1139_1_reg_1463)) or ((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1))) or ((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (or_ln1139_1_reg_1450 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (ap_const_lv1_1 = and_ln1139_2_reg_1459)))) or ((grp_delete_patch_fu_511_n_patches_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1)))) then 
            n_patches_o <= grp_delete_patch_fu_511_n_patches;
        elsif (((grp_makePatch_alignedToLine_fu_466_n_patches_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            n_patches_o <= grp_makePatch_alignedToLine_fu_466_n_patches_o;
        else 
            n_patches_o <= n_patches_i;
        end if; 
    end process;


    n_patches_o_ap_vld_assign_proc : process(makeHorizontallyShiftedPatch_reg_409, or_ln1139_1_reg_1450, and_ln1139_2_reg_1459, and_ln1139_1_reg_1463, ap_CS_fsm_state57, and_ln1214_reg_1584, icmp_ln1216_reg_1588, grp_makePatch_alignedToLine_fu_466_n_patches_o_ap_vld, grp_delete_patch_fu_511_n_patches_ap_vld, ap_CS_fsm_state55, ap_CS_fsm_state79)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state79) and ((((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (or_ln1139_1_reg_1450 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (ap_const_lv1_1 = and_ln1139_1_reg_1463)) or ((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1))) or ((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (or_ln1139_1_reg_1450 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (ap_const_lv1_1 = and_ln1139_2_reg_1459)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1)))) then 
            n_patches_o_ap_vld <= grp_delete_patch_fu_511_n_patches_ap_vld;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            n_patches_o_ap_vld <= grp_makePatch_alignedToLine_fu_466_n_patches_o_ap_vld;
        else 
            n_patches_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    newZtop_V_1_fu_862_p3 <= 
        z_top_max when (shiftOriginal_1_fu_846_p2(0) = '1') else 
        z_top_min;
    or_ln1139_1_fu_888_p2 <= (or_ln1139_reg_1367 or icmp_ln1139_fu_882_p2);
    or_ln1139_2_fu_796_p2 <= (empty_79_reg_275 or empty_77_reg_248);
    or_ln1139_3_fu_929_p2 <= (or_ln1139_2_reg_1372 or icmp_ln1139_1_fu_923_p2);
    or_ln1139_fu_780_p2 <= (empty_reg_236 or empty_78_reg_263);
    original_topL_jL_V_4_fu_1020_p3 <= 
        patches_parameters_q1 when (shiftOriginal_1_reg_1419(0) = '1') else 
        original_topL_jL_V_reg_327;
    original_topL_jR_V_3_fu_1013_p3 <= 
        patches_parameters_q1 when (shiftOriginal_1_reg_1419(0) = '1') else 
        original_topL_jR_V_1_reg_387;
    original_topR_jL_V_3_fu_1027_p3 <= 
        patches_parameters_q0 when (shiftOriginal_1_reg_1419(0) = '1') else 
        original_topR_jL_V_1_reg_337;
    original_topR_jR_V_3_fu_1006_p3 <= 
        patches_parameters_q0 when (shiftOriginal_1_reg_1419(0) = '1') else 
        original_topR_jR_V_1_reg_377;
    output_patch_stream_V_din <= grp_makePatch_alignedToLine_fu_466_output_patch_stream_V_din;

    output_patch_stream_V_write_assign_proc : process(ap_CS_fsm_state57, grp_makePatch_alignedToLine_fu_466_output_patch_stream_V_write)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            output_patch_stream_V_write <= grp_makePatch_alignedToLine_fu_466_output_patch_stream_V_write;
        else 
            output_patch_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;


    patches_parameters_address0_assign_proc : process(makeHorizontallyShiftedPatch_reg_409, ap_CS_fsm_state5, patches_parameters_addr_9_reg_1272, patches_parameters_addr_14_reg_1277, ap_CS_fsm_state14, ap_CS_fsm_state24, ap_CS_fsm_state34, ap_CS_fsm_state50, or_ln1139_1_reg_1450, and_ln1139_2_reg_1459, and_ln1139_1_reg_1463, ap_CS_fsm_state57, ap_CS_fsm_state61, and_ln1214_reg_1584, icmp_ln1216_reg_1588, grp_makePatch_alignedToLine_fu_466_patches_parameters_address0, grp_getShadows_fu_493_wp_parameters_address0, grp_delete_patch_fu_511_patches_parameters_address0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state59, ap_CS_fsm_state55, ap_CS_fsm_state79, select_ln1068_1_fu_580_p3, ap_CS_fsm_state49, ap_CS_fsm_state60)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            patches_parameters_address0 <= ap_const_lv64_4(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            patches_parameters_address0 <= patches_parameters_addr_14_reg_1277;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            patches_parameters_address0 <= ap_const_lv64_0(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            patches_parameters_address0 <= ap_const_lv64_2(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            patches_parameters_address0 <= ap_const_lv64_6(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            patches_parameters_address0 <= patches_parameters_addr_9_reg_1272;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            patches_parameters_address0 <= select_ln1068_1_fu_580_p3(7 - 1 downto 0);
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state79) and ((((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (or_ln1139_1_reg_1450 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (ap_const_lv1_1 = and_ln1139_1_reg_1463)) or ((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1))) or ((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (or_ln1139_1_reg_1450 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (ap_const_lv1_1 = and_ln1139_2_reg_1459)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1)))) then 
            patches_parameters_address0 <= grp_delete_patch_fu_511_patches_parameters_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_address0 <= grp_getShadows_fu_493_wp_parameters_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            patches_parameters_address0 <= grp_makePatch_alignedToLine_fu_466_patches_parameters_address0;
        else 
            patches_parameters_address0 <= "XXXXXXX";
        end if; 
    end process;


    patches_parameters_address1_assign_proc : process(makeHorizontallyShiftedPatch_reg_409, patches_parameters_addr_15_reg_1282, ap_CS_fsm_state50, or_ln1139_1_reg_1450, and_ln1139_2_reg_1459, and_ln1139_1_reg_1463, ap_CS_fsm_state61, and_ln1214_reg_1584, icmp_ln1216_reg_1588, grp_getShadows_fu_493_wp_parameters_address1, grp_delete_patch_fu_511_patches_parameters_address1, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state59, ap_CS_fsm_state55, ap_CS_fsm_state79, ap_CS_fsm_state49, ap_CS_fsm_state60)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            patches_parameters_address1 <= ap_const_lv64_0(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            patches_parameters_address1 <= ap_const_lv64_2(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            patches_parameters_address1 <= patches_parameters_addr_15_reg_1282;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            patches_parameters_address1 <= ap_const_lv64_4(7 - 1 downto 0);
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state79) and ((((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (or_ln1139_1_reg_1450 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (ap_const_lv1_1 = and_ln1139_1_reg_1463)) or ((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1))) or ((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (or_ln1139_1_reg_1450 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (ap_const_lv1_1 = and_ln1139_2_reg_1459)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1)))) then 
            patches_parameters_address1 <= grp_delete_patch_fu_511_patches_parameters_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_address1 <= grp_getShadows_fu_493_wp_parameters_address1;
        else 
            patches_parameters_address1 <= "XXXXXXX";
        end if; 
    end process;


    patches_parameters_ce0_assign_proc : process(makeHorizontallyShiftedPatch_reg_409, ap_CS_fsm_state5, ap_CS_fsm_state14, ap_CS_fsm_state24, ap_CS_fsm_state34, ap_CS_fsm_state50, or_ln1139_1_reg_1450, and_ln1139_2_reg_1459, and_ln1139_1_reg_1463, ap_CS_fsm_state57, ap_CS_fsm_state61, and_ln1214_reg_1584, icmp_ln1216_reg_1588, grp_makePatch_alignedToLine_fu_466_patches_parameters_ce0, grp_getShadows_fu_493_wp_parameters_ce0, grp_delete_patch_fu_511_patches_parameters_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state59, ap_CS_fsm_state55, ap_CS_fsm_state79, ap_CS_fsm_state49, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            patches_parameters_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state79) and ((((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (or_ln1139_1_reg_1450 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (ap_const_lv1_1 = and_ln1139_1_reg_1463)) or ((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1))) or ((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (or_ln1139_1_reg_1450 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (ap_const_lv1_1 = and_ln1139_2_reg_1459)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1)))) then 
            patches_parameters_ce0 <= grp_delete_patch_fu_511_patches_parameters_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_ce0 <= grp_getShadows_fu_493_wp_parameters_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            patches_parameters_ce0 <= grp_makePatch_alignedToLine_fu_466_patches_parameters_ce0;
        else 
            patches_parameters_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    patches_parameters_ce1_assign_proc : process(makeHorizontallyShiftedPatch_reg_409, ap_CS_fsm_state50, or_ln1139_1_reg_1450, and_ln1139_2_reg_1459, and_ln1139_1_reg_1463, ap_CS_fsm_state61, and_ln1214_reg_1584, icmp_ln1216_reg_1588, grp_getShadows_fu_493_wp_parameters_ce1, grp_delete_patch_fu_511_patches_parameters_ce1, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state59, ap_CS_fsm_state55, ap_CS_fsm_state79, ap_CS_fsm_state49, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            patches_parameters_ce1 <= ap_const_logic_1;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state79) and ((((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (or_ln1139_1_reg_1450 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (ap_const_lv1_1 = and_ln1139_1_reg_1463)) or ((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1))) or ((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (or_ln1139_1_reg_1450 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (ap_const_lv1_1 = and_ln1139_2_reg_1459)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1)))) then 
            patches_parameters_ce1 <= grp_delete_patch_fu_511_patches_parameters_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_ce1 <= grp_getShadows_fu_493_wp_parameters_ce1;
        else 
            patches_parameters_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    patches_parameters_d0_assign_proc : process(makeHorizontallyShiftedPatch_reg_409, or_ln1139_1_reg_1450, and_ln1139_2_reg_1459, and_ln1139_1_reg_1463, ap_CS_fsm_state57, and_ln1214_reg_1584, icmp_ln1216_reg_1588, grp_makePatch_alignedToLine_fu_466_patches_parameters_d0, grp_getShadows_fu_493_wp_parameters_d0, grp_delete_patch_fu_511_patches_parameters_d0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state59, ap_CS_fsm_state55, ap_CS_fsm_state79)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state79) and ((((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (or_ln1139_1_reg_1450 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (ap_const_lv1_1 = and_ln1139_1_reg_1463)) or ((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1))) or ((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (or_ln1139_1_reg_1450 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (ap_const_lv1_1 = and_ln1139_2_reg_1459)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1)))) then 
            patches_parameters_d0 <= grp_delete_patch_fu_511_patches_parameters_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_d0 <= grp_getShadows_fu_493_wp_parameters_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            patches_parameters_d0 <= grp_makePatch_alignedToLine_fu_466_patches_parameters_d0;
        else 
            patches_parameters_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    patches_parameters_d1 <= grp_getShadows_fu_493_wp_parameters_d1;

    patches_parameters_we0_assign_proc : process(makeHorizontallyShiftedPatch_reg_409, or_ln1139_1_reg_1450, and_ln1139_2_reg_1459, and_ln1139_1_reg_1463, ap_CS_fsm_state57, and_ln1214_reg_1584, icmp_ln1216_reg_1588, grp_makePatch_alignedToLine_fu_466_patches_parameters_we0, grp_getShadows_fu_493_wp_parameters_we0, grp_delete_patch_fu_511_patches_parameters_we0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state59, ap_CS_fsm_state55, ap_CS_fsm_state79)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state79) and ((((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (or_ln1139_1_reg_1450 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (ap_const_lv1_1 = and_ln1139_1_reg_1463)) or ((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1))) or ((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (or_ln1139_1_reg_1450 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (ap_const_lv1_1 = and_ln1139_2_reg_1459)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1)))) then 
            patches_parameters_we0 <= grp_delete_patch_fu_511_patches_parameters_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_we0 <= grp_getShadows_fu_493_wp_parameters_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            patches_parameters_we0 <= grp_makePatch_alignedToLine_fu_466_patches_parameters_we0;
        else 
            patches_parameters_we0 <= ap_const_logic_0;
        end if; 
    end process;


    patches_parameters_we1_assign_proc : process(grp_getShadows_fu_493_wp_parameters_we1, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state59)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_we1 <= grp_getShadows_fu_493_wp_parameters_we1;
        else 
            patches_parameters_we1 <= ap_const_logic_0;
        end if; 
    end process;


    patches_superpoints_address0_assign_proc : process(makeHorizontallyShiftedPatch_reg_409, or_ln1139_1_reg_1450, and_ln1139_2_reg_1459, and_ln1139_1_reg_1463, ap_CS_fsm_state57, and_ln1214_reg_1584, icmp_ln1216_reg_1588, grp_makePatch_alignedToLine_fu_466_patches_superpoints_address0, grp_getShadows_fu_493_wp_superpoints_address0, grp_delete_patch_fu_511_patches_superpoints_address0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state59, ap_CS_fsm_state55, ap_CS_fsm_state79)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state79) and ((((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (or_ln1139_1_reg_1450 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (ap_const_lv1_1 = and_ln1139_1_reg_1463)) or ((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1))) or ((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (or_ln1139_1_reg_1450 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (ap_const_lv1_1 = and_ln1139_2_reg_1459)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1)))) then 
            patches_superpoints_address0 <= grp_delete_patch_fu_511_patches_superpoints_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_superpoints_address0 <= grp_getShadows_fu_493_wp_superpoints_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            patches_superpoints_address0 <= grp_makePatch_alignedToLine_fu_466_patches_superpoints_address0;
        else 
            patches_superpoints_address0 <= "XXXXXXXX";
        end if; 
    end process;


    patches_superpoints_address1_assign_proc : process(makeHorizontallyShiftedPatch_reg_409, or_ln1139_1_reg_1450, and_ln1139_2_reg_1459, and_ln1139_1_reg_1463, ap_CS_fsm_state57, and_ln1214_reg_1584, icmp_ln1216_reg_1588, grp_makePatch_alignedToLine_fu_466_patches_superpoints_address1, grp_delete_patch_fu_511_patches_superpoints_address1, ap_CS_fsm_state55, ap_CS_fsm_state79)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state79) and ((((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (or_ln1139_1_reg_1450 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (ap_const_lv1_1 = and_ln1139_1_reg_1463)) or ((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1))) or ((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (or_ln1139_1_reg_1450 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (ap_const_lv1_1 = and_ln1139_2_reg_1459)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1)))) then 
            patches_superpoints_address1 <= grp_delete_patch_fu_511_patches_superpoints_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            patches_superpoints_address1 <= grp_makePatch_alignedToLine_fu_466_patches_superpoints_address1;
        else 
            patches_superpoints_address1 <= "XXXXXXXX";
        end if; 
    end process;


    patches_superpoints_ce0_assign_proc : process(makeHorizontallyShiftedPatch_reg_409, or_ln1139_1_reg_1450, and_ln1139_2_reg_1459, and_ln1139_1_reg_1463, ap_CS_fsm_state57, and_ln1214_reg_1584, icmp_ln1216_reg_1588, grp_makePatch_alignedToLine_fu_466_patches_superpoints_ce0, grp_getShadows_fu_493_wp_superpoints_ce0, grp_delete_patch_fu_511_patches_superpoints_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state59, ap_CS_fsm_state55, ap_CS_fsm_state79)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state79) and ((((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (or_ln1139_1_reg_1450 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (ap_const_lv1_1 = and_ln1139_1_reg_1463)) or ((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1))) or ((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (or_ln1139_1_reg_1450 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (ap_const_lv1_1 = and_ln1139_2_reg_1459)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1)))) then 
            patches_superpoints_ce0 <= grp_delete_patch_fu_511_patches_superpoints_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_superpoints_ce0 <= grp_getShadows_fu_493_wp_superpoints_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            patches_superpoints_ce0 <= grp_makePatch_alignedToLine_fu_466_patches_superpoints_ce0;
        else 
            patches_superpoints_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    patches_superpoints_ce1_assign_proc : process(makeHorizontallyShiftedPatch_reg_409, or_ln1139_1_reg_1450, and_ln1139_2_reg_1459, and_ln1139_1_reg_1463, ap_CS_fsm_state57, and_ln1214_reg_1584, icmp_ln1216_reg_1588, grp_makePatch_alignedToLine_fu_466_patches_superpoints_ce1, grp_delete_patch_fu_511_patches_superpoints_ce1, ap_CS_fsm_state55, ap_CS_fsm_state79)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state79) and ((((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (or_ln1139_1_reg_1450 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (ap_const_lv1_1 = and_ln1139_1_reg_1463)) or ((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1))) or ((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (or_ln1139_1_reg_1450 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (ap_const_lv1_1 = and_ln1139_2_reg_1459)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1)))) then 
            patches_superpoints_ce1 <= grp_delete_patch_fu_511_patches_superpoints_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            patches_superpoints_ce1 <= grp_makePatch_alignedToLine_fu_466_patches_superpoints_ce1;
        else 
            patches_superpoints_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    patches_superpoints_d0_assign_proc : process(makeHorizontallyShiftedPatch_reg_409, or_ln1139_1_reg_1450, and_ln1139_2_reg_1459, and_ln1139_1_reg_1463, ap_CS_fsm_state57, and_ln1214_reg_1584, icmp_ln1216_reg_1588, grp_makePatch_alignedToLine_fu_466_patches_superpoints_d0, grp_delete_patch_fu_511_patches_superpoints_d0, ap_CS_fsm_state55, ap_CS_fsm_state79)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state79) and ((((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (or_ln1139_1_reg_1450 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (ap_const_lv1_1 = and_ln1139_1_reg_1463)) or ((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1))) or ((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (or_ln1139_1_reg_1450 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (ap_const_lv1_1 = and_ln1139_2_reg_1459)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1)))) then 
            patches_superpoints_d0 <= grp_delete_patch_fu_511_patches_superpoints_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            patches_superpoints_d0 <= grp_makePatch_alignedToLine_fu_466_patches_superpoints_d0;
        else 
            patches_superpoints_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    patches_superpoints_d1 <= grp_makePatch_alignedToLine_fu_466_patches_superpoints_d1;

    patches_superpoints_we0_assign_proc : process(makeHorizontallyShiftedPatch_reg_409, or_ln1139_1_reg_1450, and_ln1139_2_reg_1459, and_ln1139_1_reg_1463, ap_CS_fsm_state57, and_ln1214_reg_1584, icmp_ln1216_reg_1588, grp_makePatch_alignedToLine_fu_466_patches_superpoints_we0, grp_delete_patch_fu_511_patches_superpoints_we0, ap_CS_fsm_state55, ap_CS_fsm_state79)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state79) and ((((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (or_ln1139_1_reg_1450 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (ap_const_lv1_1 = and_ln1139_1_reg_1463)) or ((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1))) or ((icmp_ln1216_reg_1588 = ap_const_lv1_1) and (or_ln1139_1_reg_1450 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln1214_reg_1584) and (ap_const_lv1_1 = and_ln1139_2_reg_1459)))) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (makeHorizontallyShiftedPatch_reg_409 = ap_const_lv1_1)))) then 
            patches_superpoints_we0 <= grp_delete_patch_fu_511_patches_superpoints_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            patches_superpoints_we0 <= grp_makePatch_alignedToLine_fu_466_patches_superpoints_we0;
        else 
            patches_superpoints_we0 <= ap_const_logic_0;
        end if; 
    end process;


    patches_superpoints_we1_assign_proc : process(ap_CS_fsm_state57, grp_makePatch_alignedToLine_fu_466_patches_superpoints_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            patches_superpoints_we1 <= grp_makePatch_alignedToLine_fu_466_patches_superpoints_we1;
        else 
            patches_superpoints_we1 <= ap_const_logic_0;
        end if; 
    end process;

    phitmp3_fu_730_p2 <= "1" when (unsigned(select_ln180_5_fu_722_p3) > unsigned(ap_const_lv32_11E1A2FF)) else "0";
    phitmp4_fu_680_p2 <= "1" when (unsigned(select_ln180_4_fu_672_p3) > unsigned(ap_const_lv32_11E1A2FF)) else "0";
    phitmp5_fu_774_p2 <= "1" when (unsigned(select_ln180_6_fu_766_p3) > unsigned(ap_const_lv32_11E1A2FF)) else "0";
    phitmp_fu_640_p2 <= "1" when (unsigned(select_ln180_fu_632_p3) > unsigned(ap_const_lv32_11E1A2FF)) else "0";
    ret_10_fu_1089_p2 <= std_logic_vector(signed(sext_ln215_18_reg_1542) - signed(sext_ln215_22_fu_1086_p1));
    ret_11_fu_1119_p2 <= std_logic_vector(signed(sext_ln215_23_fu_1116_p1) - signed(sext_ln215_19_reg_1552));
    ret_12_fu_1127_p2 <= std_logic_vector(signed(sext_ln215_20_reg_1557) - signed(sext_ln215_24_fu_1124_p1));
    ret_7_fu_692_p2 <= std_logic_vector(signed(sext_ln215_13_fu_686_p1) - signed(sext_ln215_14_fu_689_p1));
    ret_8_fu_746_p2 <= std_logic_vector(signed(sext_ln215_15_fu_740_p1) - signed(sext_ln215_16_fu_743_p1));
    ret_9_fu_1081_p2 <= std_logic_vector(signed(sext_ln215_21_fu_1078_p1) - signed(sext_ln215_17_reg_1537));
    ret_fu_652_p2 <= std_logic_vector(signed(sext_ln215_fu_646_p1) - signed(sext_ln215_12_fu_649_p1));
    select_ln1068_1_fu_580_p3 <= 
        ap_const_lv64_1C when (icmp_ln1066_reg_1199(0) = '1') else 
        ap_const_lv64_4;
    select_ln1068_fu_600_p3 <= 
        ap_const_lv64_18 when (icmp_ln1066_reg_1199(0) = '1') else 
        ap_const_lv64_0;
    select_ln1092_fu_608_p3 <= 
        ap_const_lv64_1E when (icmp_ln1066_reg_1199(0) = '1') else 
        ap_const_lv64_6;
    select_ln1093_fu_616_p3 <= 
        ap_const_lv64_1A when (icmp_ln1066_reg_1199(0) = '1') else 
        ap_const_lv64_2;
    select_ln180_4_fu_672_p3 <= 
        grp_fu_566_p2 when (tmp_12_fu_664_p3(0) = '1') else 
        reg_557;
    select_ln180_5_fu_722_p3 <= 
        grp_fu_566_p2 when (tmp_13_fu_714_p3(0) = '1') else 
        reg_557;
    select_ln180_6_fu_766_p3 <= 
        grp_fu_566_p2 when (tmp_14_fu_758_p3(0) = '1') else 
        reg_557;
    select_ln180_fu_632_p3 <= 
        grp_fu_566_p2 when (tmp_fu_624_p3(0) = '1') else 
        reg_557;
    select_ln534_fu_958_p3 <= 
        empty_80_reg_299 when (icmp_ln878_5_fu_952_p2(0) = '1') else 
        empty_81_reg_308;
        sext_ln1119_fu_842_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shifted_Align_1_fu_836_p3),64));

    sext_ln215_12_fu_649_p0 <= apexZ0;
        sext_ln215_12_fu_649_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln215_12_fu_649_p0),33));

        sext_ln215_13_fu_686_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(complementary_topR_jR_V_3_reg_1313),33));

    sext_ln215_14_fu_689_p0 <= complementary_apexZ0;
        sext_ln215_14_fu_689_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln215_14_fu_689_p0),33));

        sext_ln215_15_fu_740_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(complementary_topL_jR_V_3_reg_1331),33));

    sext_ln215_16_fu_743_p0 <= apexZ0;
        sext_ln215_16_fu_743_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln215_16_fu_743_p0),33));

        sext_ln215_17_fu_1048_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(original_topR_jL_V_3_fu_1027_p3),33));

        sext_ln215_18_fu_1052_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(complementary_topR_jR_V_4_reg_1488),33));

        sext_ln215_19_fu_1060_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(original_topL_jL_V_4_fu_1020_p3),33));

        sext_ln215_20_fu_1064_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(complementary_topL_jR_V_4_reg_1495),33));

        sext_ln215_21_fu_1078_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(complementary_topR_jL_V_3_reg_1525),33));

        sext_ln215_22_fu_1086_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(original_topR_jR_V_3_reg_1502),33));

        sext_ln215_23_fu_1116_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(complementary_topL_jL_V_3_reg_1531),33));

        sext_ln215_24_fu_1124_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(original_topL_jR_V_3_reg_1509),33));

        sext_ln215_fu_646_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(original_topL_jL_V_3_reg_1292),33));

        sext_ln534_fu_966_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln534_reg_1467),64));

    shiftOriginal_1_fu_846_p2 <= (shiftOriginal_fu_830_p2 or icmp_ln886_5_reg_1387);
    shiftOriginal_fu_830_p2 <= (tmp_15_fu_816_p3 xor ap_const_lv1_1);
    shifted_Align_1_fu_836_p1 <= apexZ0;
    shifted_Align_1_fu_836_p3 <= 
        shifted_Align_1_fu_836_p1 when (icmp_ln886_5_reg_1387(0) = '1') else 
        shifted_Align_fu_824_p3;
    shifted_Align_3_fu_969_p2 <= std_logic_vector(unsigned(shifted_Align_2_reg_423) - unsigned(sext_ln534_fu_966_p1));
    shifted_Align_4_fu_975_p2 <= std_logic_vector(unsigned(shifted_Align_2_reg_423) + unsigned(sext_ln534_fu_966_p1));
    shifted_Align_5_fu_981_p3 <= 
        shifted_Align_3_fu_969_p2 when (shiftOriginal_1_reg_1419(0) = '1') else 
        shifted_Align_4_fu_975_p2;
    shifted_Align_fu_824_p1 <= complementary_apexZ0;
    shifted_Align_fu_824_p2 <= apexZ0;
    shifted_Align_fu_824_p3 <= 
        shifted_Align_fu_824_p1 when (tmp_15_fu_816_p3(0) = '1') else 
        shifted_Align_fu_824_p2;
    tmp_12_fu_664_p3 <= reg_557(31 downto 31);
    tmp_13_fu_714_p3 <= reg_557(31 downto 31);
    tmp_14_fu_758_p3 <= reg_557(31 downto 31);
    tmp_15_fu_816_p3 <= grp_straightLineProjectorFromLayerIJtoK_fu_1072_p_dout0(31 downto 31);
    tmp_16_fu_872_p4 <= empty_81_reg_308(31 downto 1);
    tmp_17_fu_913_p4 <= empty_80_reg_299(31 downto 1);
    tmp_fu_624_p3 <= reg_557(31 downto 31);
    trunc_ln1107_1_fu_988_p1 <= shifted_Align_5_fu_981_p3(32 - 1 downto 0);
    trunc_ln1107_fu_868_p1 <= shifted_Align_2_reg_423(32 - 1 downto 0);
    trunc_ln1187_1_fu_1104_p1 <= ret_9_fu_1081_p2(32 - 1 downto 0);
    trunc_ln1187_fu_1100_p1 <= ret_10_fu_1089_p2(32 - 1 downto 0);
    trunc_ln1188_1_fu_1142_p1 <= ret_11_fu_1119_p2(32 - 1 downto 0);
    trunc_ln1188_fu_1138_p1 <= ret_12_fu_1127_p2(32 - 1 downto 0);
    xor_ln1139_fu_934_p2 <= (or_ln1139_3_fu_929_p2 xor ap_const_lv1_1);
end behav;
