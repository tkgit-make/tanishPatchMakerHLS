-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity MPSQ_getShadows is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    wp_superpoints_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    wp_superpoints_ce0 : OUT STD_LOGIC;
    wp_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    wp_superpoints_offset : IN STD_LOGIC_VECTOR (0 downto 0);
    wp_parameters_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    wp_parameters_ce0 : OUT STD_LOGIC;
    wp_parameters_we0 : OUT STD_LOGIC;
    wp_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    wp_parameters_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    wp_parameters_ce1 : OUT STD_LOGIC;
    wp_parameters_we1 : OUT STD_LOGIC;
    wp_parameters_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    wp_parameters_offset : IN STD_LOGIC_VECTOR (0 downto 0);
    zTopMin : IN STD_LOGIC_VECTOR (31 downto 0);
    zTopMax : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of MPSQ_getShadows is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (30 downto 0) := "0000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (30 downto 0) := "0000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (30 downto 0) := "0000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (30 downto 0) := "0000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (30 downto 0) := "0000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (30 downto 0) := "0000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (30 downto 0) := "0001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (30 downto 0) := "0010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (30 downto 0) := "0100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (30 downto 0) := "1000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv64_18 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011010";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_1C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011100";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_1E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011110";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_FD050F1C : STD_LOGIC_VECTOR (31 downto 0) := "11111101000001010000111100011100";
    constant ap_const_lv32_2FAF0E4 : STD_LOGIC_VECTOR (31 downto 0) := "00000010111110101111000011100100";
    constant ap_const_lv8_F : STD_LOGIC_VECTOR (7 downto 0) := "00001111";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal wp_parameters_addr_reg_802 : STD_LOGIC_VECTOR (6 downto 0);
    signal wp_parameters_addr_4_reg_807 : STD_LOGIC_VECTOR (6 downto 0);
    signal wp_parameters_addr_5_reg_812 : STD_LOGIC_VECTOR (6 downto 0);
    signal wp_parameters_addr_6_reg_817 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln272_cast_fu_309_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln272_cast_reg_822 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln257_fu_323_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln257_reg_827 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln258_fu_337_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln258_reg_832 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln275_fu_345_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln275_reg_837 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal topR_jL_V_3_load_reg_842 : STD_LOGIC_VECTOR (31 downto 0);
    signal topR_jR_V_3_load_reg_847 : STD_LOGIC_VECTOR (31 downto 0);
    signal wp_superpoints_addr_1_reg_857 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln275_fu_404_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln275_reg_865 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln267_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal z_j_min_V_fu_428_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_min_V_reg_898 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln275_1_fu_435_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln275_1_reg_903 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal z_j_max_V_fu_442_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_j_max_V_reg_908 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal trunc_ln886_fu_544_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln886_reg_916 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal icmp_ln288_fu_526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln288_fu_700_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_260_z_i : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_260_z_j : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_260_j : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_237 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal i_9_reg_248 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_NS_fsm_state4 : STD_LOGIC;
    signal ap_NS_fsm_state10 : STD_LOGIC;
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_NS_fsm_state16 : STD_LOGIC;
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_NS_fsm_state22 : STD_LOGIC;
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal select_ln281_fu_273_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln282_fu_282_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln283_fu_291_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln284_fu_300_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln272_1_fu_382_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln273_fu_393_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal topL_jL_V_3_1_fu_76 : STD_LOGIC_VECTOR (31 downto 0);
    signal topL_jR_V_3_fu_80 : STD_LOGIC_VECTOR (31 downto 0);
    signal topR_jL_V_3_fu_84 : STD_LOGIC_VECTOR (31 downto 0);
    signal topR_jR_V_3_fu_88 : STD_LOGIC_VECTOR (31 downto 0);
    signal topL_jL_V_3_2_fu_92 : STD_LOGIC_VECTOR (31 downto 0);
    signal topL_jL_V_3_4_fu_96 : STD_LOGIC_VECTOR (31 downto 0);
    signal topL_jL_V_3_5_fu_100 : STD_LOGIC_VECTOR (31 downto 0);
    signal topL_jR_V_3_1_fu_104 : STD_LOGIC_VECTOR (31 downto 0);
    signal topL_jR_V_3_2_fu_108 : STD_LOGIC_VECTOR (31 downto 0);
    signal topL_jR_V_3_3_fu_112 : STD_LOGIC_VECTOR (31 downto 0);
    signal topR_jL_V_3_1_fu_116 : STD_LOGIC_VECTOR (31 downto 0);
    signal topR_jL_V_3_2_fu_120 : STD_LOGIC_VECTOR (31 downto 0);
    signal topR_jL_V_3_3_fu_124 : STD_LOGIC_VECTOR (31 downto 0);
    signal topR_jR_V_3_1_fu_128 : STD_LOGIC_VECTOR (31 downto 0);
    signal topR_jR_V_3_2_fu_132 : STD_LOGIC_VECTOR (31 downto 0);
    signal topR_jR_V_3_3_fu_136 : STD_LOGIC_VECTOR (31 downto 0);
    signal topL_jL_V_3_6_fu_140 : STD_LOGIC_VECTOR (31 downto 0);
    signal topL_jL_V_3_8_fu_568_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_fu_577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_92_fu_144 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_ln_fu_600_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln878_10_fu_615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_93_fu_148 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_ln886_1_fu_638_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_8_fu_652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_94_fu_152 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_ln878_1_fu_675_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln878_11_fu_689_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal icmp_ln878_fu_317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_9_fu_331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln272_fu_365_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln272_fu_369_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_374_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln273_fu_387_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln275_fu_432_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln886_7_fu_548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_9_fu_562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal topL_jL_V_3_fu_554_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component MPSQ_straightLineProjectorFromLayerIJtoK IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        z_i : IN STD_LOGIC_VECTOR (31 downto 0);
        z_j : IN STD_LOGIC_VECTOR (31 downto 0);
        i : IN STD_LOGIC_VECTOR (2 downto 0);
        j : IN STD_LOGIC_VECTOR (2 downto 0);
        k : IN STD_LOGIC_VECTOR (2 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MPSQ_mux_42_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_straightLineProjectorFromLayerIJtoK_fu_260 : component MPSQ_straightLineProjectorFromLayerIJtoK
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_start,
        ap_done => grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_done,
        ap_idle => grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_idle,
        ap_ready => grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_ready,
        ap_ce => ap_const_logic_1,
        z_i => grp_straightLineProjectorFromLayerIJtoK_fu_260_z_i,
        z_j => grp_straightLineProjectorFromLayerIJtoK_fu_260_z_j,
        i => ap_const_lv3_5,
        j => grp_straightLineProjectorFromLayerIJtoK_fu_260_j,
        k => ap_const_lv3_1,
        ap_return => grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_return);

    mux_42_32_1_1_U110 : component MPSQ_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => topL_jR_V_3_3_fu_112,
        din1 => topL_jR_V_3_1_fu_104,
        din2 => topL_jR_V_3_2_fu_108,
        din3 => topL_jR_V_3_3_fu_112,
        din4 => trunc_ln886_fu_544_p1,
        dout => phi_ln_fu_600_p6);

    mux_42_32_1_1_U111 : component MPSQ_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => topR_jL_V_3_3_fu_124,
        din1 => topR_jL_V_3_1_fu_116,
        din2 => topR_jL_V_3_2_fu_120,
        din3 => topR_jL_V_3_3_fu_124,
        din4 => trunc_ln886_reg_916,
        dout => phi_ln886_1_fu_638_p6);

    mux_42_32_1_1_U112 : component MPSQ_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => topR_jR_V_3_3_fu_136,
        din1 => topR_jR_V_3_1_fu_128,
        din2 => topR_jR_V_3_2_fu_132,
        din3 => topR_jR_V_3_3_fu_136,
        din4 => trunc_ln886_reg_916,
        dout => phi_ln878_1_fu_675_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_NS_fsm_state22) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((ap_const_logic_1 = ap_NS_fsm_state16) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((ap_const_logic_1 = ap_NS_fsm_state10) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((ap_const_logic_1 = ap_NS_fsm_state4) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_ready = ap_const_logic_1)) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    empty_92_fu_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln267_fu_398_p2 = ap_const_lv1_1))) then 
                empty_92_fu_144 <= topL_jR_V_3_fu_80;
            elsif (((icmp_ln878_10_fu_615_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state30) and (icmp_ln288_fu_526_p2 = ap_const_lv1_0))) then 
                empty_92_fu_144 <= phi_ln_fu_600_p6;
            end if; 
        end if;
    end process;

    empty_93_fu_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln267_fu_398_p2 = ap_const_lv1_1))) then 
                empty_93_fu_148 <= topR_jL_V_3_fu_84;
            elsif (((icmp_ln886_8_fu_652_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
                empty_93_fu_148 <= phi_ln886_1_fu_638_p6;
            end if; 
        end if;
    end process;

    empty_94_fu_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln267_fu_398_p2 = ap_const_lv1_1))) then 
                empty_94_fu_152 <= topR_jR_V_3_fu_88;
            elsif (((icmp_ln878_11_fu_689_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
                empty_94_fu_152 <= phi_ln878_1_fu_675_p6;
            end if; 
        end if;
    end process;

    i_9_reg_248_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                i_9_reg_248 <= add_ln288_fu_700_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
                i_9_reg_248 <= ap_const_lv3_1;
            end if; 
        end if;
    end process;

    i_reg_237_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
                i_reg_237 <= add_ln275_reg_837;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_237 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    topL_jL_V_3_6_fu_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln267_fu_398_p2 = ap_const_lv1_1))) then 
                topL_jL_V_3_6_fu_140 <= topL_jL_V_3_1_fu_76;
            elsif (((icmp_ln886_fu_577_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state30) and (icmp_ln288_fu_526_p2 = ap_const_lv1_0))) then 
                topL_jL_V_3_6_fu_140 <= topL_jL_V_3_8_fu_568_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln275_1_reg_903 <= add_ln275_1_fu_435_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln275_reg_837 <= add_ln275_fu_345_p2;
                topR_jL_V_3_load_reg_842 <= topR_jL_V_3_fu_84;
                topR_jR_V_3_load_reg_847 <= topR_jR_V_3_fu_88;
                    wp_superpoints_addr_1_reg_857(7 downto 4) <= zext_ln273_fu_393_p1(8 - 1 downto 0)(7 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                select_ln257_reg_827 <= select_ln257_fu_323_p3;
                select_ln258_reg_832 <= select_ln258_fu_337_p3;
                    select_ln272_cast_reg_822(0) <= select_ln272_cast_fu_309_p3(0);    select_ln272_cast_reg_822(2) <= select_ln272_cast_fu_309_p3(2);
                    wp_parameters_addr_4_reg_807(4 downto 3) <= select_ln282_fu_282_p3(7 - 1 downto 0)(4 downto 3);
                    wp_parameters_addr_5_reg_812(4 downto 3) <= select_ln283_fu_291_p3(7 - 1 downto 0)(4 downto 3);
                    wp_parameters_addr_6_reg_817(4 downto 3) <= select_ln284_fu_300_p3(7 - 1 downto 0)(4 downto 3);
                    wp_parameters_addr_reg_802(4 downto 3) <= select_ln281_fu_273_p3(7 - 1 downto 0)(4 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (trunc_ln275_reg_865 = ap_const_lv2_0))) then
                topL_jL_V_3_1_fu_76 <= grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (trunc_ln275_reg_865 = ap_const_lv2_1))) then
                topL_jL_V_3_2_fu_92 <= grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (trunc_ln275_reg_865 = ap_const_lv2_2))) then
                topL_jL_V_3_4_fu_96 <= grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (trunc_ln275_reg_865 = ap_const_lv2_3))) then
                topL_jL_V_3_5_fu_100 <= grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (trunc_ln275_reg_865 = ap_const_lv2_1))) then
                topL_jR_V_3_1_fu_104 <= grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (trunc_ln275_reg_865 = ap_const_lv2_2))) then
                topL_jR_V_3_2_fu_108 <= grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (trunc_ln275_reg_865 = ap_const_lv2_3))) then
                topL_jR_V_3_3_fu_112 <= grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (trunc_ln275_reg_865 = ap_const_lv2_0))) then
                topL_jR_V_3_fu_80 <= grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state22) and (trunc_ln275_reg_865 = ap_const_lv2_1))) then
                topR_jL_V_3_1_fu_116 <= grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state22) and (trunc_ln275_reg_865 = ap_const_lv2_2))) then
                topR_jL_V_3_2_fu_120 <= grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state22) and (trunc_ln275_reg_865 = ap_const_lv2_3))) then
                topR_jL_V_3_3_fu_124 <= grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state22) and (trunc_ln275_reg_865 = ap_const_lv2_0))) then
                topR_jL_V_3_fu_84 <= grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state28) and (trunc_ln275_reg_865 = ap_const_lv2_1))) then
                topR_jR_V_3_1_fu_128 <= grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state28) and (trunc_ln275_reg_865 = ap_const_lv2_2))) then
                topR_jR_V_3_2_fu_132 <= grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state28) and (trunc_ln275_reg_865 = ap_const_lv2_3))) then
                topR_jR_V_3_3_fu_136 <= grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state28) and (trunc_ln275_reg_865 = ap_const_lv2_0))) then
                topR_jR_V_3_fu_88 <= grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln267_fu_398_p2 = ap_const_lv1_0))) then
                trunc_ln275_reg_865 <= trunc_ln275_fu_404_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state30) and (icmp_ln288_fu_526_p2 = ap_const_lv1_0))) then
                trunc_ln886_reg_916 <= trunc_ln886_fu_544_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                z_j_max_V_reg_908 <= z_j_max_V_fu_442_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                z_j_min_V_reg_898 <= z_j_min_V_fu_428_p1;
            end if;
        end if;
    end process;
    wp_parameters_addr_reg_802(2 downto 0) <= "000";
    wp_parameters_addr_reg_802(6 downto 5) <= "00";
    wp_parameters_addr_4_reg_807(2 downto 0) <= "010";
    wp_parameters_addr_4_reg_807(6 downto 5) <= "00";
    wp_parameters_addr_5_reg_812(2 downto 0) <= "100";
    wp_parameters_addr_5_reg_812(6 downto 5) <= "00";
    wp_parameters_addr_6_reg_817(2 downto 0) <= "110";
    wp_parameters_addr_6_reg_817(6 downto 5) <= "00";
    select_ln272_cast_reg_822(1) <= '0';
    select_ln272_cast_reg_822(3) <= '0';
    wp_superpoints_addr_1_reg_857(3 downto 0) <= "1111";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln267_fu_398_p2, ap_CS_fsm_state30, icmp_ln288_fu_526_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln267_fu_398_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state30) and (icmp_ln288_fu_526_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln272_fu_369_p2 <= std_logic_vector(unsigned(select_ln272_cast_reg_822) + unsigned(zext_ln272_fu_365_p1));
    add_ln275_1_fu_435_p2 <= std_logic_vector(unsigned(zext_ln275_fu_432_p1) + unsigned(ap_const_lv3_1));
    add_ln275_fu_345_p2 <= std_logic_vector(unsigned(i_reg_237) + unsigned(ap_const_lv3_1));
    add_ln288_fu_700_p2 <= std_logic_vector(unsigned(i_9_reg_248) + unsigned(ap_const_lv3_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_NS_fsm_state10 <= ap_NS_fsm(9);
    ap_NS_fsm_state16 <= ap_NS_fsm(15);
    ap_NS_fsm_state22 <= ap_NS_fsm(21);
    ap_NS_fsm_state4 <= ap_NS_fsm(3);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state30, icmp_ln288_fu_526_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state30) and (icmp_ln288_fu_526_p2 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state30, icmp_ln288_fu_526_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state30) and (icmp_ln288_fu_526_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_start <= grp_straightLineProjectorFromLayerIJtoK_fu_260_ap_start_reg;

    grp_straightLineProjectorFromLayerIJtoK_fu_260_j_assign_proc : process(add_ln275_1_fu_435_p2, add_ln275_1_reg_903, ap_CS_fsm_state4, ap_CS_fsm_state10, ap_CS_fsm_state16, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_260_j <= add_ln275_1_reg_903;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_260_j <= add_ln275_1_fu_435_p2;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_260_j <= "XXX";
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_260_z_i_assign_proc : process(select_ln257_reg_827, select_ln258_reg_832, ap_CS_fsm_state4, ap_CS_fsm_state10, ap_CS_fsm_state16, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_260_z_i <= select_ln258_reg_832;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_260_z_i <= select_ln257_reg_827;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_260_z_i <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_260_z_j_assign_proc : process(z_j_min_V_reg_898, ap_CS_fsm_state4, z_j_max_V_reg_908, ap_CS_fsm_state10, ap_CS_fsm_state16, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_260_z_j <= z_j_max_V_reg_908;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_260_z_j <= z_j_min_V_reg_898;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_260_z_j <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln267_fu_398_p2 <= "1" when (i_reg_237 = ap_const_lv3_4) else "0";
    icmp_ln288_fu_526_p2 <= "1" when (i_9_reg_248 = ap_const_lv3_4) else "0";
    icmp_ln878_10_fu_615_p2 <= "1" when (signed(phi_ln_fu_600_p6) < signed(empty_92_fu_144)) else "0";
    icmp_ln878_11_fu_689_p2 <= "1" when (signed(phi_ln878_1_fu_675_p6) < signed(empty_94_fu_152)) else "0";
    icmp_ln878_9_fu_331_p2 <= "1" when (signed(zTopMax) < signed(ap_const_lv32_2FAF0E4)) else "0";
    icmp_ln878_fu_317_p2 <= "1" when (signed(zTopMin) < signed(ap_const_lv32_FD050F1C)) else "0";
    icmp_ln886_7_fu_548_p2 <= "1" when (trunc_ln886_fu_544_p1 = ap_const_lv2_2) else "0";
    icmp_ln886_8_fu_652_p2 <= "1" when (signed(phi_ln886_1_fu_638_p6) > signed(empty_93_fu_148)) else "0";
    icmp_ln886_9_fu_562_p2 <= "1" when (trunc_ln886_fu_544_p1 = ap_const_lv2_1) else "0";
    icmp_ln886_fu_577_p2 <= "1" when (signed(topL_jL_V_3_8_fu_568_p3) > signed(topL_jL_V_3_6_fu_140)) else "0";
    or_ln273_fu_387_p2 <= (tmp_fu_374_p3 or ap_const_lv8_F);
    select_ln257_fu_323_p3 <= 
        ap_const_lv32_FD050F1C when (icmp_ln878_fu_317_p2(0) = '1') else 
        zTopMin;
    select_ln258_fu_337_p3 <= 
        zTopMax when (icmp_ln878_9_fu_331_p2(0) = '1') else 
        ap_const_lv32_2FAF0E4;
    select_ln272_cast_fu_309_p3 <= 
        ap_const_lv4_5 when (wp_superpoints_offset(0) = '1') else 
        ap_const_lv4_0;
    select_ln281_fu_273_p3 <= 
        ap_const_lv64_18 when (wp_parameters_offset(0) = '1') else 
        ap_const_lv64_0;
    select_ln282_fu_282_p3 <= 
        ap_const_lv64_1A when (wp_parameters_offset(0) = '1') else 
        ap_const_lv64_2;
    select_ln283_fu_291_p3 <= 
        ap_const_lv64_1C when (wp_parameters_offset(0) = '1') else 
        ap_const_lv64_4;
    select_ln284_fu_300_p3 <= 
        ap_const_lv64_1E when (wp_parameters_offset(0) = '1') else 
        ap_const_lv64_6;
    tmp_fu_374_p3 <= (add_ln272_fu_369_p2 & ap_const_lv4_0);
    topL_jL_V_3_8_fu_568_p3 <= 
        topL_jL_V_3_2_fu_92 when (icmp_ln886_9_fu_562_p2(0) = '1') else 
        topL_jL_V_3_fu_554_p3;
    topL_jL_V_3_fu_554_p3 <= 
        topL_jL_V_3_4_fu_96 when (icmp_ln886_7_fu_548_p2(0) = '1') else 
        topL_jL_V_3_5_fu_100;
    trunc_ln275_fu_404_p1 <= i_reg_237(2 - 1 downto 0);
    trunc_ln886_fu_544_p1 <= i_9_reg_248(2 - 1 downto 0);

    wp_parameters_address0_assign_proc : process(wp_parameters_addr_4_reg_807, wp_parameters_addr_6_reg_817, ap_CS_fsm_state2, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            wp_parameters_address0 <= wp_parameters_addr_6_reg_817;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            wp_parameters_address0 <= wp_parameters_addr_4_reg_807;
        else 
            wp_parameters_address0 <= "XXXXXXX";
        end if; 
    end process;


    wp_parameters_address1_assign_proc : process(wp_parameters_addr_reg_802, wp_parameters_addr_5_reg_812, ap_CS_fsm_state2, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            wp_parameters_address1 <= wp_parameters_addr_5_reg_812;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            wp_parameters_address1 <= wp_parameters_addr_reg_802;
        else 
            wp_parameters_address1 <= "XXXXXXX";
        end if; 
    end process;


    wp_parameters_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            wp_parameters_ce0 <= ap_const_logic_1;
        else 
            wp_parameters_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    wp_parameters_ce1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            wp_parameters_ce1 <= ap_const_logic_1;
        else 
            wp_parameters_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    wp_parameters_d0_assign_proc : process(ap_CS_fsm_state2, topR_jR_V_3_load_reg_847, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state29, topL_jR_V_3_fu_80, phi_ln_fu_600_p6, phi_ln878_1_fu_675_p6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            wp_parameters_d0 <= phi_ln878_1_fu_675_p6;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            wp_parameters_d0 <= phi_ln_fu_600_p6;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            wp_parameters_d0 <= topR_jR_V_3_load_reg_847;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            wp_parameters_d0 <= topL_jR_V_3_fu_80;
        else 
            wp_parameters_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    wp_parameters_d1_assign_proc : process(ap_CS_fsm_state2, topR_jL_V_3_load_reg_842, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state29, topL_jL_V_3_1_fu_76, topL_jL_V_3_8_fu_568_p3, phi_ln886_1_fu_638_p6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            wp_parameters_d1 <= phi_ln886_1_fu_638_p6;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            wp_parameters_d1 <= topL_jL_V_3_8_fu_568_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            wp_parameters_d1 <= topR_jL_V_3_load_reg_842;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            wp_parameters_d1 <= topL_jL_V_3_1_fu_76;
        else 
            wp_parameters_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    wp_parameters_we0_assign_proc : process(ap_CS_fsm_state2, icmp_ln267_fu_398_p2, ap_CS_fsm_state30, icmp_ln288_fu_526_p2, ap_CS_fsm_state31, ap_CS_fsm_state29, icmp_ln878_10_fu_615_p2, icmp_ln878_11_fu_689_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln267_fu_398_p2 = ap_const_lv1_1)) or ((icmp_ln878_11_fu_689_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((icmp_ln878_10_fu_615_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state30) and (icmp_ln288_fu_526_p2 = ap_const_lv1_0)))) then 
            wp_parameters_we0 <= ap_const_logic_1;
        else 
            wp_parameters_we0 <= ap_const_logic_0;
        end if; 
    end process;


    wp_parameters_we1_assign_proc : process(ap_CS_fsm_state2, icmp_ln267_fu_398_p2, ap_CS_fsm_state30, icmp_ln288_fu_526_p2, ap_CS_fsm_state31, ap_CS_fsm_state29, icmp_ln886_fu_577_p2, icmp_ln886_8_fu_652_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln267_fu_398_p2 = ap_const_lv1_1)) or ((icmp_ln886_8_fu_652_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((icmp_ln886_fu_577_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state30) and (icmp_ln288_fu_526_p2 = ap_const_lv1_0)))) then 
            wp_parameters_we1 <= ap_const_logic_1;
        else 
            wp_parameters_we1 <= ap_const_logic_0;
        end if; 
    end process;


    wp_superpoints_address0_assign_proc : process(ap_CS_fsm_state2, wp_superpoints_addr_1_reg_857, zext_ln272_1_fu_382_p1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            wp_superpoints_address0 <= wp_superpoints_addr_1_reg_857;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            wp_superpoints_address0 <= zext_ln272_1_fu_382_p1(8 - 1 downto 0);
        else 
            wp_superpoints_address0 <= "XXXXXXXX";
        end if; 
    end process;


    wp_superpoints_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            wp_superpoints_ce0 <= ap_const_logic_1;
        else 
            wp_superpoints_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    z_j_max_V_fu_442_p1 <= wp_superpoints_q0(32 - 1 downto 0);
    z_j_min_V_fu_428_p1 <= wp_superpoints_q0(32 - 1 downto 0);
    zext_ln272_1_fu_382_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_374_p3),64));
    zext_ln272_fu_365_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_237),4));
    zext_ln273_fu_393_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln273_fu_387_p2),64));
    zext_ln275_fu_432_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln275_reg_865),3));
end behav;
