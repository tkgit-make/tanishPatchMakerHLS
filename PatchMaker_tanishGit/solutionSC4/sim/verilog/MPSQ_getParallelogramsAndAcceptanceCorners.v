// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MPSQ_getParallelogramsAndAcceptanceCorners (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_state8 = 11'd128;
parameter    ap_ST_fsm_state9 = 11'd256;
parameter    ap_ST_fsm_state10 = 11'd512;
parameter    ap_ST_fsm_state11 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] p_read;
input  [31:0] p_read1;
input  [31:0] p_read2;
input  [31:0] p_read3;
input  [31:0] p_read4;
input  [31:0] p_read5;
input  [31:0] p_read6;
input  [31:0] p_read7;
input  [31:0] p_read8;
input  [31:0] p_read9;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;
output  [31:0] ap_return_4;
output  [31:0] ap_return_5;
output  [31:0] ap_return_6;
output  [31:0] ap_return_7;
output  [31:0] ap_return_8;
output  [31:0] ap_return_9;
output  [31:0] ap_return_10;
output  [31:0] ap_return_11;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] ap_return_0;
reg[31:0] ap_return_1;
reg[31:0] ap_return_2;
reg[31:0] ap_return_3;
reg[31:0] ap_return_4;
reg[31:0] ap_return_5;
reg[31:0] ap_return_6;
reg[31:0] ap_return_7;
reg[31:0] ap_return_8;
reg[31:0] ap_return_9;
reg[31:0] ap_return_10;
reg[31:0] ap_return_11;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [25:0] trunc_ln43_fu_390_p1;
reg   [25:0] trunc_ln43_reg_1137;
wire   [25:0] trunc_ln44_fu_408_p1;
reg   [25:0] trunc_ln44_reg_1142;
wire   [0:0] icmp_ln886_fu_412_p2;
reg   [0:0] icmp_ln886_reg_1147;
wire    ap_CS_fsm_state2;
wire  signed [31:0] sext_ln78_fu_424_p1;
reg   [31:0] sext_ln78_reg_1197;
wire  signed [31:0] sext_ln77_fu_434_p1;
reg   [31:0] sext_ln77_reg_1204;
wire    ap_CS_fsm_state3;
wire   [2:0] add_ln66_fu_456_p2;
reg   [2:0] add_ln66_reg_1234;
wire   [0:0] icmp_ln61_fu_450_p2;
wire   [31:0] phi_ln_fu_462_p10;
reg   [31:0] phi_ln_reg_1243;
wire   [1:0] trunc_ln73_fu_476_p1;
reg   [1:0] trunc_ln73_reg_1249;
wire   [31:0] select_ln77_fu_605_p3;
wire    ap_CS_fsm_state10;
wire   [31:0] select_ln78_fu_612_p3;
wire   [2:0] add_ln92_fu_619_p2;
wire    ap_CS_fsm_state11;
wire   [31:0] a_corner_min_V_4_fu_703_p3;
wire   [0:0] icmp_ln92_fu_625_p2;
wire   [31:0] b_corner_min_V_7_fu_731_p3;
wire   [31:0] c_corner_max_V_4_fu_759_p3;
wire   [31:0] d_corner_max_V_7_fu_787_p3;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_322_ap_start;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_322_ap_done;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_322_ap_idle;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_322_ap_ready;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_322_ap_return;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_335_ap_start;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_335_ap_done;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_335_ap_idle;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_335_ap_ready;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_335_ap_return;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_348_ap_start;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_348_ap_done;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_348_ap_idle;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_348_ap_ready;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_348_ap_return;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_362_ap_start;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_362_ap_done;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_362_ap_idle;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_362_ap_ready;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_362_ap_return;
reg   [31:0] wp_parameters_V_1_0_0_write_assign_reg_226;
reg   [31:0] wp_parameters_V_1_1_0_write_assign_reg_238;
wire   [2:0] ap_phi_mux_i_phi_fu_254_p4;
reg   [2:0] i_reg_250;
reg   [31:0] phi_ln63_reg_261;
reg   [2:0] i_9_reg_275;
reg   [31:0] d_corner_max_V_1_reg_286;
reg   [31:0] c_corner_max_V_1_reg_295;
reg   [31:0] b_corner_min_V_1_reg_304;
reg   [31:0] a_corner_min_V_1_reg_313;
reg    grp_straightLineProjectorFromLayerIJtoK_fu_322_ap_start_reg;
reg   [10:0] ap_NS_fsm;
wire    ap_NS_fsm_state4;
wire    ap_CS_fsm_state4;
reg    grp_straightLineProjectorFromLayerIJtoK_fu_335_ap_start_reg;
reg    grp_straightLineProjectorFromLayerIJtoK_fu_348_ap_start_reg;
reg    grp_straightLineProjectorFromLayerIJtoK_fu_362_ap_start_reg;
reg   [31:0] a_corner_min_V_fu_70;
reg   [31:0] b_corner_min_V_fu_74;
reg   [31:0] c_corner_max_V_fu_78;
reg   [31:0] d_corner_max_V_fu_82;
reg   [31:0] parallelogramsList_V_0_3_fu_86;
reg   [31:0] parallelogramsList_V_1_3_fu_90;
reg   [31:0] parallelogramsList_V_2_3_fu_94;
reg   [31:0] parallelogramsList_V_3_3_fu_98;
reg   [31:0] parallelogramsList_V_0_3_1_fu_102;
reg   [31:0] parallelogramsList_V_0_3_2_fu_106;
reg   [31:0] parallelogramsList_V_0_3_3_fu_110;
reg   [31:0] parallelogramsList_V_0_3_4_fu_114;
reg   [31:0] parallelogramsList_V_1_3_1_fu_118;
reg   [31:0] parallelogramsList_V_1_3_2_fu_122;
reg   [31:0] parallelogramsList_V_1_3_3_fu_126;
reg   [31:0] parallelogramsList_V_1_3_4_fu_130;
reg   [31:0] parallelogramsList_V_2_3_1_fu_134;
reg   [31:0] parallelogramsList_V_2_3_2_fu_138;
reg   [31:0] parallelogramsList_V_2_3_3_fu_142;
reg   [31:0] parallelogramsList_V_2_3_4_fu_146;
reg   [31:0] parallelogramsList_V_3_3_1_fu_150;
reg   [31:0] parallelogramsList_V_3_3_2_fu_154;
reg   [31:0] parallelogramsList_V_3_3_3_fu_158;
reg   [31:0] parallelogramsList_V_3_3_4_fu_162;
wire   [0:0] icmp_ln878_fu_376_p2;
wire   [31:0] z1_min_V_fu_382_p3;
wire   [0:0] icmp_ln878_12_fu_394_p2;
wire   [31:0] z1_max_V_fu_400_p3;
wire   [25:0] parallelogramsList_V_5_0_fu_418_p3;
wire   [25:0] parallelogramsList_V_4_0_fu_428_p3;
wire   [0:0] icmp_ln77_fu_600_p2;
wire   [1:0] trunc_ln878_fu_679_p1;
wire   [31:0] tmp_fu_683_p6;
wire   [0:0] icmp_ln878_14_fu_697_p2;
wire   [31:0] b_corner_min_V_3_fu_711_p6;
wire   [0:0] icmp_ln878_15_fu_725_p2;
wire   [31:0] tmp_s_fu_739_p6;
wire   [0:0] icmp_ln886_9_fu_753_p2;
wire   [31:0] d_corner_max_V_3_fu_767_p6;
wire   [0:0] icmp_ln886_10_fu_781_p2;
wire   [0:0] icmp_ln874_1_fu_813_p2;
wire   [0:0] icmp_ln874_fu_807_p2;
wire   [0:0] and_ln128_fu_819_p2;
wire   [0:0] icmp_ln874_2_fu_829_p2;
wire   [0:0] icmp_ln874_3_fu_841_p2;
wire   [0:0] and_ln138_fu_847_p2;
wire   [0:0] and_ln133_fu_835_p2;
wire   [0:0] and_ln138_1_fu_857_p2;
wire   [0:0] icmp_ln886_11_fu_867_p2;
wire   [0:0] icmp_ln878_13_fu_889_p2;
wire   [31:0] select_ln145_fu_873_p3;
wire   [0:0] or_ln152_fu_911_p2;
wire   [31:0] select_ln145_1_fu_881_p3;
wire   [31:0] b_corner_min_V_6_fu_895_p3;
wire   [31:0] d_corner_max_V_6_fu_903_p3;
wire   [31:0] zext_ln138_fu_853_p1;
wire   [31:0] zext_ln874_fu_825_p1;
wire   [31:0] zext_ln886_fu_863_p1;
wire   [31:0] zext_ln152_fu_917_p1;
reg   [31:0] ap_return_0_preg;
reg   [31:0] ap_return_1_preg;
reg   [31:0] ap_return_2_preg;
reg   [31:0] ap_return_3_preg;
reg   [31:0] ap_return_4_preg;
reg   [31:0] ap_return_5_preg;
reg   [31:0] ap_return_6_preg;
reg   [31:0] ap_return_7_preg;
reg   [31:0] ap_return_8_preg;
reg   [31:0] ap_return_9_preg;
reg   [31:0] ap_return_10_preg;
reg   [31:0] ap_return_11_preg;
reg    ap_condition_976;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 grp_straightLineProjectorFromLayerIJtoK_fu_322_ap_start_reg = 1'b0;
#0 grp_straightLineProjectorFromLayerIJtoK_fu_335_ap_start_reg = 1'b0;
#0 grp_straightLineProjectorFromLayerIJtoK_fu_348_ap_start_reg = 1'b0;
#0 grp_straightLineProjectorFromLayerIJtoK_fu_362_ap_start_reg = 1'b0;
#0 ap_return_0_preg = 32'd0;
#0 ap_return_1_preg = 32'd0;
#0 ap_return_2_preg = 32'd0;
#0 ap_return_3_preg = 32'd0;
#0 ap_return_4_preg = 32'd0;
#0 ap_return_5_preg = 32'd0;
#0 ap_return_6_preg = 32'd0;
#0 ap_return_7_preg = 32'd0;
#0 ap_return_8_preg = 32'd0;
#0 ap_return_9_preg = 32'd0;
#0 ap_return_10_preg = 32'd0;
#0 ap_return_11_preg = 32'd0;
end

MPSQ_straightLineProjectorFromLayerIJtoK grp_straightLineProjectorFromLayerIJtoK_fu_322(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_straightLineProjectorFromLayerIJtoK_fu_322_ap_start),
    .ap_done(grp_straightLineProjectorFromLayerIJtoK_fu_322_ap_done),
    .ap_idle(grp_straightLineProjectorFromLayerIJtoK_fu_322_ap_idle),
    .ap_ready(grp_straightLineProjectorFromLayerIJtoK_fu_322_ap_ready),
    .ap_ce(1'b1),
    .z_i(sext_ln77_reg_1204),
    .z_j(phi_ln_reg_1243),
    .i(3'd1),
    .j(add_ln66_reg_1234),
    .k(3'd5),
    .ap_return(grp_straightLineProjectorFromLayerIJtoK_fu_322_ap_return)
);

MPSQ_straightLineProjectorFromLayerIJtoK grp_straightLineProjectorFromLayerIJtoK_fu_335(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_straightLineProjectorFromLayerIJtoK_fu_335_ap_start),
    .ap_done(grp_straightLineProjectorFromLayerIJtoK_fu_335_ap_done),
    .ap_idle(grp_straightLineProjectorFromLayerIJtoK_fu_335_ap_idle),
    .ap_ready(grp_straightLineProjectorFromLayerIJtoK_fu_335_ap_ready),
    .ap_ce(1'b1),
    .z_i(sext_ln78_reg_1197),
    .z_j(phi_ln_reg_1243),
    .i(3'd1),
    .j(add_ln66_reg_1234),
    .k(3'd5),
    .ap_return(grp_straightLineProjectorFromLayerIJtoK_fu_335_ap_return)
);

MPSQ_straightLineProjectorFromLayerIJtoK grp_straightLineProjectorFromLayerIJtoK_fu_348(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_straightLineProjectorFromLayerIJtoK_fu_348_ap_start),
    .ap_done(grp_straightLineProjectorFromLayerIJtoK_fu_348_ap_done),
    .ap_idle(grp_straightLineProjectorFromLayerIJtoK_fu_348_ap_idle),
    .ap_ready(grp_straightLineProjectorFromLayerIJtoK_fu_348_ap_ready),
    .ap_ce(1'b1),
    .z_i(sext_ln77_reg_1204),
    .z_j(phi_ln63_reg_261),
    .i(3'd1),
    .j(add_ln66_reg_1234),
    .k(3'd5),
    .ap_return(grp_straightLineProjectorFromLayerIJtoK_fu_348_ap_return)
);

MPSQ_straightLineProjectorFromLayerIJtoK grp_straightLineProjectorFromLayerIJtoK_fu_362(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_straightLineProjectorFromLayerIJtoK_fu_362_ap_start),
    .ap_done(grp_straightLineProjectorFromLayerIJtoK_fu_362_ap_done),
    .ap_idle(grp_straightLineProjectorFromLayerIJtoK_fu_362_ap_idle),
    .ap_ready(grp_straightLineProjectorFromLayerIJtoK_fu_362_ap_ready),
    .ap_ce(1'b1),
    .z_i(sext_ln78_reg_1197),
    .z_j(phi_ln63_reg_261),
    .i(3'd1),
    .j(add_ln66_reg_1234),
    .k(3'd5),
    .ap_return(grp_straightLineProjectorFromLayerIJtoK_fu_362_ap_return)
);

MPSQ_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U3776(
    .din0(p_read9),
    .din1(p_read3),
    .din2(p_read5),
    .din3(p_read7),
    .din4(p_read9),
    .din5(p_read9),
    .din6(p_read9),
    .din7(p_read9),
    .din8(i_reg_250),
    .dout(phi_ln_fu_462_p10)
);

MPSQ_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U3777(
    .din0(parallelogramsList_V_0_3_1_fu_102),
    .din1(parallelogramsList_V_0_3_2_fu_106),
    .din2(parallelogramsList_V_0_3_3_fu_110),
    .din3(parallelogramsList_V_0_3_4_fu_114),
    .din4(trunc_ln878_fu_679_p1),
    .dout(tmp_fu_683_p6)
);

MPSQ_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U3778(
    .din0(parallelogramsList_V_1_3_1_fu_118),
    .din1(parallelogramsList_V_1_3_2_fu_122),
    .din2(parallelogramsList_V_1_3_3_fu_126),
    .din3(parallelogramsList_V_1_3_4_fu_130),
    .din4(trunc_ln878_fu_679_p1),
    .dout(b_corner_min_V_3_fu_711_p6)
);

MPSQ_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U3779(
    .din0(parallelogramsList_V_2_3_1_fu_134),
    .din1(parallelogramsList_V_2_3_2_fu_138),
    .din2(parallelogramsList_V_2_3_3_fu_142),
    .din3(parallelogramsList_V_2_3_4_fu_146),
    .din4(trunc_ln878_fu_679_p1),
    .dout(tmp_s_fu_739_p6)
);

MPSQ_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U3780(
    .din0(parallelogramsList_V_3_3_1_fu_150),
    .din1(parallelogramsList_V_3_3_2_fu_154),
    .din2(parallelogramsList_V_3_3_3_fu_158),
    .din3(parallelogramsList_V_3_3_4_fu_162),
    .din4(trunc_ln878_fu_679_p1),
    .dout(d_corner_max_V_3_fu_767_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln92_fu_625_p2 == 1'd1))) begin
            ap_return_0_preg <= wp_parameters_V_1_0_0_write_assign_reg_226;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_10_preg[0] <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln92_fu_625_p2 == 1'd1))) begin
                        ap_return_10_preg[0] <= zext_ln886_fu_863_p1[0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_11_preg[0] <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln92_fu_625_p2 == 1'd1))) begin
                        ap_return_11_preg[0] <= zext_ln152_fu_917_p1[0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln92_fu_625_p2 == 1'd1))) begin
            ap_return_1_preg <= select_ln145_1_fu_881_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln92_fu_625_p2 == 1'd1))) begin
            ap_return_2_preg <= wp_parameters_V_1_1_0_write_assign_reg_238;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln92_fu_625_p2 == 1'd1))) begin
            ap_return_3_preg <= b_corner_min_V_6_fu_895_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln92_fu_625_p2 == 1'd1))) begin
            ap_return_4_preg <= wp_parameters_V_1_0_0_write_assign_reg_226;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln92_fu_625_p2 == 1'd1))) begin
            ap_return_5_preg <= select_ln145_fu_873_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln92_fu_625_p2 == 1'd1))) begin
            ap_return_6_preg <= wp_parameters_V_1_1_0_write_assign_reg_238;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_7_preg <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln92_fu_625_p2 == 1'd1))) begin
            ap_return_7_preg <= d_corner_max_V_6_fu_903_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_8_preg[0] <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln92_fu_625_p2 == 1'd1))) begin
                        ap_return_8_preg[0] <= zext_ln138_fu_853_p1[0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_9_preg[0] <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln92_fu_625_p2 == 1'd1))) begin
                        ap_return_9_preg[0] <= zext_ln874_fu_825_p1[0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_322_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) & (1'b1 == ap_NS_fsm_state4))) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_322_ap_start_reg <= 1'b1;
        end else if ((grp_straightLineProjectorFromLayerIJtoK_fu_322_ap_ready == 1'b1)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_322_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_335_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) & (1'b1 == ap_NS_fsm_state4))) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_335_ap_start_reg <= 1'b1;
        end else if ((grp_straightLineProjectorFromLayerIJtoK_fu_335_ap_ready == 1'b1)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_335_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_348_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) & (1'b1 == ap_NS_fsm_state4))) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_348_ap_start_reg <= 1'b1;
        end else if ((grp_straightLineProjectorFromLayerIJtoK_fu_348_ap_ready == 1'b1)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_348_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_362_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) & (1'b1 == ap_NS_fsm_state4))) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_362_ap_start_reg <= 1'b1;
        end else if ((grp_straightLineProjectorFromLayerIJtoK_fu_362_ap_ready == 1'b1)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_362_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln61_fu_450_p2 == 1'd1))) begin
        a_corner_min_V_1_reg_313 <= a_corner_min_V_fu_70;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln92_fu_625_p2 == 1'd0))) begin
        a_corner_min_V_1_reg_313 <= a_corner_min_V_4_fu_703_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln61_fu_450_p2 == 1'd1))) begin
        b_corner_min_V_1_reg_304 <= b_corner_min_V_fu_74;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln92_fu_625_p2 == 1'd0))) begin
        b_corner_min_V_1_reg_304 <= b_corner_min_V_7_fu_731_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln61_fu_450_p2 == 1'd1))) begin
        c_corner_max_V_1_reg_295 <= c_corner_max_V_fu_78;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln92_fu_625_p2 == 1'd0))) begin
        c_corner_max_V_1_reg_295 <= c_corner_max_V_4_fu_759_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln61_fu_450_p2 == 1'd1))) begin
        d_corner_max_V_1_reg_286 <= d_corner_max_V_fu_82;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln92_fu_625_p2 == 1'd0))) begin
        d_corner_max_V_1_reg_286 <= d_corner_max_V_7_fu_787_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln61_fu_450_p2 == 1'd1))) begin
        i_9_reg_275 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln92_fu_625_p2 == 1'd0))) begin
        i_9_reg_275 <= add_ln92_fu_619_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_reg_250 <= add_ln66_reg_1234;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_250 <= 3'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln61_fu_450_p2 == 1'd0))) begin
        if ((ap_phi_mux_i_phi_fu_254_p4 == 3'd1)) begin
            phi_ln63_reg_261 <= p_read2;
        end else if ((1'b1 == ap_condition_976)) begin
            phi_ln63_reg_261 <= p_read8;
        end else if ((ap_phi_mux_i_phi_fu_254_p4 == 3'd3)) begin
            phi_ln63_reg_261 <= p_read6;
        end else if ((ap_phi_mux_i_phi_fu_254_p4 == 3'd2)) begin
            phi_ln63_reg_261 <= p_read4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (trunc_ln73_reg_1249 == 2'd1))) begin
        a_corner_min_V_fu_70 <= grp_straightLineProjectorFromLayerIJtoK_fu_322_ap_return;
        b_corner_min_V_fu_74 <= grp_straightLineProjectorFromLayerIJtoK_fu_335_ap_return;
        c_corner_max_V_fu_78 <= grp_straightLineProjectorFromLayerIJtoK_fu_348_ap_return;
        d_corner_max_V_fu_82 <= grp_straightLineProjectorFromLayerIJtoK_fu_362_ap_return;
        parallelogramsList_V_0_3_1_fu_102 <= grp_straightLineProjectorFromLayerIJtoK_fu_322_ap_return;
        parallelogramsList_V_1_3_1_fu_118 <= grp_straightLineProjectorFromLayerIJtoK_fu_335_ap_return;
        parallelogramsList_V_2_3_1_fu_134 <= grp_straightLineProjectorFromLayerIJtoK_fu_348_ap_return;
        parallelogramsList_V_3_3_1_fu_150 <= grp_straightLineProjectorFromLayerIJtoK_fu_362_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln61_fu_450_p2 == 1'd0))) begin
        add_ln66_reg_1234 <= add_ln66_fu_456_p2;
        phi_ln_reg_1243 <= phi_ln_fu_462_p10;
        trunc_ln73_reg_1249 <= trunc_ln73_fu_476_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        icmp_ln886_reg_1147 <= icmp_ln886_fu_412_p2;
        trunc_ln43_reg_1137 <= trunc_ln43_fu_390_p1;
        trunc_ln44_reg_1142 <= trunc_ln44_fu_408_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (trunc_ln73_reg_1249 == 2'd2))) begin
        parallelogramsList_V_0_3_2_fu_106 <= grp_straightLineProjectorFromLayerIJtoK_fu_322_ap_return;
        parallelogramsList_V_1_3_2_fu_122 <= grp_straightLineProjectorFromLayerIJtoK_fu_335_ap_return;
        parallelogramsList_V_2_3_2_fu_138 <= grp_straightLineProjectorFromLayerIJtoK_fu_348_ap_return;
        parallelogramsList_V_3_3_2_fu_154 <= grp_straightLineProjectorFromLayerIJtoK_fu_362_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (trunc_ln73_reg_1249 == 2'd3))) begin
        parallelogramsList_V_0_3_3_fu_110 <= grp_straightLineProjectorFromLayerIJtoK_fu_322_ap_return;
        parallelogramsList_V_1_3_3_fu_126 <= grp_straightLineProjectorFromLayerIJtoK_fu_335_ap_return;
        parallelogramsList_V_2_3_3_fu_142 <= grp_straightLineProjectorFromLayerIJtoK_fu_348_ap_return;
        parallelogramsList_V_3_3_3_fu_158 <= grp_straightLineProjectorFromLayerIJtoK_fu_362_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (trunc_ln73_reg_1249 == 2'd0))) begin
        parallelogramsList_V_0_3_4_fu_114 <= grp_straightLineProjectorFromLayerIJtoK_fu_322_ap_return;
        parallelogramsList_V_0_3_fu_86 <= grp_straightLineProjectorFromLayerIJtoK_fu_322_ap_return;
        parallelogramsList_V_1_3_4_fu_130 <= grp_straightLineProjectorFromLayerIJtoK_fu_335_ap_return;
        parallelogramsList_V_1_3_fu_90 <= grp_straightLineProjectorFromLayerIJtoK_fu_335_ap_return;
        parallelogramsList_V_2_3_4_fu_146 <= grp_straightLineProjectorFromLayerIJtoK_fu_348_ap_return;
        parallelogramsList_V_2_3_fu_94 <= grp_straightLineProjectorFromLayerIJtoK_fu_348_ap_return;
        parallelogramsList_V_3_3_4_fu_162 <= grp_straightLineProjectorFromLayerIJtoK_fu_362_ap_return;
        parallelogramsList_V_3_3_fu_98 <= grp_straightLineProjectorFromLayerIJtoK_fu_362_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sext_ln77_reg_1204 <= sext_ln77_fu_434_p1;
        sext_ln78_reg_1197 <= sext_ln78_fu_424_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        wp_parameters_V_1_0_0_write_assign_reg_226 <= select_ln77_fu_605_p3;
        wp_parameters_V_1_1_0_write_assign_reg_238 <= select_ln78_fu_612_p3;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln92_fu_625_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln92_fu_625_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln92_fu_625_p2 == 1'd1))) begin
        ap_return_0 = wp_parameters_V_1_0_0_write_assign_reg_226;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln92_fu_625_p2 == 1'd1))) begin
        ap_return_1 = select_ln145_1_fu_881_p3;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln92_fu_625_p2 == 1'd1))) begin
        ap_return_10 = zext_ln886_fu_863_p1;
    end else begin
        ap_return_10 = ap_return_10_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln92_fu_625_p2 == 1'd1))) begin
        ap_return_11 = zext_ln152_fu_917_p1;
    end else begin
        ap_return_11 = ap_return_11_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln92_fu_625_p2 == 1'd1))) begin
        ap_return_2 = wp_parameters_V_1_1_0_write_assign_reg_238;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln92_fu_625_p2 == 1'd1))) begin
        ap_return_3 = b_corner_min_V_6_fu_895_p3;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln92_fu_625_p2 == 1'd1))) begin
        ap_return_4 = wp_parameters_V_1_0_0_write_assign_reg_226;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln92_fu_625_p2 == 1'd1))) begin
        ap_return_5 = select_ln145_fu_873_p3;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln92_fu_625_p2 == 1'd1))) begin
        ap_return_6 = wp_parameters_V_1_1_0_write_assign_reg_238;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln92_fu_625_p2 == 1'd1))) begin
        ap_return_7 = d_corner_max_V_6_fu_903_p3;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln92_fu_625_p2 == 1'd1))) begin
        ap_return_8 = zext_ln138_fu_853_p1;
    end else begin
        ap_return_8 = ap_return_8_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln92_fu_625_p2 == 1'd1))) begin
        ap_return_9 = zext_ln874_fu_825_p1;
    end else begin
        ap_return_9 = ap_return_9_preg;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln61_fu_450_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln92_fu_625_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_corner_min_V_4_fu_703_p3 = ((icmp_ln878_14_fu_697_p2[0:0] == 1'b1) ? tmp_fu_683_p6 : a_corner_min_V_1_reg_313);

assign add_ln66_fu_456_p2 = (i_reg_250 + 3'd1);

assign add_ln92_fu_619_p2 = (i_9_reg_275 + 3'd1);

assign and_ln128_fu_819_p2 = (icmp_ln874_fu_807_p2 & icmp_ln874_1_fu_813_p2);

assign and_ln133_fu_835_p2 = (icmp_ln874_2_fu_829_p2 & and_ln128_fu_819_p2);

assign and_ln138_1_fu_857_p2 = (icmp_ln874_3_fu_841_p2 & and_ln133_fu_835_p2);

assign and_ln138_fu_847_p2 = (icmp_ln874_3_fu_841_p2 & icmp_ln874_2_fu_829_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_NS_fsm_state4 = ap_NS_fsm[32'd3];

always @ (*) begin
    ap_condition_976 = (~(ap_phi_mux_i_phi_fu_254_p4 == 3'd1) & ~(ap_phi_mux_i_phi_fu_254_p4 == 3'd3) & ~(ap_phi_mux_i_phi_fu_254_p4 == 3'd2));
end

assign ap_phi_mux_i_phi_fu_254_p4 = i_reg_250;

assign b_corner_min_V_6_fu_895_p3 = ((icmp_ln878_13_fu_889_p2[0:0] == 1'b1) ? select_ln145_fu_873_p3 : b_corner_min_V_1_reg_304);

assign b_corner_min_V_7_fu_731_p3 = ((icmp_ln878_15_fu_725_p2[0:0] == 1'b1) ? b_corner_min_V_3_fu_711_p6 : b_corner_min_V_1_reg_304);

assign c_corner_max_V_4_fu_759_p3 = ((icmp_ln886_9_fu_753_p2[0:0] == 1'b1) ? tmp_s_fu_739_p6 : c_corner_max_V_1_reg_295);

assign d_corner_max_V_6_fu_903_p3 = ((icmp_ln878_13_fu_889_p2[0:0] == 1'b1) ? select_ln145_fu_873_p3 : d_corner_max_V_1_reg_286);

assign d_corner_max_V_7_fu_787_p3 = ((icmp_ln886_10_fu_781_p2[0:0] == 1'b1) ? d_corner_max_V_3_fu_767_p6 : d_corner_max_V_1_reg_286);

assign grp_straightLineProjectorFromLayerIJtoK_fu_322_ap_start = grp_straightLineProjectorFromLayerIJtoK_fu_322_ap_start_reg;

assign grp_straightLineProjectorFromLayerIJtoK_fu_335_ap_start = grp_straightLineProjectorFromLayerIJtoK_fu_335_ap_start_reg;

assign grp_straightLineProjectorFromLayerIJtoK_fu_348_ap_start = grp_straightLineProjectorFromLayerIJtoK_fu_348_ap_start_reg;

assign grp_straightLineProjectorFromLayerIJtoK_fu_362_ap_start = grp_straightLineProjectorFromLayerIJtoK_fu_362_ap_start_reg;

assign icmp_ln61_fu_450_p2 = ((i_reg_250 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln77_fu_600_p2 = ((trunc_ln73_reg_1249 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln874_1_fu_813_p2 = ((b_corner_min_V_1_reg_304 == parallelogramsList_V_1_3_fu_90) ? 1'b1 : 1'b0);

assign icmp_ln874_2_fu_829_p2 = ((c_corner_max_V_1_reg_295 == parallelogramsList_V_2_3_fu_94) ? 1'b1 : 1'b0);

assign icmp_ln874_3_fu_841_p2 = ((d_corner_max_V_1_reg_286 == parallelogramsList_V_3_3_fu_98) ? 1'b1 : 1'b0);

assign icmp_ln874_fu_807_p2 = ((a_corner_min_V_1_reg_313 == parallelogramsList_V_0_3_fu_86) ? 1'b1 : 1'b0);

assign icmp_ln878_12_fu_394_p2 = (($signed(p_read1) < $signed(32'd22000100)) ? 1'b1 : 1'b0);

assign icmp_ln878_13_fu_889_p2 = (($signed(b_corner_min_V_1_reg_304) < $signed(d_corner_max_V_1_reg_286)) ? 1'b1 : 1'b0);

assign icmp_ln878_14_fu_697_p2 = (($signed(tmp_fu_683_p6) < $signed(a_corner_min_V_1_reg_313)) ? 1'b1 : 1'b0);

assign icmp_ln878_15_fu_725_p2 = (($signed(b_corner_min_V_3_fu_711_p6) < $signed(b_corner_min_V_1_reg_304)) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_376_p2 = (($signed(p_read) < $signed(32'd4272967196)) ? 1'b1 : 1'b0);

assign icmp_ln886_10_fu_781_p2 = (($signed(d_corner_max_V_3_fu_767_p6) > $signed(d_corner_max_V_1_reg_286)) ? 1'b1 : 1'b0);

assign icmp_ln886_11_fu_867_p2 = (($signed(c_corner_max_V_1_reg_295) > $signed(a_corner_min_V_1_reg_313)) ? 1'b1 : 1'b0);

assign icmp_ln886_9_fu_753_p2 = (($signed(tmp_s_fu_739_p6) > $signed(c_corner_max_V_1_reg_295)) ? 1'b1 : 1'b0);

assign icmp_ln886_fu_412_p2 = (($signed(z1_min_V_fu_382_p3) > $signed(z1_max_V_fu_400_p3)) ? 1'b1 : 1'b0);

assign icmp_ln92_fu_625_p2 = ((i_9_reg_275 == 3'd4) ? 1'b1 : 1'b0);

assign or_ln152_fu_911_p2 = (icmp_ln886_11_fu_867_p2 | icmp_ln878_13_fu_889_p2);

assign parallelogramsList_V_4_0_fu_428_p3 = ((icmp_ln886_reg_1147[0:0] == 1'b1) ? 26'd23000100 : trunc_ln43_reg_1137);

assign parallelogramsList_V_5_0_fu_418_p3 = ((icmp_ln886_reg_1147[0:0] == 1'b1) ? 26'd23000100 : trunc_ln44_reg_1142);

assign select_ln145_1_fu_881_p3 = ((icmp_ln886_11_fu_867_p2[0:0] == 1'b1) ? b_corner_min_V_1_reg_304 : a_corner_min_V_1_reg_313);

assign select_ln145_fu_873_p3 = ((icmp_ln886_11_fu_867_p2[0:0] == 1'b1) ? b_corner_min_V_1_reg_304 : c_corner_max_V_1_reg_295);

assign select_ln77_fu_605_p3 = ((icmp_ln77_fu_600_p2[0:0] == 1'b1) ? sext_ln77_reg_1204 : wp_parameters_V_1_0_0_write_assign_reg_226);

assign select_ln78_fu_612_p3 = ((icmp_ln77_fu_600_p2[0:0] == 1'b1) ? sext_ln78_reg_1197 : wp_parameters_V_1_1_0_write_assign_reg_238);

assign sext_ln77_fu_434_p1 = $signed(parallelogramsList_V_4_0_fu_428_p3);

assign sext_ln78_fu_424_p1 = $signed(parallelogramsList_V_5_0_fu_418_p3);

assign trunc_ln43_fu_390_p1 = z1_min_V_fu_382_p3[25:0];

assign trunc_ln44_fu_408_p1 = z1_max_V_fu_400_p3[25:0];

assign trunc_ln73_fu_476_p1 = i_reg_250[1:0];

assign trunc_ln878_fu_679_p1 = i_9_reg_275[1:0];

assign z1_max_V_fu_400_p3 = ((icmp_ln878_12_fu_394_p2[0:0] == 1'b1) ? p_read1 : 32'd22000100);

assign z1_min_V_fu_382_p3 = ((icmp_ln878_fu_376_p2[0:0] == 1'b1) ? 32'd4272967196 : p_read);

assign zext_ln138_fu_853_p1 = and_ln138_fu_847_p2;

assign zext_ln152_fu_917_p1 = or_ln152_fu_911_p2;

assign zext_ln874_fu_825_p1 = and_ln128_fu_819_p2;

assign zext_ln886_fu_863_p1 = and_ln138_1_fu_857_p2;

always @ (posedge ap_clk) begin
    ap_return_8_preg[31:1] <= 31'b0000000000000000000000000000000;
    ap_return_9_preg[31:1] <= 31'b0000000000000000000000000000000;
    ap_return_10_preg[31:1] <= 31'b0000000000000000000000000000000;
    ap_return_11_preg[31:1] <= 31'b0000000000000000000000000000000;
end

endmodule //MPSQ_getParallelogramsAndAcceptanceCorners
