// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MPSQ_delete_patch_patches_parameters (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        index,
        patches_parameters_address0,
        patches_parameters_ce0,
        patches_parameters_we0,
        patches_parameters_d0,
        patches_parameters_address1,
        patches_parameters_ce1,
        patches_parameters_q1
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_pp0_stage0 = 6'd4;
parameter    ap_ST_fsm_state6 = 6'd8;
parameter    ap_ST_fsm_pp1_stage0 = 6'd16;
parameter    ap_ST_fsm_state9 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [1:0] index;
output  [6:0] patches_parameters_address0;
output   patches_parameters_ce0;
output   patches_parameters_we0;
output  [31:0] patches_parameters_d0;
output  [6:0] patches_parameters_address1;
output   patches_parameters_ce1;
input  [31:0] patches_parameters_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[6:0] patches_parameters_address0;
reg patches_parameters_ce0;
reg patches_parameters_we0;
reg[31:0] patches_parameters_d0;
reg patches_parameters_ce1;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [4:0] indvar_flatten13_reg_120;
reg   [1:0] a_reg_131;
reg   [4:0] indvar_flatten_reg_142;
reg   [2:0] b_reg_153;
reg   [1:0] c_reg_164;
reg   [4:0] indvar_flatten35_reg_175;
reg   [1:0] a_2_reg_186;
reg   [4:0] indvar_flatten21_reg_197;
reg   [2:0] b_4_reg_208;
reg   [1:0] c_4_reg_219;
wire   [0:0] tmp_22_fu_230_p3;
wire    ap_CS_fsm_state2;
wire   [1:0] i_11_fu_238_p2;
reg   [1:0] i_11_reg_647;
wire  signed [5:0] sub_ln510_cast_fu_266_p1;
reg  signed [5:0] sub_ln510_cast_reg_652;
wire  signed [5:0] sext_ln493_fu_292_p1;
reg  signed [5:0] sext_ln493_reg_657;
wire   [4:0] add_ln493_1_fu_296_p2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln493_fu_302_p2;
reg   [0:0] icmp_ln493_reg_667;
reg   [0:0] icmp_ln493_reg_667_pp0_iter1_reg;
wire   [1:0] select_ln493_1_fu_328_p3;
reg   [1:0] select_ln493_1_reg_671;
wire   [5:0] add_ln510_fu_340_p2;
reg   [5:0] add_ln510_reg_676;
wire   [5:0] add_ln510_1_fu_345_p2;
reg   [5:0] add_ln510_1_reg_681;
wire   [1:0] select_ln499_fu_380_p3;
reg   [1:0] select_ln499_reg_686;
wire   [2:0] select_ln499_1_fu_388_p3;
reg   [2:0] select_ln499_1_reg_691;
wire   [1:0] add_ln505_fu_396_p2;
wire   [4:0] select_ln499_2_fu_408_p3;
wire   [6:0] add_ln510_5_fu_474_p2;
reg   [6:0] add_ln510_5_reg_713;
wire   [4:0] add_ln517_1_fu_484_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state7_pp1_stage0_iter0;
wire    ap_block_state8_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln517_fu_490_p2;
reg   [0:0] icmp_ln517_reg_723;
wire   [1:0] select_ln517_1_fu_516_p3;
reg   [1:0] select_ln517_1_reg_727;
wire   [1:0] select_ln523_fu_554_p3;
reg   [1:0] select_ln523_reg_733;
wire   [2:0] select_ln523_1_fu_562_p3;
reg   [2:0] select_ln523_1_reg_738;
wire   [1:0] add_ln529_fu_570_p2;
wire   [4:0] select_ln523_2_fu_582_p3;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state7;
reg    ap_enable_reg_pp1_iter1;
reg   [1:0] i_reg_111;
wire    ap_CS_fsm_state6;
reg   [1:0] ap_phi_mux_a_phi_fu_135_p4;
wire    ap_block_pp0_stage0;
reg   [2:0] ap_phi_mux_b_phi_fu_157_p4;
reg   [1:0] ap_phi_mux_a_2_phi_fu_190_p4;
wire    ap_block_pp1_stage0;
reg   [2:0] ap_phi_mux_b_4_phi_fu_212_p4;
wire   [63:0] zext_ln510_8_fu_469_p1;
wire   [63:0] zext_ln510_9_fu_480_p1;
wire   [63:0] zext_ln534_3_fu_633_p1;
wire   [3:0] tmp_fu_248_p3;
wire   [4:0] zext_ln510_1_fu_256_p1;
wire   [4:0] zext_ln510_fu_244_p1;
wire   [4:0] sub_ln510_fu_260_p2;
wire   [3:0] tmp_s_fu_274_p3;
wire   [4:0] zext_ln510_3_fu_282_p1;
wire   [4:0] zext_ln510_2_fu_270_p1;
wire   [4:0] sub_ln510_1_fu_286_p2;
wire   [0:0] icmp_ln499_fu_314_p2;
wire   [1:0] add_ln493_fu_308_p2;
wire   [5:0] zext_ln510_4_fu_336_p1;
wire   [0:0] icmp_ln505_fu_356_p2;
wire   [0:0] xor_ln493_fu_350_p2;
wire   [2:0] select_ln493_fu_320_p3;
wire   [0:0] and_ln493_fu_362_p2;
wire   [0:0] or_ln499_fu_374_p2;
wire   [2:0] add_ln499_fu_368_p2;
wire   [4:0] add_ln499_1_fu_402_p2;
wire   [5:0] shl_ln510_fu_416_p2;
wire   [5:0] zext_ln510_5_fu_421_p1;
wire   [5:0] add_ln510_2_fu_424_p2;
wire   [5:0] shl_ln510_1_fu_438_p2;
wire   [5:0] zext_ln510_6_fu_443_p1;
wire   [5:0] add_ln510_3_fu_446_p2;
wire   [6:0] tmp_42_cast_fu_430_p3;
wire   [6:0] zext_ln510_7_fu_460_p1;
wire   [6:0] add_ln510_4_fu_463_p2;
wire   [6:0] tmp_44_cast_fu_452_p3;
wire   [0:0] icmp_ln523_fu_502_p2;
wire   [1:0] add_ln517_fu_496_p2;
wire   [0:0] icmp_ln529_fu_530_p2;
wire   [0:0] xor_ln517_fu_524_p2;
wire   [2:0] select_ln517_fu_508_p3;
wire   [0:0] and_ln517_fu_536_p2;
wire   [0:0] or_ln523_fu_548_p2;
wire   [2:0] add_ln523_fu_542_p2;
wire   [4:0] add_ln523_1_fu_576_p2;
wire   [3:0] tmp_4_fu_590_p3;
wire   [5:0] zext_ln534_fu_597_p1;
wire   [5:0] add_ln534_fu_601_p2;
wire   [5:0] zext_ln534_1_fu_607_p1;
wire   [5:0] add_ln534_1_fu_610_p2;
wire   [6:0] tmp_47_cast_fu_616_p3;
wire   [6:0] zext_ln534_2_fu_624_p1;
wire   [6:0] add_ln534_2_fu_627_p2;
wire    ap_CS_fsm_state9;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((tmp_22_fu_230_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((tmp_22_fu_230_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state7) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((tmp_22_fu_230_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state7))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state7);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((tmp_22_fu_230_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_22_fu_230_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        a_2_reg_186 <= 2'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln517_reg_723 == 1'd0))) begin
        a_2_reg_186 <= select_ln517_1_reg_727;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln493_reg_667 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_reg_131 <= select_ln493_1_reg_671;
    end else if (((tmp_22_fu_230_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        a_reg_131 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_22_fu_230_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        b_4_reg_208 <= 3'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln517_reg_723 == 1'd0))) begin
        b_4_reg_208 <= select_ln523_1_reg_738;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln493_reg_667 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_reg_153 <= select_ln499_1_reg_691;
    end else if (((tmp_22_fu_230_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        b_reg_153 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_22_fu_230_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        c_4_reg_219 <= 2'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln517_fu_490_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        c_4_reg_219 <= add_ln529_fu_570_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln493_fu_302_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_reg_164 <= add_ln505_fu_396_p2;
    end else if (((tmp_22_fu_230_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        c_reg_164 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i_reg_111 <= i_11_reg_647;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_111 <= index;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln493_fu_302_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten13_reg_120 <= add_ln493_1_fu_296_p2;
    end else if (((tmp_22_fu_230_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten13_reg_120 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_22_fu_230_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten21_reg_197 <= 5'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln517_fu_490_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        indvar_flatten21_reg_197 <= select_ln523_2_fu_582_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_22_fu_230_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten35_reg_175 <= 5'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln517_fu_490_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        indvar_flatten35_reg_175 <= add_ln517_1_fu_484_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln493_fu_302_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_142 <= select_ln499_2_fu_408_p3;
    end else if (((tmp_22_fu_230_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_reg_142 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln493_fu_302_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln510_1_reg_681 <= add_ln510_1_fu_345_p2;
        add_ln510_reg_676 <= add_ln510_fu_340_p2;
        select_ln499_reg_686 <= select_ln499_fu_380_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln493_reg_667 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln510_5_reg_713 <= add_ln510_5_fu_474_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_22_fu_230_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_11_reg_647 <= i_11_fu_238_p2;
        sext_ln493_reg_657 <= sext_ln493_fu_292_p1;
        sub_ln510_cast_reg_652 <= sub_ln510_cast_fu_266_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln493_reg_667 <= icmp_ln493_fu_302_p2;
        icmp_ln493_reg_667_pp0_iter1_reg <= icmp_ln493_reg_667;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln517_reg_723 <= icmp_ln517_fu_490_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln493_fu_302_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln493_1_reg_671 <= select_ln493_1_fu_328_p3;
        select_ln499_1_reg_691 <= select_ln499_1_fu_388_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln517_fu_490_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        select_ln517_1_reg_727 <= select_ln517_1_fu_516_p3;
        select_ln523_1_reg_738 <= select_ln523_1_fu_562_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln517_fu_490_p2 == 1'd0))) begin
        select_ln523_reg_733 <= select_ln523_fu_554_p3;
    end
end

always @ (*) begin
    if ((icmp_ln493_fu_302_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln517_fu_490_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state7 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln517_reg_723 == 1'd0))) begin
        ap_phi_mux_a_2_phi_fu_190_p4 = select_ln517_1_reg_727;
    end else begin
        ap_phi_mux_a_2_phi_fu_190_p4 = a_2_reg_186;
    end
end

always @ (*) begin
    if (((icmp_ln493_reg_667 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_a_phi_fu_135_p4 = select_ln493_1_reg_671;
    end else begin
        ap_phi_mux_a_phi_fu_135_p4 = a_reg_131;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln517_reg_723 == 1'd0))) begin
        ap_phi_mux_b_4_phi_fu_212_p4 = select_ln523_1_reg_738;
    end else begin
        ap_phi_mux_b_4_phi_fu_212_p4 = b_4_reg_208;
    end
end

always @ (*) begin
    if (((icmp_ln493_reg_667 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_b_phi_fu_157_p4 = select_ln499_1_reg_691;
    end else begin
        ap_phi_mux_b_phi_fu_157_p4 = b_reg_153;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        patches_parameters_address0 = zext_ln534_3_fu_633_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        patches_parameters_address0 = zext_ln510_9_fu_480_p1;
    end else begin
        patches_parameters_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        patches_parameters_ce0 = 1'b1;
    end else begin
        patches_parameters_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        patches_parameters_ce1 = 1'b1;
    end else begin
        patches_parameters_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        patches_parameters_d0 = 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        patches_parameters_d0 = patches_parameters_q1;
    end else begin
        patches_parameters_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln493_reg_667_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln517_reg_723 == 1'd0)))) begin
        patches_parameters_we0 = 1'b1;
    end else begin
        patches_parameters_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_22_fu_230_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln493_fu_302_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((icmp_ln493_fu_302_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln517_fu_490_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln517_fu_490_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln493_1_fu_296_p2 = (indvar_flatten13_reg_120 + 5'd1);

assign add_ln493_fu_308_p2 = (ap_phi_mux_a_phi_fu_135_p4 + 2'd1);

assign add_ln499_1_fu_402_p2 = (indvar_flatten_reg_142 + 5'd1);

assign add_ln499_fu_368_p2 = (select_ln493_fu_320_p3 + 3'd1);

assign add_ln505_fu_396_p2 = (select_ln499_fu_380_p3 + 2'd1);

assign add_ln510_1_fu_345_p2 = ($signed(sext_ln493_reg_657) + $signed(zext_ln510_4_fu_336_p1));

assign add_ln510_2_fu_424_p2 = (shl_ln510_fu_416_p2 + zext_ln510_5_fu_421_p1);

assign add_ln510_3_fu_446_p2 = (shl_ln510_1_fu_438_p2 + zext_ln510_6_fu_443_p1);

assign add_ln510_4_fu_463_p2 = (tmp_42_cast_fu_430_p3 + zext_ln510_7_fu_460_p1);

assign add_ln510_5_fu_474_p2 = (tmp_44_cast_fu_452_p3 + zext_ln510_7_fu_460_p1);

assign add_ln510_fu_340_p2 = ($signed(sub_ln510_cast_reg_652) + $signed(zext_ln510_4_fu_336_p1));

assign add_ln517_1_fu_484_p2 = (indvar_flatten35_reg_175 + 5'd1);

assign add_ln517_fu_496_p2 = (ap_phi_mux_a_2_phi_fu_190_p4 + 2'd1);

assign add_ln523_1_fu_576_p2 = (indvar_flatten21_reg_197 + 5'd1);

assign add_ln523_fu_542_p2 = (select_ln517_fu_508_p3 + 3'd1);

assign add_ln529_fu_570_p2 = (select_ln523_fu_554_p3 + 2'd1);

assign add_ln534_1_fu_610_p2 = (add_ln534_fu_601_p2 + zext_ln534_1_fu_607_p1);

assign add_ln534_2_fu_627_p2 = (tmp_47_cast_fu_616_p3 + zext_ln534_2_fu_624_p1);

assign add_ln534_fu_601_p2 = (zext_ln534_fu_597_p1 + 6'd24);

assign and_ln493_fu_362_p2 = (xor_ln493_fu_350_p2 & icmp_ln505_fu_356_p2);

assign and_ln517_fu_536_p2 = (xor_ln517_fu_524_p2 & icmp_ln529_fu_530_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign i_11_fu_238_p2 = (i_reg_111 + 2'd1);

assign icmp_ln493_fu_302_p2 = ((indvar_flatten13_reg_120 == 5'd24) ? 1'b1 : 1'b0);

assign icmp_ln499_fu_314_p2 = ((indvar_flatten_reg_142 == 5'd8) ? 1'b1 : 1'b0);

assign icmp_ln505_fu_356_p2 = ((c_reg_164 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln517_fu_490_p2 = ((indvar_flatten35_reg_175 == 5'd24) ? 1'b1 : 1'b0);

assign icmp_ln523_fu_502_p2 = ((indvar_flatten21_reg_197 == 5'd8) ? 1'b1 : 1'b0);

assign icmp_ln529_fu_530_p2 = ((c_4_reg_219 == 2'd2) ? 1'b1 : 1'b0);

assign or_ln499_fu_374_p2 = (icmp_ln499_fu_314_p2 | and_ln493_fu_362_p2);

assign or_ln523_fu_548_p2 = (icmp_ln523_fu_502_p2 | and_ln517_fu_536_p2);

assign patches_parameters_address1 = zext_ln510_8_fu_469_p1;

assign select_ln493_1_fu_328_p3 = ((icmp_ln499_fu_314_p2[0:0] == 1'b1) ? add_ln493_fu_308_p2 : ap_phi_mux_a_phi_fu_135_p4);

assign select_ln493_fu_320_p3 = ((icmp_ln499_fu_314_p2[0:0] == 1'b1) ? 3'd0 : ap_phi_mux_b_phi_fu_157_p4);

assign select_ln499_1_fu_388_p3 = ((and_ln493_fu_362_p2[0:0] == 1'b1) ? add_ln499_fu_368_p2 : select_ln493_fu_320_p3);

assign select_ln499_2_fu_408_p3 = ((icmp_ln499_fu_314_p2[0:0] == 1'b1) ? 5'd1 : add_ln499_1_fu_402_p2);

assign select_ln499_fu_380_p3 = ((or_ln499_fu_374_p2[0:0] == 1'b1) ? 2'd0 : c_reg_164);

assign select_ln517_1_fu_516_p3 = ((icmp_ln523_fu_502_p2[0:0] == 1'b1) ? add_ln517_fu_496_p2 : ap_phi_mux_a_2_phi_fu_190_p4);

assign select_ln517_fu_508_p3 = ((icmp_ln523_fu_502_p2[0:0] == 1'b1) ? 3'd0 : ap_phi_mux_b_4_phi_fu_212_p4);

assign select_ln523_1_fu_562_p3 = ((and_ln517_fu_536_p2[0:0] == 1'b1) ? add_ln523_fu_542_p2 : select_ln517_fu_508_p3);

assign select_ln523_2_fu_582_p3 = ((icmp_ln523_fu_502_p2[0:0] == 1'b1) ? 5'd1 : add_ln523_1_fu_576_p2);

assign select_ln523_fu_554_p3 = ((or_ln523_fu_548_p2[0:0] == 1'b1) ? 2'd0 : c_4_reg_219);

assign sext_ln493_fu_292_p1 = $signed(sub_ln510_1_fu_286_p2);

assign shl_ln510_1_fu_438_p2 = add_ln510_1_reg_681 << 6'd2;

assign shl_ln510_fu_416_p2 = add_ln510_reg_676 << 6'd2;

assign sub_ln510_1_fu_286_p2 = (zext_ln510_3_fu_282_p1 - zext_ln510_2_fu_270_p1);

assign sub_ln510_cast_fu_266_p1 = $signed(sub_ln510_fu_260_p2);

assign sub_ln510_fu_260_p2 = (zext_ln510_1_fu_256_p1 - zext_ln510_fu_244_p1);

assign tmp_22_fu_230_p3 = i_reg_111[32'd1];

assign tmp_42_cast_fu_430_p3 = {{add_ln510_2_fu_424_p2}, {1'd0}};

assign tmp_44_cast_fu_452_p3 = {{add_ln510_3_fu_446_p2}, {1'd0}};

assign tmp_47_cast_fu_616_p3 = {{add_ln534_1_fu_610_p2}, {1'd0}};

assign tmp_4_fu_590_p3 = {{select_ln517_1_reg_727}, {2'd0}};

assign tmp_fu_248_p3 = {{i_11_fu_238_p2}, {2'd0}};

assign tmp_s_fu_274_p3 = {{i_reg_111}, {2'd0}};

assign xor_ln493_fu_350_p2 = (icmp_ln499_fu_314_p2 ^ 1'd1);

assign xor_ln517_fu_524_p2 = (icmp_ln523_fu_502_p2 ^ 1'd1);

assign zext_ln510_1_fu_256_p1 = tmp_fu_248_p3;

assign zext_ln510_2_fu_270_p1 = i_reg_111;

assign zext_ln510_3_fu_282_p1 = tmp_s_fu_274_p3;

assign zext_ln510_4_fu_336_p1 = select_ln493_1_fu_328_p3;

assign zext_ln510_5_fu_421_p1 = select_ln499_1_reg_691;

assign zext_ln510_6_fu_443_p1 = select_ln499_1_reg_691;

assign zext_ln510_7_fu_460_p1 = select_ln499_reg_686;

assign zext_ln510_8_fu_469_p1 = add_ln510_4_fu_463_p2;

assign zext_ln510_9_fu_480_p1 = add_ln510_5_reg_713;

assign zext_ln510_fu_244_p1 = i_11_fu_238_p2;

assign zext_ln534_1_fu_607_p1 = select_ln523_1_reg_738;

assign zext_ln534_2_fu_624_p1 = select_ln523_reg_733;

assign zext_ln534_3_fu_633_p1 = add_ln534_2_fu_627_p2;

assign zext_ln534_fu_597_p1 = tmp_4_fu_590_p3;

endmodule //MPSQ_delete_patch_patches_parameters
