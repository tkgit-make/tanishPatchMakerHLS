// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MPSQ_add_patch5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        n_patches,
        n_patches_ap_vld,
        n_patches_read,
        wp_superpoints_address0,
        wp_superpoints_ce0,
        wp_superpoints_q0,
        wp_parameters_address0,
        wp_parameters_ce0,
        wp_parameters_q0,
        patches_superpoints_address0,
        patches_superpoints_ce0,
        patches_superpoints_we0,
        patches_superpoints_d0,
        patches_superpoints_q0,
        patches_parameters_address0,
        patches_parameters_ce0,
        patches_parameters_we0,
        patches_parameters_d0,
        patches_parameters_q0
);

parameter    ap_ST_fsm_state1 = 15'd1;
parameter    ap_ST_fsm_state2 = 15'd2;
parameter    ap_ST_fsm_state3 = 15'd4;
parameter    ap_ST_fsm_state4 = 15'd8;
parameter    ap_ST_fsm_state5 = 15'd16;
parameter    ap_ST_fsm_state6 = 15'd32;
parameter    ap_ST_fsm_pp1_stage0 = 15'd64;
parameter    ap_ST_fsm_state9 = 15'd128;
parameter    ap_ST_fsm_pp2_stage0 = 15'd256;
parameter    ap_ST_fsm_state12 = 15'd512;
parameter    ap_ST_fsm_state13 = 15'd1024;
parameter    ap_ST_fsm_pp3_stage0 = 15'd2048;
parameter    ap_ST_fsm_state16 = 15'd4096;
parameter    ap_ST_fsm_pp4_stage0 = 15'd8192;
parameter    ap_ST_fsm_state19 = 15'd16384;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] n_patches;
output   n_patches_ap_vld;
input  [7:0] n_patches_read;
output  [7:0] wp_superpoints_address0;
output   wp_superpoints_ce0;
input  [31:0] wp_superpoints_q0;
output  [6:0] wp_parameters_address0;
output   wp_parameters_ce0;
input  [31:0] wp_parameters_q0;
output  [11:0] patches_superpoints_address0;
output   patches_superpoints_ce0;
output   patches_superpoints_we0;
output  [31:0] patches_superpoints_d0;
input  [31:0] patches_superpoints_q0;
output  [11:0] patches_parameters_address0;
output   patches_parameters_ce0;
output   patches_parameters_we0;
output  [31:0] patches_parameters_d0;
input  [31:0] patches_parameters_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] n_patches;
reg n_patches_ap_vld;
reg[7:0] wp_superpoints_address0;
reg wp_superpoints_ce0;
reg[6:0] wp_parameters_address0;
reg wp_parameters_ce0;
reg[11:0] patches_superpoints_address0;
reg patches_superpoints_ce0;
reg patches_superpoints_we0;
reg[11:0] patches_parameters_address0;
reg patches_parameters_ce0;
reg patches_parameters_we0;

(* fsm_encoding = "none" *) reg   [14:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [6:0] indvar_flatten29_reg_297;
reg   [2:0] a_3_reg_308;
reg   [4:0] b_5_reg_319;
reg   [6:0] indvar_flatten51_reg_330;
reg   [2:0] a_4_reg_341;
reg   [5:0] indvar_flatten37_reg_352;
reg   [2:0] b_6_reg_363;
reg   [2:0] c_4_reg_374;
reg   [6:0] indvar_flatten_reg_385;
reg   [2:0] a_reg_396;
reg   [4:0] b_reg_407;
reg   [6:0] indvar_flatten21_reg_418;
reg   [2:0] a_2_reg_429;
reg   [5:0] indvar_flatten7_reg_440;
reg   [2:0] b_4_reg_451;
reg   [2:0] c_reg_462;
wire   [5:0] trunc_ln322_fu_486_p1;
reg   [5:0] trunc_ln322_reg_1346;
wire   [0:0] icmp_ln325_fu_494_p2;
reg   [0:0] icmp_ln325_reg_1351;
wire   [4:0] sub_fu_500_p2;
reg   [4:0] sub_reg_1355;
wire   [7:0] add_ln380_fu_557_p2;
reg   [7:0] add_ln380_reg_1366;
wire    ap_CS_fsm_state2;
wire   [8:0] add_ln380_cast_fu_563_p1;
reg   [8:0] add_ln380_cast_reg_1371;
reg   [31:0] patches_parameters_load_reg_1376;
wire   [0:0] icmp_ln378_fu_567_p2;
reg   [0:0] icmp_ln378_reg_1381;
wire   [0:0] icmp_ln378_1_fu_577_p2;
reg   [0:0] icmp_ln378_1_reg_1385;
wire    ap_CS_fsm_state3;
wire   [7:0] i_3_fu_582_p2;
reg   [7:0] i_3_reg_1389;
reg   [7:0] wp_superpoints_addr_5_reg_1399;
wire   [7:0] add_ln380_2_fu_630_p2;
reg   [7:0] add_ln380_2_reg_1404;
wire    ap_CS_fsm_state4;
wire   [0:0] grp_fu_480_p2;
reg   [0:0] icmp_ln874_reg_1419;
wire   [0:0] icmp_ln391_fu_680_p2;
reg   [0:0] icmp_ln391_reg_1426;
wire    ap_CS_fsm_state6;
wire   [10:0] add_ln405_fu_700_p2;
reg   [10:0] add_ln405_reg_1430;
wire   [6:0] add_ln394_1_fu_706_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state7_pp1_stage0_iter0;
wire    ap_block_state8_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln394_fu_712_p2;
reg   [0:0] icmp_ln394_reg_1441;
wire   [4:0] select_ln394_fu_730_p3;
reg   [4:0] select_ln394_reg_1445;
wire   [2:0] select_ln394_1_fu_738_p3;
reg   [2:0] select_ln394_1_reg_1450;
wire   [4:0] add_ln400_fu_785_p2;
wire   [6:0] add_ln410_1_fu_825_p2;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state10_pp2_stage0_iter0;
wire    ap_block_state11_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [0:0] icmp_ln410_fu_831_p2;
reg   [0:0] icmp_ln410_reg_1471;
wire   [2:0] select_ln410_1_fu_857_p3;
reg   [2:0] select_ln410_1_reg_1475;
wire   [2:0] select_ln416_fu_907_p3;
reg   [2:0] select_ln416_reg_1481;
wire   [2:0] select_ln416_1_fu_915_p3;
reg   [2:0] select_ln416_1_reg_1486;
wire   [2:0] add_ln422_fu_974_p2;
wire   [5:0] select_ln416_2_fu_986_p3;
wire   [6:0] add_ln329_1_fu_1077_p2;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state14_pp3_stage0_iter0;
wire    ap_block_state15_pp3_stage0_iter1;
wire    ap_block_pp3_stage0_11001;
wire   [0:0] icmp_ln329_fu_1083_p2;
reg   [0:0] icmp_ln329_reg_1512;
wire   [2:0] select_ln329_1_fu_1109_p3;
reg   [2:0] select_ln329_1_reg_1516;
wire   [7:0] add_ln340_fu_1133_p2;
reg   [7:0] add_ln340_reg_1521;
wire   [4:0] add_ln335_fu_1156_p2;
wire   [6:0] add_ln345_1_fu_1166_p2;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter0;
wire    ap_block_state17_pp4_stage0_iter0;
wire    ap_block_state18_pp4_stage0_iter1;
wire    ap_block_pp4_stage0_11001;
wire   [0:0] icmp_ln345_fu_1172_p2;
reg   [0:0] icmp_ln345_reg_1541;
wire   [2:0] select_ln345_1_fu_1198_p3;
reg   [2:0] select_ln345_1_reg_1545;
wire   [2:0] select_ln351_1_fu_1256_p3;
reg   [2:0] select_ln351_1_reg_1550;
wire   [63:0] zext_ln362_4_fu_1314_p1;
reg   [63:0] zext_ln362_4_reg_1555;
wire   [2:0] add_ln357_fu_1319_p2;
wire   [5:0] select_ln351_2_fu_1331_p3;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state7;
reg    ap_enable_reg_pp1_iter1;
wire    ap_CS_fsm_state9;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state10;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state14;
reg    ap_enable_reg_pp3_iter1;
wire    ap_CS_fsm_state16;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state17;
reg    ap_enable_reg_pp4_iter1;
wire    grp_encodeCoordinates_fu_473_ap_ready;
wire   [31:0] grp_encodeCoordinates_fu_473_ap_return;
reg   [7:0] i_reg_286;
wire    ap_CS_fsm_state5;
reg   [2:0] ap_phi_mux_a_3_phi_fu_312_p4;
wire    ap_block_pp1_stage0;
reg   [2:0] ap_phi_mux_a_4_phi_fu_345_p4;
wire    ap_block_pp2_stage0;
reg   [2:0] ap_phi_mux_b_6_phi_fu_367_p4;
reg   [2:0] ap_phi_mux_a_phi_fu_400_p4;
wire    ap_block_pp3_stage0;
reg   [2:0] ap_phi_mux_a_2_phi_fu_433_p4;
wire    ap_block_pp4_stage0;
reg   [2:0] ap_phi_mux_b_4_phi_fu_455_p4;
wire   [63:0] p_cast_fu_538_p1;
wire   [63:0] tmp_6_fu_606_p3;
wire   [63:0] tmp_7_fu_621_p3;
wire   [63:0] zext_ln380_2_fu_648_p1;
wire   [63:0] zext_ln381_fu_666_p1;
wire   [63:0] zext_ln405_6_fu_780_p1;
wire   [63:0] zext_ln405_7_fu_820_p1;
wire   [63:0] zext_ln427_6_fu_969_p1;
wire   [63:0] zext_ln427_7_fu_1062_p1;
wire   [63:0] zext_ln340_2_fu_1151_p1;
wire   [63:0] zext_ln340_1_fu_1162_p1;
wire   [7:0] zext_ln435_fu_1072_p1;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state19;
wire   [4:0] trunc_ln325_fu_490_p1;
wire   [7:0] tmp_3_fu_514_p3;
wire   [11:0] tmp_s_fu_506_p3;
wire   [11:0] tmp_41_cast_fu_522_p1;
wire   [11:0] empty_42_fu_526_p2;
wire   [11:0] empty_43_fu_532_p2;
wire   [6:0] tmp_fu_546_p3;
wire   [7:0] zext_ln380_1_fu_553_p1;
wire   [7:0] zext_ln380_fu_543_p1;
wire   [31:0] zext_ln378_fu_573_p1;
wire   [12:0] tmp_5_fu_592_p3;
wire   [12:0] or_ln874_fu_600_p2;
wire   [12:0] or_ln874_1_fu_615_p2;
wire   [8:0] zext_ln874_fu_588_p1;
wire   [8:0] add_ln380_1_fu_635_p2;
wire   [12:0] tmp_8_fu_640_p3;
wire   [11:0] tmp_49_cast_fu_653_p3;
wire   [11:0] or_ln381_fu_660_p2;
wire   [2:0] tmp_12_fu_671_p4;
wire   [9:0] tmp_13_fu_689_p3;
wire   [10:0] zext_ln405_1_fu_696_p1;
wire   [10:0] zext_ln405_fu_686_p1;
wire   [0:0] icmp_ln400_fu_724_p2;
wire   [2:0] add_ln394_fu_718_p2;
wire   [6:0] tmp_14_fu_746_p3;
wire   [7:0] zext_ln405_2_fu_754_p1;
wire   [7:0] zext_ln405_5_fu_758_p1;
wire   [7:0] add_ln405_2_fu_762_p2;
wire   [7:0] shl_ln405_fu_768_p2;
wire   [7:0] or_ln405_fu_774_p2;
wire   [7:0] trunc_ln405_fu_791_p1;
wire   [7:0] zext_ln405_3_fu_794_p1;
wire   [7:0] add_ln405_1_fu_797_p2;
wire   [11:0] tmp_56_cast_fu_803_p3;
wire   [11:0] zext_ln405_4_fu_811_p1;
wire   [11:0] add_ln405_3_fu_814_p2;
wire   [0:0] icmp_ln416_fu_843_p2;
wire   [2:0] add_ln410_fu_837_p2;
wire   [4:0] tmp_15_fu_865_p3;
wire   [0:0] icmp_ln422_fu_883_p2;
wire   [0:0] xor_ln410_fu_877_p2;
wire   [2:0] select_ln410_fu_849_p3;
wire   [0:0] and_ln410_fu_889_p2;
wire   [0:0] or_ln416_fu_901_p2;
wire   [2:0] add_ln416_fu_895_p2;
wire   [5:0] zext_ln427_1_fu_873_p1;
wire   [5:0] zext_ln427_3_fu_923_p1;
wire   [5:0] add_ln427_1_fu_927_p2;
wire   [3:0] trunc_ln427_fu_933_p1;
wire   [6:0] p_shl8_cast_fu_937_p3;
wire   [6:0] p_shl9_cast_fu_945_p3;
wire   [6:0] sub_ln427_fu_953_p2;
wire   [6:0] zext_ln427_5_fu_959_p1;
wire   [6:0] add_ln427_3_fu_963_p2;
wire   [5:0] add_ln416_1_fu_980_p2;
wire   [10:0] zext_ln427_fu_994_p1;
wire   [10:0] add_ln427_fu_997_p2;
wire   [12:0] tmp_16_fu_1002_p3;
wire   [62:0] zext_ln416_fu_1010_p1;
wire   [62:0] zext_ln427_2_fu_1014_p1;
wire   [62:0] add_ln427_2_fu_1017_p2;
wire   [8:0] trunc_ln427_1_fu_1023_p1;
wire   [10:0] trunc_ln427_2_fu_1035_p1;
wire   [11:0] p_shl6_cast_fu_1027_p3;
wire   [11:0] p_shl7_cast_fu_1039_p3;
wire   [11:0] sub_ln427_1_fu_1047_p2;
wire   [11:0] zext_ln427_4_fu_1053_p1;
wire   [11:0] add_ln427_4_fu_1056_p2;
wire   [5:0] add_ln435_fu_1067_p2;
wire   [0:0] icmp_ln335_fu_1095_p2;
wire   [2:0] add_ln329_fu_1089_p2;
wire   [6:0] tmp_4_fu_1117_p3;
wire   [4:0] select_ln329_fu_1101_p3;
wire   [7:0] tmp_42_cast_fu_1125_p1;
wire   [7:0] zext_ln340_fu_1129_p1;
wire   [7:0] shl_ln340_fu_1139_p2;
wire   [7:0] or_ln340_fu_1145_p2;
wire   [0:0] icmp_ln351_fu_1184_p2;
wire   [2:0] add_ln345_fu_1178_p2;
wire   [4:0] tmp_9_fu_1206_p3;
wire   [0:0] icmp_ln357_fu_1224_p2;
wire   [0:0] xor_ln345_fu_1218_p2;
wire   [2:0] select_ln345_fu_1190_p3;
wire   [0:0] and_ln345_fu_1230_p2;
wire   [0:0] or_ln351_fu_1242_p2;
wire   [2:0] add_ln351_fu_1236_p2;
wire   [5:0] zext_ln351_fu_1214_p1;
wire   [5:0] zext_ln362_fu_1264_p1;
wire   [5:0] add_ln362_fu_1268_p2;
wire   [8:0] tmp_10_fu_1274_p3;
wire   [6:0] tmp_11_fu_1286_p3;
wire   [11:0] zext_ln362_1_fu_1282_p1;
wire   [11:0] zext_ln362_2_fu_1294_p1;
wire   [2:0] select_ln351_fu_1248_p3;
wire   [11:0] sub_ln362_fu_1298_p2;
wire   [11:0] zext_ln362_3_fu_1304_p1;
wire   [11:0] add_ln362_1_fu_1308_p2;
wire   [5:0] add_ln351_1_fu_1325_p2;
reg   [14:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 15'd1;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
end

MPSQ_encodeCoordinates grp_encodeCoordinates_fu_473(
    .ap_ready(grp_encodeCoordinates_fu_473_ap_ready),
    .z(wp_superpoints_q0),
    .ap_return(grp_encodeCoordinates_fu_473_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state7) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln391_fu_680_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state7) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state7);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln391_fu_680_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state10) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state10) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state10);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp3_exit_iter0_state14) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln325_fu_494_p2 == 1'd1))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp3_exit_iter0_state14) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state14);
        end else if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln325_fu_494_p2 == 1'd1))) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp4_exit_iter0_state17) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp4_exit_iter0_state17) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state17);
        end else if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        a_2_reg_429 <= 3'd0;
    end else if (((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln345_reg_1541 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        a_2_reg_429 <= select_ln345_1_reg_1545;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln394_reg_1441 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        a_3_reg_308 <= select_ln394_1_reg_1450;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln391_fu_680_p2 == 1'd1))) begin
        a_3_reg_308 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        a_4_reg_341 <= 3'd0;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln410_reg_1471 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        a_4_reg_341 <= select_ln410_1_reg_1475;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln325_fu_494_p2 == 1'd1))) begin
        a_reg_396 <= 3'd0;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln329_reg_1512 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        a_reg_396 <= select_ln329_1_reg_1516;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        b_4_reg_451 <= 3'd0;
    end else if (((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln345_reg_1541 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        b_4_reg_451 <= select_ln351_1_reg_1550;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln394_fu_712_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        b_5_reg_319 <= add_ln400_fu_785_p2;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln391_fu_680_p2 == 1'd1))) begin
        b_5_reg_319 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        b_6_reg_363 <= 3'd0;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln410_reg_1471 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        b_6_reg_363 <= select_ln416_1_reg_1486;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln325_fu_494_p2 == 1'd1))) begin
        b_reg_407 <= 5'd0;
    end else if (((icmp_ln329_fu_1083_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        b_reg_407 <= add_ln335_fu_1156_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        c_4_reg_374 <= 3'd0;
    end else if (((icmp_ln410_fu_831_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        c_4_reg_374 <= add_ln422_fu_974_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        c_reg_462 <= 3'd0;
    end else if (((icmp_ln345_fu_1172_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        c_reg_462 <= add_ln357_fu_1319_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln378_fu_567_p2 == 1'd1))) begin
        i_reg_286 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln874_reg_1419 == 1'd1) & (grp_fu_480_p2 == 1'd1) & (icmp_ln378_1_reg_1385 == 1'd1))) begin
        i_reg_286 <= i_3_reg_1389;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        indvar_flatten21_reg_418 <= 7'd0;
    end else if (((icmp_ln345_fu_1172_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        indvar_flatten21_reg_418 <= add_ln345_1_fu_1166_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln394_fu_712_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        indvar_flatten29_reg_297 <= add_ln394_1_fu_706_p2;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln391_fu_680_p2 == 1'd1))) begin
        indvar_flatten29_reg_297 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        indvar_flatten37_reg_352 <= 6'd0;
    end else if (((icmp_ln410_fu_831_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        indvar_flatten37_reg_352 <= select_ln416_2_fu_986_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        indvar_flatten51_reg_330 <= 7'd0;
    end else if (((icmp_ln410_fu_831_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        indvar_flatten51_reg_330 <= add_ln410_1_fu_825_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        indvar_flatten7_reg_440 <= 6'd0;
    end else if (((icmp_ln345_fu_1172_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        indvar_flatten7_reg_440 <= select_ln351_2_fu_1331_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln325_fu_494_p2 == 1'd1))) begin
        indvar_flatten_reg_385 <= 7'd0;
    end else if (((icmp_ln329_fu_1083_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        indvar_flatten_reg_385 <= add_ln329_1_fu_1077_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln329_fu_1083_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        add_ln340_reg_1521 <= add_ln340_fu_1133_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln378_1_fu_577_p2 == 1'd1))) begin
        add_ln380_2_reg_1404 <= add_ln380_2_fu_630_p2;
        wp_superpoints_addr_5_reg_1399[7 : 5] <= tmp_7_fu_621_p3[7 : 5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln380_cast_reg_1371[7 : 0] <= add_ln380_cast_fu_563_p1[7 : 0];
        add_ln380_reg_1366 <= add_ln380_fu_557_p2;
        icmp_ln378_reg_1381 <= icmp_ln378_fu_567_p2;
        patches_parameters_load_reg_1376 <= patches_parameters_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln391_fu_680_p2 == 1'd1))) begin
        add_ln405_reg_1430 <= add_ln405_fu_700_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_3_reg_1389 <= i_3_fu_582_p2;
        icmp_ln378_1_reg_1385 <= icmp_ln378_1_fu_577_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        icmp_ln325_reg_1351 <= icmp_ln325_fu_494_p2;
        trunc_ln322_reg_1346 <= trunc_ln322_fu_486_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        icmp_ln329_reg_1512 <= icmp_ln329_fu_1083_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        icmp_ln345_reg_1541 <= icmp_ln345_fu_1172_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        icmp_ln391_reg_1426 <= icmp_ln391_fu_680_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln394_reg_1441 <= icmp_ln394_fu_712_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln410_reg_1471 <= icmp_ln410_fu_831_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln378_1_reg_1385 == 1'd1))) begin
        icmp_ln874_reg_1419 <= grp_fu_480_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln329_fu_1083_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        select_ln329_1_reg_1516 <= select_ln329_1_fu_1109_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln345_fu_1172_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        select_ln345_1_reg_1545 <= select_ln345_1_fu_1198_p3;
        select_ln351_1_reg_1550 <= select_ln351_1_fu_1256_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln394_fu_712_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        select_ln394_1_reg_1450 <= select_ln394_1_fu_738_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln394_fu_712_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        select_ln394_reg_1445 <= select_ln394_fu_730_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln410_fu_831_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        select_ln410_1_reg_1475 <= select_ln410_1_fu_857_p3;
        select_ln416_1_reg_1486 <= select_ln416_1_fu_915_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln410_fu_831_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        select_ln416_reg_1481 <= select_ln416_fu_907_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (icmp_ln325_fu_494_p2 == 1'd0))) begin
        sub_reg_1355 <= sub_fu_500_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln345_fu_1172_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        zext_ln362_4_reg_1555[11 : 0] <= zext_ln362_4_fu_1314_p1[11 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln394_fu_712_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state7 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state7 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln410_fu_831_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln329_fu_1083_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state14 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state14 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln345_fu_1172_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state17 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state17 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln345_reg_1541 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        ap_phi_mux_a_2_phi_fu_433_p4 = select_ln345_1_reg_1545;
    end else begin
        ap_phi_mux_a_2_phi_fu_433_p4 = a_2_reg_429;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln394_reg_1441 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_a_3_phi_fu_312_p4 = select_ln394_1_reg_1450;
    end else begin
        ap_phi_mux_a_3_phi_fu_312_p4 = a_3_reg_308;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln410_reg_1471 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_a_4_phi_fu_345_p4 = select_ln410_1_reg_1475;
    end else begin
        ap_phi_mux_a_4_phi_fu_345_p4 = a_4_reg_341;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln329_reg_1512 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_a_phi_fu_400_p4 = select_ln329_1_reg_1516;
    end else begin
        ap_phi_mux_a_phi_fu_400_p4 = a_reg_396;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln345_reg_1541 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        ap_phi_mux_b_4_phi_fu_455_p4 = select_ln351_1_reg_1550;
    end else begin
        ap_phi_mux_b_4_phi_fu_455_p4 = b_4_reg_451;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln410_reg_1471 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_b_6_phi_fu_367_p4 = select_ln416_1_reg_1486;
    end else begin
        ap_phi_mux_b_6_phi_fu_367_p4 = b_6_reg_363;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        n_patches = 8'd1;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln391_reg_1426 == 1'd1) & (icmp_ln378_1_reg_1385 == 1'd1) & (icmp_ln378_reg_1381 == 1'd1) & (icmp_ln325_reg_1351 == 1'd0))) begin
        n_patches = zext_ln435_fu_1072_p1;
    end else begin
        n_patches = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | ((1'b1 == ap_CS_fsm_state12) & (icmp_ln391_reg_1426 == 1'd1) & (icmp_ln378_1_reg_1385 == 1'd1) & (icmp_ln378_reg_1381 == 1'd1) & (icmp_ln325_reg_1351 == 1'd0)))) begin
        n_patches_ap_vld = 1'b1;
    end else begin
        n_patches_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        patches_parameters_address0 = zext_ln362_4_reg_1555;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        patches_parameters_address0 = zext_ln427_7_fu_1062_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        patches_parameters_address0 = p_cast_fu_538_p1;
    end else begin
        patches_parameters_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        patches_parameters_ce0 = 1'b1;
    end else begin
        patches_parameters_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln345_reg_1541 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln410_reg_1471 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        patches_parameters_we0 = 1'b1;
    end else begin
        patches_parameters_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        patches_superpoints_address0 = zext_ln340_1_fu_1162_p1;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        patches_superpoints_address0 = zext_ln405_7_fu_820_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        patches_superpoints_address0 = zext_ln381_fu_666_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        patches_superpoints_address0 = zext_ln380_2_fu_648_p1;
    end else begin
        patches_superpoints_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        patches_superpoints_ce0 = 1'b1;
    end else begin
        patches_superpoints_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln329_reg_1512 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln394_reg_1441 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        patches_superpoints_we0 = 1'b1;
    end else begin
        patches_superpoints_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        wp_parameters_address0 = zext_ln362_4_fu_1314_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        wp_parameters_address0 = zext_ln427_6_fu_969_p1;
    end else begin
        wp_parameters_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        wp_parameters_ce0 = 1'b1;
    end else begin
        wp_parameters_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        wp_superpoints_address0 = zext_ln340_2_fu_1151_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        wp_superpoints_address0 = zext_ln405_6_fu_780_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        wp_superpoints_address0 = wp_superpoints_addr_5_reg_1399;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        wp_superpoints_address0 = tmp_6_fu_606_p3;
    end else begin
        wp_superpoints_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
        wp_superpoints_ce0 = 1'b1;
    end else begin
        wp_superpoints_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln325_fu_494_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln325_fu_494_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln378_fu_567_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln874_reg_1419 == 1'd1) & (grp_fu_480_p2 == 1'd1) & (icmp_ln378_1_reg_1385 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln378_1_reg_1385 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln391_fu_680_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((icmp_ln394_fu_712_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((icmp_ln394_fu_712_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((icmp_ln410_fu_831_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((icmp_ln410_fu_831_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((icmp_ln329_fu_1083_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((icmp_ln329_fu_1083_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if (~((icmp_ln345_fu_1172_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((icmp_ln345_fu_1172_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln329_1_fu_1077_p2 = (indvar_flatten_reg_385 + 7'd1);

assign add_ln329_fu_1089_p2 = (ap_phi_mux_a_phi_fu_400_p4 + 3'd1);

assign add_ln335_fu_1156_p2 = (select_ln329_fu_1101_p3 + 5'd1);

assign add_ln340_fu_1133_p2 = (tmp_42_cast_fu_1125_p1 + zext_ln340_fu_1129_p1);

assign add_ln345_1_fu_1166_p2 = (indvar_flatten21_reg_418 + 7'd1);

assign add_ln345_fu_1178_p2 = (ap_phi_mux_a_2_phi_fu_433_p4 + 3'd1);

assign add_ln351_1_fu_1325_p2 = (indvar_flatten7_reg_440 + 6'd1);

assign add_ln351_fu_1236_p2 = (select_ln345_fu_1190_p3 + 3'd1);

assign add_ln357_fu_1319_p2 = (select_ln351_fu_1248_p3 + 3'd1);

assign add_ln362_1_fu_1308_p2 = (sub_ln362_fu_1298_p2 + zext_ln362_3_fu_1304_p1);

assign add_ln362_fu_1268_p2 = (zext_ln351_fu_1214_p1 + zext_ln362_fu_1264_p1);

assign add_ln380_1_fu_635_p2 = (add_ln380_cast_reg_1371 + zext_ln874_fu_588_p1);

assign add_ln380_2_fu_630_p2 = (add_ln380_reg_1366 + i_reg_286);

assign add_ln380_cast_fu_563_p1 = add_ln380_fu_557_p2;

assign add_ln380_fu_557_p2 = (zext_ln380_1_fu_553_p1 + zext_ln380_fu_543_p1);

assign add_ln394_1_fu_706_p2 = (indvar_flatten29_reg_297 + 7'd1);

assign add_ln394_fu_718_p2 = (ap_phi_mux_a_3_phi_fu_312_p4 + 3'd1);

assign add_ln400_fu_785_p2 = (select_ln394_fu_730_p3 + 5'd1);

assign add_ln405_1_fu_797_p2 = (trunc_ln405_fu_791_p1 + zext_ln405_3_fu_794_p1);

assign add_ln405_2_fu_762_p2 = (zext_ln405_2_fu_754_p1 + zext_ln405_5_fu_758_p1);

assign add_ln405_3_fu_814_p2 = (tmp_56_cast_fu_803_p3 + zext_ln405_4_fu_811_p1);

assign add_ln405_fu_700_p2 = (zext_ln405_1_fu_696_p1 + zext_ln405_fu_686_p1);

assign add_ln410_1_fu_825_p2 = (indvar_flatten51_reg_330 + 7'd1);

assign add_ln410_fu_837_p2 = (ap_phi_mux_a_4_phi_fu_345_p4 + 3'd1);

assign add_ln416_1_fu_980_p2 = (indvar_flatten37_reg_352 + 6'd1);

assign add_ln416_fu_895_p2 = (select_ln410_fu_849_p3 + 3'd1);

assign add_ln422_fu_974_p2 = (select_ln416_fu_907_p3 + 3'd1);

assign add_ln427_1_fu_927_p2 = (zext_ln427_1_fu_873_p1 + zext_ln427_3_fu_923_p1);

assign add_ln427_2_fu_1017_p2 = (zext_ln416_fu_1010_p1 + zext_ln427_2_fu_1014_p1);

assign add_ln427_3_fu_963_p2 = (sub_ln427_fu_953_p2 + zext_ln427_5_fu_959_p1);

assign add_ln427_4_fu_1056_p2 = (sub_ln427_1_fu_1047_p2 + zext_ln427_4_fu_1053_p1);

assign add_ln427_fu_997_p2 = (add_ln405_reg_1430 + zext_ln427_fu_994_p1);

assign add_ln435_fu_1067_p2 = (trunc_ln322_reg_1346 + 6'd1);

assign and_ln345_fu_1230_p2 = (xor_ln345_fu_1218_p2 & icmp_ln357_fu_1224_p2);

assign and_ln410_fu_889_p2 = (xor_ln410_fu_877_p2 & icmp_ln422_fu_883_p2);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign empty_42_fu_526_p2 = (tmp_s_fu_506_p3 - tmp_41_cast_fu_522_p1);

assign empty_43_fu_532_p2 = (empty_42_fu_526_p2 + 12'd102);

assign grp_fu_480_p2 = ((patches_superpoints_q0 == wp_superpoints_q0) ? 1'b1 : 1'b0);

assign i_3_fu_582_p2 = (i_reg_286 + 8'd1);

assign icmp_ln325_fu_494_p2 = ((n_patches_read == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln329_fu_1083_p2 = ((indvar_flatten_reg_385 == 7'd80) ? 1'b1 : 1'b0);

assign icmp_ln335_fu_1095_p2 = ((b_reg_407 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln345_fu_1172_p2 = ((indvar_flatten21_reg_418 == 7'd120) ? 1'b1 : 1'b0);

assign icmp_ln351_fu_1184_p2 = ((indvar_flatten7_reg_440 == 6'd24) ? 1'b1 : 1'b0);

assign icmp_ln357_fu_1224_p2 = ((c_reg_462 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln378_1_fu_577_p2 = (($signed(zext_ln378_fu_573_p1) < $signed(patches_parameters_load_reg_1376)) ? 1'b1 : 1'b0);

assign icmp_ln378_fu_567_p2 = (($signed(patches_parameters_q0) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln391_fu_680_p2 = ((tmp_12_fu_671_p4 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln394_fu_712_p2 = ((indvar_flatten29_reg_297 == 7'd80) ? 1'b1 : 1'b0);

assign icmp_ln400_fu_724_p2 = ((b_5_reg_319 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln410_fu_831_p2 = ((indvar_flatten51_reg_330 == 7'd120) ? 1'b1 : 1'b0);

assign icmp_ln416_fu_843_p2 = ((indvar_flatten37_reg_352 == 6'd24) ? 1'b1 : 1'b0);

assign icmp_ln422_fu_883_p2 = ((c_4_reg_374 == 3'd6) ? 1'b1 : 1'b0);

assign or_ln340_fu_1145_p2 = (shl_ln340_fu_1139_p2 | 8'd1);

assign or_ln351_fu_1242_p2 = (icmp_ln351_fu_1184_p2 | and_ln345_fu_1230_p2);

assign or_ln381_fu_660_p2 = (tmp_49_cast_fu_653_p3 | 12'd15);

assign or_ln405_fu_774_p2 = (shl_ln405_fu_768_p2 | 8'd1);

assign or_ln416_fu_901_p2 = (icmp_ln416_fu_843_p2 | and_ln410_fu_889_p2);

assign or_ln874_1_fu_615_p2 = (tmp_5_fu_592_p3 | 13'd31);

assign or_ln874_fu_600_p2 = (tmp_5_fu_592_p3 | 13'd1);

assign p_cast_fu_538_p1 = empty_43_fu_532_p2;

assign p_shl6_cast_fu_1027_p3 = {{trunc_ln427_1_fu_1023_p1}, {3'd0}};

assign p_shl7_cast_fu_1039_p3 = {{trunc_ln427_2_fu_1035_p1}, {1'd0}};

assign p_shl8_cast_fu_937_p3 = {{trunc_ln427_fu_933_p1}, {3'd0}};

assign p_shl9_cast_fu_945_p3 = {{add_ln427_1_fu_927_p2}, {1'd0}};

assign patches_parameters_d0 = wp_parameters_q0;

assign patches_superpoints_d0 = grp_encodeCoordinates_fu_473_ap_return;

assign select_ln329_1_fu_1109_p3 = ((icmp_ln335_fu_1095_p2[0:0] == 1'b1) ? add_ln329_fu_1089_p2 : ap_phi_mux_a_phi_fu_400_p4);

assign select_ln329_fu_1101_p3 = ((icmp_ln335_fu_1095_p2[0:0] == 1'b1) ? 5'd0 : b_reg_407);

assign select_ln345_1_fu_1198_p3 = ((icmp_ln351_fu_1184_p2[0:0] == 1'b1) ? add_ln345_fu_1178_p2 : ap_phi_mux_a_2_phi_fu_433_p4);

assign select_ln345_fu_1190_p3 = ((icmp_ln351_fu_1184_p2[0:0] == 1'b1) ? 3'd0 : ap_phi_mux_b_4_phi_fu_455_p4);

assign select_ln351_1_fu_1256_p3 = ((and_ln345_fu_1230_p2[0:0] == 1'b1) ? add_ln351_fu_1236_p2 : select_ln345_fu_1190_p3);

assign select_ln351_2_fu_1331_p3 = ((icmp_ln351_fu_1184_p2[0:0] == 1'b1) ? 6'd1 : add_ln351_1_fu_1325_p2);

assign select_ln351_fu_1248_p3 = ((or_ln351_fu_1242_p2[0:0] == 1'b1) ? 3'd0 : c_reg_462);

assign select_ln394_1_fu_738_p3 = ((icmp_ln400_fu_724_p2[0:0] == 1'b1) ? add_ln394_fu_718_p2 : ap_phi_mux_a_3_phi_fu_312_p4);

assign select_ln394_fu_730_p3 = ((icmp_ln400_fu_724_p2[0:0] == 1'b1) ? 5'd0 : b_5_reg_319);

assign select_ln410_1_fu_857_p3 = ((icmp_ln416_fu_843_p2[0:0] == 1'b1) ? add_ln410_fu_837_p2 : ap_phi_mux_a_4_phi_fu_345_p4);

assign select_ln410_fu_849_p3 = ((icmp_ln416_fu_843_p2[0:0] == 1'b1) ? 3'd0 : ap_phi_mux_b_6_phi_fu_367_p4);

assign select_ln416_1_fu_915_p3 = ((and_ln410_fu_889_p2[0:0] == 1'b1) ? add_ln416_fu_895_p2 : select_ln410_fu_849_p3);

assign select_ln416_2_fu_986_p3 = ((icmp_ln416_fu_843_p2[0:0] == 1'b1) ? 6'd1 : add_ln416_1_fu_980_p2);

assign select_ln416_fu_907_p3 = ((or_ln416_fu_901_p2[0:0] == 1'b1) ? 3'd0 : c_4_reg_374);

assign shl_ln340_fu_1139_p2 = add_ln340_fu_1133_p2 << 8'd1;

assign shl_ln405_fu_768_p2 = add_ln405_2_fu_762_p2 << 8'd1;

assign sub_fu_500_p2 = ($signed(trunc_ln325_fu_490_p1) + $signed(5'd31));

assign sub_ln362_fu_1298_p2 = (zext_ln362_1_fu_1282_p1 - zext_ln362_2_fu_1294_p1);

assign sub_ln427_1_fu_1047_p2 = (p_shl6_cast_fu_1027_p3 - p_shl7_cast_fu_1039_p3);

assign sub_ln427_fu_953_p2 = (p_shl8_cast_fu_937_p3 - p_shl9_cast_fu_945_p3);

assign tmp_10_fu_1274_p3 = {{add_ln362_fu_1268_p2}, {3'd0}};

assign tmp_11_fu_1286_p3 = {{add_ln362_fu_1268_p2}, {1'd0}};

assign tmp_12_fu_671_p4 = {{n_patches_read[7:5]}};

assign tmp_13_fu_689_p3 = {{n_patches_read}, {2'd0}};

assign tmp_14_fu_746_p3 = {{select_ln394_1_fu_738_p3}, {4'd0}};

assign tmp_15_fu_865_p3 = {{select_ln410_1_fu_857_p3}, {2'd0}};

assign tmp_16_fu_1002_p3 = {{add_ln427_fu_997_p2}, {2'd0}};

assign tmp_3_fu_514_p3 = {{sub_fu_500_p2}, {3'd0}};

assign tmp_41_cast_fu_522_p1 = tmp_3_fu_514_p3;

assign tmp_42_cast_fu_1125_p1 = tmp_4_fu_1117_p3;

assign tmp_49_cast_fu_653_p3 = {{add_ln380_2_reg_1404}, {4'd0}};

assign tmp_4_fu_1117_p3 = {{select_ln329_1_fu_1109_p3}, {4'd0}};

assign tmp_56_cast_fu_803_p3 = {{add_ln405_1_fu_797_p2}, {4'd0}};

assign tmp_5_fu_592_p3 = {{i_reg_286}, {5'd0}};

assign tmp_6_fu_606_p3 = {{51'd0}, {or_ln874_fu_600_p2}};

assign tmp_7_fu_621_p3 = {{51'd0}, {or_ln874_1_fu_615_p2}};

assign tmp_8_fu_640_p3 = {{add_ln380_1_fu_635_p2}, {4'd0}};

assign tmp_9_fu_1206_p3 = {{select_ln345_1_fu_1198_p3}, {2'd0}};

assign tmp_fu_546_p3 = {{sub_reg_1355}, {2'd0}};

assign tmp_s_fu_506_p3 = {{sub_fu_500_p2}, {7'd0}};

assign trunc_ln322_fu_486_p1 = n_patches_read[5:0];

assign trunc_ln325_fu_490_p1 = n_patches_read[4:0];

assign trunc_ln405_fu_791_p1 = add_ln405_reg_1430[7:0];

assign trunc_ln427_1_fu_1023_p1 = add_ln427_2_fu_1017_p2[8:0];

assign trunc_ln427_2_fu_1035_p1 = add_ln427_2_fu_1017_p2[10:0];

assign trunc_ln427_fu_933_p1 = add_ln427_1_fu_927_p2[3:0];

assign xor_ln345_fu_1218_p2 = (icmp_ln351_fu_1184_p2 ^ 1'd1);

assign xor_ln410_fu_877_p2 = (icmp_ln416_fu_843_p2 ^ 1'd1);

assign zext_ln340_1_fu_1162_p1 = add_ln340_reg_1521;

assign zext_ln340_2_fu_1151_p1 = or_ln340_fu_1145_p2;

assign zext_ln340_fu_1129_p1 = select_ln329_fu_1101_p3;

assign zext_ln351_fu_1214_p1 = tmp_9_fu_1206_p3;

assign zext_ln362_1_fu_1282_p1 = tmp_10_fu_1274_p3;

assign zext_ln362_2_fu_1294_p1 = tmp_11_fu_1286_p3;

assign zext_ln362_3_fu_1304_p1 = select_ln351_fu_1248_p3;

assign zext_ln362_4_fu_1314_p1 = add_ln362_1_fu_1308_p2;

assign zext_ln362_fu_1264_p1 = select_ln351_1_fu_1256_p3;

assign zext_ln378_fu_573_p1 = i_reg_286;

assign zext_ln380_1_fu_553_p1 = tmp_fu_546_p3;

assign zext_ln380_2_fu_648_p1 = tmp_8_fu_640_p3;

assign zext_ln380_fu_543_p1 = sub_reg_1355;

assign zext_ln381_fu_666_p1 = or_ln381_fu_660_p2;

assign zext_ln405_1_fu_696_p1 = tmp_13_fu_689_p3;

assign zext_ln405_2_fu_754_p1 = tmp_14_fu_746_p3;

assign zext_ln405_3_fu_794_p1 = select_ln394_1_reg_1450;

assign zext_ln405_4_fu_811_p1 = select_ln394_reg_1445;

assign zext_ln405_5_fu_758_p1 = select_ln394_fu_730_p3;

assign zext_ln405_6_fu_780_p1 = or_ln405_fu_774_p2;

assign zext_ln405_7_fu_820_p1 = add_ln405_3_fu_814_p2;

assign zext_ln405_fu_686_p1 = n_patches_read;

assign zext_ln416_fu_1010_p1 = tmp_16_fu_1002_p3;

assign zext_ln427_1_fu_873_p1 = tmp_15_fu_865_p3;

assign zext_ln427_2_fu_1014_p1 = select_ln416_1_reg_1486;

assign zext_ln427_3_fu_923_p1 = select_ln416_1_fu_915_p3;

assign zext_ln427_4_fu_1053_p1 = select_ln416_reg_1481;

assign zext_ln427_5_fu_959_p1 = select_ln416_fu_907_p3;

assign zext_ln427_6_fu_969_p1 = add_ln427_3_fu_963_p2;

assign zext_ln427_7_fu_1062_p1 = add_ln427_4_fu_1056_p2;

assign zext_ln427_fu_994_p1 = select_ln410_1_reg_1475;

assign zext_ln435_fu_1072_p1 = add_ln435_fu_1067_p2;

assign zext_ln874_fu_588_p1 = i_reg_286;

always @ (posedge ap_clk) begin
    add_ln380_cast_reg_1371[8] <= 1'b0;
    wp_superpoints_addr_5_reg_1399[4:0] <= 5'b11111;
    zext_ln362_4_reg_1555[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
end

endmodule //MPSQ_add_patch5
