// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine8 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        GDn_points_address0,
        GDn_points_ce0,
        GDn_points_q0,
        i,
        z_top,
        apexZ0,
        original_ppl,
        leftRight,
        init_patch_address0,
        init_patch_ce0,
        init_patch_we0,
        init_patch_d0,
        init_patch1_address0,
        init_patch1_ce0,
        init_patch1_we0,
        init_patch1_d0,
        init_patch2_address0,
        init_patch2_ce0,
        init_patch2_we0,
        init_patch2_d0,
        init_patch3_address0,
        init_patch3_ce0,
        init_patch3_we0,
        init_patch3_d0,
        init_patch4_address0,
        init_patch4_ce0,
        init_patch4_we0,
        init_patch4_d0,
        p_read1,
        GDarrayDecoded_address0,
        GDarrayDecoded_ce0,
        GDarrayDecoded_q0,
        GDarrayDecoded_address1,
        GDarrayDecoded_ce1,
        GDarrayDecoded_q1,
        temp_V_address0,
        temp_V_ce0,
        temp_V_we0,
        temp_V_d0,
        temp_V_q0,
        temp_V_address1,
        temp_V_ce1,
        temp_V_we1,
        temp_V_d1,
        ap_return_0,
        ap_return_1
);

parameter    ap_ST_fsm_state1 = 31'd1;
parameter    ap_ST_fsm_state2 = 31'd2;
parameter    ap_ST_fsm_pp0_stage0 = 31'd4;
parameter    ap_ST_fsm_state5 = 31'd8;
parameter    ap_ST_fsm_state6 = 31'd16;
parameter    ap_ST_fsm_state7 = 31'd32;
parameter    ap_ST_fsm_state8 = 31'd64;
parameter    ap_ST_fsm_state9 = 31'd128;
parameter    ap_ST_fsm_state10 = 31'd256;
parameter    ap_ST_fsm_state11 = 31'd512;
parameter    ap_ST_fsm_state12 = 31'd1024;
parameter    ap_ST_fsm_state13 = 31'd2048;
parameter    ap_ST_fsm_state14 = 31'd4096;
parameter    ap_ST_fsm_state15 = 31'd8192;
parameter    ap_ST_fsm_state16 = 31'd16384;
parameter    ap_ST_fsm_state17 = 31'd32768;
parameter    ap_ST_fsm_state18 = 31'd65536;
parameter    ap_ST_fsm_pp1_stage0 = 31'd131072;
parameter    ap_ST_fsm_pp1_stage1 = 31'd262144;
parameter    ap_ST_fsm_pp1_stage2 = 31'd524288;
parameter    ap_ST_fsm_state25 = 31'd1048576;
parameter    ap_ST_fsm_state26 = 31'd2097152;
parameter    ap_ST_fsm_pp2_stage0 = 31'd4194304;
parameter    ap_ST_fsm_state29 = 31'd8388608;
parameter    ap_ST_fsm_pp3_stage0 = 31'd16777216;
parameter    ap_ST_fsm_state32 = 31'd33554432;
parameter    ap_ST_fsm_pp4_stage0 = 31'd67108864;
parameter    ap_ST_fsm_pp5_stage0 = 31'd134217728;
parameter    ap_ST_fsm_pp6_stage0 = 31'd268435456;
parameter    ap_ST_fsm_pp7_stage0 = 31'd536870912;
parameter    ap_ST_fsm_state41 = 31'd1073741824;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] GDn_points_address0;
output   GDn_points_ce0;
input  [31:0] GDn_points_q0;
input  [2:0] i;
input  [31:0] z_top;
input  [31:0] apexZ0;
input  [31:0] original_ppl;
input  [0:0] leftRight;
output  [4:0] init_patch_address0;
output   init_patch_ce0;
output   init_patch_we0;
output  [31:0] init_patch_d0;
output  [4:0] init_patch1_address0;
output   init_patch1_ce0;
output   init_patch1_we0;
output  [31:0] init_patch1_d0;
output  [4:0] init_patch2_address0;
output   init_patch2_ce0;
output   init_patch2_we0;
output  [31:0] init_patch2_d0;
output  [4:0] init_patch3_address0;
output   init_patch3_ce0;
output   init_patch3_we0;
output  [31:0] init_patch3_d0;
output  [4:0] init_patch4_address0;
output   init_patch4_ce0;
output   init_patch4_we0;
output  [31:0] init_patch4_d0;
input  [7:0] p_read1;
output  [10:0] GDarrayDecoded_address0;
output   GDarrayDecoded_ce0;
input  [31:0] GDarrayDecoded_q0;
output  [10:0] GDarrayDecoded_address1;
output   GDarrayDecoded_ce1;
input  [31:0] GDarrayDecoded_q1;
output  [7:0] temp_V_address0;
output   temp_V_ce0;
output   temp_V_we0;
output  [31:0] temp_V_d0;
input  [31:0] temp_V_q0;
output  [7:0] temp_V_address1;
output   temp_V_ce1;
output   temp_V_we1;
output  [31:0] temp_V_d1;
output  [31:0] ap_return_0;
output  [7:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg GDn_points_ce0;
reg init_patch_ce0;
reg init_patch_we0;
reg init_patch1_ce0;
reg init_patch1_we0;
reg init_patch2_ce0;
reg init_patch2_we0;
reg init_patch3_ce0;
reg init_patch3_we0;
reg init_patch4_ce0;
reg init_patch4_we0;
reg[10:0] GDarrayDecoded_address0;
reg GDarrayDecoded_ce0;
reg[10:0] GDarrayDecoded_address1;
reg GDarrayDecoded_ce1;
reg[7:0] temp_V_address0;
reg temp_V_ce0;
reg temp_V_we0;
reg[31:0] temp_V_d0;
reg[7:0] temp_V_address1;
reg temp_V_ce1;
reg temp_V_we1;
reg[31:0] temp_V_d1;

(* fsm_encoding = "none" *) reg   [30:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] radii_address0;
reg    radii_ce0;
wire   [24:0] radii_q0;
wire   [2:0] trapezoid_edges_V_address0;
reg    trapezoid_edges_V_ce0;
wire   [25:0] trapezoid_edges_V_q0;
reg   [30:0] row_list_size_reg_523;
reg   [7:0] j_reg_535;
reg   [63:0] start_value_reg_558;
reg   [31:0] start_index_reg_570;
reg   [63:0] p_x_assign_2_reg_582;
reg   [7:0] j_21_reg_594;
reg   [31:0] left_bound_reg_605;
reg   [31:0] right_bound_reg_617;
reg   [7:0] j_22_reg_629;
reg   [63:0] rbVal_reg_640;
reg   [63:0] lbVal_reg_652;
reg   [8:0] temp_size_3_reg_713;
reg   [7:0] j_13_reg_724;
reg   [32:0] indvar_flatten13_reg_733;
reg   [63:0] temp_size_2_reg_744;
reg   [7:0] j_12_reg_755;
reg   [1:0] z_1_reg_764;
reg   [32:0] indvar_flatten_reg_775;
reg   [63:0] temp_size_1_reg_786;
reg   [7:0] j_11_reg_797;
reg   [1:0] z_reg_806;
reg   [8:0] temp_size_reg_817;
reg   [7:0] j_10_reg_828;
reg   [5:0] indvar_flatten21_reg_837;
reg   [4:0] i_16_reg_848;
reg   [1:0] j_18_reg_859;
wire   [31:0] grp_fu_883_p1;
reg   [31:0] reg_894;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state14;
wire   [63:0] zext_ln1176_fu_901_p1;
reg   [63:0] zext_ln1176_reg_2166;
wire    ap_CS_fsm_state2;
wire   [0:0] leftRight_read_read_fu_234_p2;
wire  signed [31:0] apexZ0_read_read_fu_246_p2;
wire   [7:0] empty_fu_907_p1;
reg   [7:0] empty_reg_2210;
wire   [10:0] zext_ln1176_1_fu_918_p1;
reg   [10:0] zext_ln1176_1_reg_2215;
reg   [24:0] y_reg_2224;
reg   [31:0] GDn_points_load_reg_2229;
wire   [0:0] icmp_ln1180_fu_922_p2;
reg   [0:0] icmp_ln1180_reg_2235;
wire   [30:0] add_ln1182_fu_928_p2;
reg   [30:0] add_ln1182_reg_2239;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln1180_1_fu_938_p2;
reg   [0:0] icmp_ln1180_1_reg_2244;
wire   [7:0] j_1_fu_969_p2;
wire   [63:0] zext_ln1186_fu_985_p1;
wire    ap_CS_fsm_state5;
wire  signed [63:0] sext_ln1422_fu_1002_p1;
wire    ap_CS_fsm_state11;
wire   [31:0] grp_fu_878_p2;
reg   [31:0] i_op_assign_reg_2268;
wire   [31:0] grp_fu_874_p2;
reg   [31:0] i_op_assign_1_reg_2273;
wire   [31:0] grp_fu_870_p2;
reg   [31:0] dc_reg_2278;
wire    ap_CS_fsm_state17;
wire   [63:0] result_V_fu_1138_p3;
reg   [63:0] result_V_reg_2283;
wire    ap_CS_fsm_state18;
wire   [0:0] icmp_ln1313_fu_1146_p2;
reg   [0:0] icmp_ln1313_reg_2288;
wire   [7:0] j_3_fu_1152_p2;
reg   [7:0] j_3_reg_2292;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state19_pp1_stage0_iter0;
wire    ap_block_state22_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [31:0] zext_ln1313_fu_1158_p1;
reg   [31:0] zext_ln1313_reg_2297;
reg   [31:0] zext_ln1313_reg_2297_pp1_iter1_reg;
wire   [0:0] icmp_ln1313_1_fu_1162_p2;
reg   [0:0] icmp_ln1313_1_reg_2302;
reg   [0:0] icmp_ln1313_1_reg_2302_pp1_iter1_reg;
wire   [63:0] start_value_1_fu_1177_p2;
reg   [63:0] start_value_1_reg_2311;
wire    ap_CS_fsm_pp1_stage1;
wire    ap_block_state20_pp1_stage1_iter0;
wire    ap_block_state23_pp1_stage1_iter1;
wire    ap_block_pp1_stage1_11001;
reg   [63:0] start_value_1_reg_2311_pp1_iter1_reg;
reg   [0:0] tmp_58_reg_2319;
wire   [63:0] select_ln180_fu_1195_p3;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_state21_pp1_stage2_iter0;
wire    ap_block_state24_pp1_stage2_iter1;
wire    ap_block_pp1_stage2_11001;
wire   [63:0] grp_fu_890_p1;
reg   [63:0] conv2_i_reg_2329;
reg    ap_enable_reg_pp1_iter1;
wire   [0:0] icmp_ln1315_fu_1254_p2;
reg   [0:0] icmp_ln1315_reg_2340;
wire   [0:0] icmp_ln1315_1_fu_1260_p2;
reg   [0:0] icmp_ln1315_1_reg_2345;
wire   [0:0] icmp_ln1315_2_fu_1266_p2;
reg   [0:0] icmp_ln1315_2_reg_2350;
wire   [0:0] icmp_ln1315_3_fu_1272_p2;
reg   [0:0] icmp_ln1315_3_reg_2355;
wire   [63:0] start_value_2_fu_1298_p3;
wire   [31:0] start_index_2_fu_1305_p3;
wire   [63:0] select_ln1315_2_fu_1312_p3;
wire    ap_CS_fsm_state25;
wire   [32:0] rhs_18_fu_1319_p1;
reg   [32:0] rhs_18_reg_2380;
wire    ap_CS_fsm_state26;
wire   [7:0] j_5_fu_1323_p2;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state27_pp2_stage0_iter0;
wire    ap_block_state28_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [31:0] zext_ln1293_fu_1329_p1;
reg   [31:0] zext_ln1293_reg_2391;
wire   [0:0] icmp_ln1293_fu_1333_p2;
reg   [0:0] icmp_ln1293_reg_2397;
wire   [31:0] left_bound_1_fu_1385_p3;
reg    ap_enable_reg_pp2_iter1;
wire   [63:0] lbVal_1_fu_1392_p3;
wire   [31:0] right_bound_3_fu_1437_p3;
wire   [63:0] rbVal_2_fu_1444_p3;
wire   [31:0] select_ln1242_fu_1482_p3;
reg   [31:0] select_ln1242_reg_2426;
wire    ap_CS_fsm_state29;
wire   [0:0] icmp_ln1257_fu_1505_p2;
wire   [7:0] j_9_fu_1511_p2;
wire   [0:0] icmp_ln1272_fu_1521_p2;
wire   [7:0] j_8_fu_1527_p1;
wire   [0:0] icmp_ln1259_fu_1540_p2;
wire   [32:0] tmp_38_fu_1552_p3;
reg   [32:0] tmp_38_reg_2453;
wire   [0:0] icmp_ln1214_fu_1613_p2;
wire   [7:0] j_7_fu_1619_p1;
wire   [0:0] icmp_ln1229_fu_1627_p2;
wire   [32:0] tmp_37_fu_1639_p3;
reg   [32:0] tmp_37_reg_2471;
wire   [7:0] j_6_fu_1647_p2;
wire   [0:0] icmp_ln1216_fu_1656_p2;
wire   [8:0] add_ln1279_fu_1662_p2;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state30_pp3_stage0_iter0;
wire    ap_block_state31_pp3_stage0_iter1;
wire    ap_block_pp3_stage0_11001;
wire   [0:0] icmp_ln1272_1_fu_1672_p2;
reg   [0:0] icmp_ln1272_1_reg_2490;
wire   [9:0] tmp_41_fu_1677_p3;
reg   [9:0] tmp_41_reg_2494;
wire   [7:0] j_20_fu_1724_p2;
wire   [7:0] add_ln1284_fu_1748_p2;
reg   [7:0] add_ln1284_reg_2515;
wire    ap_CS_fsm_state32;
wire   [2:0] trunc_ln13_fu_1753_p1;
reg   [2:0] trunc_ln13_reg_2520;
wire   [32:0] add_ln1259_fu_1756_p2;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter0;
wire    ap_block_state33_pp4_stage0_iter0;
wire    ap_block_state34_pp4_stage0_iter1;
wire    ap_block_pp4_stage0_11001;
wire   [0:0] icmp_ln1259_1_fu_1762_p2;
reg   [0:0] icmp_ln1259_1_reg_2529;
wire   [7:0] select_ln1259_1_fu_1793_p3;
reg   [7:0] select_ln1259_1_reg_2533;
wire   [63:0] select_ln1259_2_fu_1816_p3;
reg   [63:0] select_ln1259_2_reg_2538;
wire   [7:0] add_ln1263_1_fu_1844_p2;
reg   [7:0] add_ln1263_1_reg_2543;
wire   [1:0] add_ln1261_fu_1861_p2;
wire   [32:0] add_ln1229_fu_1871_p2;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter0;
wire    ap_block_state35_pp5_stage0_iter0;
wire    ap_block_state36_pp5_stage0_iter1;
wire    ap_block_pp5_stage0_11001;
wire   [0:0] icmp_ln1229_1_fu_1877_p2;
reg   [0:0] icmp_ln1229_1_reg_2563;
wire   [7:0] select_ln1229_1_fu_1908_p3;
reg   [7:0] select_ln1229_1_reg_2567;
wire   [63:0] select_ln1229_2_fu_1931_p3;
reg   [63:0] select_ln1229_2_reg_2572;
wire   [7:0] add_ln1233_1_fu_1959_p2;
reg   [7:0] add_ln1233_1_reg_2577;
wire   [1:0] add_ln1231_fu_1976_p2;
wire   [8:0] add_ln1223_fu_1986_p2;
wire    ap_CS_fsm_pp6_stage0;
reg    ap_enable_reg_pp6_iter0;
wire    ap_block_state37_pp6_stage0_iter0;
wire    ap_block_state38_pp6_stage0_iter1;
wire    ap_block_pp6_stage0_11001;
wire   [0:0] icmp_ln1216_1_fu_1996_p2;
reg   [0:0] icmp_ln1216_1_reg_2597;
wire   [9:0] tmp_39_fu_2002_p3;
reg   [9:0] tmp_39_reg_2601;
wire   [7:0] j_16_fu_2049_p2;
wire   [5:0] add_ln9_1_fu_2073_p2;
wire    ap_CS_fsm_pp7_stage0;
reg    ap_enable_reg_pp7_iter0;
wire    ap_block_state39_pp7_stage0_iter0;
wire    ap_block_state40_pp7_stage0_iter1;
wire    ap_block_pp7_stage0_11001;
wire   [0:0] icmp_ln9_fu_2079_p2;
reg   [0:0] icmp_ln9_reg_2627;
wire   [4:0] select_ln9_1_fu_2105_p3;
reg   [4:0] select_ln9_1_reg_2631;
reg   [4:0] init_patch_addr_reg_2641;
reg   [4:0] init_patch1_addr_reg_2646;
reg   [4:0] init_patch2_addr_reg_2651;
reg   [4:0] init_patch3_addr_reg_2656;
reg   [4:0] init_patch4_addr_reg_2661;
wire   [1:0] add_ln11_fu_2145_p2;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state19;
wire    ap_block_pp1_stage2_subdone;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state27;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state30;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state33;
reg    ap_enable_reg_pp4_iter1;
wire    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state35;
reg    ap_enable_reg_pp5_iter1;
wire    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state37;
reg    ap_enable_reg_pp6_iter1;
wire    ap_block_pp7_stage0_subdone;
reg    ap_condition_pp7_exit_iter0_state39;
reg    ap_enable_reg_pp7_iter1;
reg   [6:0] row_list_V_address0;
reg    row_list_V_ce0;
reg    row_list_V_we0;
wire   [31:0] row_list_V_q0;
reg   [30:0] ap_phi_mux_row_list_size_phi_fu_527_p4;
wire    ap_block_pp0_stage0;
reg   [31:0] row_list_size_1_reg_546;
reg   [7:0] ap_phi_mux_j_21_phi_fu_598_p4;
wire    ap_block_pp1_stage0;
wire    ap_block_pp2_stage0;
reg   [31:0] ap_phi_mux_start_index_29_phi_fu_668_p4;
reg   [31:0] start_index_29_reg_664;
reg   [63:0] ap_phi_mux_start_value_28_phi_fu_680_p4;
reg   [63:0] start_value_28_reg_676;
reg   [31:0] ap_phi_mux_left_bound_2_phi_fu_692_p4;
reg   [31:0] left_bound_2_reg_688;
reg   [31:0] ap_phi_mux_right_bound_2_phi_fu_704_p4;
reg   [31:0] right_bound_2_reg_700;
reg   [63:0] ap_phi_mux_temp_size_2_phi_fu_748_p4;
wire    ap_block_pp4_stage0;
reg   [7:0] ap_phi_mux_j_12_phi_fu_758_p4;
reg   [63:0] ap_phi_mux_temp_size_1_phi_fu_790_p4;
wire    ap_block_pp5_stage0;
reg   [7:0] ap_phi_mux_j_11_phi_fu_800_p4;
reg   [4:0] ap_phi_mux_i_16_phi_fu_852_p4;
wire    ap_block_pp7_stage0;
wire   [63:0] zext_ln1182_1_fu_964_p1;
wire   [63:0] lftr_wideiv_cast_fu_975_p1;
wire   [63:0] zext_ln1315_fu_1168_p1;
wire   [63:0] zext_ln1295_fu_1339_p1;
wire   [63:0] zext_ln1276_2_fu_1702_p1;
wire    ap_block_pp3_stage0;
wire   [63:0] zext_ln1276_3_fu_1719_p1;
wire   [63:0] zext_ln1276_fu_1730_p1;
wire   [63:0] tmp_42_fu_1739_p3;
wire   [63:0] zext_ln1263_4_fu_1856_p1;
wire   [63:0] zext_ln1263_3_fu_1867_p1;
wire   [63:0] zext_ln1233_4_fu_1971_p1;
wire   [63:0] zext_ln1233_3_fu_1982_p1;
wire   [63:0] zext_ln1220_2_fu_2027_p1;
wire    ap_block_pp6_stage0;
wire   [63:0] zext_ln1220_3_fu_2044_p1;
wire   [63:0] zext_ln1220_fu_2055_p1;
wire   [63:0] tmp_40_fu_2064_p3;
wire   [63:0] zext_ln13_1_fu_2135_p1;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state7;
reg   [63:0] grp_fu_883_p0;
wire   [63:0] grp_fu_886_p1;
wire    ap_block_pp1_stage1;
reg   [63:0] grp_fu_890_p0;
wire    ap_block_pp1_stage2;
wire   [9:0] tmp_s_fu_911_p3;
wire   [31:0] zext_ln1180_fu_934_p1;
wire   [10:0] zext_ln1182_fu_943_p1;
wire   [10:0] add_ln1182_1_fu_947_p2;
wire   [10:0] shl_ln1182_fu_952_p2;
wire   [10:0] or_ln1182_fu_958_p2;
wire   [24:0] add_ln1186_fu_980_p2;
wire  signed [31:0] sext_ln215_26_fu_993_p0;
wire  signed [32:0] sext_ln215_fu_990_p1;
wire  signed [32:0] sext_ln215_26_fu_993_p1;
wire   [32:0] ret_fu_996_p2;
wire   [31:0] data_V_fu_1007_p1;
wire   [22:0] tmp_64_fu_1028_p1;
wire   [24:0] mantissa_fu_1032_p4;
wire   [7:0] tmp_63_fu_1018_p4;
wire   [8:0] zext_ln341_fu_1046_p1;
wire   [8:0] add_ln341_fu_1050_p2;
wire   [7:0] sub_ln1311_fu_1064_p2;
wire   [0:0] isNeg_fu_1056_p3;
wire  signed [8:0] sext_ln1311_fu_1070_p1;
wire   [8:0] ush_fu_1074_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i_cast_cast_cast_fu_1082_p1;
wire   [110:0] zext_ln15_fu_1042_p1;
wire   [110:0] sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_1086_p1;
wire   [110:0] r_V_fu_1090_p2;
wire   [0:0] tmp_fu_1102_p3;
wire   [110:0] r_V_9_fu_1096_p2;
wire   [63:0] zext_ln662_fu_1110_p1;
wire   [63:0] tmp_36_fu_1114_p4;
wire   [63:0] val_fu_1124_p3;
wire   [0:0] p_Result_s_fu_1010_p3;
wire   [63:0] result_V_5_fu_1132_p2;
wire  signed [63:0] sext_ln534_fu_1173_p1;
wire   [63:0] sub_ln180_fu_1190_p2;
wire   [63:0] data_V_10_fu_1202_p1;
wire   [62:0] trunc_ln368_fu_1206_p1;
wire   [63:0] p_Result_7_fu_1214_p3;
wire   [63:0] bitcast_ln1315_fu_1227_p1;
wire   [10:0] tmp_32_fu_1230_p4;
wire   [51:0] trunc_ln1315_1_fu_1240_p1;
wire   [10:0] tmp_33_fu_1244_p4;
wire   [51:0] trunc_ln1315_fu_1210_p1;
wire   [0:0] or_ln1315_fu_1278_p2;
wire   [0:0] or_ln1315_1_fu_1282_p2;
wire   [0:0] and_ln1315_fu_1286_p2;
wire   [0:0] grp_fu_886_p2;
wire   [0:0] and_ln1315_1_fu_1292_p2;
wire  signed [32:0] sext_ln215_27_fu_1344_p1;
wire   [32:0] ret_32_fu_1348_p2;
wire   [0:0] tmp_59_fu_1359_p3;
wire   [32:0] sub_ln180_2_fu_1353_p2;
wire   [32:0] select_ln180_1_fu_1367_p3;
wire  signed [63:0] sext_ln1295_fu_1375_p1;
wire   [0:0] icmp_ln1295_fu_1379_p2;
wire   [32:0] ret_33_fu_1400_p2;
wire   [0:0] tmp_60_fu_1411_p3;
wire   [32:0] sub_ln180_3_fu_1405_p2;
wire   [32:0] rbVal_1_fu_1419_p3;
wire  signed [63:0] sext_ln1301_fu_1427_p1;
wire   [0:0] icmp_ln1301_fu_1431_p2;
wire   [31:0] add_ln1242_fu_1452_p2;
wire   [0:0] icmp_ln1242_fu_1458_p2;
wire   [0:0] icmp_ln1247_fu_1464_p2;
wire   [0:0] and_ln1242_fu_1470_p2;
wire   [31:0] add_ln1249_fu_1476_p2;
wire   [31:0] sub_ln1257_fu_1490_p2;
wire   [31:0] add_ln1257_fu_1499_p2;
wire   [7:0] trunc_ln1257_fu_1495_p1;
wire   [31:0] zext_ln1272_fu_1517_p1;
wire   [31:0] zext_ln1259_fu_1536_p1;
wire   [31:0] add89_fu_1531_p2;
wire   [31:0] sub_ln1259_fu_1546_p2;
wire   [0:0] icmp_ln1209_fu_1560_p2;
wire   [0:0] icmp_ln1209_1_fu_1566_p2;
wire   [0:0] and_ln1209_fu_1572_p2;
wire   [31:0] add_ln1211_fu_1578_p2;
wire   [31:0] select_ln1209_fu_1584_p3;
wire   [7:0] trunc_ln1214_fu_1597_p1;
wire   [31:0] add_ln1214_fu_1592_p2;
wire   [31:0] add_ln1214_1_fu_1601_p2;
wire   [31:0] zext_ln1229_fu_1623_p1;
wire   [31:0] sub_ln1229_fu_1633_p2;
wire   [7:0] add_ln1214_2_fu_1607_p2;
wire   [31:0] zext_ln1216_fu_1652_p1;
wire   [31:0] zext_ln1272_1_fu_1668_p1;
wire   [10:0] zext_ln1276_1_fu_1685_p1;
wire   [10:0] add_ln1276_fu_1689_p2;
wire   [11:0] tmp_62_fu_1694_p3;
wire   [10:0] shl_ln1276_fu_1707_p2;
wire   [10:0] or_ln1276_1_fu_1713_p2;
wire   [9:0] or_ln1276_fu_1734_p2;
wire   [0:0] icmp_ln1261_fu_1779_p2;
wire   [7:0] j_19_fu_1773_p2;
wire   [10:0] zext_ln1263_fu_1801_p1;
wire   [10:0] add_ln1263_fu_1805_p2;
wire   [63:0] add_ln1266_fu_1767_p2;
wire   [6:0] trunc_ln1263_fu_1824_p1;
wire   [1:0] select_ln1259_fu_1785_p3;
wire   [7:0] tmp_97_cast_fu_1828_p3;
wire   [7:0] zext_ln1263_2_fu_1840_p1;
wire   [10:0] empty_114_fu_1810_p2;
wire   [10:0] zext_ln1263_1_fu_1836_p1;
wire   [10:0] add_ln1263_2_fu_1850_p2;
wire   [0:0] icmp_ln1231_fu_1894_p2;
wire   [7:0] j_17_fu_1888_p2;
wire   [10:0] zext_ln1233_fu_1916_p1;
wire   [10:0] add_ln1233_fu_1920_p2;
wire   [63:0] add_ln1236_fu_1882_p2;
wire   [6:0] trunc_ln1233_fu_1939_p1;
wire   [1:0] select_ln1229_fu_1900_p3;
wire   [7:0] tmp_93_cast_fu_1943_p3;
wire   [7:0] zext_ln1233_2_fu_1955_p1;
wire   [10:0] empty_113_fu_1925_p2;
wire   [10:0] zext_ln1233_1_fu_1951_p1;
wire   [10:0] add_ln1233_2_fu_1965_p2;
wire   [31:0] zext_ln1216_1_fu_1992_p1;
wire   [10:0] zext_ln1220_1_fu_2010_p1;
wire   [10:0] add_ln1220_fu_2014_p2;
wire   [11:0] tmp_61_fu_2019_p3;
wire   [10:0] shl_ln1220_fu_2032_p2;
wire   [10:0] or_ln1220_1_fu_2038_p2;
wire   [9:0] or_ln1220_fu_2059_p2;
wire   [0:0] icmp_ln11_fu_2091_p2;
wire   [4:0] add_ln9_fu_2085_p2;
wire   [5:0] tmp_43_fu_2113_p3;
wire   [1:0] select_ln9_fu_2097_p3;
wire   [6:0] tmp_102_cast_fu_2121_p1;
wire   [6:0] zext_ln13_fu_2125_p1;
wire   [6:0] add_ln13_fu_2129_p2;
wire    ap_CS_fsm_state41;
wire    ap_block_pp1_stage1_00001;
reg   [30:0] ap_NS_fsm;
wire    ap_block_pp1_stage1_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 31'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
end

makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine8_radii #(
    .DataWidth( 25 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
radii_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(radii_address0),
    .ce0(radii_ce0),
    .q0(radii_q0)
);

makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine8_trapezoid_edges_V #(
    .DataWidth( 26 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
trapezoid_edges_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(trapezoid_edges_V_address0),
    .ce0(trapezoid_edges_V_ce0),
    .q0(trapezoid_edges_V_q0)
);

makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine8_row_list_V #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
row_list_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(row_list_V_address0),
    .ce0(row_list_V_ce0),
    .we0(row_list_V_we0),
    .d0(GDarrayDecoded_q0),
    .q0(row_list_V_q0)
);

makePatches_ShadowQuilt_fromEdges_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(i_op_assign_1_reg_2273),
    .din1(reg_894),
    .ce(1'b1),
    .dout(grp_fu_870_p2)
);

makePatches_ShadowQuilt_fromEdges_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_894),
    .din1(i_op_assign_reg_2268),
    .ce(1'b1),
    .dout(grp_fu_874_p2)
);

makePatches_ShadowQuilt_fromEdges_fdiv_32ns_32ns_32_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_6_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_894),
    .din1(32'd1268291200),
    .ce(1'b1),
    .dout(grp_fu_878_p2)
);

makePatches_ShadowQuilt_fromEdges_sitofp_64ns_32_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
sitofp_64ns_32_2_no_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_883_p0),
    .ce(1'b1),
    .dout(grp_fu_883_p1)
);

makePatches_ShadowQuilt_fromEdges_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv2_i_reg_2329),
    .din1(grp_fu_886_p1),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_886_p2)
);

makePatches_ShadowQuilt_fromEdges_sitodp_64ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sitodp_64ns_64_2_no_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_890_p0),
    .ce(1'b1),
    .dout(grp_fu_890_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln1180_fu_922_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((icmp_ln1180_fu_922_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state19) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((icmp_ln1313_fu_1146_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage2_subdone) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((icmp_ln1313_fu_1146_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state27) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state26)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state27))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state27);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state26)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state30) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((icmp_ln1272_fu_1521_p2 == 1'd0) & (icmp_ln1257_fu_1505_p2 == 1'd0) & (leftRight_read_read_fu_234_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state30))) begin
            ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state30);
        end else if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if (((icmp_ln1272_fu_1521_p2 == 1'd0) & (icmp_ln1257_fu_1505_p2 == 1'd0) & (leftRight_read_read_fu_234_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state33) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if (((icmp_ln1259_fu_1540_p2 == 1'd1) & (icmp_ln1257_fu_1505_p2 == 1'd1) & (leftRight_read_read_fu_234_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state33))) begin
            ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state33);
        end else if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end else if (((icmp_ln1259_fu_1540_p2 == 1'd1) & (icmp_ln1257_fu_1505_p2 == 1'd1) & (leftRight_read_read_fu_234_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_condition_pp5_exit_iter0_state35) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if (((icmp_ln1229_fu_1627_p2 == 1'd1) & (icmp_ln1214_fu_1613_p2 == 1'd0) & (leftRight_read_read_fu_234_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_condition_pp5_exit_iter0_state35))) begin
            ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state35);
        end else if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
        end else if (((icmp_ln1229_fu_1627_p2 == 1'd1) & (icmp_ln1214_fu_1613_p2 == 1'd0) & (leftRight_read_read_fu_234_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
            ap_enable_reg_pp5_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp6_stage0_subdone) & (1'b1 == ap_condition_pp6_exit_iter0_state37) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if (((icmp_ln1216_fu_1656_p2 == 1'd0) & (icmp_ln1214_fu_1613_p2 == 1'd1) & (leftRight_read_read_fu_234_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp6_stage0_subdone) & (1'b1 == ap_condition_pp6_exit_iter0_state37))) begin
            ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state37);
        end else if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
        end else if (((icmp_ln1216_fu_1656_p2 == 1'd0) & (icmp_ln1214_fu_1613_p2 == 1'd1) & (leftRight_read_read_fu_234_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
            ap_enable_reg_pp6_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp7_stage0_subdone) & (1'b1 == ap_condition_pp7_exit_iter0_state39) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state32)) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp7_stage0_subdone) & (1'b1 == ap_condition_pp7_exit_iter0_state39))) begin
            ap_enable_reg_pp7_iter1 <= (1'b1 ^ ap_condition_pp7_exit_iter0_state39);
        end else if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
        end else if ((1'b1 == ap_CS_fsm_state32)) begin
            ap_enable_reg_pp7_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b1) & (icmp_ln9_reg_2627 == 1'd0) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        i_16_reg_848 <= select_ln9_1_reg_2631;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        i_16_reg_848 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1259_1_fu_1762_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        indvar_flatten13_reg_733 <= add_ln1259_fu_1756_p2;
    end else if (((icmp_ln1259_fu_1540_p2 == 1'd1) & (icmp_ln1257_fu_1505_p2 == 1'd1) & (leftRight_read_read_fu_234_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        indvar_flatten13_reg_733 <= 33'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_2079_p2 == 1'd0) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        indvar_flatten21_reg_837 <= add_ln9_1_fu_2073_p2;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        indvar_flatten21_reg_837 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1229_1_fu_1877_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        indvar_flatten_reg_775 <= add_ln1229_fu_1871_p2;
    end else if (((icmp_ln1229_fu_1627_p2 == 1'd1) & (icmp_ln1214_fu_1613_p2 == 1'd0) & (leftRight_read_read_fu_234_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        indvar_flatten_reg_775 <= 33'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1216_fu_1656_p2 == 1'd0) & (icmp_ln1214_fu_1613_p2 == 1'd1) & (leftRight_read_read_fu_234_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        j_10_reg_828 <= j_6_fu_1647_p2;
    end else if (((icmp_ln1216_1_fu_1996_p2 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        j_10_reg_828 <= j_16_fu_2049_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln1229_1_reg_2563 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        j_11_reg_797 <= select_ln1229_1_reg_2567;
    end else if (((icmp_ln1229_fu_1627_p2 == 1'd1) & (icmp_ln1214_fu_1613_p2 == 1'd0) & (leftRight_read_read_fu_234_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        j_11_reg_797 <= j_7_fu_1619_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln1259_1_reg_2529 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        j_12_reg_755 <= select_ln1259_1_reg_2533;
    end else if (((icmp_ln1259_fu_1540_p2 == 1'd1) & (icmp_ln1257_fu_1505_p2 == 1'd1) & (leftRight_read_read_fu_234_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        j_12_reg_755 <= j_8_fu_1527_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1272_fu_1521_p2 == 1'd0) & (icmp_ln1257_fu_1505_p2 == 1'd0) & (leftRight_read_read_fu_234_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        j_13_reg_724 <= j_9_fu_1511_p2;
    end else if (((icmp_ln1272_1_fu_1672_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        j_13_reg_724 <= j_20_fu_1724_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_2079_p2 == 1'd0) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        j_18_reg_859 <= add_ln11_fu_2145_p2;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        j_18_reg_859 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1313_fu_1146_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        j_21_reg_594 <= 8'd0;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1313_1_reg_2302 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j_21_reg_594 <= j_3_reg_2292;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1293_fu_1333_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        j_22_reg_629 <= j_5_fu_1323_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        j_22_reg_629 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1180_fu_922_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        j_reg_535 <= 8'd0;
    end else if (((icmp_ln1180_1_fu_938_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_reg_535 <= j_1_fu_969_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln1293_reg_2397 == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        lbVal_reg_652 <= lbVal_1_fu_1392_p3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        lbVal_reg_652 <= 64'd9223372036854775807;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1313_reg_2288 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        left_bound_2_reg_688 <= left_bound_reg_605;
    end else if (((icmp_ln1313_fu_1146_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        left_bound_2_reg_688 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln1293_reg_2397 == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        left_bound_reg_605 <= left_bound_1_fu_1385_p3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        left_bound_reg_605 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1313_fu_1146_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        p_x_assign_2_reg_582 <= 64'd9223372036854775807;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1313_1_reg_2302_pp1_iter1_reg == 1'd1) & (1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
        p_x_assign_2_reg_582 <= select_ln1315_2_fu_1312_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln1293_reg_2397 == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        rbVal_reg_640 <= rbVal_2_fu_1444_p3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        rbVal_reg_640 <= 64'd9223372036854775807;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1313_reg_2288 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        right_bound_2_reg_700 <= right_bound_reg_617;
    end else if (((icmp_ln1313_fu_1146_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        right_bound_2_reg_700 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln1293_reg_2397 == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        right_bound_reg_617 <= right_bound_3_fu_1437_p3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        right_bound_reg_617 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1180_reg_2235 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        row_list_size_1_reg_546 <= GDn_points_load_reg_2229;
    end else if (((icmp_ln1180_fu_922_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        row_list_size_1_reg_546 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1180_fu_922_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        row_list_size_reg_523 <= 31'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1180_1_reg_2244 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        row_list_size_reg_523 <= add_ln1182_reg_2239;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1313_reg_2288 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        start_index_29_reg_664 <= start_index_reg_570;
    end else if (((icmp_ln1313_fu_1146_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        start_index_29_reg_664 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1313_fu_1146_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        start_index_reg_570 <= 32'd0;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1313_1_reg_2302_pp1_iter1_reg == 1'd1) & (1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
        start_index_reg_570 <= start_index_2_fu_1305_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1313_reg_2288 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        start_value_28_reg_676 <= start_value_reg_558;
    end else if (((icmp_ln1313_fu_1146_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        start_value_28_reg_676 <= 64'd9223372036854775807;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1313_fu_1146_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        start_value_reg_558 <= 64'd9223372036854775807;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1313_1_reg_2302_pp1_iter1_reg == 1'd1) & (1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
        start_value_reg_558 <= start_value_2_fu_1298_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln1229_1_reg_2563 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        temp_size_1_reg_786 <= select_ln1229_2_reg_2572;
    end else if (((icmp_ln1229_fu_1627_p2 == 1'd1) & (icmp_ln1214_fu_1613_p2 == 1'd0) & (leftRight_read_read_fu_234_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        temp_size_1_reg_786 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln1259_1_reg_2529 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        temp_size_2_reg_744 <= select_ln1259_2_reg_2538;
    end else if (((icmp_ln1259_fu_1540_p2 == 1'd1) & (icmp_ln1257_fu_1505_p2 == 1'd1) & (leftRight_read_read_fu_234_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        temp_size_2_reg_744 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1272_fu_1521_p2 == 1'd0) & (icmp_ln1257_fu_1505_p2 == 1'd0) & (leftRight_read_read_fu_234_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        temp_size_3_reg_713 <= 9'd0;
    end else if (((icmp_ln1272_1_fu_1672_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        temp_size_3_reg_713 <= add_ln1279_fu_1662_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1216_fu_1656_p2 == 1'd0) & (icmp_ln1214_fu_1613_p2 == 1'd1) & (leftRight_read_read_fu_234_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        temp_size_reg_817 <= 9'd0;
    end else if (((icmp_ln1216_1_fu_1996_p2 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        temp_size_reg_817 <= add_ln1223_fu_1986_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1259_1_fu_1762_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        z_1_reg_764 <= add_ln1261_fu_1861_p2;
    end else if (((icmp_ln1259_fu_1540_p2 == 1'd1) & (icmp_ln1257_fu_1505_p2 == 1'd1) & (leftRight_read_read_fu_234_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        z_1_reg_764 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1229_1_fu_1877_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        z_reg_806 <= add_ln1231_fu_1976_p2;
    end else if (((icmp_ln1229_fu_1627_p2 == 1'd1) & (icmp_ln1214_fu_1613_p2 == 1'd0) & (leftRight_read_read_fu_234_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        z_reg_806 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        GDn_points_load_reg_2229 <= GDn_points_q0;
        empty_reg_2210 <= empty_fu_907_p1;
        icmp_ln1180_reg_2235 <= icmp_ln1180_fu_922_p2;
        y_reg_2224 <= radii_q0;
        zext_ln1176_1_reg_2215[9 : 7] <= zext_ln1176_1_fu_918_p1[9 : 7];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln1182_reg_2239 <= add_ln1182_fu_928_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1229_1_fu_1877_p2 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        add_ln1233_1_reg_2577 <= add_ln1233_1_fu_1959_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1259_1_fu_1762_p2 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        add_ln1263_1_reg_2543 <= add_ln1263_1_fu_1844_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        add_ln1284_reg_2515 <= add_ln1284_fu_1748_p2;
        trunc_ln13_reg_2520 <= trunc_ln13_fu_1753_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1313_1_reg_2302 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        conv2_i_reg_2329 <= grp_fu_890_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        dc_reg_2278 <= grp_fu_870_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        i_op_assign_1_reg_2273 <= grp_fu_874_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i_op_assign_reg_2268 <= grp_fu_878_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1180_1_reg_2244 <= icmp_ln1180_1_fu_938_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        icmp_ln1216_1_reg_2597 <= icmp_ln1216_1_fu_1996_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        icmp_ln1229_1_reg_2563 <= icmp_ln1229_1_fu_1877_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        icmp_ln1259_1_reg_2529 <= icmp_ln1259_1_fu_1762_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln1272_1_reg_2490 <= icmp_ln1272_1_fu_1672_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln1293_reg_2397 <= icmp_ln1293_fu_1333_p2;
        zext_ln1293_reg_2391[7 : 0] <= zext_ln1293_fu_1329_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln1313_1_reg_2302 <= icmp_ln1313_1_fu_1162_p2;
        icmp_ln1313_1_reg_2302_pp1_iter1_reg <= icmp_ln1313_1_reg_2302;
        zext_ln1313_reg_2297[7 : 0] <= zext_ln1313_fu_1158_p1[7 : 0];
        zext_ln1313_reg_2297_pp1_iter1_reg[7 : 0] <= zext_ln1313_reg_2297[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        icmp_ln1313_reg_2288 <= icmp_ln1313_fu_1146_p2;
        result_V_reg_2283 <= result_V_fu_1138_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1313_1_reg_2302_pp1_iter1_reg == 1'd1) & (1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        icmp_ln1315_1_reg_2345 <= icmp_ln1315_1_fu_1260_p2;
        icmp_ln1315_2_reg_2350 <= icmp_ln1315_2_fu_1266_p2;
        icmp_ln1315_3_reg_2355 <= icmp_ln1315_3_fu_1272_p2;
        icmp_ln1315_reg_2340 <= icmp_ln1315_fu_1254_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        icmp_ln9_reg_2627 <= icmp_ln9_fu_2079_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_2079_p2 == 1'd0) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        init_patch1_addr_reg_2646 <= zext_ln13_1_fu_2135_p1;
        init_patch2_addr_reg_2651 <= zext_ln13_1_fu_2135_p1;
        init_patch3_addr_reg_2656 <= zext_ln13_1_fu_2135_p1;
        init_patch4_addr_reg_2661 <= zext_ln13_1_fu_2135_p1;
        init_patch_addr_reg_2641 <= zext_ln13_1_fu_2135_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j_3_reg_2292 <= j_3_fu_1152_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_894 <= grp_fu_883_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        rhs_18_reg_2380[25 : 0] <= rhs_18_fu_1319_p1[25 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1229_1_fu_1877_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        select_ln1229_1_reg_2567 <= select_ln1229_1_fu_1908_p3;
        select_ln1229_2_reg_2572 <= select_ln1229_2_fu_1931_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((leftRight_read_read_fu_234_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        select_ln1242_reg_2426 <= select_ln1242_fu_1482_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1259_1_fu_1762_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        select_ln1259_1_reg_2533 <= select_ln1259_1_fu_1793_p3;
        select_ln1259_2_reg_2538 <= select_ln1259_2_fu_1816_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_2079_p2 == 1'd0) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        select_ln9_1_reg_2631 <= select_ln9_1_fu_2105_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1313_1_reg_2302 == 1'd1) & (1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        start_value_1_reg_2311 <= start_value_1_fu_1177_p2;
        tmp_58_reg_2319 <= start_value_1_fu_1177_p2[32'd63];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        start_value_1_reg_2311_pp1_iter1_reg <= start_value_1_reg_2311;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1229_fu_1627_p2 == 1'd1) & (icmp_ln1214_fu_1613_p2 == 1'd0) & (leftRight_read_read_fu_234_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        tmp_37_reg_2471[32 : 1] <= tmp_37_fu_1639_p3[32 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1259_fu_1540_p2 == 1'd1) & (icmp_ln1257_fu_1505_p2 == 1'd1) & (leftRight_read_read_fu_234_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        tmp_38_reg_2453[32 : 1] <= tmp_38_fu_1552_p3[32 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1216_1_fu_1996_p2 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        tmp_39_reg_2601[9 : 1] <= tmp_39_fu_2002_p3[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1272_1_fu_1672_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        tmp_41_reg_2494[9 : 1] <= tmp_41_fu_1677_p3[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        zext_ln1176_reg_2166[2 : 0] <= zext_ln1176_fu_901_p1[2 : 0];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        GDarrayDecoded_address0 = zext_ln1220_2_fu_2027_p1;
    end else if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        GDarrayDecoded_address0 = zext_ln1233_4_fu_1971_p1;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        GDarrayDecoded_address0 = zext_ln1276_3_fu_1719_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        GDarrayDecoded_address0 = zext_ln1182_1_fu_964_p1;
    end else begin
        GDarrayDecoded_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        GDarrayDecoded_address1 = zext_ln1220_3_fu_2044_p1;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        GDarrayDecoded_address1 = zext_ln1263_4_fu_1856_p1;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        GDarrayDecoded_address1 = zext_ln1276_2_fu_1702_p1;
    end else begin
        GDarrayDecoded_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0)) | ((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        GDarrayDecoded_ce0 = 1'b1;
    end else begin
        GDarrayDecoded_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        GDarrayDecoded_ce1 = 1'b1;
    end else begin
        GDarrayDecoded_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        GDn_points_ce0 = 1'b1;
    end else begin
        GDn_points_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1180_1_fu_938_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1313_1_fu_1162_p2 == 1'd0)) begin
        ap_condition_pp1_exit_iter0_state19 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state19 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1293_fu_1333_p2 == 1'd0)) begin
        ap_condition_pp2_exit_iter0_state27 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state27 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1272_1_fu_1672_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state30 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state30 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1259_1_fu_1762_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state33 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state33 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1229_1_fu_1877_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state35 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state35 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1216_1_fu_1996_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state37 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state37 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln9_fu_2079_p2 == 1'd1)) begin
        ap_condition_pp7_exit_iter0_state39 = 1'b1;
    end else begin
        ap_condition_pp7_exit_iter0_state39 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b1) & (icmp_ln9_reg_2627 == 1'd0) & (1'b0 == ap_block_pp7_stage0) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        ap_phi_mux_i_16_phi_fu_852_p4 = select_ln9_1_reg_2631;
    end else begin
        ap_phi_mux_i_16_phi_fu_852_p4 = i_16_reg_848;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln1229_1_reg_2563 == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        ap_phi_mux_j_11_phi_fu_800_p4 = select_ln1229_1_reg_2567;
    end else begin
        ap_phi_mux_j_11_phi_fu_800_p4 = j_11_reg_797;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln1259_1_reg_2529 == 1'd0) & (1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        ap_phi_mux_j_12_phi_fu_758_p4 = select_ln1259_1_reg_2533;
    end else begin
        ap_phi_mux_j_12_phi_fu_758_p4 = j_12_reg_755;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1313_1_reg_2302 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_j_21_phi_fu_598_p4 = j_3_reg_2292;
    end else begin
        ap_phi_mux_j_21_phi_fu_598_p4 = j_21_reg_594;
    end
end

always @ (*) begin
    if (((icmp_ln1313_reg_2288 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        ap_phi_mux_left_bound_2_phi_fu_692_p4 = left_bound_reg_605;
    end else begin
        ap_phi_mux_left_bound_2_phi_fu_692_p4 = left_bound_2_reg_688;
    end
end

always @ (*) begin
    if (((icmp_ln1313_reg_2288 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        ap_phi_mux_right_bound_2_phi_fu_704_p4 = right_bound_reg_617;
    end else begin
        ap_phi_mux_right_bound_2_phi_fu_704_p4 = right_bound_2_reg_700;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1180_1_reg_2244 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_row_list_size_phi_fu_527_p4 = add_ln1182_reg_2239;
    end else begin
        ap_phi_mux_row_list_size_phi_fu_527_p4 = row_list_size_reg_523;
    end
end

always @ (*) begin
    if (((icmp_ln1313_reg_2288 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        ap_phi_mux_start_index_29_phi_fu_668_p4 = start_index_reg_570;
    end else begin
        ap_phi_mux_start_index_29_phi_fu_668_p4 = start_index_29_reg_664;
    end
end

always @ (*) begin
    if (((icmp_ln1313_reg_2288 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        ap_phi_mux_start_value_28_phi_fu_680_p4 = start_value_reg_558;
    end else begin
        ap_phi_mux_start_value_28_phi_fu_680_p4 = start_value_28_reg_676;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln1229_1_reg_2563 == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        ap_phi_mux_temp_size_1_phi_fu_790_p4 = select_ln1229_2_reg_2572;
    end else begin
        ap_phi_mux_temp_size_1_phi_fu_790_p4 = temp_size_1_reg_786;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln1259_1_reg_2529 == 1'd0) & (1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        ap_phi_mux_temp_size_2_phi_fu_748_p4 = select_ln1259_2_reg_2538;
    end else begin
        ap_phi_mux_temp_size_2_phi_fu_748_p4 = temp_size_2_reg_744;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_883_p0 = $signed(apexZ0_read_read_fu_246_p2);
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_883_p0 = sext_ln1422_fu_1002_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_883_p0 = zext_ln1186_fu_985_p1;
    end else begin
        grp_fu_883_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_890_p0 = p_x_assign_2_reg_582;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
        grp_fu_890_p0 = select_ln180_fu_1195_p3;
    end else begin
        grp_fu_890_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        init_patch1_ce0 = 1'b1;
    end else begin
        init_patch1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b1) & (trunc_ln13_reg_2520 == 3'd1) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        init_patch1_we0 = 1'b1;
    end else begin
        init_patch1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        init_patch2_ce0 = 1'b1;
    end else begin
        init_patch2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b1) & (trunc_ln13_reg_2520 == 3'd2) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        init_patch2_we0 = 1'b1;
    end else begin
        init_patch2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        init_patch3_ce0 = 1'b1;
    end else begin
        init_patch3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b1) & (trunc_ln13_reg_2520 == 3'd3) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        init_patch3_we0 = 1'b1;
    end else begin
        init_patch3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        init_patch4_ce0 = 1'b1;
    end else begin
        init_patch4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln13_reg_2520 == 3'd0) & ~(trunc_ln13_reg_2520 == 3'd1) & ~(trunc_ln13_reg_2520 == 3'd2) & ~(trunc_ln13_reg_2520 == 3'd3) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        init_patch4_we0 = 1'b1;
    end else begin
        init_patch4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        init_patch_ce0 = 1'b1;
    end else begin
        init_patch_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b1) & (trunc_ln13_reg_2520 == 3'd0) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        init_patch_we0 = 1'b1;
    end else begin
        init_patch_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        radii_ce0 = 1'b1;
    end else begin
        radii_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        row_list_V_address0 = zext_ln1295_fu_1339_p1;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        row_list_V_address0 = zext_ln1315_fu_1168_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        row_list_V_address0 = lftr_wideiv_cast_fu_975_p1;
    end else begin
        row_list_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        row_list_V_ce0 = 1'b1;
    end else begin
        row_list_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1180_1_reg_2244 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        row_list_V_we0 = 1'b1;
    end else begin
        row_list_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        temp_V_address0 = zext_ln13_1_fu_2135_p1;
    end else if (((ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        temp_V_address0 = tmp_40_fu_2064_p3;
    end else if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        temp_V_address0 = zext_ln1263_3_fu_1867_p1;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        temp_V_address0 = tmp_42_fu_1739_p3;
    end else begin
        temp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        temp_V_address1 = zext_ln1220_fu_2055_p1;
    end else if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        temp_V_address1 = zext_ln1233_3_fu_1982_p1;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        temp_V_address1 = zext_ln1276_fu_1730_p1;
    end else begin
        temp_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0)))) begin
        temp_V_ce0 = 1'b1;
    end else begin
        temp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0)))) begin
        temp_V_ce1 = 1'b1;
    end else begin
        temp_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0) & (1'b1 == ap_CS_fsm_pp6_stage0)) | ((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        temp_V_d0 = GDarrayDecoded_q1;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        temp_V_d0 = GDarrayDecoded_q0;
    end else begin
        temp_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0) & (1'b1 == ap_CS_fsm_pp6_stage0)) | ((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0)))) begin
        temp_V_d1 = GDarrayDecoded_q0;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        temp_V_d1 = GDarrayDecoded_q1;
    end else begin
        temp_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter1 == 1'b1) & (icmp_ln1216_1_reg_2597 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln1272_1_reg_2490 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln1259_1_reg_2529 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        temp_V_we0 = 1'b1;
    end else begin
        temp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter1 == 1'b1) & (icmp_ln1216_1_reg_2597 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln1272_1_reg_2490 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln1229_1_reg_2563 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0)))) begin
        temp_V_we1 = 1'b1;
    end else begin
        temp_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        trapezoid_edges_V_ce0 = 1'b1;
    end else begin
        trapezoid_edges_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln1180_fu_922_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln1180_1_fu_938_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln1180_1_fu_938_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((icmp_ln1313_fu_1146_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln1313_1_fu_1162_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln1313_1_fu_1162_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b0) & (1'b0 == ap_block_pp1_stage2_subdone) & (1'b1 == ap_CS_fsm_pp1_stage2)) & (1'b0 == ap_block_pp1_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b0) & (1'b0 == ap_block_pp1_stage2_subdone) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((icmp_ln1293_fu_1333_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((icmp_ln1293_fu_1333_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((icmp_ln1216_fu_1656_p2 == 1'd0) & (icmp_ln1214_fu_1613_p2 == 1'd1) & (leftRight_read_read_fu_234_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if (((icmp_ln1229_fu_1627_p2 == 1'd1) & (icmp_ln1214_fu_1613_p2 == 1'd0) & (leftRight_read_read_fu_234_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if (((icmp_ln1259_fu_1540_p2 == 1'd1) & (icmp_ln1257_fu_1505_p2 == 1'd1) & (leftRight_read_read_fu_234_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((icmp_ln1272_fu_1521_p2 == 1'd0) & (icmp_ln1257_fu_1505_p2 == 1'd0) & (leftRight_read_read_fu_234_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((icmp_ln1272_1_fu_1672_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((icmp_ln1272_1_fu_1672_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_pp7_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if (~((icmp_ln1259_1_fu_1762_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((icmp_ln1259_1_fu_1762_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_pp5_stage0 : begin
            if (~((icmp_ln1229_1_fu_1877_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if (((icmp_ln1229_1_fu_1877_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_pp6_stage0 : begin
            if (~((icmp_ln1216_1_fu_1996_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if (((icmp_ln1216_1_fu_1996_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_pp7_stage0 : begin
            if (~((icmp_ln9_fu_2079_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if (((icmp_ln9_fu_2079_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign GDn_points_address0 = zext_ln1176_fu_901_p1;

assign add89_fu_1531_p2 = (ap_phi_mux_left_bound_2_phi_fu_692_p4 + original_ppl);

assign add_ln1182_1_fu_947_p2 = (zext_ln1176_1_reg_2215 + zext_ln1182_fu_943_p1);

assign add_ln1182_fu_928_p2 = (ap_phi_mux_row_list_size_phi_fu_527_p4 + 31'd1);

assign add_ln1186_fu_980_p2 = ($signed(y_reg_2224) + $signed(25'd28554432));

assign add_ln11_fu_2145_p2 = (select_ln9_fu_2097_p3 + 2'd1);

assign add_ln1211_fu_1578_p2 = ($signed(ap_phi_mux_start_index_29_phi_fu_668_p4) + $signed(32'd4294967295));

assign add_ln1214_1_fu_1601_p2 = (ap_phi_mux_right_bound_2_phi_fu_704_p4 + 32'd1);

assign add_ln1214_2_fu_1607_p2 = (trunc_ln1214_fu_1597_p1 + 8'd1);

assign add_ln1214_fu_1592_p2 = (select_ln1209_fu_1584_p3 + original_ppl);

assign add_ln1220_fu_2014_p2 = (zext_ln1176_1_reg_2215 + zext_ln1220_1_fu_2010_p1);

assign add_ln1223_fu_1986_p2 = (temp_size_reg_817 + 9'd1);

assign add_ln1229_fu_1871_p2 = (indvar_flatten_reg_775 + 33'd1);

assign add_ln1231_fu_1976_p2 = (select_ln1229_fu_1900_p3 + 2'd1);

assign add_ln1233_1_fu_1959_p2 = (tmp_93_cast_fu_1943_p3 + zext_ln1233_2_fu_1955_p1);

assign add_ln1233_2_fu_1965_p2 = (empty_113_fu_1925_p2 + zext_ln1233_1_fu_1951_p1);

assign add_ln1233_fu_1920_p2 = (zext_ln1176_1_reg_2215 + zext_ln1233_fu_1916_p1);

assign add_ln1236_fu_1882_p2 = (ap_phi_mux_temp_size_1_phi_fu_790_p4 + 64'd1);

assign add_ln1242_fu_1452_p2 = ($signed(row_list_size_1_reg_546) + $signed(32'd4294967295));

assign add_ln1249_fu_1476_p2 = (ap_phi_mux_start_index_29_phi_fu_668_p4 + 32'd1);

assign add_ln1257_fu_1499_p2 = (sub_ln1257_fu_1490_p2 + 32'd1);

assign add_ln1259_fu_1756_p2 = (indvar_flatten13_reg_733 + 33'd1);

assign add_ln1261_fu_1861_p2 = (select_ln1259_fu_1785_p3 + 2'd1);

assign add_ln1263_1_fu_1844_p2 = (tmp_97_cast_fu_1828_p3 + zext_ln1263_2_fu_1840_p1);

assign add_ln1263_2_fu_1850_p2 = (empty_114_fu_1810_p2 + zext_ln1263_1_fu_1836_p1);

assign add_ln1263_fu_1805_p2 = (zext_ln1176_1_reg_2215 + zext_ln1263_fu_1801_p1);

assign add_ln1266_fu_1767_p2 = (ap_phi_mux_temp_size_2_phi_fu_748_p4 + 64'd1);

assign add_ln1276_fu_1689_p2 = (zext_ln1176_1_reg_2215 + zext_ln1276_1_fu_1685_p1);

assign add_ln1279_fu_1662_p2 = (temp_size_3_reg_713 + 9'd1);

assign add_ln1284_fu_1748_p2 = (p_read1 + 8'd1);

assign add_ln13_fu_2129_p2 = (tmp_102_cast_fu_2121_p1 + zext_ln13_fu_2125_p1);

assign add_ln341_fu_1050_p2 = ($signed(zext_ln341_fu_1046_p1) + $signed(9'd385));

assign add_ln9_1_fu_2073_p2 = (indvar_flatten21_reg_837 + 6'd1);

assign add_ln9_fu_2085_p2 = (ap_phi_mux_i_16_phi_fu_852_p4 + 5'd1);

assign and_ln1209_fu_1572_p2 = (icmp_ln1209_fu_1560_p2 & icmp_ln1209_1_fu_1566_p2);

assign and_ln1242_fu_1470_p2 = (icmp_ln1247_fu_1464_p2 & icmp_ln1242_fu_1458_p2);

assign and_ln1315_1_fu_1292_p2 = (grp_fu_886_p2 & and_ln1315_fu_1286_p2);

assign and_ln1315_fu_1286_p2 = (or_ln1315_fu_1278_p2 & or_ln1315_1_fu_1282_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp7_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp7_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

assign ap_return_0 = original_ppl;

assign ap_return_1 = add_ln1284_reg_2515;

assign apexZ0_read_read_fu_246_p2 = apexZ0;

assign bitcast_ln1315_fu_1227_p1 = conv2_i_reg_2329;

assign data_V_10_fu_1202_p1 = grp_fu_890_p1;

assign data_V_fu_1007_p1 = dc_reg_2278;

assign empty_113_fu_1925_p2 = add_ln1233_fu_1920_p2 << 11'd1;

assign empty_114_fu_1810_p2 = add_ln1263_fu_1805_p2 << 11'd1;

assign empty_fu_907_p1 = original_ppl[7:0];

assign grp_fu_886_p1 = p_Result_7_fu_1214_p3;

assign icmp_ln1180_1_fu_938_p2 = ((zext_ln1180_fu_934_p1 == GDn_points_load_reg_2229) ? 1'b1 : 1'b0);

assign icmp_ln1180_fu_922_p2 = (($signed(GDn_points_q0) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln11_fu_2091_p2 = ((j_18_reg_859 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln1209_1_fu_1566_p2 = (($signed(ap_phi_mux_start_value_28_phi_fu_680_p4) > $signed(64'd10)) ? 1'b1 : 1'b0);

assign icmp_ln1209_fu_1560_p2 = ((ap_phi_mux_start_index_29_phi_fu_668_p4 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1214_fu_1613_p2 = (($signed(add_ln1214_fu_1592_p2) > $signed(add_ln1214_1_fu_1601_p2)) ? 1'b1 : 1'b0);

assign icmp_ln1216_1_fu_1996_p2 = (($signed(zext_ln1216_1_fu_1992_p1) > $signed(right_bound_2_reg_700)) ? 1'b1 : 1'b0);

assign icmp_ln1216_fu_1656_p2 = (($signed(zext_ln1216_fu_1652_p1) > $signed(ap_phi_mux_right_bound_2_phi_fu_704_p4)) ? 1'b1 : 1'b0);

assign icmp_ln1229_1_fu_1877_p2 = ((indvar_flatten_reg_775 == tmp_37_reg_2471) ? 1'b1 : 1'b0);

assign icmp_ln1229_fu_1627_p2 = (($signed(zext_ln1229_fu_1623_p1) < $signed(add_ln1214_fu_1592_p2)) ? 1'b1 : 1'b0);

assign icmp_ln1231_fu_1894_p2 = ((z_reg_806 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln1242_fu_1458_p2 = ((ap_phi_mux_start_index_29_phi_fu_668_p4 != add_ln1242_fu_1452_p2) ? 1'b1 : 1'b0);

assign icmp_ln1247_fu_1464_p2 = (($signed(ap_phi_mux_start_value_28_phi_fu_680_p4) < $signed(64'd18446744073709551606)) ? 1'b1 : 1'b0);

assign icmp_ln1257_fu_1505_p2 = (($signed(add_ln1257_fu_1499_p2) < $signed(ap_phi_mux_left_bound_2_phi_fu_692_p4)) ? 1'b1 : 1'b0);

assign icmp_ln1259_1_fu_1762_p2 = ((indvar_flatten13_reg_733 == tmp_38_reg_2453) ? 1'b1 : 1'b0);

assign icmp_ln1259_fu_1540_p2 = (($signed(zext_ln1259_fu_1536_p1) < $signed(add89_fu_1531_p2)) ? 1'b1 : 1'b0);

assign icmp_ln1261_fu_1779_p2 = ((z_1_reg_764 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln1272_1_fu_1672_p2 = (($signed(zext_ln1272_1_fu_1668_p1) > $signed(select_ln1242_reg_2426)) ? 1'b1 : 1'b0);

assign icmp_ln1272_fu_1521_p2 = (($signed(zext_ln1272_fu_1517_p1) > $signed(select_ln1242_fu_1482_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1293_fu_1333_p2 = (($signed(zext_ln1293_fu_1329_p1) < $signed(row_list_size_1_reg_546)) ? 1'b1 : 1'b0);

assign icmp_ln1295_fu_1379_p2 = (($signed(sext_ln1295_fu_1375_p1) < $signed(lbVal_reg_652)) ? 1'b1 : 1'b0);

assign icmp_ln1301_fu_1431_p2 = (($signed(sext_ln1301_fu_1427_p1) < $signed(rbVal_reg_640)) ? 1'b1 : 1'b0);

assign icmp_ln1313_1_fu_1162_p2 = (($signed(zext_ln1313_fu_1158_p1) < $signed(row_list_size_1_reg_546)) ? 1'b1 : 1'b0);

assign icmp_ln1313_fu_1146_p2 = (($signed(row_list_size_1_reg_546) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1315_1_fu_1260_p2 = ((trunc_ln1315_1_fu_1240_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln1315_2_fu_1266_p2 = ((tmp_33_fu_1244_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln1315_3_fu_1272_p2 = ((trunc_ln1315_fu_1210_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln1315_fu_1254_p2 = ((tmp_32_fu_1230_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_2079_p2 = ((indvar_flatten21_reg_837 == 6'd32) ? 1'b1 : 1'b0);

assign init_patch1_address0 = init_patch1_addr_reg_2646;

assign init_patch1_d0 = temp_V_q0;

assign init_patch2_address0 = init_patch2_addr_reg_2651;

assign init_patch2_d0 = temp_V_q0;

assign init_patch3_address0 = init_patch3_addr_reg_2656;

assign init_patch3_d0 = temp_V_q0;

assign init_patch4_address0 = init_patch4_addr_reg_2661;

assign init_patch4_d0 = temp_V_q0;

assign init_patch_address0 = init_patch_addr_reg_2641;

assign init_patch_d0 = temp_V_q0;

assign isNeg_fu_1056_p3 = add_ln341_fu_1050_p2[32'd8];

assign j_16_fu_2049_p2 = (j_10_reg_828 + 8'd1);

assign j_17_fu_1888_p2 = (ap_phi_mux_j_11_phi_fu_800_p4 + 8'd1);

assign j_19_fu_1773_p2 = (ap_phi_mux_j_12_phi_fu_758_p4 + 8'd1);

assign j_1_fu_969_p2 = (j_reg_535 + 8'd1);

assign j_20_fu_1724_p2 = (j_13_reg_724 + 8'd1);

assign j_3_fu_1152_p2 = (ap_phi_mux_j_21_phi_fu_598_p4 + 8'd1);

assign j_5_fu_1323_p2 = (j_22_reg_629 + 8'd1);

assign j_6_fu_1647_p2 = (add_ln1214_2_fu_1607_p2 - empty_reg_2210);

assign j_7_fu_1619_p1 = select_ln1209_fu_1584_p3[7:0];

assign j_8_fu_1527_p1 = ap_phi_mux_left_bound_2_phi_fu_692_p4[7:0];

assign j_9_fu_1511_p2 = (trunc_ln1257_fu_1495_p1 + 8'd1);

assign lbVal_1_fu_1392_p3 = ((icmp_ln1295_fu_1379_p2[0:0] == 1'b1) ? sext_ln1295_fu_1375_p1 : lbVal_reg_652);

assign leftRight_read_read_fu_234_p2 = leftRight;

assign left_bound_1_fu_1385_p3 = ((icmp_ln1295_fu_1379_p2[0:0] == 1'b1) ? zext_ln1293_reg_2391 : left_bound_reg_605);

assign lftr_wideiv_cast_fu_975_p1 = row_list_size_reg_523;

assign mantissa_fu_1032_p4 = {{{{1'd1}, {tmp_64_fu_1028_p1}}}, {1'd0}};

assign or_ln1182_fu_958_p2 = (shl_ln1182_fu_952_p2 | 11'd1);

assign or_ln1220_1_fu_2038_p2 = (shl_ln1220_fu_2032_p2 | 11'd1);

assign or_ln1220_fu_2059_p2 = (tmp_39_reg_2601 | 10'd1);

assign or_ln1276_1_fu_1713_p2 = (shl_ln1276_fu_1707_p2 | 11'd1);

assign or_ln1276_fu_1734_p2 = (tmp_41_reg_2494 | 10'd1);

assign or_ln1315_1_fu_1282_p2 = (icmp_ln1315_3_reg_2355 | icmp_ln1315_2_reg_2350);

assign or_ln1315_fu_1278_p2 = (icmp_ln1315_reg_2340 | icmp_ln1315_1_reg_2345);

assign p_Result_7_fu_1214_p3 = {{1'd0}, {trunc_ln368_fu_1206_p1}};

assign p_Result_s_fu_1010_p3 = data_V_fu_1007_p1[32'd31];

assign r_V_9_fu_1096_p2 = zext_ln15_fu_1042_p1 << sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_1086_p1;

assign r_V_fu_1090_p2 = zext_ln15_fu_1042_p1 >> sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_1086_p1;

assign radii_address0 = zext_ln1176_fu_901_p1;

assign rbVal_1_fu_1419_p3 = ((tmp_60_fu_1411_p3[0:0] == 1'b1) ? sub_ln180_3_fu_1405_p2 : ret_33_fu_1400_p2);

assign rbVal_2_fu_1444_p3 = ((icmp_ln1301_fu_1431_p2[0:0] == 1'b1) ? sext_ln1301_fu_1427_p1 : rbVal_reg_640);

assign result_V_5_fu_1132_p2 = (64'd0 - val_fu_1124_p3);

assign result_V_fu_1138_p3 = ((p_Result_s_fu_1010_p3[0:0] == 1'b1) ? result_V_5_fu_1132_p2 : val_fu_1124_p3);

assign ret_32_fu_1348_p2 = ($signed(sext_ln215_27_fu_1344_p1) + $signed(rhs_18_reg_2380));

assign ret_33_fu_1400_p2 = ($signed(sext_ln215_27_fu_1344_p1) - $signed(rhs_18_reg_2380));

assign ret_fu_996_p2 = ($signed(sext_ln215_fu_990_p1) - $signed(sext_ln215_26_fu_993_p1));

assign rhs_18_fu_1319_p1 = trapezoid_edges_V_q0;

assign right_bound_3_fu_1437_p3 = ((icmp_ln1301_fu_1431_p2[0:0] == 1'b1) ? zext_ln1293_reg_2391 : right_bound_reg_617);

assign select_ln1209_fu_1584_p3 = ((and_ln1209_fu_1572_p2[0:0] == 1'b1) ? add_ln1211_fu_1578_p2 : ap_phi_mux_start_index_29_phi_fu_668_p4);

assign select_ln1229_1_fu_1908_p3 = ((icmp_ln1231_fu_1894_p2[0:0] == 1'b1) ? j_17_fu_1888_p2 : ap_phi_mux_j_11_phi_fu_800_p4);

assign select_ln1229_2_fu_1931_p3 = ((icmp_ln1231_fu_1894_p2[0:0] == 1'b1) ? add_ln1236_fu_1882_p2 : ap_phi_mux_temp_size_1_phi_fu_790_p4);

assign select_ln1229_fu_1900_p3 = ((icmp_ln1231_fu_1894_p2[0:0] == 1'b1) ? 2'd0 : z_reg_806);

assign select_ln1242_fu_1482_p3 = ((and_ln1242_fu_1470_p2[0:0] == 1'b1) ? add_ln1249_fu_1476_p2 : ap_phi_mux_start_index_29_phi_fu_668_p4);

assign select_ln1259_1_fu_1793_p3 = ((icmp_ln1261_fu_1779_p2[0:0] == 1'b1) ? j_19_fu_1773_p2 : ap_phi_mux_j_12_phi_fu_758_p4);

assign select_ln1259_2_fu_1816_p3 = ((icmp_ln1261_fu_1779_p2[0:0] == 1'b1) ? add_ln1266_fu_1767_p2 : ap_phi_mux_temp_size_2_phi_fu_748_p4);

assign select_ln1259_fu_1785_p3 = ((icmp_ln1261_fu_1779_p2[0:0] == 1'b1) ? 2'd0 : z_1_reg_764);

assign select_ln1315_2_fu_1312_p3 = ((and_ln1315_1_fu_1292_p2[0:0] == 1'b1) ? start_value_1_reg_2311_pp1_iter1_reg : p_x_assign_2_reg_582);

assign select_ln180_1_fu_1367_p3 = ((tmp_59_fu_1359_p3[0:0] == 1'b1) ? sub_ln180_2_fu_1353_p2 : ret_32_fu_1348_p2);

assign select_ln180_fu_1195_p3 = ((tmp_58_reg_2319[0:0] == 1'b1) ? sub_ln180_fu_1190_p2 : start_value_1_reg_2311);

assign select_ln9_1_fu_2105_p3 = ((icmp_ln11_fu_2091_p2[0:0] == 1'b1) ? add_ln9_fu_2085_p2 : ap_phi_mux_i_16_phi_fu_852_p4);

assign select_ln9_fu_2097_p3 = ((icmp_ln11_fu_2091_p2[0:0] == 1'b1) ? 2'd0 : j_18_reg_859);

assign sext_ln1295_fu_1375_p1 = $signed(select_ln180_1_fu_1367_p3);

assign sext_ln1301_fu_1427_p1 = $signed(rbVal_1_fu_1419_p3);

assign sext_ln1311_fu_1070_p1 = $signed(sub_ln1311_fu_1064_p2);

assign sext_ln1422_fu_1002_p1 = $signed(ret_fu_996_p2);

assign sext_ln215_26_fu_993_p0 = apexZ0;

assign sext_ln215_26_fu_993_p1 = sext_ln215_26_fu_993_p0;

assign sext_ln215_27_fu_1344_p1 = $signed(row_list_V_q0);

assign sext_ln215_fu_990_p1 = $signed(z_top);

assign sext_ln534_fu_1173_p1 = $signed(row_list_V_q0);

assign sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_1086_p1 = $unsigned(sh_prom_i_i_i_i_i_cast_cast_cast_fu_1082_p1);

assign sh_prom_i_i_i_i_i_cast_cast_cast_fu_1082_p1 = $signed(ush_fu_1074_p3);

assign shl_ln1182_fu_952_p2 = add_ln1182_1_fu_947_p2 << 11'd1;

assign shl_ln1220_fu_2032_p2 = add_ln1220_fu_2014_p2 << 11'd1;

assign shl_ln1276_fu_1707_p2 = add_ln1276_fu_1689_p2 << 11'd1;

assign start_index_2_fu_1305_p3 = ((and_ln1315_1_fu_1292_p2[0:0] == 1'b1) ? zext_ln1313_reg_2297_pp1_iter1_reg : start_index_reg_570);

assign start_value_1_fu_1177_p2 = ($signed(sext_ln534_fu_1173_p1) - $signed(result_V_reg_2283));

assign start_value_2_fu_1298_p3 = ((and_ln1315_1_fu_1292_p2[0:0] == 1'b1) ? start_value_1_reg_2311_pp1_iter1_reg : start_value_reg_558);

assign sub_ln1229_fu_1633_p2 = (add_ln1214_fu_1592_p2 - zext_ln1229_fu_1623_p1);

assign sub_ln1257_fu_1490_p2 = (select_ln1242_fu_1482_p3 - original_ppl);

assign sub_ln1259_fu_1546_p2 = (add89_fu_1531_p2 - zext_ln1259_fu_1536_p1);

assign sub_ln1311_fu_1064_p2 = (8'd127 - tmp_63_fu_1018_p4);

assign sub_ln180_2_fu_1353_p2 = (33'd0 - ret_32_fu_1348_p2);

assign sub_ln180_3_fu_1405_p2 = (33'd0 - ret_33_fu_1400_p2);

assign sub_ln180_fu_1190_p2 = (64'd0 - start_value_1_reg_2311);

assign tmp_102_cast_fu_2121_p1 = tmp_43_fu_2113_p3;

assign tmp_32_fu_1230_p4 = {{bitcast_ln1315_fu_1227_p1[62:52]}};

assign tmp_33_fu_1244_p4 = {{data_V_10_fu_1202_p1[62:52]}};

assign tmp_36_fu_1114_p4 = {{r_V_9_fu_1096_p2[87:24]}};

assign tmp_37_fu_1639_p3 = {{sub_ln1229_fu_1633_p2}, {1'd0}};

assign tmp_38_fu_1552_p3 = {{sub_ln1259_fu_1546_p2}, {1'd0}};

assign tmp_39_fu_2002_p3 = {{temp_size_reg_817}, {1'd0}};

assign tmp_40_fu_2064_p3 = {{54'd0}, {or_ln1220_fu_2059_p2}};

assign tmp_41_fu_1677_p3 = {{temp_size_3_reg_713}, {1'd0}};

assign tmp_42_fu_1739_p3 = {{54'd0}, {or_ln1276_fu_1734_p2}};

assign tmp_43_fu_2113_p3 = {{select_ln9_1_fu_2105_p3}, {1'd0}};

assign tmp_59_fu_1359_p3 = ret_32_fu_1348_p2[32'd32];

assign tmp_60_fu_1411_p3 = ret_33_fu_1400_p2[32'd32];

assign tmp_61_fu_2019_p3 = {{add_ln1220_fu_2014_p2}, {1'd0}};

assign tmp_62_fu_1694_p3 = {{add_ln1276_fu_1689_p2}, {1'd0}};

assign tmp_63_fu_1018_p4 = {{data_V_fu_1007_p1[30:23]}};

assign tmp_64_fu_1028_p1 = data_V_fu_1007_p1[22:0];

assign tmp_93_cast_fu_1943_p3 = {{trunc_ln1233_fu_1939_p1}, {1'd0}};

assign tmp_97_cast_fu_1828_p3 = {{trunc_ln1263_fu_1824_p1}, {1'd0}};

assign tmp_fu_1102_p3 = r_V_fu_1090_p2[32'd24];

assign tmp_s_fu_911_p3 = {{i}, {7'd0}};

assign trapezoid_edges_V_address0 = zext_ln1176_reg_2166;

assign trunc_ln1214_fu_1597_p1 = ap_phi_mux_right_bound_2_phi_fu_704_p4[7:0];

assign trunc_ln1233_fu_1939_p1 = select_ln1229_2_fu_1931_p3[6:0];

assign trunc_ln1257_fu_1495_p1 = sub_ln1257_fu_1490_p2[7:0];

assign trunc_ln1263_fu_1824_p1 = select_ln1259_2_fu_1816_p3[6:0];

assign trunc_ln1315_1_fu_1240_p1 = bitcast_ln1315_fu_1227_p1[51:0];

assign trunc_ln1315_fu_1210_p1 = data_V_10_fu_1202_p1[51:0];

assign trunc_ln13_fu_1753_p1 = p_read1[2:0];

assign trunc_ln368_fu_1206_p1 = data_V_10_fu_1202_p1[62:0];

assign ush_fu_1074_p3 = ((isNeg_fu_1056_p3[0:0] == 1'b1) ? sext_ln1311_fu_1070_p1 : add_ln341_fu_1050_p2);

assign val_fu_1124_p3 = ((isNeg_fu_1056_p3[0:0] == 1'b1) ? zext_ln662_fu_1110_p1 : tmp_36_fu_1114_p4);

assign zext_ln1176_1_fu_918_p1 = tmp_s_fu_911_p3;

assign zext_ln1176_fu_901_p1 = i;

assign zext_ln1180_fu_934_p1 = ap_phi_mux_row_list_size_phi_fu_527_p4;

assign zext_ln1182_1_fu_964_p1 = or_ln1182_fu_958_p2;

assign zext_ln1182_fu_943_p1 = j_reg_535;

assign zext_ln1186_fu_985_p1 = add_ln1186_fu_980_p2;

assign zext_ln1216_1_fu_1992_p1 = j_10_reg_828;

assign zext_ln1216_fu_1652_p1 = j_6_fu_1647_p2;

assign zext_ln1220_1_fu_2010_p1 = j_10_reg_828;

assign zext_ln1220_2_fu_2027_p1 = tmp_61_fu_2019_p3;

assign zext_ln1220_3_fu_2044_p1 = or_ln1220_1_fu_2038_p2;

assign zext_ln1220_fu_2055_p1 = tmp_39_reg_2601;

assign zext_ln1229_fu_1623_p1 = j_7_fu_1619_p1;

assign zext_ln1233_1_fu_1951_p1 = select_ln1229_fu_1900_p3;

assign zext_ln1233_2_fu_1955_p1 = select_ln1229_fu_1900_p3;

assign zext_ln1233_3_fu_1982_p1 = add_ln1233_1_reg_2577;

assign zext_ln1233_4_fu_1971_p1 = add_ln1233_2_fu_1965_p2;

assign zext_ln1233_fu_1916_p1 = select_ln1229_1_fu_1908_p3;

assign zext_ln1259_fu_1536_p1 = j_8_fu_1527_p1;

assign zext_ln1263_1_fu_1836_p1 = select_ln1259_fu_1785_p3;

assign zext_ln1263_2_fu_1840_p1 = select_ln1259_fu_1785_p3;

assign zext_ln1263_3_fu_1867_p1 = add_ln1263_1_reg_2543;

assign zext_ln1263_4_fu_1856_p1 = add_ln1263_2_fu_1850_p2;

assign zext_ln1263_fu_1801_p1 = select_ln1259_1_fu_1793_p3;

assign zext_ln1272_1_fu_1668_p1 = j_13_reg_724;

assign zext_ln1272_fu_1517_p1 = j_9_fu_1511_p2;

assign zext_ln1276_1_fu_1685_p1 = j_13_reg_724;

assign zext_ln1276_2_fu_1702_p1 = tmp_62_fu_1694_p3;

assign zext_ln1276_3_fu_1719_p1 = or_ln1276_1_fu_1713_p2;

assign zext_ln1276_fu_1730_p1 = tmp_41_reg_2494;

assign zext_ln1293_fu_1329_p1 = j_22_reg_629;

assign zext_ln1295_fu_1339_p1 = j_22_reg_629;

assign zext_ln1313_fu_1158_p1 = ap_phi_mux_j_21_phi_fu_598_p4;

assign zext_ln1315_fu_1168_p1 = ap_phi_mux_j_21_phi_fu_598_p4;

assign zext_ln13_1_fu_2135_p1 = add_ln13_fu_2129_p2;

assign zext_ln13_fu_2125_p1 = select_ln9_fu_2097_p3;

assign zext_ln15_fu_1042_p1 = mantissa_fu_1032_p4;

assign zext_ln341_fu_1046_p1 = tmp_63_fu_1018_p4;

assign zext_ln662_fu_1110_p1 = tmp_fu_1102_p3;

always @ (posedge ap_clk) begin
    zext_ln1176_reg_2166[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln1176_1_reg_2215[6:0] <= 7'b0000000;
    zext_ln1176_1_reg_2215[10] <= 1'b0;
    zext_ln1313_reg_2297[31:8] <= 24'b000000000000000000000000;
    zext_ln1313_reg_2297_pp1_iter1_reg[31:8] <= 24'b000000000000000000000000;
    rhs_18_reg_2380[32:26] <= 7'b0000000;
    zext_ln1293_reg_2391[31:8] <= 24'b000000000000000000000000;
    tmp_38_reg_2453[0] <= 1'b0;
    tmp_37_reg_2471[0] <= 1'b0;
    tmp_41_reg_2494[0] <= 1'b0;
    tmp_39_reg_2601[0] <= 1'b0;
end

endmodule //makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine8
