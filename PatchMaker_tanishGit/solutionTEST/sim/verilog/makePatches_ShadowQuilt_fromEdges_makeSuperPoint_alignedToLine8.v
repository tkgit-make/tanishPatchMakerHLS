// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine8 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        GDn_points_address0,
        GDn_points_ce0,
        GDn_points_q0,
        i,
        z_top,
        apexZ0,
        original_ppl,
        leftRight,
        init_patch_address0,
        init_patch_ce0,
        init_patch_we0,
        init_patch_d0,
        init_patch1_address0,
        init_patch1_ce0,
        init_patch1_we0,
        init_patch1_d0,
        init_patch2_address0,
        init_patch2_ce0,
        init_patch2_we0,
        init_patch2_d0,
        init_patch3_address0,
        init_patch3_ce0,
        init_patch3_we0,
        init_patch3_d0,
        init_patch4_address0,
        init_patch4_ce0,
        init_patch4_we0,
        init_patch4_d0,
        p_read1,
        GDarrayDecoded_address0,
        GDarrayDecoded_ce0,
        GDarrayDecoded_q0,
        GDarrayDecoded_address1,
        GDarrayDecoded_ce1,
        GDarrayDecoded_q1,
        temp_V_address0,
        temp_V_ce0,
        temp_V_we0,
        temp_V_d0,
        temp_V_q0,
        temp_V_address1,
        temp_V_ce1,
        temp_V_we1,
        temp_V_d1,
        ap_return_0,
        ap_return_1
);

parameter    ap_ST_fsm_state1 = 121'd1;
parameter    ap_ST_fsm_state2 = 121'd2;
parameter    ap_ST_fsm_state3 = 121'd4;
parameter    ap_ST_fsm_state4 = 121'd8;
parameter    ap_ST_fsm_pp0_stage0 = 121'd16;
parameter    ap_ST_fsm_state10 = 121'd32;
parameter    ap_ST_fsm_state11 = 121'd64;
parameter    ap_ST_fsm_state12 = 121'd128;
parameter    ap_ST_fsm_state13 = 121'd256;
parameter    ap_ST_fsm_state14 = 121'd512;
parameter    ap_ST_fsm_state15 = 121'd1024;
parameter    ap_ST_fsm_state16 = 121'd2048;
parameter    ap_ST_fsm_state17 = 121'd4096;
parameter    ap_ST_fsm_state18 = 121'd8192;
parameter    ap_ST_fsm_state19 = 121'd16384;
parameter    ap_ST_fsm_state20 = 121'd32768;
parameter    ap_ST_fsm_state21 = 121'd65536;
parameter    ap_ST_fsm_state22 = 121'd131072;
parameter    ap_ST_fsm_state23 = 121'd262144;
parameter    ap_ST_fsm_state24 = 121'd524288;
parameter    ap_ST_fsm_state25 = 121'd1048576;
parameter    ap_ST_fsm_state26 = 121'd2097152;
parameter    ap_ST_fsm_state27 = 121'd4194304;
parameter    ap_ST_fsm_state28 = 121'd8388608;
parameter    ap_ST_fsm_state29 = 121'd16777216;
parameter    ap_ST_fsm_state30 = 121'd33554432;
parameter    ap_ST_fsm_state31 = 121'd67108864;
parameter    ap_ST_fsm_state32 = 121'd134217728;
parameter    ap_ST_fsm_state33 = 121'd268435456;
parameter    ap_ST_fsm_state34 = 121'd536870912;
parameter    ap_ST_fsm_state35 = 121'd1073741824;
parameter    ap_ST_fsm_state36 = 121'd2147483648;
parameter    ap_ST_fsm_state37 = 121'd4294967296;
parameter    ap_ST_fsm_state38 = 121'd8589934592;
parameter    ap_ST_fsm_state39 = 121'd17179869184;
parameter    ap_ST_fsm_state40 = 121'd34359738368;
parameter    ap_ST_fsm_state41 = 121'd68719476736;
parameter    ap_ST_fsm_state42 = 121'd137438953472;
parameter    ap_ST_fsm_state43 = 121'd274877906944;
parameter    ap_ST_fsm_state44 = 121'd549755813888;
parameter    ap_ST_fsm_state45 = 121'd1099511627776;
parameter    ap_ST_fsm_state46 = 121'd2199023255552;
parameter    ap_ST_fsm_state47 = 121'd4398046511104;
parameter    ap_ST_fsm_state48 = 121'd8796093022208;
parameter    ap_ST_fsm_state49 = 121'd17592186044416;
parameter    ap_ST_fsm_state50 = 121'd35184372088832;
parameter    ap_ST_fsm_state51 = 121'd70368744177664;
parameter    ap_ST_fsm_state52 = 121'd140737488355328;
parameter    ap_ST_fsm_state53 = 121'd281474976710656;
parameter    ap_ST_fsm_state54 = 121'd562949953421312;
parameter    ap_ST_fsm_state55 = 121'd1125899906842624;
parameter    ap_ST_fsm_state56 = 121'd2251799813685248;
parameter    ap_ST_fsm_state57 = 121'd4503599627370496;
parameter    ap_ST_fsm_state58 = 121'd9007199254740992;
parameter    ap_ST_fsm_state59 = 121'd18014398509481984;
parameter    ap_ST_fsm_state60 = 121'd36028797018963968;
parameter    ap_ST_fsm_state61 = 121'd72057594037927936;
parameter    ap_ST_fsm_state62 = 121'd144115188075855872;
parameter    ap_ST_fsm_state63 = 121'd288230376151711744;
parameter    ap_ST_fsm_state64 = 121'd576460752303423488;
parameter    ap_ST_fsm_state65 = 121'd1152921504606846976;
parameter    ap_ST_fsm_state66 = 121'd2305843009213693952;
parameter    ap_ST_fsm_state67 = 121'd4611686018427387904;
parameter    ap_ST_fsm_state68 = 121'd9223372036854775808;
parameter    ap_ST_fsm_state69 = 121'd18446744073709551616;
parameter    ap_ST_fsm_state70 = 121'd36893488147419103232;
parameter    ap_ST_fsm_state71 = 121'd73786976294838206464;
parameter    ap_ST_fsm_state72 = 121'd147573952589676412928;
parameter    ap_ST_fsm_state73 = 121'd295147905179352825856;
parameter    ap_ST_fsm_state74 = 121'd590295810358705651712;
parameter    ap_ST_fsm_state75 = 121'd1180591620717411303424;
parameter    ap_ST_fsm_state76 = 121'd2361183241434822606848;
parameter    ap_ST_fsm_state77 = 121'd4722366482869645213696;
parameter    ap_ST_fsm_state78 = 121'd9444732965739290427392;
parameter    ap_ST_fsm_state79 = 121'd18889465931478580854784;
parameter    ap_ST_fsm_state80 = 121'd37778931862957161709568;
parameter    ap_ST_fsm_state81 = 121'd75557863725914323419136;
parameter    ap_ST_fsm_state82 = 121'd151115727451828646838272;
parameter    ap_ST_fsm_pp1_stage0 = 121'd302231454903657293676544;
parameter    ap_ST_fsm_pp1_stage1 = 121'd604462909807314587353088;
parameter    ap_ST_fsm_pp1_stage2 = 121'd1208925819614629174706176;
parameter    ap_ST_fsm_pp1_stage3 = 121'd2417851639229258349412352;
parameter    ap_ST_fsm_pp1_stage4 = 121'd4835703278458516698824704;
parameter    ap_ST_fsm_pp1_stage5 = 121'd9671406556917033397649408;
parameter    ap_ST_fsm_pp1_stage6 = 121'd19342813113834066795298816;
parameter    ap_ST_fsm_pp1_stage7 = 121'd38685626227668133590597632;
parameter    ap_ST_fsm_pp1_stage8 = 121'd77371252455336267181195264;
parameter    ap_ST_fsm_pp1_stage9 = 121'd154742504910672534362390528;
parameter    ap_ST_fsm_pp1_stage10 = 121'd309485009821345068724781056;
parameter    ap_ST_fsm_state105 = 121'd618970019642690137449562112;
parameter    ap_ST_fsm_state106 = 121'd1237940039285380274899124224;
parameter    ap_ST_fsm_pp2_stage0 = 121'd2475880078570760549798248448;
parameter    ap_ST_fsm_state114 = 121'd4951760157141521099596496896;
parameter    ap_ST_fsm_state115 = 121'd9903520314283042199192993792;
parameter    ap_ST_fsm_state116 = 121'd19807040628566084398385987584;
parameter    ap_ST_fsm_state117 = 121'd39614081257132168796771975168;
parameter    ap_ST_fsm_state118 = 121'd79228162514264337593543950336;
parameter    ap_ST_fsm_state119 = 121'd158456325028528675187087900672;
parameter    ap_ST_fsm_state120 = 121'd316912650057057350374175801344;
parameter    ap_ST_fsm_state121 = 121'd633825300114114700748351602688;
parameter    ap_ST_fsm_pp3_stage0 = 121'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state127 = 121'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state128 = 121'd5070602400912917605986812821504;
parameter    ap_ST_fsm_pp4_stage0 = 121'd10141204801825835211973625643008;
parameter    ap_ST_fsm_pp4_stage1 = 121'd20282409603651670423947251286016;
parameter    ap_ST_fsm_pp4_stage2 = 121'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state138 = 121'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state139 = 121'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state140 = 121'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state141 = 121'd649037107316853453566312041152512;
parameter    ap_ST_fsm_pp5_stage0 = 121'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_pp5_stage1 = 121'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_pp5_stage2 = 121'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state151 = 121'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state152 = 121'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_pp6_stage0 = 121'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state158 = 121'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state159 = 121'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_pp7_stage0 = 121'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_pp7_stage1 = 121'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state167 = 121'd1329227995784915872903807060280344576;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] GDn_points_address0;
output   GDn_points_ce0;
input  [31:0] GDn_points_q0;
input  [2:0] i;
input  [31:0] z_top;
input  [31:0] apexZ0;
input  [31:0] original_ppl;
input  [0:0] leftRight;
output  [4:0] init_patch_address0;
output   init_patch_ce0;
output   init_patch_we0;
output  [31:0] init_patch_d0;
output  [4:0] init_patch1_address0;
output   init_patch1_ce0;
output   init_patch1_we0;
output  [31:0] init_patch1_d0;
output  [4:0] init_patch2_address0;
output   init_patch2_ce0;
output   init_patch2_we0;
output  [31:0] init_patch2_d0;
output  [4:0] init_patch3_address0;
output   init_patch3_ce0;
output   init_patch3_we0;
output  [31:0] init_patch3_d0;
output  [4:0] init_patch4_address0;
output   init_patch4_ce0;
output   init_patch4_we0;
output  [31:0] init_patch4_d0;
input  [7:0] p_read1;
output  [10:0] GDarrayDecoded_address0;
output   GDarrayDecoded_ce0;
input  [31:0] GDarrayDecoded_q0;
output  [10:0] GDarrayDecoded_address1;
output   GDarrayDecoded_ce1;
input  [31:0] GDarrayDecoded_q1;
output  [7:0] temp_V_address0;
output   temp_V_ce0;
output   temp_V_we0;
output  [31:0] temp_V_d0;
input  [31:0] temp_V_q0;
output  [7:0] temp_V_address1;
output   temp_V_ce1;
output   temp_V_we1;
output  [31:0] temp_V_d1;
output  [31:0] ap_return_0;
output  [7:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg GDn_points_ce0;
reg init_patch_ce0;
reg init_patch_we0;
reg init_patch1_ce0;
reg init_patch1_we0;
reg init_patch2_ce0;
reg init_patch2_we0;
reg init_patch3_ce0;
reg init_patch3_we0;
reg init_patch4_ce0;
reg init_patch4_we0;
reg[10:0] GDarrayDecoded_address0;
reg GDarrayDecoded_ce0;
reg[10:0] GDarrayDecoded_address1;
reg GDarrayDecoded_ce1;
reg[7:0] temp_V_address0;
reg temp_V_ce0;
reg temp_V_we0;
reg[31:0] temp_V_d0;
reg[7:0] temp_V_address1;
reg temp_V_ce1;
reg temp_V_we1;

(* fsm_encoding = "none" *) reg   [120:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] radii_address0;
reg    radii_ce0;
wire   [24:0] radii_q0;
wire   [2:0] trapezoid_edges_V_address0;
reg    trapezoid_edges_V_ce0;
wire   [25:0] trapezoid_edges_V_q0;
reg   [30:0] row_list_size_reg_513;
reg   [30:0] row_list_size_reg_513_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state8_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
reg   [30:0] row_list_size_reg_513_pp0_iter2_reg;
reg   [30:0] row_list_size_reg_513_pp0_iter3_reg;
reg   [7:0] j_reg_525;
reg   [63:0] start_value_reg_548;
reg   [31:0] start_index_reg_560;
reg   [63:0] p_x_assign_2_reg_572;
reg   [7:0] j_21_reg_584;
reg   [31:0] left_bound_reg_595;
reg   [31:0] right_bound_reg_607;
reg   [7:0] j_22_reg_619;
reg   [63:0] rbVal_reg_630;
reg   [63:0] lbVal_reg_642;
reg   [8:0] temp_size_3_reg_705;
reg   [8:0] temp_size_3_reg_705_pp3_iter1_reg;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state122_pp3_stage0_iter0;
wire    ap_block_state123_pp3_stage0_iter1;
wire    ap_block_state124_pp3_stage0_iter2;
wire    ap_block_state125_pp3_stage0_iter3;
wire    ap_block_state126_pp3_stage0_iter4;
wire    ap_block_pp3_stage0_11001;
reg   [8:0] temp_size_3_reg_705_pp3_iter2_reg;
reg   [7:0] j_13_reg_717;
reg   [32:0] indvar_flatten13_reg_726;
reg   [63:0] temp_size_2_reg_737;
reg   [7:0] j_12_reg_749;
reg   [1:0] z_1_reg_759;
reg   [32:0] indvar_flatten_reg_771;
reg   [7:0] j_11_reg_783;
reg   [1:0] z_reg_793;
reg   [63:0] temp_size_1_reg_804;
reg   [7:0] j_10_reg_816;
reg   [8:0] temp_size_reg_825;
reg   [5:0] indvar_flatten21_reg_837;
reg   [4:0] i_16_reg_848;
reg   [1:0] j_18_reg_860;
reg   [31:0] reg_895;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] icmp_ln1180_1_reg_2175;
reg   [0:0] icmp_ln1180_1_reg_2175_pp0_iter2_reg;
reg    ap_enable_reg_pp3_iter3;
reg   [0:0] icmp_ln1272_1_reg_2607;
reg   [0:0] icmp_ln1272_1_reg_2607_pp3_iter2_reg;
wire    ap_CS_fsm_pp4_stage1;
reg    ap_enable_reg_pp4_iter2;
wire    ap_block_state130_pp4_stage1_iter0;
wire    ap_block_state133_pp4_stage1_iter1;
wire    ap_block_state136_pp4_stage1_iter2;
wire    ap_block_pp4_stage1_11001;
reg   [0:0] icmp_ln1259_1_reg_2652;
reg   [0:0] icmp_ln1259_1_reg_2652_pp4_iter2_reg;
wire    ap_CS_fsm_pp5_stage1;
reg    ap_enable_reg_pp5_iter2;
wire    ap_block_state143_pp5_stage1_iter0;
wire    ap_block_state146_pp5_stage1_iter1;
wire    ap_block_state149_pp5_stage1_iter2;
wire    ap_block_pp5_stage1_11001;
reg   [0:0] icmp_ln1229_1_reg_2776;
reg   [0:0] icmp_ln1229_1_reg_2776_pp5_iter2_reg;
reg    ap_enable_reg_pp6_iter3;
wire    ap_block_state153_pp6_stage0_iter0;
wire    ap_block_state154_pp6_stage0_iter1;
wire    ap_block_state155_pp6_stage0_iter2;
wire    ap_block_state156_pp6_stage0_iter3;
wire    ap_block_state157_pp6_stage0_iter4;
wire    ap_block_pp6_stage0_11001;
reg   [0:0] icmp_ln1216_1_reg_2862;
reg   [0:0] icmp_ln1216_1_reg_2862_pp6_iter2_reg;
wire   [31:0] grp_fu_884_p1;
reg   [31:0] reg_903;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state55;
wire   [31:0] row_list_V_q0;
reg   [31:0] reg_910;
wire    ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state84_pp1_stage1_iter0;
wire    ap_block_state95_pp1_stage1_iter1;
wire    ap_block_pp1_stage1_11001;
reg   [0:0] icmp_ln1313_1_reg_2312;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_state107_pp2_stage0_iter0;
wire    ap_block_state108_pp2_stage0_iter1;
wire    ap_block_state109_pp2_stage0_iter2;
wire    ap_block_state110_pp2_stage0_iter3;
wire    ap_block_state111_pp2_stage0_iter4;
wire    ap_block_state112_pp2_stage0_iter5;
wire    ap_block_state113_pp2_stage0_iter6;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln1293_reg_2427;
reg   [31:0] reg_914;
wire   [63:0] zext_ln1176_fu_920_p1;
reg   [63:0] zext_ln1176_reg_2095;
reg   [31:0] GDn_points_load_reg_2106;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln1180_fu_925_p2;
reg   [0:0] icmp_ln1180_reg_2118;
wire    ap_CS_fsm_state4;
wire   [0:0] leftRight_read_read_fu_234_p2;
wire  signed [31:0] apexZ0_read_read_fu_246_p2;
wire   [7:0] empty_fu_930_p1;
reg   [7:0] empty_reg_2151;
wire   [10:0] zext_ln1176_1_fu_941_p1;
reg   [10:0] zext_ln1176_1_reg_2156;
reg   [24:0] y_reg_2165;
wire   [30:0] add_ln1182_fu_945_p2;
reg   [30:0] add_ln1182_reg_2170;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln1180_1_fu_955_p2;
reg   [0:0] icmp_ln1180_1_reg_2175_pp0_iter1_reg;
reg   [0:0] icmp_ln1180_1_reg_2175_pp0_iter3_reg;
wire   [10:0] add_ln1182_1_fu_964_p2;
reg   [10:0] add_ln1182_1_reg_2179;
wire   [7:0] j_1_fu_969_p2;
wire   [24:0] add_ln1186_fu_996_p2;
reg   [24:0] add_ln1186_reg_2194;
wire    ap_CS_fsm_state10;
wire   [63:0] zext_ln1186_fu_1001_p1;
wire    ap_CS_fsm_state11;
wire   [32:0] ret_fu_1011_p2;
reg   [32:0] ret_reg_2204;
wire    ap_CS_fsm_state40;
wire  signed [63:0] sext_ln1422_fu_1017_p1;
wire    ap_CS_fsm_state41;
wire   [31:0] grp_fu_879_p2;
reg   [31:0] i_op_assign_reg_2214;
wire   [31:0] grp_fu_875_p2;
reg   [31:0] i_op_assign_1_reg_2219;
wire   [31:0] grp_fu_871_p2;
reg   [31:0] dc_reg_2224;
wire    ap_CS_fsm_state68;
reg   [0:0] p_Result_s_reg_2229;
wire    ap_CS_fsm_state69;
wire   [22:0] tmp_64_fu_1042_p1;
reg   [22:0] tmp_64_reg_2234;
wire   [8:0] add_ln341_fu_1050_p2;
reg   [8:0] add_ln341_reg_2239;
reg   [0:0] isNeg_reg_2244;
wire   [7:0] sub_ln1311_fu_1064_p2;
reg   [7:0] sub_ln1311_reg_2250;
wire   [8:0] ush_fu_1073_p3;
reg   [8:0] ush_reg_2255;
wire    ap_CS_fsm_state70;
wire   [110:0] zext_ln15_fu_1088_p1;
wire    ap_CS_fsm_state71;
wire   [110:0] sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_1095_p1;
reg   [0:0] tmp_reg_2272;
wire    ap_CS_fsm_state77;
reg   [63:0] tmp_36_reg_2277;
wire   [63:0] val_fu_1132_p3;
reg   [63:0] val_reg_2282;
wire    ap_CS_fsm_state78;
wire   [63:0] grp_fu_1138_p2;
reg   [63:0] result_V_5_reg_2288;
wire    ap_CS_fsm_state81;
wire   [0:0] icmp_ln1313_fu_1143_p2;
reg   [0:0] icmp_ln1313_reg_2293;
wire   [63:0] result_V_fu_1149_p3;
reg   [63:0] result_V_reg_2297;
wire    ap_CS_fsm_state82;
wire   [7:0] j_3_fu_1154_p2;
reg   [7:0] j_3_reg_2302;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state83_pp1_stage0_iter0;
wire    ap_block_state94_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [31:0] zext_ln1313_fu_1160_p1;
reg   [31:0] zext_ln1313_reg_2307;
reg   [31:0] zext_ln1313_reg_2307_pp1_iter1_reg;
wire   [0:0] icmp_ln1313_1_fu_1164_p2;
reg   [0:0] icmp_ln1313_1_reg_2312_pp1_iter1_reg;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_state85_pp1_stage2_iter0;
wire    ap_block_state96_pp1_stage2_iter1;
wire    ap_block_pp1_stage2_11001;
wire   [63:0] grp_fu_1179_p2;
reg   [63:0] start_value_1_reg_2326;
wire    ap_CS_fsm_pp1_stage4;
wire    ap_block_state87_pp1_stage4_iter0;
wire    ap_block_state98_pp1_stage4_iter1;
wire    ap_block_pp1_stage4_11001;
reg   [63:0] start_value_1_reg_2326_pp1_iter1_reg;
reg   [0:0] tmp_58_reg_2334;
wire   [63:0] grp_fu_1192_p2;
reg   [63:0] sub_ln180_reg_2339;
wire    ap_CS_fsm_pp1_stage7;
wire    ap_block_state90_pp1_stage7_iter0;
wire    ap_block_state101_pp1_stage7_iter1;
wire    ap_block_pp1_stage7_11001;
wire   [63:0] select_ln180_fu_1197_p3;
reg   [63:0] select_ln180_reg_2344;
wire    ap_CS_fsm_pp1_stage8;
wire    ap_block_state91_pp1_stage8_iter0;
wire    ap_block_state102_pp1_stage8_iter1;
wire    ap_block_pp1_stage8_11001;
wire   [63:0] grp_fu_891_p1;
reg   [63:0] conv2_i_reg_2349;
reg    ap_enable_reg_pp1_iter1;
reg   [63:0] dc_9_reg_2355;
wire    ap_CS_fsm_pp1_stage5;
wire    ap_block_state88_pp1_stage5_iter0;
wire    ap_block_state99_pp1_stage5_iter1;
wire    ap_block_pp1_stage5_11001;
wire    ap_CS_fsm_pp1_stage6;
wire    ap_block_state89_pp1_stage6_iter0;
wire    ap_block_state100_pp1_stage6_iter1;
wire    ap_block_pp1_stage6_11001;
wire   [0:0] icmp_ln1315_fu_1253_p2;
reg   [0:0] icmp_ln1315_reg_2365;
wire   [0:0] icmp_ln1315_1_fu_1259_p2;
reg   [0:0] icmp_ln1315_1_reg_2370;
wire   [0:0] icmp_ln1315_2_fu_1265_p2;
reg   [0:0] icmp_ln1315_2_reg_2375;
wire   [0:0] icmp_ln1315_3_fu_1271_p2;
reg   [0:0] icmp_ln1315_3_reg_2380;
wire   [0:0] grp_fu_887_p2;
reg   [0:0] tmp_34_reg_2385;
wire    ap_CS_fsm_pp1_stage9;
wire    ap_block_state92_pp1_stage9_iter0;
wire    ap_block_state103_pp1_stage9_iter1;
wire    ap_block_pp1_stage9_11001;
wire   [63:0] start_value_2_fu_1296_p3;
wire    ap_CS_fsm_pp1_stage10;
wire    ap_block_state93_pp1_stage10_iter0;
wire    ap_block_state104_pp1_stage10_iter1;
wire    ap_block_pp1_stage10_11001;
wire   [31:0] start_index_2_fu_1303_p3;
wire   [63:0] select_ln1315_2_fu_1310_p3;
wire    ap_CS_fsm_state105;
wire   [32:0] rhs_18_fu_1317_p1;
reg   [32:0] rhs_18_reg_2410;
wire    ap_CS_fsm_state106;
wire   [7:0] j_5_fu_1321_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [31:0] zext_ln1293_fu_1327_p1;
reg   [31:0] zext_ln1293_reg_2421;
reg   [31:0] zext_ln1293_reg_2421_pp2_iter1_reg;
reg   [31:0] zext_ln1293_reg_2421_pp2_iter2_reg;
reg   [31:0] zext_ln1293_reg_2421_pp2_iter3_reg;
reg   [31:0] zext_ln1293_reg_2421_pp2_iter4_reg;
reg   [31:0] zext_ln1293_reg_2421_pp2_iter5_reg;
wire   [0:0] icmp_ln1293_fu_1331_p2;
reg   [0:0] icmp_ln1293_reg_2427_pp2_iter1_reg;
reg   [0:0] icmp_ln1293_reg_2427_pp2_iter2_reg;
reg   [0:0] icmp_ln1293_reg_2427_pp2_iter3_reg;
reg   [0:0] icmp_ln1293_reg_2427_pp2_iter4_reg;
reg   [0:0] icmp_ln1293_reg_2427_pp2_iter5_reg;
wire   [32:0] ret_32_fu_1346_p2;
reg   [32:0] ret_32_reg_2436;
reg   [32:0] ret_32_reg_2436_pp2_iter3_reg;
reg   [0:0] tmp_59_reg_2442;
reg   [0:0] tmp_59_reg_2442_pp2_iter3_reg;
wire   [32:0] ret_33_fu_1359_p2;
reg   [32:0] ret_33_reg_2447;
reg   [32:0] ret_33_reg_2447_pp2_iter3_reg;
reg   [0:0] tmp_60_reg_2453;
reg   [0:0] tmp_60_reg_2453_pp2_iter3_reg;
wire   [32:0] sub_ln180_2_fu_1372_p2;
reg   [32:0] sub_ln180_2_reg_2458;
wire   [32:0] sub_ln180_3_fu_1377_p2;
reg   [32:0] sub_ln180_3_reg_2463;
wire   [32:0] select_ln180_1_fu_1382_p3;
reg   [32:0] select_ln180_1_reg_2468;
wire   [32:0] rbVal_1_fu_1387_p3;
reg   [32:0] rbVal_1_reg_2473;
wire  signed [63:0] sext_ln1295_fu_1392_p1;
reg  signed [63:0] sext_ln1295_reg_2478;
wire   [0:0] icmp_ln1295_fu_1395_p2;
reg   [0:0] icmp_ln1295_reg_2483;
wire  signed [63:0] sext_ln1301_fu_1401_p1;
reg  signed [63:0] sext_ln1301_reg_2489;
wire   [0:0] icmp_ln1301_fu_1404_p2;
reg   [0:0] icmp_ln1301_reg_2494;
wire   [31:0] left_bound_1_fu_1410_p3;
reg    ap_enable_reg_pp2_iter6;
wire   [63:0] lbVal_1_fu_1416_p3;
wire   [31:0] right_bound_3_fu_1422_p3;
wire   [63:0] rbVal_2_fu_1428_p3;
wire   [31:0] add_ln1242_fu_1434_p2;
reg   [31:0] add_ln1242_reg_2520;
wire    ap_CS_fsm_state115;
wire   [0:0] icmp_ln1247_fu_1440_p2;
reg   [0:0] icmp_ln1247_reg_2525;
wire   [0:0] icmp_ln1209_fu_1446_p2;
reg   [0:0] icmp_ln1209_reg_2530;
wire   [0:0] icmp_ln1209_1_fu_1452_p2;
reg   [0:0] icmp_ln1209_1_reg_2535;
wire   [31:0] add_ln1211_fu_1458_p2;
reg   [31:0] add_ln1211_reg_2540;
wire   [0:0] icmp_ln1242_fu_1464_p2;
reg   [0:0] icmp_ln1242_reg_2545;
wire    ap_CS_fsm_state116;
wire   [31:0] add_ln1249_fu_1469_p2;
reg   [31:0] add_ln1249_reg_2550;
wire   [31:0] select_ln1242_fu_1479_p3;
reg   [31:0] select_ln1242_reg_2555;
wire    ap_CS_fsm_state117;
wire   [31:0] sub_ln1257_fu_1486_p2;
reg   [31:0] sub_ln1257_reg_2562;
wire    ap_CS_fsm_state118;
wire   [7:0] trunc_ln1257_fu_1490_p1;
reg   [7:0] trunc_ln1257_reg_2567;
wire   [31:0] add_ln1257_fu_1494_p2;
reg   [31:0] add_ln1257_reg_2572;
wire    ap_CS_fsm_state119;
wire   [7:0] j_9_fu_1504_p2;
reg   [7:0] j_9_reg_2580;
wire    ap_CS_fsm_state120;
wire   [0:0] icmp_ln1257_fu_1499_p2;
wire   [7:0] j_8_fu_1509_p1;
reg   [7:0] j_8_reg_2586;
wire   [31:0] add89_fu_1513_p2;
reg   [31:0] add89_reg_2592;
wire   [0:0] icmp_ln1272_fu_1521_p2;
wire    ap_CS_fsm_state121;
wire   [8:0] add_ln1279_fu_1526_p2;
reg   [8:0] add_ln1279_reg_2602;
reg    ap_enable_reg_pp3_iter0;
wire   [0:0] icmp_ln1272_1_fu_1536_p2;
reg   [0:0] icmp_ln1272_1_reg_2607_pp3_iter1_reg;
reg   [0:0] icmp_ln1272_1_reg_2607_pp3_iter3_reg;
wire   [10:0] add_ln1276_fu_1545_p2;
reg   [10:0] add_ln1276_reg_2611;
wire   [7:0] j_20_fu_1550_p2;
wire   [9:0] tmp_41_fu_1584_p3;
reg   [9:0] tmp_41_reg_2632;
wire   [0:0] icmp_ln1259_fu_1613_p2;
wire    ap_CS_fsm_state128;
wire   [32:0] tmp_38_fu_1623_p3;
reg   [32:0] tmp_38_reg_2642;
wire   [32:0] add_ln1259_fu_1631_p2;
reg   [32:0] add_ln1259_reg_2647;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter0;
wire    ap_block_state129_pp4_stage0_iter0;
wire    ap_block_state132_pp4_stage0_iter1;
wire    ap_block_state135_pp4_stage0_iter2;
wire    ap_block_pp4_stage0_11001;
wire   [0:0] icmp_ln1259_1_fu_1637_p2;
reg   [0:0] icmp_ln1259_1_reg_2652_pp4_iter1_reg;
wire   [7:0] j_19_fu_1648_p2;
reg   [7:0] j_19_reg_2656;
wire   [0:0] icmp_ln1261_fu_1654_p2;
reg   [0:0] icmp_ln1261_reg_2661;
wire   [1:0] select_ln1259_fu_1660_p3;
reg   [1:0] select_ln1259_reg_2666;
wire   [7:0] select_ln1259_1_fu_1668_p3;
reg   [7:0] select_ln1259_1_reg_2673;
wire   [63:0] grp_fu_1642_p2;
reg   [63:0] add_ln1266_reg_2679;
wire    ap_CS_fsm_pp4_stage2;
wire    ap_block_state131_pp4_stage2_iter0;
wire    ap_block_state134_pp4_stage2_iter1;
wire    ap_block_state137_pp4_stage2_iter2;
wire    ap_block_pp4_stage2_11001;
wire   [10:0] add_ln1263_fu_1678_p2;
reg   [10:0] add_ln1263_reg_2684;
wire   [63:0] select_ln1259_2_fu_1688_p3;
reg    ap_enable_reg_pp4_iter1;
wire   [6:0] trunc_ln1263_fu_1694_p1;
reg   [6:0] trunc_ln1263_reg_2699;
wire   [1:0] add_ln1261_fu_1707_p2;
reg   [1:0] add_ln1261_reg_2709;
wire   [7:0] add_ln1263_1_fu_1722_p2;
reg   [7:0] add_ln1263_1_reg_2714;
reg   [7:0] add_ln1263_1_reg_2714_pp4_iter2_reg;
wire   [10:0] grp_fu_1701_p2;
reg   [10:0] add_ln1263_2_reg_2719;
wire   [31:0] select_ln1209_fu_1740_p3;
reg   [31:0] select_ln1209_reg_2729;
wire    ap_CS_fsm_state139;
wire   [31:0] add_ln1214_fu_1747_p2;
reg   [31:0] add_ln1214_reg_2735;
wire    ap_CS_fsm_state140;
wire   [31:0] add_ln1214_1_fu_1755_p2;
reg   [31:0] add_ln1214_1_reg_2742;
wire   [7:0] add_ln1214_2_fu_1761_p2;
reg   [7:0] add_ln1214_2_reg_2747;
wire   [0:0] icmp_ln1214_fu_1767_p2;
wire    ap_CS_fsm_state141;
wire   [7:0] j_7_fu_1771_p1;
wire   [0:0] icmp_ln1229_fu_1778_p2;
wire   [32:0] tmp_37_fu_1788_p3;
reg   [32:0] tmp_37_reg_2765;
wire   [7:0] j_6_fu_1796_p2;
reg   [7:0] j_6_reg_2770;
wire   [0:0] icmp_ln1229_1_fu_1800_p2;
wire    ap_CS_fsm_pp5_stage0;
wire    ap_block_state142_pp5_stage0_iter0;
wire    ap_block_state145_pp5_stage0_iter1;
wire    ap_block_state148_pp5_stage0_iter2;
wire    ap_block_pp5_stage0_11001;
reg   [0:0] icmp_ln1229_1_reg_2776_pp5_iter1_reg;
wire   [7:0] j_17_fu_1805_p2;
reg   [7:0] j_17_reg_2780;
wire   [0:0] icmp_ln1231_fu_1811_p2;
reg   [0:0] icmp_ln1231_reg_2785;
reg   [0:0] icmp_ln1231_reg_2785_pp5_iter1_reg;
wire   [1:0] select_ln1229_fu_1817_p3;
reg   [1:0] select_ln1229_reg_2790;
reg   [1:0] select_ln1229_reg_2790_pp5_iter1_reg;
wire   [7:0] select_ln1229_1_fu_1825_p3;
reg   [7:0] select_ln1229_1_reg_2797;
reg    ap_enable_reg_pp5_iter0;
wire   [32:0] add_ln1229_fu_1832_p2;
reg   [32:0] add_ln1229_reg_2803;
wire    ap_CS_fsm_pp5_stage2;
wire    ap_block_state144_pp5_stage2_iter0;
wire    ap_block_state147_pp5_stage2_iter1;
wire    ap_block_state150_pp5_stage2_iter2;
wire    ap_block_pp5_stage2_11001;
wire   [10:0] add_ln1233_fu_1841_p2;
reg   [10:0] add_ln1233_reg_2808;
wire   [1:0] add_ln1231_fu_1866_p2;
reg   [1:0] add_ln1231_reg_2823;
reg    ap_enable_reg_pp5_iter1;
wire   [10:0] grp_fu_1860_p2;
reg   [10:0] add_ln1233_2_reg_2828;
wire   [63:0] grp_fu_1846_p2;
reg   [63:0] add_ln1236_reg_2833;
wire   [63:0] select_ln1229_2_fu_1875_p3;
wire   [6:0] trunc_ln1233_fu_1881_p1;
reg   [6:0] trunc_ln1233_reg_2848;
wire   [7:0] add_ln1233_1_fu_1895_p2;
reg   [7:0] add_ln1233_1_reg_2853;
wire   [0:0] icmp_ln1216_fu_1908_p2;
wire    ap_CS_fsm_state152;
wire   [0:0] icmp_ln1216_1_fu_1918_p2;
wire    ap_CS_fsm_pp6_stage0;
reg   [0:0] icmp_ln1216_1_reg_2862_pp6_iter1_reg;
reg   [0:0] icmp_ln1216_1_reg_2862_pp6_iter3_reg;
wire   [10:0] add_ln1220_fu_1928_p2;
reg   [10:0] add_ln1220_reg_2866;
wire   [7:0] j_16_fu_1933_p2;
reg    ap_enable_reg_pp6_iter0;
wire   [8:0] add_ln1223_fu_1967_p2;
reg   [8:0] add_ln1223_reg_2887;
reg    ap_enable_reg_pp6_iter2;
wire   [9:0] tmp_39_fu_1973_p3;
reg   [9:0] tmp_39_reg_2892;
wire   [7:0] add_ln1284_fu_1999_p2;
reg   [7:0] add_ln1284_reg_2898;
wire    ap_CS_fsm_state159;
wire   [2:0] trunc_ln13_fu_2004_p1;
reg   [2:0] trunc_ln13_reg_2903;
wire   [5:0] add_ln9_1_fu_2007_p2;
reg   [5:0] add_ln9_1_reg_2907;
wire    ap_CS_fsm_pp7_stage0;
reg    ap_enable_reg_pp7_iter0;
wire    ap_block_state160_pp7_stage0_iter0;
wire    ap_block_state162_pp7_stage0_iter1;
wire    ap_block_state164_pp7_stage0_iter2;
wire    ap_block_state166_pp7_stage0_iter3;
wire    ap_block_pp7_stage0_11001;
wire   [0:0] icmp_ln9_fu_2013_p2;
reg   [0:0] icmp_ln9_reg_2912;
reg   [0:0] icmp_ln9_reg_2912_pp7_iter1_reg;
reg   [0:0] icmp_ln9_reg_2912_pp7_iter2_reg;
wire   [4:0] add_ln9_fu_2019_p2;
reg   [4:0] add_ln9_reg_2916;
wire   [1:0] select_ln9_fu_2031_p3;
reg   [1:0] select_ln9_reg_2921;
wire    ap_CS_fsm_pp7_stage1;
wire    ap_block_state161_pp7_stage1_iter0;
wire    ap_block_state163_pp7_stage1_iter1;
wire    ap_block_state165_pp7_stage1_iter2;
wire    ap_block_pp7_stage1_11001;
wire   [4:0] select_ln9_1_fu_2039_p3;
reg   [4:0] select_ln9_1_reg_2927;
wire   [6:0] add_ln13_fu_2060_p2;
reg   [6:0] add_ln13_reg_2933;
wire   [1:0] add_ln11_fu_2066_p2;
reg   [1:0] add_ln11_reg_2938;
reg    ap_enable_reg_pp7_iter1;
reg   [4:0] init_patch_addr_reg_2948;
reg   [4:0] init_patch_addr_reg_2948_pp7_iter2_reg;
reg   [4:0] init_patch1_addr_reg_2953;
reg   [4:0] init_patch1_addr_reg_2953_pp7_iter2_reg;
reg   [4:0] init_patch2_addr_reg_2958;
reg   [4:0] init_patch2_addr_reg_2958_pp7_iter2_reg;
reg   [4:0] init_patch3_addr_reg_2963;
reg   [4:0] init_patch3_addr_reg_2963_pp7_iter2_reg;
reg   [4:0] init_patch4_addr_reg_2968;
reg   [4:0] init_patch4_addr_reg_2968_pp7_iter2_reg;
reg   [31:0] temp_V_load_reg_2973;
reg    ap_enable_reg_pp7_iter2;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state5;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter4;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state83;
wire    ap_block_pp1_stage10_subdone;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state107;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
reg    ap_enable_reg_pp2_iter4;
reg    ap_enable_reg_pp2_iter5;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state122;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter2;
reg    ap_enable_reg_pp3_iter4;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state129;
wire    ap_block_pp4_stage2_subdone;
wire    ap_block_pp5_stage2_subdone;
reg    ap_condition_pp5_flush_enable;
reg    ap_condition_pp5_exit_iter1_state145;
wire    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_flush_enable;
reg    ap_enable_reg_pp6_iter1;
reg    ap_condition_pp6_exit_iter2_state155;
reg    ap_enable_reg_pp6_iter4;
wire    ap_block_pp7_stage1_subdone;
reg    ap_condition_pp7_exit_iter0_state161;
wire    ap_block_pp7_stage0_subdone;
reg    ap_enable_reg_pp7_iter3;
reg   [6:0] row_list_V_address0;
reg    row_list_V_ce0;
reg    row_list_V_we0;
reg   [30:0] ap_phi_mux_row_list_size_phi_fu_517_p4;
wire    ap_block_pp0_stage0;
reg   [31:0] row_list_size_1_reg_536;
reg   [63:0] ap_phi_mux_p_x_assign_2_phi_fu_576_p4;
wire    ap_block_pp1_stage10;
reg   [7:0] ap_phi_mux_j_21_phi_fu_588_p4;
wire    ap_block_pp1_stage0;
reg   [63:0] ap_phi_mux_rbVal_phi_fu_634_p4;
wire    ap_block_pp2_stage0;
reg   [63:0] ap_phi_mux_lbVal_phi_fu_646_p4;
reg   [31:0] start_index_29_reg_654;
wire    ap_CS_fsm_state114;
reg   [63:0] start_value_28_reg_667;
reg   [31:0] left_bound_2_reg_679;
reg   [31:0] right_bound_2_reg_692;
reg   [8:0] ap_phi_mux_temp_size_3_phi_fu_709_p4;
wire    ap_block_pp3_stage0;
reg   [32:0] ap_phi_mux_indvar_flatten13_phi_fu_730_p4;
wire    ap_block_pp4_stage0;
reg   [63:0] ap_phi_mux_temp_size_2_phi_fu_741_p4;
reg   [7:0] ap_phi_mux_j_12_phi_fu_752_p4;
reg   [1:0] ap_phi_mux_z_1_phi_fu_763_p4;
wire    ap_block_pp4_stage1;
reg   [32:0] ap_phi_mux_indvar_flatten_phi_fu_775_p4;
wire    ap_block_pp5_stage0;
reg   [7:0] ap_phi_mux_j_11_phi_fu_786_p4;
reg   [1:0] ap_phi_mux_z_phi_fu_797_p4;
wire    ap_block_pp5_stage1;
reg   [63:0] ap_phi_mux_temp_size_1_phi_fu_808_p4;
reg   [8:0] ap_phi_mux_temp_size_phi_fu_829_p4;
wire    ap_block_pp6_stage0;
reg   [5:0] ap_phi_mux_indvar_flatten21_phi_fu_841_p4;
wire    ap_block_pp7_stage0;
reg   [4:0] ap_phi_mux_i_16_phi_fu_852_p4;
reg   [1:0] ap_phi_mux_j_18_phi_fu_864_p4;
wire    ap_block_pp7_stage1;
wire   [63:0] zext_ln1182_1_fu_986_p1;
wire   [63:0] lftr_wideiv_cast_fu_991_p1;
wire   [63:0] zext_ln1315_fu_1170_p1;
wire   [63:0] zext_ln1295_fu_1337_p1;
wire   [63:0] zext_ln1276_2_fu_1563_p1;
wire   [63:0] zext_ln1276_3_fu_1579_p1;
wire   [63:0] zext_ln1276_fu_1592_p1;
wire   [63:0] tmp_42_fu_1601_p3;
wire   [63:0] zext_ln1263_4_fu_1728_p1;
wire    ap_block_pp4_stage2;
wire   [63:0] zext_ln1263_3_fu_1732_p1;
wire   [63:0] zext_ln1233_4_fu_1871_p1;
wire    ap_block_pp5_stage2;
wire   [63:0] zext_ln1233_3_fu_1901_p1;
wire   [63:0] zext_ln1220_2_fu_1946_p1;
wire   [63:0] zext_ln1220_3_fu_1962_p1;
wire   [63:0] zext_ln1220_fu_1981_p1;
wire   [63:0] tmp_40_fu_1990_p3;
wire   [63:0] zext_ln13_1_fu_2071_p1;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state18;
reg   [63:0] grp_fu_884_p0;
wire    ap_CS_fsm_state49;
wire   [63:0] grp_fu_887_p1;
wire    ap_block_pp1_stage6;
reg   [63:0] grp_fu_891_p0;
wire    ap_block_pp1_stage9;
wire   [9:0] tmp_s_fu_934_p3;
wire   [31:0] zext_ln1180_fu_951_p1;
wire   [10:0] zext_ln1182_fu_960_p1;
wire   [10:0] shl_ln1182_fu_975_p2;
wire   [10:0] or_ln1182_fu_980_p2;
wire  signed [31:0] sext_ln215_26_fu_1008_p0;
wire  signed [32:0] ret_fu_1011_p0;
wire  signed [32:0] ret_fu_1011_p1;
wire   [31:0] data_V_fu_1021_p1;
wire   [7:0] tmp_63_fu_1032_p4;
wire   [8:0] zext_ln341_fu_1046_p1;
wire  signed [8:0] sext_ln1311_fu_1070_p1;
wire   [24:0] mantissa_fu_1079_p4;
wire  signed [31:0] sh_prom_i_i_i_i_i_cast_cast_cast_fu_1092_p1;
wire   [110:0] grp_fu_1099_p2;
wire   [110:0] grp_fu_1105_p2;
wire   [63:0] zext_ln662_fu_1129_p1;
wire    ap_CS_fsm_state79;
wire    ap_block_pp1_stage2;
wire  signed [63:0] grp_fu_1179_p0;
wire    ap_block_pp1_stage4;
wire    ap_block_pp1_stage5;
wire    ap_block_pp1_stage8;
wire   [63:0] data_V_10_fu_1202_p1;
wire   [62:0] trunc_ln368_fu_1205_p1;
wire   [63:0] p_Result_7_fu_1213_p3;
wire   [63:0] bitcast_ln1315_fu_1226_p1;
wire   [10:0] tmp_32_fu_1229_p4;
wire   [51:0] trunc_ln1315_1_fu_1239_p1;
wire   [10:0] tmp_33_fu_1243_p4;
wire   [51:0] trunc_ln1315_fu_1209_p1;
wire   [0:0] or_ln1315_fu_1277_p2;
wire   [0:0] or_ln1315_1_fu_1281_p2;
wire   [0:0] and_ln1315_fu_1285_p2;
wire   [0:0] and_ln1315_1_fu_1291_p2;
wire  signed [32:0] sext_ln215_27_fu_1342_p1;
wire   [0:0] and_ln1242_fu_1475_p2;
wire   [31:0] zext_ln1272_fu_1518_p1;
wire   [31:0] zext_ln1272_1_fu_1532_p1;
wire   [10:0] zext_ln1276_1_fu_1541_p1;
wire   [11:0] tmp_62_fu_1556_p3;
wire   [10:0] shl_ln1276_fu_1568_p2;
wire   [10:0] or_ln1276_1_fu_1573_p2;
wire   [9:0] or_ln1276_fu_1596_p2;
wire   [31:0] zext_ln1259_fu_1610_p1;
wire   [31:0] sub_ln1259_fu_1618_p2;
wire   [10:0] zext_ln1263_fu_1675_p1;
wire   [10:0] grp_fu_1701_p0;
wire   [10:0] grp_fu_1701_p1;
wire   [7:0] tmp_97_cast_fu_1712_p3;
wire   [7:0] zext_ln1263_2_fu_1719_p1;
wire   [0:0] and_ln1209_fu_1736_p2;
wire   [7:0] trunc_ln1214_fu_1751_p1;
wire   [31:0] zext_ln1229_fu_1774_p1;
wire   [31:0] sub_ln1229_fu_1783_p2;
wire   [10:0] zext_ln1233_fu_1838_p1;
wire   [10:0] grp_fu_1860_p0;
wire   [10:0] grp_fu_1860_p1;
wire   [7:0] tmp_93_cast_fu_1885_p3;
wire   [7:0] zext_ln1233_2_fu_1892_p1;
wire   [31:0] zext_ln1216_fu_1905_p1;
wire   [31:0] zext_ln1216_1_fu_1914_p1;
wire   [10:0] zext_ln1220_1_fu_1924_p1;
wire   [11:0] tmp_61_fu_1939_p3;
wire   [10:0] shl_ln1220_fu_1951_p2;
wire   [10:0] or_ln1220_1_fu_1956_p2;
wire   [9:0] or_ln1220_fu_1985_p2;
wire   [0:0] icmp_ln11_fu_2025_p2;
wire   [5:0] tmp_43_fu_2046_p3;
wire   [6:0] tmp_102_cast_fu_2053_p1;
wire   [6:0] zext_ln13_fu_2057_p1;
wire    ap_CS_fsm_state167;
wire    ap_block_pp1_stage6_00001;
reg   [120:0] ap_NS_fsm;
wire    ap_block_pp1_stage1_subdone;
wire    ap_block_pp1_stage2_subdone;
wire    ap_block_state86_pp1_stage3_iter0;
wire    ap_block_state97_pp1_stage3_iter1;
wire    ap_block_pp1_stage3_subdone;
wire    ap_block_pp1_stage4_subdone;
wire    ap_block_pp1_stage5_subdone;
wire    ap_block_pp1_stage6_subdone;
wire    ap_block_pp1_stage7_subdone;
wire    ap_block_pp1_stage8_subdone;
wire    ap_block_pp1_stage9_subdone;
wire    ap_block_pp4_stage1_subdone;
wire    ap_block_pp5_stage0_subdone;
wire    ap_block_pp5_stage1_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 121'd1;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
#0 ap_enable_reg_pp7_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter4 = 1'b0;
#0 ap_enable_reg_pp7_iter3 = 1'b0;
end

makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine8_radii #(
    .DataWidth( 25 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
radii_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(radii_address0),
    .ce0(radii_ce0),
    .q0(radii_q0)
);

makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine8_trapezoid_edges_V #(
    .DataWidth( 26 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
trapezoid_edges_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(trapezoid_edges_V_address0),
    .ce0(trapezoid_edges_V_ce0),
    .q0(trapezoid_edges_V_q0)
);

makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine8_row_list_V #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
row_list_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(row_list_V_address0),
    .ce0(row_list_V_ce0),
    .we0(row_list_V_we0),
    .d0(reg_895),
    .q0(row_list_V_q0)
);

makePatches_ShadowQuilt_fromEdges_fadd_32ns_32ns_32_13_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 13 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_13_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(i_op_assign_1_reg_2219),
    .din1(reg_903),
    .ce(1'b1),
    .dout(grp_fu_871_p2)
);

makePatches_ShadowQuilt_fromEdges_fmul_32ns_32ns_32_8_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_8_max_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_903),
    .din1(i_op_assign_reg_2214),
    .ce(1'b1),
    .dout(grp_fu_875_p2)
);

makePatches_ShadowQuilt_fromEdges_fdiv_32ns_32ns_32_30_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 30 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_30_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_903),
    .din1(32'd1268291200),
    .ce(1'b1),
    .dout(grp_fu_879_p2)
);

makePatches_ShadowQuilt_fromEdges_sitofp_64ns_32_7_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
sitofp_64ns_32_7_no_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_884_p0),
    .ce(1'b1),
    .dout(grp_fu_884_p1)
);

makePatches_ShadowQuilt_fromEdges_dcmp_64ns_64ns_1_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_4_no_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv2_i_reg_2349),
    .din1(grp_fu_887_p1),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_887_p2)
);

makePatches_ShadowQuilt_fromEdges_sitodp_64ns_64_7_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sitodp_64ns_64_7_no_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_891_p0),
    .ce(1'b1),
    .dout(grp_fu_891_p1)
);

makePatches_ShadowQuilt_fromEdges_add_31ns_31ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
add_31ns_31ns_31_1_1_U7(
    .din0(ap_phi_mux_row_list_size_phi_fu_517_p4),
    .din1(31'd1),
    .dout(add_ln1182_fu_945_p2)
);

makePatches_ShadowQuilt_fromEdges_add_25ns_25s_25_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 25 ),
    .dout_WIDTH( 25 ))
add_25ns_25s_25_1_1_U8(
    .din0(y_reg_2165),
    .din1(25'd28554432),
    .dout(add_ln1186_fu_996_p2)
);

makePatches_ShadowQuilt_fromEdges_sub_33s_33s_33_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 33 ))
sub_33s_33s_33_1_1_U9(
    .din0(ret_fu_1011_p0),
    .din1(ret_fu_1011_p1),
    .dout(ret_fu_1011_p2)
);

makePatches_ShadowQuilt_fromEdges_lshr_111ns_32ns_111_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 1 ),
    .din0_WIDTH( 111 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 111 ))
lshr_111ns_32ns_111_7_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(zext_ln15_fu_1088_p1),
    .din1(sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_1095_p1),
    .ce(1'b1),
    .dout(grp_fu_1099_p2)
);

makePatches_ShadowQuilt_fromEdges_shl_111ns_32ns_111_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 0 ),
    .din0_WIDTH( 111 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 111 ))
shl_111ns_32ns_111_7_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(zext_ln15_fu_1088_p1),
    .din1(sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_1095_p1),
    .ce(1'b1),
    .dout(grp_fu_1105_p2)
);

makePatches_ShadowQuilt_fromEdges_sub_64ns_64ns_64_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sub_64ns_64ns_64_3_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd0),
    .din1(val_reg_2282),
    .ce(1'b1),
    .dout(grp_fu_1138_p2)
);

makePatches_ShadowQuilt_fromEdges_sub_64s_64ns_64_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sub_64s_64ns_64_3_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1179_p0),
    .din1(result_V_reg_2297),
    .ce(1'b1),
    .dout(grp_fu_1179_p2)
);

makePatches_ShadowQuilt_fromEdges_sub_64ns_64ns_64_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sub_64ns_64ns_64_3_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd0),
    .din1(start_value_1_reg_2326),
    .ce(1'b1),
    .dout(grp_fu_1192_p2)
);

makePatches_ShadowQuilt_fromEdges_add_33s_33ns_33_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 33 ))
add_33s_33ns_33_1_1_U15(
    .din0(sext_ln215_27_fu_1342_p1),
    .din1(rhs_18_reg_2410),
    .dout(ret_32_fu_1346_p2)
);

makePatches_ShadowQuilt_fromEdges_sub_33s_33ns_33_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 33 ))
sub_33s_33ns_33_1_1_U16(
    .din0(sext_ln215_27_fu_1342_p1),
    .din1(rhs_18_reg_2410),
    .dout(ret_33_fu_1359_p2)
);

makePatches_ShadowQuilt_fromEdges_sub_33ns_33ns_33_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 33 ))
sub_33ns_33ns_33_1_1_U17(
    .din0(33'd0),
    .din1(ret_32_reg_2436),
    .dout(sub_ln180_2_fu_1372_p2)
);

makePatches_ShadowQuilt_fromEdges_sub_33ns_33ns_33_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 33 ))
sub_33ns_33ns_33_1_1_U18(
    .din0(33'd0),
    .din1(ret_33_reg_2447),
    .dout(sub_ln180_3_fu_1377_p2)
);

makePatches_ShadowQuilt_fromEdges_add_32ns_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
add_32ns_32s_32_1_1_U19(
    .din0(row_list_size_1_reg_536),
    .din1(32'd4294967295),
    .dout(add_ln1242_fu_1434_p2)
);

makePatches_ShadowQuilt_fromEdges_add_32ns_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
add_32ns_32s_32_1_1_U20(
    .din0(start_index_29_reg_654),
    .din1(32'd4294967295),
    .dout(add_ln1211_fu_1458_p2)
);

makePatches_ShadowQuilt_fromEdges_add_32ns_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
add_32ns_32ns_32_1_1_U21(
    .din0(start_index_29_reg_654),
    .din1(32'd1),
    .dout(add_ln1249_fu_1469_p2)
);

makePatches_ShadowQuilt_fromEdges_sub_32ns_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sub_32ns_32ns_32_1_1_U22(
    .din0(select_ln1242_reg_2555),
    .din1(original_ppl),
    .dout(sub_ln1257_fu_1486_p2)
);

makePatches_ShadowQuilt_fromEdges_add_32ns_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
add_32ns_32ns_32_1_1_U23(
    .din0(sub_ln1257_reg_2562),
    .din1(32'd1),
    .dout(add_ln1257_fu_1494_p2)
);

makePatches_ShadowQuilt_fromEdges_add_32ns_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
add_32ns_32ns_32_1_1_U24(
    .din0(left_bound_2_reg_679),
    .din1(original_ppl),
    .dout(add89_fu_1513_p2)
);

makePatches_ShadowQuilt_fromEdges_sub_32ns_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sub_32ns_32ns_32_1_1_U25(
    .din0(add89_reg_2592),
    .din1(zext_ln1259_fu_1610_p1),
    .dout(sub_ln1259_fu_1618_p2)
);

makePatches_ShadowQuilt_fromEdges_add_33ns_33ns_33_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 33 ))
add_33ns_33ns_33_1_1_U26(
    .din0(ap_phi_mux_indvar_flatten13_phi_fu_730_p4),
    .din1(33'd1),
    .dout(add_ln1259_fu_1631_p2)
);

makePatches_ShadowQuilt_fromEdges_add_64ns_64ns_64_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
add_64ns_64ns_64_3_1_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_mux_temp_size_2_phi_fu_741_p4),
    .din1(64'd1),
    .ce(1'b1),
    .dout(grp_fu_1642_p2)
);

makePatches_ShadowQuilt_fromEdges_add_11ns_11ns_11_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
add_11ns_11ns_11_2_1_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1701_p0),
    .din1(grp_fu_1701_p1),
    .ce(1'b1),
    .dout(grp_fu_1701_p2)
);

makePatches_ShadowQuilt_fromEdges_add_32ns_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
add_32ns_32ns_32_1_1_U29(
    .din0(select_ln1209_reg_2729),
    .din1(original_ppl),
    .dout(add_ln1214_fu_1747_p2)
);

makePatches_ShadowQuilt_fromEdges_add_32ns_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
add_32ns_32ns_32_1_1_U30(
    .din0(right_bound_2_reg_692),
    .din1(32'd1),
    .dout(add_ln1214_1_fu_1755_p2)
);

makePatches_ShadowQuilt_fromEdges_sub_32ns_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sub_32ns_32ns_32_1_1_U31(
    .din0(add_ln1214_reg_2735),
    .din1(zext_ln1229_fu_1774_p1),
    .dout(sub_ln1229_fu_1783_p2)
);

makePatches_ShadowQuilt_fromEdges_add_33ns_33ns_33_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 33 ))
add_33ns_33ns_33_1_1_U32(
    .din0(indvar_flatten_reg_771),
    .din1(33'd1),
    .dout(add_ln1229_fu_1832_p2)
);

makePatches_ShadowQuilt_fromEdges_add_64ns_64ns_64_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
add_64ns_64ns_64_3_1_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_mux_temp_size_1_phi_fu_808_p4),
    .din1(64'd1),
    .ce(1'b1),
    .dout(grp_fu_1846_p2)
);

makePatches_ShadowQuilt_fromEdges_add_11ns_11ns_11_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
add_11ns_11ns_11_2_1_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1860_p0),
    .din1(grp_fu_1860_p1),
    .ce(1'b1),
    .dout(grp_fu_1860_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state5))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln1180_reg_2118 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state5)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state5);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((icmp_ln1180_reg_2118 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state83))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((icmp_ln1313_reg_2293 == 1'd1) & (1'b1 == ap_CS_fsm_state82))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage10_subdone) & (1'b1 == ap_CS_fsm_pp1_stage10))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((icmp_ln1313_reg_2293 == 1'd1) & (1'b1 == ap_CS_fsm_state82))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state107))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state106)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state107)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state107);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end else if ((1'b1 == ap_CS_fsm_state106)) begin
            ap_enable_reg_pp2_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state122))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((icmp_ln1272_fu_1521_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state121))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state122)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state122);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end else if (((icmp_ln1272_fu_1521_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state121))) begin
            ap_enable_reg_pp3_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state129) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if (((icmp_ln1259_fu_1613_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state128))) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage2_subdone) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage2_subdone) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end else if (((icmp_ln1259_fu_1613_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state128))) begin
            ap_enable_reg_pp4_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp5_flush_enable)) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state141) & (icmp_ln1229_fu_1778_p2 == 1'd1) & (icmp_ln1214_fu_1767_p2 == 1'd0))) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp5_stage2_subdone) & (1'b1 == ap_CS_fsm_pp5_stage2))) begin
            if (((1'b1 == ap_condition_pp5_exit_iter1_state145) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
                ap_enable_reg_pp5_iter1 <= 1'b0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp5_stage2_subdone) & (1'b1 == ap_condition_pp5_exit_iter1_state145) & (1'b1 == ap_CS_fsm_pp5_stage2))) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter0;
        end else if (((1'b0 == ap_block_pp5_stage2_subdone) & (1'b1 == ap_CS_fsm_pp5_stage2))) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end else if (((1'b1 == ap_CS_fsm_state141) & (icmp_ln1229_fu_1778_p2 == 1'd1) & (icmp_ln1214_fu_1767_p2 == 1'd0))) begin
            ap_enable_reg_pp5_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp6_flush_enable)) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state152) & (icmp_ln1216_fu_1908_p2 == 1'd0))) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp6_exit_iter2_state155)) begin
                ap_enable_reg_pp6_iter3 <= ap_enable_reg_pp6_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter3 <= ap_enable_reg_pp6_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter4 <= ap_enable_reg_pp6_iter3;
        end else if (((1'b1 == ap_CS_fsm_state152) & (icmp_ln1216_fu_1908_p2 == 1'd0))) begin
            ap_enable_reg_pp6_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp7_stage1_subdone) & (1'b1 == ap_condition_pp7_exit_iter0_state161) & (1'b1 == ap_CS_fsm_pp7_stage1))) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state159)) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp7_stage1_subdone) & (1'b1 == ap_CS_fsm_pp7_stage1))) begin
            if ((1'b1 == ap_condition_pp7_exit_iter0_state161)) begin
                ap_enable_reg_pp7_iter1 <= (1'b1 ^ ap_condition_pp7_exit_iter0_state161);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp7_stage1_subdone) & (1'b1 == ap_CS_fsm_pp7_stage1))) begin
            ap_enable_reg_pp7_iter2 <= ap_enable_reg_pp7_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter3 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp7_stage0_subdone) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter2 == 1'b0)) | ((1'b0 == ap_block_pp7_stage1_subdone) & (1'b1 == ap_CS_fsm_pp7_stage1)))) begin
            ap_enable_reg_pp7_iter3 <= ap_enable_reg_pp7_iter2;
        end else if ((1'b1 == ap_CS_fsm_state159)) begin
            ap_enable_reg_pp7_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (icmp_ln9_reg_2912 == 1'd0))) begin
        i_16_reg_848 <= select_ln9_1_reg_2927;
    end else if ((1'b1 == ap_CS_fsm_state159)) begin
        i_16_reg_848 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1259_1_reg_2652 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1))) begin
        indvar_flatten13_reg_726 <= add_ln1259_reg_2647;
    end else if (((icmp_ln1259_fu_1613_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state128))) begin
        indvar_flatten13_reg_726 <= 33'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (icmp_ln9_reg_2912 == 1'd0))) begin
        indvar_flatten21_reg_837 <= add_ln9_1_reg_2907;
    end else if ((1'b1 == ap_CS_fsm_state159)) begin
        indvar_flatten21_reg_837 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1229_1_reg_2776 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1))) begin
        indvar_flatten_reg_771 <= add_ln1229_reg_2803;
    end else if (((1'b1 == ap_CS_fsm_state141) & (icmp_ln1229_fu_1778_p2 == 1'd1) & (icmp_ln1214_fu_1767_p2 == 1'd0))) begin
        indvar_flatten_reg_771 <= 33'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state152) & (icmp_ln1216_fu_1908_p2 == 1'd0))) begin
        j_10_reg_816 <= j_6_reg_2770;
    end else if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln1216_1_fu_1918_p2 == 1'd0))) begin
        j_10_reg_816 <= j_16_fu_1933_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1229_1_reg_2776 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1))) begin
        j_11_reg_783 <= select_ln1229_1_reg_2797;
    end else if (((1'b1 == ap_CS_fsm_state141) & (icmp_ln1229_fu_1778_p2 == 1'd1) & (icmp_ln1214_fu_1767_p2 == 1'd0))) begin
        j_11_reg_783 <= j_7_fu_1771_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1259_1_reg_2652 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1))) begin
        j_12_reg_749 <= select_ln1259_1_reg_2673;
    end else if (((icmp_ln1259_fu_1613_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state128))) begin
        j_12_reg_749 <= j_8_reg_2586;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1272_fu_1521_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state121))) begin
        j_13_reg_717 <= j_9_reg_2580;
    end else if (((icmp_ln1272_1_fu_1536_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        j_13_reg_717 <= j_20_fu_1550_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage1_11001) & (1'b1 == ap_CS_fsm_pp7_stage1) & (ap_enable_reg_pp7_iter1 == 1'b1) & (icmp_ln9_reg_2912_pp7_iter1_reg == 1'd0))) begin
        j_18_reg_860 <= add_ln11_reg_2938;
    end else if ((1'b1 == ap_CS_fsm_state159)) begin
        j_18_reg_860 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1313_reg_2293 == 1'd1) & (1'b1 == ap_CS_fsm_state82))) begin
        j_21_reg_584 <= 8'd0;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1313_1_reg_2312 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j_21_reg_584 <= j_3_reg_2302;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1293_fu_1331_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        j_22_reg_619 <= j_5_fu_1321_p2;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        j_22_reg_619 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1180_reg_2118 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        j_reg_525 <= 8'd0;
    end else if (((icmp_ln1180_1_fu_955_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_reg_525 <= j_1_fu_969_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter6 == 1'b1) & (icmp_ln1293_reg_2427_pp2_iter5_reg == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        lbVal_reg_642 <= lbVal_1_fu_1416_p3;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        lbVal_reg_642 <= 64'd9223372036854775807;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state114)) begin
        left_bound_2_reg_679 <= left_bound_reg_595;
    end else if (((icmp_ln1313_reg_2293 == 1'd0) & (1'b1 == ap_CS_fsm_state82))) begin
        left_bound_2_reg_679 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter6 == 1'b1) & (icmp_ln1293_reg_2427_pp2_iter5_reg == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        left_bound_reg_595 <= left_bound_1_fu_1410_p3;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        left_bound_reg_595 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1313_reg_2293 == 1'd1) & (1'b1 == ap_CS_fsm_state82))) begin
        p_x_assign_2_reg_572 <= 64'd9223372036854775807;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1313_1_reg_2312_pp1_iter1_reg == 1'd1) & (1'b0 == ap_block_pp1_stage10_11001) & (1'b1 == ap_CS_fsm_pp1_stage10))) begin
        p_x_assign_2_reg_572 <= select_ln1315_2_fu_1310_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter6 == 1'b1) & (icmp_ln1293_reg_2427_pp2_iter5_reg == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        rbVal_reg_630 <= rbVal_2_fu_1428_p3;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        rbVal_reg_630 <= 64'd9223372036854775807;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln1259_1_reg_2652_pp4_iter2_reg == 1'd0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((icmp_ln1272_1_reg_2607_pp3_iter2_reg == 1'd0) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        reg_895 <= GDarrayDecoded_q1;
    end else if ((((icmp_ln1216_1_reg_2862_pp6_iter2_reg == 1'd0) & (ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((icmp_ln1229_1_reg_2776_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1)) | ((icmp_ln1180_1_reg_2175_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_895 <= GDarrayDecoded_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1216_1_reg_2862_pp6_iter2_reg == 1'd0) & (ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        reg_914 <= GDarrayDecoded_q1;
    end else if (((icmp_ln1272_1_reg_2607_pp3_iter2_reg == 1'd0) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        reg_914 <= GDarrayDecoded_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state114)) begin
        right_bound_2_reg_692 <= right_bound_reg_607;
    end else if (((icmp_ln1313_reg_2293 == 1'd0) & (1'b1 == ap_CS_fsm_state82))) begin
        right_bound_2_reg_692 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter6 == 1'b1) & (icmp_ln1293_reg_2427_pp2_iter5_reg == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        right_bound_reg_607 <= right_bound_3_fu_1422_p3;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        right_bound_reg_607 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1180_reg_2118 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        row_list_size_1_reg_536 <= GDn_points_load_reg_2106;
    end else if (((icmp_ln1180_reg_2118 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        row_list_size_1_reg_536 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1180_reg_2118 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        row_list_size_reg_513 <= 31'd0;
    end else if (((icmp_ln1180_1_reg_2175 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        row_list_size_reg_513 <= add_ln1182_reg_2170;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state114)) begin
        start_index_29_reg_654 <= start_index_reg_560;
    end else if (((icmp_ln1313_reg_2293 == 1'd0) & (1'b1 == ap_CS_fsm_state82))) begin
        start_index_29_reg_654 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1313_reg_2293 == 1'd1) & (1'b1 == ap_CS_fsm_state82))) begin
        start_index_reg_560 <= 32'd0;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1313_1_reg_2312_pp1_iter1_reg == 1'd1) & (1'b0 == ap_block_pp1_stage10_11001) & (1'b1 == ap_CS_fsm_pp1_stage10))) begin
        start_index_reg_560 <= start_index_2_fu_1303_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state114)) begin
        start_value_28_reg_667 <= start_value_reg_548;
    end else if (((icmp_ln1313_reg_2293 == 1'd0) & (1'b1 == ap_CS_fsm_state82))) begin
        start_value_28_reg_667 <= 64'd9223372036854775807;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1313_reg_2293 == 1'd1) & (1'b1 == ap_CS_fsm_state82))) begin
        start_value_reg_548 <= 64'd9223372036854775807;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1313_1_reg_2312_pp1_iter1_reg == 1'd1) & (1'b0 == ap_block_pp1_stage10_11001) & (1'b1 == ap_CS_fsm_pp1_stage10))) begin
        start_value_reg_548 <= start_value_2_fu_1296_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln1229_1_reg_2776_pp5_iter1_reg == 1'd0))) begin
        temp_size_1_reg_804 <= select_ln1229_2_fu_1875_p3;
    end else if (((1'b1 == ap_CS_fsm_state141) & (icmp_ln1229_fu_1778_p2 == 1'd1) & (icmp_ln1214_fu_1767_p2 == 1'd0))) begin
        temp_size_1_reg_804 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1259_1_reg_2652 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1))) begin
        temp_size_2_reg_737 <= select_ln1259_2_fu_1688_p3;
    end else if (((icmp_ln1259_fu_1613_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state128))) begin
        temp_size_2_reg_737 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1272_fu_1521_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state121))) begin
        temp_size_3_reg_705 <= 9'd0;
    end else if (((icmp_ln1272_1_reg_2607 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1))) begin
        temp_size_3_reg_705 <= add_ln1279_reg_2602;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state152) & (icmp_ln1216_fu_1908_p2 == 1'd0))) begin
        temp_size_reg_825 <= 9'd0;
    end else if (((icmp_ln1216_1_reg_2862_pp6_iter2_reg == 1'd0) & (ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        temp_size_reg_825 <= add_ln1223_reg_2887;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln1259_1_reg_2652_pp4_iter1_reg == 1'd0))) begin
        z_1_reg_759 <= add_ln1261_reg_2709;
    end else if (((icmp_ln1259_fu_1613_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state128))) begin
        z_1_reg_759 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln1229_1_reg_2776_pp5_iter1_reg == 1'd0))) begin
        z_reg_793 <= add_ln1231_reg_2823;
    end else if (((1'b1 == ap_CS_fsm_state141) & (icmp_ln1229_fu_1778_p2 == 1'd1) & (icmp_ln1214_fu_1767_p2 == 1'd0))) begin
        z_reg_793 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        GDn_points_load_reg_2106 <= GDn_points_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1257_fu_1499_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state120))) begin
        add89_reg_2592 <= add89_fu_1513_p2;
        j_8_reg_2586 <= j_8_fu_1509_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1180_1_fu_955_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln1182_1_reg_2179 <= add_ln1182_1_fu_964_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln1182_reg_2170 <= add_ln1182_fu_945_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln1186_reg_2194 <= add_ln1186_fu_996_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (icmp_ln9_reg_2912 == 1'd0))) begin
        add_ln11_reg_2938 <= add_ln11_fu_2066_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((leftRight_read_read_fu_234_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state115))) begin
        add_ln1211_reg_2540 <= add_ln1211_fu_1458_p2;
        icmp_ln1209_1_reg_2535 <= icmp_ln1209_1_fu_1452_p2;
        icmp_ln1209_reg_2530 <= icmp_ln1209_fu_1446_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state140)) begin
        add_ln1214_1_reg_2742 <= add_ln1214_1_fu_1755_p2;
        add_ln1214_2_reg_2747 <= add_ln1214_2_fu_1761_p2;
        add_ln1214_reg_2735 <= add_ln1214_fu_1747_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln1216_1_fu_1918_p2 == 1'd0))) begin
        add_ln1220_reg_2866 <= add_ln1220_fu_1928_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter2 == 1'b1))) begin
        add_ln1223_reg_2887 <= add_ln1223_fu_1967_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage2_11001) & (1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        add_ln1229_reg_2803 <= add_ln1229_fu_1832_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1229_1_reg_2776 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1))) begin
        add_ln1231_reg_2823 <= add_ln1231_fu_1866_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1229_1_reg_2776_pp5_iter2_reg == 1'd0) & (1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1))) begin
        add_ln1233_1_reg_2853 <= add_ln1233_1_fu_1895_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1) & (icmp_ln1229_1_reg_2776_pp5_iter1_reg == 1'd0))) begin
        add_ln1233_2_reg_2828 <= grp_fu_1860_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1229_1_reg_2776 == 1'd0) & (1'b0 == ap_block_pp5_stage2_11001) & (1'b1 == ap_CS_fsm_pp5_stage2))) begin
        add_ln1233_reg_2808 <= add_ln1233_fu_1841_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage2_11001) & (1'b1 == ap_CS_fsm_pp5_stage2) & (icmp_ln1231_reg_2785_pp5_iter1_reg == 1'd1) & (icmp_ln1229_1_reg_2776_pp5_iter1_reg == 1'd0))) begin
        add_ln1236_reg_2833 <= grp_fu_1846_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((leftRight_read_read_fu_234_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state115))) begin
        add_ln1242_reg_2520 <= add_ln1242_fu_1434_p2;
        icmp_ln1247_reg_2525 <= icmp_ln1247_fu_1440_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state116)) begin
        add_ln1249_reg_2550 <= add_ln1249_fu_1469_p2;
        icmp_ln1242_reg_2545 <= icmp_ln1242_fu_1464_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state119)) begin
        add_ln1257_reg_2572 <= add_ln1257_fu_1494_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
        add_ln1259_reg_2647 <= add_ln1259_fu_1631_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1259_1_reg_2652 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1))) begin
        add_ln1261_reg_2709 <= add_ln1261_fu_1707_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (icmp_ln1259_1_reg_2652_pp4_iter1_reg == 1'd0))) begin
        add_ln1263_1_reg_2714 <= add_ln1263_1_fu_1722_p2;
        add_ln1263_2_reg_2719 <= grp_fu_1701_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        add_ln1263_1_reg_2714_pp4_iter2_reg <= add_ln1263_1_reg_2714;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1259_1_reg_2652 == 1'd0) & (1'b0 == ap_block_pp4_stage2_11001) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        add_ln1263_reg_2684 <= add_ln1263_fu_1678_p2;
        add_ln1266_reg_2679 <= grp_fu_1642_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1272_1_fu_1536_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        add_ln1276_reg_2611 <= add_ln1276_fu_1545_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        add_ln1279_reg_2602 <= add_ln1279_fu_1526_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state159)) begin
        add_ln1284_reg_2898 <= add_ln1284_fu_1999_p2;
        trunc_ln13_reg_2903 <= trunc_ln13_fu_2004_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln9_reg_2912 == 1'd0))) begin
        add_ln13_reg_2933 <= add_ln13_fu_2060_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        add_ln341_reg_2239 <= add_ln341_fu_1050_p2;
        isNeg_reg_2244 <= add_ln341_fu_1050_p2[32'd8];
        p_Result_s_reg_2229 <= data_V_fu_1021_p1[32'd31];
        sub_ln1311_reg_2250 <= sub_ln1311_fu_1064_p2;
        tmp_64_reg_2234 <= tmp_64_fu_1042_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter0 == 1'b1))) begin
        add_ln9_1_reg_2907 <= add_ln9_1_fu_2007_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln9_fu_2013_p2 == 1'd0))) begin
        add_ln9_reg_2916 <= add_ln9_fu_2019_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1313_1_reg_2312_pp1_iter1_reg == 1'd1) & (1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
        conv2_i_reg_2349 <= grp_fu_891_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1313_1_reg_2312_pp1_iter1_reg == 1'd1) & (1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5))) begin
        dc_9_reg_2355 <= grp_fu_891_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        dc_reg_2224 <= grp_fu_871_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        empty_reg_2151 <= empty_fu_930_p1;
        y_reg_2165 <= radii_q0;
        zext_ln1176_1_reg_2156[9 : 7] <= zext_ln1176_1_fu_941_p1[9 : 7];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        i_op_assign_1_reg_2219 <= grp_fu_875_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        i_op_assign_reg_2214 <= grp_fu_879_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1180_1_reg_2175 <= icmp_ln1180_1_fu_955_p2;
        icmp_ln1180_1_reg_2175_pp0_iter1_reg <= icmp_ln1180_1_reg_2175;
        row_list_size_reg_513_pp0_iter1_reg <= row_list_size_reg_513;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln1180_1_reg_2175_pp0_iter2_reg <= icmp_ln1180_1_reg_2175_pp0_iter1_reg;
        icmp_ln1180_1_reg_2175_pp0_iter3_reg <= icmp_ln1180_1_reg_2175_pp0_iter2_reg;
        row_list_size_reg_513_pp0_iter2_reg <= row_list_size_reg_513_pp0_iter1_reg;
        row_list_size_reg_513_pp0_iter3_reg <= row_list_size_reg_513_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        icmp_ln1180_reg_2118 <= icmp_ln1180_fu_925_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        icmp_ln1216_1_reg_2862 <= icmp_ln1216_1_fu_1918_p2;
        icmp_ln1216_1_reg_2862_pp6_iter1_reg <= icmp_ln1216_1_reg_2862;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp6_stage0_11001)) begin
        icmp_ln1216_1_reg_2862_pp6_iter2_reg <= icmp_ln1216_1_reg_2862_pp6_iter1_reg;
        icmp_ln1216_1_reg_2862_pp6_iter3_reg <= icmp_ln1216_1_reg_2862_pp6_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        icmp_ln1229_1_reg_2776 <= icmp_ln1229_1_fu_1800_p2;
        icmp_ln1229_1_reg_2776_pp5_iter1_reg <= icmp_ln1229_1_reg_2776;
        icmp_ln1229_1_reg_2776_pp5_iter2_reg <= icmp_ln1229_1_reg_2776_pp5_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1229_1_reg_2776 == 1'd0) & (1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1))) begin
        icmp_ln1231_reg_2785 <= icmp_ln1231_fu_1811_p2;
        select_ln1229_reg_2790 <= select_ln1229_fu_1817_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1))) begin
        icmp_ln1231_reg_2785_pp5_iter1_reg <= icmp_ln1231_reg_2785;
        select_ln1229_reg_2790_pp5_iter1_reg <= select_ln1229_reg_2790;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        icmp_ln1259_1_reg_2652 <= icmp_ln1259_1_fu_1637_p2;
        icmp_ln1259_1_reg_2652_pp4_iter1_reg <= icmp_ln1259_1_reg_2652;
        icmp_ln1259_1_reg_2652_pp4_iter2_reg <= icmp_ln1259_1_reg_2652_pp4_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1259_1_reg_2652 == 1'd0) & (1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        icmp_ln1261_reg_2661 <= icmp_ln1261_fu_1654_p2;
        select_ln1259_reg_2666 <= select_ln1259_fu_1660_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln1272_1_reg_2607 <= icmp_ln1272_1_fu_1536_p2;
        icmp_ln1272_1_reg_2607_pp3_iter1_reg <= icmp_ln1272_1_reg_2607;
        temp_size_3_reg_705_pp3_iter1_reg <= temp_size_3_reg_705;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        icmp_ln1272_1_reg_2607_pp3_iter2_reg <= icmp_ln1272_1_reg_2607_pp3_iter1_reg;
        icmp_ln1272_1_reg_2607_pp3_iter3_reg <= icmp_ln1272_1_reg_2607_pp3_iter2_reg;
        temp_size_3_reg_705_pp3_iter2_reg <= temp_size_3_reg_705_pp3_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln1293_reg_2427 <= icmp_ln1293_fu_1331_p2;
        icmp_ln1293_reg_2427_pp2_iter1_reg <= icmp_ln1293_reg_2427;
        zext_ln1293_reg_2421[7 : 0] <= zext_ln1293_fu_1327_p1[7 : 0];
        zext_ln1293_reg_2421_pp2_iter1_reg[7 : 0] <= zext_ln1293_reg_2421[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        icmp_ln1293_reg_2427_pp2_iter2_reg <= icmp_ln1293_reg_2427_pp2_iter1_reg;
        icmp_ln1293_reg_2427_pp2_iter3_reg <= icmp_ln1293_reg_2427_pp2_iter2_reg;
        icmp_ln1293_reg_2427_pp2_iter4_reg <= icmp_ln1293_reg_2427_pp2_iter3_reg;
        icmp_ln1293_reg_2427_pp2_iter5_reg <= icmp_ln1293_reg_2427_pp2_iter4_reg;
        ret_32_reg_2436_pp2_iter3_reg <= ret_32_reg_2436;
        ret_33_reg_2447_pp2_iter3_reg <= ret_33_reg_2447;
        tmp_59_reg_2442_pp2_iter3_reg <= tmp_59_reg_2442;
        tmp_60_reg_2453_pp2_iter3_reg <= tmp_60_reg_2453;
        zext_ln1293_reg_2421_pp2_iter2_reg[7 : 0] <= zext_ln1293_reg_2421_pp2_iter1_reg[7 : 0];
        zext_ln1293_reg_2421_pp2_iter3_reg[7 : 0] <= zext_ln1293_reg_2421_pp2_iter2_reg[7 : 0];
        zext_ln1293_reg_2421_pp2_iter4_reg[7 : 0] <= zext_ln1293_reg_2421_pp2_iter3_reg[7 : 0];
        zext_ln1293_reg_2421_pp2_iter5_reg[7 : 0] <= zext_ln1293_reg_2421_pp2_iter4_reg[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1293_reg_2427_pp2_iter4_reg == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln1295_reg_2483 <= icmp_ln1295_fu_1395_p2;
        icmp_ln1301_reg_2494 <= icmp_ln1301_fu_1404_p2;
        sext_ln1295_reg_2478 <= sext_ln1295_fu_1392_p1;
        sext_ln1301_reg_2489 <= sext_ln1301_fu_1401_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln1313_1_reg_2312 <= icmp_ln1313_1_fu_1164_p2;
        icmp_ln1313_1_reg_2312_pp1_iter1_reg <= icmp_ln1313_1_reg_2312;
        zext_ln1313_reg_2307[7 : 0] <= zext_ln1313_fu_1160_p1[7 : 0];
        zext_ln1313_reg_2307_pp1_iter1_reg[7 : 0] <= zext_ln1313_reg_2307[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        icmp_ln1313_reg_2293 <= icmp_ln1313_fu_1143_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1313_1_reg_2312_pp1_iter1_reg == 1'd1) & (1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6))) begin
        icmp_ln1315_1_reg_2370 <= icmp_ln1315_1_fu_1259_p2;
        icmp_ln1315_2_reg_2375 <= icmp_ln1315_2_fu_1265_p2;
        icmp_ln1315_3_reg_2380 <= icmp_ln1315_3_fu_1271_p2;
        icmp_ln1315_reg_2365 <= icmp_ln1315_fu_1253_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        icmp_ln9_reg_2912 <= icmp_ln9_fu_2013_p2;
        icmp_ln9_reg_2912_pp7_iter1_reg <= icmp_ln9_reg_2912;
        icmp_ln9_reg_2912_pp7_iter2_reg <= icmp_ln9_reg_2912_pp7_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage1_11001) & (1'b1 == ap_CS_fsm_pp7_stage1) & (icmp_ln9_reg_2912_pp7_iter1_reg == 1'd0))) begin
        init_patch1_addr_reg_2953 <= zext_ln13_1_fu_2071_p1;
        init_patch2_addr_reg_2958 <= zext_ln13_1_fu_2071_p1;
        init_patch3_addr_reg_2963 <= zext_ln13_1_fu_2071_p1;
        init_patch4_addr_reg_2968 <= zext_ln13_1_fu_2071_p1;
        init_patch_addr_reg_2948 <= zext_ln13_1_fu_2071_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage1_11001) & (1'b1 == ap_CS_fsm_pp7_stage1))) begin
        init_patch1_addr_reg_2953_pp7_iter2_reg <= init_patch1_addr_reg_2953;
        init_patch2_addr_reg_2958_pp7_iter2_reg <= init_patch2_addr_reg_2958;
        init_patch3_addr_reg_2963_pp7_iter2_reg <= init_patch3_addr_reg_2963;
        init_patch4_addr_reg_2968_pp7_iter2_reg <= init_patch4_addr_reg_2968;
        init_patch_addr_reg_2948_pp7_iter2_reg <= init_patch_addr_reg_2948;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln1229_1_fu_1800_p2 == 1'd0))) begin
        j_17_reg_2780 <= j_17_fu_1805_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln1259_1_fu_1637_p2 == 1'd0))) begin
        j_19_reg_2656 <= j_19_fu_1648_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j_3_reg_2302 <= j_3_fu_1154_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state141) & (icmp_ln1214_fu_1767_p2 == 1'd1))) begin
        j_6_reg_2770 <= j_6_fu_1796_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1257_fu_1499_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state120))) begin
        j_9_reg_2580 <= j_9_fu_1504_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1293_reg_2427_pp2_iter3_reg == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        rbVal_1_reg_2473 <= rbVal_1_fu_1387_p3;
        select_ln180_1_reg_2468 <= select_ln180_1_fu_1382_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_903 <= grp_fu_884_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln1293_reg_2427 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((icmp_ln1313_1_reg_2312 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        reg_910 <= row_list_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((p_Result_s_reg_2229 == 1'd1) & (1'b1 == ap_CS_fsm_state81))) begin
        result_V_5_reg_2288 <= grp_fu_1138_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        result_V_reg_2297 <= result_V_fu_1149_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1293_reg_2427_pp2_iter1_reg == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        ret_32_reg_2436 <= ret_32_fu_1346_p2;
        ret_33_reg_2447 <= ret_33_fu_1359_p2;
        tmp_59_reg_2442 <= ret_32_fu_1346_p2[32'd32];
        tmp_60_reg_2453 <= ret_33_fu_1359_p2[32'd32];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        ret_reg_2204 <= ret_fu_1011_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        rhs_18_reg_2410[25 : 0] <= rhs_18_fu_1317_p1[25 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state139)) begin
        select_ln1209_reg_2729 <= select_ln1209_fu_1740_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1229_1_reg_2776 == 1'd0) & (1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        select_ln1229_1_reg_2797 <= select_ln1229_1_fu_1825_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        select_ln1242_reg_2555 <= select_ln1242_fu_1479_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1259_1_reg_2652 == 1'd0) & (1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
        select_ln1259_1_reg_2673 <= select_ln1259_1_fu_1668_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1313_1_reg_2312 == 1'd1) & (1'b0 == ap_block_pp1_stage8_11001) & (1'b1 == ap_CS_fsm_pp1_stage8))) begin
        select_ln180_reg_2344 <= select_ln180_fu_1197_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage1_11001) & (1'b1 == ap_CS_fsm_pp7_stage1) & (icmp_ln9_reg_2912 == 1'd0) & (ap_enable_reg_pp7_iter0 == 1'b1))) begin
        select_ln9_1_reg_2927 <= select_ln9_1_fu_2039_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage1_11001) & (1'b1 == ap_CS_fsm_pp7_stage1) & (icmp_ln9_reg_2912 == 1'd0))) begin
        select_ln9_reg_2921 <= select_ln9_fu_2031_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1313_1_reg_2312 == 1'd1) & (1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
        start_value_1_reg_2326 <= grp_fu_1179_p2;
        tmp_58_reg_2334 <= grp_fu_1179_p2[32'd63];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
        start_value_1_reg_2326_pp1_iter1_reg <= start_value_1_reg_2326;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state118)) begin
        sub_ln1257_reg_2562 <= sub_ln1257_fu_1486_p2;
        trunc_ln1257_reg_2567 <= trunc_ln1257_fu_1490_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_59_reg_2442 == 1'd1) & (icmp_ln1293_reg_2427_pp2_iter2_reg == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        sub_ln180_2_reg_2458 <= sub_ln180_2_fu_1372_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_60_reg_2453 == 1'd1) & (icmp_ln1293_reg_2427_pp2_iter2_reg == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        sub_ln180_3_reg_2463 <= sub_ln180_3_fu_1377_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_58_reg_2334 == 1'd1) & (icmp_ln1313_1_reg_2312 == 1'd1) & (1'b0 == ap_block_pp1_stage7_11001) & (1'b1 == ap_CS_fsm_pp1_stage7))) begin
        sub_ln180_reg_2339 <= grp_fu_1192_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage1_11001) & (1'b1 == ap_CS_fsm_pp7_stage1) & (ap_enable_reg_pp7_iter2 == 1'b1) & (icmp_ln9_reg_2912_pp7_iter2_reg == 1'd0))) begin
        temp_V_load_reg_2973 <= temp_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1313_1_reg_2312_pp1_iter1_reg == 1'd1) & (1'b0 == ap_block_pp1_stage9_11001) & (1'b1 == ap_CS_fsm_pp1_stage9))) begin
        tmp_34_reg_2385 <= grp_fu_887_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((isNeg_reg_2244 == 1'd0) & (1'b1 == ap_CS_fsm_state77))) begin
        tmp_36_reg_2277 <= {{grp_fu_1105_p2[87:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state141) & (icmp_ln1229_fu_1778_p2 == 1'd1) & (icmp_ln1214_fu_1767_p2 == 1'd0))) begin
        tmp_37_reg_2765[32 : 1] <= tmp_37_fu_1788_p3[32 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1259_fu_1613_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state128))) begin
        tmp_38_reg_2642[32 : 1] <= tmp_38_fu_1623_p3[32 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1216_1_reg_2862_pp6_iter2_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        tmp_39_reg_2892[9 : 1] <= tmp_39_fu_1973_p3[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1272_1_reg_2607_pp3_iter2_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        tmp_41_reg_2632[9 : 1] <= tmp_41_fu_1584_p3[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((isNeg_reg_2244 == 1'd1) & (1'b1 == ap_CS_fsm_state77))) begin
        tmp_reg_2272 <= grp_fu_1099_p2[32'd24];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln1229_1_reg_2776_pp5_iter1_reg == 1'd0))) begin
        trunc_ln1233_reg_2848 <= trunc_ln1233_fu_1881_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1259_1_reg_2652 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        trunc_ln1263_reg_2699 <= trunc_ln1263_fu_1694_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        ush_reg_2255 <= ush_fu_1073_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        val_reg_2282 <= val_fu_1132_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        zext_ln1176_reg_2095[2 : 0] <= zext_ln1176_fu_920_p1[2 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1))) begin
        GDarrayDecoded_address0 = zext_ln1220_2_fu_1946_p1;
    end else if (((1'b0 == ap_block_pp5_stage2) & (1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter1 == 1'b1))) begin
        GDarrayDecoded_address0 = zext_ln1233_4_fu_1871_p1;
    end else if (((1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1))) begin
        GDarrayDecoded_address0 = zext_ln1276_3_fu_1579_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        GDarrayDecoded_address0 = zext_ln1182_1_fu_986_p1;
    end else begin
        GDarrayDecoded_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1))) begin
        GDarrayDecoded_address1 = zext_ln1220_3_fu_1962_p1;
    end else if (((1'b0 == ap_block_pp4_stage2) & (1'b1 == ap_CS_fsm_pp4_stage2) & (ap_enable_reg_pp4_iter1 == 1'b1))) begin
        GDarrayDecoded_address1 = zext_ln1263_4_fu_1728_p1;
    end else if (((1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1))) begin
        GDarrayDecoded_address1 = zext_ln1276_2_fu_1563_p1;
    end else begin
        GDarrayDecoded_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter2 == 1'b1)) | ((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1)) | ((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001) & (1'b1 == ap_CS_fsm_pp5_stage1)) | ((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp5_stage2_11001) & (1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter1 == 1'b1)))) begin
        GDarrayDecoded_ce0 = 1'b1;
    end else begin
        GDarrayDecoded_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter2 == 1'b1)) | ((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1)) | ((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((1'b0 == ap_block_pp4_stage2_11001) & (1'b1 == ap_CS_fsm_pp4_stage2) & (ap_enable_reg_pp4_iter1 == 1'b1)))) begin
        GDarrayDecoded_ce1 = 1'b1;
    end else begin
        GDarrayDecoded_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        GDn_points_ce0 = 1'b1;
    end else begin
        GDn_points_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1180_1_fu_955_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1313_1_fu_1164_p2 == 1'd0)) begin
        ap_condition_pp1_exit_iter0_state83 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state83 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1293_fu_1331_p2 == 1'd0)) begin
        ap_condition_pp2_exit_iter0_state107 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state107 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1272_1_fu_1536_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state122 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state122 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1259_1_fu_1637_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state129 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state129 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_condition_pp5_exit_iter1_state145 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter1_state145 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1229_1_reg_2776 == 1'd1) & (1'b0 == ap_block_pp5_stage2_subdone) & (1'b1 == ap_CS_fsm_pp5_stage2))) begin
        ap_condition_pp5_flush_enable = 1'b1;
    end else begin
        ap_condition_pp5_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1))) begin
        ap_condition_pp6_exit_iter2_state155 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter2_state155 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0_subdone) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln1216_1_fu_1918_p2 == 1'd1))) begin
        ap_condition_pp6_flush_enable = 1'b1;
    end else begin
        ap_condition_pp6_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln9_reg_2912 == 1'd1)) begin
        ap_condition_pp7_exit_iter0_state161 = 1'b1;
    end else begin
        ap_condition_pp7_exit_iter0_state161 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state167) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter6 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter4 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter3 == 1'b0) & (ap_enable_reg_pp7_iter2 == 1'b0) & (ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (icmp_ln9_reg_2912 == 1'd0))) begin
        ap_phi_mux_i_16_phi_fu_852_p4 = select_ln9_1_reg_2927;
    end else begin
        ap_phi_mux_i_16_phi_fu_852_p4 = i_16_reg_848;
    end
end

always @ (*) begin
    if (((icmp_ln1259_1_reg_2652 == 1'd0) & (1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten13_phi_fu_730_p4 = add_ln1259_reg_2647;
    end else begin
        ap_phi_mux_indvar_flatten13_phi_fu_730_p4 = indvar_flatten13_reg_726;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (icmp_ln9_reg_2912 == 1'd0))) begin
        ap_phi_mux_indvar_flatten21_phi_fu_841_p4 = add_ln9_1_reg_2907;
    end else begin
        ap_phi_mux_indvar_flatten21_phi_fu_841_p4 = indvar_flatten21_reg_837;
    end
end

always @ (*) begin
    if (((icmp_ln1229_1_reg_2776 == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten_phi_fu_775_p4 = add_ln1229_reg_2803;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_775_p4 = indvar_flatten_reg_771;
    end
end

always @ (*) begin
    if (((icmp_ln1229_1_reg_2776 == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1))) begin
        ap_phi_mux_j_11_phi_fu_786_p4 = select_ln1229_1_reg_2797;
    end else begin
        ap_phi_mux_j_11_phi_fu_786_p4 = j_11_reg_783;
    end
end

always @ (*) begin
    if (((icmp_ln1259_1_reg_2652 == 1'd0) & (1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1))) begin
        ap_phi_mux_j_12_phi_fu_752_p4 = select_ln1259_1_reg_2673;
    end else begin
        ap_phi_mux_j_12_phi_fu_752_p4 = j_12_reg_749;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage1) & (1'b1 == ap_CS_fsm_pp7_stage1) & (ap_enable_reg_pp7_iter1 == 1'b1) & (icmp_ln9_reg_2912_pp7_iter1_reg == 1'd0))) begin
        ap_phi_mux_j_18_phi_fu_864_p4 = add_ln11_reg_2938;
    end else begin
        ap_phi_mux_j_18_phi_fu_864_p4 = j_18_reg_860;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1313_1_reg_2312 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_j_21_phi_fu_588_p4 = j_3_reg_2302;
    end else begin
        ap_phi_mux_j_21_phi_fu_588_p4 = j_21_reg_584;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter6 == 1'b1) & (icmp_ln1293_reg_2427_pp2_iter5_reg == 1'd1) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_lbVal_phi_fu_646_p4 = lbVal_1_fu_1416_p3;
    end else begin
        ap_phi_mux_lbVal_phi_fu_646_p4 = lbVal_reg_642;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1313_1_reg_2312_pp1_iter1_reg == 1'd1) & (1'b0 == ap_block_pp1_stage10) & (1'b1 == ap_CS_fsm_pp1_stage10))) begin
        ap_phi_mux_p_x_assign_2_phi_fu_576_p4 = select_ln1315_2_fu_1310_p3;
    end else begin
        ap_phi_mux_p_x_assign_2_phi_fu_576_p4 = p_x_assign_2_reg_572;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter6 == 1'b1) & (icmp_ln1293_reg_2427_pp2_iter5_reg == 1'd1) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_rbVal_phi_fu_634_p4 = rbVal_2_fu_1428_p3;
    end else begin
        ap_phi_mux_rbVal_phi_fu_634_p4 = rbVal_reg_630;
    end
end

always @ (*) begin
    if (((icmp_ln1180_1_reg_2175 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_row_list_size_phi_fu_517_p4 = add_ln1182_reg_2170;
    end else begin
        ap_phi_mux_row_list_size_phi_fu_517_p4 = row_list_size_reg_513;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln1229_1_reg_2776_pp5_iter1_reg == 1'd0))) begin
        ap_phi_mux_temp_size_1_phi_fu_808_p4 = select_ln1229_2_fu_1875_p3;
    end else begin
        ap_phi_mux_temp_size_1_phi_fu_808_p4 = temp_size_1_reg_804;
    end
end

always @ (*) begin
    if (((icmp_ln1259_1_reg_2652 == 1'd0) & (1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1))) begin
        ap_phi_mux_temp_size_2_phi_fu_741_p4 = select_ln1259_2_fu_1688_p3;
    end else begin
        ap_phi_mux_temp_size_2_phi_fu_741_p4 = temp_size_2_reg_737;
    end
end

always @ (*) begin
    if (((icmp_ln1272_1_reg_2607 == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1))) begin
        ap_phi_mux_temp_size_3_phi_fu_709_p4 = add_ln1279_reg_2602;
    end else begin
        ap_phi_mux_temp_size_3_phi_fu_709_p4 = temp_size_3_reg_705;
    end
end

always @ (*) begin
    if (((icmp_ln1216_1_reg_2862_pp6_iter2_reg == 1'd0) & (ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        ap_phi_mux_temp_size_phi_fu_829_p4 = add_ln1223_reg_2887;
    end else begin
        ap_phi_mux_temp_size_phi_fu_829_p4 = temp_size_reg_825;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln1259_1_reg_2652_pp4_iter1_reg == 1'd0))) begin
        ap_phi_mux_z_1_phi_fu_763_p4 = add_ln1261_reg_2709;
    end else begin
        ap_phi_mux_z_1_phi_fu_763_p4 = z_1_reg_759;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage1) & (1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln1229_1_reg_2776_pp5_iter1_reg == 1'd0))) begin
        ap_phi_mux_z_phi_fu_797_p4 = add_ln1231_reg_2823;
    end else begin
        ap_phi_mux_z_phi_fu_797_p4 = z_reg_793;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state167)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_884_p0 = $signed(apexZ0_read_read_fu_246_p2);
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_884_p0 = sext_ln1422_fu_1017_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_884_p0 = zext_ln1186_fu_1001_p1;
    end else begin
        grp_fu_884_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage10) & (1'b1 == ap_CS_fsm_pp1_stage10))) begin
            grp_fu_891_p0 = ap_phi_mux_p_x_assign_2_phi_fu_576_p4;
        end else if (((1'b0 == ap_block_pp1_stage9) & (1'b1 == ap_CS_fsm_pp1_stage9))) begin
            grp_fu_891_p0 = select_ln180_reg_2344;
        end else begin
            grp_fu_891_p0 = 'bx;
        end
    end else begin
        grp_fu_891_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter3 == 1'b1))) begin
        init_patch1_ce0 = 1'b1;
    end else begin
        init_patch1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter3 == 1'b1) & (trunc_ln13_reg_2903 == 3'd1))) begin
        init_patch1_we0 = 1'b1;
    end else begin
        init_patch1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter3 == 1'b1))) begin
        init_patch2_ce0 = 1'b1;
    end else begin
        init_patch2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter3 == 1'b1) & (trunc_ln13_reg_2903 == 3'd2))) begin
        init_patch2_we0 = 1'b1;
    end else begin
        init_patch2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter3 == 1'b1))) begin
        init_patch3_ce0 = 1'b1;
    end else begin
        init_patch3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter3 == 1'b1) & (trunc_ln13_reg_2903 == 3'd3))) begin
        init_patch3_we0 = 1'b1;
    end else begin
        init_patch3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter3 == 1'b1))) begin
        init_patch4_ce0 = 1'b1;
    end else begin
        init_patch4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln13_reg_2903 == 3'd0) & ~(trunc_ln13_reg_2903 == 3'd1) & ~(trunc_ln13_reg_2903 == 3'd2) & ~(trunc_ln13_reg_2903 == 3'd3) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter3 == 1'b1))) begin
        init_patch4_we0 = 1'b1;
    end else begin
        init_patch4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter3 == 1'b1))) begin
        init_patch_ce0 = 1'b1;
    end else begin
        init_patch_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter3 == 1'b1) & (trunc_ln13_reg_2903 == 3'd0))) begin
        init_patch_we0 = 1'b1;
    end else begin
        init_patch_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        radii_ce0 = 1'b1;
    end else begin
        radii_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        row_list_V_address0 = zext_ln1295_fu_1337_p1;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        row_list_V_address0 = zext_ln1315_fu_1170_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        row_list_V_address0 = lftr_wideiv_cast_fu_991_p1;
    end else begin
        row_list_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        row_list_V_ce0 = 1'b1;
    end else begin
        row_list_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1180_1_reg_2175_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        row_list_V_we0 = 1'b1;
    end else begin
        row_list_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage1) & (1'b1 == ap_CS_fsm_pp7_stage1) & (ap_enable_reg_pp7_iter1 == 1'b1))) begin
        temp_V_address0 = zext_ln13_1_fu_2071_p1;
    end else if (((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter4 == 1'b1))) begin
        temp_V_address0 = tmp_40_fu_1990_p3;
    end else if (((ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage2) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        temp_V_address0 = zext_ln1263_3_fu_1732_p1;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter4 == 1'b1))) begin
        temp_V_address0 = tmp_42_fu_1601_p3;
    end else begin
        temp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter4 == 1'b1))) begin
        temp_V_address1 = zext_ln1220_fu_1981_p1;
    end else if (((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage2) & (1'b1 == ap_CS_fsm_pp5_stage2))) begin
        temp_V_address1 = zext_ln1233_3_fu_1901_p1;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter4 == 1'b1))) begin
        temp_V_address1 = zext_ln1276_fu_1592_p1;
    end else begin
        temp_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter4 == 1'b1)) | ((ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage2_11001) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter4 == 1'b1)) | ((1'b0 == ap_block_pp7_stage1_11001) & (1'b1 == ap_CS_fsm_pp7_stage1) & (ap_enable_reg_pp7_iter2 == 1'b1)) | ((1'b0 == ap_block_pp7_stage1_11001) & (1'b1 == ap_CS_fsm_pp7_stage1) & (ap_enable_reg_pp7_iter1 == 1'b1)) | ((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter2 == 1'b1)))) begin
        temp_V_ce0 = 1'b1;
    end else begin
        temp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter4 == 1'b1)) | ((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage2_11001) & (1'b1 == ap_CS_fsm_pp5_stage2)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter4 == 1'b1)))) begin
        temp_V_ce1 = 1'b1;
    end else begin
        temp_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage2) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        temp_V_d0 = reg_895;
    end else if ((((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter4 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter4 == 1'b1)))) begin
        temp_V_d0 = reg_914;
    end else begin
        temp_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter4 == 1'b1) & (icmp_ln1216_1_reg_2862_pp6_iter3_reg == 1'd0)) | ((icmp_ln1259_1_reg_2652_pp4_iter2_reg == 1'd0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage2_11001) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((icmp_ln1272_1_reg_2607_pp3_iter3_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter4 == 1'b1)))) begin
        temp_V_we0 = 1'b1;
    end else begin
        temp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter4 == 1'b1) & (icmp_ln1216_1_reg_2862_pp6_iter3_reg == 1'd0)) | ((icmp_ln1229_1_reg_2776_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage2_11001) & (1'b1 == ap_CS_fsm_pp5_stage2)) | ((icmp_ln1272_1_reg_2607_pp3_iter3_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter4 == 1'b1)))) begin
        temp_V_we1 = 1'b1;
    end else begin
        temp_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state105)) begin
        trapezoid_edges_V_ce0 = 1'b1;
    end else begin
        trapezoid_edges_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln1180_reg_2118 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln1180_1_fu_955_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((icmp_ln1180_1_fu_955_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            if (((icmp_ln1313_reg_2293 == 1'd1) & (1'b1 == ap_CS_fsm_state82))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state115;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln1313_1_fu_1164_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln1313_1_fu_1164_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state105;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((1'b0 == ap_block_pp1_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_pp1_stage3 : begin
            if ((1'b0 == ap_block_pp1_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end
        end
        ap_ST_fsm_pp1_stage4 : begin
            if ((1'b0 == ap_block_pp1_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end
        end
        ap_ST_fsm_pp1_stage5 : begin
            if ((1'b0 == ap_block_pp1_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            end
        end
        ap_ST_fsm_pp1_stage6 : begin
            if ((1'b0 == ap_block_pp1_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            end
        end
        ap_ST_fsm_pp1_stage7 : begin
            if ((1'b0 == ap_block_pp1_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage7;
            end
        end
        ap_ST_fsm_pp1_stage8 : begin
            if ((1'b0 == ap_block_pp1_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage8;
            end
        end
        ap_ST_fsm_pp1_stage9 : begin
            if ((1'b0 == ap_block_pp1_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage9;
            end
        end
        ap_ST_fsm_pp1_stage10 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b0) & (1'b0 == ap_block_pp1_stage10_subdone) & (1'b1 == ap_CS_fsm_pp1_stage10)) & (1'b0 == ap_block_pp1_stage10_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b0) & (1'b0 == ap_block_pp1_stage10_subdone) & (1'b1 == ap_CS_fsm_pp1_stage10))) begin
                ap_NS_fsm = ap_ST_fsm_state105;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage10;
            end
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((icmp_ln1293_fu_1331_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)) & ~((ap_enable_reg_pp2_iter6 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter5 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter6 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter5 == 1'b0)) | ((icmp_ln1293_fu_1331_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state114;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            if (((leftRight_read_read_fu_234_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state115))) begin
                ap_NS_fsm = ap_ST_fsm_state139;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state116;
            end
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            if (((icmp_ln1257_fu_1499_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state120))) begin
                ap_NS_fsm = ap_ST_fsm_state128;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state121;
            end
        end
        ap_ST_fsm_state121 : begin
            if (((icmp_ln1272_fu_1521_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state121))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state159;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((icmp_ln1272_1_fu_1536_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0)) & ~((ap_enable_reg_pp3_iter3 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter3 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter4 == 1'b1)) | ((icmp_ln1272_1_fu_1536_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state127;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state159;
        end
        ap_ST_fsm_state128 : begin
            if (((icmp_ln1259_fu_1613_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state128))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state159;
            end
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter1 == 1'b0) & (icmp_ln1259_1_fu_1637_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1)) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end else if (((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter1 == 1'b0) & (icmp_ln1259_1_fu_1637_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state138;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_pp4_stage1 : begin
            if ((1'b0 == ap_block_pp4_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end
        end
        ap_ST_fsm_pp4_stage2 : begin
            if ((~((ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage2_subdone) & (1'b1 == ap_CS_fsm_pp4_stage2) & (ap_enable_reg_pp4_iter1 == 1'b0)) & (1'b0 == ap_block_pp4_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage2_subdone) & (1'b1 == ap_CS_fsm_pp4_stage2) & (ap_enable_reg_pp4_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state138;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage2;
            end
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state159;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            if (((1'b1 == ap_CS_fsm_state141) & (icmp_ln1229_fu_1778_p2 == 1'd1) & (icmp_ln1214_fu_1767_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if (((1'b1 == ap_CS_fsm_state141) & (icmp_ln1229_fu_1778_p2 == 1'd0) & (icmp_ln1214_fu_1767_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state159;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state152;
            end
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((ap_enable_reg_pp5_iter2 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (ap_enable_reg_pp5_iter0 == 1'b0)) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage1;
            end else if (((ap_enable_reg_pp5_iter2 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state151;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_pp5_stage1 : begin
            if ((1'b0 == ap_block_pp5_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage1;
            end
        end
        ap_ST_fsm_pp5_stage2 : begin
            if ((~((1'b0 == ap_block_pp5_stage2_subdone) & (1'b1 == ap_condition_pp5_exit_iter1_state145) & (1'b1 == ap_CS_fsm_pp5_stage2)) & (1'b0 == ap_block_pp5_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if (((1'b0 == ap_block_pp5_stage2_subdone) & (1'b1 == ap_condition_pp5_exit_iter1_state145) & (1'b1 == ap_CS_fsm_pp5_stage2))) begin
                ap_NS_fsm = ap_ST_fsm_state151;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage2;
            end
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state159;
        end
        ap_ST_fsm_state152 : begin
            if (((1'b1 == ap_CS_fsm_state152) & (icmp_ln1216_fu_1908_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state159;
            end
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((ap_enable_reg_pp6_iter3 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1)) & ~((ap_enable_reg_pp6_iter3 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((ap_enable_reg_pp6_iter3 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter4 == 1'b1)) | ((ap_enable_reg_pp6_iter3 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state158;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state158 : begin
            ap_NS_fsm = ap_ST_fsm_state159;
        end
        ap_ST_fsm_state159 : begin
            ap_NS_fsm = ap_ST_fsm_pp7_stage0;
        end
        ap_ST_fsm_pp7_stage0 : begin
            if ((~((1'b0 == ap_block_pp7_stage0_subdone) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter3 == 1'b1) & (ap_enable_reg_pp7_iter2 == 1'b0)) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage1;
            end else if (((1'b0 == ap_block_pp7_stage0_subdone) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter3 == 1'b1) & (ap_enable_reg_pp7_iter2 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state167;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_pp7_stage1 : begin
            if ((~((1'b0 == ap_block_pp7_stage1_subdone) & (ap_enable_reg_pp7_iter1 == 1'b0) & (icmp_ln9_reg_2912 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1)) & (1'b0 == ap_block_pp7_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if (((1'b0 == ap_block_pp7_stage1_subdone) & (ap_enable_reg_pp7_iter1 == 1'b0) & (icmp_ln9_reg_2912 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state167;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage1;
            end
        end
        ap_ST_fsm_state167 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign GDn_points_address0 = zext_ln1176_fu_920_p1;

assign add_ln1182_1_fu_964_p2 = (zext_ln1176_1_reg_2156 + zext_ln1182_fu_960_p1);

assign add_ln11_fu_2066_p2 = (select_ln9_reg_2921 + 2'd1);

assign add_ln1214_2_fu_1761_p2 = (trunc_ln1214_fu_1751_p1 + 8'd1);

assign add_ln1220_fu_1928_p2 = (zext_ln1176_1_reg_2156 + zext_ln1220_1_fu_1924_p1);

assign add_ln1223_fu_1967_p2 = (ap_phi_mux_temp_size_phi_fu_829_p4 + 9'd1);

assign add_ln1231_fu_1866_p2 = (select_ln1229_reg_2790 + 2'd1);

assign add_ln1233_1_fu_1895_p2 = (tmp_93_cast_fu_1885_p3 + zext_ln1233_2_fu_1892_p1);

assign add_ln1233_fu_1841_p2 = (zext_ln1176_1_reg_2156 + zext_ln1233_fu_1838_p1);

assign add_ln1261_fu_1707_p2 = (select_ln1259_reg_2666 + 2'd1);

assign add_ln1263_1_fu_1722_p2 = (tmp_97_cast_fu_1712_p3 + zext_ln1263_2_fu_1719_p1);

assign add_ln1263_fu_1678_p2 = (zext_ln1176_1_reg_2156 + zext_ln1263_fu_1675_p1);

assign add_ln1276_fu_1545_p2 = (zext_ln1176_1_reg_2156 + zext_ln1276_1_fu_1541_p1);

assign add_ln1279_fu_1526_p2 = (ap_phi_mux_temp_size_3_phi_fu_709_p4 + 9'd1);

assign add_ln1284_fu_1999_p2 = (p_read1 + 8'd1);

assign add_ln13_fu_2060_p2 = (tmp_102_cast_fu_2053_p1 + zext_ln13_fu_2057_p1);

assign add_ln341_fu_1050_p2 = ($signed(zext_ln341_fu_1046_p1) + $signed(9'd385));

assign add_ln9_1_fu_2007_p2 = (ap_phi_mux_indvar_flatten21_phi_fu_841_p4 + 6'd1);

assign add_ln9_fu_2019_p2 = (ap_phi_mux_i_16_phi_fu_852_p4 + 5'd1);

assign and_ln1209_fu_1736_p2 = (icmp_ln1209_reg_2530 & icmp_ln1209_1_reg_2535);

assign and_ln1242_fu_1475_p2 = (icmp_ln1247_reg_2525 & icmp_ln1242_reg_2545);

assign and_ln1315_1_fu_1291_p2 = (tmp_34_reg_2385 & and_ln1315_fu_1285_p2);

assign and_ln1315_fu_1285_p2 = (or_ln1315_fu_1277_p2 & or_ln1315_1_fu_1281_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_pp1_stage10 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_pp1_stage4 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_pp1_stage5 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_pp1_stage6 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_pp1_stage7 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_pp1_stage8 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_pp1_stage9 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_pp4_stage1 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_pp4_stage2 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_pp5_stage1 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_pp5_stage2 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_pp7_stage1 = ap_CS_fsm[32'd119];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state115 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state120 = ap_CS_fsm[32'd98];

assign ap_CS_fsm_state121 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state139 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state140 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state141 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state152 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state159 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state167 = ap_CS_fsm[32'd120];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd77];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage6_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state100_pp1_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp1_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp1_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp1_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp1_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state110_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state112_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state113_pp2_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state122_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state123_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state124_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state125_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state126_pp3_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state129_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state130_pp4_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state131_pp4_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state132_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state133_pp4_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state134_pp4_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state135_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state136_pp4_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state137_pp4_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state142_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state143_pp5_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state144_pp5_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state145_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state146_pp5_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state147_pp5_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state148_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state149_pp5_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state150_pp5_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state153_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state154_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state155_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state156_pp6_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state157_pp6_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state160_pp7_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state161_pp7_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state162_pp7_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state163_pp7_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state164_pp7_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state165_pp7_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state166_pp7_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp1_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp1_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp1_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp1_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp1_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp1_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp1_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp1_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp1_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp1_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp1_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp1_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

assign ap_return_0 = original_ppl;

assign ap_return_1 = add_ln1284_reg_2898;

assign apexZ0_read_read_fu_246_p2 = apexZ0;

assign bitcast_ln1315_fu_1226_p1 = conv2_i_reg_2349;

assign data_V_10_fu_1202_p1 = dc_9_reg_2355;

assign data_V_fu_1021_p1 = dc_reg_2224;

assign empty_fu_930_p1 = original_ppl[7:0];

assign grp_fu_1179_p0 = $signed(reg_910);

assign grp_fu_1701_p0 = add_ln1263_reg_2684 << 11'd1;

assign grp_fu_1701_p1 = select_ln1259_reg_2666;

assign grp_fu_1860_p0 = add_ln1233_reg_2808 << 11'd1;

assign grp_fu_1860_p1 = select_ln1229_reg_2790;

assign grp_fu_887_p1 = p_Result_7_fu_1213_p3;

assign icmp_ln1180_1_fu_955_p2 = ((zext_ln1180_fu_951_p1 == GDn_points_load_reg_2106) ? 1'b1 : 1'b0);

assign icmp_ln1180_fu_925_p2 = (($signed(GDn_points_load_reg_2106) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln11_fu_2025_p2 = ((ap_phi_mux_j_18_phi_fu_864_p4 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln1209_1_fu_1452_p2 = (($signed(start_value_28_reg_667) > $signed(64'd10)) ? 1'b1 : 1'b0);

assign icmp_ln1209_fu_1446_p2 = ((start_index_29_reg_654 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1214_fu_1767_p2 = (($signed(add_ln1214_reg_2735) > $signed(add_ln1214_1_reg_2742)) ? 1'b1 : 1'b0);

assign icmp_ln1216_1_fu_1918_p2 = (($signed(zext_ln1216_1_fu_1914_p1) > $signed(right_bound_2_reg_692)) ? 1'b1 : 1'b0);

assign icmp_ln1216_fu_1908_p2 = (($signed(zext_ln1216_fu_1905_p1) > $signed(right_bound_2_reg_692)) ? 1'b1 : 1'b0);

assign icmp_ln1229_1_fu_1800_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_775_p4 == tmp_37_reg_2765) ? 1'b1 : 1'b0);

assign icmp_ln1229_fu_1778_p2 = (($signed(zext_ln1229_fu_1774_p1) < $signed(add_ln1214_reg_2735)) ? 1'b1 : 1'b0);

assign icmp_ln1231_fu_1811_p2 = ((ap_phi_mux_z_phi_fu_797_p4 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln1242_fu_1464_p2 = ((start_index_29_reg_654 != add_ln1242_reg_2520) ? 1'b1 : 1'b0);

assign icmp_ln1247_fu_1440_p2 = (($signed(start_value_28_reg_667) < $signed(64'd18446744073709551606)) ? 1'b1 : 1'b0);

assign icmp_ln1257_fu_1499_p2 = (($signed(add_ln1257_reg_2572) < $signed(left_bound_2_reg_679)) ? 1'b1 : 1'b0);

assign icmp_ln1259_1_fu_1637_p2 = ((ap_phi_mux_indvar_flatten13_phi_fu_730_p4 == tmp_38_reg_2642) ? 1'b1 : 1'b0);

assign icmp_ln1259_fu_1613_p2 = (($signed(zext_ln1259_fu_1610_p1) < $signed(add89_reg_2592)) ? 1'b1 : 1'b0);

assign icmp_ln1261_fu_1654_p2 = ((ap_phi_mux_z_1_phi_fu_763_p4 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln1272_1_fu_1536_p2 = (($signed(zext_ln1272_1_fu_1532_p1) > $signed(select_ln1242_reg_2555)) ? 1'b1 : 1'b0);

assign icmp_ln1272_fu_1521_p2 = (($signed(zext_ln1272_fu_1518_p1) > $signed(select_ln1242_reg_2555)) ? 1'b1 : 1'b0);

assign icmp_ln1293_fu_1331_p2 = (($signed(zext_ln1293_fu_1327_p1) < $signed(row_list_size_1_reg_536)) ? 1'b1 : 1'b0);

assign icmp_ln1295_fu_1395_p2 = (($signed(sext_ln1295_fu_1392_p1) < $signed(ap_phi_mux_lbVal_phi_fu_646_p4)) ? 1'b1 : 1'b0);

assign icmp_ln1301_fu_1404_p2 = (($signed(sext_ln1301_fu_1401_p1) < $signed(ap_phi_mux_rbVal_phi_fu_634_p4)) ? 1'b1 : 1'b0);

assign icmp_ln1313_1_fu_1164_p2 = (($signed(zext_ln1313_fu_1160_p1) < $signed(row_list_size_1_reg_536)) ? 1'b1 : 1'b0);

assign icmp_ln1313_fu_1143_p2 = (($signed(row_list_size_1_reg_536) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1315_1_fu_1259_p2 = ((trunc_ln1315_1_fu_1239_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln1315_2_fu_1265_p2 = ((tmp_33_fu_1243_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln1315_3_fu_1271_p2 = ((trunc_ln1315_fu_1209_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln1315_fu_1253_p2 = ((tmp_32_fu_1229_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_2013_p2 = ((ap_phi_mux_indvar_flatten21_phi_fu_841_p4 == 6'd32) ? 1'b1 : 1'b0);

assign init_patch1_address0 = init_patch1_addr_reg_2953_pp7_iter2_reg;

assign init_patch1_d0 = temp_V_load_reg_2973;

assign init_patch2_address0 = init_patch2_addr_reg_2958_pp7_iter2_reg;

assign init_patch2_d0 = temp_V_load_reg_2973;

assign init_patch3_address0 = init_patch3_addr_reg_2963_pp7_iter2_reg;

assign init_patch3_d0 = temp_V_load_reg_2973;

assign init_patch4_address0 = init_patch4_addr_reg_2968_pp7_iter2_reg;

assign init_patch4_d0 = temp_V_load_reg_2973;

assign init_patch_address0 = init_patch_addr_reg_2948_pp7_iter2_reg;

assign init_patch_d0 = temp_V_load_reg_2973;

assign j_16_fu_1933_p2 = (j_10_reg_816 + 8'd1);

assign j_17_fu_1805_p2 = (ap_phi_mux_j_11_phi_fu_786_p4 + 8'd1);

assign j_19_fu_1648_p2 = (ap_phi_mux_j_12_phi_fu_752_p4 + 8'd1);

assign j_1_fu_969_p2 = (j_reg_525 + 8'd1);

assign j_20_fu_1550_p2 = (j_13_reg_717 + 8'd1);

assign j_3_fu_1154_p2 = (ap_phi_mux_j_21_phi_fu_588_p4 + 8'd1);

assign j_5_fu_1321_p2 = (j_22_reg_619 + 8'd1);

assign j_6_fu_1796_p2 = (add_ln1214_2_reg_2747 - empty_reg_2151);

assign j_7_fu_1771_p1 = select_ln1209_reg_2729[7:0];

assign j_8_fu_1509_p1 = left_bound_2_reg_679[7:0];

assign j_9_fu_1504_p2 = (trunc_ln1257_reg_2567 + 8'd1);

assign lbVal_1_fu_1416_p3 = ((icmp_ln1295_reg_2483[0:0] == 1'b1) ? sext_ln1295_reg_2478 : lbVal_reg_642);

assign leftRight_read_read_fu_234_p2 = leftRight;

assign left_bound_1_fu_1410_p3 = ((icmp_ln1295_reg_2483[0:0] == 1'b1) ? zext_ln1293_reg_2421_pp2_iter5_reg : left_bound_reg_595);

assign lftr_wideiv_cast_fu_991_p1 = row_list_size_reg_513_pp0_iter3_reg;

assign mantissa_fu_1079_p4 = {{{{1'd1}, {tmp_64_reg_2234}}}, {1'd0}};

assign or_ln1182_fu_980_p2 = (shl_ln1182_fu_975_p2 | 11'd1);

assign or_ln1220_1_fu_1956_p2 = (shl_ln1220_fu_1951_p2 | 11'd1);

assign or_ln1220_fu_1985_p2 = (tmp_39_reg_2892 | 10'd1);

assign or_ln1276_1_fu_1573_p2 = (shl_ln1276_fu_1568_p2 | 11'd1);

assign or_ln1276_fu_1596_p2 = (tmp_41_reg_2632 | 10'd1);

assign or_ln1315_1_fu_1281_p2 = (icmp_ln1315_3_reg_2380 | icmp_ln1315_2_reg_2375);

assign or_ln1315_fu_1277_p2 = (icmp_ln1315_reg_2365 | icmp_ln1315_1_reg_2370);

assign p_Result_7_fu_1213_p3 = {{1'd0}, {trunc_ln368_fu_1205_p1}};

assign radii_address0 = zext_ln1176_reg_2095;

assign rbVal_1_fu_1387_p3 = ((tmp_60_reg_2453_pp2_iter3_reg[0:0] == 1'b1) ? sub_ln180_3_reg_2463 : ret_33_reg_2447_pp2_iter3_reg);

assign rbVal_2_fu_1428_p3 = ((icmp_ln1301_reg_2494[0:0] == 1'b1) ? sext_ln1301_reg_2489 : rbVal_reg_630);

assign result_V_fu_1149_p3 = ((p_Result_s_reg_2229[0:0] == 1'b1) ? result_V_5_reg_2288 : val_reg_2282);

assign ret_fu_1011_p0 = $signed(z_top);

assign ret_fu_1011_p1 = sext_ln215_26_fu_1008_p0;

assign rhs_18_fu_1317_p1 = trapezoid_edges_V_q0;

assign right_bound_3_fu_1422_p3 = ((icmp_ln1301_reg_2494[0:0] == 1'b1) ? zext_ln1293_reg_2421_pp2_iter5_reg : right_bound_reg_607);

assign select_ln1209_fu_1740_p3 = ((and_ln1209_fu_1736_p2[0:0] == 1'b1) ? add_ln1211_reg_2540 : start_index_29_reg_654);

assign select_ln1229_1_fu_1825_p3 = ((icmp_ln1231_fu_1811_p2[0:0] == 1'b1) ? j_17_reg_2780 : j_11_reg_783);

assign select_ln1229_2_fu_1875_p3 = ((icmp_ln1231_reg_2785_pp5_iter1_reg[0:0] == 1'b1) ? add_ln1236_reg_2833 : temp_size_1_reg_804);

assign select_ln1229_fu_1817_p3 = ((icmp_ln1231_fu_1811_p2[0:0] == 1'b1) ? 2'd0 : ap_phi_mux_z_phi_fu_797_p4);

assign select_ln1242_fu_1479_p3 = ((and_ln1242_fu_1475_p2[0:0] == 1'b1) ? add_ln1249_reg_2550 : start_index_29_reg_654);

assign select_ln1259_1_fu_1668_p3 = ((icmp_ln1261_fu_1654_p2[0:0] == 1'b1) ? j_19_reg_2656 : j_12_reg_749);

assign select_ln1259_2_fu_1688_p3 = ((icmp_ln1261_reg_2661[0:0] == 1'b1) ? add_ln1266_reg_2679 : temp_size_2_reg_737);

assign select_ln1259_fu_1660_p3 = ((icmp_ln1261_fu_1654_p2[0:0] == 1'b1) ? 2'd0 : ap_phi_mux_z_1_phi_fu_763_p4);

assign select_ln1315_2_fu_1310_p3 = ((and_ln1315_1_fu_1291_p2[0:0] == 1'b1) ? start_value_1_reg_2326_pp1_iter1_reg : p_x_assign_2_reg_572);

assign select_ln180_1_fu_1382_p3 = ((tmp_59_reg_2442_pp2_iter3_reg[0:0] == 1'b1) ? sub_ln180_2_reg_2458 : ret_32_reg_2436_pp2_iter3_reg);

assign select_ln180_fu_1197_p3 = ((tmp_58_reg_2334[0:0] == 1'b1) ? sub_ln180_reg_2339 : start_value_1_reg_2326);

assign select_ln9_1_fu_2039_p3 = ((icmp_ln11_fu_2025_p2[0:0] == 1'b1) ? add_ln9_reg_2916 : i_16_reg_848);

assign select_ln9_fu_2031_p3 = ((icmp_ln11_fu_2025_p2[0:0] == 1'b1) ? 2'd0 : ap_phi_mux_j_18_phi_fu_864_p4);

assign sext_ln1295_fu_1392_p1 = $signed(select_ln180_1_reg_2468);

assign sext_ln1301_fu_1401_p1 = $signed(rbVal_1_reg_2473);

assign sext_ln1311_fu_1070_p1 = $signed(sub_ln1311_reg_2250);

assign sext_ln1422_fu_1017_p1 = $signed(ret_reg_2204);

assign sext_ln215_26_fu_1008_p0 = apexZ0;

assign sext_ln215_27_fu_1342_p1 = $signed(reg_910);

assign sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_1095_p1 = $unsigned(sh_prom_i_i_i_i_i_cast_cast_cast_fu_1092_p1);

assign sh_prom_i_i_i_i_i_cast_cast_cast_fu_1092_p1 = $signed(ush_reg_2255);

assign shl_ln1182_fu_975_p2 = add_ln1182_1_reg_2179 << 11'd1;

assign shl_ln1220_fu_1951_p2 = add_ln1220_reg_2866 << 11'd1;

assign shl_ln1276_fu_1568_p2 = add_ln1276_reg_2611 << 11'd1;

assign start_index_2_fu_1303_p3 = ((and_ln1315_1_fu_1291_p2[0:0] == 1'b1) ? zext_ln1313_reg_2307_pp1_iter1_reg : start_index_reg_560);

assign start_value_2_fu_1296_p3 = ((and_ln1315_1_fu_1291_p2[0:0] == 1'b1) ? start_value_1_reg_2326_pp1_iter1_reg : start_value_reg_548);

assign sub_ln1311_fu_1064_p2 = (8'd127 - tmp_63_fu_1032_p4);

assign temp_V_d1 = reg_895;

assign tmp_102_cast_fu_2053_p1 = tmp_43_fu_2046_p3;

assign tmp_32_fu_1229_p4 = {{bitcast_ln1315_fu_1226_p1[62:52]}};

assign tmp_33_fu_1243_p4 = {{data_V_10_fu_1202_p1[62:52]}};

assign tmp_37_fu_1788_p3 = {{sub_ln1229_fu_1783_p2}, {1'd0}};

assign tmp_38_fu_1623_p3 = {{sub_ln1259_fu_1618_p2}, {1'd0}};

assign tmp_39_fu_1973_p3 = {{temp_size_reg_825}, {1'd0}};

assign tmp_40_fu_1990_p3 = {{54'd0}, {or_ln1220_fu_1985_p2}};

assign tmp_41_fu_1584_p3 = {{temp_size_3_reg_705_pp3_iter2_reg}, {1'd0}};

assign tmp_42_fu_1601_p3 = {{54'd0}, {or_ln1276_fu_1596_p2}};

assign tmp_43_fu_2046_p3 = {{select_ln9_1_reg_2927}, {1'd0}};

assign tmp_61_fu_1939_p3 = {{add_ln1220_reg_2866}, {1'd0}};

assign tmp_62_fu_1556_p3 = {{add_ln1276_reg_2611}, {1'd0}};

assign tmp_63_fu_1032_p4 = {{data_V_fu_1021_p1[30:23]}};

assign tmp_64_fu_1042_p1 = data_V_fu_1021_p1[22:0];

assign tmp_93_cast_fu_1885_p3 = {{trunc_ln1233_reg_2848}, {1'd0}};

assign tmp_97_cast_fu_1712_p3 = {{trunc_ln1263_reg_2699}, {1'd0}};

assign tmp_s_fu_934_p3 = {{i}, {7'd0}};

assign trapezoid_edges_V_address0 = zext_ln1176_reg_2095;

assign trunc_ln1214_fu_1751_p1 = right_bound_2_reg_692[7:0];

assign trunc_ln1233_fu_1881_p1 = select_ln1229_2_fu_1875_p3[6:0];

assign trunc_ln1257_fu_1490_p1 = sub_ln1257_fu_1486_p2[7:0];

assign trunc_ln1263_fu_1694_p1 = select_ln1259_2_fu_1688_p3[6:0];

assign trunc_ln1315_1_fu_1239_p1 = bitcast_ln1315_fu_1226_p1[51:0];

assign trunc_ln1315_fu_1209_p1 = data_V_10_fu_1202_p1[51:0];

assign trunc_ln13_fu_2004_p1 = p_read1[2:0];

assign trunc_ln368_fu_1205_p1 = data_V_10_fu_1202_p1[62:0];

assign ush_fu_1073_p3 = ((isNeg_reg_2244[0:0] == 1'b1) ? sext_ln1311_fu_1070_p1 : add_ln341_reg_2239);

assign val_fu_1132_p3 = ((isNeg_reg_2244[0:0] == 1'b1) ? zext_ln662_fu_1129_p1 : tmp_36_reg_2277);

assign zext_ln1176_1_fu_941_p1 = tmp_s_fu_934_p3;

assign zext_ln1176_fu_920_p1 = i;

assign zext_ln1180_fu_951_p1 = ap_phi_mux_row_list_size_phi_fu_517_p4;

assign zext_ln1182_1_fu_986_p1 = or_ln1182_fu_980_p2;

assign zext_ln1182_fu_960_p1 = j_reg_525;

assign zext_ln1186_fu_1001_p1 = add_ln1186_reg_2194;

assign zext_ln1216_1_fu_1914_p1 = j_10_reg_816;

assign zext_ln1216_fu_1905_p1 = j_6_reg_2770;

assign zext_ln1220_1_fu_1924_p1 = j_10_reg_816;

assign zext_ln1220_2_fu_1946_p1 = tmp_61_fu_1939_p3;

assign zext_ln1220_3_fu_1962_p1 = or_ln1220_1_fu_1956_p2;

assign zext_ln1220_fu_1981_p1 = tmp_39_reg_2892;

assign zext_ln1229_fu_1774_p1 = j_7_fu_1771_p1;

assign zext_ln1233_2_fu_1892_p1 = select_ln1229_reg_2790_pp5_iter1_reg;

assign zext_ln1233_3_fu_1901_p1 = add_ln1233_1_reg_2853;

assign zext_ln1233_4_fu_1871_p1 = add_ln1233_2_reg_2828;

assign zext_ln1233_fu_1838_p1 = select_ln1229_1_reg_2797;

assign zext_ln1259_fu_1610_p1 = j_8_reg_2586;

assign zext_ln1263_2_fu_1719_p1 = select_ln1259_reg_2666;

assign zext_ln1263_3_fu_1732_p1 = add_ln1263_1_reg_2714_pp4_iter2_reg;

assign zext_ln1263_4_fu_1728_p1 = add_ln1263_2_reg_2719;

assign zext_ln1263_fu_1675_p1 = select_ln1259_1_reg_2673;

assign zext_ln1272_1_fu_1532_p1 = j_13_reg_717;

assign zext_ln1272_fu_1518_p1 = j_9_reg_2580;

assign zext_ln1276_1_fu_1541_p1 = j_13_reg_717;

assign zext_ln1276_2_fu_1563_p1 = tmp_62_fu_1556_p3;

assign zext_ln1276_3_fu_1579_p1 = or_ln1276_1_fu_1573_p2;

assign zext_ln1276_fu_1592_p1 = tmp_41_reg_2632;

assign zext_ln1293_fu_1327_p1 = j_22_reg_619;

assign zext_ln1295_fu_1337_p1 = j_22_reg_619;

assign zext_ln1313_fu_1160_p1 = ap_phi_mux_j_21_phi_fu_588_p4;

assign zext_ln1315_fu_1170_p1 = ap_phi_mux_j_21_phi_fu_588_p4;

assign zext_ln13_1_fu_2071_p1 = add_ln13_reg_2933;

assign zext_ln13_fu_2057_p1 = select_ln9_reg_2921;

assign zext_ln15_fu_1088_p1 = mantissa_fu_1079_p4;

assign zext_ln341_fu_1046_p1 = tmp_63_fu_1032_p4;

assign zext_ln662_fu_1129_p1 = tmp_reg_2272;

always @ (posedge ap_clk) begin
    zext_ln1176_reg_2095[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln1176_1_reg_2156[6:0] <= 7'b0000000;
    zext_ln1176_1_reg_2156[10] <= 1'b0;
    zext_ln1313_reg_2307[31:8] <= 24'b000000000000000000000000;
    zext_ln1313_reg_2307_pp1_iter1_reg[31:8] <= 24'b000000000000000000000000;
    rhs_18_reg_2410[32:26] <= 7'b0000000;
    zext_ln1293_reg_2421[31:8] <= 24'b000000000000000000000000;
    zext_ln1293_reg_2421_pp2_iter1_reg[31:8] <= 24'b000000000000000000000000;
    zext_ln1293_reg_2421_pp2_iter2_reg[31:8] <= 24'b000000000000000000000000;
    zext_ln1293_reg_2421_pp2_iter3_reg[31:8] <= 24'b000000000000000000000000;
    zext_ln1293_reg_2421_pp2_iter4_reg[31:8] <= 24'b000000000000000000000000;
    zext_ln1293_reg_2421_pp2_iter5_reg[31:8] <= 24'b000000000000000000000000;
    tmp_41_reg_2632[0] <= 1'b0;
    tmp_38_reg_2642[0] <= 1'b0;
    tmp_37_reg_2765[0] <= 1'b0;
    tmp_39_reg_2892[0] <= 1'b0;
end

endmodule //makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine8
