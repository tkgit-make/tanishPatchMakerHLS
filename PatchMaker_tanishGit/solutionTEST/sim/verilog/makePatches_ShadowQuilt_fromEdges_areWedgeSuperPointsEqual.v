// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module makePatches_ShadowQuilt_fromEdges_areWedgeSuperPointsEqual (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        patches_superpoints_0_address0,
        patches_superpoints_0_ce0,
        patches_superpoints_0_q0,
        patches_superpoints_0_address1,
        patches_superpoints_0_ce1,
        patches_superpoints_0_q1,
        wsp1,
        wsp11,
        wsp2,
        wsp22,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] patches_superpoints_0_address0;
output   patches_superpoints_0_ce0;
input  [63:0] patches_superpoints_0_q0;
output  [7:0] patches_superpoints_0_address1;
output   patches_superpoints_0_ce1;
input  [63:0] patches_superpoints_0_q1;
input  [7:0] wsp1;
input  [2:0] wsp11;
input  [7:0] wsp2;
input  [2:0] wsp22;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] patches_superpoints_0_address0;
reg patches_superpoints_0_ce0;
reg[7:0] patches_superpoints_0_address1;
reg patches_superpoints_0_ce1;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
wire    ap_block_state8_pp0_stage1_iter3;
wire    ap_block_state10_pp0_stage1_iter4;
wire    ap_block_state12_pp0_stage1_iter5;
wire    ap_block_state14_pp0_stage1_iter6;
wire    ap_block_state16_pp0_stage1_iter7;
wire    ap_block_state18_pp0_stage1_iter8;
wire    ap_block_state20_pp0_stage1_iter9;
wire    ap_block_state22_pp0_stage1_iter10;
wire    ap_block_state24_pp0_stage1_iter11;
wire    ap_block_state26_pp0_stage1_iter12;
wire    ap_block_state28_pp0_stage1_iter13;
wire    ap_block_pp0_stage1_11001;
reg   [2:0] wsp22_read_reg_785;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_state11_pp0_stage0_iter5;
wire    ap_block_state13_pp0_stage0_iter6;
wire    ap_block_state15_pp0_stage0_iter7;
wire    ap_block_state17_pp0_stage0_iter8;
wire    ap_block_state19_pp0_stage0_iter9;
wire    ap_block_state21_pp0_stage0_iter10;
wire    ap_block_state23_pp0_stage0_iter11;
wire    ap_block_state25_pp0_stage0_iter12;
wire    ap_block_state27_pp0_stage0_iter13;
wire    ap_block_pp0_stage0_11001;
reg   [2:0] wsp22_read_reg_785_pp0_iter1_reg;
reg   [2:0] wsp22_read_reg_785_pp0_iter2_reg;
reg   [2:0] wsp22_read_reg_785_pp0_iter3_reg;
reg   [7:0] wsp2_read_reg_790;
reg   [7:0] wsp2_read_reg_790_pp0_iter1_reg;
reg   [7:0] wsp2_read_reg_790_pp0_iter2_reg;
reg   [7:0] wsp2_read_reg_790_pp0_iter3_reg;
reg   [2:0] wsp11_read_reg_796;
reg   [2:0] wsp11_read_reg_796_pp0_iter1_reg;
reg   [2:0] wsp11_read_reg_796_pp0_iter2_reg;
reg   [7:0] wsp1_read_reg_801;
reg   [7:0] wsp1_read_reg_801_pp0_iter1_reg;
reg   [7:0] wsp1_read_reg_801_pp0_iter2_reg;
wire   [32:0] ret_fu_243_p2;
reg   [32:0] ret_reg_817;
wire  signed [63:0] sext_ln277_fu_249_p1;
reg   [10:0] tmp_155_reg_827;
wire   [51:0] tmp_156_fu_267_p1;
reg   [51:0] tmp_156_reg_833;
wire   [0:0] icmp_ln28_fu_368_p2;
reg   [0:0] icmp_ln28_reg_838;
reg   [0:0] icmp_ln28_reg_838_pp0_iter4_reg;
reg   [0:0] icmp_ln28_reg_838_pp0_iter5_reg;
reg   [0:0] icmp_ln28_reg_838_pp0_iter6_reg;
reg   [0:0] icmp_ln28_reg_838_pp0_iter7_reg;
reg   [0:0] icmp_ln28_reg_838_pp0_iter8_reg;
reg   [0:0] icmp_ln28_reg_838_pp0_iter9_reg;
reg   [0:0] icmp_ln28_reg_838_pp0_iter10_reg;
reg   [0:0] icmp_ln28_reg_838_pp0_iter11_reg;
reg   [0:0] icmp_ln28_reg_838_pp0_iter12_reg;
reg   [0:0] icmp_ln28_reg_838_pp0_iter13_reg;
wire   [13:0] add_ln28_1_fu_423_p2;
reg   [13:0] add_ln28_1_reg_842;
reg   [13:0] add_ln28_1_reg_842_pp0_iter4_reg;
reg   [13:0] add_ln28_1_reg_842_pp0_iter5_reg;
reg   [13:0] add_ln28_1_reg_842_pp0_iter6_reg;
reg   [13:0] add_ln28_1_reg_842_pp0_iter7_reg;
reg   [13:0] add_ln28_1_reg_842_pp0_iter8_reg;
wire   [13:0] add_ln28_3_fu_494_p2;
reg   [13:0] add_ln28_3_reg_852;
reg   [13:0] add_ln28_3_reg_852_pp0_iter4_reg;
reg   [13:0] add_ln28_3_reg_852_pp0_iter5_reg;
reg   [13:0] add_ln28_3_reg_852_pp0_iter6_reg;
reg   [13:0] add_ln28_3_reg_852_pp0_iter7_reg;
wire   [2:0] grp_fu_439_p2;
reg   [2:0] urem_ln28_reg_872;
reg   [7:0] udiv_ln28_1_cast_reg_877;
reg   [5:0] tmp_150_reg_882;
wire   [32:0] ret_35_fu_637_p2;
reg   [32:0] ret_35_reg_897;
wire  signed [63:0] sext_ln277_4_fu_643_p1;
reg   [10:0] tmp_157_reg_907;
wire   [51:0] tmp_158_fu_661_p1;
reg   [51:0] tmp_158_reg_913;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] ap_phi_mux_empty_phi_fu_163_p4;
wire   [0:0] icmp_ln28_1_fu_762_p2;
reg   [0:0] ap_phi_reg_pp0_iter13_empty_reg_159;
wire   [0:0] ap_phi_reg_pp0_iter0_empty_reg_159;
reg   [0:0] ap_phi_reg_pp0_iter1_empty_reg_159;
reg   [0:0] ap_phi_reg_pp0_iter2_empty_reg_159;
reg   [0:0] ap_phi_reg_pp0_iter3_empty_reg_159;
reg   [0:0] ap_phi_reg_pp0_iter4_empty_reg_159;
reg   [0:0] ap_phi_reg_pp0_iter5_empty_reg_159;
reg   [0:0] ap_phi_reg_pp0_iter6_empty_reg_159;
reg   [0:0] ap_phi_reg_pp0_iter7_empty_reg_159;
reg   [0:0] ap_phi_reg_pp0_iter8_empty_reg_159;
reg   [0:0] ap_phi_reg_pp0_iter9_empty_reg_159;
reg   [0:0] ap_phi_reg_pp0_iter10_empty_reg_159;
reg   [0:0] ap_phi_reg_pp0_iter11_empty_reg_159;
reg   [0:0] ap_phi_reg_pp0_iter12_empty_reg_159;
wire   [63:0] zext_ln28_4_fu_195_p1;
wire   [63:0] zext_ln28_5_fu_222_p1;
wire   [63:0] zext_ln28_12_fu_585_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln28_15_fu_616_p1;
reg  signed [63:0] grp_fu_170_p0;
wire   [7:0] shl_ln28_fu_177_p2;
wire   [7:0] add_ln28_6_fu_183_p2;
wire   [7:0] wsp22_cast_fu_173_p1;
wire   [7:0] add_ln28_7_fu_189_p2;
wire   [7:0] shl_ln28_6_fu_204_p2;
wire   [7:0] add_ln28_8_fu_210_p2;
wire   [7:0] wsp11_cast_fu_200_p1;
wire   [7:0] add_ln28_9_fu_216_p2;
wire   [31:0] lhs_fu_227_p1;
wire   [31:0] rhs_fu_231_p1;
wire  signed [32:0] sext_ln215_fu_235_p1;
wire  signed [32:0] sext_ln215_27_fu_239_p1;
wire   [63:0] grp_fu_170_p1;
wire   [63:0] data_V_fu_253_p1;
wire   [53:0] mantissa_fu_271_p4;
wire   [11:0] zext_ln510_fu_284_p1;
wire   [11:0] add_ln510_fu_287_p2;
wire   [10:0] sub_ln1311_fu_301_p2;
wire   [0:0] isNeg_fu_293_p3;
wire  signed [11:0] sext_ln1311_fu_306_p1;
wire   [11:0] ush_fu_310_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i_cast_cast_cast_fu_318_p1;
wire   [168:0] zext_ln15_fu_280_p1;
wire   [168:0] sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_322_p1;
wire   [168:0] r_V_fu_326_p2;
wire   [0:0] tmp_fu_338_p3;
wire   [168:0] r_V_12_fu_332_p2;
wire   [63:0] zext_ln662_fu_346_p1;
wire   [63:0] tmp_s_fu_350_p4;
wire   [63:0] val_fu_360_p3;
wire   [12:0] shl_ln28_2_fu_374_p3;
wire   [10:0] shl_ln28_3_fu_385_p3;
wire   [5:0] shl_ln_fu_396_p3;
wire   [13:0] zext_ln28_1_fu_392_p1;
wire   [13:0] zext_ln28_fu_381_p1;
wire   [7:0] zext_ln28_2_fu_403_p1;
wire   [7:0] add_ln28_2_fu_413_p2;
wire   [13:0] zext_ln28_3_fu_419_p1;
wire   [13:0] add_ln28_fu_407_p2;
wire   [10:0] grp_fu_439_p0;
wire   [3:0] grp_fu_439_p1;
wire   [12:0] shl_ln28_4_fu_445_p3;
wire   [10:0] shl_ln28_5_fu_456_p3;
wire   [5:0] shl_ln28_1_fu_467_p3;
wire   [13:0] zext_ln28_7_fu_463_p1;
wire   [13:0] zext_ln28_6_fu_452_p1;
wire   [7:0] zext_ln28_8_fu_474_p1;
wire   [7:0] add_ln28_5_fu_484_p2;
wire   [13:0] zext_ln28_9_fu_490_p1;
wire   [13:0] add_ln28_4_fu_478_p2;
wire   [10:0] grp_fu_510_p0;
wire   [3:0] grp_fu_510_p1;
wire   [28:0] grp_fu_769_p2;
wire   [28:0] grp_fu_777_p2;
wire   [5:0] tmp_149_fu_549_p4;
wire   [7:0] tmp_160_cast_fu_558_p3;
wire   [7:0] udiv_ln_cast_fu_540_p4;
wire   [2:0] trunc_ln28_fu_572_p1;
wire   [7:0] add_ln28_10_fu_566_p2;
wire   [7:0] zext_ln28_11_fu_575_p1;
wire   [7:0] add_ln28_11_fu_579_p2;
wire   [7:0] tmp_162_cast_fu_590_p3;
wire   [2:0] grp_fu_510_p2;
wire   [2:0] trunc_ln28_2_fu_602_p1;
wire   [7:0] add_ln28_12_fu_597_p2;
wire   [7:0] zext_ln28_14_fu_606_p1;
wire   [7:0] add_ln28_13_fu_610_p2;
wire   [31:0] lhs_7_fu_621_p1;
wire   [31:0] rhs_11_fu_625_p1;
wire  signed [32:0] sext_ln215_28_fu_629_p1;
wire  signed [32:0] sext_ln215_29_fu_633_p1;
wire   [63:0] data_V_11_fu_647_p1;
wire   [53:0] mantissa_4_fu_665_p4;
wire   [11:0] zext_ln510_1_fu_678_p1;
wire   [11:0] add_ln510_1_fu_681_p2;
wire   [10:0] sub_ln1311_4_fu_695_p2;
wire   [0:0] isNeg_4_fu_687_p3;
wire  signed [11:0] sext_ln1311_4_fu_700_p1;
wire   [11:0] ush_4_fu_704_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i196_cast_cast_cast_fu_712_p1;
wire   [168:0] zext_ln15_2_fu_674_p1;
wire   [168:0] sh_prom_i_i_i_i_i196_cast_cast_cast_cast_fu_716_p1;
wire   [168:0] r_V_13_fu_720_p2;
wire   [0:0] tmp_154_fu_732_p3;
wire   [168:0] r_V_14_fu_726_p2;
wire   [63:0] zext_ln662_3_fu_740_p1;
wire   [63:0] tmp_138_fu_744_p4;
wire   [63:0] val_5_fu_754_p3;
wire   [13:0] grp_fu_769_p0;
wire   [15:0] grp_fu_769_p1;
wire   [13:0] grp_fu_777_p0;
wire   [15:0] grp_fu_777_p1;
reg   [1:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to13;
reg    ap_idle_pp0_0to12;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [28:0] grp_fu_769_p00;
wire   [28:0] grp_fu_777_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
end

makePatches_ShadowQuilt_fromEdges_sitodp_64s_64_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sitodp_64s_64_4_no_dsp_1_U6399(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_170_p0),
    .ce(1'b1),
    .dout(grp_fu_170_p1)
);

makePatches_ShadowQuilt_fromEdges_urem_11ns_4ns_3_15_1 #(
    .ID( 1 ),
    .NUM_STAGE( 15 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 3 ))
urem_11ns_4ns_3_15_1_U6400(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_439_p0),
    .din1(grp_fu_439_p1),
    .ce(1'b1),
    .dout(grp_fu_439_p2)
);

makePatches_ShadowQuilt_fromEdges_urem_11ns_4ns_3_15_1 #(
    .ID( 1 ),
    .NUM_STAGE( 15 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 3 ))
urem_11ns_4ns_3_15_1_U6401(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_510_p0),
    .din1(grp_fu_510_p1),
    .ce(1'b1),
    .dout(grp_fu_510_p2)
);

makePatches_ShadowQuilt_fromEdges_mul_mul_14ns_16ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
mul_mul_14ns_16ns_29_4_1_U6402(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_769_p0),
    .din1(grp_fu_769_p1),
    .ce(1'b1),
    .dout(grp_fu_769_p2)
);

makePatches_ShadowQuilt_fromEdges_mul_mul_14ns_16ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
mul_mul_14ns_16ns_29_4_1_U6403(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_777_p0),
    .din1(grp_fu_777_p1),
    .ce(1'b1),
    .dout(grp_fu_777_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln28_fu_368_p2 == 1'd0))) begin
        ap_phi_reg_pp0_iter3_empty_reg_159 <= 1'd0;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter3_empty_reg_159 <= ap_phi_reg_pp0_iter2_empty_reg_159;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln28_fu_368_p2 == 1'd1))) begin
        add_ln28_1_reg_842[13 : 3] <= add_ln28_1_fu_423_p2[13 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln28_1_reg_842_pp0_iter4_reg[13 : 3] <= add_ln28_1_reg_842[13 : 3];
        add_ln28_1_reg_842_pp0_iter5_reg[13 : 3] <= add_ln28_1_reg_842_pp0_iter4_reg[13 : 3];
        add_ln28_1_reg_842_pp0_iter6_reg[13 : 3] <= add_ln28_1_reg_842_pp0_iter5_reg[13 : 3];
        add_ln28_1_reg_842_pp0_iter7_reg[13 : 3] <= add_ln28_1_reg_842_pp0_iter6_reg[13 : 3];
        add_ln28_1_reg_842_pp0_iter8_reg[13 : 3] <= add_ln28_1_reg_842_pp0_iter7_reg[13 : 3];
        icmp_ln28_reg_838 <= icmp_ln28_fu_368_p2;
        icmp_ln28_reg_838_pp0_iter10_reg <= icmp_ln28_reg_838_pp0_iter9_reg;
        icmp_ln28_reg_838_pp0_iter11_reg <= icmp_ln28_reg_838_pp0_iter10_reg;
        icmp_ln28_reg_838_pp0_iter12_reg <= icmp_ln28_reg_838_pp0_iter11_reg;
        icmp_ln28_reg_838_pp0_iter13_reg <= icmp_ln28_reg_838_pp0_iter12_reg;
        icmp_ln28_reg_838_pp0_iter4_reg <= icmp_ln28_reg_838;
        icmp_ln28_reg_838_pp0_iter5_reg <= icmp_ln28_reg_838_pp0_iter4_reg;
        icmp_ln28_reg_838_pp0_iter6_reg <= icmp_ln28_reg_838_pp0_iter5_reg;
        icmp_ln28_reg_838_pp0_iter7_reg <= icmp_ln28_reg_838_pp0_iter6_reg;
        icmp_ln28_reg_838_pp0_iter8_reg <= icmp_ln28_reg_838_pp0_iter7_reg;
        icmp_ln28_reg_838_pp0_iter9_reg <= icmp_ln28_reg_838_pp0_iter8_reg;
        wsp11_read_reg_796 <= wsp11;
        wsp11_read_reg_796_pp0_iter1_reg <= wsp11_read_reg_796;
        wsp11_read_reg_796_pp0_iter2_reg <= wsp11_read_reg_796_pp0_iter1_reg;
        wsp1_read_reg_801 <= wsp1;
        wsp1_read_reg_801_pp0_iter1_reg <= wsp1_read_reg_801;
        wsp1_read_reg_801_pp0_iter2_reg <= wsp1_read_reg_801_pp0_iter1_reg;
        wsp22_read_reg_785 <= wsp22;
        wsp22_read_reg_785_pp0_iter1_reg <= wsp22_read_reg_785;
        wsp22_read_reg_785_pp0_iter2_reg <= wsp22_read_reg_785_pp0_iter1_reg;
        wsp22_read_reg_785_pp0_iter3_reg <= wsp22_read_reg_785_pp0_iter2_reg;
        wsp2_read_reg_790 <= wsp2;
        wsp2_read_reg_790_pp0_iter1_reg <= wsp2_read_reg_790;
        wsp2_read_reg_790_pp0_iter2_reg <= wsp2_read_reg_790_pp0_iter1_reg;
        wsp2_read_reg_790_pp0_iter3_reg <= wsp2_read_reg_790_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln28_reg_838 == 1'd1))) begin
        add_ln28_3_reg_852[13 : 3] <= add_ln28_3_fu_494_p2[13 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln28_3_reg_852_pp0_iter4_reg[13 : 3] <= add_ln28_3_reg_852[13 : 3];
        add_ln28_3_reg_852_pp0_iter5_reg[13 : 3] <= add_ln28_3_reg_852_pp0_iter4_reg[13 : 3];
        add_ln28_3_reg_852_pp0_iter6_reg[13 : 3] <= add_ln28_3_reg_852_pp0_iter5_reg[13 : 3];
        add_ln28_3_reg_852_pp0_iter7_reg[13 : 3] <= add_ln28_3_reg_852_pp0_iter6_reg[13 : 3];
        ret_reg_817 <= ret_fu_243_p2;
        tmp_155_reg_827 <= {{data_V_fu_253_p1[62:52]}};
        tmp_156_reg_833 <= tmp_156_fu_267_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter10_empty_reg_159 <= ap_phi_reg_pp0_iter9_empty_reg_159;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter11_empty_reg_159 <= ap_phi_reg_pp0_iter10_empty_reg_159;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter12_empty_reg_159 <= ap_phi_reg_pp0_iter11_empty_reg_159;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter13_empty_reg_159 <= ap_phi_reg_pp0_iter12_empty_reg_159;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_empty_reg_159 <= ap_phi_reg_pp0_iter0_empty_reg_159;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter2_empty_reg_159 <= ap_phi_reg_pp0_iter1_empty_reg_159;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter4_empty_reg_159 <= ap_phi_reg_pp0_iter3_empty_reg_159;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter5_empty_reg_159 <= ap_phi_reg_pp0_iter4_empty_reg_159;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter6_empty_reg_159 <= ap_phi_reg_pp0_iter5_empty_reg_159;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter7_empty_reg_159 <= ap_phi_reg_pp0_iter6_empty_reg_159;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter8_empty_reg_159 <= ap_phi_reg_pp0_iter7_empty_reg_159;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter9_empty_reg_159 <= ap_phi_reg_pp0_iter8_empty_reg_159;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln28_reg_838_pp0_iter10_reg == 1'd1))) begin
        ret_35_reg_897 <= ret_35_fu_637_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln28_reg_838_pp0_iter9_reg == 1'd1))) begin
        tmp_150_reg_882 <= {{grp_fu_769_p2[25:20]}};
        udiv_ln28_1_cast_reg_877 <= {{grp_fu_769_p2[27:20]}};
        urem_ln28_reg_872 <= grp_fu_439_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln28_reg_838_pp0_iter12_reg == 1'd1))) begin
        tmp_157_reg_907 <= {{data_V_11_fu_647_p1[62:52]}};
        tmp_158_reg_913 <= tmp_158_fu_661_p1;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to12 = 1'b1;
    end else begin
        ap_idle_pp0_0to12 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to13 = 1'b1;
    end else begin
        ap_idle_pp0_1to13 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln28_reg_838_pp0_iter13_reg == 1'd1)) begin
        ap_phi_mux_empty_phi_fu_163_p4 = icmp_ln28_1_fu_762_p2;
    end else begin
        ap_phi_mux_empty_phi_fu_163_p4 = ap_phi_reg_pp0_iter13_empty_reg_159;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to12 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_170_p0 = sext_ln277_4_fu_643_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_170_p0 = sext_ln277_fu_249_p1;
    end else begin
        grp_fu_170_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        patches_superpoints_0_address0 = zext_ln28_15_fu_616_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        patches_superpoints_0_address0 = zext_ln28_4_fu_195_p1;
    end else begin
        patches_superpoints_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        patches_superpoints_0_address1 = zext_ln28_12_fu_585_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        patches_superpoints_0_address1 = zext_ln28_5_fu_222_p1;
    end else begin
        patches_superpoints_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        patches_superpoints_0_ce0 = 1'b1;
    end else begin
        patches_superpoints_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        patches_superpoints_0_ce1 = 1'b1;
    end else begin
        patches_superpoints_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to13 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((((ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone)) | ((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln28_10_fu_566_p2 = (tmp_160_cast_fu_558_p3 + udiv_ln_cast_fu_540_p4);

assign add_ln28_11_fu_579_p2 = (add_ln28_10_fu_566_p2 + zext_ln28_11_fu_575_p1);

assign add_ln28_12_fu_597_p2 = (tmp_162_cast_fu_590_p3 + udiv_ln28_1_cast_reg_877);

assign add_ln28_13_fu_610_p2 = (add_ln28_12_fu_597_p2 + zext_ln28_14_fu_606_p1);

assign add_ln28_1_fu_423_p2 = (zext_ln28_3_fu_419_p1 + add_ln28_fu_407_p2);

assign add_ln28_2_fu_413_p2 = (zext_ln28_2_fu_403_p1 + 8'd120);

assign add_ln28_3_fu_494_p2 = (zext_ln28_9_fu_490_p1 + add_ln28_4_fu_478_p2);

assign add_ln28_4_fu_478_p2 = (zext_ln28_7_fu_463_p1 + zext_ln28_6_fu_452_p1);

assign add_ln28_5_fu_484_p2 = (zext_ln28_8_fu_474_p1 + 8'd120);

assign add_ln28_6_fu_183_p2 = (shl_ln28_fu_177_p2 + wsp2);

assign add_ln28_7_fu_189_p2 = (add_ln28_6_fu_183_p2 + wsp22_cast_fu_173_p1);

assign add_ln28_8_fu_210_p2 = (shl_ln28_6_fu_204_p2 + wsp1);

assign add_ln28_9_fu_216_p2 = (add_ln28_8_fu_210_p2 + wsp11_cast_fu_200_p1);

assign add_ln28_fu_407_p2 = (zext_ln28_1_fu_392_p1 + zext_ln28_fu_381_p1);

assign add_ln510_1_fu_681_p2 = ($signed(zext_ln510_1_fu_678_p1) + $signed(12'd3073));

assign add_ln510_fu_287_p2 = ($signed(zext_ln510_fu_284_p1) + $signed(12'd3073));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_empty_reg_159 = 'bx;

assign ap_return = ap_phi_mux_empty_phi_fu_163_p4;

assign data_V_11_fu_647_p1 = grp_fu_170_p1;

assign data_V_fu_253_p1 = grp_fu_170_p1;

assign grp_fu_439_p0 = {{add_ln28_1_fu_423_p2[13:3]}};

assign grp_fu_439_p1 = 11'd5;

assign grp_fu_510_p0 = {{add_ln28_3_fu_494_p2[13:3]}};

assign grp_fu_510_p1 = 11'd5;

assign grp_fu_769_p0 = grp_fu_769_p00;

assign grp_fu_769_p00 = add_ln28_3_reg_852_pp0_iter7_reg;

assign grp_fu_769_p1 = 29'd26215;

assign grp_fu_777_p0 = grp_fu_777_p00;

assign grp_fu_777_p00 = add_ln28_1_reg_842_pp0_iter8_reg;

assign grp_fu_777_p1 = 29'd26215;

assign icmp_ln28_1_fu_762_p2 = (($signed(val_5_fu_754_p3) < $signed(64'd100)) ? 1'b1 : 1'b0);

assign icmp_ln28_fu_368_p2 = (($signed(val_fu_360_p3) < $signed(64'd100)) ? 1'b1 : 1'b0);

assign isNeg_4_fu_687_p3 = add_ln510_1_fu_681_p2[32'd11];

assign isNeg_fu_293_p3 = add_ln510_fu_287_p2[32'd11];

assign lhs_7_fu_621_p1 = patches_superpoints_0_q1[31:0];

assign lhs_fu_227_p1 = patches_superpoints_0_q1[31:0];

assign mantissa_4_fu_665_p4 = {{{{1'd1}, {tmp_158_reg_913}}}, {1'd0}};

assign mantissa_fu_271_p4 = {{{{1'd1}, {tmp_156_reg_833}}}, {1'd0}};

assign r_V_12_fu_332_p2 = zext_ln15_fu_280_p1 << sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_322_p1;

assign r_V_13_fu_720_p2 = zext_ln15_2_fu_674_p1 >> sh_prom_i_i_i_i_i196_cast_cast_cast_cast_fu_716_p1;

assign r_V_14_fu_726_p2 = zext_ln15_2_fu_674_p1 << sh_prom_i_i_i_i_i196_cast_cast_cast_cast_fu_716_p1;

assign r_V_fu_326_p2 = zext_ln15_fu_280_p1 >> sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_322_p1;

assign ret_35_fu_637_p2 = ($signed(sext_ln215_28_fu_629_p1) - $signed(sext_ln215_29_fu_633_p1));

assign ret_fu_243_p2 = ($signed(sext_ln215_fu_235_p1) - $signed(sext_ln215_27_fu_239_p1));

assign rhs_11_fu_625_p1 = patches_superpoints_0_q0[31:0];

assign rhs_fu_231_p1 = patches_superpoints_0_q0[31:0];

assign sext_ln1311_4_fu_700_p1 = $signed(sub_ln1311_4_fu_695_p2);

assign sext_ln1311_fu_306_p1 = $signed(sub_ln1311_fu_301_p2);

assign sext_ln215_27_fu_239_p1 = $signed(rhs_fu_231_p1);

assign sext_ln215_28_fu_629_p1 = $signed(lhs_7_fu_621_p1);

assign sext_ln215_29_fu_633_p1 = $signed(rhs_11_fu_625_p1);

assign sext_ln215_fu_235_p1 = $signed(lhs_fu_227_p1);

assign sext_ln277_4_fu_643_p1 = $signed(ret_35_reg_897);

assign sext_ln277_fu_249_p1 = $signed(ret_reg_817);

assign sh_prom_i_i_i_i_i196_cast_cast_cast_cast_fu_716_p1 = $unsigned(sh_prom_i_i_i_i_i196_cast_cast_cast_fu_712_p1);

assign sh_prom_i_i_i_i_i196_cast_cast_cast_fu_712_p1 = $signed(ush_4_fu_704_p3);

assign sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_322_p1 = $unsigned(sh_prom_i_i_i_i_i_cast_cast_cast_fu_318_p1);

assign sh_prom_i_i_i_i_i_cast_cast_cast_fu_318_p1 = $signed(ush_fu_310_p3);

assign shl_ln28_1_fu_467_p3 = {{wsp22_read_reg_785_pp0_iter3_reg}, {3'd0}};

assign shl_ln28_2_fu_374_p3 = {{wsp1_read_reg_801_pp0_iter2_reg}, {5'd0}};

assign shl_ln28_3_fu_385_p3 = {{wsp1_read_reg_801_pp0_iter2_reg}, {3'd0}};

assign shl_ln28_4_fu_445_p3 = {{wsp2_read_reg_790_pp0_iter3_reg}, {5'd0}};

assign shl_ln28_5_fu_456_p3 = {{wsp2_read_reg_790_pp0_iter3_reg}, {3'd0}};

assign shl_ln28_6_fu_204_p2 = wsp1 << 8'd2;

assign shl_ln28_fu_177_p2 = wsp2 << 8'd2;

assign shl_ln_fu_396_p3 = {{wsp11_read_reg_796_pp0_iter2_reg}, {3'd0}};

assign sub_ln1311_4_fu_695_p2 = (11'd1023 - tmp_157_reg_907);

assign sub_ln1311_fu_301_p2 = (11'd1023 - tmp_155_reg_827);

assign tmp_138_fu_744_p4 = {{r_V_14_fu_726_p2[116:53]}};

assign tmp_149_fu_549_p4 = {{grp_fu_777_p2[25:20]}};

assign tmp_154_fu_732_p3 = r_V_13_fu_720_p2[32'd53];

assign tmp_156_fu_267_p1 = data_V_fu_253_p1[51:0];

assign tmp_158_fu_661_p1 = data_V_11_fu_647_p1[51:0];

assign tmp_160_cast_fu_558_p3 = {{tmp_149_fu_549_p4}, {2'd0}};

assign tmp_162_cast_fu_590_p3 = {{tmp_150_reg_882}, {2'd0}};

assign tmp_fu_338_p3 = r_V_fu_326_p2[32'd53];

assign tmp_s_fu_350_p4 = {{r_V_12_fu_332_p2[116:53]}};

assign trunc_ln28_2_fu_602_p1 = grp_fu_510_p2[2:0];

assign trunc_ln28_fu_572_p1 = urem_ln28_reg_872[2:0];

assign udiv_ln_cast_fu_540_p4 = {{grp_fu_777_p2[27:20]}};

assign ush_4_fu_704_p3 = ((isNeg_4_fu_687_p3[0:0] == 1'b1) ? sext_ln1311_4_fu_700_p1 : add_ln510_1_fu_681_p2);

assign ush_fu_310_p3 = ((isNeg_fu_293_p3[0:0] == 1'b1) ? sext_ln1311_fu_306_p1 : add_ln510_fu_287_p2);

assign val_5_fu_754_p3 = ((isNeg_4_fu_687_p3[0:0] == 1'b1) ? zext_ln662_3_fu_740_p1 : tmp_138_fu_744_p4);

assign val_fu_360_p3 = ((isNeg_fu_293_p3[0:0] == 1'b1) ? zext_ln662_fu_346_p1 : tmp_s_fu_350_p4);

assign wsp11_cast_fu_200_p1 = wsp11;

assign wsp22_cast_fu_173_p1 = wsp22;

assign zext_ln15_2_fu_674_p1 = mantissa_4_fu_665_p4;

assign zext_ln15_fu_280_p1 = mantissa_fu_271_p4;

assign zext_ln28_11_fu_575_p1 = trunc_ln28_fu_572_p1;

assign zext_ln28_12_fu_585_p1 = add_ln28_11_fu_579_p2;

assign zext_ln28_14_fu_606_p1 = trunc_ln28_2_fu_602_p1;

assign zext_ln28_15_fu_616_p1 = add_ln28_13_fu_610_p2;

assign zext_ln28_1_fu_392_p1 = shl_ln28_3_fu_385_p3;

assign zext_ln28_2_fu_403_p1 = shl_ln_fu_396_p3;

assign zext_ln28_3_fu_419_p1 = add_ln28_2_fu_413_p2;

assign zext_ln28_4_fu_195_p1 = add_ln28_7_fu_189_p2;

assign zext_ln28_5_fu_222_p1 = add_ln28_9_fu_216_p2;

assign zext_ln28_6_fu_452_p1 = shl_ln28_4_fu_445_p3;

assign zext_ln28_7_fu_463_p1 = shl_ln28_5_fu_456_p3;

assign zext_ln28_8_fu_474_p1 = shl_ln28_1_fu_467_p3;

assign zext_ln28_9_fu_490_p1 = add_ln28_5_fu_484_p2;

assign zext_ln28_fu_381_p1 = shl_ln28_2_fu_374_p3;

assign zext_ln510_1_fu_678_p1 = tmp_157_reg_907;

assign zext_ln510_fu_284_p1 = tmp_155_reg_827;

assign zext_ln662_3_fu_740_p1 = tmp_154_fu_732_p3;

assign zext_ln662_fu_346_p1 = tmp_fu_338_p3;

always @ (posedge ap_clk) begin
    add_ln28_1_reg_842[2:0] <= 3'b000;
    add_ln28_1_reg_842_pp0_iter4_reg[2:0] <= 3'b000;
    add_ln28_1_reg_842_pp0_iter5_reg[2:0] <= 3'b000;
    add_ln28_1_reg_842_pp0_iter6_reg[2:0] <= 3'b000;
    add_ln28_1_reg_842_pp0_iter7_reg[2:0] <= 3'b000;
    add_ln28_1_reg_842_pp0_iter8_reg[2:0] <= 3'b000;
    add_ln28_3_reg_852[2:0] <= 3'b000;
    add_ln28_3_reg_852_pp0_iter4_reg[2:0] <= 3'b000;
    add_ln28_3_reg_852_pp0_iter5_reg[2:0] <= 3'b000;
    add_ln28_3_reg_852_pp0_iter6_reg[2:0] <= 3'b000;
    add_ln28_3_reg_852_pp0_iter7_reg[2:0] <= 3'b000;
end

endmodule //makePatches_ShadowQuilt_fromEdges_areWedgeSuperPointsEqual
