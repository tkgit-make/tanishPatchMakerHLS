// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module makePatches_ShadowQuilt_fromEdges_makeThirdPatch (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        n_patches_i,
        n_patches_o,
        n_patches_o_ap_vld,
        GDn_points_address0,
        GDn_points_ce0,
        GDn_points_q0,
        patches_superpoints_address0,
        patches_superpoints_ce0,
        patches_superpoints_we0,
        patches_superpoints_d0,
        patches_superpoints_q0,
        lastPatchIndex,
        z_top_min,
        z_top_max,
        complementary_apexZ0,
        apexZ0,
        ppl,
        GDarrayDecoded_address0,
        GDarrayDecoded_ce0,
        GDarrayDecoded_q0,
        GDarrayDecoded_address1,
        GDarrayDecoded_ce1,
        GDarrayDecoded_q1,
        patches_parameters_address0,
        patches_parameters_ce0,
        patches_parameters_we0,
        patches_parameters_d0,
        patches_parameters_q0,
        patches_parameters_address1,
        patches_parameters_ce1,
        patches_parameters_we1,
        patches_parameters_d1,
        patches_parameters_q1,
        temp_V_address0,
        temp_V_ce0,
        temp_V_we0,
        temp_V_d0,
        temp_V_q0,
        temp_V_address1,
        temp_V_ce1,
        temp_V_we1,
        temp_V_d1,
        grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_din1,
        grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_din2,
        grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_din3,
        grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_din4,
        grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_din5,
        grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_dout0,
        grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_ce,
        grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_start,
        grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_ready,
        grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_done,
        grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_idle,
        grp_fu_658_p_din0,
        grp_fu_658_p_din1,
        grp_fu_658_p_opcode,
        grp_fu_658_p_dout0,
        grp_fu_658_p_ce,
        grp_fu_2017_p_din0,
        grp_fu_2017_p_dout0,
        grp_fu_2017_p_ce
);

parameter    ap_ST_fsm_state1 = 567'd1;
parameter    ap_ST_fsm_state2 = 567'd2;
parameter    ap_ST_fsm_state3 = 567'd4;
parameter    ap_ST_fsm_state4 = 567'd8;
parameter    ap_ST_fsm_state5 = 567'd16;
parameter    ap_ST_fsm_state6 = 567'd32;
parameter    ap_ST_fsm_state7 = 567'd64;
parameter    ap_ST_fsm_state8 = 567'd128;
parameter    ap_ST_fsm_state9 = 567'd256;
parameter    ap_ST_fsm_state10 = 567'd512;
parameter    ap_ST_fsm_state11 = 567'd1024;
parameter    ap_ST_fsm_state12 = 567'd2048;
parameter    ap_ST_fsm_state13 = 567'd4096;
parameter    ap_ST_fsm_state14 = 567'd8192;
parameter    ap_ST_fsm_state15 = 567'd16384;
parameter    ap_ST_fsm_state16 = 567'd32768;
parameter    ap_ST_fsm_state17 = 567'd65536;
parameter    ap_ST_fsm_state18 = 567'd131072;
parameter    ap_ST_fsm_state19 = 567'd262144;
parameter    ap_ST_fsm_state20 = 567'd524288;
parameter    ap_ST_fsm_state21 = 567'd1048576;
parameter    ap_ST_fsm_state22 = 567'd2097152;
parameter    ap_ST_fsm_state23 = 567'd4194304;
parameter    ap_ST_fsm_state24 = 567'd8388608;
parameter    ap_ST_fsm_state25 = 567'd16777216;
parameter    ap_ST_fsm_state26 = 567'd33554432;
parameter    ap_ST_fsm_state27 = 567'd67108864;
parameter    ap_ST_fsm_state28 = 567'd134217728;
parameter    ap_ST_fsm_state29 = 567'd268435456;
parameter    ap_ST_fsm_state30 = 567'd536870912;
parameter    ap_ST_fsm_state31 = 567'd1073741824;
parameter    ap_ST_fsm_state32 = 567'd2147483648;
parameter    ap_ST_fsm_state33 = 567'd4294967296;
parameter    ap_ST_fsm_state34 = 567'd8589934592;
parameter    ap_ST_fsm_state35 = 567'd17179869184;
parameter    ap_ST_fsm_state36 = 567'd34359738368;
parameter    ap_ST_fsm_state37 = 567'd68719476736;
parameter    ap_ST_fsm_state38 = 567'd137438953472;
parameter    ap_ST_fsm_state39 = 567'd274877906944;
parameter    ap_ST_fsm_state40 = 567'd549755813888;
parameter    ap_ST_fsm_state41 = 567'd1099511627776;
parameter    ap_ST_fsm_state42 = 567'd2199023255552;
parameter    ap_ST_fsm_state43 = 567'd4398046511104;
parameter    ap_ST_fsm_state44 = 567'd8796093022208;
parameter    ap_ST_fsm_state45 = 567'd17592186044416;
parameter    ap_ST_fsm_state46 = 567'd35184372088832;
parameter    ap_ST_fsm_state47 = 567'd70368744177664;
parameter    ap_ST_fsm_state48 = 567'd140737488355328;
parameter    ap_ST_fsm_state49 = 567'd281474976710656;
parameter    ap_ST_fsm_state50 = 567'd562949953421312;
parameter    ap_ST_fsm_state51 = 567'd1125899906842624;
parameter    ap_ST_fsm_state52 = 567'd2251799813685248;
parameter    ap_ST_fsm_state53 = 567'd4503599627370496;
parameter    ap_ST_fsm_state54 = 567'd9007199254740992;
parameter    ap_ST_fsm_state55 = 567'd18014398509481984;
parameter    ap_ST_fsm_state56 = 567'd36028797018963968;
parameter    ap_ST_fsm_state57 = 567'd72057594037927936;
parameter    ap_ST_fsm_state58 = 567'd144115188075855872;
parameter    ap_ST_fsm_state59 = 567'd288230376151711744;
parameter    ap_ST_fsm_state60 = 567'd576460752303423488;
parameter    ap_ST_fsm_state61 = 567'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 567'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 567'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 567'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 567'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 567'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 567'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 567'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 567'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 567'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 567'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 567'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 567'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 567'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 567'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 567'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 567'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 567'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 567'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 567'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 567'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 567'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 567'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 567'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 567'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 567'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 567'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 567'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 567'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 567'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 567'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 567'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 567'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 567'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 567'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 567'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 567'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 567'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 567'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 567'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 567'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 567'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 567'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 567'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 567'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 567'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 567'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 567'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 567'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 567'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 567'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 567'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 567'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 567'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 567'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 567'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 567'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 567'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 567'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 567'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 567'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 567'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 567'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 567'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 567'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 567'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 567'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 567'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 567'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 567'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 567'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 567'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 567'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 567'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 567'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 567'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 567'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 567'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 567'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 567'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 567'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 567'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 567'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 567'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 567'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 567'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 567'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 567'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 567'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 567'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state151 = 567'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state152 = 567'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state153 = 567'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state154 = 567'd11417981541647679048466287755595961091061972992;
parameter    ap_ST_fsm_state155 = 567'd22835963083295358096932575511191922182123945984;
parameter    ap_ST_fsm_state156 = 567'd45671926166590716193865151022383844364247891968;
parameter    ap_ST_fsm_state157 = 567'd91343852333181432387730302044767688728495783936;
parameter    ap_ST_fsm_state158 = 567'd182687704666362864775460604089535377456991567872;
parameter    ap_ST_fsm_state159 = 567'd365375409332725729550921208179070754913983135744;
parameter    ap_ST_fsm_state160 = 567'd730750818665451459101842416358141509827966271488;
parameter    ap_ST_fsm_state161 = 567'd1461501637330902918203684832716283019655932542976;
parameter    ap_ST_fsm_state162 = 567'd2923003274661805836407369665432566039311865085952;
parameter    ap_ST_fsm_state163 = 567'd5846006549323611672814739330865132078623730171904;
parameter    ap_ST_fsm_state164 = 567'd11692013098647223345629478661730264157247460343808;
parameter    ap_ST_fsm_state165 = 567'd23384026197294446691258957323460528314494920687616;
parameter    ap_ST_fsm_state166 = 567'd46768052394588893382517914646921056628989841375232;
parameter    ap_ST_fsm_state167 = 567'd93536104789177786765035829293842113257979682750464;
parameter    ap_ST_fsm_state168 = 567'd187072209578355573530071658587684226515959365500928;
parameter    ap_ST_fsm_state169 = 567'd374144419156711147060143317175368453031918731001856;
parameter    ap_ST_fsm_state170 = 567'd748288838313422294120286634350736906063837462003712;
parameter    ap_ST_fsm_state171 = 567'd1496577676626844588240573268701473812127674924007424;
parameter    ap_ST_fsm_state172 = 567'd2993155353253689176481146537402947624255349848014848;
parameter    ap_ST_fsm_state173 = 567'd5986310706507378352962293074805895248510699696029696;
parameter    ap_ST_fsm_state174 = 567'd11972621413014756705924586149611790497021399392059392;
parameter    ap_ST_fsm_state175 = 567'd23945242826029513411849172299223580994042798784118784;
parameter    ap_ST_fsm_state176 = 567'd47890485652059026823698344598447161988085597568237568;
parameter    ap_ST_fsm_state177 = 567'd95780971304118053647396689196894323976171195136475136;
parameter    ap_ST_fsm_state178 = 567'd191561942608236107294793378393788647952342390272950272;
parameter    ap_ST_fsm_state179 = 567'd383123885216472214589586756787577295904684780545900544;
parameter    ap_ST_fsm_state180 = 567'd766247770432944429179173513575154591809369561091801088;
parameter    ap_ST_fsm_state181 = 567'd1532495540865888858358347027150309183618739122183602176;
parameter    ap_ST_fsm_state182 = 567'd3064991081731777716716694054300618367237478244367204352;
parameter    ap_ST_fsm_state183 = 567'd6129982163463555433433388108601236734474956488734408704;
parameter    ap_ST_fsm_state184 = 567'd12259964326927110866866776217202473468949912977468817408;
parameter    ap_ST_fsm_state185 = 567'd24519928653854221733733552434404946937899825954937634816;
parameter    ap_ST_fsm_state186 = 567'd49039857307708443467467104868809893875799651909875269632;
parameter    ap_ST_fsm_state187 = 567'd98079714615416886934934209737619787751599303819750539264;
parameter    ap_ST_fsm_state188 = 567'd196159429230833773869868419475239575503198607639501078528;
parameter    ap_ST_fsm_state189 = 567'd392318858461667547739736838950479151006397215279002157056;
parameter    ap_ST_fsm_state190 = 567'd784637716923335095479473677900958302012794430558004314112;
parameter    ap_ST_fsm_state191 = 567'd1569275433846670190958947355801916604025588861116008628224;
parameter    ap_ST_fsm_state192 = 567'd3138550867693340381917894711603833208051177722232017256448;
parameter    ap_ST_fsm_state193 = 567'd6277101735386680763835789423207666416102355444464034512896;
parameter    ap_ST_fsm_state194 = 567'd12554203470773361527671578846415332832204710888928069025792;
parameter    ap_ST_fsm_state195 = 567'd25108406941546723055343157692830665664409421777856138051584;
parameter    ap_ST_fsm_state196 = 567'd50216813883093446110686315385661331328818843555712276103168;
parameter    ap_ST_fsm_state197 = 567'd100433627766186892221372630771322662657637687111424552206336;
parameter    ap_ST_fsm_state198 = 567'd200867255532373784442745261542645325315275374222849104412672;
parameter    ap_ST_fsm_state199 = 567'd401734511064747568885490523085290650630550748445698208825344;
parameter    ap_ST_fsm_state200 = 567'd803469022129495137770981046170581301261101496891396417650688;
parameter    ap_ST_fsm_state201 = 567'd1606938044258990275541962092341162602522202993782792835301376;
parameter    ap_ST_fsm_state202 = 567'd3213876088517980551083924184682325205044405987565585670602752;
parameter    ap_ST_fsm_state203 = 567'd6427752177035961102167848369364650410088811975131171341205504;
parameter    ap_ST_fsm_state204 = 567'd12855504354071922204335696738729300820177623950262342682411008;
parameter    ap_ST_fsm_state205 = 567'd25711008708143844408671393477458601640355247900524685364822016;
parameter    ap_ST_fsm_state206 = 567'd51422017416287688817342786954917203280710495801049370729644032;
parameter    ap_ST_fsm_state207 = 567'd102844034832575377634685573909834406561420991602098741459288064;
parameter    ap_ST_fsm_state208 = 567'd205688069665150755269371147819668813122841983204197482918576128;
parameter    ap_ST_fsm_state209 = 567'd411376139330301510538742295639337626245683966408394965837152256;
parameter    ap_ST_fsm_state210 = 567'd822752278660603021077484591278675252491367932816789931674304512;
parameter    ap_ST_fsm_state211 = 567'd1645504557321206042154969182557350504982735865633579863348609024;
parameter    ap_ST_fsm_state212 = 567'd3291009114642412084309938365114701009965471731267159726697218048;
parameter    ap_ST_fsm_state213 = 567'd6582018229284824168619876730229402019930943462534319453394436096;
parameter    ap_ST_fsm_state214 = 567'd13164036458569648337239753460458804039861886925068638906788872192;
parameter    ap_ST_fsm_state215 = 567'd26328072917139296674479506920917608079723773850137277813577744384;
parameter    ap_ST_fsm_state216 = 567'd52656145834278593348959013841835216159447547700274555627155488768;
parameter    ap_ST_fsm_state217 = 567'd105312291668557186697918027683670432318895095400549111254310977536;
parameter    ap_ST_fsm_state218 = 567'd210624583337114373395836055367340864637790190801098222508621955072;
parameter    ap_ST_fsm_state219 = 567'd421249166674228746791672110734681729275580381602196445017243910144;
parameter    ap_ST_fsm_state220 = 567'd842498333348457493583344221469363458551160763204392890034487820288;
parameter    ap_ST_fsm_state221 = 567'd1684996666696914987166688442938726917102321526408785780068975640576;
parameter    ap_ST_fsm_state222 = 567'd3369993333393829974333376885877453834204643052817571560137951281152;
parameter    ap_ST_fsm_state223 = 567'd6739986666787659948666753771754907668409286105635143120275902562304;
parameter    ap_ST_fsm_state224 = 567'd13479973333575319897333507543509815336818572211270286240551805124608;
parameter    ap_ST_fsm_state225 = 567'd26959946667150639794667015087019630673637144422540572481103610249216;
parameter    ap_ST_fsm_state226 = 567'd53919893334301279589334030174039261347274288845081144962207220498432;
parameter    ap_ST_fsm_state227 = 567'd107839786668602559178668060348078522694548577690162289924414440996864;
parameter    ap_ST_fsm_state228 = 567'd215679573337205118357336120696157045389097155380324579848828881993728;
parameter    ap_ST_fsm_state229 = 567'd431359146674410236714672241392314090778194310760649159697657763987456;
parameter    ap_ST_fsm_state230 = 567'd862718293348820473429344482784628181556388621521298319395315527974912;
parameter    ap_ST_fsm_state231 = 567'd1725436586697640946858688965569256363112777243042596638790631055949824;
parameter    ap_ST_fsm_state232 = 567'd3450873173395281893717377931138512726225554486085193277581262111899648;
parameter    ap_ST_fsm_state233 = 567'd6901746346790563787434755862277025452451108972170386555162524223799296;
parameter    ap_ST_fsm_state234 = 567'd13803492693581127574869511724554050904902217944340773110325048447598592;
parameter    ap_ST_fsm_state235 = 567'd27606985387162255149739023449108101809804435888681546220650096895197184;
parameter    ap_ST_fsm_state236 = 567'd55213970774324510299478046898216203619608871777363092441300193790394368;
parameter    ap_ST_fsm_state237 = 567'd110427941548649020598956093796432407239217743554726184882600387580788736;
parameter    ap_ST_fsm_state238 = 567'd220855883097298041197912187592864814478435487109452369765200775161577472;
parameter    ap_ST_fsm_state239 = 567'd441711766194596082395824375185729628956870974218904739530401550323154944;
parameter    ap_ST_fsm_state240 = 567'd883423532389192164791648750371459257913741948437809479060803100646309888;
parameter    ap_ST_fsm_state241 = 567'd1766847064778384329583297500742918515827483896875618958121606201292619776;
parameter    ap_ST_fsm_state242 = 567'd3533694129556768659166595001485837031654967793751237916243212402585239552;
parameter    ap_ST_fsm_state243 = 567'd7067388259113537318333190002971674063309935587502475832486424805170479104;
parameter    ap_ST_fsm_state244 = 567'd14134776518227074636666380005943348126619871175004951664972849610340958208;
parameter    ap_ST_fsm_state245 = 567'd28269553036454149273332760011886696253239742350009903329945699220681916416;
parameter    ap_ST_fsm_state246 = 567'd56539106072908298546665520023773392506479484700019806659891398441363832832;
parameter    ap_ST_fsm_state247 = 567'd113078212145816597093331040047546785012958969400039613319782796882727665664;
parameter    ap_ST_fsm_state248 = 567'd226156424291633194186662080095093570025917938800079226639565593765455331328;
parameter    ap_ST_fsm_state249 = 567'd452312848583266388373324160190187140051835877600158453279131187530910662656;
parameter    ap_ST_fsm_state250 = 567'd904625697166532776746648320380374280103671755200316906558262375061821325312;
parameter    ap_ST_fsm_state251 = 567'd1809251394333065553493296640760748560207343510400633813116524750123642650624;
parameter    ap_ST_fsm_state252 = 567'd3618502788666131106986593281521497120414687020801267626233049500247285301248;
parameter    ap_ST_fsm_state253 = 567'd7237005577332262213973186563042994240829374041602535252466099000494570602496;
parameter    ap_ST_fsm_state254 = 567'd14474011154664524427946373126085988481658748083205070504932198000989141204992;
parameter    ap_ST_fsm_state255 = 567'd28948022309329048855892746252171976963317496166410141009864396001978282409984;
parameter    ap_ST_fsm_state256 = 567'd57896044618658097711785492504343953926634992332820282019728792003956564819968;
parameter    ap_ST_fsm_state257 = 567'd115792089237316195423570985008687907853269984665640564039457584007913129639936;
parameter    ap_ST_fsm_state258 = 567'd231584178474632390847141970017375815706539969331281128078915168015826259279872;
parameter    ap_ST_fsm_state259 = 567'd463168356949264781694283940034751631413079938662562256157830336031652518559744;
parameter    ap_ST_fsm_state260 = 567'd926336713898529563388567880069503262826159877325124512315660672063305037119488;
parameter    ap_ST_fsm_state261 = 567'd1852673427797059126777135760139006525652319754650249024631321344126610074238976;
parameter    ap_ST_fsm_state262 = 567'd3705346855594118253554271520278013051304639509300498049262642688253220148477952;
parameter    ap_ST_fsm_state263 = 567'd7410693711188236507108543040556026102609279018600996098525285376506440296955904;
parameter    ap_ST_fsm_state264 = 567'd14821387422376473014217086081112052205218558037201992197050570753012880593911808;
parameter    ap_ST_fsm_state265 = 567'd29642774844752946028434172162224104410437116074403984394101141506025761187823616;
parameter    ap_ST_fsm_state266 = 567'd59285549689505892056868344324448208820874232148807968788202283012051522375647232;
parameter    ap_ST_fsm_state267 = 567'd118571099379011784113736688648896417641748464297615937576404566024103044751294464;
parameter    ap_ST_fsm_state268 = 567'd237142198758023568227473377297792835283496928595231875152809132048206089502588928;
parameter    ap_ST_fsm_state269 = 567'd474284397516047136454946754595585670566993857190463750305618264096412179005177856;
parameter    ap_ST_fsm_state270 = 567'd948568795032094272909893509191171341133987714380927500611236528192824358010355712;
parameter    ap_ST_fsm_state271 = 567'd1897137590064188545819787018382342682267975428761855001222473056385648716020711424;
parameter    ap_ST_fsm_state272 = 567'd3794275180128377091639574036764685364535950857523710002444946112771297432041422848;
parameter    ap_ST_fsm_state273 = 567'd7588550360256754183279148073529370729071901715047420004889892225542594864082845696;
parameter    ap_ST_fsm_state274 = 567'd15177100720513508366558296147058741458143803430094840009779784451085189728165691392;
parameter    ap_ST_fsm_state275 = 567'd30354201441027016733116592294117482916287606860189680019559568902170379456331382784;
parameter    ap_ST_fsm_state276 = 567'd60708402882054033466233184588234965832575213720379360039119137804340758912662765568;
parameter    ap_ST_fsm_state277 = 567'd121416805764108066932466369176469931665150427440758720078238275608681517825325531136;
parameter    ap_ST_fsm_state278 = 567'd242833611528216133864932738352939863330300854881517440156476551217363035650651062272;
parameter    ap_ST_fsm_state279 = 567'd485667223056432267729865476705879726660601709763034880312953102434726071301302124544;
parameter    ap_ST_fsm_state280 = 567'd971334446112864535459730953411759453321203419526069760625906204869452142602604249088;
parameter    ap_ST_fsm_state281 = 567'd1942668892225729070919461906823518906642406839052139521251812409738904285205208498176;
parameter    ap_ST_fsm_state282 = 567'd3885337784451458141838923813647037813284813678104279042503624819477808570410416996352;
parameter    ap_ST_fsm_state283 = 567'd7770675568902916283677847627294075626569627356208558085007249638955617140820833992704;
parameter    ap_ST_fsm_state284 = 567'd15541351137805832567355695254588151253139254712417116170014499277911234281641667985408;
parameter    ap_ST_fsm_state285 = 567'd31082702275611665134711390509176302506278509424834232340028998555822468563283335970816;
parameter    ap_ST_fsm_state286 = 567'd62165404551223330269422781018352605012557018849668464680057997111644937126566671941632;
parameter    ap_ST_fsm_state287 = 567'd124330809102446660538845562036705210025114037699336929360115994223289874253133343883264;
parameter    ap_ST_fsm_state288 = 567'd248661618204893321077691124073410420050228075398673858720231988446579748506266687766528;
parameter    ap_ST_fsm_state289 = 567'd497323236409786642155382248146820840100456150797347717440463976893159497012533375533056;
parameter    ap_ST_fsm_state290 = 567'd994646472819573284310764496293641680200912301594695434880927953786318994025066751066112;
parameter    ap_ST_fsm_state291 = 567'd1989292945639146568621528992587283360401824603189390869761855907572637988050133502132224;
parameter    ap_ST_fsm_state292 = 567'd3978585891278293137243057985174566720803649206378781739523711815145275976100267004264448;
parameter    ap_ST_fsm_state293 = 567'd7957171782556586274486115970349133441607298412757563479047423630290551952200534008528896;
parameter    ap_ST_fsm_state294 = 567'd15914343565113172548972231940698266883214596825515126958094847260581103904401068017057792;
parameter    ap_ST_fsm_state295 = 567'd31828687130226345097944463881396533766429193651030253916189694521162207808802136034115584;
parameter    ap_ST_fsm_state296 = 567'd63657374260452690195888927762793067532858387302060507832379389042324415617604272068231168;
parameter    ap_ST_fsm_state297 = 567'd127314748520905380391777855525586135065716774604121015664758778084648831235208544136462336;
parameter    ap_ST_fsm_state298 = 567'd254629497041810760783555711051172270131433549208242031329517556169297662470417088272924672;
parameter    ap_ST_fsm_state299 = 567'd509258994083621521567111422102344540262867098416484062659035112338595324940834176545849344;
parameter    ap_ST_fsm_state300 = 567'd1018517988167243043134222844204689080525734196832968125318070224677190649881668353091698688;
parameter    ap_ST_fsm_state301 = 567'd2037035976334486086268445688409378161051468393665936250636140449354381299763336706183397376;
parameter    ap_ST_fsm_state302 = 567'd4074071952668972172536891376818756322102936787331872501272280898708762599526673412366794752;
parameter    ap_ST_fsm_state303 = 567'd8148143905337944345073782753637512644205873574663745002544561797417525199053346824733589504;
parameter    ap_ST_fsm_state304 = 567'd16296287810675888690147565507275025288411747149327490005089123594835050398106693649467179008;
parameter    ap_ST_fsm_state305 = 567'd32592575621351777380295131014550050576823494298654980010178247189670100796213387298934358016;
parameter    ap_ST_fsm_state306 = 567'd65185151242703554760590262029100101153646988597309960020356494379340201592426774597868716032;
parameter    ap_ST_fsm_state307 = 567'd130370302485407109521180524058200202307293977194619920040712988758680403184853549195737432064;
parameter    ap_ST_fsm_state308 = 567'd260740604970814219042361048116400404614587954389239840081425977517360806369707098391474864128;
parameter    ap_ST_fsm_state309 = 567'd521481209941628438084722096232800809229175908778479680162851955034721612739414196782949728256;
parameter    ap_ST_fsm_state310 = 567'd1042962419883256876169444192465601618458351817556959360325703910069443225478828393565899456512;
parameter    ap_ST_fsm_state311 = 567'd2085924839766513752338888384931203236916703635113918720651407820138886450957656787131798913024;
parameter    ap_ST_fsm_state312 = 567'd4171849679533027504677776769862406473833407270227837441302815640277772901915313574263597826048;
parameter    ap_ST_fsm_state313 = 567'd8343699359066055009355553539724812947666814540455674882605631280555545803830627148527195652096;
parameter    ap_ST_fsm_state314 = 567'd16687398718132110018711107079449625895333629080911349765211262561111091607661254297054391304192;
parameter    ap_ST_fsm_state315 = 567'd33374797436264220037422214158899251790667258161822699530422525122222183215322508594108782608384;
parameter    ap_ST_fsm_state316 = 567'd66749594872528440074844428317798503581334516323645399060845050244444366430645017188217565216768;
parameter    ap_ST_fsm_state317 = 567'd133499189745056880149688856635597007162669032647290798121690100488888732861290034376435130433536;
parameter    ap_ST_fsm_state318 = 567'd266998379490113760299377713271194014325338065294581596243380200977777465722580068752870260867072;
parameter    ap_ST_fsm_state319 = 567'd533996758980227520598755426542388028650676130589163192486760401955554931445160137505740521734144;
parameter    ap_ST_fsm_state320 = 567'd1067993517960455041197510853084776057301352261178326384973520803911109862890320275011481043468288;
parameter    ap_ST_fsm_state321 = 567'd2135987035920910082395021706169552114602704522356652769947041607822219725780640550022962086936576;
parameter    ap_ST_fsm_state322 = 567'd4271974071841820164790043412339104229205409044713305539894083215644439451561281100045924173873152;
parameter    ap_ST_fsm_state323 = 567'd8543948143683640329580086824678208458410818089426611079788166431288878903122562200091848347746304;
parameter    ap_ST_fsm_state324 = 567'd17087896287367280659160173649356416916821636178853222159576332862577757806245124400183696695492608;
parameter    ap_ST_fsm_state325 = 567'd34175792574734561318320347298712833833643272357706444319152665725155515612490248800367393390985216;
parameter    ap_ST_fsm_state326 = 567'd68351585149469122636640694597425667667286544715412888638305331450311031224980497600734786781970432;
parameter    ap_ST_fsm_state327 = 567'd136703170298938245273281389194851335334573089430825777276610662900622062449960995201469573563940864;
parameter    ap_ST_fsm_state328 = 567'd273406340597876490546562778389702670669146178861651554553221325801244124899921990402939147127881728;
parameter    ap_ST_fsm_state329 = 567'd546812681195752981093125556779405341338292357723303109106442651602488249799843980805878294255763456;
parameter    ap_ST_fsm_state330 = 567'd1093625362391505962186251113558810682676584715446606218212885303204976499599687961611756588511526912;
parameter    ap_ST_fsm_state331 = 567'd2187250724783011924372502227117621365353169430893212436425770606409952999199375923223513177023053824;
parameter    ap_ST_fsm_state332 = 567'd4374501449566023848745004454235242730706338861786424872851541212819905998398751846447026354046107648;
parameter    ap_ST_fsm_state333 = 567'd8749002899132047697490008908470485461412677723572849745703082425639811996797503692894052708092215296;
parameter    ap_ST_fsm_state334 = 567'd17498005798264095394980017816940970922825355447145699491406164851279623993595007385788105416184430592;
parameter    ap_ST_fsm_state335 = 567'd34996011596528190789960035633881941845650710894291398982812329702559247987190014771576210832368861184;
parameter    ap_ST_fsm_state336 = 567'd69992023193056381579920071267763883691301421788582797965624659405118495974380029543152421664737722368;
parameter    ap_ST_fsm_state337 = 567'd139984046386112763159840142535527767382602843577165595931249318810236991948760059086304843329475444736;
parameter    ap_ST_fsm_state338 = 567'd279968092772225526319680285071055534765205687154331191862498637620473983897520118172609686658950889472;
parameter    ap_ST_fsm_state339 = 567'd559936185544451052639360570142111069530411374308662383724997275240947967795040236345219373317901778944;
parameter    ap_ST_fsm_state340 = 567'd1119872371088902105278721140284222139060822748617324767449994550481895935590080472690438746635803557888;
parameter    ap_ST_fsm_state341 = 567'd2239744742177804210557442280568444278121645497234649534899989100963791871180160945380877493271607115776;
parameter    ap_ST_fsm_state342 = 567'd4479489484355608421114884561136888556243290994469299069799978201927583742360321890761754986543214231552;
parameter    ap_ST_fsm_state343 = 567'd8958978968711216842229769122273777112486581988938598139599956403855167484720643781523509973086428463104;
parameter    ap_ST_fsm_state344 = 567'd17917957937422433684459538244547554224973163977877196279199912807710334969441287563047019946172856926208;
parameter    ap_ST_fsm_state345 = 567'd35835915874844867368919076489095108449946327955754392558399825615420669938882575126094039892345713852416;
parameter    ap_ST_fsm_state346 = 567'd71671831749689734737838152978190216899892655911508785116799651230841339877765150252188079784691427704832;
parameter    ap_ST_fsm_state347 = 567'd143343663499379469475676305956380433799785311823017570233599302461682679755530300504376159569382855409664;
parameter    ap_ST_fsm_state348 = 567'd286687326998758938951352611912760867599570623646035140467198604923365359511060601008752319138765710819328;
parameter    ap_ST_fsm_state349 = 567'd573374653997517877902705223825521735199141247292070280934397209846730719022121202017504638277531421638656;
parameter    ap_ST_fsm_state350 = 567'd1146749307995035755805410447651043470398282494584140561868794419693461438044242404035009276555062843277312;
parameter    ap_ST_fsm_state351 = 567'd2293498615990071511610820895302086940796564989168281123737588839386922876088484808070018553110125686554624;
parameter    ap_ST_fsm_state352 = 567'd4586997231980143023221641790604173881593129978336562247475177678773845752176969616140037106220251373109248;
parameter    ap_ST_fsm_state353 = 567'd9173994463960286046443283581208347763186259956673124494950355357547691504353939232280074212440502746218496;
parameter    ap_ST_fsm_state354 = 567'd18347988927920572092886567162416695526372519913346248989900710715095383008707878464560148424881005492436992;
parameter    ap_ST_fsm_state355 = 567'd36695977855841144185773134324833391052745039826692497979801421430190766017415756929120296849762010984873984;
parameter    ap_ST_fsm_state356 = 567'd73391955711682288371546268649666782105490079653384995959602842860381532034831513858240593699524021969747968;
parameter    ap_ST_fsm_state357 = 567'd146783911423364576743092537299333564210980159306769991919205685720763064069663027716481187399048043939495936;
parameter    ap_ST_fsm_state358 = 567'd293567822846729153486185074598667128421960318613539983838411371441526128139326055432962374798096087878991872;
parameter    ap_ST_fsm_state359 = 567'd587135645693458306972370149197334256843920637227079967676822742883052256278652110865924749596192175757983744;
parameter    ap_ST_fsm_state360 = 567'd1174271291386916613944740298394668513687841274454159935353645485766104512557304221731849499192384351515967488;
parameter    ap_ST_fsm_state361 = 567'd2348542582773833227889480596789337027375682548908319870707290971532209025114608443463698998384768703031934976;
parameter    ap_ST_fsm_state362 = 567'd4697085165547666455778961193578674054751365097816639741414581943064418050229216886927397996769537406063869952;
parameter    ap_ST_fsm_state363 = 567'd9394170331095332911557922387157348109502730195633279482829163886128836100458433773854795993539074812127739904;
parameter    ap_ST_fsm_state364 = 567'd18788340662190665823115844774314696219005460391266558965658327772257672200916867547709591987078149624255479808;
parameter    ap_ST_fsm_state365 = 567'd37576681324381331646231689548629392438010920782533117931316655544515344401833735095419183974156299248510959616;
parameter    ap_ST_fsm_state366 = 567'd75153362648762663292463379097258784876021841565066235862633311089030688803667470190838367948312598497021919232;
parameter    ap_ST_fsm_state367 = 567'd150306725297525326584926758194517569752043683130132471725266622178061377607334940381676735896625196994043838464;
parameter    ap_ST_fsm_state368 = 567'd300613450595050653169853516389035139504087366260264943450533244356122755214669880763353471793250393988087676928;
parameter    ap_ST_fsm_state369 = 567'd601226901190101306339707032778070279008174732520529886901066488712245510429339761526706943586500787976175353856;
parameter    ap_ST_fsm_state370 = 567'd1202453802380202612679414065556140558016349465041059773802132977424491020858679523053413887173001575952350707712;
parameter    ap_ST_fsm_state371 = 567'd2404907604760405225358828131112281116032698930082119547604265954848982041717359046106827774346003151904701415424;
parameter    ap_ST_fsm_state372 = 567'd4809815209520810450717656262224562232065397860164239095208531909697964083434718092213655548692006303809402830848;
parameter    ap_ST_fsm_state373 = 567'd9619630419041620901435312524449124464130795720328478190417063819395928166869436184427311097384012607618805661696;
parameter    ap_ST_fsm_state374 = 567'd19239260838083241802870625048898248928261591440656956380834127638791856333738872368854622194768025215237611323392;
parameter    ap_ST_fsm_state375 = 567'd38478521676166483605741250097796497856523182881313912761668255277583712667477744737709244389536050430475222646784;
parameter    ap_ST_fsm_state376 = 567'd76957043352332967211482500195592995713046365762627825523336510555167425334955489475418488779072100860950445293568;
parameter    ap_ST_fsm_state377 = 567'd153914086704665934422965000391185991426092731525255651046673021110334850669910978950836977558144201721900890587136;
parameter    ap_ST_fsm_state378 = 567'd307828173409331868845930000782371982852185463050511302093346042220669701339821957901673955116288403443801781174272;
parameter    ap_ST_fsm_state379 = 567'd615656346818663737691860001564743965704370926101022604186692084441339402679643915803347910232576806887603562348544;
parameter    ap_ST_fsm_state380 = 567'd1231312693637327475383720003129487931408741852202045208373384168882678805359287831606695820465153613775207124697088;
parameter    ap_ST_fsm_state381 = 567'd2462625387274654950767440006258975862817483704404090416746768337765357610718575663213391640930307227550414249394176;
parameter    ap_ST_fsm_state382 = 567'd4925250774549309901534880012517951725634967408808180833493536675530715221437151326426783281860614455100828498788352;
parameter    ap_ST_fsm_state383 = 567'd9850501549098619803069760025035903451269934817616361666987073351061430442874302652853566563721228910201656997576704;
parameter    ap_ST_fsm_state384 = 567'd19701003098197239606139520050071806902539869635232723333974146702122860885748605305707133127442457820403313995153408;
parameter    ap_ST_fsm_state385 = 567'd39402006196394479212279040100143613805079739270465446667948293404245721771497210611414266254884915640806627990306816;
parameter    ap_ST_fsm_state386 = 567'd78804012392788958424558080200287227610159478540930893335896586808491443542994421222828532509769831281613255980613632;
parameter    ap_ST_fsm_state387 = 567'd157608024785577916849116160400574455220318957081861786671793173616982887085988842445657065019539662563226511961227264;
parameter    ap_ST_fsm_state388 = 567'd315216049571155833698232320801148910440637914163723573343586347233965774171977684891314130039079325126453023922454528;
parameter    ap_ST_fsm_state389 = 567'd630432099142311667396464641602297820881275828327447146687172694467931548343955369782628260078158650252906047844909056;
parameter    ap_ST_fsm_state390 = 567'd1260864198284623334792929283204595641762551656654894293374345388935863096687910739565256520156317300505812095689818112;
parameter    ap_ST_fsm_state391 = 567'd2521728396569246669585858566409191283525103313309788586748690777871726193375821479130513040312634601011624191379636224;
parameter    ap_ST_fsm_state392 = 567'd5043456793138493339171717132818382567050206626619577173497381555743452386751642958261026080625269202023248382759272448;
parameter    ap_ST_fsm_state393 = 567'd10086913586276986678343434265636765134100413253239154346994763111486904773503285916522052161250538404046496765518544896;
parameter    ap_ST_fsm_state394 = 567'd20173827172553973356686868531273530268200826506478308693989526222973809547006571833044104322501076808092993531037089792;
parameter    ap_ST_fsm_state395 = 567'd40347654345107946713373737062547060536401653012956617387979052445947619094013143666088208645002153616185987062074179584;
parameter    ap_ST_fsm_state396 = 567'd80695308690215893426747474125094121072803306025913234775958104891895238188026287332176417290004307232371974124148359168;
parameter    ap_ST_fsm_state397 = 567'd161390617380431786853494948250188242145606612051826469551916209783790476376052574664352834580008614464743948248296718336;
parameter    ap_ST_fsm_state398 = 567'd322781234760863573706989896500376484291213224103652939103832419567580952752105149328705669160017228929487896496593436672;
parameter    ap_ST_fsm_state399 = 567'd645562469521727147413979793000752968582426448207305878207664839135161905504210298657411338320034457858975792993186873344;
parameter    ap_ST_fsm_state400 = 567'd1291124939043454294827959586001505937164852896414611756415329678270323811008420597314822676640068915717951585986373746688;
parameter    ap_ST_fsm_state401 = 567'd2582249878086908589655919172003011874329705792829223512830659356540647622016841194629645353280137831435903171972747493376;
parameter    ap_ST_fsm_state402 = 567'd5164499756173817179311838344006023748659411585658447025661318713081295244033682389259290706560275662871806343945494986752;
parameter    ap_ST_fsm_state403 = 567'd10328999512347634358623676688012047497318823171316894051322637426162590488067364778518581413120551325743612687890989973504;
parameter    ap_ST_fsm_state404 = 567'd20657999024695268717247353376024094994637646342633788102645274852325180976134729557037162826241102651487225375781979947008;
parameter    ap_ST_fsm_pp0_stage0 = 567'd41315998049390537434494706752048189989275292685267576205290549704650361952269459114074325652482205302974450751563959894016;
parameter    ap_ST_fsm_pp0_stage1 = 567'd82631996098781074868989413504096379978550585370535152410581099409300723904538918228148651304964410605948901503127919788032;
parameter    ap_ST_fsm_pp0_stage2 = 567'd165263992197562149737978827008192759957101170741070304821162198818601447809077836456297302609928821211897803006255839576064;
parameter    ap_ST_fsm_state410 = 567'd330527984395124299475957654016385519914202341482140609642324397637202895618155672912594605219857642423795606012511679152128;
parameter    ap_ST_fsm_state411 = 567'd661055968790248598951915308032771039828404682964281219284648795274405791236311345825189210439715284847591212025023358304256;
parameter    ap_ST_fsm_state412 = 567'd1322111937580497197903830616065542079656809365928562438569297590548811582472622691650378420879430569695182424050046716608512;
parameter    ap_ST_fsm_state413 = 567'd2644223875160994395807661232131084159313618731857124877138595181097623164945245383300756841758861139390364848100093433217024;
parameter    ap_ST_fsm_pp1_stage0 = 567'd5288447750321988791615322464262168318627237463714249754277190362195246329890490766601513683517722278780729696200186866434048;
parameter    ap_ST_fsm_pp1_stage1 = 567'd10576895500643977583230644928524336637254474927428499508554380724390492659780981533203027367035444557561459392400373732868096;
parameter    ap_ST_fsm_pp1_stage2 = 567'd21153791001287955166461289857048673274508949854856999017108761448780985319561963066406054734070889115122918784800747465736192;
parameter    ap_ST_fsm_state419 = 567'd42307582002575910332922579714097346549017899709713998034217522897561970639123926132812109468141778230245837569601494931472384;
parameter    ap_ST_fsm_pp2_stage0 = 567'd84615164005151820665845159428194693098035799419427996068435045795123941278247852265624218936283556460491675139202989862944768;
parameter    ap_ST_fsm_pp2_stage1 = 567'd169230328010303641331690318856389386196071598838855992136870091590247882556495704531248437872567112920983350278405979725889536;
parameter    ap_ST_fsm_pp2_stage2 = 567'd338460656020607282663380637712778772392143197677711984273740183180495765112991409062496875745134225841966700556811959451779072;
parameter    ap_ST_fsm_state426 = 567'd676921312041214565326761275425557544784286395355423968547480366360991530225982818124993751490268451683933401113623918903558144;
parameter    ap_ST_fsm_state427 = 567'd1353842624082429130653522550851115089568572790710847937094960732721983060451965636249987502980536903367866802227247837807116288;
parameter    ap_ST_fsm_state428 = 567'd2707685248164858261307045101702230179137145581421695874189921465443966120903931272499975005961073806735733604454495675614232576;
parameter    ap_ST_fsm_state429 = 567'd5415370496329716522614090203404460358274291162843391748379842930887932241807862544999950011922147613471467208908991351228465152;
parameter    ap_ST_fsm_state430 = 567'd10830740992659433045228180406808920716548582325686783496759685861775864483615725089999900023844295226942934417817982702456930304;
parameter    ap_ST_fsm_state431 = 567'd21661481985318866090456360813617841433097164651373566993519371723551728967231450179999800047688590453885868835635965404913860608;
parameter    ap_ST_fsm_state432 = 567'd43322963970637732180912721627235682866194329302747133987038743447103457934462900359999600095377180907771737671271930809827721216;
parameter    ap_ST_fsm_state433 = 567'd86645927941275464361825443254471365732388658605494267974077486894206915868925800719999200190754361815543475342543861619655442432;
parameter    ap_ST_fsm_state434 = 567'd173291855882550928723650886508942731464777317210988535948154973788413831737851601439998400381508723631086950685087723239310884864;
parameter    ap_ST_fsm_state435 = 567'd346583711765101857447301773017885462929554634421977071896309947576827663475703202879996800763017447262173901370175446478621769728;
parameter    ap_ST_fsm_state436 = 567'd693167423530203714894603546035770925859109268843954143792619895153655326951406405759993601526034894524347802740350892957243539456;
parameter    ap_ST_fsm_state437 = 567'd1386334847060407429789207092071541851718218537687908287585239790307310653902812811519987203052069789048695605480701785914487078912;
parameter    ap_ST_fsm_state438 = 567'd2772669694120814859578414184143083703436437075375816575170479580614621307805625623039974406104139578097391210961403571828974157824;
parameter    ap_ST_fsm_state439 = 567'd5545339388241629719156828368286167406872874150751633150340959161229242615611251246079948812208279156194782421922807143657948315648;
parameter    ap_ST_fsm_state440 = 567'd11090678776483259438313656736572334813745748301503266300681918322458485231222502492159897624416558312389564843845614287315896631296;
parameter    ap_ST_fsm_state441 = 567'd22181357552966518876627313473144669627491496603006532601363836644916970462445004984319795248833116624779129687691228574631793262592;
parameter    ap_ST_fsm_state442 = 567'd44362715105933037753254626946289339254982993206013065202727673289833940924890009968639590497666233249558259375382457149263586525184;
parameter    ap_ST_fsm_state443 = 567'd88725430211866075506509253892578678509965986412026130405455346579667881849780019937279180995332466499116518750764914298527173050368;
parameter    ap_ST_fsm_state444 = 567'd177450860423732151013018507785157357019931972824052260810910693159335763699560039874558361990664932998233037501529828597054346100736;
parameter    ap_ST_fsm_state445 = 567'd354901720847464302026037015570314714039863945648104521621821386318671527399120079749116723981329865996466075003059657194108692201472;
parameter    ap_ST_fsm_state446 = 567'd709803441694928604052074031140629428079727891296209043243642772637343054798240159498233447962659731992932150006119314388217384402944;
parameter    ap_ST_fsm_state447 = 567'd1419606883389857208104148062281258856159455782592418086487285545274686109596480318996466895925319463985864300012238628776434768805888;
parameter    ap_ST_fsm_state448 = 567'd2839213766779714416208296124562517712318911565184836172974571090549372219192960637992933791850638927971728600024477257552869537611776;
parameter    ap_ST_fsm_state449 = 567'd5678427533559428832416592249125035424637823130369672345949142181098744438385921275985867583701277855943457200048954515105739075223552;
parameter    ap_ST_fsm_state450 = 567'd11356855067118857664833184498250070849275646260739344691898284362197488876771842551971735167402555711886914400097909030211478150447104;
parameter    ap_ST_fsm_state451 = 567'd22713710134237715329666368996500141698551292521478689383796568724394977753543685103943470334805111423773828800195818060422956300894208;
parameter    ap_ST_fsm_state452 = 567'd45427420268475430659332737993000283397102585042957378767593137448789955507087370207886940669610222847547657600391636120845912601788416;
parameter    ap_ST_fsm_state453 = 567'd90854840536950861318665475986000566794205170085914757535186274897579911014174740415773881339220445695095315200783272241691825203576832;
parameter    ap_ST_fsm_state454 = 567'd181709681073901722637330951972001133588410340171829515070372549795159822028349480831547762678440891390190630401566544483383650407153664;
parameter    ap_ST_fsm_state455 = 567'd363419362147803445274661903944002267176820680343659030140745099590319644056698961663095525356881782780381260803133088966767300814307328;
parameter    ap_ST_fsm_state456 = 567'd726838724295606890549323807888004534353641360687318060281490199180639288113397923326191050713763565560762521606266177933534601628614656;
parameter    ap_ST_fsm_state457 = 567'd1453677448591213781098647615776009068707282721374636120562980398361278576226795846652382101427527131121525043212532355867069203257229312;
parameter    ap_ST_fsm_state458 = 567'd2907354897182427562197295231552018137414565442749272241125960796722557152453591693304764202855054262243050086425064711734138406514458624;
parameter    ap_ST_fsm_state459 = 567'd5814709794364855124394590463104036274829130885498544482251921593445114304907183386609528405710108524486100172850129423468276813028917248;
parameter    ap_ST_fsm_state460 = 567'd11629419588729710248789180926208072549658261770997088964503843186890228609814366773219056811420217048972200345700258846936553626057834496;
parameter    ap_ST_fsm_state461 = 567'd23258839177459420497578361852416145099316523541994177929007686373780457219628733546438113622840434097944400691400517693873107252115668992;
parameter    ap_ST_fsm_state462 = 567'd46517678354918840995156723704832290198633047083988355858015372747560914439257467092876227245680868195888801382801035387746214504231337984;
parameter    ap_ST_fsm_state463 = 567'd93035356709837681990313447409664580397266094167976711716030745495121828878514934185752454491361736391777602765602070775492429008462675968;
parameter    ap_ST_fsm_state464 = 567'd186070713419675363980626894819329160794532188335953423432061490990243657757029868371504908982723472783555205531204141550984858016925351936;
parameter    ap_ST_fsm_state465 = 567'd372141426839350727961253789638658321589064376671906846864122981980487315514059736743009817965446945567110411062408283101969716033850703872;
parameter    ap_ST_fsm_state466 = 567'd744282853678701455922507579277316643178128753343813693728245963960974631028119473486019635930893891134220822124816566203939432067701407744;
parameter    ap_ST_fsm_state467 = 567'd1488565707357402911845015158554633286356257506687627387456491927921949262056238946972039271861787782268441644249633132407878864135402815488;
parameter    ap_ST_fsm_state468 = 567'd2977131414714805823690030317109266572712515013375254774912983855843898524112477893944078543723575564536883288499266264815757728270805630976;
parameter    ap_ST_fsm_state469 = 567'd5954262829429611647380060634218533145425030026750509549825967711687797048224955787888157087447151129073766576998532529631515456541611261952;
parameter    ap_ST_fsm_state470 = 567'd11908525658859223294760121268437066290850060053501019099651935423375594096449911575776314174894302258147533153997065059263030913083222523904;
parameter    ap_ST_fsm_state471 = 567'd23817051317718446589520242536874132581700120107002038199303870846751188192899823151552628349788604516295066307994130118526061826166445047808;
parameter    ap_ST_fsm_state472 = 567'd47634102635436893179040485073748265163400240214004076398607741693502376385799646303105256699577209032590132615988260237052123652332890095616;
parameter    ap_ST_fsm_state473 = 567'd95268205270873786358080970147496530326800480428008152797215483387004752771599292606210513399154418065180265231976520474104247304665780191232;
parameter    ap_ST_fsm_state474 = 567'd190536410541747572716161940294993060653600960856016305594430966774009505543198585212421026798308836130360530463953040948208494609331560382464;
parameter    ap_ST_fsm_state475 = 567'd381072821083495145432323880589986121307201921712032611188861933548019011086397170424842053596617672260721060927906081896416989218663120764928;
parameter    ap_ST_fsm_state476 = 567'd762145642166990290864647761179972242614403843424065222377723867096038022172794340849684107193235344521442121855812163792833978437326241529856;
parameter    ap_ST_fsm_state477 = 567'd1524291284333980581729295522359944485228807686848130444755447734192076044345588681699368214386470689042884243711624327585667956874652483059712;
parameter    ap_ST_fsm_state478 = 567'd3048582568667961163458591044719888970457615373696260889510895468384152088691177363398736428772941378085768487423248655171335913749304966119424;
parameter    ap_ST_fsm_state479 = 567'd6097165137335922326917182089439777940915230747392521779021790936768304177382354726797472857545882756171536974846497310342671827498609932238848;
parameter    ap_ST_fsm_state480 = 567'd12194330274671844653834364178879555881830461494785043558043581873536608354764709453594945715091765512343073949692994620685343654997219864477696;
parameter    ap_ST_fsm_state481 = 567'd24388660549343689307668728357759111763660922989570087116087163747073216709529418907189891430183531024686147899385989241370687309994439728955392;
parameter    ap_ST_fsm_state482 = 567'd48777321098687378615337456715518223527321845979140174232174327494146433419058837814379782860367062049372295798771978482741374619988879457910784;
parameter    ap_ST_fsm_state483 = 567'd97554642197374757230674913431036447054643691958280348464348654988292866838117675628759565720734124098744591597543956965482749239977758915821568;
parameter    ap_ST_fsm_state484 = 567'd195109284394749514461349826862072894109287383916560696928697309976585733676235351257519131441468248197489183195087913930965498479955517831643136;
parameter    ap_ST_fsm_state485 = 567'd390218568789499028922699653724145788218574767833121393857394619953171467352470702515038262882936496394978366390175827861930996959911035663286272;
parameter    ap_ST_fsm_state486 = 567'd780437137578998057845399307448291576437149535666242787714789239906342934704941405030076525765872992789956732780351655723861993919822071326572544;
parameter    ap_ST_fsm_state487 = 567'd1560874275157996115690798614896583152874299071332485575429578479812685869409882810060153051531745985579913465560703311447723987839644142653145088;
parameter    ap_ST_fsm_state488 = 567'd3121748550315992231381597229793166305748598142664971150859156959625371738819765620120306103063491971159826931121406622895447975679288285306290176;
parameter    ap_ST_fsm_state489 = 567'd6243497100631984462763194459586332611497196285329942301718313919250743477639531240240612206126983942319653862242813245790895951358576570612580352;
parameter    ap_ST_fsm_state490 = 567'd12486994201263968925526388919172665222994392570659884603436627838501486955279062480481224412253967884639307724485626491581791902717153141225160704;
parameter    ap_ST_fsm_state491 = 567'd24973988402527937851052777838345330445988785141319769206873255677002973910558124960962448824507935769278615448971252983163583805434306282450321408;
parameter    ap_ST_fsm_state492 = 567'd49947976805055875702105555676690660891977570282639538413746511354005947821116249921924897649015871538557230897942505966327167610868612564900642816;
parameter    ap_ST_fsm_state493 = 567'd99895953610111751404211111353381321783955140565279076827493022708011895642232499843849795298031743077114461795885011932654335221737225129801285632;
parameter    ap_ST_fsm_state494 = 567'd199791907220223502808422222706762643567910281130558153654986045416023791284464999687699590596063486154228923591770023865308670443474450259602571264;
parameter    ap_ST_fsm_state495 = 567'd399583814440447005616844445413525287135820562261116307309972090832047582568929999375399181192126972308457847183540047730617340886948900519205142528;
parameter    ap_ST_fsm_state496 = 567'd799167628880894011233688890827050574271641124522232614619944181664095165137859998750798362384253944616915694367080095461234681773897801038410285056;
parameter    ap_ST_fsm_state497 = 567'd1598335257761788022467377781654101148543282249044465229239888363328190330275719997501596724768507889233831388734160190922469363547795602076820570112;
parameter    ap_ST_fsm_state498 = 567'd3196670515523576044934755563308202297086564498088930458479776726656380660551439995003193449537015778467662777468320381844938727095591204153641140224;
parameter    ap_ST_fsm_state499 = 567'd6393341031047152089869511126616404594173128996177860916959553453312761321102879990006386899074031556935325554936640763689877454191182408307282280448;
parameter    ap_ST_fsm_state500 = 567'd12786682062094304179739022253232809188346257992355721833919106906625522642205759980012773798148063113870651109873281527379754908382364816614564560896;
parameter    ap_ST_fsm_state501 = 567'd25573364124188608359478044506465618376692515984711443667838213813251045284411519960025547596296126227741302219746563054759509816764729633229129121792;
parameter    ap_ST_fsm_state502 = 567'd51146728248377216718956089012931236753385031969422887335676427626502090568823039920051095192592252455482604439493126109519019633529459266458258243584;
parameter    ap_ST_fsm_state503 = 567'd102293456496754433437912178025862473506770063938845774671352855253004181137646079840102190385184504910965208878986252219038039267058918532916516487168;
parameter    ap_ST_fsm_state504 = 567'd204586912993508866875824356051724947013540127877691549342705710506008362275292159680204380770369009821930417757972504438076078534117837065833032974336;
parameter    ap_ST_fsm_state505 = 567'd409173825987017733751648712103449894027080255755383098685411421012016724550584319360408761540738019643860835515945008876152157068235674131666065948672;
parameter    ap_ST_fsm_state506 = 567'd818347651974035467503297424206899788054160511510766197370822842024033449101168638720817523081476039287721671031890017752304314136471348263332131897344;
parameter    ap_ST_fsm_state507 = 567'd1636695303948070935006594848413799576108321023021532394741645684048066898202337277441635046162952078575443342063780035504608628272942696526664263794688;
parameter    ap_ST_fsm_state508 = 567'd3273390607896141870013189696827599152216642046043064789483291368096133796404674554883270092325904157150886684127560071009217256545885393053328527589376;
parameter    ap_ST_fsm_state509 = 567'd6546781215792283740026379393655198304433284092086129578966582736192267592809349109766540184651808314301773368255120142018434513091770786106657055178752;
parameter    ap_ST_fsm_state510 = 567'd13093562431584567480052758787310396608866568184172259157933165472384535185618698219533080369303616628603546736510240284036869026183541572213314110357504;
parameter    ap_ST_fsm_state511 = 567'd26187124863169134960105517574620793217733136368344518315866330944769070371237396439066160738607233257207093473020480568073738052367083144426628220715008;
parameter    ap_ST_fsm_state512 = 567'd52374249726338269920211035149241586435466272736689036631732661889538140742474792878132321477214466514414186946040961136147476104734166288853256441430016;
parameter    ap_ST_fsm_state513 = 567'd104748499452676539840422070298483172870932545473378073263465323779076281484949585756264642954428933028828373892081922272294952209468332577706512882860032;
parameter    ap_ST_fsm_state514 = 567'd209496998905353079680844140596966345741865090946756146526930647558152562969899171512529285908857866057656747784163844544589904418936665155413025765720064;
parameter    ap_ST_fsm_state515 = 567'd418993997810706159361688281193932691483730181893512293053861295116305125939798343025058571817715732115313495568327689089179808837873330310826051531440128;
parameter    ap_ST_fsm_state516 = 567'd837987995621412318723376562387865382967460363787024586107722590232610251879596686050117143635431464230626991136655378178359617675746660621652103062880256;
parameter    ap_ST_fsm_state517 = 567'd1675975991242824637446753124775730765934920727574049172215445180465220503759193372100234287270862928461253982273310756356719235351493321243304206125760512;
parameter    ap_ST_fsm_state518 = 567'd3351951982485649274893506249551461531869841455148098344430890360930441007518386744200468574541725856922507964546621512713438470702986642486608412251521024;
parameter    ap_ST_fsm_state519 = 567'd6703903964971298549787012499102923063739682910296196688861780721860882015036773488400937149083451713845015929093243025426876941405973284973216824503042048;
parameter    ap_ST_fsm_state520 = 567'd13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084096;
parameter    ap_ST_fsm_state521 = 567'd26815615859885194199148049996411692254958731641184786755447122887443528060147093953603748596333806855380063716372972101707507765623893139892867298012168192;
parameter    ap_ST_fsm_state522 = 567'd53631231719770388398296099992823384509917463282369573510894245774887056120294187907207497192667613710760127432745944203415015531247786279785734596024336384;
parameter    ap_ST_fsm_state523 = 567'd107262463439540776796592199985646769019834926564739147021788491549774112240588375814414994385335227421520254865491888406830031062495572559571469192048672768;
parameter    ap_ST_fsm_state524 = 567'd214524926879081553593184399971293538039669853129478294043576983099548224481176751628829988770670454843040509730983776813660062124991145119142938384097345536;
parameter    ap_ST_fsm_state525 = 567'd429049853758163107186368799942587076079339706258956588087153966199096448962353503257659977541340909686081019461967553627320124249982290238285876768194691072;
parameter    ap_ST_fsm_state526 = 567'd858099707516326214372737599885174152158679412517913176174307932398192897924707006515319955082681819372162038923935107254640248499964580476571753536389382144;
parameter    ap_ST_fsm_state527 = 567'd1716199415032652428745475199770348304317358825035826352348615864796385795849414013030639910165363638744324077847870214509280496999929160953143507072778764288;
parameter    ap_ST_fsm_state528 = 567'd3432398830065304857490950399540696608634717650071652704697231729592771591698828026061279820330727277488648155695740429018560993999858321906287014145557528576;
parameter    ap_ST_fsm_state529 = 567'd6864797660130609714981900799081393217269435300143305409394463459185543183397656052122559640661454554977296311391480858037121987999716643812574028291115057152;
parameter    ap_ST_fsm_state530 = 567'd13729595320261219429963801598162786434538870600286610818788926918371086366795312104245119281322909109954592622782961716074243975999433287625148056582230114304;
parameter    ap_ST_fsm_state531 = 567'd27459190640522438859927603196325572869077741200573221637577853836742172733590624208490238562645818219909185245565923432148487951998866575250296113164460228608;
parameter    ap_ST_fsm_state532 = 567'd54918381281044877719855206392651145738155482401146443275155707673484345467181248416980477125291636439818370491131846864296975903997733150500592226328920457216;
parameter    ap_ST_fsm_state533 = 567'd109836762562089755439710412785302291476310964802292886550311415346968690934362496833960954250583272879636740982263693728593951807995466301001184452657840914432;
parameter    ap_ST_fsm_state534 = 567'd219673525124179510879420825570604582952621929604585773100622830693937381868724993667921908501166545759273481964527387457187903615990932602002368905315681828864;
parameter    ap_ST_fsm_state535 = 567'd439347050248359021758841651141209165905243859209171546201245661387874763737449987335843817002333091518546963929054774914375807231981865204004737810631363657728;
parameter    ap_ST_fsm_state536 = 567'd878694100496718043517683302282418331810487718418343092402491322775749527474899974671687634004666183037093927858109549828751614463963730408009475621262727315456;
parameter    ap_ST_fsm_state537 = 567'd1757388200993436087035366604564836663620975436836686184804982645551499054949799949343375268009332366074187855716219099657503228927927460816018951242525454630912;
parameter    ap_ST_fsm_state538 = 567'd3514776401986872174070733209129673327241950873673372369609965291102998109899599898686750536018664732148375711432438199315006457855854921632037902485050909261824;
parameter    ap_ST_fsm_state539 = 567'd7029552803973744348141466418259346654483901747346744739219930582205996219799199797373501072037329464296751422864876398630012915711709843264075804970101818523648;
parameter    ap_ST_fsm_state540 = 567'd14059105607947488696282932836518693308967803494693489478439861164411992439598399594747002144074658928593502845729752797260025831423419686528151609940203637047296;
parameter    ap_ST_fsm_state541 = 567'd28118211215894977392565865673037386617935606989386978956879722328823984879196799189494004288149317857187005691459505594520051662846839373056303219880407274094592;
parameter    ap_ST_fsm_state542 = 567'd56236422431789954785131731346074773235871213978773957913759444657647969758393598378988008576298635714374011382919011189040103325693678746112606439760814548189184;
parameter    ap_ST_fsm_state543 = 567'd112472844863579909570263462692149546471742427957547915827518889315295939516787196757976017152597271428748022765838022378080206651387357492225212879521629096378368;
parameter    ap_ST_fsm_state544 = 567'd224945689727159819140526925384299092943484855915095831655037778630591879033574393515952034305194542857496045531676044756160413302774714984450425759043258192756736;
parameter    ap_ST_fsm_state545 = 567'd449891379454319638281053850768598185886969711830191663310075557261183758067148787031904068610389085714992091063352089512320826605549429968900851518086516385513472;
parameter    ap_ST_fsm_state546 = 567'd899782758908639276562107701537196371773939423660383326620151114522367516134297574063808137220778171429984182126704179024641653211098859937801703036173032771026944;
parameter    ap_ST_fsm_state547 = 567'd1799565517817278553124215403074392743547878847320766653240302229044735032268595148127616274441556342859968364253408358049283306422197719875603406072346065542053888;
parameter    ap_ST_fsm_state548 = 567'd3599131035634557106248430806148785487095757694641533306480604458089470064537190296255232548883112685719936728506816716098566612844395439751206812144692131084107776;
parameter    ap_ST_fsm_state549 = 567'd7198262071269114212496861612297570974191515389283066612961208916178940129074380592510465097766225371439873457013633432197133225688790879502413624289384262168215552;
parameter    ap_ST_fsm_state550 = 567'd14396524142538228424993723224595141948383030778566133225922417832357880258148761185020930195532450742879746914027266864394266451377581759004827248578768524336431104;
parameter    ap_ST_fsm_state551 = 567'd28793048285076456849987446449190283896766061557132266451844835664715760516297522370041860391064901485759493828054533728788532902755163518009654497157537048672862208;
parameter    ap_ST_fsm_state552 = 567'd57586096570152913699974892898380567793532123114264532903689671329431521032595044740083720782129802971518987656109067457577065805510327036019308994315074097345724416;
parameter    ap_ST_fsm_state553 = 567'd115172193140305827399949785796761135587064246228529065807379342658863042065190089480167441564259605943037975312218134915154131611020654072038617988630148194691448832;
parameter    ap_ST_fsm_state554 = 567'd230344386280611654799899571593522271174128492457058131614758685317726084130380178960334883128519211886075950624436269830308263222041308144077235977260296389382897664;
parameter    ap_ST_fsm_state555 = 567'd460688772561223309599799143187044542348256984914116263229517370635452168260760357920669766257038423772151901248872539660616526444082616288154471954520592778765795328;
parameter    ap_ST_fsm_state556 = 567'd921377545122446619199598286374089084696513969828232526459034741270904336521520715841339532514076847544303802497745079321233052888165232576308943909041185557531590656;
parameter    ap_ST_fsm_state557 = 567'd1842755090244893238399196572748178169393027939656465052918069482541808673043041431682679065028153695088607604995490158642466105776330465152617887818082371115063181312;
parameter    ap_ST_fsm_state558 = 567'd3685510180489786476798393145496356338786055879312930105836138965083617346086082863365358130056307390177215209990980317284932211552660930305235775636164742230126362624;
parameter    ap_ST_fsm_state559 = 567'd7371020360979572953596786290992712677572111758625860211672277930167234692172165726730716260112614780354430419981960634569864423105321860610471551272329484460252725248;
parameter    ap_ST_fsm_state560 = 567'd14742040721959145907193572581985425355144223517251720423344555860334469384344331453461432520225229560708860839963921269139728846210643721220943102544658968920505450496;
parameter    ap_ST_fsm_state561 = 567'd29484081443918291814387145163970850710288447034503440846689111720668938768688662906922865040450459121417721679927842538279457692421287442441886205089317937841010900992;
parameter    ap_ST_fsm_state562 = 567'd58968162887836583628774290327941701420576894069006881693378223441337877537377325813845730080900918242835443359855685076558915384842574884883772410178635875682021801984;
parameter    ap_ST_fsm_state563 = 567'd117936325775673167257548580655883402841153788138013763386756446882675755074754651627691460161801836485670886719711370153117830769685149769767544820357271751364043603968;
parameter    ap_ST_fsm_state564 = 567'd235872651551346334515097161311766805682307576276027526773512893765351510149509303255382920323603672971341773439422740306235661539370299539535089640714543502728087207936;
parameter    ap_ST_fsm_state565 = 567'd471745303102692669030194322623533611364615152552055053547025787530703020299018606510765840647207345942683546878845480612471323078740599079070179281429087005456174415872;
parameter    ap_ST_fsm_state566 = 567'd943490606205385338060388645247067222729230305104110107094051575061406040598037213021531681294414691885367093757690961224942646157481198158140358562858174010912348831744;
parameter    ap_ST_fsm_state567 = 567'd1886981212410770676120777290494134445458460610208220214188103150122812081196074426043063362588829383770734187515381922449885292314962396316280717125716348021824697663488;
parameter    ap_ST_fsm_state568 = 567'd3773962424821541352241554580988268890916921220416440428376206300245624162392148852086126725177658767541468375030763844899770584629924792632561434251432696043649395326976;
parameter    ap_ST_fsm_state569 = 567'd7547924849643082704483109161976537781833842440832880856752412600491248324784297704172253450355317535082936750061527689799541169259849585265122868502865392087298790653952;
parameter    ap_ST_fsm_state570 = 567'd15095849699286165408966218323953075563667684881665761713504825200982496649568595408344506900710635070165873500123055379599082338519699170530245737005730784174597581307904;
parameter    ap_ST_fsm_state571 = 567'd30191699398572330817932436647906151127335369763331523427009650401964993299137190816689013801421270140331747000246110759198164677039398341060491474011461568349195162615808;
parameter    ap_ST_fsm_state572 = 567'd60383398797144661635864873295812302254670739526663046854019300803929986598274381633378027602842540280663494000492221518396329354078796682120982948022923136698390325231616;
parameter    ap_ST_fsm_state573 = 567'd120766797594289323271729746591624604509341479053326093708038601607859973196548763266756055205685080561326988000984443036792658708157593364241965896045846273396780650463232;
parameter    ap_ST_fsm_state574 = 567'd241533595188578646543459493183249209018682958106652187416077203215719946393097526533512110411370161122653976001968886073585317416315186728483931792091692546793561300926464;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] n_patches_i;
output  [7:0] n_patches_o;
output   n_patches_o_ap_vld;
output  [2:0] GDn_points_address0;
output   GDn_points_ce0;
input  [31:0] GDn_points_q0;
output  [11:0] patches_superpoints_address0;
output   patches_superpoints_ce0;
output   patches_superpoints_we0;
output  [63:0] patches_superpoints_d0;
input  [63:0] patches_superpoints_q0;
input  [7:0] lastPatchIndex;
input  [31:0] z_top_min;
input  [31:0] z_top_max;
input  [31:0] complementary_apexZ0;
input  [31:0] apexZ0;
input  [31:0] ppl;
output  [10:0] GDarrayDecoded_address0;
output   GDarrayDecoded_ce0;
input  [31:0] GDarrayDecoded_q0;
output  [10:0] GDarrayDecoded_address1;
output   GDarrayDecoded_ce1;
input  [31:0] GDarrayDecoded_q1;
output  [11:0] patches_parameters_address0;
output   patches_parameters_ce0;
output   patches_parameters_we0;
output  [31:0] patches_parameters_d0;
input  [31:0] patches_parameters_q0;
output  [11:0] patches_parameters_address1;
output   patches_parameters_ce1;
output   patches_parameters_we1;
output  [31:0] patches_parameters_d1;
input  [31:0] patches_parameters_q1;
output  [7:0] temp_V_address0;
output   temp_V_ce0;
output   temp_V_we0;
output  [31:0] temp_V_d0;
input  [31:0] temp_V_q0;
output  [7:0] temp_V_address1;
output   temp_V_ce1;
output   temp_V_we1;
output  [31:0] temp_V_d1;
output  [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_din1;
output  [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_din2;
output  [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_din3;
output  [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_din4;
output  [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_din5;
input  [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_dout0;
output   grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_ce;
output   grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_start;
input   grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_ready;
input   grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_done;
input   grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_idle;
output  [63:0] grp_fu_658_p_din0;
output  [63:0] grp_fu_658_p_din1;
output  [4:0] grp_fu_658_p_opcode;
input  [0:0] grp_fu_658_p_dout0;
output   grp_fu_658_p_ce;
output  [31:0] grp_fu_2017_p_din0;
input  [63:0] grp_fu_2017_p_dout0;
output   grp_fu_2017_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] n_patches_o;
reg n_patches_o_ap_vld;
reg[11:0] patches_superpoints_address0;
reg patches_superpoints_ce0;
reg patches_superpoints_we0;
reg[63:0] patches_superpoints_d0;
reg[11:0] patches_parameters_address0;
reg patches_parameters_ce0;
reg patches_parameters_we0;
reg[31:0] patches_parameters_d0;
reg[11:0] patches_parameters_address1;
reg patches_parameters_ce1;
reg patches_parameters_we1;

(* fsm_encoding = "none" *) reg   [566:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] indvar_flatten13_reg_800;
reg   [2:0] a_reg_811;
reg   [6:0] indvar_flatten_reg_823;
reg   [4:0] b_reg_835;
reg   [1:0] c_reg_847;
reg   [7:0] indvar_flatten35_reg_883;
reg   [2:0] b_1_reg_894;
reg   [6:0] indvar_flatten21_reg_906;
reg   [4:0] c_1_reg_918;
reg   [1:0] d_reg_930;
reg   [6:0] indvar_flatten57_reg_942;
reg   [2:0] b_2_reg_953;
reg   [5:0] indvar_flatten43_reg_965;
reg   [2:0] c_2_reg_977;
reg   [2:0] d_1_reg_989;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_1089_ap_return;
reg   [31:0] reg_1134;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state156;
wire    ap_CS_fsm_state237;
wire    ap_CS_fsm_state318;
wire    ap_CS_fsm_state392;
wire    ap_CS_fsm_state503;
wire    ap_CS_fsm_state569;
wire   [63:0] grp_fu_1121_p1;
reg   [63:0] reg_1139;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state163;
wire    ap_CS_fsm_state244;
wire    ap_CS_fsm_state325;
reg   [7:0] reg_1143;
wire    ap_CS_fsm_state402;
reg   [0:0] makeHorizontallyShiftedPatch_reg_776;
wire    ap_CS_fsm_state427;
wire    ap_CS_fsm_state572;
reg   [31:0] reg_1149;
wire    ap_CS_fsm_state438;
wire    ap_CS_fsm_state439;
reg   [31:0] reg_1153;
wire   [0:0] icmp_ln710_fu_1157_p2;
reg   [0:0] icmp_ln710_reg_2554;
wire   [7:0] secondLastPatchIndex_fu_1163_p2;
reg   [7:0] secondLastPatchIndex_reg_2559;
wire   [4:0] trunc_ln732_fu_1169_p1;
reg   [4:0] trunc_ln732_reg_2564;
wire   [7:0] secondLastPatchIndex_1_fu_1173_p3;
reg   [7:0] secondLastPatchIndex_1_reg_2570;
wire    ap_CS_fsm_state2;
wire   [4:0] trunc_ln723_fu_1179_p1;
reg   [4:0] trunc_ln723_reg_2576;
wire    ap_CS_fsm_state3;
wire   [8:0] zext_ln720_fu_1207_p1;
reg   [8:0] zext_ln720_reg_2606;
wire   [11:0] grp_fu_1201_p2;
reg   [11:0] sub_ln732_reg_2621;
wire    ap_CS_fsm_state4;
wire   [11:0] grp_fu_1229_p2;
reg   [11:0] sub_ln723_reg_2629;
wire   [8:0] zext_ln721_fu_1240_p1;
reg   [8:0] zext_ln721_reg_2637;
wire    ap_CS_fsm_state5;
wire   [11:0] grp_fu_1235_p2;
reg   [11:0] add_ln723_reg_2642;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
reg   [31:0] original_topR_jL_V_reg_2652;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln886_fu_1248_p2;
reg   [0:0] icmp_ln886_reg_2680;
wire   [0:0] icmp_ln878_fu_1253_p2;
reg   [0:0] icmp_ln878_reg_2685;
wire   [0:0] and_ln724_fu_1293_p2;
reg   [0:0] and_ln724_reg_2690;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
reg   [11:0] patches_parameters_addr_14_reg_2699;
reg   [11:0] patches_parameters_addr_15_reg_2704;
reg   [11:0] patches_parameters_addr_16_reg_2709;
reg   [11:0] patches_parameters_addr_17_reg_2714;
reg   [11:0] patches_parameters_addr_13_reg_2719;
reg   [11:0] patches_parameters_addr_18_reg_2724;
reg   [11:0] patches_parameters_addr_19_reg_2729;
wire   [63:0] bitcast_ln521_fu_1344_p1;
wire    ap_CS_fsm_state83;
wire   [0:0] notlhs39_fu_1363_p2;
reg   [0:0] notlhs39_reg_2739;
wire   [0:0] notrhs40_fu_1369_p2;
reg   [0:0] notrhs40_reg_2744;
wire   [0:0] grp_fu_1116_p2;
reg   [0:0] tmp_22_reg_2749;
wire    ap_CS_fsm_state86;
wire   [0:0] empty_85_fu_1384_p2;
wire    ap_CS_fsm_state87;
reg  signed [31:0] original_topL_jL_V_3_reg_2759;
wire    ap_CS_fsm_state90;
wire   [0:0] icmp_ln886_3_fu_1390_p2;
reg   [0:0] icmp_ln886_3_reg_2768;
wire    ap_CS_fsm_state91;
wire   [32:0] ret_fu_1400_p2;
reg   [32:0] ret_reg_2772;
wire    ap_CS_fsm_state92;
wire   [0:0] icmp_ln878_3_fu_1406_p2;
reg   [0:0] icmp_ln878_3_reg_2777;
wire    ap_CS_fsm_state93;
wire   [63:0] bitcast_ln521_3_fu_1423_p1;
wire    ap_CS_fsm_state164;
wire   [0:0] notlhs37_fu_1442_p2;
reg   [0:0] notlhs37_reg_2786;
wire   [0:0] notrhs38_fu_1448_p2;
reg   [0:0] notrhs38_reg_2791;
reg   [0:0] tmp_25_reg_2796;
wire    ap_CS_fsm_state167;
wire   [0:0] empty_90_fu_1463_p2;
wire    ap_CS_fsm_state168;
reg  signed [31:0] complementary_topR_jR_V_3_reg_2806;
wire    ap_CS_fsm_state171;
wire   [32:0] ret_21_fu_1475_p2;
reg   [32:0] ret_21_reg_2815;
wire    ap_CS_fsm_state172;
wire   [0:0] icmp_ln886_4_fu_1481_p2;
reg   [0:0] icmp_ln886_4_reg_2820;
wire    ap_CS_fsm_state173;
wire   [0:0] icmp_ln878_4_fu_1486_p2;
reg   [0:0] icmp_ln878_4_reg_2825;
wire   [0:0] and_ln734_fu_1490_p2;
reg   [0:0] and_ln734_reg_2830;
wire    ap_CS_fsm_state174;
wire   [63:0] bitcast_ln521_4_fu_1506_p1;
wire    ap_CS_fsm_state245;
wire   [0:0] notlhs35_fu_1525_p2;
reg   [0:0] notlhs35_reg_2839;
wire   [0:0] notrhs36_fu_1531_p2;
reg   [0:0] notrhs36_reg_2844;
reg   [0:0] tmp_28_reg_2849;
wire    ap_CS_fsm_state248;
wire   [0:0] empty_95_fu_1546_p2;
wire    ap_CS_fsm_state249;
reg  signed [31:0] complementary_topL_jR_V_3_reg_2859;
wire    ap_CS_fsm_state252;
wire   [0:0] icmp_ln886_5_fu_1552_p2;
reg   [0:0] icmp_ln886_5_reg_2868;
wire    ap_CS_fsm_state253;
wire   [32:0] ret_23_fu_1562_p2;
reg   [32:0] ret_23_reg_2872;
wire    ap_CS_fsm_state254;
wire   [0:0] icmp_ln878_5_fu_1568_p2;
reg   [0:0] icmp_ln878_5_reg_2877;
wire    ap_CS_fsm_state255;
wire   [63:0] bitcast_ln521_5_fu_1585_p1;
wire    ap_CS_fsm_state326;
wire   [0:0] notlhs_fu_1604_p2;
reg   [0:0] notlhs_reg_2886;
wire   [0:0] notrhs_fu_1610_p2;
reg   [0:0] notrhs_reg_2891;
reg   [0:0] tmp_31_reg_2896;
wire    ap_CS_fsm_state329;
wire   [0:0] empty_100_fu_1625_p2;
wire    ap_CS_fsm_state330;
wire   [0:0] or_ln791_fu_1631_p2;
reg   [0:0] or_ln791_reg_2927;
wire   [0:0] or_ln791_2_fu_1651_p2;
reg   [0:0] or_ln791_2_reg_2932;
wire    ap_CS_fsm_state331;
reg   [31:0] complementary_topR_jL_V_reg_2937;
reg   [31:0] complementary_topL_jL_V_reg_2942;
wire   [31:0] horizontalShiftTop_fu_1657_p2;
reg   [31:0] horizontalShiftTop_reg_2947;
wire    ap_CS_fsm_state393;
wire   [31:0] horizontalShiftBottom_fu_1661_p2;
reg   [31:0] horizontalShiftBottom_reg_2952;
reg   [31:0] original_topR_jR_V_reg_2957;
reg   [31:0] original_topL_jR_V_reg_2962;
reg   [0:0] tmp_54_reg_2967;
wire   [0:0] icmp_ln886_6_fu_1673_p2;
reg   [0:0] icmp_ln886_6_reg_2974;
wire  signed [63:0] sext_ln774_fu_1695_p1;
wire    ap_CS_fsm_state394;
wire   [0:0] shiftOriginal_1_fu_1699_p2;
reg   [0:0] shiftOriginal_1_reg_2986;
wire   [0:0] leftRight_fu_1709_p2;
reg   [0:0] leftRight_reg_3000;
wire   [31:0] newZtop_V_2_fu_1714_p3;
reg   [31:0] newZtop_V_2_reg_3005;
wire   [0:0] icmp_ln791_fu_1730_p2;
reg   [0:0] icmp_ln791_reg_3011;
wire    ap_CS_fsm_state395;
wire   [0:0] or_ln791_1_fu_1736_p2;
reg   [0:0] or_ln791_1_reg_3016;
wire    ap_CS_fsm_state396;
wire   [0:0] grp_fu_1124_p2;
reg   [0:0] icmp_ln890_2_reg_3020;
wire   [0:0] grp_fu_1129_p2;
reg   [0:0] icmp_ln890_3_reg_3025;
wire   [0:0] icmp_ln791_1_fu_1758_p2;
reg   [0:0] icmp_ln791_1_reg_3030;
reg   [0:0] icmp_ln890_reg_3035;
reg   [0:0] icmp_ln890_1_reg_3040;
wire   [0:0] icmp_ln878_6_fu_1788_p2;
reg   [0:0] icmp_ln878_6_reg_3051;
wire    ap_CS_fsm_state397;
wire   [0:0] and_ln791_1_fu_1783_p2;
wire   [0:0] and_ln791_2_fu_1764_p2;
wire   [31:0] select_ln534_fu_1794_p3;
reg   [31:0] select_ln534_reg_3056;
wire    ap_CS_fsm_state398;
wire  signed [63:0] sext_ln534_fu_1801_p1;
wire    ap_CS_fsm_state399;
wire   [63:0] grp_fu_1804_p2;
reg   [63:0] shifted_Align_3_reg_3067;
wire    ap_CS_fsm_state401;
wire   [63:0] grp_fu_1810_p2;
reg   [63:0] shifted_Align_4_reg_3072;
wire   [63:0] shifted_Align_5_fu_1816_p3;
reg   [63:0] shifted_Align_5_reg_3077;
wire   [8:0] add_ln811_fu_1825_p2;
reg   [8:0] add_ln811_reg_3083;
wire   [7:0] add_ln1116_1_fu_1831_p2;
reg   [7:0] add_ln1116_1_reg_3088;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state405_pp0_stage0_iter0;
wire    ap_block_state408_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln1116_fu_1837_p2;
reg   [0:0] icmp_ln1116_reg_3093;
reg   [0:0] icmp_ln1116_reg_3093_pp0_iter1_reg;
wire   [2:0] add_ln1116_fu_1843_p2;
reg   [2:0] add_ln1116_reg_3097;
wire   [0:0] icmp_ln1118_fu_1849_p2;
reg   [0:0] icmp_ln1118_reg_3102;
wire   [4:0] select_ln1116_fu_1855_p3;
reg   [4:0] select_ln1116_reg_3112;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state406_pp0_stage1_iter0;
wire    ap_block_state409_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire   [0:0] and_ln1116_fu_1873_p2;
reg   [0:0] and_ln1116_reg_3118;
wire   [2:0] select_ln1116_1_fu_1879_p3;
reg   [2:0] select_ln1116_1_reg_3125;
wire   [6:0] add_ln1118_1_fu_1885_p2;
reg   [6:0] add_ln1118_1_reg_3130;
wire   [4:0] add_ln1118_fu_1891_p2;
reg   [4:0] add_ln1118_reg_3135;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state407_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire   [1:0] select_ln1118_fu_1900_p3;
reg   [1:0] select_ln1118_reg_3141;
wire   [6:0] select_ln1118_3_fu_1908_p3;
reg   [6:0] select_ln1118_3_reg_3147;
wire   [4:0] select_ln1118_2_fu_1943_p3;
reg   [4:0] select_ln1118_2_reg_3152;
reg    ap_enable_reg_pp0_iter1;
wire   [4:0] add_ln1122_fu_1951_p2;
reg   [4:0] add_ln1122_reg_3157;
wire   [1:0] add_ln1120_fu_1957_p2;
reg   [1:0] add_ln1120_reg_3162;
wire   [31:0] apexZ0_V_fu_1970_p1;
reg   [31:0] apexZ0_V_reg_3167;
wire    ap_CS_fsm_state410;
wire   [2:0] add_ln1134_fu_1973_p2;
reg   [2:0] add_ln1134_reg_3173;
wire    ap_CS_fsm_state411;
wire   [0:0] icmp_ln1134_fu_1979_p2;
wire    ap_CS_fsm_state413;
wire   [7:0] add_ln1141_1_fu_2002_p2;
reg   [7:0] add_ln1141_1_reg_3190;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state414_pp1_stage0_iter0;
wire    ap_block_state417_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln1141_fu_2008_p2;
reg   [0:0] icmp_ln1141_reg_3195;
reg   [0:0] icmp_ln1141_reg_3195_pp1_iter1_reg;
wire   [2:0] add_ln1141_fu_2014_p2;
reg   [2:0] add_ln1141_reg_3199;
wire   [0:0] icmp_ln1143_fu_2020_p2;
reg   [0:0] icmp_ln1143_reg_3204;
wire   [4:0] select_ln1141_fu_2026_p3;
reg   [4:0] select_ln1141_reg_3214;
wire    ap_CS_fsm_pp1_stage1;
wire    ap_block_state415_pp1_stage1_iter0;
wire    ap_block_state418_pp1_stage1_iter1;
wire    ap_block_pp1_stage1_11001;
wire   [0:0] and_ln1141_fu_2044_p2;
reg   [0:0] and_ln1141_reg_3220;
wire   [2:0] select_ln1141_1_fu_2050_p3;
reg   [2:0] select_ln1141_1_reg_3227;
wire   [6:0] add_ln1143_1_fu_2056_p2;
reg   [6:0] add_ln1143_1_reg_3232;
wire   [4:0] add_ln1143_fu_2062_p2;
reg   [4:0] add_ln1143_reg_3237;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_state416_pp1_stage2_iter0;
wire    ap_block_pp1_stage2_11001;
wire   [1:0] select_ln1143_fu_2071_p3;
reg   [1:0] select_ln1143_reg_3243;
wire   [6:0] select_ln1143_3_fu_2079_p3;
reg   [6:0] select_ln1143_3_reg_3249;
wire   [4:0] select_ln1143_2_fu_2114_p3;
reg   [4:0] select_ln1143_2_reg_3254;
reg    ap_enable_reg_pp1_iter1;
wire   [4:0] add_ln1147_fu_2122_p2;
reg   [4:0] add_ln1147_reg_3259;
wire   [1:0] add_ln1145_fu_2128_p2;
reg   [1:0] add_ln1145_reg_3264;
wire   [6:0] add_ln1153_1_fu_2141_p2;
reg   [6:0] add_ln1153_1_reg_3269;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state420_pp2_stage0_iter0;
wire    ap_block_state423_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [0:0] icmp_ln1153_fu_2147_p2;
reg   [0:0] icmp_ln1153_reg_3274;
reg   [0:0] icmp_ln1153_reg_3274_pp2_iter1_reg;
wire   [2:0] add_ln1153_fu_2153_p2;
reg   [2:0] add_ln1153_reg_3278;
wire   [0:0] icmp_ln1155_fu_2159_p2;
reg   [0:0] icmp_ln1155_reg_3283;
wire   [2:0] select_ln1153_fu_2165_p3;
reg   [2:0] select_ln1153_reg_3292;
wire    ap_CS_fsm_pp2_stage1;
wire    ap_block_state421_pp2_stage1_iter0;
wire    ap_block_state424_pp2_stage1_iter1;
wire    ap_block_pp2_stage1_11001;
wire   [2:0] select_ln1153_1_fu_2172_p3;
reg   [2:0] select_ln1153_1_reg_3298;
reg   [2:0] select_ln1153_1_reg_3298_pp2_iter1_reg;
wire   [5:0] add_ln1155_1_fu_2178_p2;
reg   [5:0] add_ln1155_1_reg_3303;
wire   [0:0] and_ln1153_fu_2195_p2;
reg   [0:0] and_ln1153_reg_3308;
wire    ap_CS_fsm_pp2_stage2;
wire    ap_block_state422_pp2_stage2_iter0;
wire    ap_block_state425_pp2_stage2_iter1;
wire    ap_block_pp2_stage2_11001;
wire   [2:0] add_ln1155_fu_2201_p2;
reg   [2:0] add_ln1155_reg_3314;
wire   [5:0] select_ln1155_2_fu_2206_p3;
reg   [5:0] select_ln1155_2_reg_3319;
wire   [2:0] select_ln1155_fu_2216_p3;
reg   [2:0] select_ln1155_reg_3324;
wire   [2:0] select_ln1155_1_fu_2224_p3;
reg   [2:0] select_ln1155_1_reg_3330;
reg    ap_enable_reg_pp2_iter1;
wire   [1:0] trunc_ln1159_fu_2229_p1;
reg   [1:0] trunc_ln1159_reg_3336;
wire   [4:0] add_ln1159_fu_2260_p2;
reg   [4:0] add_ln1159_reg_3341;
wire   [2:0] add_ln1157_fu_2266_p2;
reg   [2:0] add_ln1157_reg_3346;
wire   [8:0] add_ln817_fu_2287_p2;
reg   [8:0] add_ln817_reg_3351;
wire    ap_CS_fsm_state430;
wire   [4:0] trunc_ln821_fu_2293_p1;
reg   [4:0] trunc_ln821_reg_3357;
wire   [4:0] add_ln817_1_fu_2297_p2;
reg   [4:0] add_ln817_1_reg_3362;
wire    ap_CS_fsm_state431;
wire   [11:0] grp_fu_2317_p2;
reg   [11:0] sub_ln821_reg_3377;
wire    ap_CS_fsm_state432;
wire   [11:0] grp_fu_2323_p2;
reg   [11:0] add_ln821_reg_3385;
wire    ap_CS_fsm_state434;
wire   [11:0] grp_fu_2328_p2;
reg   [11:0] add_ln822_reg_3390;
wire    ap_CS_fsm_state435;
wire   [11:0] grp_fu_2333_p2;
reg   [11:0] add_ln823_reg_3405;
wire   [11:0] grp_fu_2338_p2;
reg   [11:0] add_ln824_reg_3410;
wire    ap_CS_fsm_state436;
wire  signed [31:0] original_topL_jL_V_4_fu_2359_p3;
reg  signed [31:0] original_topL_jL_V_4_reg_3425;
wire  signed [31:0] original_topR_jL_V_3_fu_2366_p3;
reg  signed [31:0] original_topR_jL_V_3_reg_3432;
wire  signed [31:0] complementary_topR_jL_V_3_fu_2373_p3;
reg  signed [31:0] complementary_topR_jL_V_3_reg_3439;
wire  signed [31:0] complementary_topL_jL_V_3_fu_2380_p3;
reg  signed [31:0] complementary_topL_jL_V_3_reg_3445;
wire  signed [31:0] complementary_topR_jR_V_4_fu_2387_p3;
reg  signed [31:0] complementary_topR_jR_V_4_reg_3451;
wire    ap_CS_fsm_state440;
wire  signed [31:0] complementary_topL_jR_V_4_fu_2394_p3;
reg  signed [31:0] complementary_topL_jR_V_4_reg_3458;
wire  signed [31:0] original_topR_jR_V_3_fu_2401_p3;
reg  signed [31:0] original_topR_jR_V_3_reg_3465;
wire  signed [31:0] original_topL_jR_V_3_fu_2408_p3;
reg  signed [31:0] original_topL_jR_V_3_reg_3472;
wire  signed [32:0] sext_ln215_18_fu_2415_p1;
reg  signed [32:0] sext_ln215_18_reg_3478;
wire    ap_CS_fsm_state441;
wire  signed [32:0] sext_ln215_19_fu_2418_p1;
reg  signed [32:0] sext_ln215_19_reg_3483;
wire   [31:0] horizontalShiftTop_1_fu_2421_p2;
reg   [31:0] horizontalShiftTop_1_reg_3488;
wire  signed [32:0] sext_ln215_20_fu_2425_p1;
reg  signed [32:0] sext_ln215_20_reg_3493;
wire  signed [32:0] sext_ln215_21_fu_2428_p1;
reg  signed [32:0] sext_ln215_21_reg_3498;
wire   [31:0] horizontalShiftBottom_1_fu_2431_p2;
reg   [31:0] horizontalShiftBottom_1_reg_3503;
wire   [0:0] icmp_ln878_7_fu_2435_p2;
reg   [0:0] icmp_ln878_7_reg_3508;
wire    ap_CS_fsm_state504;
wire   [32:0] ret_25_fu_2444_p2;
reg   [32:0] ret_25_reg_3512;
wire   [32:0] ret_26_fu_2452_p2;
reg   [32:0] ret_26_reg_3517;
wire   [31:0] trunc_ln839_fu_2457_p1;
reg   [31:0] trunc_ln839_reg_3522;
wire   [31:0] trunc_ln839_1_fu_2461_p1;
reg   [31:0] trunc_ln839_1_reg_3527;
wire   [32:0] ret_27_fu_2468_p2;
reg   [32:0] ret_27_reg_3532;
wire   [32:0] ret_28_fu_2476_p2;
reg   [32:0] ret_28_reg_3537;
wire   [31:0] trunc_ln840_fu_2481_p1;
reg   [31:0] trunc_ln840_reg_3542;
wire   [31:0] trunc_ln840_1_fu_2485_p1;
reg   [31:0] trunc_ln840_1_reg_3547;
wire   [0:0] icmp_ln878_8_fu_2489_p2;
reg   [0:0] icmp_ln878_8_reg_3552;
wire    ap_CS_fsm_state505;
wire   [0:0] icmp_ln878_9_fu_2493_p2;
reg   [0:0] icmp_ln878_9_reg_3557;
wire   [0:0] icmp_ln886_7_fu_2522_p2;
reg   [0:0] icmp_ln886_7_reg_3562;
wire    ap_CS_fsm_state570;
wire   [0:0] and_ln857_fu_2528_p2;
reg   [0:0] and_ln857_reg_3567;
wire    ap_CS_fsm_state571;
wire   [0:0] icmp_ln859_fu_2532_p2;
reg   [0:0] icmp_ln859_reg_3571;
wire   [7:0] add_ln861_fu_2538_p2;
reg   [7:0] add_ln861_reg_3575;
wire   [8:0] zext_ln861_fu_2544_p1;
reg   [8:0] zext_ln861_reg_3580;
wire    ap_CS_fsm_state573;
wire    ap_CS_fsm_state404;
wire    grp_delete_patch_fu_1104_ap_ready;
wire    grp_delete_patch_fu_1104_ap_done;
reg    ap_block_state404_on_subcall_done;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state405;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state414;
wire    ap_block_pp1_stage2_subdone;
wire    ap_block_pp1_stage1_subdone;
wire    ap_CS_fsm_state419;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state420;
wire    ap_block_pp2_stage2_subdone;
reg   [4:0] init_patch_V_0_address0;
reg    init_patch_V_0_ce0;
reg    init_patch_V_0_we0;
reg   [31:0] init_patch_V_0_d0;
wire   [31:0] init_patch_V_0_q0;
reg   [4:0] init_patch_V_1_address0;
reg    init_patch_V_1_ce0;
reg    init_patch_V_1_we0;
reg   [31:0] init_patch_V_1_d0;
wire   [31:0] init_patch_V_1_q0;
reg   [4:0] init_patch_V_2_address0;
reg    init_patch_V_2_ce0;
reg    init_patch_V_2_we0;
reg   [31:0] init_patch_V_2_d0;
wire   [31:0] init_patch_V_2_q0;
reg   [4:0] init_patch_V_3_address0;
reg    init_patch_V_3_ce0;
reg    init_patch_V_3_we0;
reg   [31:0] init_patch_V_3_d0;
wire   [31:0] init_patch_V_3_q0;
reg   [4:0] init_patch_V_4_address0;
reg    init_patch_V_4_ce0;
reg    init_patch_V_4_we0;
reg   [31:0] init_patch_V_4_d0;
wire   [31:0] init_patch_V_4_q0;
reg   [4:0] NPpatches_superpoints_0_V_address0;
reg    NPpatches_superpoints_0_V_ce0;
reg    NPpatches_superpoints_0_V_we0;
reg   [31:0] NPpatches_superpoints_0_V_d0;
wire   [31:0] NPpatches_superpoints_0_V_q0;
reg   [4:0] NPpatches_superpoints_0_V_address1;
reg    NPpatches_superpoints_0_V_ce1;
wire   [31:0] NPpatches_superpoints_0_V_q1;
reg   [4:0] NPpatches_superpoints_1_V_address0;
reg    NPpatches_superpoints_1_V_ce0;
reg    NPpatches_superpoints_1_V_we0;
reg   [31:0] NPpatches_superpoints_1_V_d0;
wire   [31:0] NPpatches_superpoints_1_V_q0;
reg   [4:0] NPpatches_superpoints_1_V_address1;
reg    NPpatches_superpoints_1_V_ce1;
wire   [31:0] NPpatches_superpoints_1_V_q1;
reg   [4:0] NPpatches_superpoints_2_V_address0;
reg    NPpatches_superpoints_2_V_ce0;
reg    NPpatches_superpoints_2_V_we0;
reg   [31:0] NPpatches_superpoints_2_V_d0;
wire   [31:0] NPpatches_superpoints_2_V_q0;
reg   [4:0] NPpatches_superpoints_2_V_address1;
reg    NPpatches_superpoints_2_V_ce1;
wire   [31:0] NPpatches_superpoints_2_V_q1;
reg   [4:0] NPpatches_superpoints_3_V_address0;
reg    NPpatches_superpoints_3_V_ce0;
reg    NPpatches_superpoints_3_V_we0;
reg   [31:0] NPpatches_superpoints_3_V_d0;
wire   [31:0] NPpatches_superpoints_3_V_q0;
reg   [4:0] NPpatches_superpoints_3_V_address1;
reg    NPpatches_superpoints_3_V_ce1;
wire   [31:0] NPpatches_superpoints_3_V_q1;
reg   [4:0] NPpatches_superpoints_4_V_address0;
reg    NPpatches_superpoints_4_V_ce0;
reg    NPpatches_superpoints_4_V_we0;
reg   [31:0] NPpatches_superpoints_4_V_d0;
wire   [31:0] NPpatches_superpoints_4_V_q0;
reg   [4:0] NPpatches_superpoints_4_V_address1;
reg    NPpatches_superpoints_4_V_ce1;
wire   [31:0] NPpatches_superpoints_4_V_q1;
reg   [4:0] NPpatches_parameters_V_0_address0;
reg    NPpatches_parameters_V_0_ce0;
reg    NPpatches_parameters_V_0_we0;
reg   [31:0] NPpatches_parameters_V_0_d0;
wire   [31:0] NPpatches_parameters_V_0_q0;
reg    NPpatches_parameters_V_0_ce1;
reg    NPpatches_parameters_V_0_we1;
wire   [31:0] NPpatches_parameters_V_0_q1;
reg   [4:0] NPpatches_parameters_V_1_address0;
reg    NPpatches_parameters_V_1_ce0;
reg    NPpatches_parameters_V_1_we0;
reg   [0:0] NPpatches_parameters_V_1_d0;
wire   [0:0] NPpatches_parameters_V_1_q0;
reg    NPpatches_parameters_V_1_ce1;
reg    NPpatches_parameters_V_1_we1;
reg   [4:0] NPpatches_parameters_V_2_address0;
reg    NPpatches_parameters_V_2_ce0;
reg    NPpatches_parameters_V_2_we0;
reg   [31:0] NPpatches_parameters_V_2_d0;
wire   [31:0] NPpatches_parameters_V_2_q0;
reg    NPpatches_parameters_V_2_ce1;
reg    NPpatches_parameters_V_2_we1;
reg   [4:0] NPpatches_parameters_V_3_address0;
reg    NPpatches_parameters_V_3_ce0;
reg    NPpatches_parameters_V_3_we0;
reg   [0:0] NPpatches_parameters_V_3_d0;
wire   [0:0] NPpatches_parameters_V_3_q0;
reg    NPpatches_parameters_V_3_ce1;
reg    NPpatches_parameters_V_3_we1;
reg   [4:0] NPpatches_parameters_V_4_address0;
reg    NPpatches_parameters_V_4_ce0;
reg    NPpatches_parameters_V_4_we0;
reg   [31:0] NPpatches_parameters_V_4_d0;
wire   [31:0] NPpatches_parameters_V_4_q0;
reg    NPpatches_parameters_V_4_ce1;
reg    NPpatches_parameters_V_4_we1;
wire   [31:0] NPpatches_parameters_V_4_q1;
wire    grp_getShadows_fu_1001_ap_start;
wire    grp_getShadows_fu_1001_ap_done;
wire    grp_getShadows_fu_1001_ap_idle;
wire    grp_getShadows_fu_1001_ap_ready;
wire   [11:0] grp_getShadows_fu_1001_patches_superpoints_address0;
wire    grp_getShadows_fu_1001_patches_superpoints_ce0;
reg   [8:0] grp_getShadows_fu_1001_wp_superpoints;
wire   [11:0] grp_getShadows_fu_1001_wp_parameters_address0;
wire    grp_getShadows_fu_1001_wp_parameters_ce0;
wire    grp_getShadows_fu_1001_wp_parameters_we0;
wire   [31:0] grp_getShadows_fu_1001_wp_parameters_d0;
wire   [11:0] grp_getShadows_fu_1001_wp_parameters_address1;
wire    grp_getShadows_fu_1001_wp_parameters_ce1;
wire    grp_getShadows_fu_1001_wp_parameters_we1;
wire   [31:0] grp_getShadows_fu_1001_wp_parameters_d1;
reg   [4:0] grp_getShadows_fu_1001_wp_parameters_offset;
wire    grp_add_patch6_fu_1017_ap_start;
wire    grp_add_patch6_fu_1017_ap_done;
wire    grp_add_patch6_fu_1017_ap_idle;
wire    grp_add_patch6_fu_1017_ap_ready;
wire   [7:0] grp_add_patch6_fu_1017_n_patches;
wire    grp_add_patch6_fu_1017_n_patches_ap_vld;
wire   [11:0] grp_add_patch6_fu_1017_patches_superpoints_address0;
wire    grp_add_patch6_fu_1017_patches_superpoints_ce0;
wire    grp_add_patch6_fu_1017_patches_superpoints_we0;
wire   [63:0] grp_add_patch6_fu_1017_patches_superpoints_d0;
wire   [4:0] grp_add_patch6_fu_1017_wp_superpoints_address0;
wire    grp_add_patch6_fu_1017_wp_superpoints_ce0;
wire   [4:0] grp_add_patch6_fu_1017_wp_superpoints_address1;
wire    grp_add_patch6_fu_1017_wp_superpoints_ce1;
wire   [4:0] grp_add_patch6_fu_1017_wp_superpoints1_address0;
wire    grp_add_patch6_fu_1017_wp_superpoints1_ce0;
wire   [4:0] grp_add_patch6_fu_1017_wp_superpoints1_address1;
wire    grp_add_patch6_fu_1017_wp_superpoints1_ce1;
wire   [4:0] grp_add_patch6_fu_1017_wp_superpoints2_address0;
wire    grp_add_patch6_fu_1017_wp_superpoints2_ce0;
wire   [4:0] grp_add_patch6_fu_1017_wp_superpoints2_address1;
wire    grp_add_patch6_fu_1017_wp_superpoints2_ce1;
wire   [4:0] grp_add_patch6_fu_1017_wp_superpoints3_address0;
wire    grp_add_patch6_fu_1017_wp_superpoints3_ce0;
wire   [4:0] grp_add_patch6_fu_1017_wp_superpoints3_address1;
wire    grp_add_patch6_fu_1017_wp_superpoints3_ce1;
wire   [4:0] grp_add_patch6_fu_1017_wp_superpoints4_address0;
wire    grp_add_patch6_fu_1017_wp_superpoints4_ce0;
wire   [4:0] grp_add_patch6_fu_1017_wp_superpoints4_address1;
wire    grp_add_patch6_fu_1017_wp_superpoints4_ce1;
wire   [4:0] grp_add_patch6_fu_1017_wp_parameters_address0;
wire    grp_add_patch6_fu_1017_wp_parameters_ce0;
wire   [4:0] grp_add_patch6_fu_1017_wp_parameters5_address0;
wire    grp_add_patch6_fu_1017_wp_parameters5_ce0;
wire   [4:0] grp_add_patch6_fu_1017_wp_parameters6_address0;
wire    grp_add_patch6_fu_1017_wp_parameters6_ce0;
wire   [4:0] grp_add_patch6_fu_1017_wp_parameters7_address0;
wire    grp_add_patch6_fu_1017_wp_parameters7_ce0;
wire   [4:0] grp_add_patch6_fu_1017_wp_parameters8_address0;
wire    grp_add_patch6_fu_1017_wp_parameters8_ce0;
wire   [11:0] grp_add_patch6_fu_1017_patches_parameters_address0;
wire    grp_add_patch6_fu_1017_patches_parameters_ce0;
wire    grp_add_patch6_fu_1017_patches_parameters_we0;
wire   [31:0] grp_add_patch6_fu_1017_patches_parameters_d0;
wire    grp_makeSuperPoint_alignedToLine8_fu_1038_ap_start;
wire    grp_makeSuperPoint_alignedToLine8_fu_1038_ap_done;
wire    grp_makeSuperPoint_alignedToLine8_fu_1038_ap_idle;
wire    grp_makeSuperPoint_alignedToLine8_fu_1038_ap_ready;
wire   [2:0] grp_makeSuperPoint_alignedToLine8_fu_1038_GDn_points_address0;
wire    grp_makeSuperPoint_alignedToLine8_fu_1038_GDn_points_ce0;
wire   [4:0] grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch_address0;
wire    grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch_ce0;
wire    grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch_we0;
wire   [31:0] grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch_d0;
wire   [4:0] grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch1_address0;
wire    grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch1_ce0;
wire    grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch1_we0;
wire   [31:0] grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch1_d0;
wire   [4:0] grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch2_address0;
wire    grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch2_ce0;
wire    grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch2_we0;
wire   [31:0] grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch2_d0;
wire   [4:0] grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch3_address0;
wire    grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch3_ce0;
wire    grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch3_we0;
wire   [31:0] grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch3_d0;
wire   [4:0] grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch4_address0;
wire    grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch4_ce0;
wire    grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch4_we0;
wire   [31:0] grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch4_d0;
wire   [10:0] grp_makeSuperPoint_alignedToLine8_fu_1038_GDarrayDecoded_address0;
wire    grp_makeSuperPoint_alignedToLine8_fu_1038_GDarrayDecoded_ce0;
wire   [10:0] grp_makeSuperPoint_alignedToLine8_fu_1038_GDarrayDecoded_address1;
wire    grp_makeSuperPoint_alignedToLine8_fu_1038_GDarrayDecoded_ce1;
wire   [7:0] grp_makeSuperPoint_alignedToLine8_fu_1038_temp_V_address0;
wire    grp_makeSuperPoint_alignedToLine8_fu_1038_temp_V_ce0;
wire    grp_makeSuperPoint_alignedToLine8_fu_1038_temp_V_we0;
wire   [31:0] grp_makeSuperPoint_alignedToLine8_fu_1038_temp_V_d0;
wire   [7:0] grp_makeSuperPoint_alignedToLine8_fu_1038_temp_V_address1;
wire    grp_makeSuperPoint_alignedToLine8_fu_1038_temp_V_ce1;
wire    grp_makeSuperPoint_alignedToLine8_fu_1038_temp_V_we1;
wire   [31:0] grp_makeSuperPoint_alignedToLine8_fu_1038_temp_V_d1;
wire   [31:0] grp_makeSuperPoint_alignedToLine8_fu_1038_ap_return_0;
wire   [7:0] grp_makeSuperPoint_alignedToLine8_fu_1038_ap_return_1;
wire    grp_wedgePatch_init_fu_1065_ap_start;
wire    grp_wedgePatch_init_fu_1065_ap_done;
wire    grp_wedgePatch_init_fu_1065_ap_idle;
wire    grp_wedgePatch_init_fu_1065_ap_ready;
wire   [4:0] grp_wedgePatch_init_fu_1065_wp_superpoints_address0;
wire    grp_wedgePatch_init_fu_1065_wp_superpoints_ce0;
wire    grp_wedgePatch_init_fu_1065_wp_superpoints_we0;
wire   [31:0] grp_wedgePatch_init_fu_1065_wp_superpoints_d0;
wire   [4:0] grp_wedgePatch_init_fu_1065_wp_superpoints_address1;
wire    grp_wedgePatch_init_fu_1065_wp_superpoints_ce1;
wire   [4:0] grp_wedgePatch_init_fu_1065_wp_superpoints1_address0;
wire    grp_wedgePatch_init_fu_1065_wp_superpoints1_ce0;
wire    grp_wedgePatch_init_fu_1065_wp_superpoints1_we0;
wire   [31:0] grp_wedgePatch_init_fu_1065_wp_superpoints1_d0;
wire   [4:0] grp_wedgePatch_init_fu_1065_wp_superpoints1_address1;
wire    grp_wedgePatch_init_fu_1065_wp_superpoints1_ce1;
wire   [4:0] grp_wedgePatch_init_fu_1065_wp_superpoints2_address0;
wire    grp_wedgePatch_init_fu_1065_wp_superpoints2_ce0;
wire    grp_wedgePatch_init_fu_1065_wp_superpoints2_we0;
wire   [31:0] grp_wedgePatch_init_fu_1065_wp_superpoints2_d0;
wire   [4:0] grp_wedgePatch_init_fu_1065_wp_superpoints2_address1;
wire    grp_wedgePatch_init_fu_1065_wp_superpoints2_ce1;
wire   [4:0] grp_wedgePatch_init_fu_1065_wp_superpoints3_address0;
wire    grp_wedgePatch_init_fu_1065_wp_superpoints3_ce0;
wire    grp_wedgePatch_init_fu_1065_wp_superpoints3_we0;
wire   [31:0] grp_wedgePatch_init_fu_1065_wp_superpoints3_d0;
wire   [4:0] grp_wedgePatch_init_fu_1065_wp_superpoints3_address1;
wire    grp_wedgePatch_init_fu_1065_wp_superpoints3_ce1;
wire   [4:0] grp_wedgePatch_init_fu_1065_wp_superpoints4_address0;
wire    grp_wedgePatch_init_fu_1065_wp_superpoints4_ce0;
wire    grp_wedgePatch_init_fu_1065_wp_superpoints4_we0;
wire   [31:0] grp_wedgePatch_init_fu_1065_wp_superpoints4_d0;
wire   [4:0] grp_wedgePatch_init_fu_1065_wp_superpoints4_address1;
wire    grp_wedgePatch_init_fu_1065_wp_superpoints4_ce1;
wire   [4:0] grp_wedgePatch_init_fu_1065_wp_parameters_address0;
wire    grp_wedgePatch_init_fu_1065_wp_parameters_ce0;
wire    grp_wedgePatch_init_fu_1065_wp_parameters_we0;
wire   [31:0] grp_wedgePatch_init_fu_1065_wp_parameters_d0;
wire   [4:0] grp_wedgePatch_init_fu_1065_wp_parameters_address1;
wire    grp_wedgePatch_init_fu_1065_wp_parameters_ce1;
wire    grp_wedgePatch_init_fu_1065_wp_parameters_we1;
wire   [31:0] grp_wedgePatch_init_fu_1065_wp_parameters_d1;
wire   [4:0] grp_wedgePatch_init_fu_1065_wp_parameters5_address0;
wire    grp_wedgePatch_init_fu_1065_wp_parameters5_ce0;
wire    grp_wedgePatch_init_fu_1065_wp_parameters5_we0;
wire   [0:0] grp_wedgePatch_init_fu_1065_wp_parameters5_d0;
wire   [4:0] grp_wedgePatch_init_fu_1065_wp_parameters5_address1;
wire    grp_wedgePatch_init_fu_1065_wp_parameters5_ce1;
wire    grp_wedgePatch_init_fu_1065_wp_parameters5_we1;
wire   [0:0] grp_wedgePatch_init_fu_1065_wp_parameters5_d1;
wire   [4:0] grp_wedgePatch_init_fu_1065_wp_parameters6_address0;
wire    grp_wedgePatch_init_fu_1065_wp_parameters6_ce0;
wire    grp_wedgePatch_init_fu_1065_wp_parameters6_we0;
wire   [31:0] grp_wedgePatch_init_fu_1065_wp_parameters6_d0;
wire   [4:0] grp_wedgePatch_init_fu_1065_wp_parameters6_address1;
wire    grp_wedgePatch_init_fu_1065_wp_parameters6_ce1;
wire    grp_wedgePatch_init_fu_1065_wp_parameters6_we1;
wire   [31:0] grp_wedgePatch_init_fu_1065_wp_parameters6_d1;
wire   [4:0] grp_wedgePatch_init_fu_1065_wp_parameters7_address0;
wire    grp_wedgePatch_init_fu_1065_wp_parameters7_ce0;
wire    grp_wedgePatch_init_fu_1065_wp_parameters7_we0;
wire   [0:0] grp_wedgePatch_init_fu_1065_wp_parameters7_d0;
wire   [4:0] grp_wedgePatch_init_fu_1065_wp_parameters7_address1;
wire    grp_wedgePatch_init_fu_1065_wp_parameters7_ce1;
wire    grp_wedgePatch_init_fu_1065_wp_parameters7_we1;
wire   [0:0] grp_wedgePatch_init_fu_1065_wp_parameters7_d1;
wire   [4:0] grp_wedgePatch_init_fu_1065_wp_parameters8_address0;
wire    grp_wedgePatch_init_fu_1065_wp_parameters8_ce0;
wire    grp_wedgePatch_init_fu_1065_wp_parameters8_we0;
wire   [31:0] grp_wedgePatch_init_fu_1065_wp_parameters8_d0;
wire   [4:0] grp_wedgePatch_init_fu_1065_wp_parameters8_address1;
wire    grp_wedgePatch_init_fu_1065_wp_parameters8_ce1;
wire    grp_wedgePatch_init_fu_1065_wp_parameters8_we1;
wire   [31:0] grp_wedgePatch_init_fu_1065_wp_parameters8_d1;
wire   [4:0] grp_wedgePatch_init_fu_1065_superpointsI_address0;
wire    grp_wedgePatch_init_fu_1065_superpointsI_ce0;
wire   [4:0] grp_wedgePatch_init_fu_1065_superpointsI9_address0;
wire    grp_wedgePatch_init_fu_1065_superpointsI9_ce0;
wire   [4:0] grp_wedgePatch_init_fu_1065_superpointsI10_address0;
wire    grp_wedgePatch_init_fu_1065_superpointsI10_ce0;
wire   [4:0] grp_wedgePatch_init_fu_1065_superpointsI11_address0;
wire    grp_wedgePatch_init_fu_1065_superpointsI11_ce0;
wire   [4:0] grp_wedgePatch_init_fu_1065_superpointsI12_address0;
wire    grp_wedgePatch_init_fu_1065_superpointsI12_ce0;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1089_ap_start;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1089_ap_done;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1089_ap_idle;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1089_ap_ready;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_1089_ap_ce;
reg   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_1089_z_i;
reg   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_1089_z_j;
wire   [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_1089_i;
wire   [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_1089_j;
wire   [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_1089_k;
wire    grp_delete_patch_fu_1104_ap_start;
wire    grp_delete_patch_fu_1104_ap_idle;
wire   [7:0] grp_delete_patch_fu_1104_n_patches;
wire    grp_delete_patch_fu_1104_n_patches_ap_vld;
wire   [11:0] grp_delete_patch_fu_1104_patches_superpoints_address0;
wire    grp_delete_patch_fu_1104_patches_superpoints_ce0;
wire    grp_delete_patch_fu_1104_patches_superpoints_we0;
wire   [63:0] grp_delete_patch_fu_1104_patches_superpoints_d0;
reg   [8:0] grp_delete_patch_fu_1104_index;
wire   [11:0] grp_delete_patch_fu_1104_patches_parameters_V_address0;
wire    grp_delete_patch_fu_1104_patches_parameters_V_ce0;
wire    grp_delete_patch_fu_1104_patches_parameters_V_we0;
wire   [31:0] grp_delete_patch_fu_1104_patches_parameters_V_d0;
reg   [0:0] empty_86_reg_611;
reg   [0:0] empty_91_reg_623;
wire    ap_CS_fsm_state94;
reg   [0:0] empty_96_reg_638;
reg   [0:0] empty_101_reg_650;
wire    ap_CS_fsm_state256;
reg   [31:0] empty_103_reg_664;
wire    ap_CS_fsm_state506;
reg   [31:0] complementary_topR_jL_V_1_reg_674;
reg   [31:0] complementary_topL_jL_V_1_reg_684;
reg   [31:0] original_topR_jR_V_1_reg_694;
reg   [31:0] empty_102_reg_704;
reg   [31:0] complementary_topR_jR_V_reg_714;
reg   [31:0] original_topL_jL_V_reg_724;
reg   [31:0] original_topR_jL_V_1_reg_734;
reg   [31:0] complementary_topL_jR_V_reg_744;
reg   [31:0] original_topL_jR_V_1_reg_754;
reg   [31:0] newZtop_V_reg_764;
reg   [63:0] shifted_Align_2_reg_790;
reg   [7:0] ap_phi_mux_indvar_flatten13_phi_fu_804_p4;
wire    ap_block_pp0_stage0;
reg   [2:0] ap_phi_mux_a_phi_fu_815_p4;
reg   [6:0] ap_phi_mux_indvar_flatten_phi_fu_827_p4;
reg   [4:0] ap_phi_mux_b_phi_fu_839_p4;
wire    ap_block_pp0_stage1;
reg   [1:0] ap_phi_mux_c_phi_fu_851_p4;
reg   [7:0] init_patch_size_0_reg_859;
reg   [2:0] i_reg_871;
reg   [7:0] ap_phi_mux_indvar_flatten35_phi_fu_887_p4;
wire    ap_block_pp1_stage0;
reg   [2:0] ap_phi_mux_b_1_phi_fu_898_p4;
reg   [6:0] ap_phi_mux_indvar_flatten21_phi_fu_910_p4;
reg   [4:0] ap_phi_mux_c_1_phi_fu_922_p4;
wire    ap_block_pp1_stage1;
reg   [1:0] ap_phi_mux_d_phi_fu_934_p4;
reg   [6:0] ap_phi_mux_indvar_flatten57_phi_fu_946_p4;
wire    ap_block_pp2_stage0;
reg   [2:0] ap_phi_mux_b_2_phi_fu_957_p4;
reg   [5:0] ap_phi_mux_indvar_flatten43_phi_fu_969_p4;
reg   [2:0] ap_phi_mux_c_2_phi_fu_981_p4;
wire    ap_block_pp2_stage1;
reg   [2:0] ap_phi_mux_d_1_phi_fu_993_p4;
wire    ap_block_pp2_stage2;
reg    grp_getShadows_fu_1001_ap_start_reg;
reg    grp_add_patch6_fu_1017_ap_start_reg;
wire    ap_CS_fsm_state428;
wire    ap_CS_fsm_state429;
reg    grp_makeSuperPoint_alignedToLine8_fu_1038_ap_start_reg;
wire    ap_CS_fsm_state412;
reg    grp_wedgePatch_init_fu_1065_ap_start_reg;
wire    ap_CS_fsm_state426;
reg    grp_straightLineProjectorFromLayerIJtoK_fu_1089_ap_start_reg;
reg   [566:0] ap_NS_fsm;
wire    ap_NS_fsm_state13;
wire    ap_NS_fsm_state94;
wire    ap_NS_fsm_state175;
wire    ap_NS_fsm_state256;
wire    ap_NS_fsm_state330;
wire    ap_NS_fsm_state331;
wire    ap_NS_fsm_state441;
wire    ap_NS_fsm_state507;
wire    ap_CS_fsm_state175;
wire   [31:0] trunc_ln164_fu_2517_p1;
wire    ap_CS_fsm_state507;
reg    grp_delete_patch_fu_1104_ap_start_reg;
wire    ap_CS_fsm_state403;
wire    ap_CS_fsm_state574;
wire   [63:0] zext_ln723_1_fu_1244_p1;
wire   [63:0] zext_ln732_1_fu_1297_p1;
wire   [63:0] zext_ln737_fu_1302_p1;
wire   [63:0] zext_ln745_fu_1307_p1;
wire   [63:0] zext_ln746_fu_1312_p1;
wire   [63:0] zext_ln727_fu_1317_p1;
wire   [63:0] zext_ln747_fu_1322_p1;
wire   [63:0] zext_ln748_fu_1327_p1;
wire   [63:0] zext_ln1122_1_fu_1962_p1;
wire   [63:0] zext_ln1147_1_fu_2133_p1;
wire   [63:0] zext_ln1159_2_fu_2271_p1;
wire   [63:0] zext_ln821_fu_2343_p1;
wire   [63:0] zext_ln822_fu_2347_p1;
wire   [63:0] zext_ln823_fu_2351_p1;
wire   [63:0] zext_ln824_fu_2355_p1;
reg   [31:0] horizontalOverlapBottom_V_fu_264;
wire   [31:0] horizontalOverlapBottom_V_1_fu_2502_p3;
reg   [31:0] horizontalOverlapTop_V_fu_268;
wire   [31:0] horizontalOverlapTop_V_1_fu_2497_p3;
reg   [31:0] original_ppl_fu_272;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state88;
wire    ap_CS_fsm_state89;
wire    ap_CS_fsm_state169;
wire    ap_CS_fsm_state170;
wire    ap_CS_fsm_state250;
wire    ap_CS_fsm_state251;
wire    ap_CS_fsm_state389;
wire    ap_CS_fsm_state390;
wire    ap_CS_fsm_state391;
wire    ap_CS_fsm_state437;
reg   [63:0] grp_fu_1116_p0;
wire   [63:0] grp_fu_1116_p1;
wire   [31:0] grp_fu_1121_p0;
wire    ap_CS_fsm_state76;
wire    ap_CS_fsm_state157;
wire    ap_CS_fsm_state238;
wire    ap_CS_fsm_state319;
wire   [10:0] tmp_27_fu_1190_p3;
wire   [11:0] grp_fu_1201_p0;
wire   [11:0] grp_fu_1201_p1;
wire   [10:0] tmp_30_fu_1218_p3;
wire   [11:0] grp_fu_1229_p0;
wire   [11:0] grp_fu_1229_p1;
wire  signed [31:0] icmp_ln886_fu_1248_p1;
wire  signed [31:0] icmp_ln878_fu_1253_p1;
wire   [11:0] grp_fu_1258_p2;
wire   [11:0] grp_fu_1263_p2;
wire   [11:0] grp_fu_1268_p2;
wire   [11:0] grp_fu_1273_p2;
wire   [11:0] grp_fu_1278_p2;
wire   [11:0] grp_fu_1283_p2;
wire   [11:0] grp_fu_1288_p2;
wire   [63:0] data_V_fu_1332_p1;
wire   [62:0] p_Result_s_fu_1336_p1;
wire   [63:0] zext_ln368_fu_1340_p1;
wire   [10:0] tmp_s_fu_1349_p4;
wire   [51:0] empty_fu_1359_p1;
wire   [0:0] empty_83_fu_1375_p2;
wire   [0:0] empty_84_fu_1379_p2;
wire  signed [31:0] icmp_ln886_3_fu_1390_p1;
wire  signed [31:0] sext_ln215_13_fu_1397_p0;
wire  signed [32:0] ret_fu_1400_p0;
wire  signed [32:0] ret_fu_1400_p1;
wire   [63:0] data_V_7_fu_1411_p1;
wire   [62:0] p_Result_4_fu_1415_p1;
wire   [63:0] zext_ln368_3_fu_1419_p1;
wire   [10:0] tmp_23_fu_1428_p4;
wire   [51:0] empty_87_fu_1438_p1;
wire   [0:0] empty_88_fu_1454_p2;
wire   [0:0] empty_89_fu_1458_p2;
wire  signed [31:0] sext_ln215_15_fu_1472_p0;
wire  signed [32:0] ret_21_fu_1475_p0;
wire  signed [32:0] ret_21_fu_1475_p1;
wire  signed [31:0] icmp_ln878_4_fu_1486_p1;
wire   [63:0] data_V_8_fu_1494_p1;
wire   [62:0] p_Result_5_fu_1498_p1;
wire   [63:0] zext_ln368_4_fu_1502_p1;
wire   [10:0] tmp_26_fu_1511_p4;
wire   [51:0] empty_92_fu_1521_p1;
wire   [0:0] empty_93_fu_1537_p2;
wire   [0:0] empty_94_fu_1541_p2;
wire  signed [31:0] icmp_ln886_5_fu_1552_p1;
wire  signed [31:0] sext_ln215_17_fu_1559_p0;
wire  signed [32:0] ret_23_fu_1562_p0;
wire  signed [32:0] ret_23_fu_1562_p1;
wire   [63:0] data_V_9_fu_1573_p1;
wire   [62:0] p_Result_6_fu_1577_p1;
wire   [63:0] zext_ln368_5_fu_1581_p1;
wire   [10:0] tmp_29_fu_1590_p4;
wire   [51:0] empty_97_fu_1600_p1;
wire   [0:0] empty_98_fu_1616_p2;
wire   [0:0] empty_99_fu_1620_p2;
wire  signed [31:0] shifted_Align_fu_1679_p1;
wire  signed [31:0] shifted_Align_fu_1679_p2;
wire  signed [31:0] shifted_Align_1_fu_1689_p1;
wire   [31:0] shifted_Align_fu_1679_p3;
wire   [31:0] shifted_Align_1_fu_1689_p3;
wire   [0:0] shiftOriginal_fu_1684_p2;
wire   [0:0] cmp_i_i297_not_fu_1704_p2;
wire   [30:0] tmp_55_fu_1720_p4;
wire   [30:0] tmp_56_fu_1748_p4;
wire   [0:0] or_ln791_3_fu_1768_p2;
wire   [0:0] xor_ln791_fu_1772_p2;
wire   [0:0] and_ln791_fu_1778_p2;
wire   [8:0] add_ln811_fu_1825_p0;
wire   [0:0] icmp_ln1120_fu_1867_p2;
wire   [0:0] xor_ln1116_fu_1862_p2;
wire    ap_block_pp0_stage2;
wire   [0:0] or_ln1118_fu_1896_p2;
wire   [3:0] trunc_ln1122_1_fu_1917_p1;
wire   [3:0] trunc_ln1122_fu_1914_p1;
wire   [3:0] select_ln1116_2_fu_1921_p3;
wire   [3:0] select_ln1118_1_fu_1928_p3;
wire   [4:0] add_ln1122_fu_1951_p0;
wire   [4:0] add_ln1122_fu_1951_p1;
wire   [0:0] icmp_ln1145_fu_2038_p2;
wire   [0:0] xor_ln1141_fu_2033_p2;
wire    ap_block_pp1_stage2;
wire   [0:0] or_ln1143_fu_2067_p2;
wire   [3:0] trunc_ln1147_1_fu_2088_p1;
wire   [3:0] trunc_ln1147_fu_2085_p1;
wire   [3:0] select_ln1141_2_fu_2092_p3;
wire   [3:0] select_ln1143_1_fu_2099_p3;
wire   [4:0] add_ln1147_fu_2122_p0;
wire   [4:0] add_ln1147_fu_2122_p1;
wire   [0:0] icmp_ln1157_fu_2189_p2;
wire   [0:0] xor_ln1153_fu_2184_p2;
wire   [0:0] or_ln1155_fu_2212_p2;
wire   [3:0] tmp_57_fu_2240_p3;
wire   [4:0] p_shl5_cast_fu_2233_p3;
wire   [4:0] zext_ln1159_fu_2247_p1;
wire   [4:0] sub_ln1159_fu_2251_p2;
wire   [4:0] zext_ln1159_1_fu_2257_p1;
wire   [8:0] add_ln817_fu_2287_p0;
wire   [4:0] add_ln817_1_fu_2297_p0;
wire   [11:0] grp_fu_2317_p0;
wire   [11:0] grp_fu_2317_p1;
wire    ap_CS_fsm_state433;
wire  signed [32:0] ret_25_fu_2444_p0;
wire  signed [32:0] ret_26_fu_2452_p1;
wire  signed [32:0] ret_27_fu_2468_p0;
wire  signed [32:0] ret_28_fu_2476_p1;
wire    grp_fu_1116_ce;
wire   [4:0] grp_fu_1116_opcode;
wire    grp_fu_1121_ce;
reg    grp_fu_1201_ce;
reg    grp_fu_1229_ce;
reg    grp_fu_1235_ce;
reg    grp_fu_2317_ce;
reg    ap_predicate_op1657_call_state574;
reg    ap_block_state574_on_subcall_done;
wire    ap_block_pp2_stage1_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_condition_6662;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 567'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 grp_getShadows_fu_1001_ap_start_reg = 1'b0;
#0 grp_add_patch6_fu_1017_ap_start_reg = 1'b0;
#0 grp_makeSuperPoint_alignedToLine8_fu_1038_ap_start_reg = 1'b0;
#0 grp_wedgePatch_init_fu_1065_ap_start_reg = 1'b0;
#0 grp_straightLineProjectorFromLayerIJtoK_fu_1089_ap_start_reg = 1'b0;
#0 grp_delete_patch_fu_1104_ap_start_reg = 1'b0;
end

makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_init_patch_V_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
init_patch_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(init_patch_V_0_address0),
    .ce0(init_patch_V_0_ce0),
    .we0(init_patch_V_0_we0),
    .d0(init_patch_V_0_d0),
    .q0(init_patch_V_0_q0)
);

makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_init_patch_V_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
init_patch_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(init_patch_V_1_address0),
    .ce0(init_patch_V_1_ce0),
    .we0(init_patch_V_1_we0),
    .d0(init_patch_V_1_d0),
    .q0(init_patch_V_1_q0)
);

makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_init_patch_V_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
init_patch_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(init_patch_V_2_address0),
    .ce0(init_patch_V_2_ce0),
    .we0(init_patch_V_2_we0),
    .d0(init_patch_V_2_d0),
    .q0(init_patch_V_2_q0)
);

makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_init_patch_V_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
init_patch_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(init_patch_V_3_address0),
    .ce0(init_patch_V_3_ce0),
    .we0(init_patch_V_3_we0),
    .d0(init_patch_V_3_d0),
    .q0(init_patch_V_3_q0)
);

makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_init_patch_V_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
init_patch_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(init_patch_V_4_address0),
    .ce0(init_patch_V_4_ce0),
    .we0(init_patch_V_4_we0),
    .d0(init_patch_V_4_d0),
    .q0(init_patch_V_4_q0)
);

makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_superpoints_0_V #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
NPpatches_superpoints_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(NPpatches_superpoints_0_V_address0),
    .ce0(NPpatches_superpoints_0_V_ce0),
    .we0(NPpatches_superpoints_0_V_we0),
    .d0(NPpatches_superpoints_0_V_d0),
    .q0(NPpatches_superpoints_0_V_q0),
    .address1(NPpatches_superpoints_0_V_address1),
    .ce1(NPpatches_superpoints_0_V_ce1),
    .q1(NPpatches_superpoints_0_V_q1)
);

makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_superpoints_0_V #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
NPpatches_superpoints_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(NPpatches_superpoints_1_V_address0),
    .ce0(NPpatches_superpoints_1_V_ce0),
    .we0(NPpatches_superpoints_1_V_we0),
    .d0(NPpatches_superpoints_1_V_d0),
    .q0(NPpatches_superpoints_1_V_q0),
    .address1(NPpatches_superpoints_1_V_address1),
    .ce1(NPpatches_superpoints_1_V_ce1),
    .q1(NPpatches_superpoints_1_V_q1)
);

makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_superpoints_0_V #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
NPpatches_superpoints_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(NPpatches_superpoints_2_V_address0),
    .ce0(NPpatches_superpoints_2_V_ce0),
    .we0(NPpatches_superpoints_2_V_we0),
    .d0(NPpatches_superpoints_2_V_d0),
    .q0(NPpatches_superpoints_2_V_q0),
    .address1(NPpatches_superpoints_2_V_address1),
    .ce1(NPpatches_superpoints_2_V_ce1),
    .q1(NPpatches_superpoints_2_V_q1)
);

makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_superpoints_0_V #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
NPpatches_superpoints_3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(NPpatches_superpoints_3_V_address0),
    .ce0(NPpatches_superpoints_3_V_ce0),
    .we0(NPpatches_superpoints_3_V_we0),
    .d0(NPpatches_superpoints_3_V_d0),
    .q0(NPpatches_superpoints_3_V_q0),
    .address1(NPpatches_superpoints_3_V_address1),
    .ce1(NPpatches_superpoints_3_V_ce1),
    .q1(NPpatches_superpoints_3_V_q1)
);

makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_superpoints_0_V #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
NPpatches_superpoints_4_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(NPpatches_superpoints_4_V_address0),
    .ce0(NPpatches_superpoints_4_V_ce0),
    .we0(NPpatches_superpoints_4_V_we0),
    .d0(NPpatches_superpoints_4_V_d0),
    .q0(NPpatches_superpoints_4_V_q0),
    .address1(NPpatches_superpoints_4_V_address1),
    .ce1(NPpatches_superpoints_4_V_ce1),
    .q1(NPpatches_superpoints_4_V_q1)
);

makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_parameters_V_0 #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
NPpatches_parameters_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(NPpatches_parameters_V_0_address0),
    .ce0(NPpatches_parameters_V_0_ce0),
    .we0(NPpatches_parameters_V_0_we0),
    .d0(NPpatches_parameters_V_0_d0),
    .q0(NPpatches_parameters_V_0_q0),
    .address1(grp_wedgePatch_init_fu_1065_wp_parameters_address1),
    .ce1(NPpatches_parameters_V_0_ce1),
    .we1(NPpatches_parameters_V_0_we1),
    .d1(grp_wedgePatch_init_fu_1065_wp_parameters_d1),
    .q1(NPpatches_parameters_V_0_q1)
);

makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_parameters_V_1 #(
    .DataWidth( 1 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
NPpatches_parameters_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(NPpatches_parameters_V_1_address0),
    .ce0(NPpatches_parameters_V_1_ce0),
    .we0(NPpatches_parameters_V_1_we0),
    .d0(NPpatches_parameters_V_1_d0),
    .q0(NPpatches_parameters_V_1_q0),
    .address1(grp_wedgePatch_init_fu_1065_wp_parameters5_address1),
    .ce1(NPpatches_parameters_V_1_ce1),
    .we1(NPpatches_parameters_V_1_we1),
    .d1(grp_wedgePatch_init_fu_1065_wp_parameters5_d1)
);

makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_parameters_V_2 #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
NPpatches_parameters_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(NPpatches_parameters_V_2_address0),
    .ce0(NPpatches_parameters_V_2_ce0),
    .we0(NPpatches_parameters_V_2_we0),
    .d0(NPpatches_parameters_V_2_d0),
    .q0(NPpatches_parameters_V_2_q0),
    .address1(grp_wedgePatch_init_fu_1065_wp_parameters6_address1),
    .ce1(NPpatches_parameters_V_2_ce1),
    .we1(NPpatches_parameters_V_2_we1),
    .d1(grp_wedgePatch_init_fu_1065_wp_parameters6_d1)
);

makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_parameters_V_1 #(
    .DataWidth( 1 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
NPpatches_parameters_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(NPpatches_parameters_V_3_address0),
    .ce0(NPpatches_parameters_V_3_ce0),
    .we0(NPpatches_parameters_V_3_we0),
    .d0(NPpatches_parameters_V_3_d0),
    .q0(NPpatches_parameters_V_3_q0),
    .address1(grp_wedgePatch_init_fu_1065_wp_parameters7_address1),
    .ce1(NPpatches_parameters_V_3_ce1),
    .we1(NPpatches_parameters_V_3_we1),
    .d1(grp_wedgePatch_init_fu_1065_wp_parameters7_d1)
);

makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_parameters_V_0 #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
NPpatches_parameters_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(NPpatches_parameters_V_4_address0),
    .ce0(NPpatches_parameters_V_4_ce0),
    .we0(NPpatches_parameters_V_4_we0),
    .d0(NPpatches_parameters_V_4_d0),
    .q0(NPpatches_parameters_V_4_q0),
    .address1(grp_wedgePatch_init_fu_1065_wp_parameters8_address1),
    .ce1(NPpatches_parameters_V_4_ce1),
    .we1(NPpatches_parameters_V_4_we1),
    .d1(grp_wedgePatch_init_fu_1065_wp_parameters8_d1),
    .q1(NPpatches_parameters_V_4_q1)
);

makePatches_ShadowQuilt_fromEdges_getShadows grp_getShadows_fu_1001(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_getShadows_fu_1001_ap_start),
    .ap_done(grp_getShadows_fu_1001_ap_done),
    .ap_idle(grp_getShadows_fu_1001_ap_idle),
    .ap_ready(grp_getShadows_fu_1001_ap_ready),
    .patches_superpoints_address0(grp_getShadows_fu_1001_patches_superpoints_address0),
    .patches_superpoints_ce0(grp_getShadows_fu_1001_patches_superpoints_ce0),
    .patches_superpoints_q0(patches_superpoints_q0),
    .wp_superpoints(grp_getShadows_fu_1001_wp_superpoints),
    .wp_parameters_address0(grp_getShadows_fu_1001_wp_parameters_address0),
    .wp_parameters_ce0(grp_getShadows_fu_1001_wp_parameters_ce0),
    .wp_parameters_we0(grp_getShadows_fu_1001_wp_parameters_we0),
    .wp_parameters_d0(grp_getShadows_fu_1001_wp_parameters_d0),
    .wp_parameters_q0(patches_parameters_q0),
    .wp_parameters_address1(grp_getShadows_fu_1001_wp_parameters_address1),
    .wp_parameters_ce1(grp_getShadows_fu_1001_wp_parameters_ce1),
    .wp_parameters_we1(grp_getShadows_fu_1001_wp_parameters_we1),
    .wp_parameters_d1(grp_getShadows_fu_1001_wp_parameters_d1),
    .wp_parameters_q1(patches_parameters_q1),
    .wp_parameters_offset(grp_getShadows_fu_1001_wp_parameters_offset),
    .zTopMin(z_top_min),
    .zTopMax(z_top_max)
);

makePatches_ShadowQuilt_fromEdges_add_patch6 grp_add_patch6_fu_1017(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_add_patch6_fu_1017_ap_start),
    .ap_done(grp_add_patch6_fu_1017_ap_done),
    .ap_idle(grp_add_patch6_fu_1017_ap_idle),
    .ap_ready(grp_add_patch6_fu_1017_ap_ready),
    .n_patches(grp_add_patch6_fu_1017_n_patches),
    .n_patches_ap_vld(grp_add_patch6_fu_1017_n_patches_ap_vld),
    .n_patches_read(reg_1143),
    .patches_superpoints_address0(grp_add_patch6_fu_1017_patches_superpoints_address0),
    .patches_superpoints_ce0(grp_add_patch6_fu_1017_patches_superpoints_ce0),
    .patches_superpoints_we0(grp_add_patch6_fu_1017_patches_superpoints_we0),
    .patches_superpoints_d0(grp_add_patch6_fu_1017_patches_superpoints_d0),
    .patches_superpoints_q0(patches_superpoints_q0),
    .wp_superpoints_address0(grp_add_patch6_fu_1017_wp_superpoints_address0),
    .wp_superpoints_ce0(grp_add_patch6_fu_1017_wp_superpoints_ce0),
    .wp_superpoints_q0(NPpatches_superpoints_0_V_q0),
    .wp_superpoints_address1(grp_add_patch6_fu_1017_wp_superpoints_address1),
    .wp_superpoints_ce1(grp_add_patch6_fu_1017_wp_superpoints_ce1),
    .wp_superpoints_q1(NPpatches_superpoints_0_V_q1),
    .wp_superpoints1_address0(grp_add_patch6_fu_1017_wp_superpoints1_address0),
    .wp_superpoints1_ce0(grp_add_patch6_fu_1017_wp_superpoints1_ce0),
    .wp_superpoints1_q0(NPpatches_superpoints_1_V_q0),
    .wp_superpoints1_address1(grp_add_patch6_fu_1017_wp_superpoints1_address1),
    .wp_superpoints1_ce1(grp_add_patch6_fu_1017_wp_superpoints1_ce1),
    .wp_superpoints1_q1(NPpatches_superpoints_1_V_q1),
    .wp_superpoints2_address0(grp_add_patch6_fu_1017_wp_superpoints2_address0),
    .wp_superpoints2_ce0(grp_add_patch6_fu_1017_wp_superpoints2_ce0),
    .wp_superpoints2_q0(NPpatches_superpoints_2_V_q0),
    .wp_superpoints2_address1(grp_add_patch6_fu_1017_wp_superpoints2_address1),
    .wp_superpoints2_ce1(grp_add_patch6_fu_1017_wp_superpoints2_ce1),
    .wp_superpoints2_q1(NPpatches_superpoints_2_V_q1),
    .wp_superpoints3_address0(grp_add_patch6_fu_1017_wp_superpoints3_address0),
    .wp_superpoints3_ce0(grp_add_patch6_fu_1017_wp_superpoints3_ce0),
    .wp_superpoints3_q0(NPpatches_superpoints_3_V_q0),
    .wp_superpoints3_address1(grp_add_patch6_fu_1017_wp_superpoints3_address1),
    .wp_superpoints3_ce1(grp_add_patch6_fu_1017_wp_superpoints3_ce1),
    .wp_superpoints3_q1(NPpatches_superpoints_3_V_q1),
    .wp_superpoints4_address0(grp_add_patch6_fu_1017_wp_superpoints4_address0),
    .wp_superpoints4_ce0(grp_add_patch6_fu_1017_wp_superpoints4_ce0),
    .wp_superpoints4_q0(NPpatches_superpoints_4_V_q0),
    .wp_superpoints4_address1(grp_add_patch6_fu_1017_wp_superpoints4_address1),
    .wp_superpoints4_ce1(grp_add_patch6_fu_1017_wp_superpoints4_ce1),
    .wp_superpoints4_q1(NPpatches_superpoints_4_V_q1),
    .wp_parameters_address0(grp_add_patch6_fu_1017_wp_parameters_address0),
    .wp_parameters_ce0(grp_add_patch6_fu_1017_wp_parameters_ce0),
    .wp_parameters_q0(NPpatches_parameters_V_0_q0),
    .wp_parameters5_address0(grp_add_patch6_fu_1017_wp_parameters5_address0),
    .wp_parameters5_ce0(grp_add_patch6_fu_1017_wp_parameters5_ce0),
    .wp_parameters5_q0(NPpatches_parameters_V_1_q0),
    .wp_parameters6_address0(grp_add_patch6_fu_1017_wp_parameters6_address0),
    .wp_parameters6_ce0(grp_add_patch6_fu_1017_wp_parameters6_ce0),
    .wp_parameters6_q0(NPpatches_parameters_V_2_q0),
    .wp_parameters7_address0(grp_add_patch6_fu_1017_wp_parameters7_address0),
    .wp_parameters7_ce0(grp_add_patch6_fu_1017_wp_parameters7_ce0),
    .wp_parameters7_q0(NPpatches_parameters_V_3_q0),
    .wp_parameters8_address0(grp_add_patch6_fu_1017_wp_parameters8_address0),
    .wp_parameters8_ce0(grp_add_patch6_fu_1017_wp_parameters8_ce0),
    .wp_parameters8_q0(NPpatches_parameters_V_4_q0),
    .patches_parameters_address0(grp_add_patch6_fu_1017_patches_parameters_address0),
    .patches_parameters_ce0(grp_add_patch6_fu_1017_patches_parameters_ce0),
    .patches_parameters_we0(grp_add_patch6_fu_1017_patches_parameters_we0),
    .patches_parameters_d0(grp_add_patch6_fu_1017_patches_parameters_d0),
    .patches_parameters_q0(patches_parameters_q0)
);

makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine8 grp_makeSuperPoint_alignedToLine8_fu_1038(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_makeSuperPoint_alignedToLine8_fu_1038_ap_start),
    .ap_done(grp_makeSuperPoint_alignedToLine8_fu_1038_ap_done),
    .ap_idle(grp_makeSuperPoint_alignedToLine8_fu_1038_ap_idle),
    .ap_ready(grp_makeSuperPoint_alignedToLine8_fu_1038_ap_ready),
    .GDn_points_address0(grp_makeSuperPoint_alignedToLine8_fu_1038_GDn_points_address0),
    .GDn_points_ce0(grp_makeSuperPoint_alignedToLine8_fu_1038_GDn_points_ce0),
    .GDn_points_q0(GDn_points_q0),
    .i(i_reg_871),
    .z_top(newZtop_V_2_reg_3005),
    .apexZ0(apexZ0_V_reg_3167),
    .original_ppl(original_ppl_fu_272),
    .leftRight(leftRight_reg_3000),
    .init_patch_address0(grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch_address0),
    .init_patch_ce0(grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch_ce0),
    .init_patch_we0(grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch_we0),
    .init_patch_d0(grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch_d0),
    .init_patch1_address0(grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch1_address0),
    .init_patch1_ce0(grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch1_ce0),
    .init_patch1_we0(grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch1_we0),
    .init_patch1_d0(grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch1_d0),
    .init_patch2_address0(grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch2_address0),
    .init_patch2_ce0(grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch2_ce0),
    .init_patch2_we0(grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch2_we0),
    .init_patch2_d0(grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch2_d0),
    .init_patch3_address0(grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch3_address0),
    .init_patch3_ce0(grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch3_ce0),
    .init_patch3_we0(grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch3_we0),
    .init_patch3_d0(grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch3_d0),
    .init_patch4_address0(grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch4_address0),
    .init_patch4_ce0(grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch4_ce0),
    .init_patch4_we0(grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch4_we0),
    .init_patch4_d0(grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch4_d0),
    .p_read1(init_patch_size_0_reg_859),
    .GDarrayDecoded_address0(grp_makeSuperPoint_alignedToLine8_fu_1038_GDarrayDecoded_address0),
    .GDarrayDecoded_ce0(grp_makeSuperPoint_alignedToLine8_fu_1038_GDarrayDecoded_ce0),
    .GDarrayDecoded_q0(GDarrayDecoded_q0),
    .GDarrayDecoded_address1(grp_makeSuperPoint_alignedToLine8_fu_1038_GDarrayDecoded_address1),
    .GDarrayDecoded_ce1(grp_makeSuperPoint_alignedToLine8_fu_1038_GDarrayDecoded_ce1),
    .GDarrayDecoded_q1(GDarrayDecoded_q1),
    .temp_V_address0(grp_makeSuperPoint_alignedToLine8_fu_1038_temp_V_address0),
    .temp_V_ce0(grp_makeSuperPoint_alignedToLine8_fu_1038_temp_V_ce0),
    .temp_V_we0(grp_makeSuperPoint_alignedToLine8_fu_1038_temp_V_we0),
    .temp_V_d0(grp_makeSuperPoint_alignedToLine8_fu_1038_temp_V_d0),
    .temp_V_q0(temp_V_q0),
    .temp_V_address1(grp_makeSuperPoint_alignedToLine8_fu_1038_temp_V_address1),
    .temp_V_ce1(grp_makeSuperPoint_alignedToLine8_fu_1038_temp_V_ce1),
    .temp_V_we1(grp_makeSuperPoint_alignedToLine8_fu_1038_temp_V_we1),
    .temp_V_d1(grp_makeSuperPoint_alignedToLine8_fu_1038_temp_V_d1),
    .ap_return_0(grp_makeSuperPoint_alignedToLine8_fu_1038_ap_return_0),
    .ap_return_1(grp_makeSuperPoint_alignedToLine8_fu_1038_ap_return_1)
);

makePatches_ShadowQuilt_fromEdges_wedgePatch_init grp_wedgePatch_init_fu_1065(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_wedgePatch_init_fu_1065_ap_start),
    .ap_done(grp_wedgePatch_init_fu_1065_ap_done),
    .ap_idle(grp_wedgePatch_init_fu_1065_ap_idle),
    .ap_ready(grp_wedgePatch_init_fu_1065_ap_ready),
    .wp_superpoints_address0(grp_wedgePatch_init_fu_1065_wp_superpoints_address0),
    .wp_superpoints_ce0(grp_wedgePatch_init_fu_1065_wp_superpoints_ce0),
    .wp_superpoints_we0(grp_wedgePatch_init_fu_1065_wp_superpoints_we0),
    .wp_superpoints_d0(grp_wedgePatch_init_fu_1065_wp_superpoints_d0),
    .wp_superpoints_q0(NPpatches_superpoints_0_V_q0),
    .wp_superpoints_address1(grp_wedgePatch_init_fu_1065_wp_superpoints_address1),
    .wp_superpoints_ce1(grp_wedgePatch_init_fu_1065_wp_superpoints_ce1),
    .wp_superpoints_q1(NPpatches_superpoints_0_V_q1),
    .wp_superpoints1_address0(grp_wedgePatch_init_fu_1065_wp_superpoints1_address0),
    .wp_superpoints1_ce0(grp_wedgePatch_init_fu_1065_wp_superpoints1_ce0),
    .wp_superpoints1_we0(grp_wedgePatch_init_fu_1065_wp_superpoints1_we0),
    .wp_superpoints1_d0(grp_wedgePatch_init_fu_1065_wp_superpoints1_d0),
    .wp_superpoints1_q0(NPpatches_superpoints_1_V_q0),
    .wp_superpoints1_address1(grp_wedgePatch_init_fu_1065_wp_superpoints1_address1),
    .wp_superpoints1_ce1(grp_wedgePatch_init_fu_1065_wp_superpoints1_ce1),
    .wp_superpoints1_q1(NPpatches_superpoints_1_V_q1),
    .wp_superpoints2_address0(grp_wedgePatch_init_fu_1065_wp_superpoints2_address0),
    .wp_superpoints2_ce0(grp_wedgePatch_init_fu_1065_wp_superpoints2_ce0),
    .wp_superpoints2_we0(grp_wedgePatch_init_fu_1065_wp_superpoints2_we0),
    .wp_superpoints2_d0(grp_wedgePatch_init_fu_1065_wp_superpoints2_d0),
    .wp_superpoints2_q0(NPpatches_superpoints_2_V_q0),
    .wp_superpoints2_address1(grp_wedgePatch_init_fu_1065_wp_superpoints2_address1),
    .wp_superpoints2_ce1(grp_wedgePatch_init_fu_1065_wp_superpoints2_ce1),
    .wp_superpoints2_q1(NPpatches_superpoints_2_V_q1),
    .wp_superpoints3_address0(grp_wedgePatch_init_fu_1065_wp_superpoints3_address0),
    .wp_superpoints3_ce0(grp_wedgePatch_init_fu_1065_wp_superpoints3_ce0),
    .wp_superpoints3_we0(grp_wedgePatch_init_fu_1065_wp_superpoints3_we0),
    .wp_superpoints3_d0(grp_wedgePatch_init_fu_1065_wp_superpoints3_d0),
    .wp_superpoints3_q0(NPpatches_superpoints_3_V_q0),
    .wp_superpoints3_address1(grp_wedgePatch_init_fu_1065_wp_superpoints3_address1),
    .wp_superpoints3_ce1(grp_wedgePatch_init_fu_1065_wp_superpoints3_ce1),
    .wp_superpoints3_q1(NPpatches_superpoints_3_V_q1),
    .wp_superpoints4_address0(grp_wedgePatch_init_fu_1065_wp_superpoints4_address0),
    .wp_superpoints4_ce0(grp_wedgePatch_init_fu_1065_wp_superpoints4_ce0),
    .wp_superpoints4_we0(grp_wedgePatch_init_fu_1065_wp_superpoints4_we0),
    .wp_superpoints4_d0(grp_wedgePatch_init_fu_1065_wp_superpoints4_d0),
    .wp_superpoints4_q0(NPpatches_superpoints_4_V_q0),
    .wp_superpoints4_address1(grp_wedgePatch_init_fu_1065_wp_superpoints4_address1),
    .wp_superpoints4_ce1(grp_wedgePatch_init_fu_1065_wp_superpoints4_ce1),
    .wp_superpoints4_q1(NPpatches_superpoints_4_V_q1),
    .wp_parameters_address0(grp_wedgePatch_init_fu_1065_wp_parameters_address0),
    .wp_parameters_ce0(grp_wedgePatch_init_fu_1065_wp_parameters_ce0),
    .wp_parameters_we0(grp_wedgePatch_init_fu_1065_wp_parameters_we0),
    .wp_parameters_d0(grp_wedgePatch_init_fu_1065_wp_parameters_d0),
    .wp_parameters_q0(NPpatches_parameters_V_0_q0),
    .wp_parameters_address1(grp_wedgePatch_init_fu_1065_wp_parameters_address1),
    .wp_parameters_ce1(grp_wedgePatch_init_fu_1065_wp_parameters_ce1),
    .wp_parameters_we1(grp_wedgePatch_init_fu_1065_wp_parameters_we1),
    .wp_parameters_d1(grp_wedgePatch_init_fu_1065_wp_parameters_d1),
    .wp_parameters_q1(NPpatches_parameters_V_0_q1),
    .wp_parameters5_address0(grp_wedgePatch_init_fu_1065_wp_parameters5_address0),
    .wp_parameters5_ce0(grp_wedgePatch_init_fu_1065_wp_parameters5_ce0),
    .wp_parameters5_we0(grp_wedgePatch_init_fu_1065_wp_parameters5_we0),
    .wp_parameters5_d0(grp_wedgePatch_init_fu_1065_wp_parameters5_d0),
    .wp_parameters5_address1(grp_wedgePatch_init_fu_1065_wp_parameters5_address1),
    .wp_parameters5_ce1(grp_wedgePatch_init_fu_1065_wp_parameters5_ce1),
    .wp_parameters5_we1(grp_wedgePatch_init_fu_1065_wp_parameters5_we1),
    .wp_parameters5_d1(grp_wedgePatch_init_fu_1065_wp_parameters5_d1),
    .wp_parameters6_address0(grp_wedgePatch_init_fu_1065_wp_parameters6_address0),
    .wp_parameters6_ce0(grp_wedgePatch_init_fu_1065_wp_parameters6_ce0),
    .wp_parameters6_we0(grp_wedgePatch_init_fu_1065_wp_parameters6_we0),
    .wp_parameters6_d0(grp_wedgePatch_init_fu_1065_wp_parameters6_d0),
    .wp_parameters6_address1(grp_wedgePatch_init_fu_1065_wp_parameters6_address1),
    .wp_parameters6_ce1(grp_wedgePatch_init_fu_1065_wp_parameters6_ce1),
    .wp_parameters6_we1(grp_wedgePatch_init_fu_1065_wp_parameters6_we1),
    .wp_parameters6_d1(grp_wedgePatch_init_fu_1065_wp_parameters6_d1),
    .wp_parameters7_address0(grp_wedgePatch_init_fu_1065_wp_parameters7_address0),
    .wp_parameters7_ce0(grp_wedgePatch_init_fu_1065_wp_parameters7_ce0),
    .wp_parameters7_we0(grp_wedgePatch_init_fu_1065_wp_parameters7_we0),
    .wp_parameters7_d0(grp_wedgePatch_init_fu_1065_wp_parameters7_d0),
    .wp_parameters7_address1(grp_wedgePatch_init_fu_1065_wp_parameters7_address1),
    .wp_parameters7_ce1(grp_wedgePatch_init_fu_1065_wp_parameters7_ce1),
    .wp_parameters7_we1(grp_wedgePatch_init_fu_1065_wp_parameters7_we1),
    .wp_parameters7_d1(grp_wedgePatch_init_fu_1065_wp_parameters7_d1),
    .wp_parameters8_address0(grp_wedgePatch_init_fu_1065_wp_parameters8_address0),
    .wp_parameters8_ce0(grp_wedgePatch_init_fu_1065_wp_parameters8_ce0),
    .wp_parameters8_we0(grp_wedgePatch_init_fu_1065_wp_parameters8_we0),
    .wp_parameters8_d0(grp_wedgePatch_init_fu_1065_wp_parameters8_d0),
    .wp_parameters8_q0(NPpatches_parameters_V_4_q0),
    .wp_parameters8_address1(grp_wedgePatch_init_fu_1065_wp_parameters8_address1),
    .wp_parameters8_ce1(grp_wedgePatch_init_fu_1065_wp_parameters8_ce1),
    .wp_parameters8_we1(grp_wedgePatch_init_fu_1065_wp_parameters8_we1),
    .wp_parameters8_d1(grp_wedgePatch_init_fu_1065_wp_parameters8_d1),
    .wp_parameters8_q1(NPpatches_parameters_V_4_q1),
    .superpointsI_address0(grp_wedgePatch_init_fu_1065_superpointsI_address0),
    .superpointsI_ce0(grp_wedgePatch_init_fu_1065_superpointsI_ce0),
    .superpointsI_q0(init_patch_V_0_q0),
    .superpointsI9_address0(grp_wedgePatch_init_fu_1065_superpointsI9_address0),
    .superpointsI9_ce0(grp_wedgePatch_init_fu_1065_superpointsI9_ce0),
    .superpointsI9_q0(init_patch_V_1_q0),
    .superpointsI10_address0(grp_wedgePatch_init_fu_1065_superpointsI10_address0),
    .superpointsI10_ce0(grp_wedgePatch_init_fu_1065_superpointsI10_ce0),
    .superpointsI10_q0(init_patch_V_2_q0),
    .superpointsI11_address0(grp_wedgePatch_init_fu_1065_superpointsI11_address0),
    .superpointsI11_ce0(grp_wedgePatch_init_fu_1065_superpointsI11_ce0),
    .superpointsI11_q0(init_patch_V_3_q0),
    .superpointsI12_address0(grp_wedgePatch_init_fu_1065_superpointsI12_address0),
    .superpointsI12_ce0(grp_wedgePatch_init_fu_1065_superpointsI12_ce0),
    .superpointsI12_q0(init_patch_V_4_q0),
    .superpoint_count(init_patch_size_0_reg_859),
    .apexZ0I(apexZ0_V_reg_3167)
);

makePatches_ShadowQuilt_fromEdges_delete_patch grp_delete_patch_fu_1104(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_delete_patch_fu_1104_ap_start),
    .ap_done(grp_delete_patch_fu_1104_ap_done),
    .ap_idle(grp_delete_patch_fu_1104_ap_idle),
    .ap_ready(grp_delete_patch_fu_1104_ap_ready),
    .n_patches(grp_delete_patch_fu_1104_n_patches),
    .n_patches_ap_vld(grp_delete_patch_fu_1104_n_patches_ap_vld),
    .n_patches_read(reg_1143),
    .patches_superpoints_address0(grp_delete_patch_fu_1104_patches_superpoints_address0),
    .patches_superpoints_ce0(grp_delete_patch_fu_1104_patches_superpoints_ce0),
    .patches_superpoints_we0(grp_delete_patch_fu_1104_patches_superpoints_we0),
    .patches_superpoints_d0(grp_delete_patch_fu_1104_patches_superpoints_d0),
    .patches_superpoints_q0(patches_superpoints_q0),
    .index(grp_delete_patch_fu_1104_index),
    .patches_parameters_V_address0(grp_delete_patch_fu_1104_patches_parameters_V_address0),
    .patches_parameters_V_ce0(grp_delete_patch_fu_1104_patches_parameters_V_ce0),
    .patches_parameters_V_we0(grp_delete_patch_fu_1104_patches_parameters_V_we0),
    .patches_parameters_V_d0(grp_delete_patch_fu_1104_patches_parameters_V_d0),
    .patches_parameters_V_q0(patches_parameters_q0)
);

makePatches_ShadowQuilt_fromEdges_add_8ns_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
add_8ns_8s_8_1_1_U398(
    .din0(lastPatchIndex),
    .din1(8'd255),
    .dout(secondLastPatchIndex_fu_1163_p2)
);

makePatches_ShadowQuilt_fromEdges_sub_12ns_12ns_12_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
sub_12ns_12ns_12_2_1_U399(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1201_p0),
    .din1(grp_fu_1201_p1),
    .ce(grp_fu_1201_ce),
    .dout(grp_fu_1201_p2)
);

makePatches_ShadowQuilt_fromEdges_sub_12ns_12ns_12_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
sub_12ns_12ns_12_2_1_U400(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1229_p0),
    .din1(grp_fu_1229_p1),
    .ce(grp_fu_1229_ce),
    .dout(grp_fu_1229_p2)
);

makePatches_ShadowQuilt_fromEdges_add_12ns_12ns_12_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
add_12ns_12ns_12_2_1_U401(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln723_reg_2629),
    .din1(12'd36),
    .ce(grp_fu_1235_ce),
    .dout(grp_fu_1235_p2)
);

makePatches_ShadowQuilt_fromEdges_add_12ns_12ns_12_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
add_12ns_12ns_12_2_1_U402(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln732_reg_2621),
    .din1(12'd42),
    .ce(1'b1),
    .dout(grp_fu_1258_p2)
);

makePatches_ShadowQuilt_fromEdges_add_12ns_12ns_12_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
add_12ns_12ns_12_2_1_U403(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln732_reg_2621),
    .din1(12'd30),
    .ce(1'b1),
    .dout(grp_fu_1263_p2)
);

makePatches_ShadowQuilt_fromEdges_add_12ns_12ns_12_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
add_12ns_12ns_12_2_1_U404(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln732_reg_2621),
    .din1(12'd36),
    .ce(1'b1),
    .dout(grp_fu_1268_p2)
);

makePatches_ShadowQuilt_fromEdges_add_12ns_12ns_12_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
add_12ns_12ns_12_2_1_U405(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln732_reg_2621),
    .din1(12'd24),
    .ce(1'b1),
    .dout(grp_fu_1273_p2)
);

makePatches_ShadowQuilt_fromEdges_add_12ns_12ns_12_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
add_12ns_12ns_12_2_1_U406(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln723_reg_2629),
    .din1(12'd24),
    .ce(1'b1),
    .dout(grp_fu_1278_p2)
);

makePatches_ShadowQuilt_fromEdges_add_12ns_12ns_12_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
add_12ns_12ns_12_2_1_U407(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln723_reg_2629),
    .din1(12'd42),
    .ce(1'b1),
    .dout(grp_fu_1283_p2)
);

makePatches_ShadowQuilt_fromEdges_add_12ns_12ns_12_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
add_12ns_12ns_12_2_1_U408(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln723_reg_2629),
    .din1(12'd30),
    .ce(1'b1),
    .dout(grp_fu_1288_p2)
);

makePatches_ShadowQuilt_fromEdges_sub_33s_33s_33_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 33 ))
sub_33s_33s_33_1_1_U409(
    .din0(ret_fu_1400_p0),
    .din1(ret_fu_1400_p1),
    .dout(ret_fu_1400_p2)
);

makePatches_ShadowQuilt_fromEdges_sub_33s_33s_33_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 33 ))
sub_33s_33s_33_1_1_U410(
    .din0(ret_21_fu_1475_p0),
    .din1(ret_21_fu_1475_p1),
    .dout(ret_21_fu_1475_p2)
);

makePatches_ShadowQuilt_fromEdges_sub_33s_33s_33_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 33 ))
sub_33s_33s_33_1_1_U411(
    .din0(ret_23_fu_1562_p0),
    .din1(ret_23_fu_1562_p1),
    .dout(ret_23_fu_1562_p2)
);

makePatches_ShadowQuilt_fromEdges_sub_32ns_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sub_32ns_32s_32_1_1_U412(
    .din0(original_topR_jL_V_reg_2652),
    .din1(complementary_topR_jR_V_3_reg_2806),
    .dout(horizontalShiftTop_fu_1657_p2)
);

makePatches_ShadowQuilt_fromEdges_sub_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sub_32s_32s_32_1_1_U413(
    .din0(original_topL_jL_V_3_reg_2759),
    .din1(complementary_topL_jR_V_3_reg_2859),
    .dout(horizontalShiftBottom_fu_1661_p2)
);

makePatches_ShadowQuilt_fromEdges_sub_64ns_64s_64_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sub_64ns_64s_64_3_1_U414(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(shifted_Align_2_reg_790),
    .din1(sext_ln534_fu_1801_p1),
    .ce(1'b1),
    .dout(grp_fu_1804_p2)
);

makePatches_ShadowQuilt_fromEdges_add_64ns_64s_64_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
add_64ns_64s_64_3_1_U415(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(shifted_Align_2_reg_790),
    .din1(sext_ln534_fu_1801_p1),
    .ce(1'b1),
    .dout(grp_fu_1810_p2)
);

makePatches_ShadowQuilt_fromEdges_add_9ns_9s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
add_9ns_9s_9_1_1_U416(
    .din0(add_ln811_fu_1825_p0),
    .din1(9'd511),
    .dout(add_ln811_fu_1825_p2)
);

makePatches_ShadowQuilt_fromEdges_add_8ns_8ns_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
add_8ns_8ns_8_1_1_U417(
    .din0(ap_phi_mux_indvar_flatten13_phi_fu_804_p4),
    .din1(8'd1),
    .dout(add_ln1116_1_fu_1831_p2)
);

makePatches_ShadowQuilt_fromEdges_add_3ns_3ns_3_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
add_3ns_3ns_3_1_1_U418(
    .din0(ap_phi_mux_a_phi_fu_815_p4),
    .din1(3'd1),
    .dout(add_ln1116_fu_1843_p2)
);

makePatches_ShadowQuilt_fromEdges_add_7ns_7ns_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
add_7ns_7ns_7_1_1_U419(
    .din0(indvar_flatten_reg_823),
    .din1(7'd1),
    .dout(add_ln1118_1_fu_1885_p2)
);

makePatches_ShadowQuilt_fromEdges_add_5ns_5ns_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
add_5ns_5ns_5_1_1_U420(
    .din0(select_ln1116_reg_3112),
    .din1(5'd1),
    .dout(add_ln1118_fu_1891_p2)
);

makePatches_ShadowQuilt_fromEdges_add_5ns_5ns_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
add_5ns_5ns_5_1_1_U421(
    .din0(add_ln1122_fu_1951_p0),
    .din1(add_ln1122_fu_1951_p1),
    .dout(add_ln1122_fu_1951_p2)
);

makePatches_ShadowQuilt_fromEdges_add_2ns_2ns_2_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 2 ))
add_2ns_2ns_2_1_1_U422(
    .din0(select_ln1118_reg_3141),
    .din1(2'd1),
    .dout(add_ln1120_fu_1957_p2)
);

makePatches_ShadowQuilt_fromEdges_add_3ns_3ns_3_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
add_3ns_3ns_3_1_1_U423(
    .din0(i_reg_871),
    .din1(3'd1),
    .dout(add_ln1134_fu_1973_p2)
);

makePatches_ShadowQuilt_fromEdges_add_8ns_8ns_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
add_8ns_8ns_8_1_1_U424(
    .din0(ap_phi_mux_indvar_flatten35_phi_fu_887_p4),
    .din1(8'd1),
    .dout(add_ln1141_1_fu_2002_p2)
);

makePatches_ShadowQuilt_fromEdges_add_3ns_3ns_3_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
add_3ns_3ns_3_1_1_U425(
    .din0(ap_phi_mux_b_1_phi_fu_898_p4),
    .din1(3'd1),
    .dout(add_ln1141_fu_2014_p2)
);

makePatches_ShadowQuilt_fromEdges_add_7ns_7ns_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
add_7ns_7ns_7_1_1_U426(
    .din0(indvar_flatten21_reg_906),
    .din1(7'd1),
    .dout(add_ln1143_1_fu_2056_p2)
);

makePatches_ShadowQuilt_fromEdges_add_5ns_5ns_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
add_5ns_5ns_5_1_1_U427(
    .din0(select_ln1141_reg_3214),
    .din1(5'd1),
    .dout(add_ln1143_fu_2062_p2)
);

makePatches_ShadowQuilt_fromEdges_add_5ns_5ns_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
add_5ns_5ns_5_1_1_U428(
    .din0(add_ln1147_fu_2122_p0),
    .din1(add_ln1147_fu_2122_p1),
    .dout(add_ln1147_fu_2122_p2)
);

makePatches_ShadowQuilt_fromEdges_add_2ns_2ns_2_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 2 ))
add_2ns_2ns_2_1_1_U429(
    .din0(select_ln1143_reg_3243),
    .din1(2'd1),
    .dout(add_ln1145_fu_2128_p2)
);

makePatches_ShadowQuilt_fromEdges_add_7ns_7ns_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
add_7ns_7ns_7_1_1_U430(
    .din0(ap_phi_mux_indvar_flatten57_phi_fu_946_p4),
    .din1(7'd1),
    .dout(add_ln1153_1_fu_2141_p2)
);

makePatches_ShadowQuilt_fromEdges_add_3ns_3ns_3_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
add_3ns_3ns_3_1_1_U431(
    .din0(ap_phi_mux_b_2_phi_fu_957_p4),
    .din1(3'd1),
    .dout(add_ln1153_fu_2153_p2)
);

makePatches_ShadowQuilt_fromEdges_add_6ns_6ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
add_6ns_6ns_6_1_1_U432(
    .din0(indvar_flatten43_reg_965),
    .din1(6'd1),
    .dout(add_ln1155_1_fu_2178_p2)
);

makePatches_ShadowQuilt_fromEdges_add_3ns_3ns_3_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
add_3ns_3ns_3_1_1_U433(
    .din0(select_ln1153_reg_3292),
    .din1(3'd1),
    .dout(add_ln1155_fu_2201_p2)
);

makePatches_ShadowQuilt_fromEdges_add_3ns_3ns_3_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
add_3ns_3ns_3_1_1_U434(
    .din0(select_ln1155_reg_3324),
    .din1(3'd1),
    .dout(add_ln1157_fu_2266_p2)
);

makePatches_ShadowQuilt_fromEdges_add_9ns_9s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
add_9ns_9s_9_1_1_U435(
    .din0(add_ln817_fu_2287_p0),
    .din1(9'd511),
    .dout(add_ln817_fu_2287_p2)
);

makePatches_ShadowQuilt_fromEdges_add_5ns_5s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
add_5ns_5s_5_1_1_U436(
    .din0(add_ln817_1_fu_2297_p0),
    .din1(5'd31),
    .dout(add_ln817_1_fu_2297_p2)
);

makePatches_ShadowQuilt_fromEdges_sub_12ns_12ns_12_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
sub_12ns_12ns_12_2_1_U437(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2317_p0),
    .din1(grp_fu_2317_p1),
    .ce(grp_fu_2317_ce),
    .dout(grp_fu_2317_p2)
);

makePatches_ShadowQuilt_fromEdges_add_12ns_12ns_12_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
add_12ns_12ns_12_2_1_U438(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln821_reg_3377),
    .din1(12'd36),
    .ce(1'b1),
    .dout(grp_fu_2323_p2)
);

makePatches_ShadowQuilt_fromEdges_add_12ns_12ns_12_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
add_12ns_12ns_12_2_1_U439(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln821_reg_3377),
    .din1(12'd24),
    .ce(1'b1),
    .dout(grp_fu_2328_p2)
);

makePatches_ShadowQuilt_fromEdges_add_12ns_12ns_12_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
add_12ns_12ns_12_2_1_U440(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln821_reg_3377),
    .din1(12'd42),
    .ce(1'b1),
    .dout(grp_fu_2333_p2)
);

makePatches_ShadowQuilt_fromEdges_add_12ns_12ns_12_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
add_12ns_12ns_12_2_1_U441(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln821_reg_3377),
    .din1(12'd30),
    .ce(1'b1),
    .dout(grp_fu_2338_p2)
);

makePatches_ShadowQuilt_fromEdges_sub_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sub_32s_32s_32_1_1_U442(
    .din0(original_topR_jL_V_3_reg_3432),
    .din1(complementary_topR_jR_V_4_reg_3451),
    .dout(horizontalShiftTop_1_fu_2421_p2)
);

makePatches_ShadowQuilt_fromEdges_sub_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sub_32s_32s_32_1_1_U443(
    .din0(original_topL_jL_V_4_reg_3425),
    .din1(complementary_topL_jR_V_4_reg_3458),
    .dout(horizontalShiftBottom_1_fu_2431_p2)
);

makePatches_ShadowQuilt_fromEdges_sub_33s_33s_33_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 33 ))
sub_33s_33s_33_1_1_U444(
    .din0(ret_25_fu_2444_p0),
    .din1(sext_ln215_18_reg_3478),
    .dout(ret_25_fu_2444_p2)
);

makePatches_ShadowQuilt_fromEdges_sub_33s_33s_33_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 33 ))
sub_33s_33s_33_1_1_U445(
    .din0(sext_ln215_19_reg_3483),
    .din1(ret_26_fu_2452_p1),
    .dout(ret_26_fu_2452_p2)
);

makePatches_ShadowQuilt_fromEdges_sub_33s_33s_33_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 33 ))
sub_33s_33s_33_1_1_U446(
    .din0(ret_27_fu_2468_p0),
    .din1(sext_ln215_20_reg_3493),
    .dout(ret_27_fu_2468_p2)
);

makePatches_ShadowQuilt_fromEdges_sub_33s_33s_33_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 33 ))
sub_33s_33s_33_1_1_U447(
    .din0(sext_ln215_21_reg_3498),
    .din1(ret_28_fu_2476_p1),
    .dout(ret_28_fu_2476_p2)
);

makePatches_ShadowQuilt_fromEdges_add_8ns_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
add_8ns_8s_8_1_1_U448(
    .din0(n_patches_i),
    .din1(8'd253),
    .dout(add_ln861_fu_2538_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state405) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state404) & (1'b0 == ap_block_state404_on_subcall_done))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state404) & (1'b0 == ap_block_state404_on_subcall_done))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state414) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state411) & (icmp_ln1134_fu_1979_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2_subdone)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b0) & (1'b0 == ap_block_pp1_stage1_subdone)))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((1'b1 == ap_CS_fsm_state411) & (icmp_ln1134_fu_1979_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state420) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state419)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2_subdone))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state419)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_add_patch6_fu_1017_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state428)) begin
            grp_add_patch6_fu_1017_ap_start_reg <= 1'b1;
        end else if ((grp_add_patch6_fu_1017_ap_ready == 1'b1)) begin
            grp_add_patch6_fu_1017_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_delete_patch_fu_1104_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state403) | (1'b1 == ap_CS_fsm_state573))) begin
            grp_delete_patch_fu_1104_ap_start_reg <= 1'b1;
        end else if ((grp_delete_patch_fu_1104_ap_ready == 1'b1)) begin
            grp_delete_patch_fu_1104_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_getShadows_fu_1001_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state431))) begin
            grp_getShadows_fu_1001_ap_start_reg <= 1'b1;
        end else if ((grp_getShadows_fu_1001_ap_ready == 1'b1)) begin
            grp_getShadows_fu_1001_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_makeSuperPoint_alignedToLine8_fu_1038_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state412)) begin
            grp_makeSuperPoint_alignedToLine8_fu_1038_ap_start_reg <= 1'b1;
        end else if ((grp_makeSuperPoint_alignedToLine8_fu_1038_ap_ready == 1'b1)) begin
            grp_makeSuperPoint_alignedToLine8_fu_1038_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1089_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_NS_fsm_state507) & (1'b1 == ap_CS_fsm_state397)) | ((1'b1 == ap_NS_fsm_state441) & (1'b1 == ap_CS_fsm_state440) & (shiftOriginal_1_reg_2986 == 1'd1)) | ((1'b1 == ap_NS_fsm_state331) & (1'b1 == ap_CS_fsm_state330)) | ((1'b1 == ap_NS_fsm_state330) & ((1'b1 == ap_CS_fsm_state256) | (1'b1 == ap_CS_fsm_state329) | (1'b1 == ap_CS_fsm_state254))) | ((1'b1 == ap_NS_fsm_state256) & (1'b1 == ap_CS_fsm_state255) & (icmp_ln878_5_fu_1568_p2 == 1'd1)) | ((1'b1 == ap_NS_fsm_state175) & (1'b1 == ap_CS_fsm_state174)) | ((icmp_ln878_3_fu_1406_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state93) & (1'b1 == ap_NS_fsm_state94)) | ((1'd1 == and_ln724_fu_1293_p2) & (1'b1 == ap_CS_fsm_state12) & (1'b1 == ap_NS_fsm_state13)))) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_1089_ap_start_reg <= 1'b1;
        end else if ((grp_straightLineProjectorFromLayerIJtoK_fu_1089_ap_ready == 1'b1)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_1089_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_wedgePatch_init_fu_1065_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state426)) begin
            grp_wedgePatch_init_fu_1065_ap_start_reg <= 1'b1;
        end else if ((grp_wedgePatch_init_fu_1065_ap_ready == 1'b1)) begin
            grp_wedgePatch_init_fu_1065_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1116_reg_3093 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        a_reg_811 <= select_ln1116_1_reg_3125;
    end else if (((1'b1 == ap_CS_fsm_state404) & (1'b0 == ap_block_state404_on_subcall_done))) begin
        a_reg_811 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state411) & (icmp_ln1134_fu_1979_p2 == 1'd1))) begin
        b_1_reg_894 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1141_reg_3195 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        b_1_reg_894 <= select_ln1141_1_reg_3227;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state419)) begin
        b_2_reg_953 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln1153_reg_3274 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        b_2_reg_953 <= select_ln1153_1_reg_3298;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1116_reg_3093_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        b_reg_835 <= select_ln1118_2_reg_3152;
    end else if (((1'b1 == ap_CS_fsm_state404) & (1'b0 == ap_block_state404_on_subcall_done))) begin
        b_reg_835 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state411) & (icmp_ln1134_fu_1979_p2 == 1'd1))) begin
        c_1_reg_918 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1141_reg_3195_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        c_1_reg_918 <= select_ln1143_2_reg_3254;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state419)) begin
        c_2_reg_977 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln1153_reg_3274_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        c_2_reg_977 <= select_ln1155_1_reg_3330;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1116_reg_3093_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        c_reg_847 <= add_ln1120_reg_3162;
    end else if (((1'b1 == ap_CS_fsm_state404) & (1'b0 == ap_block_state404_on_subcall_done))) begin
        c_reg_847 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state506)) begin
        complementary_topL_jL_V_1_reg_684 <= complementary_topL_jL_V_3_reg_3445;
    end else if ((1'b1 == ap_CS_fsm_state394)) begin
        complementary_topL_jL_V_1_reg_684 <= complementary_topL_jL_V_reg_2942;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state506)) begin
        complementary_topL_jR_V_reg_744 <= complementary_topL_jR_V_4_reg_3458;
    end else if ((1'b1 == ap_CS_fsm_state394)) begin
        complementary_topL_jR_V_reg_744 <= complementary_topL_jR_V_3_reg_2859;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state506)) begin
        complementary_topR_jL_V_1_reg_674 <= complementary_topR_jL_V_3_reg_3439;
    end else if ((1'b1 == ap_CS_fsm_state394)) begin
        complementary_topR_jL_V_1_reg_674 <= complementary_topR_jL_V_reg_2937;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state506)) begin
        complementary_topR_jR_V_reg_714 <= complementary_topR_jR_V_4_reg_3451;
    end else if ((1'b1 == ap_CS_fsm_state394)) begin
        complementary_topR_jR_V_reg_714 <= complementary_topR_jR_V_3_reg_2806;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state419)) begin
        d_1_reg_989 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln1153_reg_3274_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage2_11001))) begin
        d_1_reg_989 <= add_ln1157_reg_3346;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state411) & (icmp_ln1134_fu_1979_p2 == 1'd1))) begin
        d_reg_930 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1141_reg_3195_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        d_reg_930 <= add_ln1145_reg_3264;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state256) & (icmp_ln878_5_reg_2877 == 1'd0)) | ((1'b1 == ap_CS_fsm_state254) & (icmp_ln886_5_reg_2868 == 1'd0)))) begin
        empty_101_reg_650 <= 1'd1;
    end else if (((1'b1 == ap_CS_fsm_state330) & (icmp_ln878_5_reg_2877 == 1'd1) & (icmp_ln886_5_reg_2868 == 1'd1))) begin
        empty_101_reg_650 <= empty_100_fu_1625_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state506)) begin
        empty_102_reg_704 <= horizontalShiftBottom_1_reg_3503;
    end else if ((1'b1 == ap_CS_fsm_state394)) begin
        empty_102_reg_704 <= horizontalShiftBottom_reg_2952;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state506)) begin
        empty_103_reg_664 <= horizontalShiftTop_1_reg_3488;
    end else if ((1'b1 == ap_CS_fsm_state394)) begin
        empty_103_reg_664 <= horizontalShiftTop_reg_2947;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (1'd0 == and_ln724_reg_2690))) begin
        empty_86_reg_611 <= 1'd1;
    end else if (((1'd1 == and_ln724_reg_2690) & (1'b1 == ap_CS_fsm_state87))) begin
        empty_86_reg_611 <= empty_85_fu_1384_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln878_3_reg_2777 == 1'd0) & (1'b1 == ap_CS_fsm_state94)) | ((icmp_ln886_3_reg_2768 == 1'd0) & (1'b1 == ap_CS_fsm_state92)))) begin
        empty_91_reg_623 <= 1'd1;
    end else if (((icmp_ln878_3_reg_2777 == 1'd1) & (icmp_ln886_3_reg_2768 == 1'd1) & (1'b1 == ap_CS_fsm_state168))) begin
        empty_91_reg_623 <= empty_90_fu_1463_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state174) & (1'd0 == and_ln734_fu_1490_p2))) begin
        empty_96_reg_638 <= 1'd1;
    end else if (((1'd1 == and_ln734_reg_2830) & (1'b1 == ap_CS_fsm_state249))) begin
        empty_96_reg_638 <= empty_95_fu_1546_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state330)) begin
        horizontalOverlapBottom_V_fu_264 <= 32'd4293967296;
    end else if (((1'b1 == ap_CS_fsm_state506) & (icmp_ln878_7_reg_3508 == 1'd1) & (shiftOriginal_1_reg_2986 == 1'd1))) begin
        horizontalOverlapBottom_V_fu_264 <= horizontalOverlapBottom_V_1_fu_2502_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state330)) begin
        horizontalOverlapTop_V_fu_268 <= 32'd4293967296;
    end else if (((1'b1 == ap_CS_fsm_state506) & (icmp_ln878_7_reg_3508 == 1'd1) & (shiftOriginal_1_reg_2986 == 1'd1))) begin
        horizontalOverlapTop_V_fu_268 <= horizontalOverlapTop_V_1_fu_2497_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state413) & (grp_makeSuperPoint_alignedToLine8_fu_1038_ap_done == 1'b1))) begin
        i_reg_871 <= add_ln1134_reg_3173;
    end else if ((1'b1 == ap_CS_fsm_state410)) begin
        i_reg_871 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1116_reg_3093 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten13_reg_800 <= add_ln1116_1_reg_3088;
    end else if (((1'b1 == ap_CS_fsm_state404) & (1'b0 == ap_block_state404_on_subcall_done))) begin
        indvar_flatten13_reg_800 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state411) & (icmp_ln1134_fu_1979_p2 == 1'd1))) begin
        indvar_flatten21_reg_906 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1141_reg_3195 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar_flatten21_reg_906 <= select_ln1143_3_reg_3249;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state411) & (icmp_ln1134_fu_1979_p2 == 1'd1))) begin
        indvar_flatten35_reg_883 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1141_reg_3195 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar_flatten35_reg_883 <= add_ln1141_1_reg_3190;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state419)) begin
        indvar_flatten43_reg_965 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln1153_reg_3274 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        indvar_flatten43_reg_965 <= select_ln1155_2_reg_3319;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state419)) begin
        indvar_flatten57_reg_942 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln1153_reg_3274 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        indvar_flatten57_reg_942 <= add_ln1153_1_reg_3269;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1116_reg_3093 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_823 <= select_ln1118_3_reg_3147;
    end else if (((1'b1 == ap_CS_fsm_state404) & (1'b0 == ap_block_state404_on_subcall_done))) begin
        indvar_flatten_reg_823 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state413) & (grp_makeSuperPoint_alignedToLine8_fu_1038_ap_done == 1'b1))) begin
        init_patch_size_0_reg_859 <= grp_makeSuperPoint_alignedToLine8_fu_1038_ap_return_1;
    end else if ((1'b1 == ap_CS_fsm_state410)) begin
        init_patch_size_0_reg_859 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state506)) begin
        makeHorizontallyShiftedPatch_reg_776 <= 1'd1;
    end else if ((1'b1 == ap_CS_fsm_state394)) begin
        makeHorizontallyShiftedPatch_reg_776 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state506)) begin
        newZtop_V_reg_764 <= newZtop_V_2_reg_3005;
    end else if ((1'b1 == ap_CS_fsm_state394)) begin
        newZtop_V_reg_764 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state330)) begin
        original_ppl_fu_272 <= ppl;
    end else if (((1'b1 == ap_CS_fsm_state413) & (grp_makeSuperPoint_alignedToLine8_fu_1038_ap_done == 1'b1))) begin
        original_ppl_fu_272 <= grp_makeSuperPoint_alignedToLine8_fu_1038_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state506)) begin
        original_topL_jL_V_reg_724 <= original_topL_jL_V_4_reg_3425;
    end else if ((1'b1 == ap_CS_fsm_state394)) begin
        original_topL_jL_V_reg_724 <= original_topL_jL_V_3_reg_2759;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state506)) begin
        original_topL_jR_V_1_reg_754 <= original_topL_jR_V_3_reg_3472;
    end else if ((1'b1 == ap_CS_fsm_state394)) begin
        original_topL_jR_V_1_reg_754 <= original_topL_jR_V_reg_2962;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state506)) begin
        original_topR_jL_V_1_reg_734 <= original_topR_jL_V_3_reg_3432;
    end else if ((1'b1 == ap_CS_fsm_state394)) begin
        original_topR_jL_V_1_reg_734 <= original_topR_jL_V_reg_2652;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state506)) begin
        original_topR_jR_V_1_reg_694 <= original_topR_jR_V_3_reg_3465;
    end else if ((1'b1 == ap_CS_fsm_state394)) begin
        original_topR_jR_V_1_reg_694 <= original_topR_jR_V_reg_2957;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state506)) begin
        shifted_Align_2_reg_790 <= shifted_Align_5_reg_3077;
    end else if ((1'b1 == ap_CS_fsm_state394)) begin
        shifted_Align_2_reg_790 <= sext_ln774_fu_1695_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln1116_1_reg_3088 <= add_ln1116_1_fu_1831_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1116_fu_1837_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln1116_reg_3097 <= add_ln1116_fu_1843_p2;
        icmp_ln1118_reg_3102 <= icmp_ln1118_fu_1849_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1118_reg_3102 == 1'd0) & (icmp_ln1116_reg_3093 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln1118_1_reg_3130 <= add_ln1118_1_fu_1885_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1116_reg_3093 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_ln1118_reg_3135 <= add_ln1118_fu_1891_p2;
        select_ln1118_reg_3141 <= select_ln1118_fu_1900_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1116_reg_3093 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln1120_reg_3162 <= add_ln1120_fu_1957_p2;
        select_ln1118_2_reg_3152 <= select_ln1118_2_fu_1943_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1116_reg_3093 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln1122_reg_3157 <= add_ln1122_fu_1951_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state411)) begin
        add_ln1134_reg_3173 <= add_ln1134_fu_1973_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        add_ln1141_1_reg_3190 <= add_ln1141_1_fu_2002_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln1141_fu_2008_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        add_ln1141_reg_3199 <= add_ln1141_fu_2014_p2;
        icmp_ln1143_reg_3204 <= icmp_ln1143_fu_2020_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln1143_reg_3204 == 1'd0) & (icmp_ln1141_reg_3195 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        add_ln1143_1_reg_3232 <= add_ln1143_1_fu_2056_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage2) & (icmp_ln1141_reg_3195 == 1'd0) & (1'b0 == ap_block_pp1_stage2_11001))) begin
        add_ln1143_reg_3237 <= add_ln1143_fu_2062_p2;
        select_ln1143_reg_3243 <= select_ln1143_fu_2071_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1141_reg_3195 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        add_ln1145_reg_3264 <= add_ln1145_fu_2128_p2;
        select_ln1143_2_reg_3254 <= select_ln1143_2_fu_2114_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln1141_reg_3195 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        add_ln1147_reg_3259 <= add_ln1147_fu_2122_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        add_ln1153_1_reg_3269 <= add_ln1153_1_fu_2141_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln1153_fu_2147_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        add_ln1153_reg_3278 <= add_ln1153_fu_2153_p2;
        icmp_ln1155_reg_3283 <= icmp_ln1155_fu_2159_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln1155_reg_3283 == 1'd0) & (icmp_ln1153_reg_3274 == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        add_ln1155_1_reg_3303 <= add_ln1155_1_fu_2178_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage2) & (icmp_ln1153_reg_3274 == 1'd0) & (1'b0 == ap_block_pp2_stage2_11001))) begin
        add_ln1155_reg_3314 <= add_ln1155_fu_2201_p2;
        and_ln1153_reg_3308 <= and_ln1153_fu_2195_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln1153_reg_3274_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        add_ln1157_reg_3346 <= add_ln1157_fu_2266_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln1153_reg_3274_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        add_ln1159_reg_3341 <= add_ln1159_fu_2260_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln723_reg_2642 <= grp_fu_1235_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((makeHorizontallyShiftedPatch_reg_776 == 1'd1) & (1'b1 == ap_CS_fsm_state402))) begin
        add_ln811_reg_3083 <= add_ln811_fu_1825_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state430)) begin
        add_ln817_1_reg_3362 <= add_ln817_1_fu_2297_p2;
        add_ln817_reg_3351 <= add_ln817_fu_2287_p2;
        trunc_ln821_reg_3357 <= trunc_ln821_fu_2293_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state434)) begin
        add_ln821_reg_3385 <= grp_fu_2323_p2;
        add_ln822_reg_3390 <= grp_fu_2328_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state435)) begin
        add_ln823_reg_3405 <= grp_fu_2333_p2;
        add_ln824_reg_3410 <= grp_fu_2338_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state572) & (icmp_ln859_fu_2532_p2 == 1'd1))) begin
        add_ln861_reg_3575 <= add_ln861_fu_2538_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1116_reg_3093 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        and_ln1116_reg_3118 <= and_ln1116_fu_1873_p2;
        select_ln1116_reg_3112 <= select_ln1116_fu_1855_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln1141_reg_3195 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        and_ln1141_reg_3220 <= and_ln1141_fu_2044_p2;
        select_ln1141_reg_3214 <= select_ln1141_fu_2026_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        and_ln724_reg_2690 <= and_ln724_fu_1293_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state174)) begin
        and_ln734_reg_2830 <= and_ln734_fu_1490_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state571)) begin
        and_ln857_reg_3567 <= and_ln857_fu_2528_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state410)) begin
        apexZ0_V_reg_3167 <= apexZ0_V_fu_1970_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state439)) begin
        complementary_topL_jL_V_3_reg_3445 <= complementary_topL_jL_V_3_fu_2380_p3;
        complementary_topR_jL_V_3_reg_3439 <= complementary_topR_jL_V_3_fu_2373_p3;
        original_topL_jL_V_4_reg_3425 <= original_topL_jL_V_4_fu_2359_p3;
        original_topR_jL_V_3_reg_3432 <= original_topR_jL_V_3_fu_2366_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state392)) begin
        complementary_topL_jL_V_reg_2942 <= patches_parameters_q0;
        complementary_topR_jL_V_reg_2937 <= patches_parameters_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state252)) begin
        complementary_topL_jR_V_3_reg_2859 <= patches_parameters_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state440)) begin
        complementary_topL_jR_V_4_reg_3458 <= complementary_topL_jR_V_4_fu_2394_p3;
        complementary_topR_jR_V_4_reg_3451 <= complementary_topR_jR_V_4_fu_2387_p3;
        original_topL_jR_V_3_reg_3472 <= original_topL_jR_V_3_fu_2408_p3;
        original_topR_jR_V_3_reg_3465 <= original_topR_jR_V_3_fu_2401_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state171)) begin
        complementary_topR_jR_V_3_reg_2806 <= patches_parameters_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state441)) begin
        horizontalShiftBottom_1_reg_3503 <= horizontalShiftBottom_1_fu_2431_p2;
        horizontalShiftTop_1_reg_3488 <= horizontalShiftTop_1_fu_2421_p2;
        sext_ln215_18_reg_3478 <= sext_ln215_18_fu_2415_p1;
        sext_ln215_19_reg_3483 <= sext_ln215_19_fu_2418_p1;
        sext_ln215_20_reg_3493 <= sext_ln215_20_fu_2425_p1;
        sext_ln215_21_reg_3498 <= sext_ln215_21_fu_2428_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state393)) begin
        horizontalShiftBottom_reg_2952 <= horizontalShiftBottom_fu_1661_p2;
        horizontalShiftTop_reg_2947 <= horizontalShiftTop_fu_1657_p2;
        icmp_ln886_6_reg_2974 <= icmp_ln886_6_fu_1673_p2;
        original_topL_jR_V_reg_2962 <= patches_parameters_q1;
        original_topR_jR_V_reg_2957 <= patches_parameters_q0;
        tmp_54_reg_2967 <= grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_dout0[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln1116_reg_3093 <= icmp_ln1116_fu_1837_p2;
        icmp_ln1116_reg_3093_pp0_iter1_reg <= icmp_ln1116_reg_3093;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln1141_reg_3195 <= icmp_ln1141_fu_2008_p2;
        icmp_ln1141_reg_3195_pp1_iter1_reg <= icmp_ln1141_reg_3195;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln1153_reg_3274 <= icmp_ln1153_fu_2147_p2;
        icmp_ln1153_reg_3274_pp2_iter1_reg <= icmp_ln1153_reg_3274;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        icmp_ln710_reg_2554 <= icmp_ln710_fu_1157_p2;
        secondLastPatchIndex_reg_2559 <= secondLastPatchIndex_fu_1163_p2;
        trunc_ln732_reg_2564 <= trunc_ln732_fu_1169_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state396) & (or_ln791_1_fu_1736_p2 == 1'd1))) begin
        icmp_ln791_1_reg_3030 <= icmp_ln791_1_fu_1758_p2;
        icmp_ln890_1_reg_3040 <= grp_fu_1124_p2;
        icmp_ln890_reg_3035 <= grp_fu_1129_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state395)) begin
        icmp_ln791_reg_3011 <= icmp_ln791_fu_1730_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state572)) begin
        icmp_ln859_reg_3571 <= icmp_ln859_fu_2532_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        icmp_ln878_3_reg_2777 <= icmp_ln878_3_fu_1406_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state173)) begin
        icmp_ln878_4_reg_2825 <= icmp_ln878_4_fu_1486_p2;
        icmp_ln886_4_reg_2820 <= icmp_ln886_4_fu_1481_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state255)) begin
        icmp_ln878_5_reg_2877 <= icmp_ln878_5_fu_1568_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state397) & (((1'd1 == and_ln791_2_fu_1764_p2) & (or_ln791_1_reg_3016 == 1'd0)) | ((1'd1 == and_ln791_1_fu_1783_p2) & (or_ln791_1_reg_3016 == 1'd1))))) begin
        icmp_ln878_6_reg_3051 <= icmp_ln878_6_fu_1788_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state504)) begin
        icmp_ln878_7_reg_3508 <= icmp_ln878_7_fu_2435_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state505)) begin
        icmp_ln878_8_reg_3552 <= icmp_ln878_8_fu_2489_p2;
        icmp_ln878_9_reg_3557 <= icmp_ln878_9_fu_2493_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        icmp_ln878_reg_2685 <= icmp_ln878_fu_1253_p2;
        icmp_ln886_reg_2680 <= icmp_ln886_fu_1248_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        icmp_ln886_3_reg_2768 <= icmp_ln886_3_fu_1390_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state253)) begin
        icmp_ln886_5_reg_2868 <= icmp_ln886_5_fu_1552_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state570)) begin
        icmp_ln886_7_reg_3562 <= icmp_ln886_7_fu_2522_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state396) & (or_ln791_1_fu_1736_p2 == 1'd0))) begin
        icmp_ln890_2_reg_3020 <= grp_fu_1124_p2;
        icmp_ln890_3_reg_3025 <= grp_fu_1129_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state394)) begin
        leftRight_reg_3000 <= leftRight_fu_1709_p2;
        newZtop_V_2_reg_3005 <= newZtop_V_2_fu_1714_p3;
        shiftOriginal_1_reg_2986 <= shiftOriginal_1_fu_1699_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state245)) begin
        notlhs35_reg_2839 <= notlhs35_fu_1525_p2;
        notrhs36_reg_2844 <= notrhs36_fu_1531_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state164)) begin
        notlhs37_reg_2786 <= notlhs37_fu_1442_p2;
        notrhs38_reg_2791 <= notrhs38_fu_1448_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        notlhs39_reg_2739 <= notlhs39_fu_1363_p2;
        notrhs40_reg_2744 <= notrhs40_fu_1369_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state326)) begin
        notlhs_reg_2886 <= notlhs_fu_1604_p2;
        notrhs_reg_2891 <= notrhs_fu_1610_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state396)) begin
        or_ln791_1_reg_3016 <= or_ln791_1_fu_1736_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state331)) begin
        or_ln791_2_reg_2932 <= or_ln791_2_fu_1651_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state330)) begin
        or_ln791_reg_2927 <= or_ln791_fu_1631_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        original_topL_jL_V_3_reg_2759 <= patches_parameters_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        original_topR_jL_V_reg_2652 <= patches_parameters_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        patches_parameters_addr_13_reg_2719 <= zext_ln727_fu_1317_p1;
        patches_parameters_addr_14_reg_2699 <= zext_ln732_1_fu_1297_p1;
        patches_parameters_addr_15_reg_2704 <= zext_ln737_fu_1302_p1;
        patches_parameters_addr_16_reg_2709 <= zext_ln745_fu_1307_p1;
        patches_parameters_addr_17_reg_2714 <= zext_ln746_fu_1312_p1;
        patches_parameters_addr_18_reg_2724 <= zext_ln747_fu_1322_p1;
        patches_parameters_addr_19_reg_2729 <= zext_ln748_fu_1327_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state569) | (1'b1 == ap_CS_fsm_state503) | (1'b1 == ap_CS_fsm_state392) | (1'b1 == ap_CS_fsm_state318) | (1'b1 == ap_CS_fsm_state237) | (1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state75))) begin
        reg_1134 <= grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state325) | (1'b1 == ap_CS_fsm_state244) | (1'b1 == ap_CS_fsm_state163) | (1'b1 == ap_CS_fsm_state82))) begin
        reg_1139 <= grp_fu_2017_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state572) | (1'b1 == ap_CS_fsm_state427) | ((makeHorizontallyShiftedPatch_reg_776 == 1'd1) & (1'b1 == ap_CS_fsm_state402)))) begin
        reg_1143 <= n_patches_i;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state439) | (1'b1 == ap_CS_fsm_state438))) begin
        reg_1149 <= patches_parameters_q0;
        reg_1153 <= patches_parameters_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state172)) begin
        ret_21_reg_2815 <= ret_21_fu_1475_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state254) & (icmp_ln886_5_reg_2868 == 1'd1))) begin
        ret_23_reg_2872 <= ret_23_fu_1562_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state504) & (icmp_ln878_7_fu_2435_p2 == 1'd1))) begin
        ret_25_reg_3512 <= ret_25_fu_2444_p2;
        ret_26_reg_3517 <= ret_26_fu_2452_p2;
        ret_27_reg_3532 <= ret_27_fu_2468_p2;
        ret_28_reg_3537 <= ret_28_fu_2476_p2;
        trunc_ln839_1_reg_3527 <= trunc_ln839_1_fu_2461_p1;
        trunc_ln839_reg_3522 <= trunc_ln839_fu_2457_p1;
        trunc_ln840_1_reg_3547 <= trunc_ln840_1_fu_2485_p1;
        trunc_ln840_reg_3542 <= trunc_ln840_fu_2481_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln886_3_reg_2768 == 1'd1) & (1'b1 == ap_CS_fsm_state92))) begin
        ret_reg_2772 <= ret_fu_1400_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        secondLastPatchIndex_1_reg_2570 <= secondLastPatchIndex_1_fu_1173_p3;
        trunc_ln723_reg_2576 <= trunc_ln723_fu_1179_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1116_reg_3093 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        select_ln1116_1_reg_3125 <= select_ln1116_1_fu_1879_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1116_reg_3093 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        select_ln1118_3_reg_3147 <= select_ln1118_3_fu_1908_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln1141_reg_3195 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        select_ln1141_1_reg_3227 <= select_ln1141_1_fu_2050_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage2) & (icmp_ln1141_reg_3195 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage2_11001))) begin
        select_ln1143_3_reg_3249 <= select_ln1143_3_fu_2079_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln1153_reg_3274 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        select_ln1153_1_reg_3298 <= select_ln1153_1_fu_2172_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        select_ln1153_1_reg_3298_pp2_iter1_reg <= select_ln1153_1_reg_3298;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln1153_reg_3274 == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        select_ln1153_reg_3292 <= select_ln1153_fu_2165_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln1153_reg_3274 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        select_ln1155_1_reg_3330 <= select_ln1155_1_fu_2224_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage2) & (icmp_ln1153_reg_3274 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage2_11001))) begin
        select_ln1155_2_reg_3319 <= select_ln1155_2_fu_2206_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln1153_reg_3274 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        select_ln1155_reg_3324 <= select_ln1155_fu_2216_p3;
        trunc_ln1159_reg_3336 <= trunc_ln1159_fu_2229_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state398)) begin
        select_ln534_reg_3056 <= select_ln534_fu_1794_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state401) & (shiftOriginal_1_reg_2986 == 1'd1))) begin
        shifted_Align_3_reg_3067 <= grp_fu_1804_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state401) & (shiftOriginal_1_reg_2986 == 1'd0))) begin
        shifted_Align_4_reg_3072 <= grp_fu_1810_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state402)) begin
        shifted_Align_5_reg_3077 <= shifted_Align_5_fu_1816_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        sub_ln723_reg_2629 <= grp_fu_1229_p2;
        sub_ln732_reg_2621 <= grp_fu_1201_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state432)) begin
        sub_ln821_reg_3377 <= grp_fu_2317_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        tmp_22_reg_2749 <= grp_fu_658_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state167)) begin
        tmp_25_reg_2796 <= grp_fu_658_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state248)) begin
        tmp_28_reg_2849 <= grp_fu_658_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state329)) begin
        tmp_31_reg_2896 <= grp_fu_658_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        zext_ln720_reg_2606[7 : 0] <= zext_ln720_fu_1207_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        zext_ln721_reg_2637[7 : 0] <= zext_ln721_fu_1240_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state573)) begin
        zext_ln861_reg_3580[7 : 0] <= zext_ln861_fu_2544_p1[7 : 0];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2))) begin
        NPpatches_parameters_V_0_address0 = zext_ln1159_2_fu_2271_p1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_parameters_V_0_address0 = grp_wedgePatch_init_fu_1065_wp_parameters_address0;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        NPpatches_parameters_V_0_address0 = grp_add_patch6_fu_1017_wp_parameters_address0;
    end else begin
        NPpatches_parameters_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2_11001))) begin
        NPpatches_parameters_V_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_parameters_V_0_ce0 = grp_wedgePatch_init_fu_1065_wp_parameters_ce0;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        NPpatches_parameters_V_0_ce0 = grp_add_patch6_fu_1017_wp_parameters_ce0;
    end else begin
        NPpatches_parameters_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_parameters_V_0_ce1 = grp_wedgePatch_init_fu_1065_wp_parameters_ce1;
    end else begin
        NPpatches_parameters_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2))) begin
        NPpatches_parameters_V_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_parameters_V_0_d0 = grp_wedgePatch_init_fu_1065_wp_parameters_d0;
    end else begin
        NPpatches_parameters_V_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (select_ln1153_1_reg_3298_pp2_iter1_reg == 3'd0) & (1'b0 == ap_block_pp2_stage2_11001))) begin
        NPpatches_parameters_V_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_parameters_V_0_we0 = grp_wedgePatch_init_fu_1065_wp_parameters_we0;
    end else begin
        NPpatches_parameters_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_parameters_V_0_we1 = grp_wedgePatch_init_fu_1065_wp_parameters_we1;
    end else begin
        NPpatches_parameters_V_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2))) begin
        NPpatches_parameters_V_1_address0 = zext_ln1159_2_fu_2271_p1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_parameters_V_1_address0 = grp_wedgePatch_init_fu_1065_wp_parameters5_address0;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        NPpatches_parameters_V_1_address0 = grp_add_patch6_fu_1017_wp_parameters5_address0;
    end else begin
        NPpatches_parameters_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2_11001))) begin
        NPpatches_parameters_V_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_parameters_V_1_ce0 = grp_wedgePatch_init_fu_1065_wp_parameters5_ce0;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        NPpatches_parameters_V_1_ce0 = grp_add_patch6_fu_1017_wp_parameters5_ce0;
    end else begin
        NPpatches_parameters_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_parameters_V_1_ce1 = grp_wedgePatch_init_fu_1065_wp_parameters5_ce1;
    end else begin
        NPpatches_parameters_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2))) begin
        NPpatches_parameters_V_1_d0 = 1'd0;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_parameters_V_1_d0 = grp_wedgePatch_init_fu_1065_wp_parameters5_d0;
    end else begin
        NPpatches_parameters_V_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (select_ln1153_1_reg_3298_pp2_iter1_reg == 3'd1) & (1'b0 == ap_block_pp2_stage2_11001))) begin
        NPpatches_parameters_V_1_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_parameters_V_1_we0 = grp_wedgePatch_init_fu_1065_wp_parameters5_we0;
    end else begin
        NPpatches_parameters_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_parameters_V_1_we1 = grp_wedgePatch_init_fu_1065_wp_parameters5_we1;
    end else begin
        NPpatches_parameters_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2))) begin
        NPpatches_parameters_V_2_address0 = zext_ln1159_2_fu_2271_p1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_parameters_V_2_address0 = grp_wedgePatch_init_fu_1065_wp_parameters6_address0;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        NPpatches_parameters_V_2_address0 = grp_add_patch6_fu_1017_wp_parameters6_address0;
    end else begin
        NPpatches_parameters_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2_11001))) begin
        NPpatches_parameters_V_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_parameters_V_2_ce0 = grp_wedgePatch_init_fu_1065_wp_parameters6_ce0;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        NPpatches_parameters_V_2_ce0 = grp_add_patch6_fu_1017_wp_parameters6_ce0;
    end else begin
        NPpatches_parameters_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_parameters_V_2_ce1 = grp_wedgePatch_init_fu_1065_wp_parameters6_ce1;
    end else begin
        NPpatches_parameters_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2))) begin
        NPpatches_parameters_V_2_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_parameters_V_2_d0 = grp_wedgePatch_init_fu_1065_wp_parameters6_d0;
    end else begin
        NPpatches_parameters_V_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (select_ln1153_1_reg_3298_pp2_iter1_reg == 3'd2) & (1'b0 == ap_block_pp2_stage2_11001))) begin
        NPpatches_parameters_V_2_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_parameters_V_2_we0 = grp_wedgePatch_init_fu_1065_wp_parameters6_we0;
    end else begin
        NPpatches_parameters_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_parameters_V_2_we1 = grp_wedgePatch_init_fu_1065_wp_parameters6_we1;
    end else begin
        NPpatches_parameters_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2))) begin
        NPpatches_parameters_V_3_address0 = zext_ln1159_2_fu_2271_p1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_parameters_V_3_address0 = grp_wedgePatch_init_fu_1065_wp_parameters7_address0;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        NPpatches_parameters_V_3_address0 = grp_add_patch6_fu_1017_wp_parameters7_address0;
    end else begin
        NPpatches_parameters_V_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2_11001))) begin
        NPpatches_parameters_V_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_parameters_V_3_ce0 = grp_wedgePatch_init_fu_1065_wp_parameters7_ce0;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        NPpatches_parameters_V_3_ce0 = grp_add_patch6_fu_1017_wp_parameters7_ce0;
    end else begin
        NPpatches_parameters_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_parameters_V_3_ce1 = grp_wedgePatch_init_fu_1065_wp_parameters7_ce1;
    end else begin
        NPpatches_parameters_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2))) begin
        NPpatches_parameters_V_3_d0 = 1'd0;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_parameters_V_3_d0 = grp_wedgePatch_init_fu_1065_wp_parameters7_d0;
    end else begin
        NPpatches_parameters_V_3_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (select_ln1153_1_reg_3298_pp2_iter1_reg == 3'd3) & (1'b0 == ap_block_pp2_stage2_11001))) begin
        NPpatches_parameters_V_3_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_parameters_V_3_we0 = grp_wedgePatch_init_fu_1065_wp_parameters7_we0;
    end else begin
        NPpatches_parameters_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_parameters_V_3_we1 = grp_wedgePatch_init_fu_1065_wp_parameters7_we1;
    end else begin
        NPpatches_parameters_V_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2))) begin
        NPpatches_parameters_V_4_address0 = zext_ln1159_2_fu_2271_p1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_parameters_V_4_address0 = grp_wedgePatch_init_fu_1065_wp_parameters8_address0;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        NPpatches_parameters_V_4_address0 = grp_add_patch6_fu_1017_wp_parameters8_address0;
    end else begin
        NPpatches_parameters_V_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2_11001))) begin
        NPpatches_parameters_V_4_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_parameters_V_4_ce0 = grp_wedgePatch_init_fu_1065_wp_parameters8_ce0;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        NPpatches_parameters_V_4_ce0 = grp_add_patch6_fu_1017_wp_parameters8_ce0;
    end else begin
        NPpatches_parameters_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_parameters_V_4_ce1 = grp_wedgePatch_init_fu_1065_wp_parameters8_ce1;
    end else begin
        NPpatches_parameters_V_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2))) begin
        NPpatches_parameters_V_4_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_parameters_V_4_d0 = grp_wedgePatch_init_fu_1065_wp_parameters8_d0;
    end else begin
        NPpatches_parameters_V_4_d0 = 'bx;
    end
end

always @ (*) begin
    if ((~(select_ln1153_1_reg_3298_pp2_iter1_reg == 3'd0) & ~(select_ln1153_1_reg_3298_pp2_iter1_reg == 3'd1) & ~(select_ln1153_1_reg_3298_pp2_iter1_reg == 3'd2) & ~(select_ln1153_1_reg_3298_pp2_iter1_reg == 3'd3) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2_11001))) begin
        NPpatches_parameters_V_4_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_parameters_V_4_we0 = grp_wedgePatch_init_fu_1065_wp_parameters8_we0;
    end else begin
        NPpatches_parameters_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_parameters_V_4_we1 = grp_wedgePatch_init_fu_1065_wp_parameters8_we1;
    end else begin
        NPpatches_parameters_V_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage1))) begin
        NPpatches_superpoints_0_V_address0 = zext_ln1147_1_fu_2133_p1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_superpoints_0_V_address0 = grp_wedgePatch_init_fu_1065_wp_superpoints_address0;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        NPpatches_superpoints_0_V_address0 = grp_add_patch6_fu_1017_wp_superpoints_address0;
    end else begin
        NPpatches_superpoints_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_superpoints_0_V_address1 = grp_wedgePatch_init_fu_1065_wp_superpoints_address1;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        NPpatches_superpoints_0_V_address1 = grp_add_patch6_fu_1017_wp_superpoints_address1;
    end else begin
        NPpatches_superpoints_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        NPpatches_superpoints_0_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_superpoints_0_V_ce0 = grp_wedgePatch_init_fu_1065_wp_superpoints_ce0;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        NPpatches_superpoints_0_V_ce0 = grp_add_patch6_fu_1017_wp_superpoints_ce0;
    end else begin
        NPpatches_superpoints_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_superpoints_0_V_ce1 = grp_wedgePatch_init_fu_1065_wp_superpoints_ce1;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        NPpatches_superpoints_0_V_ce1 = grp_add_patch6_fu_1017_wp_superpoints_ce1;
    end else begin
        NPpatches_superpoints_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage1))) begin
        NPpatches_superpoints_0_V_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_superpoints_0_V_d0 = grp_wedgePatch_init_fu_1065_wp_superpoints_d0;
    end else begin
        NPpatches_superpoints_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (select_ln1141_1_reg_3227 == 3'd0) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        NPpatches_superpoints_0_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_superpoints_0_V_we0 = grp_wedgePatch_init_fu_1065_wp_superpoints_we0;
    end else begin
        NPpatches_superpoints_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage1))) begin
        NPpatches_superpoints_1_V_address0 = zext_ln1147_1_fu_2133_p1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_superpoints_1_V_address0 = grp_wedgePatch_init_fu_1065_wp_superpoints1_address0;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        NPpatches_superpoints_1_V_address0 = grp_add_patch6_fu_1017_wp_superpoints1_address0;
    end else begin
        NPpatches_superpoints_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_superpoints_1_V_address1 = grp_wedgePatch_init_fu_1065_wp_superpoints1_address1;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        NPpatches_superpoints_1_V_address1 = grp_add_patch6_fu_1017_wp_superpoints1_address1;
    end else begin
        NPpatches_superpoints_1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        NPpatches_superpoints_1_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_superpoints_1_V_ce0 = grp_wedgePatch_init_fu_1065_wp_superpoints1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        NPpatches_superpoints_1_V_ce0 = grp_add_patch6_fu_1017_wp_superpoints1_ce0;
    end else begin
        NPpatches_superpoints_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_superpoints_1_V_ce1 = grp_wedgePatch_init_fu_1065_wp_superpoints1_ce1;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        NPpatches_superpoints_1_V_ce1 = grp_add_patch6_fu_1017_wp_superpoints1_ce1;
    end else begin
        NPpatches_superpoints_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage1))) begin
        NPpatches_superpoints_1_V_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_superpoints_1_V_d0 = grp_wedgePatch_init_fu_1065_wp_superpoints1_d0;
    end else begin
        NPpatches_superpoints_1_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (select_ln1141_1_reg_3227 == 3'd1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        NPpatches_superpoints_1_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_superpoints_1_V_we0 = grp_wedgePatch_init_fu_1065_wp_superpoints1_we0;
    end else begin
        NPpatches_superpoints_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage1))) begin
        NPpatches_superpoints_2_V_address0 = zext_ln1147_1_fu_2133_p1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_superpoints_2_V_address0 = grp_wedgePatch_init_fu_1065_wp_superpoints2_address0;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        NPpatches_superpoints_2_V_address0 = grp_add_patch6_fu_1017_wp_superpoints2_address0;
    end else begin
        NPpatches_superpoints_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_superpoints_2_V_address1 = grp_wedgePatch_init_fu_1065_wp_superpoints2_address1;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        NPpatches_superpoints_2_V_address1 = grp_add_patch6_fu_1017_wp_superpoints2_address1;
    end else begin
        NPpatches_superpoints_2_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        NPpatches_superpoints_2_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_superpoints_2_V_ce0 = grp_wedgePatch_init_fu_1065_wp_superpoints2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        NPpatches_superpoints_2_V_ce0 = grp_add_patch6_fu_1017_wp_superpoints2_ce0;
    end else begin
        NPpatches_superpoints_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_superpoints_2_V_ce1 = grp_wedgePatch_init_fu_1065_wp_superpoints2_ce1;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        NPpatches_superpoints_2_V_ce1 = grp_add_patch6_fu_1017_wp_superpoints2_ce1;
    end else begin
        NPpatches_superpoints_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage1))) begin
        NPpatches_superpoints_2_V_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_superpoints_2_V_d0 = grp_wedgePatch_init_fu_1065_wp_superpoints2_d0;
    end else begin
        NPpatches_superpoints_2_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (select_ln1141_1_reg_3227 == 3'd2) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        NPpatches_superpoints_2_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_superpoints_2_V_we0 = grp_wedgePatch_init_fu_1065_wp_superpoints2_we0;
    end else begin
        NPpatches_superpoints_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage1))) begin
        NPpatches_superpoints_3_V_address0 = zext_ln1147_1_fu_2133_p1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_superpoints_3_V_address0 = grp_wedgePatch_init_fu_1065_wp_superpoints3_address0;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        NPpatches_superpoints_3_V_address0 = grp_add_patch6_fu_1017_wp_superpoints3_address0;
    end else begin
        NPpatches_superpoints_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_superpoints_3_V_address1 = grp_wedgePatch_init_fu_1065_wp_superpoints3_address1;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        NPpatches_superpoints_3_V_address1 = grp_add_patch6_fu_1017_wp_superpoints3_address1;
    end else begin
        NPpatches_superpoints_3_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        NPpatches_superpoints_3_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_superpoints_3_V_ce0 = grp_wedgePatch_init_fu_1065_wp_superpoints3_ce0;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        NPpatches_superpoints_3_V_ce0 = grp_add_patch6_fu_1017_wp_superpoints3_ce0;
    end else begin
        NPpatches_superpoints_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_superpoints_3_V_ce1 = grp_wedgePatch_init_fu_1065_wp_superpoints3_ce1;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        NPpatches_superpoints_3_V_ce1 = grp_add_patch6_fu_1017_wp_superpoints3_ce1;
    end else begin
        NPpatches_superpoints_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage1))) begin
        NPpatches_superpoints_3_V_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_superpoints_3_V_d0 = grp_wedgePatch_init_fu_1065_wp_superpoints3_d0;
    end else begin
        NPpatches_superpoints_3_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (select_ln1141_1_reg_3227 == 3'd3) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        NPpatches_superpoints_3_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_superpoints_3_V_we0 = grp_wedgePatch_init_fu_1065_wp_superpoints3_we0;
    end else begin
        NPpatches_superpoints_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage1))) begin
        NPpatches_superpoints_4_V_address0 = zext_ln1147_1_fu_2133_p1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_superpoints_4_V_address0 = grp_wedgePatch_init_fu_1065_wp_superpoints4_address0;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        NPpatches_superpoints_4_V_address0 = grp_add_patch6_fu_1017_wp_superpoints4_address0;
    end else begin
        NPpatches_superpoints_4_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_superpoints_4_V_address1 = grp_wedgePatch_init_fu_1065_wp_superpoints4_address1;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        NPpatches_superpoints_4_V_address1 = grp_add_patch6_fu_1017_wp_superpoints4_address1;
    end else begin
        NPpatches_superpoints_4_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        NPpatches_superpoints_4_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_superpoints_4_V_ce0 = grp_wedgePatch_init_fu_1065_wp_superpoints4_ce0;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        NPpatches_superpoints_4_V_ce0 = grp_add_patch6_fu_1017_wp_superpoints4_ce0;
    end else begin
        NPpatches_superpoints_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_superpoints_4_V_ce1 = grp_wedgePatch_init_fu_1065_wp_superpoints4_ce1;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        NPpatches_superpoints_4_V_ce1 = grp_add_patch6_fu_1017_wp_superpoints4_ce1;
    end else begin
        NPpatches_superpoints_4_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage1))) begin
        NPpatches_superpoints_4_V_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_superpoints_4_V_d0 = grp_wedgePatch_init_fu_1065_wp_superpoints4_d0;
    end else begin
        NPpatches_superpoints_4_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((~(select_ln1141_1_reg_3227 == 3'd0) & ~(select_ln1141_1_reg_3227 == 3'd1) & ~(select_ln1141_1_reg_3227 == 3'd2) & ~(select_ln1141_1_reg_3227 == 3'd3) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        NPpatches_superpoints_4_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        NPpatches_superpoints_4_V_we0 = grp_wedgePatch_init_fu_1065_wp_superpoints4_we0;
    end else begin
        NPpatches_superpoints_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1116_fu_1837_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state405 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state405 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1141_fu_2008_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state414 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state414 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1153_fu_2147_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state420 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state420 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state574) & (1'b0 == ap_block_state574_on_subcall_done)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1116_reg_3093 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_a_phi_fu_815_p4 = select_ln1116_1_reg_3125;
    end else begin
        ap_phi_mux_a_phi_fu_815_p4 = a_reg_811;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1141_reg_3195 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_b_1_phi_fu_898_p4 = select_ln1141_1_reg_3227;
    end else begin
        ap_phi_mux_b_1_phi_fu_898_p4 = b_1_reg_894;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln1153_reg_3274 == 1'd0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_b_2_phi_fu_957_p4 = select_ln1153_1_reg_3298;
    end else begin
        ap_phi_mux_b_2_phi_fu_957_p4 = b_2_reg_953;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1116_reg_3093_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_phi_mux_b_phi_fu_839_p4 = select_ln1118_2_reg_3152;
    end else begin
        ap_phi_mux_b_phi_fu_839_p4 = b_reg_835;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1141_reg_3195_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage1))) begin
        ap_phi_mux_c_1_phi_fu_922_p4 = select_ln1143_2_reg_3254;
    end else begin
        ap_phi_mux_c_1_phi_fu_922_p4 = c_1_reg_918;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln1153_reg_3274_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage1))) begin
        ap_phi_mux_c_2_phi_fu_981_p4 = select_ln1155_1_reg_3330;
    end else begin
        ap_phi_mux_c_2_phi_fu_981_p4 = c_2_reg_977;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1116_reg_3093_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_phi_mux_c_phi_fu_851_p4 = add_ln1120_reg_3162;
    end else begin
        ap_phi_mux_c_phi_fu_851_p4 = c_reg_847;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln1153_reg_3274_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage2))) begin
        ap_phi_mux_d_1_phi_fu_993_p4 = add_ln1157_reg_3346;
    end else begin
        ap_phi_mux_d_1_phi_fu_993_p4 = d_1_reg_989;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1141_reg_3195_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage1))) begin
        ap_phi_mux_d_phi_fu_934_p4 = add_ln1145_reg_3264;
    end else begin
        ap_phi_mux_d_phi_fu_934_p4 = d_reg_930;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1116_reg_3093 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten13_phi_fu_804_p4 = add_ln1116_1_reg_3088;
    end else begin
        ap_phi_mux_indvar_flatten13_phi_fu_804_p4 = indvar_flatten13_reg_800;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1141_reg_3195 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_indvar_flatten21_phi_fu_910_p4 = select_ln1143_3_reg_3249;
    end else begin
        ap_phi_mux_indvar_flatten21_phi_fu_910_p4 = indvar_flatten21_reg_906;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1141_reg_3195 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_indvar_flatten35_phi_fu_887_p4 = add_ln1141_1_reg_3190;
    end else begin
        ap_phi_mux_indvar_flatten35_phi_fu_887_p4 = indvar_flatten35_reg_883;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln1153_reg_3274 == 1'd0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_indvar_flatten43_phi_fu_969_p4 = select_ln1155_2_reg_3319;
    end else begin
        ap_phi_mux_indvar_flatten43_phi_fu_969_p4 = indvar_flatten43_reg_965;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln1153_reg_3274 == 1'd0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_indvar_flatten57_phi_fu_946_p4 = add_ln1153_1_reg_3269;
    end else begin
        ap_phi_mux_indvar_flatten57_phi_fu_946_p4 = indvar_flatten57_reg_942;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1116_reg_3093 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_827_p4 = select_ln1118_3_reg_3147;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_827_p4 = indvar_flatten_reg_823;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state574) & (1'b0 == ap_block_state574_on_subcall_done))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((makeHorizontallyShiftedPatch_reg_776 == 1'd1)) begin
        if ((1'b1 == ap_condition_6662)) begin
            grp_delete_patch_fu_1104_index = zext_ln861_reg_3580;
        end else if ((1'b1 == ap_CS_fsm_state404)) begin
            grp_delete_patch_fu_1104_index = add_ln811_reg_3083;
        end else begin
            grp_delete_patch_fu_1104_index = 'bx;
        end
    end else begin
        grp_delete_patch_fu_1104_index = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state326)) begin
        grp_fu_1116_p0 = bitcast_ln521_5_fu_1585_p1;
    end else if ((1'b1 == ap_CS_fsm_state245)) begin
        grp_fu_1116_p0 = bitcast_ln521_4_fu_1506_p1;
    end else if ((1'b1 == ap_CS_fsm_state164)) begin
        grp_fu_1116_p0 = bitcast_ln521_3_fu_1423_p1;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        grp_fu_1116_p0 = bitcast_ln521_fu_1344_p1;
    end else begin
        grp_fu_1116_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state4) & (grp_getShadows_fu_1001_ap_done == 1'b1)))) begin
        grp_fu_1201_ce = 1'b1;
    end else begin
        grp_fu_1201_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state4) & (grp_getShadows_fu_1001_ap_done == 1'b1)))) begin
        grp_fu_1229_ce = 1'b1;
    end else begin
        grp_fu_1229_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state6) & (grp_getShadows_fu_1001_ap_done == 1'b1)))) begin
        grp_fu_1235_ce = 1'b1;
    end else begin
        grp_fu_1235_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state431) | ((1'b1 == ap_CS_fsm_state432) & (grp_getShadows_fu_1001_ap_done == 1'b1)))) begin
        grp_fu_2317_ce = 1'b1;
    end else begin
        grp_fu_2317_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state432)) begin
        grp_getShadows_fu_1001_wp_parameters_offset = add_ln817_1_reg_3362;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_getShadows_fu_1001_wp_parameters_offset = trunc_ln723_reg_2576;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_getShadows_fu_1001_wp_parameters_offset = trunc_ln732_reg_2564;
    end else begin
        grp_getShadows_fu_1001_wp_parameters_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state432)) begin
        grp_getShadows_fu_1001_wp_superpoints = add_ln817_reg_3351;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_getShadows_fu_1001_wp_superpoints = zext_ln721_reg_2637;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_getShadows_fu_1001_wp_superpoints = zext_ln720_reg_2606;
    end else begin
        grp_getShadows_fu_1001_wp_superpoints = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state507)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1089_z_i = trunc_ln164_fu_2517_p1;
    end else if (((1'b1 == ap_CS_fsm_state441) & (shiftOriginal_1_reg_2986 == 1'd1))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1089_z_i = original_topR_jR_V_3_reg_3465;
    end else if ((1'b1 == ap_CS_fsm_state331)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1089_z_i = apexZ0;
    end else if ((1'b1 == ap_CS_fsm_state330)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1089_z_i = complementary_apexZ0;
    end else if (((1'b1 == ap_CS_fsm_state256) & (icmp_ln878_5_reg_2877 == 1'd1))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1089_z_i = complementary_topL_jR_V_3_reg_2859;
    end else if ((1'b1 == ap_CS_fsm_state175)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1089_z_i = complementary_topR_jR_V_3_reg_2806;
    end else if (((icmp_ln878_3_reg_2777 == 1'd1) & (1'b1 == ap_CS_fsm_state94))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1089_z_i = original_topL_jL_V_3_reg_2759;
    end else if (((1'd1 == and_ln724_reg_2690) & (1'b1 == ap_CS_fsm_state13))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1089_z_i = original_topR_jL_V_reg_2652;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1089_z_i = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state507)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1089_z_j = newZtop_V_reg_764;
    end else if (((1'b1 == ap_CS_fsm_state330) | ((icmp_ln878_3_reg_2777 == 1'd1) & (1'b1 == ap_CS_fsm_state94)) | ((1'b1 == ap_CS_fsm_state256) & (icmp_ln878_5_reg_2877 == 1'd1)))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1089_z_j = z_top_min;
    end else if (((1'b1 == ap_CS_fsm_state175) | (1'b1 == ap_CS_fsm_state331) | ((1'd1 == and_ln724_reg_2690) & (1'b1 == ap_CS_fsm_state13)) | ((1'b1 == ap_CS_fsm_state441) & (shiftOriginal_1_reg_2986 == 1'd1)))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1089_z_j = z_top_max;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_1089_z_j = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        init_patch_V_0_address0 = zext_ln1122_1_fu_1962_p1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        init_patch_V_0_address0 = grp_wedgePatch_init_fu_1065_superpointsI_address0;
    end else if ((1'b1 == ap_CS_fsm_state413)) begin
        init_patch_V_0_address0 = grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch_address0;
    end else begin
        init_patch_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        init_patch_V_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        init_patch_V_0_ce0 = grp_wedgePatch_init_fu_1065_superpointsI_ce0;
    end else if ((1'b1 == ap_CS_fsm_state413)) begin
        init_patch_V_0_ce0 = grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch_ce0;
    end else begin
        init_patch_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        init_patch_V_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state413)) begin
        init_patch_V_0_d0 = grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch_d0;
    end else begin
        init_patch_V_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (select_ln1116_1_reg_3125 == 3'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        init_patch_V_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state413)) begin
        init_patch_V_0_we0 = grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch_we0;
    end else begin
        init_patch_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        init_patch_V_1_address0 = zext_ln1122_1_fu_1962_p1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        init_patch_V_1_address0 = grp_wedgePatch_init_fu_1065_superpointsI9_address0;
    end else if ((1'b1 == ap_CS_fsm_state413)) begin
        init_patch_V_1_address0 = grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch1_address0;
    end else begin
        init_patch_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        init_patch_V_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        init_patch_V_1_ce0 = grp_wedgePatch_init_fu_1065_superpointsI9_ce0;
    end else if ((1'b1 == ap_CS_fsm_state413)) begin
        init_patch_V_1_ce0 = grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch1_ce0;
    end else begin
        init_patch_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        init_patch_V_1_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state413)) begin
        init_patch_V_1_d0 = grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch1_d0;
    end else begin
        init_patch_V_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (select_ln1116_1_reg_3125 == 3'd1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        init_patch_V_1_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state413)) begin
        init_patch_V_1_we0 = grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch1_we0;
    end else begin
        init_patch_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        init_patch_V_2_address0 = zext_ln1122_1_fu_1962_p1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        init_patch_V_2_address0 = grp_wedgePatch_init_fu_1065_superpointsI10_address0;
    end else if ((1'b1 == ap_CS_fsm_state413)) begin
        init_patch_V_2_address0 = grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch2_address0;
    end else begin
        init_patch_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        init_patch_V_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        init_patch_V_2_ce0 = grp_wedgePatch_init_fu_1065_superpointsI10_ce0;
    end else if ((1'b1 == ap_CS_fsm_state413)) begin
        init_patch_V_2_ce0 = grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch2_ce0;
    end else begin
        init_patch_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        init_patch_V_2_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state413)) begin
        init_patch_V_2_d0 = grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch2_d0;
    end else begin
        init_patch_V_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (select_ln1116_1_reg_3125 == 3'd2) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        init_patch_V_2_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state413)) begin
        init_patch_V_2_we0 = grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch2_we0;
    end else begin
        init_patch_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        init_patch_V_3_address0 = zext_ln1122_1_fu_1962_p1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        init_patch_V_3_address0 = grp_wedgePatch_init_fu_1065_superpointsI11_address0;
    end else if ((1'b1 == ap_CS_fsm_state413)) begin
        init_patch_V_3_address0 = grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch3_address0;
    end else begin
        init_patch_V_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        init_patch_V_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        init_patch_V_3_ce0 = grp_wedgePatch_init_fu_1065_superpointsI11_ce0;
    end else if ((1'b1 == ap_CS_fsm_state413)) begin
        init_patch_V_3_ce0 = grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch3_ce0;
    end else begin
        init_patch_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        init_patch_V_3_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state413)) begin
        init_patch_V_3_d0 = grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch3_d0;
    end else begin
        init_patch_V_3_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (select_ln1116_1_reg_3125 == 3'd3) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        init_patch_V_3_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state413)) begin
        init_patch_V_3_we0 = grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch3_we0;
    end else begin
        init_patch_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        init_patch_V_4_address0 = zext_ln1122_1_fu_1962_p1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        init_patch_V_4_address0 = grp_wedgePatch_init_fu_1065_superpointsI12_address0;
    end else if ((1'b1 == ap_CS_fsm_state413)) begin
        init_patch_V_4_address0 = grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch4_address0;
    end else begin
        init_patch_V_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        init_patch_V_4_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state427)) begin
        init_patch_V_4_ce0 = grp_wedgePatch_init_fu_1065_superpointsI12_ce0;
    end else if ((1'b1 == ap_CS_fsm_state413)) begin
        init_patch_V_4_ce0 = grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch4_ce0;
    end else begin
        init_patch_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        init_patch_V_4_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state413)) begin
        init_patch_V_4_d0 = grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch4_d0;
    end else begin
        init_patch_V_4_d0 = 'bx;
    end
end

always @ (*) begin
    if ((~(select_ln1116_1_reg_3125 == 3'd0) & ~(select_ln1116_1_reg_3125 == 3'd1) & ~(select_ln1116_1_reg_3125 == 3'd2) & ~(select_ln1116_1_reg_3125 == 3'd3) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        init_patch_V_4_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state413)) begin
        init_patch_V_4_we0 = grp_makeSuperPoint_alignedToLine8_fu_1038_init_patch4_we0;
    end else begin
        init_patch_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((makeHorizontallyShiftedPatch_reg_776 == 1'd1) & (grp_delete_patch_fu_1104_n_patches_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state404)) | ((1'd1 == and_ln857_reg_3567) & (makeHorizontallyShiftedPatch_reg_776 == 1'd1) & (grp_delete_patch_fu_1104_n_patches_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state574) & (icmp_ln859_reg_3571 == 1'd1)))) begin
        n_patches_o = grp_delete_patch_fu_1104_n_patches;
    end else if (((1'b1 == ap_CS_fsm_state429) & (grp_add_patch6_fu_1017_n_patches_ap_vld == 1'b1))) begin
        n_patches_o = grp_add_patch6_fu_1017_n_patches;
    end else begin
        n_patches_o = n_patches_i;
    end
end

always @ (*) begin
    if ((((makeHorizontallyShiftedPatch_reg_776 == 1'd1) & (1'b1 == ap_CS_fsm_state404)) | ((1'd1 == and_ln857_reg_3567) & (makeHorizontallyShiftedPatch_reg_776 == 1'd1) & (1'b1 == ap_CS_fsm_state574) & (icmp_ln859_reg_3571 == 1'd1)))) begin
        n_patches_o_ap_vld = grp_delete_patch_fu_1104_n_patches_ap_vld;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        n_patches_o_ap_vld = grp_add_patch6_fu_1017_n_patches_ap_vld;
    end else begin
        n_patches_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state436)) begin
        patches_parameters_address0 = zext_ln823_fu_2351_p1;
    end else if ((1'b1 == ap_CS_fsm_state435)) begin
        patches_parameters_address0 = zext_ln821_fu_2343_p1;
    end else if ((1'b1 == ap_CS_fsm_state390)) begin
        patches_parameters_address0 = patches_parameters_addr_18_reg_2724;
    end else if ((1'b1 == ap_CS_fsm_state389)) begin
        patches_parameters_address0 = patches_parameters_addr_17_reg_2714;
    end else if ((1'b1 == ap_CS_fsm_state249)) begin
        patches_parameters_address0 = patches_parameters_addr_15_reg_2704;
    end else if ((1'b1 == ap_CS_fsm_state168)) begin
        patches_parameters_address0 = patches_parameters_addr_14_reg_2699;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        patches_parameters_address0 = patches_parameters_addr_13_reg_2719;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        patches_parameters_address0 = zext_ln723_1_fu_1244_p1;
    end else if ((((makeHorizontallyShiftedPatch_reg_776 == 1'd1) & (1'b1 == ap_CS_fsm_state404)) | ((1'd1 == and_ln857_reg_3567) & (makeHorizontallyShiftedPatch_reg_776 == 1'd1) & (1'b1 == ap_CS_fsm_state574) & (icmp_ln859_reg_3571 == 1'd1)))) begin
        patches_parameters_address0 = grp_delete_patch_fu_1104_patches_parameters_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        patches_parameters_address0 = grp_add_patch6_fu_1017_patches_parameters_address0;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state432))) begin
        patches_parameters_address0 = grp_getShadows_fu_1001_wp_parameters_address0;
    end else begin
        patches_parameters_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state436)) begin
        patches_parameters_address1 = zext_ln824_fu_2355_p1;
    end else if ((1'b1 == ap_CS_fsm_state435)) begin
        patches_parameters_address1 = zext_ln822_fu_2347_p1;
    end else if ((1'b1 == ap_CS_fsm_state390)) begin
        patches_parameters_address1 = patches_parameters_addr_19_reg_2729;
    end else if ((1'b1 == ap_CS_fsm_state389)) begin
        patches_parameters_address1 = patches_parameters_addr_16_reg_2709;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state432))) begin
        patches_parameters_address1 = grp_getShadows_fu_1001_wp_parameters_address1;
    end else begin
        patches_parameters_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state171) | (1'b1 == ap_CS_fsm_state168) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state439) | (1'b1 == ap_CS_fsm_state438) | (1'b1 == ap_CS_fsm_state392) | (1'b1 == ap_CS_fsm_state437) | (1'b1 == ap_CS_fsm_state391) | (1'b1 == ap_CS_fsm_state390) | (1'b1 == ap_CS_fsm_state389) | (1'b1 == ap_CS_fsm_state251) | (1'b1 == ap_CS_fsm_state250) | (1'b1 == ap_CS_fsm_state170) | (1'b1 == ap_CS_fsm_state169) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state436) | (1'b1 == ap_CS_fsm_state435) | (1'b1 == ap_CS_fsm_state393) | (1'b1 == ap_CS_fsm_state252) | (1'b1 == ap_CS_fsm_state249))) begin
        patches_parameters_ce0 = 1'b1;
    end else if ((((makeHorizontallyShiftedPatch_reg_776 == 1'd1) & (1'b1 == ap_CS_fsm_state404)) | ((1'd1 == and_ln857_reg_3567) & (makeHorizontallyShiftedPatch_reg_776 == 1'd1) & (1'b1 == ap_CS_fsm_state574) & (icmp_ln859_reg_3571 == 1'd1)))) begin
        patches_parameters_ce0 = grp_delete_patch_fu_1104_patches_parameters_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        patches_parameters_ce0 = grp_add_patch6_fu_1017_patches_parameters_ce0;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state432))) begin
        patches_parameters_ce0 = grp_getShadows_fu_1001_wp_parameters_ce0;
    end else begin
        patches_parameters_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state439) | (1'b1 == ap_CS_fsm_state438) | (1'b1 == ap_CS_fsm_state392) | (1'b1 == ap_CS_fsm_state437) | (1'b1 == ap_CS_fsm_state391) | (1'b1 == ap_CS_fsm_state390) | (1'b1 == ap_CS_fsm_state389) | (1'b1 == ap_CS_fsm_state436) | (1'b1 == ap_CS_fsm_state435) | (1'b1 == ap_CS_fsm_state393))) begin
        patches_parameters_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state432))) begin
        patches_parameters_ce1 = grp_getShadows_fu_1001_wp_parameters_ce1;
    end else begin
        patches_parameters_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((makeHorizontallyShiftedPatch_reg_776 == 1'd1) & (1'b1 == ap_CS_fsm_state404)) | ((1'd1 == and_ln857_reg_3567) & (makeHorizontallyShiftedPatch_reg_776 == 1'd1) & (1'b1 == ap_CS_fsm_state574) & (icmp_ln859_reg_3571 == 1'd1)))) begin
        patches_parameters_d0 = grp_delete_patch_fu_1104_patches_parameters_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        patches_parameters_d0 = grp_add_patch6_fu_1017_patches_parameters_d0;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state432))) begin
        patches_parameters_d0 = grp_getShadows_fu_1001_wp_parameters_d0;
    end else begin
        patches_parameters_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((makeHorizontallyShiftedPatch_reg_776 == 1'd1) & (1'b1 == ap_CS_fsm_state404)) | ((1'd1 == and_ln857_reg_3567) & (makeHorizontallyShiftedPatch_reg_776 == 1'd1) & (1'b1 == ap_CS_fsm_state574) & (icmp_ln859_reg_3571 == 1'd1)))) begin
        patches_parameters_we0 = grp_delete_patch_fu_1104_patches_parameters_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        patches_parameters_we0 = grp_add_patch6_fu_1017_patches_parameters_we0;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state432))) begin
        patches_parameters_we0 = grp_getShadows_fu_1001_wp_parameters_we0;
    end else begin
        patches_parameters_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state432))) begin
        patches_parameters_we1 = grp_getShadows_fu_1001_wp_parameters_we1;
    end else begin
        patches_parameters_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((makeHorizontallyShiftedPatch_reg_776 == 1'd1) & (1'b1 == ap_CS_fsm_state404)) | ((1'd1 == and_ln857_reg_3567) & (makeHorizontallyShiftedPatch_reg_776 == 1'd1) & (1'b1 == ap_CS_fsm_state574) & (icmp_ln859_reg_3571 == 1'd1)))) begin
        patches_superpoints_address0 = grp_delete_patch_fu_1104_patches_superpoints_address0;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        patches_superpoints_address0 = grp_add_patch6_fu_1017_patches_superpoints_address0;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state432))) begin
        patches_superpoints_address0 = grp_getShadows_fu_1001_patches_superpoints_address0;
    end else begin
        patches_superpoints_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((makeHorizontallyShiftedPatch_reg_776 == 1'd1) & (1'b1 == ap_CS_fsm_state404)) | ((1'd1 == and_ln857_reg_3567) & (makeHorizontallyShiftedPatch_reg_776 == 1'd1) & (1'b1 == ap_CS_fsm_state574) & (icmp_ln859_reg_3571 == 1'd1)))) begin
        patches_superpoints_ce0 = grp_delete_patch_fu_1104_patches_superpoints_ce0;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        patches_superpoints_ce0 = grp_add_patch6_fu_1017_patches_superpoints_ce0;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state432))) begin
        patches_superpoints_ce0 = grp_getShadows_fu_1001_patches_superpoints_ce0;
    end else begin
        patches_superpoints_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((makeHorizontallyShiftedPatch_reg_776 == 1'd1) & (1'b1 == ap_CS_fsm_state404)) | ((1'd1 == and_ln857_reg_3567) & (makeHorizontallyShiftedPatch_reg_776 == 1'd1) & (1'b1 == ap_CS_fsm_state574) & (icmp_ln859_reg_3571 == 1'd1)))) begin
        patches_superpoints_d0 = grp_delete_patch_fu_1104_patches_superpoints_d0;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        patches_superpoints_d0 = grp_add_patch6_fu_1017_patches_superpoints_d0;
    end else begin
        patches_superpoints_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((makeHorizontallyShiftedPatch_reg_776 == 1'd1) & (1'b1 == ap_CS_fsm_state404)) | ((1'd1 == and_ln857_reg_3567) & (makeHorizontallyShiftedPatch_reg_776 == 1'd1) & (1'b1 == ap_CS_fsm_state574) & (icmp_ln859_reg_3571 == 1'd1)))) begin
        patches_superpoints_we0 = grp_delete_patch_fu_1104_patches_superpoints_we0;
    end else if ((1'b1 == ap_CS_fsm_state429)) begin
        patches_superpoints_we0 = grp_add_patch6_fu_1017_patches_superpoints_we0;
    end else begin
        patches_superpoints_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_getShadows_fu_1001_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (grp_getShadows_fu_1001_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (1'd0 == and_ln724_reg_2690))) begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            if (((icmp_ln886_3_reg_2768 == 1'd0) & (1'b1 == ap_CS_fsm_state92))) begin
                ap_NS_fsm = ap_ST_fsm_state168;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state93;
            end
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            if (((icmp_ln878_3_reg_2777 == 1'd0) & (1'b1 == ap_CS_fsm_state94))) begin
                ap_NS_fsm = ap_ST_fsm_state168;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state153 : begin
            ap_NS_fsm = ap_ST_fsm_state154;
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state156;
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state157;
        end
        ap_ST_fsm_state157 : begin
            ap_NS_fsm = ap_ST_fsm_state158;
        end
        ap_ST_fsm_state158 : begin
            ap_NS_fsm = ap_ST_fsm_state159;
        end
        ap_ST_fsm_state159 : begin
            ap_NS_fsm = ap_ST_fsm_state160;
        end
        ap_ST_fsm_state160 : begin
            ap_NS_fsm = ap_ST_fsm_state161;
        end
        ap_ST_fsm_state161 : begin
            ap_NS_fsm = ap_ST_fsm_state162;
        end
        ap_ST_fsm_state162 : begin
            ap_NS_fsm = ap_ST_fsm_state163;
        end
        ap_ST_fsm_state163 : begin
            ap_NS_fsm = ap_ST_fsm_state164;
        end
        ap_ST_fsm_state164 : begin
            ap_NS_fsm = ap_ST_fsm_state165;
        end
        ap_ST_fsm_state165 : begin
            ap_NS_fsm = ap_ST_fsm_state166;
        end
        ap_ST_fsm_state166 : begin
            ap_NS_fsm = ap_ST_fsm_state167;
        end
        ap_ST_fsm_state167 : begin
            ap_NS_fsm = ap_ST_fsm_state168;
        end
        ap_ST_fsm_state168 : begin
            ap_NS_fsm = ap_ST_fsm_state169;
        end
        ap_ST_fsm_state169 : begin
            ap_NS_fsm = ap_ST_fsm_state170;
        end
        ap_ST_fsm_state170 : begin
            ap_NS_fsm = ap_ST_fsm_state171;
        end
        ap_ST_fsm_state171 : begin
            ap_NS_fsm = ap_ST_fsm_state172;
        end
        ap_ST_fsm_state172 : begin
            ap_NS_fsm = ap_ST_fsm_state173;
        end
        ap_ST_fsm_state173 : begin
            ap_NS_fsm = ap_ST_fsm_state174;
        end
        ap_ST_fsm_state174 : begin
            if (((1'b1 == ap_CS_fsm_state174) & (1'd0 == and_ln734_fu_1490_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state249;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state175;
            end
        end
        ap_ST_fsm_state175 : begin
            ap_NS_fsm = ap_ST_fsm_state176;
        end
        ap_ST_fsm_state176 : begin
            ap_NS_fsm = ap_ST_fsm_state177;
        end
        ap_ST_fsm_state177 : begin
            ap_NS_fsm = ap_ST_fsm_state178;
        end
        ap_ST_fsm_state178 : begin
            ap_NS_fsm = ap_ST_fsm_state179;
        end
        ap_ST_fsm_state179 : begin
            ap_NS_fsm = ap_ST_fsm_state180;
        end
        ap_ST_fsm_state180 : begin
            ap_NS_fsm = ap_ST_fsm_state181;
        end
        ap_ST_fsm_state181 : begin
            ap_NS_fsm = ap_ST_fsm_state182;
        end
        ap_ST_fsm_state182 : begin
            ap_NS_fsm = ap_ST_fsm_state183;
        end
        ap_ST_fsm_state183 : begin
            ap_NS_fsm = ap_ST_fsm_state184;
        end
        ap_ST_fsm_state184 : begin
            ap_NS_fsm = ap_ST_fsm_state185;
        end
        ap_ST_fsm_state185 : begin
            ap_NS_fsm = ap_ST_fsm_state186;
        end
        ap_ST_fsm_state186 : begin
            ap_NS_fsm = ap_ST_fsm_state187;
        end
        ap_ST_fsm_state187 : begin
            ap_NS_fsm = ap_ST_fsm_state188;
        end
        ap_ST_fsm_state188 : begin
            ap_NS_fsm = ap_ST_fsm_state189;
        end
        ap_ST_fsm_state189 : begin
            ap_NS_fsm = ap_ST_fsm_state190;
        end
        ap_ST_fsm_state190 : begin
            ap_NS_fsm = ap_ST_fsm_state191;
        end
        ap_ST_fsm_state191 : begin
            ap_NS_fsm = ap_ST_fsm_state192;
        end
        ap_ST_fsm_state192 : begin
            ap_NS_fsm = ap_ST_fsm_state193;
        end
        ap_ST_fsm_state193 : begin
            ap_NS_fsm = ap_ST_fsm_state194;
        end
        ap_ST_fsm_state194 : begin
            ap_NS_fsm = ap_ST_fsm_state195;
        end
        ap_ST_fsm_state195 : begin
            ap_NS_fsm = ap_ST_fsm_state196;
        end
        ap_ST_fsm_state196 : begin
            ap_NS_fsm = ap_ST_fsm_state197;
        end
        ap_ST_fsm_state197 : begin
            ap_NS_fsm = ap_ST_fsm_state198;
        end
        ap_ST_fsm_state198 : begin
            ap_NS_fsm = ap_ST_fsm_state199;
        end
        ap_ST_fsm_state199 : begin
            ap_NS_fsm = ap_ST_fsm_state200;
        end
        ap_ST_fsm_state200 : begin
            ap_NS_fsm = ap_ST_fsm_state201;
        end
        ap_ST_fsm_state201 : begin
            ap_NS_fsm = ap_ST_fsm_state202;
        end
        ap_ST_fsm_state202 : begin
            ap_NS_fsm = ap_ST_fsm_state203;
        end
        ap_ST_fsm_state203 : begin
            ap_NS_fsm = ap_ST_fsm_state204;
        end
        ap_ST_fsm_state204 : begin
            ap_NS_fsm = ap_ST_fsm_state205;
        end
        ap_ST_fsm_state205 : begin
            ap_NS_fsm = ap_ST_fsm_state206;
        end
        ap_ST_fsm_state206 : begin
            ap_NS_fsm = ap_ST_fsm_state207;
        end
        ap_ST_fsm_state207 : begin
            ap_NS_fsm = ap_ST_fsm_state208;
        end
        ap_ST_fsm_state208 : begin
            ap_NS_fsm = ap_ST_fsm_state209;
        end
        ap_ST_fsm_state209 : begin
            ap_NS_fsm = ap_ST_fsm_state210;
        end
        ap_ST_fsm_state210 : begin
            ap_NS_fsm = ap_ST_fsm_state211;
        end
        ap_ST_fsm_state211 : begin
            ap_NS_fsm = ap_ST_fsm_state212;
        end
        ap_ST_fsm_state212 : begin
            ap_NS_fsm = ap_ST_fsm_state213;
        end
        ap_ST_fsm_state213 : begin
            ap_NS_fsm = ap_ST_fsm_state214;
        end
        ap_ST_fsm_state214 : begin
            ap_NS_fsm = ap_ST_fsm_state215;
        end
        ap_ST_fsm_state215 : begin
            ap_NS_fsm = ap_ST_fsm_state216;
        end
        ap_ST_fsm_state216 : begin
            ap_NS_fsm = ap_ST_fsm_state217;
        end
        ap_ST_fsm_state217 : begin
            ap_NS_fsm = ap_ST_fsm_state218;
        end
        ap_ST_fsm_state218 : begin
            ap_NS_fsm = ap_ST_fsm_state219;
        end
        ap_ST_fsm_state219 : begin
            ap_NS_fsm = ap_ST_fsm_state220;
        end
        ap_ST_fsm_state220 : begin
            ap_NS_fsm = ap_ST_fsm_state221;
        end
        ap_ST_fsm_state221 : begin
            ap_NS_fsm = ap_ST_fsm_state222;
        end
        ap_ST_fsm_state222 : begin
            ap_NS_fsm = ap_ST_fsm_state223;
        end
        ap_ST_fsm_state223 : begin
            ap_NS_fsm = ap_ST_fsm_state224;
        end
        ap_ST_fsm_state224 : begin
            ap_NS_fsm = ap_ST_fsm_state225;
        end
        ap_ST_fsm_state225 : begin
            ap_NS_fsm = ap_ST_fsm_state226;
        end
        ap_ST_fsm_state226 : begin
            ap_NS_fsm = ap_ST_fsm_state227;
        end
        ap_ST_fsm_state227 : begin
            ap_NS_fsm = ap_ST_fsm_state228;
        end
        ap_ST_fsm_state228 : begin
            ap_NS_fsm = ap_ST_fsm_state229;
        end
        ap_ST_fsm_state229 : begin
            ap_NS_fsm = ap_ST_fsm_state230;
        end
        ap_ST_fsm_state230 : begin
            ap_NS_fsm = ap_ST_fsm_state231;
        end
        ap_ST_fsm_state231 : begin
            ap_NS_fsm = ap_ST_fsm_state232;
        end
        ap_ST_fsm_state232 : begin
            ap_NS_fsm = ap_ST_fsm_state233;
        end
        ap_ST_fsm_state233 : begin
            ap_NS_fsm = ap_ST_fsm_state234;
        end
        ap_ST_fsm_state234 : begin
            ap_NS_fsm = ap_ST_fsm_state235;
        end
        ap_ST_fsm_state235 : begin
            ap_NS_fsm = ap_ST_fsm_state236;
        end
        ap_ST_fsm_state236 : begin
            ap_NS_fsm = ap_ST_fsm_state237;
        end
        ap_ST_fsm_state237 : begin
            ap_NS_fsm = ap_ST_fsm_state238;
        end
        ap_ST_fsm_state238 : begin
            ap_NS_fsm = ap_ST_fsm_state239;
        end
        ap_ST_fsm_state239 : begin
            ap_NS_fsm = ap_ST_fsm_state240;
        end
        ap_ST_fsm_state240 : begin
            ap_NS_fsm = ap_ST_fsm_state241;
        end
        ap_ST_fsm_state241 : begin
            ap_NS_fsm = ap_ST_fsm_state242;
        end
        ap_ST_fsm_state242 : begin
            ap_NS_fsm = ap_ST_fsm_state243;
        end
        ap_ST_fsm_state243 : begin
            ap_NS_fsm = ap_ST_fsm_state244;
        end
        ap_ST_fsm_state244 : begin
            ap_NS_fsm = ap_ST_fsm_state245;
        end
        ap_ST_fsm_state245 : begin
            ap_NS_fsm = ap_ST_fsm_state246;
        end
        ap_ST_fsm_state246 : begin
            ap_NS_fsm = ap_ST_fsm_state247;
        end
        ap_ST_fsm_state247 : begin
            ap_NS_fsm = ap_ST_fsm_state248;
        end
        ap_ST_fsm_state248 : begin
            ap_NS_fsm = ap_ST_fsm_state249;
        end
        ap_ST_fsm_state249 : begin
            ap_NS_fsm = ap_ST_fsm_state250;
        end
        ap_ST_fsm_state250 : begin
            ap_NS_fsm = ap_ST_fsm_state251;
        end
        ap_ST_fsm_state251 : begin
            ap_NS_fsm = ap_ST_fsm_state252;
        end
        ap_ST_fsm_state252 : begin
            ap_NS_fsm = ap_ST_fsm_state253;
        end
        ap_ST_fsm_state253 : begin
            ap_NS_fsm = ap_ST_fsm_state254;
        end
        ap_ST_fsm_state254 : begin
            if (((1'b1 == ap_CS_fsm_state254) & (icmp_ln886_5_reg_2868 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state330;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state255;
            end
        end
        ap_ST_fsm_state255 : begin
            ap_NS_fsm = ap_ST_fsm_state256;
        end
        ap_ST_fsm_state256 : begin
            if (((1'b1 == ap_CS_fsm_state256) & (icmp_ln878_5_reg_2877 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state330;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state257;
            end
        end
        ap_ST_fsm_state257 : begin
            ap_NS_fsm = ap_ST_fsm_state258;
        end
        ap_ST_fsm_state258 : begin
            ap_NS_fsm = ap_ST_fsm_state259;
        end
        ap_ST_fsm_state259 : begin
            ap_NS_fsm = ap_ST_fsm_state260;
        end
        ap_ST_fsm_state260 : begin
            ap_NS_fsm = ap_ST_fsm_state261;
        end
        ap_ST_fsm_state261 : begin
            ap_NS_fsm = ap_ST_fsm_state262;
        end
        ap_ST_fsm_state262 : begin
            ap_NS_fsm = ap_ST_fsm_state263;
        end
        ap_ST_fsm_state263 : begin
            ap_NS_fsm = ap_ST_fsm_state264;
        end
        ap_ST_fsm_state264 : begin
            ap_NS_fsm = ap_ST_fsm_state265;
        end
        ap_ST_fsm_state265 : begin
            ap_NS_fsm = ap_ST_fsm_state266;
        end
        ap_ST_fsm_state266 : begin
            ap_NS_fsm = ap_ST_fsm_state267;
        end
        ap_ST_fsm_state267 : begin
            ap_NS_fsm = ap_ST_fsm_state268;
        end
        ap_ST_fsm_state268 : begin
            ap_NS_fsm = ap_ST_fsm_state269;
        end
        ap_ST_fsm_state269 : begin
            ap_NS_fsm = ap_ST_fsm_state270;
        end
        ap_ST_fsm_state270 : begin
            ap_NS_fsm = ap_ST_fsm_state271;
        end
        ap_ST_fsm_state271 : begin
            ap_NS_fsm = ap_ST_fsm_state272;
        end
        ap_ST_fsm_state272 : begin
            ap_NS_fsm = ap_ST_fsm_state273;
        end
        ap_ST_fsm_state273 : begin
            ap_NS_fsm = ap_ST_fsm_state274;
        end
        ap_ST_fsm_state274 : begin
            ap_NS_fsm = ap_ST_fsm_state275;
        end
        ap_ST_fsm_state275 : begin
            ap_NS_fsm = ap_ST_fsm_state276;
        end
        ap_ST_fsm_state276 : begin
            ap_NS_fsm = ap_ST_fsm_state277;
        end
        ap_ST_fsm_state277 : begin
            ap_NS_fsm = ap_ST_fsm_state278;
        end
        ap_ST_fsm_state278 : begin
            ap_NS_fsm = ap_ST_fsm_state279;
        end
        ap_ST_fsm_state279 : begin
            ap_NS_fsm = ap_ST_fsm_state280;
        end
        ap_ST_fsm_state280 : begin
            ap_NS_fsm = ap_ST_fsm_state281;
        end
        ap_ST_fsm_state281 : begin
            ap_NS_fsm = ap_ST_fsm_state282;
        end
        ap_ST_fsm_state282 : begin
            ap_NS_fsm = ap_ST_fsm_state283;
        end
        ap_ST_fsm_state283 : begin
            ap_NS_fsm = ap_ST_fsm_state284;
        end
        ap_ST_fsm_state284 : begin
            ap_NS_fsm = ap_ST_fsm_state285;
        end
        ap_ST_fsm_state285 : begin
            ap_NS_fsm = ap_ST_fsm_state286;
        end
        ap_ST_fsm_state286 : begin
            ap_NS_fsm = ap_ST_fsm_state287;
        end
        ap_ST_fsm_state287 : begin
            ap_NS_fsm = ap_ST_fsm_state288;
        end
        ap_ST_fsm_state288 : begin
            ap_NS_fsm = ap_ST_fsm_state289;
        end
        ap_ST_fsm_state289 : begin
            ap_NS_fsm = ap_ST_fsm_state290;
        end
        ap_ST_fsm_state290 : begin
            ap_NS_fsm = ap_ST_fsm_state291;
        end
        ap_ST_fsm_state291 : begin
            ap_NS_fsm = ap_ST_fsm_state292;
        end
        ap_ST_fsm_state292 : begin
            ap_NS_fsm = ap_ST_fsm_state293;
        end
        ap_ST_fsm_state293 : begin
            ap_NS_fsm = ap_ST_fsm_state294;
        end
        ap_ST_fsm_state294 : begin
            ap_NS_fsm = ap_ST_fsm_state295;
        end
        ap_ST_fsm_state295 : begin
            ap_NS_fsm = ap_ST_fsm_state296;
        end
        ap_ST_fsm_state296 : begin
            ap_NS_fsm = ap_ST_fsm_state297;
        end
        ap_ST_fsm_state297 : begin
            ap_NS_fsm = ap_ST_fsm_state298;
        end
        ap_ST_fsm_state298 : begin
            ap_NS_fsm = ap_ST_fsm_state299;
        end
        ap_ST_fsm_state299 : begin
            ap_NS_fsm = ap_ST_fsm_state300;
        end
        ap_ST_fsm_state300 : begin
            ap_NS_fsm = ap_ST_fsm_state301;
        end
        ap_ST_fsm_state301 : begin
            ap_NS_fsm = ap_ST_fsm_state302;
        end
        ap_ST_fsm_state302 : begin
            ap_NS_fsm = ap_ST_fsm_state303;
        end
        ap_ST_fsm_state303 : begin
            ap_NS_fsm = ap_ST_fsm_state304;
        end
        ap_ST_fsm_state304 : begin
            ap_NS_fsm = ap_ST_fsm_state305;
        end
        ap_ST_fsm_state305 : begin
            ap_NS_fsm = ap_ST_fsm_state306;
        end
        ap_ST_fsm_state306 : begin
            ap_NS_fsm = ap_ST_fsm_state307;
        end
        ap_ST_fsm_state307 : begin
            ap_NS_fsm = ap_ST_fsm_state308;
        end
        ap_ST_fsm_state308 : begin
            ap_NS_fsm = ap_ST_fsm_state309;
        end
        ap_ST_fsm_state309 : begin
            ap_NS_fsm = ap_ST_fsm_state310;
        end
        ap_ST_fsm_state310 : begin
            ap_NS_fsm = ap_ST_fsm_state311;
        end
        ap_ST_fsm_state311 : begin
            ap_NS_fsm = ap_ST_fsm_state312;
        end
        ap_ST_fsm_state312 : begin
            ap_NS_fsm = ap_ST_fsm_state313;
        end
        ap_ST_fsm_state313 : begin
            ap_NS_fsm = ap_ST_fsm_state314;
        end
        ap_ST_fsm_state314 : begin
            ap_NS_fsm = ap_ST_fsm_state315;
        end
        ap_ST_fsm_state315 : begin
            ap_NS_fsm = ap_ST_fsm_state316;
        end
        ap_ST_fsm_state316 : begin
            ap_NS_fsm = ap_ST_fsm_state317;
        end
        ap_ST_fsm_state317 : begin
            ap_NS_fsm = ap_ST_fsm_state318;
        end
        ap_ST_fsm_state318 : begin
            ap_NS_fsm = ap_ST_fsm_state319;
        end
        ap_ST_fsm_state319 : begin
            ap_NS_fsm = ap_ST_fsm_state320;
        end
        ap_ST_fsm_state320 : begin
            ap_NS_fsm = ap_ST_fsm_state321;
        end
        ap_ST_fsm_state321 : begin
            ap_NS_fsm = ap_ST_fsm_state322;
        end
        ap_ST_fsm_state322 : begin
            ap_NS_fsm = ap_ST_fsm_state323;
        end
        ap_ST_fsm_state323 : begin
            ap_NS_fsm = ap_ST_fsm_state324;
        end
        ap_ST_fsm_state324 : begin
            ap_NS_fsm = ap_ST_fsm_state325;
        end
        ap_ST_fsm_state325 : begin
            ap_NS_fsm = ap_ST_fsm_state326;
        end
        ap_ST_fsm_state326 : begin
            ap_NS_fsm = ap_ST_fsm_state327;
        end
        ap_ST_fsm_state327 : begin
            ap_NS_fsm = ap_ST_fsm_state328;
        end
        ap_ST_fsm_state328 : begin
            ap_NS_fsm = ap_ST_fsm_state329;
        end
        ap_ST_fsm_state329 : begin
            ap_NS_fsm = ap_ST_fsm_state330;
        end
        ap_ST_fsm_state330 : begin
            ap_NS_fsm = ap_ST_fsm_state331;
        end
        ap_ST_fsm_state331 : begin
            ap_NS_fsm = ap_ST_fsm_state332;
        end
        ap_ST_fsm_state332 : begin
            ap_NS_fsm = ap_ST_fsm_state333;
        end
        ap_ST_fsm_state333 : begin
            ap_NS_fsm = ap_ST_fsm_state334;
        end
        ap_ST_fsm_state334 : begin
            ap_NS_fsm = ap_ST_fsm_state335;
        end
        ap_ST_fsm_state335 : begin
            ap_NS_fsm = ap_ST_fsm_state336;
        end
        ap_ST_fsm_state336 : begin
            ap_NS_fsm = ap_ST_fsm_state337;
        end
        ap_ST_fsm_state337 : begin
            ap_NS_fsm = ap_ST_fsm_state338;
        end
        ap_ST_fsm_state338 : begin
            ap_NS_fsm = ap_ST_fsm_state339;
        end
        ap_ST_fsm_state339 : begin
            ap_NS_fsm = ap_ST_fsm_state340;
        end
        ap_ST_fsm_state340 : begin
            ap_NS_fsm = ap_ST_fsm_state341;
        end
        ap_ST_fsm_state341 : begin
            ap_NS_fsm = ap_ST_fsm_state342;
        end
        ap_ST_fsm_state342 : begin
            ap_NS_fsm = ap_ST_fsm_state343;
        end
        ap_ST_fsm_state343 : begin
            ap_NS_fsm = ap_ST_fsm_state344;
        end
        ap_ST_fsm_state344 : begin
            ap_NS_fsm = ap_ST_fsm_state345;
        end
        ap_ST_fsm_state345 : begin
            ap_NS_fsm = ap_ST_fsm_state346;
        end
        ap_ST_fsm_state346 : begin
            ap_NS_fsm = ap_ST_fsm_state347;
        end
        ap_ST_fsm_state347 : begin
            ap_NS_fsm = ap_ST_fsm_state348;
        end
        ap_ST_fsm_state348 : begin
            ap_NS_fsm = ap_ST_fsm_state349;
        end
        ap_ST_fsm_state349 : begin
            ap_NS_fsm = ap_ST_fsm_state350;
        end
        ap_ST_fsm_state350 : begin
            ap_NS_fsm = ap_ST_fsm_state351;
        end
        ap_ST_fsm_state351 : begin
            ap_NS_fsm = ap_ST_fsm_state352;
        end
        ap_ST_fsm_state352 : begin
            ap_NS_fsm = ap_ST_fsm_state353;
        end
        ap_ST_fsm_state353 : begin
            ap_NS_fsm = ap_ST_fsm_state354;
        end
        ap_ST_fsm_state354 : begin
            ap_NS_fsm = ap_ST_fsm_state355;
        end
        ap_ST_fsm_state355 : begin
            ap_NS_fsm = ap_ST_fsm_state356;
        end
        ap_ST_fsm_state356 : begin
            ap_NS_fsm = ap_ST_fsm_state357;
        end
        ap_ST_fsm_state357 : begin
            ap_NS_fsm = ap_ST_fsm_state358;
        end
        ap_ST_fsm_state358 : begin
            ap_NS_fsm = ap_ST_fsm_state359;
        end
        ap_ST_fsm_state359 : begin
            ap_NS_fsm = ap_ST_fsm_state360;
        end
        ap_ST_fsm_state360 : begin
            ap_NS_fsm = ap_ST_fsm_state361;
        end
        ap_ST_fsm_state361 : begin
            ap_NS_fsm = ap_ST_fsm_state362;
        end
        ap_ST_fsm_state362 : begin
            ap_NS_fsm = ap_ST_fsm_state363;
        end
        ap_ST_fsm_state363 : begin
            ap_NS_fsm = ap_ST_fsm_state364;
        end
        ap_ST_fsm_state364 : begin
            ap_NS_fsm = ap_ST_fsm_state365;
        end
        ap_ST_fsm_state365 : begin
            ap_NS_fsm = ap_ST_fsm_state366;
        end
        ap_ST_fsm_state366 : begin
            ap_NS_fsm = ap_ST_fsm_state367;
        end
        ap_ST_fsm_state367 : begin
            ap_NS_fsm = ap_ST_fsm_state368;
        end
        ap_ST_fsm_state368 : begin
            ap_NS_fsm = ap_ST_fsm_state369;
        end
        ap_ST_fsm_state369 : begin
            ap_NS_fsm = ap_ST_fsm_state370;
        end
        ap_ST_fsm_state370 : begin
            ap_NS_fsm = ap_ST_fsm_state371;
        end
        ap_ST_fsm_state371 : begin
            ap_NS_fsm = ap_ST_fsm_state372;
        end
        ap_ST_fsm_state372 : begin
            ap_NS_fsm = ap_ST_fsm_state373;
        end
        ap_ST_fsm_state373 : begin
            ap_NS_fsm = ap_ST_fsm_state374;
        end
        ap_ST_fsm_state374 : begin
            ap_NS_fsm = ap_ST_fsm_state375;
        end
        ap_ST_fsm_state375 : begin
            ap_NS_fsm = ap_ST_fsm_state376;
        end
        ap_ST_fsm_state376 : begin
            ap_NS_fsm = ap_ST_fsm_state377;
        end
        ap_ST_fsm_state377 : begin
            ap_NS_fsm = ap_ST_fsm_state378;
        end
        ap_ST_fsm_state378 : begin
            ap_NS_fsm = ap_ST_fsm_state379;
        end
        ap_ST_fsm_state379 : begin
            ap_NS_fsm = ap_ST_fsm_state380;
        end
        ap_ST_fsm_state380 : begin
            ap_NS_fsm = ap_ST_fsm_state381;
        end
        ap_ST_fsm_state381 : begin
            ap_NS_fsm = ap_ST_fsm_state382;
        end
        ap_ST_fsm_state382 : begin
            ap_NS_fsm = ap_ST_fsm_state383;
        end
        ap_ST_fsm_state383 : begin
            ap_NS_fsm = ap_ST_fsm_state384;
        end
        ap_ST_fsm_state384 : begin
            ap_NS_fsm = ap_ST_fsm_state385;
        end
        ap_ST_fsm_state385 : begin
            ap_NS_fsm = ap_ST_fsm_state386;
        end
        ap_ST_fsm_state386 : begin
            ap_NS_fsm = ap_ST_fsm_state387;
        end
        ap_ST_fsm_state387 : begin
            ap_NS_fsm = ap_ST_fsm_state388;
        end
        ap_ST_fsm_state388 : begin
            ap_NS_fsm = ap_ST_fsm_state389;
        end
        ap_ST_fsm_state389 : begin
            ap_NS_fsm = ap_ST_fsm_state390;
        end
        ap_ST_fsm_state390 : begin
            ap_NS_fsm = ap_ST_fsm_state391;
        end
        ap_ST_fsm_state391 : begin
            ap_NS_fsm = ap_ST_fsm_state392;
        end
        ap_ST_fsm_state392 : begin
            ap_NS_fsm = ap_ST_fsm_state393;
        end
        ap_ST_fsm_state393 : begin
            ap_NS_fsm = ap_ST_fsm_state394;
        end
        ap_ST_fsm_state394 : begin
            ap_NS_fsm = ap_ST_fsm_state395;
        end
        ap_ST_fsm_state395 : begin
            ap_NS_fsm = ap_ST_fsm_state396;
        end
        ap_ST_fsm_state396 : begin
            ap_NS_fsm = ap_ST_fsm_state397;
        end
        ap_ST_fsm_state397 : begin
            if (((1'b1 == ap_CS_fsm_state397) & (((makeHorizontallyShiftedPatch_reg_776 == 1'd0) & (1'd0 == and_ln791_2_fu_1764_p2) & (or_ln791_1_reg_3016 == 1'd0)) | ((makeHorizontallyShiftedPatch_reg_776 == 1'd0) & (1'd0 == and_ln791_1_fu_1783_p2) & (or_ln791_1_reg_3016 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state574;
            end else if (((1'b1 == ap_CS_fsm_state397) & (((makeHorizontallyShiftedPatch_reg_776 == 1'd1) & (1'd0 == and_ln791_2_fu_1764_p2) & (or_ln791_1_reg_3016 == 1'd0)) | ((makeHorizontallyShiftedPatch_reg_776 == 1'd1) & (1'd0 == and_ln791_1_fu_1783_p2) & (or_ln791_1_reg_3016 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state507;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state398;
            end
        end
        ap_ST_fsm_state398 : begin
            ap_NS_fsm = ap_ST_fsm_state399;
        end
        ap_ST_fsm_state399 : begin
            ap_NS_fsm = ap_ST_fsm_state400;
        end
        ap_ST_fsm_state400 : begin
            ap_NS_fsm = ap_ST_fsm_state401;
        end
        ap_ST_fsm_state401 : begin
            ap_NS_fsm = ap_ST_fsm_state402;
        end
        ap_ST_fsm_state402 : begin
            if (((makeHorizontallyShiftedPatch_reg_776 == 1'd0) & (1'b1 == ap_CS_fsm_state402))) begin
                ap_NS_fsm = ap_ST_fsm_state404;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state403;
            end
        end
        ap_ST_fsm_state403 : begin
            ap_NS_fsm = ap_ST_fsm_state404;
        end
        ap_ST_fsm_state404 : begin
            if (((1'b1 == ap_CS_fsm_state404) & (1'b0 == ap_block_state404_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state404;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln1116_fu_1837_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln1116_fu_1837_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state410;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state410;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_state410 : begin
            ap_NS_fsm = ap_ST_fsm_state411;
        end
        ap_ST_fsm_state411 : begin
            if (((1'b1 == ap_CS_fsm_state411) & (icmp_ln1134_fu_1979_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state412;
            end
        end
        ap_ST_fsm_state412 : begin
            ap_NS_fsm = ap_ST_fsm_state413;
        end
        ap_ST_fsm_state413 : begin
            if (((1'b1 == ap_CS_fsm_state413) & (grp_makeSuperPoint_alignedToLine8_fu_1038_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state411;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state413;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln1141_fu_2008_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln1141_fu_2008_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state419;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((~((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b0) & (1'b0 == ap_block_pp1_stage1_subdone)) & (1'b0 == ap_block_pp1_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b0) & (1'b0 == ap_block_pp1_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state419;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((1'b0 == ap_block_pp1_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_state419 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln1153_fu_2147_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if (((ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln1153_fu_2147_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state426;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((1'b0 == ap_block_pp2_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_pp2_stage2 : begin
            if ((~((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (ap_enable_reg_pp2_iter0 == 1'b0) & (1'b0 == ap_block_pp2_stage2_subdone)) & (1'b0 == ap_block_pp2_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (ap_enable_reg_pp2_iter0 == 1'b0) & (1'b0 == ap_block_pp2_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state426;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end
        end
        ap_ST_fsm_state426 : begin
            ap_NS_fsm = ap_ST_fsm_state427;
        end
        ap_ST_fsm_state427 : begin
            if (((grp_wedgePatch_init_fu_1065_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state427))) begin
                ap_NS_fsm = ap_ST_fsm_state428;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state427;
            end
        end
        ap_ST_fsm_state428 : begin
            ap_NS_fsm = ap_ST_fsm_state429;
        end
        ap_ST_fsm_state429 : begin
            if (((1'b1 == ap_CS_fsm_state429) & (grp_add_patch6_fu_1017_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state430;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state429;
            end
        end
        ap_ST_fsm_state430 : begin
            ap_NS_fsm = ap_ST_fsm_state431;
        end
        ap_ST_fsm_state431 : begin
            ap_NS_fsm = ap_ST_fsm_state432;
        end
        ap_ST_fsm_state432 : begin
            if (((1'b1 == ap_CS_fsm_state432) & (grp_getShadows_fu_1001_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state433;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state432;
            end
        end
        ap_ST_fsm_state433 : begin
            ap_NS_fsm = ap_ST_fsm_state434;
        end
        ap_ST_fsm_state434 : begin
            ap_NS_fsm = ap_ST_fsm_state435;
        end
        ap_ST_fsm_state435 : begin
            ap_NS_fsm = ap_ST_fsm_state436;
        end
        ap_ST_fsm_state436 : begin
            ap_NS_fsm = ap_ST_fsm_state437;
        end
        ap_ST_fsm_state437 : begin
            ap_NS_fsm = ap_ST_fsm_state438;
        end
        ap_ST_fsm_state438 : begin
            ap_NS_fsm = ap_ST_fsm_state439;
        end
        ap_ST_fsm_state439 : begin
            ap_NS_fsm = ap_ST_fsm_state440;
        end
        ap_ST_fsm_state440 : begin
            ap_NS_fsm = ap_ST_fsm_state441;
        end
        ap_ST_fsm_state441 : begin
            if (((1'b1 == ap_CS_fsm_state441) & (shiftOriginal_1_reg_2986 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state506;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state442;
            end
        end
        ap_ST_fsm_state442 : begin
            ap_NS_fsm = ap_ST_fsm_state443;
        end
        ap_ST_fsm_state443 : begin
            ap_NS_fsm = ap_ST_fsm_state444;
        end
        ap_ST_fsm_state444 : begin
            ap_NS_fsm = ap_ST_fsm_state445;
        end
        ap_ST_fsm_state445 : begin
            ap_NS_fsm = ap_ST_fsm_state446;
        end
        ap_ST_fsm_state446 : begin
            ap_NS_fsm = ap_ST_fsm_state447;
        end
        ap_ST_fsm_state447 : begin
            ap_NS_fsm = ap_ST_fsm_state448;
        end
        ap_ST_fsm_state448 : begin
            ap_NS_fsm = ap_ST_fsm_state449;
        end
        ap_ST_fsm_state449 : begin
            ap_NS_fsm = ap_ST_fsm_state450;
        end
        ap_ST_fsm_state450 : begin
            ap_NS_fsm = ap_ST_fsm_state451;
        end
        ap_ST_fsm_state451 : begin
            ap_NS_fsm = ap_ST_fsm_state452;
        end
        ap_ST_fsm_state452 : begin
            ap_NS_fsm = ap_ST_fsm_state453;
        end
        ap_ST_fsm_state453 : begin
            ap_NS_fsm = ap_ST_fsm_state454;
        end
        ap_ST_fsm_state454 : begin
            ap_NS_fsm = ap_ST_fsm_state455;
        end
        ap_ST_fsm_state455 : begin
            ap_NS_fsm = ap_ST_fsm_state456;
        end
        ap_ST_fsm_state456 : begin
            ap_NS_fsm = ap_ST_fsm_state457;
        end
        ap_ST_fsm_state457 : begin
            ap_NS_fsm = ap_ST_fsm_state458;
        end
        ap_ST_fsm_state458 : begin
            ap_NS_fsm = ap_ST_fsm_state459;
        end
        ap_ST_fsm_state459 : begin
            ap_NS_fsm = ap_ST_fsm_state460;
        end
        ap_ST_fsm_state460 : begin
            ap_NS_fsm = ap_ST_fsm_state461;
        end
        ap_ST_fsm_state461 : begin
            ap_NS_fsm = ap_ST_fsm_state462;
        end
        ap_ST_fsm_state462 : begin
            ap_NS_fsm = ap_ST_fsm_state463;
        end
        ap_ST_fsm_state463 : begin
            ap_NS_fsm = ap_ST_fsm_state464;
        end
        ap_ST_fsm_state464 : begin
            ap_NS_fsm = ap_ST_fsm_state465;
        end
        ap_ST_fsm_state465 : begin
            ap_NS_fsm = ap_ST_fsm_state466;
        end
        ap_ST_fsm_state466 : begin
            ap_NS_fsm = ap_ST_fsm_state467;
        end
        ap_ST_fsm_state467 : begin
            ap_NS_fsm = ap_ST_fsm_state468;
        end
        ap_ST_fsm_state468 : begin
            ap_NS_fsm = ap_ST_fsm_state469;
        end
        ap_ST_fsm_state469 : begin
            ap_NS_fsm = ap_ST_fsm_state470;
        end
        ap_ST_fsm_state470 : begin
            ap_NS_fsm = ap_ST_fsm_state471;
        end
        ap_ST_fsm_state471 : begin
            ap_NS_fsm = ap_ST_fsm_state472;
        end
        ap_ST_fsm_state472 : begin
            ap_NS_fsm = ap_ST_fsm_state473;
        end
        ap_ST_fsm_state473 : begin
            ap_NS_fsm = ap_ST_fsm_state474;
        end
        ap_ST_fsm_state474 : begin
            ap_NS_fsm = ap_ST_fsm_state475;
        end
        ap_ST_fsm_state475 : begin
            ap_NS_fsm = ap_ST_fsm_state476;
        end
        ap_ST_fsm_state476 : begin
            ap_NS_fsm = ap_ST_fsm_state477;
        end
        ap_ST_fsm_state477 : begin
            ap_NS_fsm = ap_ST_fsm_state478;
        end
        ap_ST_fsm_state478 : begin
            ap_NS_fsm = ap_ST_fsm_state479;
        end
        ap_ST_fsm_state479 : begin
            ap_NS_fsm = ap_ST_fsm_state480;
        end
        ap_ST_fsm_state480 : begin
            ap_NS_fsm = ap_ST_fsm_state481;
        end
        ap_ST_fsm_state481 : begin
            ap_NS_fsm = ap_ST_fsm_state482;
        end
        ap_ST_fsm_state482 : begin
            ap_NS_fsm = ap_ST_fsm_state483;
        end
        ap_ST_fsm_state483 : begin
            ap_NS_fsm = ap_ST_fsm_state484;
        end
        ap_ST_fsm_state484 : begin
            ap_NS_fsm = ap_ST_fsm_state485;
        end
        ap_ST_fsm_state485 : begin
            ap_NS_fsm = ap_ST_fsm_state486;
        end
        ap_ST_fsm_state486 : begin
            ap_NS_fsm = ap_ST_fsm_state487;
        end
        ap_ST_fsm_state487 : begin
            ap_NS_fsm = ap_ST_fsm_state488;
        end
        ap_ST_fsm_state488 : begin
            ap_NS_fsm = ap_ST_fsm_state489;
        end
        ap_ST_fsm_state489 : begin
            ap_NS_fsm = ap_ST_fsm_state490;
        end
        ap_ST_fsm_state490 : begin
            ap_NS_fsm = ap_ST_fsm_state491;
        end
        ap_ST_fsm_state491 : begin
            ap_NS_fsm = ap_ST_fsm_state492;
        end
        ap_ST_fsm_state492 : begin
            ap_NS_fsm = ap_ST_fsm_state493;
        end
        ap_ST_fsm_state493 : begin
            ap_NS_fsm = ap_ST_fsm_state494;
        end
        ap_ST_fsm_state494 : begin
            ap_NS_fsm = ap_ST_fsm_state495;
        end
        ap_ST_fsm_state495 : begin
            ap_NS_fsm = ap_ST_fsm_state496;
        end
        ap_ST_fsm_state496 : begin
            ap_NS_fsm = ap_ST_fsm_state497;
        end
        ap_ST_fsm_state497 : begin
            ap_NS_fsm = ap_ST_fsm_state498;
        end
        ap_ST_fsm_state498 : begin
            ap_NS_fsm = ap_ST_fsm_state499;
        end
        ap_ST_fsm_state499 : begin
            ap_NS_fsm = ap_ST_fsm_state500;
        end
        ap_ST_fsm_state500 : begin
            ap_NS_fsm = ap_ST_fsm_state501;
        end
        ap_ST_fsm_state501 : begin
            ap_NS_fsm = ap_ST_fsm_state502;
        end
        ap_ST_fsm_state502 : begin
            ap_NS_fsm = ap_ST_fsm_state503;
        end
        ap_ST_fsm_state503 : begin
            ap_NS_fsm = ap_ST_fsm_state504;
        end
        ap_ST_fsm_state504 : begin
            if (((1'b1 == ap_CS_fsm_state504) & (icmp_ln878_7_fu_2435_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state506;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state505;
            end
        end
        ap_ST_fsm_state505 : begin
            ap_NS_fsm = ap_ST_fsm_state506;
        end
        ap_ST_fsm_state506 : begin
            ap_NS_fsm = ap_ST_fsm_state395;
        end
        ap_ST_fsm_state507 : begin
            ap_NS_fsm = ap_ST_fsm_state508;
        end
        ap_ST_fsm_state508 : begin
            ap_NS_fsm = ap_ST_fsm_state509;
        end
        ap_ST_fsm_state509 : begin
            ap_NS_fsm = ap_ST_fsm_state510;
        end
        ap_ST_fsm_state510 : begin
            ap_NS_fsm = ap_ST_fsm_state511;
        end
        ap_ST_fsm_state511 : begin
            ap_NS_fsm = ap_ST_fsm_state512;
        end
        ap_ST_fsm_state512 : begin
            ap_NS_fsm = ap_ST_fsm_state513;
        end
        ap_ST_fsm_state513 : begin
            ap_NS_fsm = ap_ST_fsm_state514;
        end
        ap_ST_fsm_state514 : begin
            ap_NS_fsm = ap_ST_fsm_state515;
        end
        ap_ST_fsm_state515 : begin
            ap_NS_fsm = ap_ST_fsm_state516;
        end
        ap_ST_fsm_state516 : begin
            ap_NS_fsm = ap_ST_fsm_state517;
        end
        ap_ST_fsm_state517 : begin
            ap_NS_fsm = ap_ST_fsm_state518;
        end
        ap_ST_fsm_state518 : begin
            ap_NS_fsm = ap_ST_fsm_state519;
        end
        ap_ST_fsm_state519 : begin
            ap_NS_fsm = ap_ST_fsm_state520;
        end
        ap_ST_fsm_state520 : begin
            ap_NS_fsm = ap_ST_fsm_state521;
        end
        ap_ST_fsm_state521 : begin
            ap_NS_fsm = ap_ST_fsm_state522;
        end
        ap_ST_fsm_state522 : begin
            ap_NS_fsm = ap_ST_fsm_state523;
        end
        ap_ST_fsm_state523 : begin
            ap_NS_fsm = ap_ST_fsm_state524;
        end
        ap_ST_fsm_state524 : begin
            ap_NS_fsm = ap_ST_fsm_state525;
        end
        ap_ST_fsm_state525 : begin
            ap_NS_fsm = ap_ST_fsm_state526;
        end
        ap_ST_fsm_state526 : begin
            ap_NS_fsm = ap_ST_fsm_state527;
        end
        ap_ST_fsm_state527 : begin
            ap_NS_fsm = ap_ST_fsm_state528;
        end
        ap_ST_fsm_state528 : begin
            ap_NS_fsm = ap_ST_fsm_state529;
        end
        ap_ST_fsm_state529 : begin
            ap_NS_fsm = ap_ST_fsm_state530;
        end
        ap_ST_fsm_state530 : begin
            ap_NS_fsm = ap_ST_fsm_state531;
        end
        ap_ST_fsm_state531 : begin
            ap_NS_fsm = ap_ST_fsm_state532;
        end
        ap_ST_fsm_state532 : begin
            ap_NS_fsm = ap_ST_fsm_state533;
        end
        ap_ST_fsm_state533 : begin
            ap_NS_fsm = ap_ST_fsm_state534;
        end
        ap_ST_fsm_state534 : begin
            ap_NS_fsm = ap_ST_fsm_state535;
        end
        ap_ST_fsm_state535 : begin
            ap_NS_fsm = ap_ST_fsm_state536;
        end
        ap_ST_fsm_state536 : begin
            ap_NS_fsm = ap_ST_fsm_state537;
        end
        ap_ST_fsm_state537 : begin
            ap_NS_fsm = ap_ST_fsm_state538;
        end
        ap_ST_fsm_state538 : begin
            ap_NS_fsm = ap_ST_fsm_state539;
        end
        ap_ST_fsm_state539 : begin
            ap_NS_fsm = ap_ST_fsm_state540;
        end
        ap_ST_fsm_state540 : begin
            ap_NS_fsm = ap_ST_fsm_state541;
        end
        ap_ST_fsm_state541 : begin
            ap_NS_fsm = ap_ST_fsm_state542;
        end
        ap_ST_fsm_state542 : begin
            ap_NS_fsm = ap_ST_fsm_state543;
        end
        ap_ST_fsm_state543 : begin
            ap_NS_fsm = ap_ST_fsm_state544;
        end
        ap_ST_fsm_state544 : begin
            ap_NS_fsm = ap_ST_fsm_state545;
        end
        ap_ST_fsm_state545 : begin
            ap_NS_fsm = ap_ST_fsm_state546;
        end
        ap_ST_fsm_state546 : begin
            ap_NS_fsm = ap_ST_fsm_state547;
        end
        ap_ST_fsm_state547 : begin
            ap_NS_fsm = ap_ST_fsm_state548;
        end
        ap_ST_fsm_state548 : begin
            ap_NS_fsm = ap_ST_fsm_state549;
        end
        ap_ST_fsm_state549 : begin
            ap_NS_fsm = ap_ST_fsm_state550;
        end
        ap_ST_fsm_state550 : begin
            ap_NS_fsm = ap_ST_fsm_state551;
        end
        ap_ST_fsm_state551 : begin
            ap_NS_fsm = ap_ST_fsm_state552;
        end
        ap_ST_fsm_state552 : begin
            ap_NS_fsm = ap_ST_fsm_state553;
        end
        ap_ST_fsm_state553 : begin
            ap_NS_fsm = ap_ST_fsm_state554;
        end
        ap_ST_fsm_state554 : begin
            ap_NS_fsm = ap_ST_fsm_state555;
        end
        ap_ST_fsm_state555 : begin
            ap_NS_fsm = ap_ST_fsm_state556;
        end
        ap_ST_fsm_state556 : begin
            ap_NS_fsm = ap_ST_fsm_state557;
        end
        ap_ST_fsm_state557 : begin
            ap_NS_fsm = ap_ST_fsm_state558;
        end
        ap_ST_fsm_state558 : begin
            ap_NS_fsm = ap_ST_fsm_state559;
        end
        ap_ST_fsm_state559 : begin
            ap_NS_fsm = ap_ST_fsm_state560;
        end
        ap_ST_fsm_state560 : begin
            ap_NS_fsm = ap_ST_fsm_state561;
        end
        ap_ST_fsm_state561 : begin
            ap_NS_fsm = ap_ST_fsm_state562;
        end
        ap_ST_fsm_state562 : begin
            ap_NS_fsm = ap_ST_fsm_state563;
        end
        ap_ST_fsm_state563 : begin
            ap_NS_fsm = ap_ST_fsm_state564;
        end
        ap_ST_fsm_state564 : begin
            ap_NS_fsm = ap_ST_fsm_state565;
        end
        ap_ST_fsm_state565 : begin
            ap_NS_fsm = ap_ST_fsm_state566;
        end
        ap_ST_fsm_state566 : begin
            ap_NS_fsm = ap_ST_fsm_state567;
        end
        ap_ST_fsm_state567 : begin
            ap_NS_fsm = ap_ST_fsm_state568;
        end
        ap_ST_fsm_state568 : begin
            ap_NS_fsm = ap_ST_fsm_state569;
        end
        ap_ST_fsm_state569 : begin
            ap_NS_fsm = ap_ST_fsm_state570;
        end
        ap_ST_fsm_state570 : begin
            ap_NS_fsm = ap_ST_fsm_state571;
        end
        ap_ST_fsm_state571 : begin
            if (((1'b1 == ap_CS_fsm_state571) & (1'd0 == and_ln857_fu_2528_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state574;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state572;
            end
        end
        ap_ST_fsm_state572 : begin
            if (((1'b1 == ap_CS_fsm_state572) & (icmp_ln859_fu_2532_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state574;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state573;
            end
        end
        ap_ST_fsm_state573 : begin
            ap_NS_fsm = ap_ST_fsm_state574;
        end
        ap_ST_fsm_state574 : begin
            if (((1'b1 == ap_CS_fsm_state574) & (1'b0 == ap_block_state574_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state574;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign GDarrayDecoded_address0 = grp_makeSuperPoint_alignedToLine8_fu_1038_GDarrayDecoded_address0;

assign GDarrayDecoded_address1 = grp_makeSuperPoint_alignedToLine8_fu_1038_GDarrayDecoded_address1;

assign GDarrayDecoded_ce0 = grp_makeSuperPoint_alignedToLine8_fu_1038_GDarrayDecoded_ce0;

assign GDarrayDecoded_ce1 = grp_makeSuperPoint_alignedToLine8_fu_1038_GDarrayDecoded_ce1;

assign GDn_points_address0 = grp_makeSuperPoint_alignedToLine8_fu_1038_GDn_points_address0;

assign GDn_points_ce0 = grp_makeSuperPoint_alignedToLine8_fu_1038_GDn_points_ce0;

assign add_ln1122_fu_1951_p0 = {{select_ln1118_1_fu_1928_p3}, {1'd0}};

assign add_ln1122_fu_1951_p1 = select_ln1118_reg_3141;

assign add_ln1147_fu_2122_p0 = {{select_ln1143_1_fu_2099_p3}, {1'd0}};

assign add_ln1147_fu_2122_p1 = select_ln1143_reg_3243;

assign add_ln1159_fu_2260_p2 = (sub_ln1159_fu_2251_p2 + zext_ln1159_1_fu_2257_p1);

assign add_ln811_fu_1825_p0 = n_patches_i;

assign add_ln817_1_fu_2297_p0 = n_patches_i[4:0];

assign add_ln817_fu_2287_p0 = n_patches_i;

assign and_ln1116_fu_1873_p2 = (xor_ln1116_fu_1862_p2 & icmp_ln1120_fu_1867_p2);

assign and_ln1141_fu_2044_p2 = (xor_ln1141_fu_2033_p2 & icmp_ln1145_fu_2038_p2);

assign and_ln1153_fu_2195_p2 = (xor_ln1153_fu_2184_p2 & icmp_ln1157_fu_2189_p2);

assign and_ln724_fu_1293_p2 = (icmp_ln886_reg_2680 & icmp_ln878_reg_2685);

assign and_ln734_fu_1490_p2 = (icmp_ln886_4_reg_2820 & icmp_ln878_4_reg_2825);

assign and_ln791_1_fu_1783_p2 = (icmp_ln890_1_reg_3040 & and_ln791_fu_1778_p2);

assign and_ln791_2_fu_1764_p2 = (icmp_ln890_3_reg_3025 & icmp_ln890_2_reg_3020);

assign and_ln791_fu_1778_p2 = (xor_ln791_fu_1772_p2 & icmp_ln890_reg_3035);

assign and_ln857_fu_2528_p2 = (shiftOriginal_1_reg_2986 & icmp_ln886_7_reg_3562);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd404];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd405];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd406];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd411];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd412];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd413];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd415];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd416];

assign ap_CS_fsm_pp2_stage2 = ap_CS_fsm[32'd417];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state156 = ap_CS_fsm[32'd155];

assign ap_CS_fsm_state157 = ap_CS_fsm[32'd156];

assign ap_CS_fsm_state163 = ap_CS_fsm[32'd162];

assign ap_CS_fsm_state164 = ap_CS_fsm[32'd163];

assign ap_CS_fsm_state167 = ap_CS_fsm[32'd166];

assign ap_CS_fsm_state168 = ap_CS_fsm[32'd167];

assign ap_CS_fsm_state169 = ap_CS_fsm[32'd168];

assign ap_CS_fsm_state170 = ap_CS_fsm[32'd169];

assign ap_CS_fsm_state171 = ap_CS_fsm[32'd170];

assign ap_CS_fsm_state172 = ap_CS_fsm[32'd171];

assign ap_CS_fsm_state173 = ap_CS_fsm[32'd172];

assign ap_CS_fsm_state174 = ap_CS_fsm[32'd173];

assign ap_CS_fsm_state175 = ap_CS_fsm[32'd174];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state237 = ap_CS_fsm[32'd236];

assign ap_CS_fsm_state238 = ap_CS_fsm[32'd237];

assign ap_CS_fsm_state244 = ap_CS_fsm[32'd243];

assign ap_CS_fsm_state245 = ap_CS_fsm[32'd244];

assign ap_CS_fsm_state248 = ap_CS_fsm[32'd247];

assign ap_CS_fsm_state249 = ap_CS_fsm[32'd248];

assign ap_CS_fsm_state250 = ap_CS_fsm[32'd249];

assign ap_CS_fsm_state251 = ap_CS_fsm[32'd250];

assign ap_CS_fsm_state252 = ap_CS_fsm[32'd251];

assign ap_CS_fsm_state253 = ap_CS_fsm[32'd252];

assign ap_CS_fsm_state254 = ap_CS_fsm[32'd253];

assign ap_CS_fsm_state255 = ap_CS_fsm[32'd254];

assign ap_CS_fsm_state256 = ap_CS_fsm[32'd255];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state318 = ap_CS_fsm[32'd317];

assign ap_CS_fsm_state319 = ap_CS_fsm[32'd318];

assign ap_CS_fsm_state325 = ap_CS_fsm[32'd324];

assign ap_CS_fsm_state326 = ap_CS_fsm[32'd325];

assign ap_CS_fsm_state329 = ap_CS_fsm[32'd328];

assign ap_CS_fsm_state330 = ap_CS_fsm[32'd329];

assign ap_CS_fsm_state331 = ap_CS_fsm[32'd330];

assign ap_CS_fsm_state389 = ap_CS_fsm[32'd388];

assign ap_CS_fsm_state390 = ap_CS_fsm[32'd389];

assign ap_CS_fsm_state391 = ap_CS_fsm[32'd390];

assign ap_CS_fsm_state392 = ap_CS_fsm[32'd391];

assign ap_CS_fsm_state393 = ap_CS_fsm[32'd392];

assign ap_CS_fsm_state394 = ap_CS_fsm[32'd393];

assign ap_CS_fsm_state395 = ap_CS_fsm[32'd394];

assign ap_CS_fsm_state396 = ap_CS_fsm[32'd395];

assign ap_CS_fsm_state397 = ap_CS_fsm[32'd396];

assign ap_CS_fsm_state398 = ap_CS_fsm[32'd397];

assign ap_CS_fsm_state399 = ap_CS_fsm[32'd398];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state401 = ap_CS_fsm[32'd400];

assign ap_CS_fsm_state402 = ap_CS_fsm[32'd401];

assign ap_CS_fsm_state403 = ap_CS_fsm[32'd402];

assign ap_CS_fsm_state404 = ap_CS_fsm[32'd403];

assign ap_CS_fsm_state410 = ap_CS_fsm[32'd407];

assign ap_CS_fsm_state411 = ap_CS_fsm[32'd408];

assign ap_CS_fsm_state412 = ap_CS_fsm[32'd409];

assign ap_CS_fsm_state413 = ap_CS_fsm[32'd410];

assign ap_CS_fsm_state419 = ap_CS_fsm[32'd414];

assign ap_CS_fsm_state426 = ap_CS_fsm[32'd418];

assign ap_CS_fsm_state427 = ap_CS_fsm[32'd419];

assign ap_CS_fsm_state428 = ap_CS_fsm[32'd420];

assign ap_CS_fsm_state429 = ap_CS_fsm[32'd421];

assign ap_CS_fsm_state430 = ap_CS_fsm[32'd422];

assign ap_CS_fsm_state431 = ap_CS_fsm[32'd423];

assign ap_CS_fsm_state432 = ap_CS_fsm[32'd424];

assign ap_CS_fsm_state433 = ap_CS_fsm[32'd425];

assign ap_CS_fsm_state434 = ap_CS_fsm[32'd426];

assign ap_CS_fsm_state435 = ap_CS_fsm[32'd427];

assign ap_CS_fsm_state436 = ap_CS_fsm[32'd428];

assign ap_CS_fsm_state437 = ap_CS_fsm[32'd429];

assign ap_CS_fsm_state438 = ap_CS_fsm[32'd430];

assign ap_CS_fsm_state439 = ap_CS_fsm[32'd431];

assign ap_CS_fsm_state440 = ap_CS_fsm[32'd432];

assign ap_CS_fsm_state441 = ap_CS_fsm[32'd433];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state503 = ap_CS_fsm[32'd495];

assign ap_CS_fsm_state504 = ap_CS_fsm[32'd496];

assign ap_CS_fsm_state505 = ap_CS_fsm[32'd497];

assign ap_CS_fsm_state506 = ap_CS_fsm[32'd498];

assign ap_CS_fsm_state507 = ap_CS_fsm[32'd499];

assign ap_CS_fsm_state569 = ap_CS_fsm[32'd561];

assign ap_CS_fsm_state570 = ap_CS_fsm[32'd562];

assign ap_CS_fsm_state571 = ap_CS_fsm[32'd563];

assign ap_CS_fsm_state572 = ap_CS_fsm[32'd564];

assign ap_CS_fsm_state573 = ap_CS_fsm[32'd565];

assign ap_CS_fsm_state574 = ap_CS_fsm[32'd566];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_NS_fsm_state13 = ap_NS_fsm[32'd12];

assign ap_NS_fsm_state175 = ap_NS_fsm[32'd174];

assign ap_NS_fsm_state256 = ap_NS_fsm[32'd255];

assign ap_NS_fsm_state330 = ap_NS_fsm[32'd329];

assign ap_NS_fsm_state331 = ap_NS_fsm[32'd330];

assign ap_NS_fsm_state441 = ap_NS_fsm[32'd433];

assign ap_NS_fsm_state507 = ap_NS_fsm[32'd499];

assign ap_NS_fsm_state94 = ap_NS_fsm[32'd93];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state404_on_subcall_done = ((makeHorizontallyShiftedPatch_reg_776 == 1'd1) & (grp_delete_patch_fu_1104_ap_done == 1'b0));
end

assign ap_block_state405_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state406_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state407_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state408_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state409_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state414_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state415_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state416_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state417_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state418_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state420_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state421_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state422_pp2_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state423_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state424_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state425_pp2_stage2_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state574_on_subcall_done = ((ap_predicate_op1657_call_state574 == 1'b1) & (grp_delete_patch_fu_1104_ap_done == 1'b0));
end

always @ (*) begin
    ap_condition_6662 = ((1'd1 == and_ln857_reg_3567) & (1'b1 == ap_CS_fsm_state574) & (icmp_ln859_reg_3571 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

always @ (*) begin
    ap_predicate_op1657_call_state574 = ((1'd1 == and_ln857_reg_3567) & (makeHorizontallyShiftedPatch_reg_776 == 1'd1) & (icmp_ln859_reg_3571 == 1'd1));
end

assign apexZ0_V_fu_1970_p1 = shifted_Align_5_reg_3077[31:0];

assign bitcast_ln521_3_fu_1423_p1 = zext_ln368_3_fu_1419_p1;

assign bitcast_ln521_4_fu_1506_p1 = zext_ln368_4_fu_1502_p1;

assign bitcast_ln521_5_fu_1585_p1 = zext_ln368_5_fu_1581_p1;

assign bitcast_ln521_fu_1344_p1 = zext_ln368_fu_1340_p1;

assign cmp_i_i297_not_fu_1704_p2 = (icmp_ln886_6_reg_2974 ^ 1'd1);

assign complementary_topL_jL_V_3_fu_2380_p3 = ((shiftOriginal_1_reg_2986[0:0] == 1'b1) ? complementary_topL_jL_V_1_reg_684 : reg_1153);

assign complementary_topL_jR_V_4_fu_2394_p3 = ((shiftOriginal_1_reg_2986[0:0] == 1'b1) ? complementary_topL_jR_V_reg_744 : reg_1153);

assign complementary_topR_jL_V_3_fu_2373_p3 = ((shiftOriginal_1_reg_2986[0:0] == 1'b1) ? complementary_topR_jL_V_1_reg_674 : reg_1149);

assign complementary_topR_jR_V_4_fu_2387_p3 = ((shiftOriginal_1_reg_2986[0:0] == 1'b1) ? complementary_topR_jR_V_reg_714 : reg_1149);

assign data_V_7_fu_1411_p1 = reg_1139;

assign data_V_8_fu_1494_p1 = reg_1139;

assign data_V_9_fu_1573_p1 = reg_1139;

assign data_V_fu_1332_p1 = reg_1139;

assign empty_100_fu_1625_p2 = (empty_99_fu_1620_p2 ^ 1'd1);

assign empty_83_fu_1375_p2 = (notrhs40_reg_2744 | notlhs39_reg_2739);

assign empty_84_fu_1379_p2 = (tmp_22_reg_2749 & empty_83_fu_1375_p2);

assign empty_85_fu_1384_p2 = (empty_84_fu_1379_p2 ^ 1'd1);

assign empty_87_fu_1438_p1 = data_V_7_fu_1411_p1[51:0];

assign empty_88_fu_1454_p2 = (notrhs38_reg_2791 | notlhs37_reg_2786);

assign empty_89_fu_1458_p2 = (tmp_25_reg_2796 & empty_88_fu_1454_p2);

assign empty_90_fu_1463_p2 = (empty_89_fu_1458_p2 ^ 1'd1);

assign empty_92_fu_1521_p1 = data_V_8_fu_1494_p1[51:0];

assign empty_93_fu_1537_p2 = (notrhs36_reg_2844 | notlhs35_reg_2839);

assign empty_94_fu_1541_p2 = (tmp_28_reg_2849 & empty_93_fu_1537_p2);

assign empty_95_fu_1546_p2 = (empty_94_fu_1541_p2 ^ 1'd1);

assign empty_97_fu_1600_p1 = data_V_9_fu_1573_p1[51:0];

assign empty_98_fu_1616_p2 = (notrhs_reg_2891 | notlhs_reg_2886);

assign empty_99_fu_1620_p2 = (tmp_31_reg_2896 & empty_98_fu_1616_p2);

assign empty_fu_1359_p1 = data_V_fu_1332_p1[51:0];

assign grp_add_patch6_fu_1017_ap_start = grp_add_patch6_fu_1017_ap_start_reg;

assign grp_delete_patch_fu_1104_ap_start = grp_delete_patch_fu_1104_ap_start_reg;

assign grp_fu_1116_ce = 1'b1;

assign grp_fu_1116_opcode = 5'd4;

assign grp_fu_1116_p1 = 64'd4733812773539020800;

assign grp_fu_1116_p2 = grp_fu_658_p_dout0;

assign grp_fu_1121_ce = 1'b1;

assign grp_fu_1121_p0 = reg_1134;

assign grp_fu_1121_p1 = grp_fu_2017_p_dout0;

assign grp_fu_1124_p2 = (($signed(horizontalOverlapTop_V_fu_268) < $signed(32'd1)) ? 1'b1 : 1'b0);

assign grp_fu_1129_p2 = (($signed(horizontalOverlapBottom_V_fu_264) < $signed(32'd1)) ? 1'b1 : 1'b0);

assign grp_fu_1201_p0 = {{trunc_ln732_reg_2564}, {7'd0}};

assign grp_fu_1201_p1 = tmp_27_fu_1190_p3;

assign grp_fu_1229_p0 = {{trunc_ln723_reg_2576}, {7'd0}};

assign grp_fu_1229_p1 = tmp_30_fu_1218_p3;

assign grp_fu_2017_p_ce = 1'b1;

assign grp_fu_2017_p_din0 = reg_1134;

assign grp_fu_2317_p0 = {{trunc_ln821_reg_3357}, {7'd0}};

assign grp_fu_2317_p1 = {{add_ln817_reg_3351}, {3'd0}};

assign grp_fu_658_p_ce = 1'b1;

assign grp_fu_658_p_din0 = grp_fu_1116_p0;

assign grp_fu_658_p_din1 = 64'd4733812773539020800;

assign grp_fu_658_p_opcode = 5'd4;

assign grp_getShadows_fu_1001_ap_start = grp_getShadows_fu_1001_ap_start_reg;

assign grp_makeSuperPoint_alignedToLine8_fu_1038_ap_start = grp_makeSuperPoint_alignedToLine8_fu_1038_ap_start_reg;

assign grp_straightLineProjectorFromLayerIJtoK_fu_1089_ap_ce = 1'b1;

assign grp_straightLineProjectorFromLayerIJtoK_fu_1089_ap_done = grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_done;

assign grp_straightLineProjectorFromLayerIJtoK_fu_1089_ap_idle = grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_idle;

assign grp_straightLineProjectorFromLayerIJtoK_fu_1089_ap_ready = grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_ready;

assign grp_straightLineProjectorFromLayerIJtoK_fu_1089_ap_return = grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_dout0;

assign grp_straightLineProjectorFromLayerIJtoK_fu_1089_ap_start = grp_straightLineProjectorFromLayerIJtoK_fu_1089_ap_start_reg;

assign grp_straightLineProjectorFromLayerIJtoK_fu_1089_i = 3'd1;

assign grp_straightLineProjectorFromLayerIJtoK_fu_1089_j = 3'd5;

assign grp_straightLineProjectorFromLayerIJtoK_fu_1089_k = 3'd0;

assign grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_ce = 1'b1;

assign grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_din1 = grp_straightLineProjectorFromLayerIJtoK_fu_1089_z_i;

assign grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_din2 = grp_straightLineProjectorFromLayerIJtoK_fu_1089_z_j;

assign grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_din3 = 3'd1;

assign grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_din4 = 3'd5;

assign grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_din5 = 3'd0;

assign grp_straightLineProjectorFromLayerIJtoK_fu_2008_p_start = grp_straightLineProjectorFromLayerIJtoK_fu_1089_ap_start_reg;

assign grp_wedgePatch_init_fu_1065_ap_start = grp_wedgePatch_init_fu_1065_ap_start_reg;

assign horizontalOverlapBottom_V_1_fu_2502_p3 = ((icmp_ln878_9_reg_3557[0:0] == 1'b1) ? trunc_ln840_reg_3542 : trunc_ln840_1_reg_3547);

assign horizontalOverlapTop_V_1_fu_2497_p3 = ((icmp_ln878_8_reg_3552[0:0] == 1'b1) ? trunc_ln839_reg_3522 : trunc_ln839_1_reg_3527);

assign icmp_ln1116_fu_1837_p2 = ((ap_phi_mux_indvar_flatten13_phi_fu_804_p4 == 8'd160) ? 1'b1 : 1'b0);

assign icmp_ln1118_fu_1849_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_827_p4 == 7'd32) ? 1'b1 : 1'b0);

assign icmp_ln1120_fu_1867_p2 = ((ap_phi_mux_c_phi_fu_851_p4 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln1134_fu_1979_p2 = ((i_reg_871 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln1141_fu_2008_p2 = ((ap_phi_mux_indvar_flatten35_phi_fu_887_p4 == 8'd160) ? 1'b1 : 1'b0);

assign icmp_ln1143_fu_2020_p2 = ((ap_phi_mux_indvar_flatten21_phi_fu_910_p4 == 7'd32) ? 1'b1 : 1'b0);

assign icmp_ln1145_fu_2038_p2 = ((ap_phi_mux_d_phi_fu_934_p4 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln1153_fu_2147_p2 = ((ap_phi_mux_indvar_flatten57_phi_fu_946_p4 == 7'd120) ? 1'b1 : 1'b0);

assign icmp_ln1155_fu_2159_p2 = ((ap_phi_mux_indvar_flatten43_phi_fu_969_p4 == 6'd24) ? 1'b1 : 1'b0);

assign icmp_ln1157_fu_2189_p2 = ((ap_phi_mux_d_1_phi_fu_993_p4 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln710_fu_1157_p2 = ((lastPatchIndex == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln791_1_fu_1758_p2 = (($signed(tmp_56_fu_1748_p4) < $signed(31'd1)) ? 1'b1 : 1'b0);

assign icmp_ln791_fu_1730_p2 = (($signed(tmp_55_fu_1720_p4) < $signed(31'd1)) ? 1'b1 : 1'b0);

assign icmp_ln859_fu_2532_p2 = ((n_patches_i > 8'd2) ? 1'b1 : 1'b0);

assign icmp_ln878_3_fu_1406_p2 = (($signed(ret_reg_2772) < $signed(33'd8589934492)) ? 1'b1 : 1'b0);

assign icmp_ln878_4_fu_1486_p1 = apexZ0;

assign icmp_ln878_4_fu_1486_p2 = (($signed(complementary_topR_jR_V_3_reg_2806) < $signed(icmp_ln878_4_fu_1486_p1)) ? 1'b1 : 1'b0);

assign icmp_ln878_5_fu_1568_p2 = (($signed(ret_23_reg_2872) < $signed(33'd8589934492)) ? 1'b1 : 1'b0);

assign icmp_ln878_6_fu_1788_p2 = (($signed(empty_103_reg_664) < $signed(empty_102_reg_704)) ? 1'b1 : 1'b0);

assign icmp_ln878_7_fu_2435_p2 = (($signed(reg_1134) < $signed(32'd15000000)) ? 1'b1 : 1'b0);

assign icmp_ln878_8_fu_2489_p2 = (($signed(ret_25_reg_3512) < $signed(ret_26_reg_3517)) ? 1'b1 : 1'b0);

assign icmp_ln878_9_fu_2493_p2 = (($signed(ret_27_reg_3532) < $signed(ret_28_reg_3537)) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_1253_p1 = apexZ0;

assign icmp_ln878_fu_1253_p2 = (($signed(original_topR_jL_V_reg_2652) < $signed(icmp_ln878_fu_1253_p1)) ? 1'b1 : 1'b0);

assign icmp_ln886_3_fu_1390_p1 = complementary_apexZ0;

assign icmp_ln886_3_fu_1390_p2 = (($signed(original_topL_jL_V_3_reg_2759) > $signed(icmp_ln886_3_fu_1390_p1)) ? 1'b1 : 1'b0);

assign icmp_ln886_4_fu_1481_p2 = (($signed(ret_21_reg_2815) > $signed(33'd50)) ? 1'b1 : 1'b0);

assign icmp_ln886_5_fu_1552_p1 = complementary_apexZ0;

assign icmp_ln886_5_fu_1552_p2 = (($signed(complementary_topL_jR_V_3_reg_2859) > $signed(icmp_ln886_5_fu_1552_p1)) ? 1'b1 : 1'b0);

assign icmp_ln886_6_fu_1673_p2 = (($signed(reg_1134) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln886_7_fu_2522_p2 = (($signed(reg_1134) > $signed(32'd15000000)) ? 1'b1 : 1'b0);

assign icmp_ln886_fu_1248_p1 = complementary_apexZ0;

assign icmp_ln886_fu_1248_p2 = (($signed(original_topR_jL_V_reg_2652) > $signed(icmp_ln886_fu_1248_p1)) ? 1'b1 : 1'b0);

assign leftRight_fu_1709_p2 = (tmp_54_reg_2967 & cmp_i_i297_not_fu_1704_p2);

assign newZtop_V_2_fu_1714_p3 = ((shiftOriginal_1_fu_1699_p2[0:0] == 1'b1) ? z_top_max : z_top_min);

assign notlhs35_fu_1525_p2 = ((tmp_26_fu_1511_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign notlhs37_fu_1442_p2 = ((tmp_23_fu_1428_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign notlhs39_fu_1363_p2 = ((tmp_s_fu_1349_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign notlhs_fu_1604_p2 = ((tmp_29_fu_1590_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign notrhs36_fu_1531_p2 = ((empty_92_fu_1521_p1 == 52'd0) ? 1'b1 : 1'b0);

assign notrhs38_fu_1448_p2 = ((empty_87_fu_1438_p1 == 52'd0) ? 1'b1 : 1'b0);

assign notrhs40_fu_1369_p2 = ((empty_fu_1359_p1 == 52'd0) ? 1'b1 : 1'b0);

assign notrhs_fu_1610_p2 = ((empty_97_fu_1600_p1 == 52'd0) ? 1'b1 : 1'b0);

assign or_ln1118_fu_1896_p2 = (icmp_ln1118_reg_3102 | and_ln1116_reg_3118);

assign or_ln1143_fu_2067_p2 = (icmp_ln1143_reg_3204 | and_ln1141_reg_3220);

assign or_ln1155_fu_2212_p2 = (icmp_ln1155_reg_3283 | and_ln1153_reg_3308);

assign or_ln791_1_fu_1736_p2 = (or_ln791_reg_2927 | icmp_ln791_reg_3011);

assign or_ln791_2_fu_1651_p2 = (empty_91_reg_623 | empty_101_reg_650);

assign or_ln791_3_fu_1768_p2 = (or_ln791_2_reg_2932 | icmp_ln791_1_reg_3030);

assign or_ln791_fu_1631_p2 = (empty_96_reg_638 | empty_86_reg_611);

assign original_topL_jL_V_4_fu_2359_p3 = ((shiftOriginal_1_reg_2986[0:0] == 1'b1) ? reg_1153 : original_topL_jL_V_reg_724);

assign original_topL_jR_V_3_fu_2408_p3 = ((shiftOriginal_1_reg_2986[0:0] == 1'b1) ? reg_1153 : original_topL_jR_V_1_reg_754);

assign original_topR_jL_V_3_fu_2366_p3 = ((shiftOriginal_1_reg_2986[0:0] == 1'b1) ? reg_1149 : original_topR_jL_V_1_reg_734);

assign original_topR_jR_V_3_fu_2401_p3 = ((shiftOriginal_1_reg_2986[0:0] == 1'b1) ? reg_1149 : original_topR_jR_V_1_reg_694);

assign p_Result_4_fu_1415_p1 = data_V_7_fu_1411_p1[62:0];

assign p_Result_5_fu_1498_p1 = data_V_8_fu_1494_p1[62:0];

assign p_Result_6_fu_1577_p1 = data_V_9_fu_1573_p1[62:0];

assign p_Result_s_fu_1336_p1 = data_V_fu_1332_p1[62:0];

assign p_shl5_cast_fu_2233_p3 = {{trunc_ln1159_reg_3336}, {3'd0}};

assign patches_parameters_d1 = grp_getShadows_fu_1001_wp_parameters_d1;

assign ret_21_fu_1475_p0 = complementary_topR_jR_V_3_reg_2806;

assign ret_21_fu_1475_p1 = sext_ln215_15_fu_1472_p0;

assign ret_23_fu_1562_p0 = complementary_topL_jR_V_3_reg_2859;

assign ret_23_fu_1562_p1 = sext_ln215_17_fu_1559_p0;

assign ret_25_fu_2444_p0 = complementary_topR_jL_V_3_reg_3439;

assign ret_26_fu_2452_p1 = original_topR_jR_V_3_reg_3465;

assign ret_27_fu_2468_p0 = complementary_topL_jL_V_3_reg_3445;

assign ret_28_fu_2476_p1 = original_topL_jR_V_3_reg_3472;

assign ret_fu_1400_p0 = original_topL_jL_V_3_reg_2759;

assign ret_fu_1400_p1 = sext_ln215_13_fu_1397_p0;

assign secondLastPatchIndex_1_fu_1173_p3 = ((icmp_ln710_reg_2554[0:0] == 1'b1) ? 8'd0 : secondLastPatchIndex_reg_2559);

assign select_ln1116_1_fu_1879_p3 = ((icmp_ln1118_reg_3102[0:0] == 1'b1) ? add_ln1116_reg_3097 : a_reg_811);

assign select_ln1116_2_fu_1921_p3 = ((icmp_ln1118_reg_3102[0:0] == 1'b1) ? 4'd0 : trunc_ln1122_1_fu_1917_p1);

assign select_ln1116_fu_1855_p3 = ((icmp_ln1118_reg_3102[0:0] == 1'b1) ? 5'd0 : ap_phi_mux_b_phi_fu_839_p4);

assign select_ln1118_1_fu_1928_p3 = ((and_ln1116_reg_3118[0:0] == 1'b1) ? trunc_ln1122_fu_1914_p1 : select_ln1116_2_fu_1921_p3);

assign select_ln1118_2_fu_1943_p3 = ((and_ln1116_reg_3118[0:0] == 1'b1) ? add_ln1118_reg_3135 : select_ln1116_reg_3112);

assign select_ln1118_3_fu_1908_p3 = ((icmp_ln1118_reg_3102[0:0] == 1'b1) ? 7'd1 : add_ln1118_1_reg_3130);

assign select_ln1118_fu_1900_p3 = ((or_ln1118_fu_1896_p2[0:0] == 1'b1) ? 2'd0 : c_reg_847);

assign select_ln1141_1_fu_2050_p3 = ((icmp_ln1143_reg_3204[0:0] == 1'b1) ? add_ln1141_reg_3199 : b_1_reg_894);

assign select_ln1141_2_fu_2092_p3 = ((icmp_ln1143_reg_3204[0:0] == 1'b1) ? 4'd0 : trunc_ln1147_1_fu_2088_p1);

assign select_ln1141_fu_2026_p3 = ((icmp_ln1143_reg_3204[0:0] == 1'b1) ? 5'd0 : ap_phi_mux_c_1_phi_fu_922_p4);

assign select_ln1143_1_fu_2099_p3 = ((and_ln1141_reg_3220[0:0] == 1'b1) ? trunc_ln1147_fu_2085_p1 : select_ln1141_2_fu_2092_p3);

assign select_ln1143_2_fu_2114_p3 = ((and_ln1141_reg_3220[0:0] == 1'b1) ? add_ln1143_reg_3237 : select_ln1141_reg_3214);

assign select_ln1143_3_fu_2079_p3 = ((icmp_ln1143_reg_3204[0:0] == 1'b1) ? 7'd1 : add_ln1143_1_reg_3232);

assign select_ln1143_fu_2071_p3 = ((or_ln1143_fu_2067_p2[0:0] == 1'b1) ? 2'd0 : d_reg_930);

assign select_ln1153_1_fu_2172_p3 = ((icmp_ln1155_reg_3283[0:0] == 1'b1) ? add_ln1153_reg_3278 : b_2_reg_953);

assign select_ln1153_fu_2165_p3 = ((icmp_ln1155_reg_3283[0:0] == 1'b1) ? 3'd0 : ap_phi_mux_c_2_phi_fu_981_p4);

assign select_ln1155_1_fu_2224_p3 = ((and_ln1153_reg_3308[0:0] == 1'b1) ? add_ln1155_reg_3314 : select_ln1153_reg_3292);

assign select_ln1155_2_fu_2206_p3 = ((icmp_ln1155_reg_3283[0:0] == 1'b1) ? 6'd1 : add_ln1155_1_reg_3303);

assign select_ln1155_fu_2216_p3 = ((or_ln1155_fu_2212_p2[0:0] == 1'b1) ? 3'd0 : d_1_reg_989);

assign select_ln534_fu_1794_p3 = ((icmp_ln878_6_reg_3051[0:0] == 1'b1) ? empty_102_reg_704 : empty_103_reg_664);

assign sext_ln215_13_fu_1397_p0 = apexZ0;

assign sext_ln215_15_fu_1472_p0 = complementary_apexZ0;

assign sext_ln215_17_fu_1559_p0 = apexZ0;

assign sext_ln215_18_fu_2415_p1 = original_topR_jL_V_3_reg_3432;

assign sext_ln215_19_fu_2418_p1 = complementary_topR_jR_V_4_reg_3451;

assign sext_ln215_20_fu_2425_p1 = original_topL_jL_V_4_reg_3425;

assign sext_ln215_21_fu_2428_p1 = complementary_topL_jR_V_4_reg_3458;

assign sext_ln534_fu_1801_p1 = $signed(select_ln534_reg_3056);

assign sext_ln774_fu_1695_p1 = $signed(shifted_Align_1_fu_1689_p3);

assign shiftOriginal_1_fu_1699_p2 = (shiftOriginal_fu_1684_p2 | icmp_ln886_6_reg_2974);

assign shiftOriginal_fu_1684_p2 = (tmp_54_reg_2967 ^ 1'd1);

assign shifted_Align_1_fu_1689_p1 = apexZ0;

assign shifted_Align_1_fu_1689_p3 = ((icmp_ln886_6_reg_2974[0:0] == 1'b1) ? shifted_Align_1_fu_1689_p1 : shifted_Align_fu_1679_p3);

assign shifted_Align_5_fu_1816_p3 = ((shiftOriginal_1_reg_2986[0:0] == 1'b1) ? shifted_Align_3_reg_3067 : shifted_Align_4_reg_3072);

assign shifted_Align_fu_1679_p1 = complementary_apexZ0;

assign shifted_Align_fu_1679_p2 = apexZ0;

assign shifted_Align_fu_1679_p3 = ((tmp_54_reg_2967[0:0] == 1'b1) ? shifted_Align_fu_1679_p1 : shifted_Align_fu_1679_p2);

assign sub_ln1159_fu_2251_p2 = (p_shl5_cast_fu_2233_p3 - zext_ln1159_fu_2247_p1);

assign temp_V_address0 = grp_makeSuperPoint_alignedToLine8_fu_1038_temp_V_address0;

assign temp_V_address1 = grp_makeSuperPoint_alignedToLine8_fu_1038_temp_V_address1;

assign temp_V_ce0 = grp_makeSuperPoint_alignedToLine8_fu_1038_temp_V_ce0;

assign temp_V_ce1 = grp_makeSuperPoint_alignedToLine8_fu_1038_temp_V_ce1;

assign temp_V_d0 = grp_makeSuperPoint_alignedToLine8_fu_1038_temp_V_d0;

assign temp_V_d1 = grp_makeSuperPoint_alignedToLine8_fu_1038_temp_V_d1;

assign temp_V_we0 = grp_makeSuperPoint_alignedToLine8_fu_1038_temp_V_we0;

assign temp_V_we1 = grp_makeSuperPoint_alignedToLine8_fu_1038_temp_V_we1;

assign tmp_23_fu_1428_p4 = {{data_V_7_fu_1411_p1[62:52]}};

assign tmp_26_fu_1511_p4 = {{data_V_8_fu_1494_p1[62:52]}};

assign tmp_27_fu_1190_p3 = {{lastPatchIndex}, {3'd0}};

assign tmp_29_fu_1590_p4 = {{data_V_9_fu_1573_p1[62:52]}};

assign tmp_30_fu_1218_p3 = {{secondLastPatchIndex_1_reg_2570}, {3'd0}};

assign tmp_55_fu_1720_p4 = {{empty_103_reg_664[31:1]}};

assign tmp_56_fu_1748_p4 = {{empty_102_reg_704[31:1]}};

assign tmp_57_fu_2240_p3 = {{select_ln1155_1_reg_3330}, {1'd0}};

assign tmp_s_fu_1349_p4 = {{data_V_fu_1332_p1[62:52]}};

assign trunc_ln1122_1_fu_1917_p1 = b_reg_835[3:0];

assign trunc_ln1122_fu_1914_p1 = add_ln1118_reg_3135[3:0];

assign trunc_ln1147_1_fu_2088_p1 = c_1_reg_918[3:0];

assign trunc_ln1147_fu_2085_p1 = add_ln1143_reg_3237[3:0];

assign trunc_ln1159_fu_2229_p1 = select_ln1155_1_fu_2224_p3[1:0];

assign trunc_ln164_fu_2517_p1 = shifted_Align_2_reg_790[31:0];

assign trunc_ln723_fu_1179_p1 = secondLastPatchIndex_1_fu_1173_p3[4:0];

assign trunc_ln732_fu_1169_p1 = lastPatchIndex[4:0];

assign trunc_ln821_fu_2293_p1 = add_ln817_fu_2287_p2[4:0];

assign trunc_ln839_1_fu_2461_p1 = ret_25_fu_2444_p2[31:0];

assign trunc_ln839_fu_2457_p1 = ret_26_fu_2452_p2[31:0];

assign trunc_ln840_1_fu_2485_p1 = ret_27_fu_2468_p2[31:0];

assign trunc_ln840_fu_2481_p1 = ret_28_fu_2476_p2[31:0];

assign xor_ln1116_fu_1862_p2 = (icmp_ln1118_reg_3102 ^ 1'd1);

assign xor_ln1141_fu_2033_p2 = (icmp_ln1143_reg_3204 ^ 1'd1);

assign xor_ln1153_fu_2184_p2 = (icmp_ln1155_reg_3283 ^ 1'd1);

assign xor_ln791_fu_1772_p2 = (or_ln791_3_fu_1768_p2 ^ 1'd1);

assign zext_ln1122_1_fu_1962_p1 = add_ln1122_reg_3157;

assign zext_ln1147_1_fu_2133_p1 = add_ln1147_reg_3259;

assign zext_ln1159_1_fu_2257_p1 = select_ln1155_reg_3324;

assign zext_ln1159_2_fu_2271_p1 = add_ln1159_reg_3341;

assign zext_ln1159_fu_2247_p1 = tmp_57_fu_2240_p3;

assign zext_ln368_3_fu_1419_p1 = p_Result_4_fu_1415_p1;

assign zext_ln368_4_fu_1502_p1 = p_Result_5_fu_1498_p1;

assign zext_ln368_5_fu_1581_p1 = p_Result_6_fu_1577_p1;

assign zext_ln368_fu_1340_p1 = p_Result_s_fu_1336_p1;

assign zext_ln720_fu_1207_p1 = lastPatchIndex;

assign zext_ln721_fu_1240_p1 = secondLastPatchIndex_1_reg_2570;

assign zext_ln723_1_fu_1244_p1 = add_ln723_reg_2642;

assign zext_ln727_fu_1317_p1 = grp_fu_1278_p2;

assign zext_ln732_1_fu_1297_p1 = grp_fu_1258_p2;

assign zext_ln737_fu_1302_p1 = grp_fu_1263_p2;

assign zext_ln745_fu_1307_p1 = grp_fu_1268_p2;

assign zext_ln746_fu_1312_p1 = grp_fu_1273_p2;

assign zext_ln747_fu_1322_p1 = grp_fu_1283_p2;

assign zext_ln748_fu_1327_p1 = grp_fu_1288_p2;

assign zext_ln821_fu_2343_p1 = add_ln821_reg_3385;

assign zext_ln822_fu_2347_p1 = add_ln822_reg_3390;

assign zext_ln823_fu_2351_p1 = add_ln823_reg_3405;

assign zext_ln824_fu_2355_p1 = add_ln824_reg_3410;

assign zext_ln861_fu_2544_p1 = add_ln861_reg_3575;

always @ (posedge ap_clk) begin
    zext_ln720_reg_2606[8] <= 1'b0;
    zext_ln721_reg_2637[8] <= 1'b0;
    zext_ln861_reg_3580[8] <= 1'b0;
end

endmodule //makePatches_ShadowQuilt_fromEdges_makeThirdPatch
