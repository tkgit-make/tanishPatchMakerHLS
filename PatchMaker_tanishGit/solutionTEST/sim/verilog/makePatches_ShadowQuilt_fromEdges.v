// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="makePatches_ShadowQuilt_fromEdges_makePatches_ShadowQuilt_fromEdges,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu19p-fsvb3824-2-e,HLS_INPUT_CLOCK=1.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.170000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=5,HLS_SYN_DSP=0,HLS_SYN_FF=125442,HLS_SYN_LUT=98802,HLS_VERSION=2020_2}" *)

module makePatches_ShadowQuilt_fromEdges (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        stop,
        ppl,
        leftRight,
        n_patches_i,
        n_patches_o,
        n_patches_o_ap_vld,
        GDarray_address0,
        GDarray_ce0,
        GDarray_q0,
        GDn_points_address0,
        GDn_points_ce0,
        GDn_points_q0,
        patches_superpoints_address0,
        patches_superpoints_ce0,
        patches_superpoints_we0,
        patches_superpoints_d0,
        patches_superpoints_q0,
        patches_superpoints_address1,
        patches_superpoints_ce1,
        patches_superpoints_q1
);

parameter    ap_ST_fsm_state1 = 42'd1;
parameter    ap_ST_fsm_pp0_stage0 = 42'd2;
parameter    ap_ST_fsm_pp0_stage1 = 42'd4;
parameter    ap_ST_fsm_pp0_stage2 = 42'd8;
parameter    ap_ST_fsm_state8 = 42'd16;
parameter    ap_ST_fsm_state9 = 42'd32;
parameter    ap_ST_fsm_state10 = 42'd64;
parameter    ap_ST_fsm_state11 = 42'd128;
parameter    ap_ST_fsm_state12 = 42'd256;
parameter    ap_ST_fsm_state13 = 42'd512;
parameter    ap_ST_fsm_state14 = 42'd1024;
parameter    ap_ST_fsm_state15 = 42'd2048;
parameter    ap_ST_fsm_state16 = 42'd4096;
parameter    ap_ST_fsm_state17 = 42'd8192;
parameter    ap_ST_fsm_state18 = 42'd16384;
parameter    ap_ST_fsm_state19 = 42'd32768;
parameter    ap_ST_fsm_state20 = 42'd65536;
parameter    ap_ST_fsm_state21 = 42'd131072;
parameter    ap_ST_fsm_state22 = 42'd262144;
parameter    ap_ST_fsm_state23 = 42'd524288;
parameter    ap_ST_fsm_state24 = 42'd1048576;
parameter    ap_ST_fsm_state25 = 42'd2097152;
parameter    ap_ST_fsm_state26 = 42'd4194304;
parameter    ap_ST_fsm_state27 = 42'd8388608;
parameter    ap_ST_fsm_state28 = 42'd16777216;
parameter    ap_ST_fsm_state29 = 42'd33554432;
parameter    ap_ST_fsm_state30 = 42'd67108864;
parameter    ap_ST_fsm_state31 = 42'd134217728;
parameter    ap_ST_fsm_state32 = 42'd268435456;
parameter    ap_ST_fsm_state33 = 42'd536870912;
parameter    ap_ST_fsm_state34 = 42'd1073741824;
parameter    ap_ST_fsm_state35 = 42'd2147483648;
parameter    ap_ST_fsm_state36 = 42'd4294967296;
parameter    ap_ST_fsm_state37 = 42'd8589934592;
parameter    ap_ST_fsm_state38 = 42'd17179869184;
parameter    ap_ST_fsm_state39 = 42'd34359738368;
parameter    ap_ST_fsm_state40 = 42'd68719476736;
parameter    ap_ST_fsm_state41 = 42'd137438953472;
parameter    ap_ST_fsm_state42 = 42'd274877906944;
parameter    ap_ST_fsm_state43 = 42'd549755813888;
parameter    ap_ST_fsm_state44 = 42'd1099511627776;
parameter    ap_ST_fsm_state45 = 42'd2199023255552;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] stop;
input  [31:0] ppl;
input   leftRight;
input  [7:0] n_patches_i;
output  [7:0] n_patches_o;
output   n_patches_o_ap_vld;
output  [9:0] GDarray_address0;
output   GDarray_ce0;
input  [63:0] GDarray_q0;
output  [2:0] GDn_points_address0;
output   GDn_points_ce0;
input  [31:0] GDn_points_q0;
output  [11:0] patches_superpoints_address0;
output   patches_superpoints_ce0;
output   patches_superpoints_we0;
output  [63:0] patches_superpoints_d0;
input  [63:0] patches_superpoints_q0;
output  [11:0] patches_superpoints_address1;
output   patches_superpoints_ce1;
input  [63:0] patches_superpoints_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] n_patches_o;
reg n_patches_o_ap_vld;
reg GDarray_ce0;

(* fsm_encoding = "none" *) reg   [41:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [9:0] indvar_flatten_reg_208;
reg   [2:0] a_reg_219;
reg   [7:0] b_reg_231;
wire   [9:0] add_ln474_1_fu_360_p2;
reg   [9:0] add_ln474_1_reg_708;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln474_fu_366_p2;
reg   [0:0] icmp_ln474_reg_713;
reg   [0:0] icmp_ln474_reg_713_pp0_iter1_reg;
wire   [2:0] add_ln474_fu_372_p2;
reg   [2:0] add_ln474_reg_717;
wire   [0:0] icmp_ln476_fu_378_p2;
reg   [0:0] icmp_ln476_reg_722;
wire   [7:0] select_ln474_fu_384_p3;
reg   [7:0] select_ln474_reg_728;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire   [2:0] select_ln474_1_fu_391_p3;
reg   [2:0] select_ln474_1_reg_734;
wire   [6:0] trunc_ln478_fu_397_p1;
reg   [6:0] trunc_ln478_reg_741;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state7_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire   [7:0] add_ln476_fu_412_p2;
reg   [7:0] add_ln476_reg_751;
wire   [10:0] add_ln478_fu_431_p2;
reg   [10:0] add_ln478_reg_756;
reg   [31:0] trunc_ln_reg_762;
wire   [31:0] trunc_ln69_fu_447_p1;
reg   [31:0] trunc_ln69_reg_767;
wire   [0:0] icmp_ln504_fu_493_p2;
reg   [0:0] icmp_ln504_reg_785;
wire    ap_CS_fsm_state10;
wire   [31:0] grp_fu_357_p1;
reg   [31:0] conv_i_i_reg_789;
wire    ap_CS_fsm_state17;
wire   [31:0] grp_fu_352_p2;
reg   [31:0] dc_reg_794;
wire    ap_CS_fsm_state25;
wire   [31:0] data_V_fu_499_p1;
reg   [31:0] data_V_reg_799;
wire    ap_CS_fsm_state26;
wire   [22:0] tmp_69_fu_512_p1;
reg   [22:0] tmp_69_reg_804;
wire   [8:0] add_ln341_fu_520_p2;
reg   [8:0] add_ln341_reg_809;
reg   [0:0] isNeg_reg_814;
wire   [7:0] sub_ln1311_fu_534_p2;
reg   [7:0] sub_ln1311_reg_820;
wire   [8:0] ush_fu_543_p3;
reg   [8:0] ush_reg_825;
wire    ap_CS_fsm_state27;
wire   [110:0] zext_ln15_fu_558_p1;
wire    ap_CS_fsm_state28;
wire   [110:0] sh_prom_i_i_i_i_i_i_cast_cast_cast_cast_fu_565_p1;
reg   [0:0] tmp_reg_842;
wire    ap_CS_fsm_state34;
reg   [31:0] tmp_67_reg_847;
wire   [31:0] val_fu_602_p3;
reg   [31:0] val_reg_852;
wire    ap_CS_fsm_state35;
wire   [31:0] result_V_6_fu_608_p2;
reg   [31:0] result_V_6_reg_858;
wire    ap_CS_fsm_state36;
wire   [31:0] add_ln69_fu_626_p2;
reg   [31:0] add_ln69_reg_863;
wire    ap_CS_fsm_state37;
wire   [0:0] icmp_ln878_fu_632_p2;
reg   [0:0] icmp_ln878_reg_869;
wire    ap_CS_fsm_state38;
wire   [31:0] select_ln506_fu_637_p3;
wire    ap_CS_fsm_state39;
wire   [0:0] icmp_ln531_fu_643_p2;
reg   [0:0] icmp_ln531_reg_879;
wire    ap_CS_fsm_state41;
wire   [0:0] and_ln531_1_fu_654_p2;
reg   [0:0] and_ln531_1_reg_884;
wire    ap_CS_fsm_state42;
wire   [31:0] grp_solveNextPatchPair_fu_324_ap_return_0;
wire   [31:0] grp_solveNextPatchPair_fu_324_ap_return_1;
wire   [31:0] grp_solveNextPatchPair_fu_324_ap_return_2;
wire   [31:0] grp_solveNextPatchPair_fu_324_ap_return_3;
wire   [31:0] grp_solveNextPatchPair_fu_324_ap_return_4;
wire   [31:0] grp_solveNextPatchPair_fu_324_ap_return_5;
wire   [31:0] grp_solveNextPatchPair_fu_324_ap_return_6;
reg   [31:0] call_ret1_reg_888_2;
reg   [31:0] call_ret1_reg_888_3;
wire    ap_CS_fsm_state44;
reg   [31:0] complementary_apexZ0_V_reg_894;
reg   [31:0] nPatchesInColumn_1_reg_899;
reg   [31:0] z_top_max_V_reg_904;
reg   [31:0] z_top_min_V_reg_909;
wire   [0:0] icmp_ln515_fu_691_p2;
wire    ap_CS_fsm_state45;
wire   [0:0] icmp_ln515_1_fu_697_p2;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage2_subdone;
wire   [31:0] patches_parameters_q0;
wire   [31:0] patches_parameters_q1;
reg   [10:0] GDarrayDecoded_V_address0;
reg    GDarrayDecoded_V_ce0;
reg    GDarrayDecoded_V_we0;
wire   [31:0] GDarrayDecoded_V_q0;
reg   [10:0] GDarrayDecoded_V_address1;
reg    GDarrayDecoded_V_ce1;
reg    GDarrayDecoded_V_we1;
wire   [31:0] GDarrayDecoded_V_q1;
wire    grp_solveNextPatchPair_fu_324_ap_start;
wire    grp_solveNextPatchPair_fu_324_ap_done;
wire    grp_solveNextPatchPair_fu_324_ap_idle;
wire    grp_solveNextPatchPair_fu_324_ap_ready;
wire   [7:0] grp_solveNextPatchPair_fu_324_n_patches_o;
wire    grp_solveNextPatchPair_fu_324_n_patches_o_ap_vld;
wire   [2:0] grp_solveNextPatchPair_fu_324_GDn_points_address0;
wire    grp_solveNextPatchPair_fu_324_GDn_points_ce0;
wire   [11:0] grp_solveNextPatchPair_fu_324_patches_superpoints_address0;
wire    grp_solveNextPatchPair_fu_324_patches_superpoints_ce0;
wire    grp_solveNextPatchPair_fu_324_patches_superpoints_we0;
wire   [63:0] grp_solveNextPatchPair_fu_324_patches_superpoints_d0;
wire   [11:0] grp_solveNextPatchPair_fu_324_patches_superpoints_address1;
wire    grp_solveNextPatchPair_fu_324_patches_superpoints_ce1;
wire   [10:0] grp_solveNextPatchPair_fu_324_GDarrayDecoded_address0;
wire    grp_solveNextPatchPair_fu_324_GDarrayDecoded_ce0;
wire   [10:0] grp_solveNextPatchPair_fu_324_GDarrayDecoded_address1;
wire    grp_solveNextPatchPair_fu_324_GDarrayDecoded_ce1;
wire   [11:0] grp_solveNextPatchPair_fu_324_patches_parameters_address0;
wire    grp_solveNextPatchPair_fu_324_patches_parameters_ce0;
wire    grp_solveNextPatchPair_fu_324_patches_parameters_we0;
wire   [31:0] grp_solveNextPatchPair_fu_324_patches_parameters_d0;
wire   [11:0] grp_solveNextPatchPair_fu_324_patches_parameters_address1;
wire    grp_solveNextPatchPair_fu_324_patches_parameters_ce1;
wire    grp_solveNextPatchPair_fu_324_patches_parameters_we1;
wire   [31:0] grp_solveNextPatchPair_fu_324_patches_parameters_d1;
reg   [9:0] ap_phi_mux_indvar_flatten_phi_fu_212_p4;
wire    ap_block_pp0_stage0;
reg   [2:0] ap_phi_mux_a_phi_fu_223_p4;
reg   [7:0] ap_phi_mux_b_phi_fu_235_p4;
reg   [31:0] z_top_max_V_125_ph_reg_243;
wire    ap_CS_fsm_state11;
reg   [31:0] nPatchesInColumn_reg_255;
wire    ap_CS_fsm_state40;
reg   [0:0] phi_ln531_reg_267;
reg   [0:0] phi_ln886_reg_278;
reg   [31:0] z_top_max_V_125_reg_289;
reg   [31:0] complementary_apexZ0_V_0_reg_300;
reg   [31:0] z_top_min_V_0_reg_312;
reg    grp_solveNextPatchPair_fu_324_ap_start_reg;
wire    ap_CS_fsm_state43;
wire   [63:0] zext_ln478_1_fu_407_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln478_2_fu_458_p1;
wire   [63:0] zext_ln479_fu_474_p1;
reg   [31:0] saved_apexZ0_fu_156;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state18;
wire    ap_block_pp0_stage1;
wire   [9:0] tmp_44_fu_401_p3;
wire   [9:0] tmp_s_fu_417_p3;
wire   [10:0] add_ln478_fu_431_p0;
wire   [10:0] add_ln478_fu_431_p1;
wire   [11:0] tmp_65_fu_451_p3;
wire   [10:0] shl_ln478_fu_463_p2;
wire   [10:0] or_ln479_fu_468_p2;
wire   [7:0] tmp_68_fu_502_p4;
wire   [8:0] add_ln341_fu_520_p0;
wire   [7:0] sub_ln1311_fu_534_p1;
wire  signed [8:0] sext_ln1311_fu_540_p1;
wire   [24:0] mantissa_fu_549_p4;
wire  signed [31:0] sh_prom_i_i_i_i_i_i_cast_cast_cast_fu_562_p1;
wire   [110:0] grp_fu_569_p2;
wire   [110:0] grp_fu_575_p2;
wire   [31:0] zext_ln662_fu_599_p1;
wire   [0:0] p_Result_s_fu_613_p3;
wire   [31:0] add_ln69_fu_626_p0;
wire   [0:0] and_ln531_fu_649_p2;
wire   [0:0] icmp_ln886_fu_487_p2;
reg   [41:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 42'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_solveNextPatchPair_fu_324_ap_start_reg = 1'b0;
end

makePatches_ShadowQuilt_fromEdges_patches_parameters #(
    .DataWidth( 32 ),
    .AddressRange( 3840 ),
    .AddressWidth( 12 ))
patches_parameters_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_solveNextPatchPair_fu_324_patches_parameters_address0),
    .ce0(grp_solveNextPatchPair_fu_324_patches_parameters_ce0),
    .we0(grp_solveNextPatchPair_fu_324_patches_parameters_we0),
    .d0(grp_solveNextPatchPair_fu_324_patches_parameters_d0),
    .q0(patches_parameters_q0),
    .address1(grp_solveNextPatchPair_fu_324_patches_parameters_address1),
    .ce1(grp_solveNextPatchPair_fu_324_patches_parameters_ce1),
    .we1(grp_solveNextPatchPair_fu_324_patches_parameters_we1),
    .d1(grp_solveNextPatchPair_fu_324_patches_parameters_d1),
    .q1(patches_parameters_q1)
);

makePatches_ShadowQuilt_fromEdges_GDarrayDecoded_V #(
    .DataWidth( 32 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
GDarrayDecoded_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(GDarrayDecoded_V_address0),
    .ce0(GDarrayDecoded_V_ce0),
    .we0(GDarrayDecoded_V_we0),
    .d0(trunc_ln69_reg_767),
    .q0(GDarrayDecoded_V_q0),
    .address1(GDarrayDecoded_V_address1),
    .ce1(GDarrayDecoded_V_ce1),
    .we1(GDarrayDecoded_V_we1),
    .d1(trunc_ln_reg_762),
    .q1(GDarrayDecoded_V_q1)
);

makePatches_ShadowQuilt_fromEdges_solveNextPatchPair grp_solveNextPatchPair_fu_324(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_solveNextPatchPair_fu_324_ap_start),
    .ap_done(grp_solveNextPatchPair_fu_324_ap_done),
    .ap_idle(grp_solveNextPatchPair_fu_324_ap_idle),
    .ap_ready(grp_solveNextPatchPair_fu_324_ap_ready),
    .n_patches_i(n_patches_i),
    .n_patches_o(grp_solveNextPatchPair_fu_324_n_patches_o),
    .n_patches_o_ap_vld(grp_solveNextPatchPair_fu_324_n_patches_o_ap_vld),
    .GDn_points_address0(grp_solveNextPatchPair_fu_324_GDn_points_address0),
    .GDn_points_ce0(grp_solveNextPatchPair_fu_324_GDn_points_ce0),
    .GDn_points_q0(GDn_points_q0),
    .patches_superpoints_address0(grp_solveNextPatchPair_fu_324_patches_superpoints_address0),
    .patches_superpoints_ce0(grp_solveNextPatchPair_fu_324_patches_superpoints_ce0),
    .patches_superpoints_we0(grp_solveNextPatchPair_fu_324_patches_superpoints_we0),
    .patches_superpoints_d0(grp_solveNextPatchPair_fu_324_patches_superpoints_d0),
    .patches_superpoints_q0(patches_superpoints_q0),
    .patches_superpoints_address1(grp_solveNextPatchPair_fu_324_patches_superpoints_address1),
    .patches_superpoints_ce1(grp_solveNextPatchPair_fu_324_patches_superpoints_ce1),
    .patches_superpoints_q1(patches_superpoints_q1),
    .apexZ0(saved_apexZ0_fu_156),
    .ppl(ppl),
    .p_read1(nPatchesInColumn_reg_255),
    .p_read4(z_top_min_V_0_reg_312),
    .z_top_max_read(z_top_max_V_125_reg_289),
    .p_read7(complementary_apexZ0_V_0_reg_300),
    .GDarrayDecoded_address0(grp_solveNextPatchPair_fu_324_GDarrayDecoded_address0),
    .GDarrayDecoded_ce0(grp_solveNextPatchPair_fu_324_GDarrayDecoded_ce0),
    .GDarrayDecoded_q0(GDarrayDecoded_V_q0),
    .GDarrayDecoded_address1(grp_solveNextPatchPair_fu_324_GDarrayDecoded_address1),
    .GDarrayDecoded_ce1(grp_solveNextPatchPair_fu_324_GDarrayDecoded_ce1),
    .GDarrayDecoded_q1(GDarrayDecoded_V_q1),
    .patches_parameters_address0(grp_solveNextPatchPair_fu_324_patches_parameters_address0),
    .patches_parameters_ce0(grp_solveNextPatchPair_fu_324_patches_parameters_ce0),
    .patches_parameters_we0(grp_solveNextPatchPair_fu_324_patches_parameters_we0),
    .patches_parameters_d0(grp_solveNextPatchPair_fu_324_patches_parameters_d0),
    .patches_parameters_q0(patches_parameters_q0),
    .patches_parameters_address1(grp_solveNextPatchPair_fu_324_patches_parameters_address1),
    .patches_parameters_ce1(grp_solveNextPatchPair_fu_324_patches_parameters_ce1),
    .patches_parameters_we1(grp_solveNextPatchPair_fu_324_patches_parameters_we1),
    .patches_parameters_d1(grp_solveNextPatchPair_fu_324_patches_parameters_d1),
    .patches_parameters_q1(patches_parameters_q1),
    .ap_return_0(grp_solveNextPatchPair_fu_324_ap_return_0),
    .ap_return_1(grp_solveNextPatchPair_fu_324_ap_return_1),
    .ap_return_2(grp_solveNextPatchPair_fu_324_ap_return_2),
    .ap_return_3(grp_solveNextPatchPair_fu_324_ap_return_3),
    .ap_return_4(grp_solveNextPatchPair_fu_324_ap_return_4),
    .ap_return_5(grp_solveNextPatchPair_fu_324_ap_return_5),
    .ap_return_6(grp_solveNextPatchPair_fu_324_ap_return_6)
);

makePatches_ShadowQuilt_fromEdges_fmul_32ns_32ns_32_8_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_8_max_dsp_1_U512(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_i_i_reg_789),
    .din1(32'd1084227584),
    .ce(1'b1),
    .dout(grp_fu_352_p2)
);

makePatches_ShadowQuilt_fromEdges_sitofp_32ns_32_7_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32ns_32_7_no_dsp_1_U513(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(saved_apexZ0_fu_156),
    .ce(1'b1),
    .dout(grp_fu_357_p1)
);

makePatches_ShadowQuilt_fromEdges_add_10ns_10ns_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
add_10ns_10ns_10_1_1_U514(
    .din0(ap_phi_mux_indvar_flatten_phi_fu_212_p4),
    .din1(10'd1),
    .dout(add_ln474_1_fu_360_p2)
);

makePatches_ShadowQuilt_fromEdges_add_3ns_3ns_3_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
add_3ns_3ns_3_1_1_U515(
    .din0(ap_phi_mux_a_phi_fu_223_p4),
    .din1(3'd1),
    .dout(add_ln474_fu_372_p2)
);

makePatches_ShadowQuilt_fromEdges_add_8ns_8ns_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
add_8ns_8ns_8_1_1_U516(
    .din0(select_ln474_reg_728),
    .din1(8'd1),
    .dout(add_ln476_fu_412_p2)
);

makePatches_ShadowQuilt_fromEdges_add_11ns_11ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
add_11ns_11ns_11_1_1_U517(
    .din0(add_ln478_fu_431_p0),
    .din1(add_ln478_fu_431_p1),
    .dout(add_ln478_fu_431_p2)
);

makePatches_ShadowQuilt_fromEdges_add_9ns_9s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
add_9ns_9s_9_1_1_U518(
    .din0(add_ln341_fu_520_p0),
    .din1(9'd385),
    .dout(add_ln341_fu_520_p2)
);

makePatches_ShadowQuilt_fromEdges_sub_8ns_8ns_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
sub_8ns_8ns_8_1_1_U519(
    .din0(8'd127),
    .din1(sub_ln1311_fu_534_p1),
    .dout(sub_ln1311_fu_534_p2)
);

makePatches_ShadowQuilt_fromEdges_lshr_111ns_32ns_111_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 1 ),
    .din0_WIDTH( 111 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 111 ))
lshr_111ns_32ns_111_7_1_U520(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(zext_ln15_fu_558_p1),
    .din1(sh_prom_i_i_i_i_i_i_cast_cast_cast_cast_fu_565_p1),
    .ce(1'b1),
    .dout(grp_fu_569_p2)
);

makePatches_ShadowQuilt_fromEdges_shl_111ns_32ns_111_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 0 ),
    .din0_WIDTH( 111 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 111 ))
shl_111ns_32ns_111_7_1_U521(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(zext_ln15_fu_558_p1),
    .din1(sh_prom_i_i_i_i_i_i_cast_cast_cast_cast_fu_565_p1),
    .ce(1'b1),
    .dout(grp_fu_575_p2)
);

makePatches_ShadowQuilt_fromEdges_sub_32ns_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sub_32ns_32ns_32_1_1_U522(
    .din0(32'd0),
    .din1(val_reg_852),
    .dout(result_V_6_fu_608_p2)
);

makePatches_ShadowQuilt_fromEdges_add_32ns_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
add_32ns_32ns_32_1_1_U523(
    .din0(add_ln69_fu_626_p0),
    .din1(32'd60000000),
    .dout(add_ln69_fu_626_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_solveNextPatchPair_fu_324_ap_start_reg <= 1'b0;
    end else begin
        if (((1'd1 == and_ln531_1_reg_884) & (1'b1 == ap_CS_fsm_state43))) begin
            grp_solveNextPatchPair_fu_324_ap_start_reg <= 1'b1;
        end else if ((grp_solveNextPatchPair_fu_324_ap_ready == 1'b1)) begin
            grp_solveNextPatchPair_fu_324_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln474_reg_713 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        a_reg_219 <= select_ln474_1_reg_734;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        a_reg_219 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln474_reg_713 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        b_reg_231 <= add_ln476_reg_751;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        b_reg_231 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        complementary_apexZ0_V_0_reg_300 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        complementary_apexZ0_V_0_reg_300 <= complementary_apexZ0_V_reg_894;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln474_reg_713 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_208 <= add_ln474_1_reg_708;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_208 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        nPatchesInColumn_reg_255 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        nPatchesInColumn_reg_255 <= nPatchesInColumn_1_reg_899;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        phi_ln531_reg_267 <= 1'd1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        phi_ln531_reg_267 <= icmp_ln515_1_fu_697_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        phi_ln886_reg_278 <= 1'd1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        phi_ln886_reg_278 <= icmp_ln515_fu_691_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        saved_apexZ0_fu_156 <= 32'd22000100;
    end else if (((grp_solveNextPatchPair_fu_324_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state44))) begin
        saved_apexZ0_fu_156 <= grp_solveNextPatchPair_fu_324_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        z_top_max_V_125_ph_reg_243 <= select_ln506_fu_637_p3;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln504_reg_785 == 1'd1))) begin
        z_top_max_V_125_ph_reg_243 <= 32'd50000000;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        z_top_max_V_125_reg_289 <= z_top_max_V_125_ph_reg_243;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        z_top_max_V_125_reg_289 <= z_top_max_V_reg_904;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        z_top_min_V_0_reg_312 <= 32'd4244967296;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        z_top_min_V_0_reg_312 <= z_top_min_V_reg_909;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        add_ln341_reg_809 <= add_ln341_fu_520_p2;
        data_V_reg_799 <= data_V_fu_499_p1;
        isNeg_reg_814 <= add_ln341_fu_520_p2[32'd8];
        sub_ln1311_reg_820 <= sub_ln1311_fu_534_p2;
        tmp_69_reg_804 <= tmp_69_fu_512_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln474_1_reg_708 <= add_ln474_1_fu_360_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln474_fu_366_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln474_reg_717 <= add_ln474_fu_372_p2;
        icmp_ln476_reg_722 <= icmp_ln476_fu_378_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln474_reg_713 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln476_reg_751 <= add_ln476_fu_412_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln474_reg_713_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln478_reg_756 <= add_ln478_fu_431_p2;
        trunc_ln69_reg_767 <= trunc_ln69_fu_447_p1;
        trunc_ln_reg_762 <= {{GDarray_q0[63:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        add_ln69_reg_863 <= add_ln69_fu_626_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        and_ln531_1_reg_884 <= and_ln531_1_fu_654_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        call_ret1_reg_888_2 <= grp_solveNextPatchPair_fu_324_ap_return_2;
        call_ret1_reg_888_3 <= grp_solveNextPatchPair_fu_324_ap_return_3;
        complementary_apexZ0_V_reg_894 <= grp_solveNextPatchPair_fu_324_ap_return_4;
        nPatchesInColumn_1_reg_899 <= grp_solveNextPatchPair_fu_324_ap_return_1;
        z_top_max_V_reg_904 <= grp_solveNextPatchPair_fu_324_ap_return_5;
        z_top_min_V_reg_909 <= grp_solveNextPatchPair_fu_324_ap_return_6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        conv_i_i_reg_789 <= grp_fu_357_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        dc_reg_794 <= grp_fu_352_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln474_reg_713 <= icmp_ln474_fu_366_p2;
        icmp_ln474_reg_713_pp0_iter1_reg <= icmp_ln474_reg_713;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        icmp_ln504_reg_785 <= icmp_ln504_fu_493_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        icmp_ln531_reg_879 <= icmp_ln531_fu_643_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        icmp_ln878_reg_869 <= icmp_ln878_fu_632_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        result_V_6_reg_858 <= result_V_6_fu_608_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln474_reg_713 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        select_ln474_1_reg_734 <= select_ln474_1_fu_391_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln474_reg_713 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        select_ln474_reg_728 <= select_ln474_fu_384_p3;
        trunc_ln478_reg_741 <= trunc_ln478_fu_397_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((isNeg_reg_814 == 1'd0) & (1'b1 == ap_CS_fsm_state34))) begin
        tmp_67_reg_847 <= {{grp_fu_575_p2[55:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((isNeg_reg_814 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
        tmp_reg_842 <= grp_fu_569_p2[32'd24];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        ush_reg_825 <= ush_fu_543_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        val_reg_852 <= val_fu_602_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        GDarrayDecoded_V_address0 = zext_ln479_fu_474_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        GDarrayDecoded_V_address0 = grp_solveNextPatchPair_fu_324_GDarrayDecoded_address0;
    end else begin
        GDarrayDecoded_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        GDarrayDecoded_V_address1 = zext_ln478_2_fu_458_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        GDarrayDecoded_V_address1 = grp_solveNextPatchPair_fu_324_GDarrayDecoded_address1;
    end else begin
        GDarrayDecoded_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        GDarrayDecoded_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        GDarrayDecoded_V_ce0 = grp_solveNextPatchPair_fu_324_GDarrayDecoded_ce0;
    end else begin
        GDarrayDecoded_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        GDarrayDecoded_V_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        GDarrayDecoded_V_ce1 = grp_solveNextPatchPair_fu_324_GDarrayDecoded_ce1;
    end else begin
        GDarrayDecoded_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln474_reg_713_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        GDarrayDecoded_V_we0 = 1'b1;
    end else begin
        GDarrayDecoded_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln474_reg_713_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        GDarrayDecoded_V_we1 = 1'b1;
    end else begin
        GDarrayDecoded_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        GDarray_ce0 = 1'b1;
    end else begin
        GDarray_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln474_fu_366_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln886_fu_487_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln474_reg_713 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_a_phi_fu_223_p4 = select_ln474_1_reg_734;
    end else begin
        ap_phi_mux_a_phi_fu_223_p4 = a_reg_219;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln474_reg_713 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_b_phi_fu_235_p4 = add_ln476_reg_751;
    end else begin
        ap_phi_mux_b_phi_fu_235_p4 = b_reg_231;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln474_reg_713 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_212_p4 = add_ln474_1_reg_708;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_212_p4 = indvar_flatten_reg_208;
    end
end

always @ (*) begin
    if (((icmp_ln886_fu_487_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((grp_solveNextPatchPair_fu_324_n_patches_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state44))) begin
        n_patches_o = grp_solveNextPatchPair_fu_324_n_patches_o;
    end else begin
        n_patches_o = n_patches_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        n_patches_o_ap_vld = grp_solveNextPatchPair_fu_324_n_patches_o_ap_vld;
    end else begin
        n_patches_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln474_fu_366_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln474_fu_366_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0)) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((icmp_ln886_fu_487_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln504_reg_785 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            if (((1'b1 == ap_CS_fsm_state43) & (1'd0 == and_ln531_1_reg_884))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state44 : begin
            if (((grp_solveNextPatchPair_fu_324_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state44))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign GDarray_address0 = zext_ln478_1_fu_407_p1;

assign GDn_points_address0 = grp_solveNextPatchPair_fu_324_GDn_points_address0;

assign GDn_points_ce0 = grp_solveNextPatchPair_fu_324_GDn_points_ce0;

assign add_ln341_fu_520_p0 = tmp_68_fu_502_p4;

assign add_ln478_fu_431_p0 = tmp_s_fu_417_p3;

assign add_ln478_fu_431_p1 = select_ln474_reg_728;

assign add_ln69_fu_626_p0 = ((p_Result_s_fu_613_p3[0:0] == 1'b1) ? result_V_6_reg_858 : val_reg_852);

assign and_ln531_1_fu_654_p2 = (phi_ln886_reg_278 & and_ln531_fu_649_p2);

assign and_ln531_fu_649_p2 = (phi_ln531_reg_267 & icmp_ln531_reg_879);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign data_V_fu_499_p1 = dc_reg_794;

assign grp_solveNextPatchPair_fu_324_ap_start = grp_solveNextPatchPair_fu_324_ap_start_reg;

assign icmp_ln474_fu_366_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_212_p4 == 10'd640) ? 1'b1 : 1'b0);

assign icmp_ln476_fu_378_p2 = ((ap_phi_mux_b_phi_fu_235_p4 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln504_fu_493_p2 = ((n_patches_i == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln515_1_fu_697_p2 = (($signed(call_ret1_reg_888_3) < $signed(32'd15000000)) ? 1'b1 : 1'b0);

assign icmp_ln515_fu_691_p2 = (($signed(call_ret1_reg_888_2) > $signed(32'd4244967196)) ? 1'b1 : 1'b0);

assign icmp_ln531_fu_643_p2 = (($signed(nPatchesInColumn_reg_255) < $signed(32'd100000000)) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_632_p2 = (($signed(add_ln69_reg_863) > $signed(32'd50000000)) ? 1'b1 : 1'b0);

assign icmp_ln886_fu_487_p2 = (($signed(saved_apexZ0_fu_156) > $signed(32'd4272967196)) ? 1'b1 : 1'b0);

assign mantissa_fu_549_p4 = {{{{1'd1}, {tmp_69_reg_804}}}, {1'd0}};

assign or_ln479_fu_468_p2 = (shl_ln478_fu_463_p2 | 11'd1);

assign p_Result_s_fu_613_p3 = data_V_reg_799[32'd31];

assign patches_superpoints_address0 = grp_solveNextPatchPair_fu_324_patches_superpoints_address0;

assign patches_superpoints_address1 = grp_solveNextPatchPair_fu_324_patches_superpoints_address1;

assign patches_superpoints_ce0 = grp_solveNextPatchPair_fu_324_patches_superpoints_ce0;

assign patches_superpoints_ce1 = grp_solveNextPatchPair_fu_324_patches_superpoints_ce1;

assign patches_superpoints_d0 = grp_solveNextPatchPair_fu_324_patches_superpoints_d0;

assign patches_superpoints_we0 = grp_solveNextPatchPair_fu_324_patches_superpoints_we0;

assign select_ln474_1_fu_391_p3 = ((icmp_ln476_reg_722[0:0] == 1'b1) ? add_ln474_reg_717 : a_reg_219);

assign select_ln474_fu_384_p3 = ((icmp_ln476_reg_722[0:0] == 1'b1) ? 8'd0 : b_reg_231);

assign select_ln506_fu_637_p3 = ((icmp_ln878_reg_869[0:0] == 1'b1) ? 32'd50000000 : add_ln69_reg_863);

assign sext_ln1311_fu_540_p1 = $signed(sub_ln1311_reg_820);

assign sh_prom_i_i_i_i_i_i_cast_cast_cast_cast_fu_565_p1 = $unsigned(sh_prom_i_i_i_i_i_i_cast_cast_cast_fu_562_p1);

assign sh_prom_i_i_i_i_i_i_cast_cast_cast_fu_562_p1 = $signed(ush_reg_825);

assign shl_ln478_fu_463_p2 = add_ln478_reg_756 << 11'd1;

assign sub_ln1311_fu_534_p1 = {{data_V_fu_499_p1[30:23]}};

assign tmp_44_fu_401_p3 = {{select_ln474_1_reg_734}, {trunc_ln478_reg_741}};

assign tmp_65_fu_451_p3 = {{add_ln478_reg_756}, {1'd0}};

assign tmp_68_fu_502_p4 = {{data_V_fu_499_p1[30:23]}};

assign tmp_69_fu_512_p1 = data_V_fu_499_p1[22:0];

assign tmp_s_fu_417_p3 = {{select_ln474_1_reg_734}, {7'd0}};

assign trunc_ln478_fu_397_p1 = select_ln474_fu_384_p3[6:0];

assign trunc_ln69_fu_447_p1 = GDarray_q0[31:0];

assign ush_fu_543_p3 = ((isNeg_reg_814[0:0] == 1'b1) ? sext_ln1311_fu_540_p1 : add_ln341_reg_809);

assign val_fu_602_p3 = ((isNeg_reg_814[0:0] == 1'b1) ? zext_ln662_fu_599_p1 : tmp_67_reg_847);

assign zext_ln15_fu_558_p1 = mantissa_fu_549_p4;

assign zext_ln478_1_fu_407_p1 = tmp_44_fu_401_p3;

assign zext_ln478_2_fu_458_p1 = tmp_65_fu_451_p3;

assign zext_ln479_fu_474_p1 = or_ln479_fu_468_p2;

assign zext_ln662_fu_599_p1 = tmp_reg_842;

endmodule //makePatches_ShadowQuilt_fromEdges
