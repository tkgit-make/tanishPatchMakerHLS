// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module makePatches_ShadowQuilt_fromEdges_solveComplmentaryPatch (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        n_patches_i,
        n_patches_o,
        n_patches_o_ap_vld,
        GDn_points_address0,
        GDn_points_ce0,
        GDn_points_q0,
        patches_superpoints_address0,
        patches_superpoints_ce0,
        patches_superpoints_we0,
        patches_superpoints_d0,
        patches_superpoints_q0,
        patches_superpoints_address1,
        patches_superpoints_ce1,
        patches_superpoints_q1,
        ppl,
        nPatchesAtOriginal,
        previous_z_top_min_read,
        complementary_apexZ0,
        white_space_height_read,
        original_c,
        original_d,
        p_read12,
        p_read13,
        z_top_min_read,
        GDarrayDecoded_address0,
        GDarrayDecoded_ce0,
        GDarrayDecoded_q0,
        GDarrayDecoded_address1,
        GDarrayDecoded_ce1,
        GDarrayDecoded_q1,
        patches_parameters_address0,
        patches_parameters_ce0,
        patches_parameters_we0,
        patches_parameters_d0,
        patches_parameters_q0,
        patches_parameters_address1,
        patches_parameters_ce1,
        patches_parameters_q1,
        temp_V_address0,
        temp_V_ce0,
        temp_V_we0,
        temp_V_d0,
        temp_V_q0,
        temp_V_address1,
        temp_V_ce1,
        temp_V_we1,
        temp_V_d1,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        grp_straightLineProjectorFromLayerIJtoK_fu_643_p_din1,
        grp_straightLineProjectorFromLayerIJtoK_fu_643_p_din2,
        grp_straightLineProjectorFromLayerIJtoK_fu_643_p_din3,
        grp_straightLineProjectorFromLayerIJtoK_fu_643_p_din4,
        grp_straightLineProjectorFromLayerIJtoK_fu_643_p_din5,
        grp_straightLineProjectorFromLayerIJtoK_fu_643_p_dout0,
        grp_straightLineProjectorFromLayerIJtoK_fu_643_p_ce,
        grp_straightLineProjectorFromLayerIJtoK_fu_643_p_start,
        grp_straightLineProjectorFromLayerIJtoK_fu_643_p_ready,
        grp_straightLineProjectorFromLayerIJtoK_fu_643_p_done,
        grp_straightLineProjectorFromLayerIJtoK_fu_643_p_idle,
        grp_fu_1824_p_din0,
        grp_fu_1824_p_dout0,
        grp_fu_1824_p_ce,
        grp_fu_1827_p_din0,
        grp_fu_1827_p_dout0,
        grp_fu_1827_p_ce,
        grp_fu_660_p_din0,
        grp_fu_660_p_din1,
        grp_fu_660_p_opcode,
        grp_fu_660_p_dout0,
        grp_fu_660_p_ce,
        grp_fu_1830_p_din0,
        grp_fu_1830_p_dout0,
        grp_fu_1830_p_ce
);

parameter    ap_ST_fsm_state1 = 90'd1;
parameter    ap_ST_fsm_state2 = 90'd2;
parameter    ap_ST_fsm_pp0_stage0 = 90'd4;
parameter    ap_ST_fsm_state5 = 90'd8;
parameter    ap_ST_fsm_state6 = 90'd16;
parameter    ap_ST_fsm_state7 = 90'd32;
parameter    ap_ST_fsm_state8 = 90'd64;
parameter    ap_ST_fsm_state9 = 90'd128;
parameter    ap_ST_fsm_state10 = 90'd256;
parameter    ap_ST_fsm_state11 = 90'd512;
parameter    ap_ST_fsm_state12 = 90'd1024;
parameter    ap_ST_fsm_state13 = 90'd2048;
parameter    ap_ST_fsm_state14 = 90'd4096;
parameter    ap_ST_fsm_state15 = 90'd8192;
parameter    ap_ST_fsm_state16 = 90'd16384;
parameter    ap_ST_fsm_state17 = 90'd32768;
parameter    ap_ST_fsm_state18 = 90'd65536;
parameter    ap_ST_fsm_pp1_stage0 = 90'd131072;
parameter    ap_ST_fsm_state21 = 90'd262144;
parameter    ap_ST_fsm_pp2_stage0 = 90'd524288;
parameter    ap_ST_fsm_state24 = 90'd1048576;
parameter    ap_ST_fsm_pp3_stage0 = 90'd2097152;
parameter    ap_ST_fsm_state27 = 90'd4194304;
parameter    ap_ST_fsm_pp4_stage0 = 90'd8388608;
parameter    ap_ST_fsm_pp5_stage0 = 90'd16777216;
parameter    ap_ST_fsm_state38 = 90'd33554432;
parameter    ap_ST_fsm_pp6_stage0 = 90'd67108864;
parameter    ap_ST_fsm_state43 = 90'd134217728;
parameter    ap_ST_fsm_pp7_stage0 = 90'd268435456;
parameter    ap_ST_fsm_state47 = 90'd536870912;
parameter    ap_ST_fsm_pp8_stage0 = 90'd1073741824;
parameter    ap_ST_fsm_state61 = 90'd2147483648;
parameter    ap_ST_fsm_pp9_stage0 = 90'd4294967296;
parameter    ap_ST_fsm_state65 = 90'd8589934592;
parameter    ap_ST_fsm_state66 = 90'd17179869184;
parameter    ap_ST_fsm_state67 = 90'd34359738368;
parameter    ap_ST_fsm_state68 = 90'd68719476736;
parameter    ap_ST_fsm_state69 = 90'd137438953472;
parameter    ap_ST_fsm_state70 = 90'd274877906944;
parameter    ap_ST_fsm_state71 = 90'd549755813888;
parameter    ap_ST_fsm_state72 = 90'd1099511627776;
parameter    ap_ST_fsm_state73 = 90'd2199023255552;
parameter    ap_ST_fsm_state74 = 90'd4398046511104;
parameter    ap_ST_fsm_state75 = 90'd8796093022208;
parameter    ap_ST_fsm_state76 = 90'd17592186044416;
parameter    ap_ST_fsm_state77 = 90'd35184372088832;
parameter    ap_ST_fsm_state78 = 90'd70368744177664;
parameter    ap_ST_fsm_state79 = 90'd140737488355328;
parameter    ap_ST_fsm_state80 = 90'd281474976710656;
parameter    ap_ST_fsm_state81 = 90'd562949953421312;
parameter    ap_ST_fsm_state82 = 90'd1125899906842624;
parameter    ap_ST_fsm_state83 = 90'd2251799813685248;
parameter    ap_ST_fsm_state84 = 90'd4503599627370496;
parameter    ap_ST_fsm_state85 = 90'd9007199254740992;
parameter    ap_ST_fsm_state86 = 90'd18014398509481984;
parameter    ap_ST_fsm_state87 = 90'd36028797018963968;
parameter    ap_ST_fsm_state88 = 90'd72057594037927936;
parameter    ap_ST_fsm_state89 = 90'd144115188075855872;
parameter    ap_ST_fsm_state90 = 90'd288230376151711744;
parameter    ap_ST_fsm_state91 = 90'd576460752303423488;
parameter    ap_ST_fsm_state92 = 90'd1152921504606846976;
parameter    ap_ST_fsm_state93 = 90'd2305843009213693952;
parameter    ap_ST_fsm_state94 = 90'd4611686018427387904;
parameter    ap_ST_fsm_state95 = 90'd9223372036854775808;
parameter    ap_ST_fsm_state96 = 90'd18446744073709551616;
parameter    ap_ST_fsm_state97 = 90'd36893488147419103232;
parameter    ap_ST_fsm_state98 = 90'd73786976294838206464;
parameter    ap_ST_fsm_state99 = 90'd147573952589676412928;
parameter    ap_ST_fsm_state100 = 90'd295147905179352825856;
parameter    ap_ST_fsm_state101 = 90'd590295810358705651712;
parameter    ap_ST_fsm_state102 = 90'd1180591620717411303424;
parameter    ap_ST_fsm_state103 = 90'd2361183241434822606848;
parameter    ap_ST_fsm_state104 = 90'd4722366482869645213696;
parameter    ap_ST_fsm_state105 = 90'd9444732965739290427392;
parameter    ap_ST_fsm_state106 = 90'd18889465931478580854784;
parameter    ap_ST_fsm_state107 = 90'd37778931862957161709568;
parameter    ap_ST_fsm_state108 = 90'd75557863725914323419136;
parameter    ap_ST_fsm_state109 = 90'd151115727451828646838272;
parameter    ap_ST_fsm_state110 = 90'd302231454903657293676544;
parameter    ap_ST_fsm_state111 = 90'd604462909807314587353088;
parameter    ap_ST_fsm_state112 = 90'd1208925819614629174706176;
parameter    ap_ST_fsm_state113 = 90'd2417851639229258349412352;
parameter    ap_ST_fsm_state114 = 90'd4835703278458516698824704;
parameter    ap_ST_fsm_state115 = 90'd9671406556917033397649408;
parameter    ap_ST_fsm_state116 = 90'd19342813113834066795298816;
parameter    ap_ST_fsm_state117 = 90'd38685626227668133590597632;
parameter    ap_ST_fsm_state118 = 90'd77371252455336267181195264;
parameter    ap_ST_fsm_state119 = 90'd154742504910672534362390528;
parameter    ap_ST_fsm_state120 = 90'd309485009821345068724781056;
parameter    ap_ST_fsm_state121 = 90'd618970019642690137449562112;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] n_patches_i;
output  [7:0] n_patches_o;
output   n_patches_o_ap_vld;
output  [2:0] GDn_points_address0;
output   GDn_points_ce0;
input  [31:0] GDn_points_q0;
output  [11:0] patches_superpoints_address0;
output   patches_superpoints_ce0;
output   patches_superpoints_we0;
output  [63:0] patches_superpoints_d0;
input  [63:0] patches_superpoints_q0;
output  [11:0] patches_superpoints_address1;
output   patches_superpoints_ce1;
input  [63:0] patches_superpoints_q1;
input  [31:0] ppl;
input  [7:0] nPatchesAtOriginal;
input  [31:0] previous_z_top_min_read;
input  [31:0] complementary_apexZ0;
input  [63:0] white_space_height_read;
input  [31:0] original_c;
input  [31:0] original_d;
input  [31:0] p_read12;
input  [31:0] p_read13;
input  [31:0] z_top_min_read;
output  [10:0] GDarrayDecoded_address0;
output   GDarrayDecoded_ce0;
input  [31:0] GDarrayDecoded_q0;
output  [10:0] GDarrayDecoded_address1;
output   GDarrayDecoded_ce1;
input  [31:0] GDarrayDecoded_q1;
output  [11:0] patches_parameters_address0;
output   patches_parameters_ce0;
output   patches_parameters_we0;
output  [31:0] patches_parameters_d0;
input  [31:0] patches_parameters_q0;
output  [11:0] patches_parameters_address1;
output   patches_parameters_ce1;
input  [31:0] patches_parameters_q1;
output  [7:0] temp_V_address0;
output   temp_V_ce0;
output   temp_V_we0;
output  [31:0] temp_V_d0;
input  [31:0] temp_V_q0;
output  [7:0] temp_V_address1;
output   temp_V_ce1;
output   temp_V_we1;
output  [31:0] temp_V_d1;
output  [63:0] ap_return_0;
output  [7:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;
output  [31:0] ap_return_4;
output  [31:0] ap_return_5;
output  [63:0] ap_return_6;
output  [31:0] ap_return_7;
output  [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_643_p_din1;
output  [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_643_p_din2;
output  [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_643_p_din3;
output  [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_643_p_din4;
output  [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_643_p_din5;
input  [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_643_p_dout0;
output   grp_straightLineProjectorFromLayerIJtoK_fu_643_p_ce;
output   grp_straightLineProjectorFromLayerIJtoK_fu_643_p_start;
input   grp_straightLineProjectorFromLayerIJtoK_fu_643_p_ready;
input   grp_straightLineProjectorFromLayerIJtoK_fu_643_p_done;
input   grp_straightLineProjectorFromLayerIJtoK_fu_643_p_idle;
output  [31:0] grp_fu_1824_p_din0;
input  [31:0] grp_fu_1824_p_dout0;
output   grp_fu_1824_p_ce;
output  [31:0] grp_fu_1827_p_din0;
input  [31:0] grp_fu_1827_p_dout0;
output   grp_fu_1827_p_ce;
output  [63:0] grp_fu_660_p_din0;
output  [63:0] grp_fu_660_p_din1;
output  [4:0] grp_fu_660_p_opcode;
input  [0:0] grp_fu_660_p_dout0;
output   grp_fu_660_p_ce;
output  [63:0] grp_fu_1830_p_din0;
input  [63:0] grp_fu_1830_p_dout0;
output   grp_fu_1830_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] n_patches_o;
reg n_patches_o_ap_vld;
reg[2:0] GDn_points_address0;
reg GDn_points_ce0;
reg[11:0] patches_superpoints_address0;
reg patches_superpoints_ce0;
reg patches_superpoints_we0;
reg[63:0] patches_superpoints_d0;
reg[11:0] patches_superpoints_address1;
reg patches_superpoints_ce1;
reg[10:0] GDarrayDecoded_address0;
reg GDarrayDecoded_ce0;
reg GDarrayDecoded_ce1;
reg[11:0] patches_parameters_address0;
reg patches_parameters_ce0;
reg patches_parameters_we0;
reg[31:0] patches_parameters_d0;
reg[11:0] patches_parameters_address1;
reg patches_parameters_ce1;
reg temp_V_ce0;
reg temp_V_we0;
reg temp_V_ce1;
reg temp_V_we1;
reg[63:0] ap_return_0;
reg[7:0] ap_return_1;
reg[31:0] ap_return_2;
reg[31:0] ap_return_3;
reg[31:0] ap_return_4;
reg[31:0] ap_return_5;
reg[63:0] ap_return_6;
reg[31:0] ap_return_7;

(* fsm_encoding = "none" *) reg   [89:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] i_reg_561;
reg   [7:0] index_reg_573;
reg   [63:0] minVal_reg_585;
reg   [7:0] i_5_reg_609;
reg   [7:0] index_2_reg_621;
reg   [63:0] minVal_2_reg_634;
reg   [2:0] i_7_reg_645;
reg   [2:0] i_9_reg_665;
reg   [2:0] i_8_reg_705;
reg   [2:0] i_10_reg_716;
reg   [2:0] i_11_reg_727;
reg   [2:0] i_12_reg_738;
reg   [2:0] i_15_reg_750;
reg   [2:0] i_14_reg_761;
reg   [63:0] layerSMin_reg_772;
reg   [7:0] layerWithSmallestShift_reg_784;
reg   [31:0] reg_940;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter1;
wire    ap_block_state30_pp5_stage0_iter0;
wire    ap_block_state31_pp5_stage0_iter1;
wire    ap_block_state32_pp5_stage0_iter2;
wire    ap_block_state33_pp5_stage0_iter3;
wire    ap_block_state34_pp5_stage0_iter4;
wire    ap_block_state35_pp5_stage0_iter5;
wire    ap_block_state36_pp5_stage0_iter6;
wire    ap_block_state37_pp5_stage0_iter7;
wire    ap_block_pp5_stage0_11001;
reg   [0:0] icmp_ln936_reg_2815;
wire   [31:0] grp_fu_899_p1;
reg   [31:0] reg_945;
reg    ap_enable_reg_pp5_iter2;
reg   [0:0] icmp_ln936_reg_2815_pp5_iter1_reg;
reg    ap_enable_reg_pp6_iter2;
wire    ap_block_state39_pp6_stage0_iter0;
wire    ap_block_state40_pp6_stage0_iter1;
wire    ap_block_state41_pp6_stage0_iter2;
wire    ap_block_state42_pp6_stage0_iter3;
wire    ap_block_pp6_stage0_11001;
reg   [0:0] icmp_ln941_reg_2854;
reg   [0:0] icmp_ln941_reg_2854_pp6_iter1_reg;
reg   [7:0] reg_951;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state78;
wire  signed [32:0] rhs_fu_956_p1;
reg  signed [32:0] rhs_reg_2613;
wire   [7:0] i_4_fu_960_p2;
reg   [7:0] i_4_reg_2623;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln412_fu_970_p2;
reg   [0:0] icmp_ln412_reg_2628;
wire   [63:0] minVal_1_fu_1040_p3;
reg    ap_enable_reg_pp0_iter1;
wire   [7:0] index_1_fu_1048_p3;
wire   [8:0] zext_ln896_fu_1056_p1;
reg   [8:0] zext_ln896_reg_2647;
wire    ap_CS_fsm_state5;
wire   [2:0] add_ln901_fu_1060_p2;
reg   [2:0] add_ln901_reg_2653;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln899_fu_1066_p2;
wire   [0:0] icmp_ln870_fu_1072_p2;
reg   [0:0] icmp_ln870_reg_2663;
wire   [8:0] add_ln906_fu_1076_p2;
reg   [8:0] add_ln906_reg_2667;
wire   [63:0] zext_ln899_fu_1081_p1;
reg   [63:0] zext_ln899_reg_2672;
wire    ap_CS_fsm_state17;
wire   [10:0] tmp_32_cast_fu_1094_p1;
reg   [10:0] tmp_32_cast_reg_2682;
wire    ap_CS_fsm_state18;
reg   [31:0] GDn_points_load_1_reg_2687;
wire  signed [32:0] rhs_2_fu_1098_p1;
reg  signed [32:0] rhs_2_reg_2692;
wire   [7:0] i_13_fu_1102_p2;
reg   [7:0] i_13_reg_2697;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state19_pp1_stage0_iter0;
wire    ap_block_state20_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln412_1_fu_1112_p2;
reg   [0:0] icmp_ln412_1_reg_2702;
wire   [63:0] minVal_3_fu_1184_p3;
reg    ap_enable_reg_pp1_iter1;
wire   [7:0] index_3_fu_1192_p3;
wire   [2:0] add_ln907_fu_1200_p2;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state22_pp2_stage0_iter0;
wire    ap_block_state23_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [0:0] icmp_ln907_fu_1206_p2;
reg   [0:0] icmp_ln907_reg_2726;
wire   [63:0] i_7_cast_fu_1212_p1;
reg   [63:0] i_7_cast_reg_2730;
wire   [0:0] tmp_33_fu_1217_p3;
reg   [0:0] tmp_33_reg_2740;
wire    ap_CS_fsm_state24;
wire   [31:0] add_ln926_fu_1224_p2;
reg   [31:0] add_ln926_reg_2744;
wire   [9:0] zext_ln928_fu_1235_p1;
reg   [9:0] zext_ln928_reg_2749;
wire   [31:0] add_ln917_fu_1239_p2;
reg   [31:0] add_ln917_reg_2754;
wire  signed [9:0] sext_ln919_fu_1250_p1;
reg  signed [9:0] sext_ln919_reg_2759;
wire   [2:0] add_ln928_fu_1254_p2;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state25_pp3_stage0_iter0;
wire    ap_block_state26_pp3_stage0_iter1;
wire    ap_block_pp3_stage0_11001;
wire   [0:0] icmp_ln928_fu_1260_p2;
reg   [0:0] icmp_ln928_reg_2769;
wire   [63:0] i_9_cast_fu_1266_p1;
reg   [63:0] i_9_cast_reg_2773;
wire   [31:0] select_ln934_fu_1287_p3;
reg   [31:0] select_ln934_reg_2783;
wire    ap_CS_fsm_state27;
wire   [2:0] add_ln919_fu_1295_p2;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter0;
wire    ap_block_state28_pp4_stage0_iter0;
wire    ap_block_state29_pp4_stage0_iter1;
wire    ap_block_pp4_stage0_11001;
wire   [0:0] icmp_ln919_fu_1301_p2;
reg   [0:0] icmp_ln919_reg_2796;
wire   [63:0] i_8_cast_fu_1307_p1;
reg   [63:0] i_8_cast_reg_2800;
wire   [2:0] add_ln936_fu_1319_p2;
reg    ap_enable_reg_pp5_iter0;
wire   [0:0] icmp_ln936_fu_1325_p2;
reg   [0:0] icmp_ln936_reg_2815_pp5_iter2_reg;
reg   [0:0] icmp_ln936_reg_2815_pp5_iter3_reg;
reg   [0:0] icmp_ln936_reg_2815_pp5_iter4_reg;
reg   [0:0] icmp_ln936_reg_2815_pp5_iter5_reg;
reg   [0:0] icmp_ln936_reg_2815_pp5_iter6_reg;
reg   [2:0] new_z_i_index_addr_3_reg_2819;
reg   [2:0] new_z_i_index_addr_3_reg_2819_pp5_iter1_reg;
reg   [2:0] new_z_i_index_addr_3_reg_2819_pp5_iter2_reg;
reg   [2:0] new_z_i_index_addr_3_reg_2819_pp5_iter3_reg;
reg   [2:0] new_z_i_index_addr_3_reg_2819_pp5_iter4_reg;
reg   [2:0] new_z_i_index_addr_3_reg_2819_pp5_iter5_reg;
reg   [2:0] new_z_i_index_addr_3_reg_2819_pp5_iter6_reg;
wire   [31:0] zext_ln938_fu_1337_p1;
wire   [31:0] grp_fu_894_p2;
reg   [31:0] sub_reg_2835;
reg   [31:0] sub_reg_2835_pp5_iter6_reg;
wire   [31:0] grp_fu_903_p1;
reg   [31:0] conv_reg_2842;
wire   [2:0] add_ln941_fu_1549_p2;
wire    ap_CS_fsm_pp6_stage0;
reg    ap_enable_reg_pp6_iter0;
wire   [0:0] icmp_ln941_fu_1555_p2;
reg   [0:0] icmp_ln941_reg_2854_pp6_iter2_reg;
reg   [2:0] new_z_i_index_addr_4_reg_2858;
reg   [2:0] new_z_i_index_addr_4_reg_2858_pp6_iter1_reg;
reg   [2:0] new_z_i_index_addr_4_reg_2858_pp6_iter2_reg;
wire   [31:0] zext_ln943_fu_1566_p1;
wire   [2:0] add_ln947_fu_1740_p2;
reg   [2:0] add_ln947_reg_2869;
wire    ap_CS_fsm_pp7_stage0;
reg    ap_enable_reg_pp7_iter0;
wire    ap_block_state44_pp7_stage0_iter0;
wire    ap_block_state45_pp7_stage0_iter1;
wire    ap_block_state46_pp7_stage0_iter2;
wire    ap_block_pp7_stage0_11001;
wire   [0:0] icmp_ln947_fu_1746_p2;
reg   [0:0] icmp_ln947_reg_2874;
reg   [0:0] icmp_ln947_reg_2874_pp7_iter1_reg;
wire   [63:0] i_12_cast_fu_1752_p1;
reg   [63:0] i_12_cast_reg_2878;
reg   [63:0] i_12_cast_reg_2878_pp7_iter1_reg;
wire   [0:0] icmp_ln953_fu_1796_p2;
reg   [0:0] icmp_ln953_reg_2923;
wire    ap_CS_fsm_pp8_stage0;
wire    ap_block_state48_pp8_stage0_iter0;
wire    ap_block_state49_pp8_stage0_iter1;
wire    ap_block_state50_pp8_stage0_iter2;
wire    ap_block_state51_pp8_stage0_iter3;
wire    ap_block_state52_pp8_stage0_iter4;
wire    ap_block_state53_pp8_stage0_iter5;
wire    ap_block_state54_pp8_stage0_iter6;
wire    ap_block_state55_pp8_stage0_iter7;
wire    ap_block_state56_pp8_stage0_iter8;
wire    ap_block_state57_pp8_stage0_iter9;
wire    ap_block_state58_pp8_stage0_iter10;
wire    ap_block_state59_pp8_stage0_iter11;
wire    ap_block_state60_pp8_stage0_iter12;
wire    ap_block_pp8_stage0_11001;
wire   [2:0] add_ln958_fu_1802_p2;
reg   [2:0] add_ln958_reg_2927;
reg    ap_enable_reg_pp8_iter0;
wire   [1:0] trunc_ln955_fu_1813_p1;
reg   [1:0] trunc_ln955_reg_2938;
reg   [1:0] trunc_ln955_reg_2938_pp8_iter1_reg;
reg   [1:0] trunc_ln955_reg_2938_pp8_iter2_reg;
reg   [1:0] trunc_ln955_reg_2938_pp8_iter3_reg;
reg   [1:0] trunc_ln955_reg_2938_pp8_iter4_reg;
reg   [1:0] trunc_ln955_reg_2938_pp8_iter5_reg;
reg   [1:0] trunc_ln955_reg_2938_pp8_iter6_reg;
reg   [1:0] trunc_ln955_reg_2938_pp8_iter7_reg;
reg   [1:0] trunc_ln955_reg_2938_pp8_iter8_reg;
reg   [1:0] trunc_ln955_reg_2938_pp8_iter9_reg;
reg   [1:0] trunc_ln955_reg_2938_pp8_iter10_reg;
reg   [1:0] trunc_ln955_reg_2938_pp8_iter11_reg;
wire   [2:0] add_ln965_fu_1842_p2;
wire    ap_CS_fsm_pp9_stage0;
reg    ap_enable_reg_pp9_iter0;
wire    ap_block_state62_pp9_stage0_iter0;
wire    ap_block_state63_pp9_stage0_iter1;
wire    ap_block_state64_pp9_stage0_iter2;
wire    ap_block_pp9_stage0_11001;
wire   [0:0] icmp_ln965_fu_1848_p2;
reg   [0:0] icmp_ln965_reg_2947;
reg   [0:0] icmp_ln965_reg_2947_pp9_iter1_reg;
wire   [1:0] trunc_ln534_fu_1854_p1;
reg   [1:0] trunc_ln534_reg_2951;
reg   [1:0] trunc_ln534_reg_2951_pp9_iter1_reg;
wire  signed [63:0] sext_ln277_3_fu_1881_p1;
reg   [10:0] tmp_52_reg_2961;
wire   [51:0] tmp_53_fu_1900_p1;
reg   [51:0] tmp_53_reg_2967;
wire   [7:0] layerWithSmallestShift_1_fu_2010_p3;
reg    ap_enable_reg_pp9_iter2;
wire   [63:0] layerSMin_1_fu_2018_p3;
wire  signed [31:0] lhs_3_fu_2030_p6;
reg  signed [31:0] lhs_3_reg_2982;
wire    ap_CS_fsm_state65;
wire  signed [63:0] sext_ln277_fu_2053_p1;
wire   [63:0] bitcast_ln521_fu_2070_p1;
wire    ap_CS_fsm_state66;
wire   [0:0] icmp_ln987_fu_2089_p2;
reg   [0:0] icmp_ln987_reg_2999;
wire   [0:0] icmp_ln987_1_fu_2095_p2;
reg   [0:0] icmp_ln987_1_reg_3004;
wire   [0:0] grp_fu_913_p2;
reg   [0:0] tmp_10_reg_3009;
wire    ap_CS_fsm_state67;
wire   [10:0] tmp_50_cast_fu_2104_p3;
reg   [10:0] tmp_50_cast_reg_3014;
wire  signed [31:0] lhs_4_fu_2132_p3;
reg  signed [31:0] lhs_4_reg_3025;
wire    ap_CS_fsm_state68;
wire  signed [63:0] sext_ln277_1_fu_2148_p1;
wire    ap_CS_fsm_state69;
wire   [63:0] bitcast_ln521_1_fu_2175_p1;
wire   [0:0] icmp_ln992_fu_2194_p2;
reg   [0:0] icmp_ln992_reg_3045;
wire   [0:0] icmp_ln992_1_fu_2200_p2;
reg   [0:0] icmp_ln992_1_reg_3050;
wire  signed [31:0] lhs_5_fu_2216_p3;
reg  signed [31:0] lhs_5_reg_3055;
wire    ap_CS_fsm_state70;
wire  signed [63:0] sext_ln277_2_fu_2231_p1;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state72;
wire   [63:0] bitcast_ln521_2_fu_2258_p1;
wire   [0:0] icmp_ln997_fu_2277_p2;
reg   [0:0] icmp_ln997_reg_3076;
wire   [0:0] icmp_ln997_1_fu_2283_p2;
reg   [0:0] icmp_ln997_1_reg_3081;
wire  signed [31:0] lhs_6_fu_2299_p3;
reg  signed [31:0] lhs_6_reg_3086;
wire   [0:0] icmp_ln1019_fu_2306_p2;
reg   [0:0] icmp_ln1019_reg_3092;
wire   [31:0] select_ln1002_fu_2339_p3;
reg   [31:0] select_ln1002_reg_3096;
wire    ap_CS_fsm_state74;
wire   [8:0] zext_ln1038_fu_2352_p1;
reg   [8:0] zext_ln1038_reg_3103;
wire   [31:0] grp_makePatch_alignedToLine_fu_830_ap_return;
reg   [31:0] ppl_assign2_reg_3108;
wire    ap_CS_fsm_state77;
wire   [7:0] lastPatchIdx_fu_2357_p2;
reg   [7:0] lastPatchIdx_reg_3113;
wire   [0:0] icmp_ln1072_fu_2431_p2;
reg   [0:0] icmp_ln1072_reg_3130;
wire  signed [63:0] sext_ln534_1_fu_2477_p1;
reg  signed [63:0] sext_ln534_1_reg_3134;
wire    ap_CS_fsm_state79;
wire   [8:0] zext_ln1075_fu_2481_p1;
reg   [8:0] zext_ln1075_reg_3139;
wire   [7:0] thirdLastPatchIdx_fu_2484_p2;
reg   [7:0] thirdLastPatchIdx_reg_3144;
wire   [0:0] icmp_ln1082_fu_2490_p2;
reg   [0:0] icmp_ln1082_reg_3149;
wire    ap_CS_fsm_state80;
wire   [2:0] add_ln1082_fu_2496_p2;
reg   [2:0] add_ln1082_reg_3153;
wire   [31:0] add_ln1102_fu_2546_p2;
wire    ap_CS_fsm_state121;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_flush_enable;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state22;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state25;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state28;
reg    ap_enable_reg_pp4_iter1;
wire    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state30;
reg    ap_enable_reg_pp5_iter3;
reg    ap_enable_reg_pp5_iter4;
reg    ap_enable_reg_pp5_iter5;
reg    ap_enable_reg_pp5_iter6;
reg    ap_enable_reg_pp5_iter7;
wire    ap_CS_fsm_state38;
wire    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state39;
reg    ap_enable_reg_pp6_iter1;
reg    ap_enable_reg_pp6_iter3;
wire    ap_CS_fsm_state43;
wire    ap_block_pp7_stage0_subdone;
reg    ap_condition_pp7_exit_iter0_state44;
reg    ap_enable_reg_pp7_iter1;
reg    ap_enable_reg_pp7_iter2;
wire    ap_CS_fsm_state47;
wire    ap_block_pp8_stage0_subdone;
reg    ap_condition_pp8_exit_iter0_state48;
reg    ap_enable_reg_pp8_iter1;
reg    ap_enable_reg_pp8_iter2;
reg    ap_enable_reg_pp8_iter3;
reg    ap_enable_reg_pp8_iter4;
reg    ap_enable_reg_pp8_iter5;
reg    ap_enable_reg_pp8_iter6;
reg    ap_enable_reg_pp8_iter7;
reg    ap_enable_reg_pp8_iter8;
reg    ap_enable_reg_pp8_iter9;
reg    ap_enable_reg_pp8_iter10;
reg    ap_enable_reg_pp8_iter11;
reg    ap_enable_reg_pp8_iter12;
wire    ap_CS_fsm_state61;
wire    ap_block_pp9_stage0_subdone;
reg    ap_condition_pp9_exit_iter0_state62;
reg    ap_enable_reg_pp9_iter1;
reg   [2:0] current_z_i_index_address0;
reg    current_z_i_index_ce0;
reg    current_z_i_index_we0;
wire   [7:0] current_z_i_index_q0;
reg   [2:0] new_z_i_index_address0;
reg    new_z_i_index_ce0;
reg    new_z_i_index_we0;
reg   [7:0] new_z_i_index_d0;
wire   [7:0] new_z_i_index_q0;
reg   [2:0] new_z_i_index_address1;
reg    new_z_i_index_ce1;
reg    new_z_i_index_we1;
wire   [7:0] new_z_i_index_d1;
wire   [7:0] new_z_i_index_q1;
reg   [2:0] new_z_i_V_address0;
reg    new_z_i_V_ce0;
reg    new_z_i_V_we0;
wire   [31:0] new_z_i_V_q0;
wire    grp_makePatch_alignedToLine_fu_830_ap_start;
wire    grp_makePatch_alignedToLine_fu_830_ap_done;
wire    grp_makePatch_alignedToLine_fu_830_ap_idle;
wire    grp_makePatch_alignedToLine_fu_830_ap_ready;
wire   [7:0] grp_makePatch_alignedToLine_fu_830_n_patches_o;
wire    grp_makePatch_alignedToLine_fu_830_n_patches_o_ap_vld;
wire   [2:0] grp_makePatch_alignedToLine_fu_830_GDn_points_address0;
wire    grp_makePatch_alignedToLine_fu_830_GDn_points_ce0;
wire   [11:0] grp_makePatch_alignedToLine_fu_830_patches_superpoints_address0;
wire    grp_makePatch_alignedToLine_fu_830_patches_superpoints_ce0;
wire    grp_makePatch_alignedToLine_fu_830_patches_superpoints_we0;
wire   [63:0] grp_makePatch_alignedToLine_fu_830_patches_superpoints_d0;
reg   [31:0] grp_makePatch_alignedToLine_fu_830_z_top;
reg   [31:0] grp_makePatch_alignedToLine_fu_830_p_read;
wire   [10:0] grp_makePatch_alignedToLine_fu_830_GDarrayDecoded_address0;
wire    grp_makePatch_alignedToLine_fu_830_GDarrayDecoded_ce0;
wire   [10:0] grp_makePatch_alignedToLine_fu_830_GDarrayDecoded_address1;
wire    grp_makePatch_alignedToLine_fu_830_GDarrayDecoded_ce1;
wire   [11:0] grp_makePatch_alignedToLine_fu_830_patches_parameters_address0;
wire    grp_makePatch_alignedToLine_fu_830_patches_parameters_ce0;
wire    grp_makePatch_alignedToLine_fu_830_patches_parameters_we0;
wire   [31:0] grp_makePatch_alignedToLine_fu_830_patches_parameters_d0;
wire   [7:0] grp_makePatch_alignedToLine_fu_830_temp_V_address0;
wire    grp_makePatch_alignedToLine_fu_830_temp_V_ce0;
wire    grp_makePatch_alignedToLine_fu_830_temp_V_we0;
wire   [31:0] grp_makePatch_alignedToLine_fu_830_temp_V_d0;
wire   [7:0] grp_makePatch_alignedToLine_fu_830_temp_V_address1;
wire    grp_makePatch_alignedToLine_fu_830_temp_V_ce1;
wire    grp_makePatch_alignedToLine_fu_830_temp_V_we1;
wire   [31:0] grp_makePatch_alignedToLine_fu_830_temp_V_d1;
wire    grp_areWedgeSuperPointsEqual_fu_855_ap_start;
wire    grp_areWedgeSuperPointsEqual_fu_855_ap_done;
wire    grp_areWedgeSuperPointsEqual_fu_855_ap_idle;
wire    grp_areWedgeSuperPointsEqual_fu_855_ap_ready;
wire   [11:0] grp_areWedgeSuperPointsEqual_fu_855_wsp1_2_address0;
wire    grp_areWedgeSuperPointsEqual_fu_855_wsp1_2_ce0;
wire   [11:0] grp_areWedgeSuperPointsEqual_fu_855_wsp1_2_address1;
wire    grp_areWedgeSuperPointsEqual_fu_855_wsp1_2_ce1;
wire   [0:0] grp_areWedgeSuperPointsEqual_fu_855_ap_return;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_867_ap_start;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_867_ap_done;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_867_ap_idle;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_867_ap_ready;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_867_ap_ce;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_867_z_i;
reg   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_867_z_j;
wire   [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_867_i;
reg   [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_867_j;
reg   [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_867_k;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_867_ap_return;
wire    grp_delete_patch_fu_882_ap_start;
wire    grp_delete_patch_fu_882_ap_done;
wire    grp_delete_patch_fu_882_ap_idle;
wire    grp_delete_patch_fu_882_ap_ready;
wire   [7:0] grp_delete_patch_fu_882_n_patches;
wire    grp_delete_patch_fu_882_n_patches_ap_vld;
wire   [11:0] grp_delete_patch_fu_882_patches_superpoints_address0;
wire    grp_delete_patch_fu_882_patches_superpoints_ce0;
wire    grp_delete_patch_fu_882_patches_superpoints_we0;
wire   [63:0] grp_delete_patch_fu_882_patches_superpoints_d0;
wire   [11:0] grp_delete_patch_fu_882_patches_superpoints_address1;
wire    grp_delete_patch_fu_882_patches_superpoints_ce1;
reg   [8:0] grp_delete_patch_fu_882_index;
wire   [11:0] grp_delete_patch_fu_882_patches_parameters_V_address0;
wire    grp_delete_patch_fu_882_patches_parameters_V_ce0;
wire    grp_delete_patch_fu_882_patches_parameters_V_we0;
wire   [31:0] grp_delete_patch_fu_882_patches_parameters_V_d0;
wire   [11:0] grp_delete_patch_fu_882_patches_parameters_V_address1;
wire    grp_delete_patch_fu_882_patches_parameters_V_ce1;
reg   [7:0] ap_phi_mux_i_phi_fu_565_p4;
wire    ap_block_pp0_stage0;
reg   [2:0] i_17_reg_597;
wire    ap_CS_fsm_state21;
reg   [7:0] ap_phi_mux_i_5_phi_fu_613_p4;
wire    ap_block_pp1_stage0;
reg   [8:0] ap_phi_mux_empty_73_phi_fu_659_p4;
reg   [8:0] empty_73_reg_656;
reg   [31:0] counter_0_reg_676;
reg   [31:0] counterUpshift_0_reg_686;
reg   [9:0] ap_phi_mux_empty_76_phi_fu_699_p4;
reg   [2:0] ap_phi_mux_i_12_phi_fu_742_p4;
wire    ap_block_pp7_stage0;
reg   [2:0] ap_phi_mux_i_15_phi_fu_754_p4;
wire    ap_block_pp8_stage0;
reg   [2:0] i_16_reg_796;
wire    ap_CS_fsm_state100;
reg   [31:0] ap_phi_mux_current_z_top_index_0_phi_fu_811_p6;
reg   [31:0] current_z_top_index_0_reg_808;
wire    ap_CS_fsm_state101;
reg   [31:0] ap_phi_mux_z_top_min_4_phi_fu_822_p6;
reg   [31:0] z_top_min_4_reg_819;
reg    grp_makePatch_alignedToLine_fu_830_ap_start_reg;
wire    ap_CS_fsm_state76;
wire    ap_CS_fsm_state104;
wire    ap_CS_fsm_state105;
reg    grp_areWedgeSuperPointsEqual_fu_855_ap_start_reg;
reg   [89:0] ap_NS_fsm;
wire    ap_NS_fsm_state81;
wire    ap_CS_fsm_state81;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state98;
wire    ap_CS_fsm_state99;
reg    grp_straightLineProjectorFromLayerIJtoK_fu_867_ap_start_reg;
wire    ap_NS_fsm_state7;
wire    ap_CS_fsm_state7;
reg    grp_delete_patch_fu_882_ap_start_reg;
wire    ap_CS_fsm_state102;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state103;
wire   [63:0] tmp_7_fu_990_p3;
wire   [63:0] zext_ln215_1_fu_1138_p1;
wire    ap_block_pp2_stage0;
wire    ap_block_pp3_stage0;
wire    ap_block_pp4_stage0;
wire   [63:0] i_10_cast_fu_1331_p1;
wire    ap_block_pp5_stage0;
wire   [63:0] i_11_cast_fu_1561_p1;
wire    ap_block_pp6_stage0;
wire   [63:0] zext_ln949_1_fu_1791_p1;
wire   [63:0] trunc_ln958_cast_fu_1808_p1;
wire   [63:0] zext_ln989_fu_2118_p1;
wire   [63:0] zext_ln994_fu_2158_p1;
wire   [63:0] zext_ln999_fu_2241_p1;
wire   [63:0] zext_ln1050_1_fu_2405_p1;
wire   [63:0] zext_ln1051_fu_2416_p1;
reg   [31:0] new_z_i_atTop_V_3_fu_264;
reg   [31:0] new_z_i_atTop_V_3_1_fu_268;
wire    ap_block_pp9_stage0;
reg   [31:0] new_z_i_atTop_V_3_2_fu_272;
reg   [31:0] new_z_i_atTop_V_3_3_fu_276;
reg   [31:0] new_z_i_atTop_V_3_4_fu_280;
wire   [7:0] grp_fu_921_p2;
wire   [7:0] add_ln921_fu_1312_p2;
wire   [7:0] val_fu_1540_p3;
reg   [31:0] grp_fu_899_p0;
wire   [31:0] grp_fu_903_p0;
reg   [31:0] grp_fu_906_p0;
reg   [31:0] grp_fu_906_p1;
reg   [63:0] grp_fu_913_p0;
wire   [63:0] grp_fu_913_p1;
reg  signed [63:0] grp_fu_918_p0;
wire  signed [31:0] rhs_fu_956_p0;
wire   [31:0] zext_ln412_fu_966_p1;
wire   [8:0] tmp_6_fu_976_p3;
wire   [8:0] or_ln215_fu_984_p2;
wire  signed [32:0] sext_ln215_fu_999_p1;
wire   [32:0] ret_fu_1003_p2;
wire   [0:0] tmp_31_fu_1014_p3;
wire   [32:0] sub_ln180_fu_1008_p2;
wire   [32:0] diff_fu_1022_p3;
wire  signed [63:0] sext_ln414_fu_1030_p1;
wire   [0:0] icmp_ln415_fu_1034_p2;
wire  signed [31:0] icmp_ln870_fu_1072_p0;
wire   [9:0] tmp_9_fu_1086_p3;
wire   [31:0] zext_ln412_1_fu_1108_p1;
wire   [10:0] zext_ln215_fu_1117_p1;
wire   [10:0] add_ln215_fu_1121_p2;
wire   [10:0] shl_ln215_fu_1126_p2;
wire   [10:0] or_ln215_1_fu_1132_p2;
wire  signed [32:0] sext_ln215_4_fu_1143_p1;
wire   [32:0] ret_3_fu_1147_p2;
wire   [0:0] tmp_32_fu_1158_p3;
wire   [32:0] sub_ln180_1_fu_1152_p2;
wire   [32:0] diff_1_fu_1166_p3;
wire  signed [63:0] sext_ln414_1_fu_1174_p1;
wire   [0:0] icmp_ln415_1_fu_1178_p2;
wire  signed [63:0] tmp_33_fu_1217_p1;
wire   [8:0] add_ln927_fu_1229_p2;
wire   [8:0] add_ln918_fu_1244_p2;
wire  signed [31:0] sext_ln934_fu_1271_p1;
wire   [31:0] add_ln934_fu_1275_p2;
wire   [0:0] icmp_ln934_fu_1281_p2;
wire   [31:0] bitcast_ln938_fu_1342_p1;
wire   [31:0] bitcast_ln938_1_fu_1359_p1;
wire   [7:0] tmp_s_fu_1345_p4;
wire   [22:0] trunc_ln938_fu_1355_p1;
wire   [0:0] icmp_ln938_1_fu_1382_p2;
wire   [0:0] icmp_ln938_fu_1376_p2;
wire   [7:0] tmp_1_fu_1362_p4;
wire   [22:0] trunc_ln938_1_fu_1372_p1;
wire   [0:0] icmp_ln938_3_fu_1400_p2;
wire   [0:0] icmp_ln938_2_fu_1394_p2;
wire   [0:0] or_ln938_fu_1388_p2;
wire   [0:0] or_ln938_1_fu_1406_p2;
wire   [0:0] and_ln938_fu_1412_p2;
wire   [0:0] grp_fu_906_p2;
wire   [0:0] and_ln938_1_fu_1418_p2;
wire   [31:0] dc_fu_1424_p3;
wire   [31:0] data_V_fu_1430_p1;
wire   [22:0] tmp_49_fu_1444_p1;
wire   [24:0] mantissa_fu_1448_p4;
wire   [7:0] tmp_48_fu_1434_p4;
wire   [8:0] zext_ln341_fu_1462_p1;
wire   [8:0] add_ln341_fu_1466_p2;
wire   [7:0] sub_ln1311_fu_1480_p2;
wire   [0:0] isNeg_fu_1472_p3;
wire  signed [8:0] sext_ln1311_fu_1486_p1;
wire   [8:0] ush_fu_1490_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i_cast_cast_cast_fu_1498_p1;
wire   [54:0] zext_ln68_fu_1458_p1;
wire   [54:0] sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_1502_p1;
wire   [54:0] r_V_fu_1506_p2;
wire   [0:0] tmp_37_fu_1518_p3;
wire   [54:0] r_V_4_fu_1512_p2;
wire   [7:0] zext_ln662_fu_1526_p1;
wire   [7:0] tmp_15_fu_1530_p4;
wire   [31:0] bitcast_ln943_fu_1571_p1;
wire   [7:0] tmp_fu_1575_p4;
wire   [22:0] trunc_ln943_fu_1585_p1;
wire   [0:0] icmp_ln943_1_fu_1595_p2;
wire   [0:0] icmp_ln943_fu_1589_p2;
wire   [0:0] or_ln943_fu_1601_p2;
wire   [0:0] and_ln943_fu_1607_p2;
wire   [30:0] trunc_ln312_fu_1613_p1;
wire   [30:0] data_V_2_fu_1617_p3;
wire   [22:0] tmp_51_fu_1635_p1;
wire   [24:0] mantissa_2_fu_1639_p4;
wire   [7:0] tmp_50_fu_1625_p4;
wire   [8:0] zext_ln341_2_fu_1653_p1;
wire   [8:0] add_ln341_2_fu_1657_p2;
wire   [7:0] sub_ln1311_2_fu_1671_p2;
wire   [0:0] isNeg_2_fu_1663_p3;
wire  signed [8:0] sext_ln1311_2_fu_1677_p1;
wire   [8:0] ush_2_fu_1681_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i75_cast_cast_cast_fu_1689_p1;
wire   [54:0] zext_ln68_1_fu_1649_p1;
wire   [54:0] sh_prom_i_i_i_i_i75_cast_cast_cast_cast_fu_1693_p1;
wire   [54:0] r_V_5_fu_1697_p2;
wire   [0:0] tmp_41_fu_1709_p3;
wire   [54:0] r_V_6_fu_1703_p2;
wire   [7:0] zext_ln662_1_fu_1717_p1;
wire   [7:0] tmp_19_fu_1721_p4;
wire   [9:0] tmp_21_fu_1757_p3;
wire   [10:0] zext_ln947_fu_1765_p1;
wire   [10:0] zext_ln949_fu_1769_p1;
wire   [10:0] add_ln949_fu_1773_p2;
wire   [10:0] shl_ln949_fu_1779_p2;
wire   [10:0] or_ln949_fu_1785_p2;
wire   [1:0] tmp_17_fu_1858_p5;
wire   [31:0] tmp_17_fu_1858_p6;
wire  signed [32:0] sext_ln967_fu_1872_p1;
wire   [32:0] sub_ln967_fu_1876_p2;
wire   [63:0] grp_fu_918_p1;
wire   [63:0] data_V_3_fu_1886_p1;
wire   [53:0] mantissa_3_fu_1904_p4;
wire   [11:0] zext_ln510_fu_1917_p1;
wire   [11:0] add_ln510_fu_1920_p2;
wire   [10:0] sub_ln1311_3_fu_1934_p2;
wire   [0:0] isNeg_3_fu_1926_p3;
wire  signed [11:0] sext_ln1311_3_fu_1939_p1;
wire   [11:0] ush_3_fu_1943_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i102_cast_cast_cast_fu_1951_p1;
wire   [168:0] zext_ln15_fu_1913_p1;
wire   [168:0] sh_prom_i_i_i_i_i102_cast_cast_cast_cast_fu_1955_p1;
wire   [168:0] r_V_7_fu_1959_p2;
wire   [0:0] tmp_46_fu_1971_p3;
wire   [168:0] r_V_8_fu_1965_p2;
wire   [63:0] zext_ln662_2_fu_1979_p1;
wire   [63:0] tmp_23_fu_1983_p4;
wire   [63:0] val_3_fu_1993_p3;
wire   [0:0] icmp_ln967_fu_2001_p2;
wire   [7:0] zext_ln967_fu_2007_p1;
wire   [1:0] lhs_3_fu_2030_p5;
wire  signed [32:0] sext_ln215_5_fu_2044_p1;
wire   [32:0] ret_8_fu_2048_p2;
wire   [63:0] data_V_4_fu_2058_p1;
wire   [62:0] p_Result_s_fu_2062_p1;
wire   [63:0] zext_ln368_fu_2066_p1;
wire   [10:0] tmp_8_fu_2075_p4;
wire   [51:0] trunc_ln987_fu_2085_p1;
wire   [9:0] trunc_ln989_fu_2101_p1;
wire   [10:0] add_ln989_fu_2112_p2;
wire   [0:0] or_ln987_fu_2123_p2;
wire   [0:0] and_ln987_fu_2127_p2;
wire  signed [32:0] sext_ln215_6_fu_2139_p1;
wire   [32:0] ret_10_fu_2143_p2;
wire   [10:0] add_ln994_fu_2153_p2;
wire   [63:0] data_V_5_fu_2163_p1;
wire   [62:0] p_Result_2_fu_2167_p1;
wire   [63:0] zext_ln368_1_fu_2171_p1;
wire   [10:0] tmp_11_fu_2180_p4;
wire   [51:0] trunc_ln992_fu_2190_p1;
wire   [0:0] or_ln992_fu_2206_p2;
wire   [0:0] and_ln992_fu_2210_p2;
wire  signed [32:0] sext_ln215_7_fu_2223_p1;
wire   [32:0] ret_12_fu_2226_p2;
wire   [10:0] add_ln999_fu_2236_p2;
wire   [63:0] data_V_6_fu_2246_p1;
wire   [62:0] p_Result_3_fu_2250_p1;
wire   [63:0] zext_ln368_2_fu_2254_p1;
wire   [10:0] tmp_14_fu_2263_p4;
wire   [51:0] trunc_ln997_fu_2273_p1;
wire   [0:0] or_ln997_fu_2289_p2;
wire   [0:0] and_ln997_fu_2293_p2;
wire  signed [32:0] sext_ln215_8_fu_2314_p1;
wire  signed [32:0] ret_14_fu_2317_p2;
wire   [63:0] mul_ln1002_fu_2326_p2;
wire   [0:0] tmp_42_fu_2331_p3;
wire   [7:0] add_ln1018_fu_2346_p2;
wire   [4:0] trunc_ln1050_fu_2363_p1;
wire   [10:0] tmp_24_fu_2375_p3;
wire   [11:0] tmp_54_cast_fu_2367_p3;
wire   [11:0] zext_ln1050_fu_2383_p1;
wire   [11:0] sub_ln1050_fu_2387_p2;
wire   [11:0] add_ln1050_fu_2393_p2;
wire   [11:0] or_ln1050_fu_2399_p2;
wire   [11:0] add_ln1051_fu_2410_p2;
wire   [5:0] tmp_47_fu_2421_p4;
wire  signed [32:0] sext_ln215_9_fu_2437_p1;
wire  signed [32:0] sext_ln215_10_fu_2440_p1;
wire  signed [32:0] sext_ln215_11_fu_2450_p1;
wire  signed [32:0] sext_ln215_12_fu_2453_p1;
wire   [32:0] ret_17_fu_2444_p2;
wire   [32:0] ret_18_fu_2457_p2;
wire   [0:0] icmp_ln878_fu_2463_p2;
wire   [32:0] select_ln1056_fu_2469_p3;
wire    grp_fu_899_ce;
wire    grp_fu_903_ce;
wire    ap_block_pp5_stage0_00001;
wire    ap_block_pp6_stage0_00001;
wire    grp_fu_913_ce;
wire   [4:0] grp_fu_913_opcode;
wire    grp_fu_918_ce;
reg   [63:0] ap_return_0_preg;
reg   [7:0] ap_return_1_preg;
reg   [31:0] ap_return_2_preg;
reg   [31:0] ap_return_3_preg;
reg   [31:0] ap_return_4_preg;
reg   [31:0] ap_return_5_preg;
reg   [63:0] ap_return_6_preg;
reg   [31:0] ap_return_7_preg;
reg    ap_block_state75_on_subcall_done;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
reg    ap_idle_pp8;
wire    ap_enable_pp8;
reg    ap_idle_pp9;
wire    ap_enable_pp9;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 90'd1;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp8_iter0 = 1'b0;
#0 ap_enable_reg_pp9_iter0 = 1'b0;
#0 ap_enable_reg_pp9_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter3 = 1'b0;
#0 ap_enable_reg_pp5_iter4 = 1'b0;
#0 ap_enable_reg_pp5_iter5 = 1'b0;
#0 ap_enable_reg_pp5_iter6 = 1'b0;
#0 ap_enable_reg_pp5_iter7 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter3 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
#0 ap_enable_reg_pp7_iter2 = 1'b0;
#0 ap_enable_reg_pp8_iter1 = 1'b0;
#0 ap_enable_reg_pp8_iter2 = 1'b0;
#0 ap_enable_reg_pp8_iter3 = 1'b0;
#0 ap_enable_reg_pp8_iter4 = 1'b0;
#0 ap_enable_reg_pp8_iter5 = 1'b0;
#0 ap_enable_reg_pp8_iter6 = 1'b0;
#0 ap_enable_reg_pp8_iter7 = 1'b0;
#0 ap_enable_reg_pp8_iter8 = 1'b0;
#0 ap_enable_reg_pp8_iter9 = 1'b0;
#0 ap_enable_reg_pp8_iter10 = 1'b0;
#0 ap_enable_reg_pp8_iter11 = 1'b0;
#0 ap_enable_reg_pp8_iter12 = 1'b0;
#0 ap_enable_reg_pp9_iter1 = 1'b0;
#0 grp_makePatch_alignedToLine_fu_830_ap_start_reg = 1'b0;
#0 grp_areWedgeSuperPointsEqual_fu_855_ap_start_reg = 1'b0;
#0 grp_straightLineProjectorFromLayerIJtoK_fu_867_ap_start_reg = 1'b0;
#0 grp_delete_patch_fu_882_ap_start_reg = 1'b0;
#0 ap_return_0_preg = 64'd0;
#0 ap_return_1_preg = 8'd0;
#0 ap_return_2_preg = 32'd0;
#0 ap_return_3_preg = 32'd0;
#0 ap_return_4_preg = 32'd0;
#0 ap_return_5_preg = 32'd0;
#0 ap_return_6_preg = 64'd0;
#0 ap_return_7_preg = 32'd0;
end

makePatches_ShadowQuilt_fromEdges_solveComplmentaryPatch_current_z_i_index #(
    .DataWidth( 8 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
current_z_i_index_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(current_z_i_index_address0),
    .ce0(current_z_i_index_ce0),
    .we0(current_z_i_index_we0),
    .d0(index_2_reg_621),
    .q0(current_z_i_index_q0)
);

makePatches_ShadowQuilt_fromEdges_solveComplmentaryPatch_new_z_i_index #(
    .DataWidth( 8 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
new_z_i_index_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(new_z_i_index_address0),
    .ce0(new_z_i_index_ce0),
    .we0(new_z_i_index_we0),
    .d0(new_z_i_index_d0),
    .q0(new_z_i_index_q0),
    .address1(new_z_i_index_address1),
    .ce1(new_z_i_index_ce1),
    .we1(new_z_i_index_we1),
    .d1(new_z_i_index_d1),
    .q1(new_z_i_index_q1)
);

makePatches_ShadowQuilt_fromEdges_solveComplmentaryPatch_new_z_i_V #(
    .DataWidth( 32 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
new_z_i_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(new_z_i_V_address0),
    .ce0(new_z_i_V_ce0),
    .we0(new_z_i_V_we0),
    .d0(GDarrayDecoded_q0),
    .q0(new_z_i_V_q0)
);

makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine grp_makePatch_alignedToLine_fu_830(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_makePatch_alignedToLine_fu_830_ap_start),
    .ap_done(grp_makePatch_alignedToLine_fu_830_ap_done),
    .ap_idle(grp_makePatch_alignedToLine_fu_830_ap_idle),
    .ap_ready(grp_makePatch_alignedToLine_fu_830_ap_ready),
    .n_patches_i(n_patches_i),
    .n_patches_o(grp_makePatch_alignedToLine_fu_830_n_patches_o),
    .n_patches_o_ap_vld(grp_makePatch_alignedToLine_fu_830_n_patches_o_ap_vld),
    .GDn_points_address0(grp_makePatch_alignedToLine_fu_830_GDn_points_address0),
    .GDn_points_ce0(grp_makePatch_alignedToLine_fu_830_GDn_points_ce0),
    .GDn_points_q0(GDn_points_q0),
    .patches_superpoints_address0(grp_makePatch_alignedToLine_fu_830_patches_superpoints_address0),
    .patches_superpoints_ce0(grp_makePatch_alignedToLine_fu_830_patches_superpoints_ce0),
    .patches_superpoints_we0(grp_makePatch_alignedToLine_fu_830_patches_superpoints_we0),
    .patches_superpoints_d0(grp_makePatch_alignedToLine_fu_830_patches_superpoints_d0),
    .patches_superpoints_q0(patches_superpoints_q0),
    .apexZ0(complementary_apexZ0),
    .z_top(grp_makePatch_alignedToLine_fu_830_z_top),
    .p_read(grp_makePatch_alignedToLine_fu_830_p_read),
    .leftRight(1'd1),
    .GDarrayDecoded_address0(grp_makePatch_alignedToLine_fu_830_GDarrayDecoded_address0),
    .GDarrayDecoded_ce0(grp_makePatch_alignedToLine_fu_830_GDarrayDecoded_ce0),
    .GDarrayDecoded_q0(GDarrayDecoded_q0),
    .GDarrayDecoded_address1(grp_makePatch_alignedToLine_fu_830_GDarrayDecoded_address1),
    .GDarrayDecoded_ce1(grp_makePatch_alignedToLine_fu_830_GDarrayDecoded_ce1),
    .GDarrayDecoded_q1(GDarrayDecoded_q1),
    .patches_parameters_address0(grp_makePatch_alignedToLine_fu_830_patches_parameters_address0),
    .patches_parameters_ce0(grp_makePatch_alignedToLine_fu_830_patches_parameters_ce0),
    .patches_parameters_we0(grp_makePatch_alignedToLine_fu_830_patches_parameters_we0),
    .patches_parameters_d0(grp_makePatch_alignedToLine_fu_830_patches_parameters_d0),
    .patches_parameters_q0(patches_parameters_q0),
    .temp_V_address0(grp_makePatch_alignedToLine_fu_830_temp_V_address0),
    .temp_V_ce0(grp_makePatch_alignedToLine_fu_830_temp_V_ce0),
    .temp_V_we0(grp_makePatch_alignedToLine_fu_830_temp_V_we0),
    .temp_V_d0(grp_makePatch_alignedToLine_fu_830_temp_V_d0),
    .temp_V_q0(temp_V_q0),
    .temp_V_address1(grp_makePatch_alignedToLine_fu_830_temp_V_address1),
    .temp_V_ce1(grp_makePatch_alignedToLine_fu_830_temp_V_ce1),
    .temp_V_we1(grp_makePatch_alignedToLine_fu_830_temp_V_we1),
    .temp_V_d1(grp_makePatch_alignedToLine_fu_830_temp_V_d1),
    .ap_return(grp_makePatch_alignedToLine_fu_830_ap_return)
);

makePatches_ShadowQuilt_fromEdges_areWedgeSuperPointsEqual grp_areWedgeSuperPointsEqual_fu_855(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_areWedgeSuperPointsEqual_fu_855_ap_start),
    .ap_done(grp_areWedgeSuperPointsEqual_fu_855_ap_done),
    .ap_idle(grp_areWedgeSuperPointsEqual_fu_855_ap_idle),
    .ap_ready(grp_areWedgeSuperPointsEqual_fu_855_ap_ready),
    .wsp1_2_address0(grp_areWedgeSuperPointsEqual_fu_855_wsp1_2_address0),
    .wsp1_2_ce0(grp_areWedgeSuperPointsEqual_fu_855_wsp1_2_ce0),
    .wsp1_2_q0(patches_superpoints_q0),
    .wsp1_2_address1(grp_areWedgeSuperPointsEqual_fu_855_wsp1_2_address1),
    .wsp1_2_ce1(grp_areWedgeSuperPointsEqual_fu_855_wsp1_2_ce1),
    .wsp1_2_q1(patches_superpoints_q1),
    .wsp1(lastPatchIdx_reg_3113),
    .wsp11(i_16_reg_796),
    .wsp2(thirdLastPatchIdx_reg_3144),
    .wsp23(i_16_reg_796),
    .ap_return(grp_areWedgeSuperPointsEqual_fu_855_ap_return)
);

makePatches_ShadowQuilt_fromEdges_delete_patch grp_delete_patch_fu_882(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_delete_patch_fu_882_ap_start),
    .ap_done(grp_delete_patch_fu_882_ap_done),
    .ap_idle(grp_delete_patch_fu_882_ap_idle),
    .ap_ready(grp_delete_patch_fu_882_ap_ready),
    .n_patches(grp_delete_patch_fu_882_n_patches),
    .n_patches_ap_vld(grp_delete_patch_fu_882_n_patches_ap_vld),
    .n_patches_read(reg_951),
    .patches_superpoints_address0(grp_delete_patch_fu_882_patches_superpoints_address0),
    .patches_superpoints_ce0(grp_delete_patch_fu_882_patches_superpoints_ce0),
    .patches_superpoints_we0(grp_delete_patch_fu_882_patches_superpoints_we0),
    .patches_superpoints_d0(grp_delete_patch_fu_882_patches_superpoints_d0),
    .patches_superpoints_address1(grp_delete_patch_fu_882_patches_superpoints_address1),
    .patches_superpoints_ce1(grp_delete_patch_fu_882_patches_superpoints_ce1),
    .patches_superpoints_q1(patches_superpoints_q1),
    .index(grp_delete_patch_fu_882_index),
    .patches_parameters_V_address0(grp_delete_patch_fu_882_patches_parameters_V_address0),
    .patches_parameters_V_ce0(grp_delete_patch_fu_882_patches_parameters_V_ce0),
    .patches_parameters_V_we0(grp_delete_patch_fu_882_patches_parameters_V_we0),
    .patches_parameters_V_d0(grp_delete_patch_fu_882_patches_parameters_V_d0),
    .patches_parameters_V_address1(grp_delete_patch_fu_882_patches_parameters_V_address1),
    .patches_parameters_V_ce1(grp_delete_patch_fu_882_patches_parameters_V_ce1),
    .patches_parameters_V_q1(patches_parameters_q1)
);

makePatches_ShadowQuilt_fromEdges_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U130(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_945),
    .din1(32'd3212836864),
    .ce(1'b1),
    .dout(grp_fu_894_p2)
);

makePatches_ShadowQuilt_fromEdges_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U133(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_906_p0),
    .din1(grp_fu_906_p1),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_906_p2)
);

makePatches_ShadowQuilt_fromEdges_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U136(
    .din0(new_z_i_atTop_V_3_1_fu_268),
    .din1(new_z_i_atTop_V_3_2_fu_272),
    .din2(new_z_i_atTop_V_3_3_fu_276),
    .din3(new_z_i_atTop_V_3_4_fu_280),
    .din4(tmp_17_fu_1858_p5),
    .dout(tmp_17_fu_1858_p6)
);

makePatches_ShadowQuilt_fromEdges_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U137(
    .din0(new_z_i_atTop_V_3_1_fu_268),
    .din1(new_z_i_atTop_V_3_2_fu_272),
    .din2(new_z_i_atTop_V_3_3_fu_276),
    .din3(new_z_i_atTop_V_3_4_fu_280),
    .din4(lhs_3_fu_2030_p5),
    .dout(lhs_3_fu_2030_p6)
);

makePatches_ShadowQuilt_fromEdges_mul_33s_64s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
mul_33s_64s_64_1_1_U138(
    .din0(ret_14_fu_2317_p2),
    .din1(white_space_height_read),
    .dout(mul_ln1002_fu_2326_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp1_flush_enable)) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state22) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((icmp_ln870_fu_1072_p2 == 1'd1) & (icmp_ln899_fu_1066_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state22))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state22);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((icmp_ln870_fu_1072_p2 == 1'd1) & (icmp_ln899_fu_1066_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state25) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((tmp_33_fu_1217_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state25))) begin
            ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state25);
        end else if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if (((tmp_33_fu_1217_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state28) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if (((tmp_33_fu_1217_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state28))) begin
            ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state28);
        end else if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end else if (((tmp_33_fu_1217_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_condition_pp5_exit_iter0_state30) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter0_state30)) begin
                ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state30);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter3 <= ap_enable_reg_pp5_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter4 <= ap_enable_reg_pp5_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter5 <= ap_enable_reg_pp5_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter6 <= ap_enable_reg_pp5_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter7 <= ap_enable_reg_pp5_iter6;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp5_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp6_stage0_subdone) & (1'b1 == ap_condition_pp6_exit_iter0_state39) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state38)) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp6_exit_iter0_state39)) begin
                ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state39);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter3 <= ap_enable_reg_pp6_iter2;
        end else if ((1'b1 == ap_CS_fsm_state38)) begin
            ap_enable_reg_pp6_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp7_stage0_subdone) & (1'b1 == ap_condition_pp7_exit_iter0_state44) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state43)) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp7_exit_iter0_state44)) begin
                ap_enable_reg_pp7_iter1 <= (1'b1 ^ ap_condition_pp7_exit_iter0_state44);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter2 <= ap_enable_reg_pp7_iter1;
        end else if ((1'b1 == ap_CS_fsm_state43)) begin
            ap_enable_reg_pp7_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp8_stage0_subdone) & (1'b1 == ap_CS_fsm_pp8_stage0) & (1'b1 == ap_condition_pp8_exit_iter0_state48))) begin
            ap_enable_reg_pp8_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_enable_reg_pp8_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp8_exit_iter0_state48)) begin
                ap_enable_reg_pp8_iter1 <= (1'b1 ^ ap_condition_pp8_exit_iter0_state48);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp8_iter1 <= ap_enable_reg_pp8_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter10 <= ap_enable_reg_pp8_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter11 <= ap_enable_reg_pp8_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter12 <= ap_enable_reg_pp8_iter11;
        end else if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_enable_reg_pp8_iter12 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter2 <= ap_enable_reg_pp8_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter3 <= ap_enable_reg_pp8_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter4 <= ap_enable_reg_pp8_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter5 <= ap_enable_reg_pp8_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter6 <= ap_enable_reg_pp8_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter7 <= ap_enable_reg_pp8_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter8 <= ap_enable_reg_pp8_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter9 <= ap_enable_reg_pp8_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp9_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp9_stage0_subdone) & (1'b1 == ap_CS_fsm_pp9_stage0) & (1'b1 == ap_condition_pp9_exit_iter0_state62))) begin
            ap_enable_reg_pp9_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state61)) begin
            ap_enable_reg_pp9_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp9_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp9_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp9_exit_iter0_state62)) begin
                ap_enable_reg_pp9_iter1 <= (1'b1 ^ ap_condition_pp9_exit_iter0_state62);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp9_iter1 <= ap_enable_reg_pp9_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp9_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp9_stage0_subdone)) begin
            ap_enable_reg_pp9_iter2 <= ap_enable_reg_pp9_iter1;
        end else if ((1'b1 == ap_CS_fsm_state61)) begin
            ap_enable_reg_pp9_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state101)) begin
            ap_return_0_preg <= white_space_height_read;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 8'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state101)) begin
            ap_return_1_preg <= lastPatchIdx_reg_3113;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state101)) begin
            ap_return_2_preg <= ap_phi_mux_current_z_top_index_0_phi_fu_811_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state101)) begin
            ap_return_3_preg <= counter_0_reg_676;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state101)) begin
            ap_return_4_preg <= counterUpshift_0_reg_686;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state101)) begin
            ap_return_5_preg <= z_top_min_read;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state101)) begin
            ap_return_6_preg <= sext_ln534_1_reg_3134;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_7_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state101)) begin
            ap_return_7_preg <= ap_phi_mux_z_top_min_4_phi_fu_822_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_areWedgeSuperPointsEqual_fu_855_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln1082_fu_2490_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80) & (1'b1 == ap_NS_fsm_state81))) begin
            grp_areWedgeSuperPointsEqual_fu_855_ap_start_reg <= 1'b1;
        end else if ((grp_areWedgeSuperPointsEqual_fu_855_ap_ready == 1'b1)) begin
            grp_areWedgeSuperPointsEqual_fu_855_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_delete_patch_fu_882_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state102) | ((icmp_ln1019_reg_3092 == 1'd1) & (1'b1 == ap_CS_fsm_state74)))) begin
            grp_delete_patch_fu_882_ap_start_reg <= 1'b1;
        end else if ((grp_delete_patch_fu_882_ap_ready == 1'b1)) begin
            grp_delete_patch_fu_882_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_makePatch_alignedToLine_fu_830_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state76))) begin
            grp_makePatch_alignedToLine_fu_830_ap_start_reg <= 1'b1;
        end else if ((grp_makePatch_alignedToLine_fu_830_ap_ready == 1'b1)) begin
            grp_makePatch_alignedToLine_fu_830_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_867_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp8_iter0 == 1'b1) & (icmp_ln953_fu_1796_p2 == 1'd0) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0)) | ((1'b1 == ap_CS_fsm_state6) & (1'b1 == ap_NS_fsm_state7)))) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_867_ap_start_reg <= 1'b1;
        end else if ((grp_straightLineProjectorFromLayerIJtoK_fu_867_ap_ready == 1'b1)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_867_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((tmp_33_reg_2740 == 1'd1)) begin
            counterUpshift_0_reg_686 <= p_read13;
        end else if ((tmp_33_reg_2740 == 1'd0)) begin
            counterUpshift_0_reg_686 <= add_ln926_reg_2744;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((tmp_33_reg_2740 == 1'd1)) begin
            counter_0_reg_676 <= add_ln917_reg_2754;
        end else if ((tmp_33_reg_2740 == 1'd0)) begin
            counter_0_reg_676 <= p_read12;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln1072_reg_3130 == 1'd1) & (1'b1 == ap_CS_fsm_state79)) | ((icmp_ln1082_reg_3149 == 1'd1) & (icmp_ln1072_reg_3130 == 1'd0) & (1'b1 == ap_CS_fsm_state101)))) begin
        current_z_top_index_0_reg_808 <= select_ln934_reg_2783;
    end else if ((1'b1 == ap_CS_fsm_state121)) begin
        current_z_top_index_0_reg_808 <= add_ln1102_fu_2546_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln870_reg_2663 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        empty_73_reg_656 <= add_ln906_reg_2667;
    end else if (((icmp_ln870_fu_1072_p2 == 1'd0) & (icmp_ln899_fu_1066_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        empty_73_reg_656 <= zext_ln896_reg_2647;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln936_fu_1325_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        i_10_reg_716 <= add_ln936_fu_1319_p2;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        i_10_reg_716 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        i_11_reg_727 <= 3'd0;
    end else if (((icmp_ln941_fu_1555_p2 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        i_11_reg_727 <= add_ln941_fu_1549_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        i_12_reg_738 <= 3'd0;
    end else if (((ap_enable_reg_pp7_iter1 == 1'b1) & (icmp_ln947_reg_2874 == 1'd0) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        i_12_reg_738 <= add_ln947_reg_2869;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        i_14_reg_761 <= 3'd0;
    end else if (((icmp_ln965_fu_1848_p2 == 1'd0) & (ap_enable_reg_pp9_iter0 == 1'b1) & (1'b0 == ap_block_pp9_stage0_11001) & (1'b1 == ap_CS_fsm_pp9_stage0))) begin
        i_14_reg_761 <= add_ln965_fu_1842_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        i_15_reg_750 <= 3'd1;
    end else if (((icmp_ln953_reg_2923 == 1'd0) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter1 == 1'b1))) begin
        i_15_reg_750 <= add_ln958_reg_2927;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1082_reg_3149 == 1'd1) & (1'b1 == ap_CS_fsm_state100) & (grp_areWedgeSuperPointsEqual_fu_855_ap_return == 1'd1))) begin
        i_16_reg_796 <= add_ln1082_reg_3153;
    end else if (((icmp_ln1072_reg_3130 == 1'd0) & (1'b1 == ap_CS_fsm_state79))) begin
        i_16_reg_796 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        i_17_reg_597 <= add_ln901_reg_2653;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        i_17_reg_597 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln412_1_reg_2702 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_5_reg_609 <= i_13_reg_2697;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        i_5_reg_609 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln870_fu_1072_p2 == 1'd1) & (icmp_ln899_fu_1066_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        i_7_reg_645 <= 3'd0;
    end else if (((icmp_ln907_fu_1206_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_7_reg_645 <= add_ln907_fu_1200_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_33_fu_1217_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        i_8_reg_705 <= 3'd0;
    end else if (((icmp_ln919_fu_1301_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        i_8_reg_705 <= add_ln919_fu_1295_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_33_fu_1217_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        i_9_reg_665 <= 3'd0;
    end else if (((icmp_ln928_fu_1260_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i_9_reg_665 <= add_ln928_fu_1254_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln412_reg_2628 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_561 <= i_4_reg_2623;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_561 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln412_1_reg_2702 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        index_2_reg_621 <= index_3_fu_1192_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        index_2_reg_621 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln412_reg_2628 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        index_reg_573 <= index_1_fu_1048_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        index_reg_573 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        layerSMin_reg_772 <= 64'd9223372036854775807;
    end else if (((ap_enable_reg_pp9_iter2 == 1'b1) & (icmp_ln965_reg_2947_pp9_iter1_reg == 1'd0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        layerSMin_reg_772 <= layerSMin_1_fu_2018_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        layerWithSmallestShift_reg_784 <= 8'd0;
    end else if (((ap_enable_reg_pp9_iter2 == 1'b1) & (icmp_ln965_reg_2947_pp9_iter1_reg == 1'd0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        layerWithSmallestShift_reg_784 <= layerWithSmallestShift_1_fu_2010_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln412_1_reg_2702 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        minVal_2_reg_634 <= minVal_3_fu_1184_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        minVal_2_reg_634 <= 64'd9223372036854775807;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln412_reg_2628 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        minVal_reg_585 <= minVal_1_fu_1040_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        minVal_reg_585 <= 64'd9223372036854775807;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln1072_reg_3130 == 1'd1) & (1'b1 == ap_CS_fsm_state79)) | ((icmp_ln1082_reg_3149 == 1'd1) & (icmp_ln1072_reg_3130 == 1'd0) & (1'b1 == ap_CS_fsm_state101)))) begin
        z_top_min_4_reg_819 <= select_ln1002_reg_3096;
    end else if ((1'b1 == ap_CS_fsm_state121)) begin
        z_top_min_4_reg_819 <= lhs_3_reg_2982;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        GDn_points_load_1_reg_2687 <= GDn_points_q0;
        rhs_2_reg_2692 <= rhs_2_fu_1098_p1;
        tmp_32_cast_reg_2682[9 : 7] <= tmp_32_cast_fu_1094_p1[9 : 7];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        add_ln1082_reg_3153 <= add_ln1082_fu_2496_p2;
        icmp_ln1082_reg_3149 <= icmp_ln1082_fu_2490_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln901_reg_2653 <= add_ln901_fu_1060_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln870_fu_1072_p2 == 1'd1) & (icmp_ln899_fu_1066_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        add_ln906_reg_2667 <= add_ln906_fu_1076_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_33_fu_1217_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        add_ln917_reg_2754 <= add_ln917_fu_1239_p2;
        sext_ln919_reg_2759 <= sext_ln919_fu_1250_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_33_fu_1217_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        add_ln926_reg_2744 <= add_ln926_fu_1224_p2;
        zext_ln928_reg_2749[8 : 0] <= zext_ln928_fu_1235_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        add_ln947_reg_2869 <= add_ln947_fu_1740_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp8_iter0 == 1'b1) & (icmp_ln953_fu_1796_p2 == 1'd0) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        add_ln958_reg_2927 <= add_ln958_fu_1802_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln936_reg_2815_pp5_iter5_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        conv_reg_2842 <= grp_fu_1827_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln947_fu_1746_p2 == 1'd0) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        i_12_cast_reg_2878[2 : 0] <= i_12_cast_fu_1752_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        i_12_cast_reg_2878_pp7_iter1_reg[2 : 0] <= i_12_cast_reg_2878[2 : 0];
        icmp_ln947_reg_2874 <= icmp_ln947_fu_1746_p2;
        icmp_ln947_reg_2874_pp7_iter1_reg <= icmp_ln947_reg_2874;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_13_reg_2697 <= i_13_fu_1102_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_4_reg_2623 <= i_4_fu_960_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln907_fu_1206_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_7_cast_reg_2730[2 : 0] <= i_7_cast_fu_1212_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln919_fu_1301_p2 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        i_8_cast_reg_2800[2 : 0] <= i_8_cast_fu_1307_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln928_fu_1260_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i_9_cast_reg_2773[2 : 0] <= i_9_cast_fu_1266_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        icmp_ln1019_reg_3092 <= icmp_ln1019_fu_2306_p2;
        lhs_6_reg_3086 <= lhs_6_fu_2299_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        icmp_ln1072_reg_3130 <= icmp_ln1072_fu_2431_p2;
        lastPatchIdx_reg_3113 <= lastPatchIdx_fu_2357_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln412_1_reg_2702 <= icmp_ln412_1_fu_1112_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln412_reg_2628 <= icmp_ln412_fu_970_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln899_fu_1066_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        icmp_ln870_reg_2663 <= icmp_ln870_fu_1072_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln907_reg_2726 <= icmp_ln907_fu_1206_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        icmp_ln919_reg_2796 <= icmp_ln919_fu_1301_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln928_reg_2769 <= icmp_ln928_fu_1260_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        icmp_ln936_reg_2815 <= icmp_ln936_fu_1325_p2;
        icmp_ln936_reg_2815_pp5_iter1_reg <= icmp_ln936_reg_2815;
        new_z_i_index_addr_3_reg_2819_pp5_iter1_reg <= new_z_i_index_addr_3_reg_2819;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp5_stage0_11001)) begin
        icmp_ln936_reg_2815_pp5_iter2_reg <= icmp_ln936_reg_2815_pp5_iter1_reg;
        icmp_ln936_reg_2815_pp5_iter3_reg <= icmp_ln936_reg_2815_pp5_iter2_reg;
        icmp_ln936_reg_2815_pp5_iter4_reg <= icmp_ln936_reg_2815_pp5_iter3_reg;
        icmp_ln936_reg_2815_pp5_iter5_reg <= icmp_ln936_reg_2815_pp5_iter4_reg;
        icmp_ln936_reg_2815_pp5_iter6_reg <= icmp_ln936_reg_2815_pp5_iter5_reg;
        new_z_i_index_addr_3_reg_2819_pp5_iter2_reg <= new_z_i_index_addr_3_reg_2819_pp5_iter1_reg;
        new_z_i_index_addr_3_reg_2819_pp5_iter3_reg <= new_z_i_index_addr_3_reg_2819_pp5_iter2_reg;
        new_z_i_index_addr_3_reg_2819_pp5_iter4_reg <= new_z_i_index_addr_3_reg_2819_pp5_iter3_reg;
        new_z_i_index_addr_3_reg_2819_pp5_iter5_reg <= new_z_i_index_addr_3_reg_2819_pp5_iter4_reg;
        new_z_i_index_addr_3_reg_2819_pp5_iter6_reg <= new_z_i_index_addr_3_reg_2819_pp5_iter5_reg;
        sub_reg_2835_pp5_iter6_reg <= sub_reg_2835;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        icmp_ln941_reg_2854 <= icmp_ln941_fu_1555_p2;
        icmp_ln941_reg_2854_pp6_iter1_reg <= icmp_ln941_reg_2854;
        new_z_i_index_addr_4_reg_2858_pp6_iter1_reg <= new_z_i_index_addr_4_reg_2858;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp6_stage0_11001)) begin
        icmp_ln941_reg_2854_pp6_iter2_reg <= icmp_ln941_reg_2854_pp6_iter1_reg;
        new_z_i_index_addr_4_reg_2858_pp6_iter2_reg <= new_z_i_index_addr_4_reg_2858_pp6_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        icmp_ln953_reg_2923 <= icmp_ln953_fu_1796_p2;
        trunc_ln955_reg_2938_pp8_iter1_reg <= trunc_ln955_reg_2938;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp9_stage0_11001) & (1'b1 == ap_CS_fsm_pp9_stage0))) begin
        icmp_ln965_reg_2947 <= icmp_ln965_fu_1848_p2;
        icmp_ln965_reg_2947_pp9_iter1_reg <= icmp_ln965_reg_2947;
        trunc_ln534_reg_2951_pp9_iter1_reg <= trunc_ln534_reg_2951;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        icmp_ln987_1_reg_3004 <= icmp_ln987_1_fu_2095_p2;
        icmp_ln987_reg_2999 <= icmp_ln987_fu_2089_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        icmp_ln992_1_reg_3050 <= icmp_ln992_1_fu_2200_p2;
        icmp_ln992_reg_3045 <= icmp_ln992_fu_2194_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        icmp_ln997_1_reg_3081 <= icmp_ln997_1_fu_2283_p2;
        icmp_ln997_reg_3076 <= icmp_ln997_fu_2277_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        lhs_3_reg_2982 <= lhs_3_fu_2030_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        lhs_4_reg_3025 <= lhs_4_fu_2132_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        lhs_5_reg_3055 <= lhs_5_fu_2216_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln955_reg_2938_pp8_iter11_reg == 2'd1) & (1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter12 == 1'b1))) begin
        new_z_i_atTop_V_3_1_fu_268 <= grp_straightLineProjectorFromLayerIJtoK_fu_643_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln955_reg_2938_pp8_iter11_reg == 2'd2) & (1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter12 == 1'b1))) begin
        new_z_i_atTop_V_3_2_fu_272 <= grp_straightLineProjectorFromLayerIJtoK_fu_643_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln955_reg_2938_pp8_iter11_reg == 2'd3) & (1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter12 == 1'b1))) begin
        new_z_i_atTop_V_3_3_fu_276 <= grp_straightLineProjectorFromLayerIJtoK_fu_643_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln955_reg_2938_pp8_iter11_reg == 2'd0) & (1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter12 == 1'b1))) begin
        new_z_i_atTop_V_3_4_fu_280 <= grp_straightLineProjectorFromLayerIJtoK_fu_643_p_dout0;
        new_z_i_atTop_V_3_fu_264 <= grp_straightLineProjectorFromLayerIJtoK_fu_643_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln936_fu_1325_p2 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        new_z_i_index_addr_3_reg_2819 <= i_10_cast_fu_1331_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln941_fu_1555_p2 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        new_z_i_index_addr_4_reg_2858 <= i_11_cast_fu_1561_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        ppl_assign2_reg_3108 <= grp_makePatch_alignedToLine_fu_830_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln936_reg_2815 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0)))) begin
        reg_940 <= GDn_points_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln941_reg_2854_pp6_iter1_reg == 1'd0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((icmp_ln936_reg_2815_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        reg_945 <= grp_fu_1824_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state73))) begin
        reg_951 <= n_patches_i;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        rhs_reg_2613 <= rhs_fu_956_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        select_ln1002_reg_3096 <= select_ln1002_fu_2339_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        select_ln934_reg_2783 <= select_ln934_fu_1287_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        sext_ln534_1_reg_3134 <= sext_ln534_1_fu_2477_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln936_reg_2815_pp5_iter4_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        sub_reg_2835 <= grp_fu_894_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1072_reg_3130 == 1'd0) & (1'b1 == ap_CS_fsm_state79))) begin
        thirdLastPatchIdx_reg_3144 <= thirdLastPatchIdx_fu_2484_p2;
        zext_ln1075_reg_3139[7 : 0] <= zext_ln1075_fu_2481_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        tmp_10_reg_3009 <= grp_fu_660_p_dout0;
        tmp_50_cast_reg_3014[10 : 1] <= tmp_50_cast_fu_2104_p3[10 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        tmp_33_reg_2740 <= tmp_33_fu_1217_p1[32'd63];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln965_reg_2947 == 1'd0) & (1'b0 == ap_block_pp9_stage0_11001) & (1'b1 == ap_CS_fsm_pp9_stage0))) begin
        tmp_52_reg_2961 <= {{data_V_3_fu_1886_p1[62:52]}};
        tmp_53_reg_2967 <= tmp_53_fu_1900_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln965_fu_1848_p2 == 1'd0) & (1'b0 == ap_block_pp9_stage0_11001) & (1'b1 == ap_CS_fsm_pp9_stage0))) begin
        trunc_ln534_reg_2951 <= trunc_ln534_fu_1854_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln953_fu_1796_p2 == 1'd0) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        trunc_ln955_reg_2938 <= trunc_ln955_fu_1813_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp8_stage0_11001)) begin
        trunc_ln955_reg_2938_pp8_iter10_reg <= trunc_ln955_reg_2938_pp8_iter9_reg;
        trunc_ln955_reg_2938_pp8_iter11_reg <= trunc_ln955_reg_2938_pp8_iter10_reg;
        trunc_ln955_reg_2938_pp8_iter2_reg <= trunc_ln955_reg_2938_pp8_iter1_reg;
        trunc_ln955_reg_2938_pp8_iter3_reg <= trunc_ln955_reg_2938_pp8_iter2_reg;
        trunc_ln955_reg_2938_pp8_iter4_reg <= trunc_ln955_reg_2938_pp8_iter3_reg;
        trunc_ln955_reg_2938_pp8_iter5_reg <= trunc_ln955_reg_2938_pp8_iter4_reg;
        trunc_ln955_reg_2938_pp8_iter6_reg <= trunc_ln955_reg_2938_pp8_iter5_reg;
        trunc_ln955_reg_2938_pp8_iter7_reg <= trunc_ln955_reg_2938_pp8_iter6_reg;
        trunc_ln955_reg_2938_pp8_iter8_reg <= trunc_ln955_reg_2938_pp8_iter7_reg;
        trunc_ln955_reg_2938_pp8_iter9_reg <= trunc_ln955_reg_2938_pp8_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1019_reg_3092 == 1'd1) & (1'b1 == ap_CS_fsm_state74))) begin
        zext_ln1038_reg_3103[7 : 0] <= zext_ln1038_fu_2352_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        zext_ln896_reg_2647[7 : 0] <= zext_ln896_fu_1056_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        zext_ln899_reg_2672[2 : 0] <= zext_ln899_fu_1081_p1[2 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        GDarrayDecoded_address0 = zext_ln999_fu_2241_p1;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        GDarrayDecoded_address0 = zext_ln994_fu_2158_p1;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        GDarrayDecoded_address0 = zext_ln989_fu_2118_p1;
    end else if (((ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        GDarrayDecoded_address0 = zext_ln949_1_fu_1791_p1;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        GDarrayDecoded_address0 = zext_ln215_1_fu_1138_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        GDarrayDecoded_address0 = tmp_7_fu_990_p3;
    end else if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state105))) begin
        GDarrayDecoded_address0 = grp_makePatch_alignedToLine_fu_830_GDarrayDecoded_address0;
    end else begin
        GDarrayDecoded_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state67) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0)))) begin
        GDarrayDecoded_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state105))) begin
        GDarrayDecoded_ce0 = grp_makePatch_alignedToLine_fu_830_GDarrayDecoded_ce0;
    end else begin
        GDarrayDecoded_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state105))) begin
        GDarrayDecoded_ce1 = grp_makePatch_alignedToLine_fu_830_GDarrayDecoded_ce1;
    end else begin
        GDarrayDecoded_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        GDn_points_address0 = i_10_cast_fu_1331_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        GDn_points_address0 = zext_ln899_fu_1081_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        GDn_points_address0 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state105))) begin
        GDn_points_address0 = grp_makePatch_alignedToLine_fu_830_GDn_points_address0;
    end else begin
        GDn_points_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        GDn_points_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state105))) begin
        GDn_points_ce0 = grp_makePatch_alignedToLine_fu_830_GDn_points_ce0;
    end else begin
        GDn_points_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln412_fu_970_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln412_1_fu_1112_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_condition_pp1_flush_enable = 1'b1;
    end else begin
        ap_condition_pp1_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln907_fu_1206_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state22 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state22 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln928_fu_1260_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state25 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state25 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln919_fu_1301_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state28 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state28 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln936_fu_1325_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state30 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state30 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln941_fu_1555_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state39 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state39 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln947_fu_1746_p2 == 1'd1)) begin
        ap_condition_pp7_exit_iter0_state44 = 1'b1;
    end else begin
        ap_condition_pp7_exit_iter0_state44 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln953_fu_1796_p2 == 1'd1)) begin
        ap_condition_pp8_exit_iter0_state48 = 1'b1;
    end else begin
        ap_condition_pp8_exit_iter0_state48 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln965_fu_1848_p2 == 1'd1)) begin
        ap_condition_pp9_exit_iter0_state62 = 1'b1;
    end else begin
        ap_condition_pp9_exit_iter0_state62 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state101) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter7 == 1'b0) & (ap_enable_reg_pp5_iter6 == 1'b0) & (ap_enable_reg_pp5_iter5 == 1'b0) & (ap_enable_reg_pp5_iter4 == 1'b0) & (ap_enable_reg_pp5_iter3 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter2 == 1'b0) & (ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter0 == 1'b0) & (ap_enable_reg_pp8_iter12 == 1'b0) & (ap_enable_reg_pp8_iter11 == 1'b0) & (ap_enable_reg_pp8_iter10 == 1'b0) & (ap_enable_reg_pp8_iter9 == 1'b0) & (ap_enable_reg_pp8_iter8 == 1'b0) & (ap_enable_reg_pp8_iter7 == 1'b0) & (ap_enable_reg_pp8_iter6 == 1'b0) & (ap_enable_reg_pp8_iter5 == 1'b0) & (ap_enable_reg_pp8_iter4 == 1'b0) & (ap_enable_reg_pp8_iter3 == 1'b0) & (ap_enable_reg_pp8_iter2 == 1'b0) & (ap_enable_reg_pp8_iter1 == 1'b0))) begin
        ap_idle_pp8 = 1'b1;
    end else begin
        ap_idle_pp8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp9_iter2 == 1'b0) & (ap_enable_reg_pp9_iter0 == 1'b0) & (ap_enable_reg_pp9_iter1 == 1'b0))) begin
        ap_idle_pp9 = 1'b1;
    end else begin
        ap_idle_pp9 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1082_reg_3149 == 1'd1) & (icmp_ln1072_reg_3130 == 1'd0) & (1'b1 == ap_CS_fsm_state101))) begin
        ap_phi_mux_current_z_top_index_0_phi_fu_811_p6 = select_ln934_reg_2783;
    end else begin
        ap_phi_mux_current_z_top_index_0_phi_fu_811_p6 = current_z_top_index_0_reg_808;
    end
end

always @ (*) begin
    if (((icmp_ln870_reg_2663 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        ap_phi_mux_empty_73_phi_fu_659_p4 = add_ln906_reg_2667;
    end else begin
        ap_phi_mux_empty_73_phi_fu_659_p4 = empty_73_reg_656;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        if ((tmp_33_reg_2740 == 1'd1)) begin
            ap_phi_mux_empty_76_phi_fu_699_p4 = sext_ln919_reg_2759;
        end else if ((tmp_33_reg_2740 == 1'd0)) begin
            ap_phi_mux_empty_76_phi_fu_699_p4 = zext_ln928_reg_2749;
        end else begin
            ap_phi_mux_empty_76_phi_fu_699_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_empty_76_phi_fu_699_p4 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b1) & (icmp_ln947_reg_2874 == 1'd0) & (1'b0 == ap_block_pp7_stage0) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        ap_phi_mux_i_12_phi_fu_742_p4 = add_ln947_reg_2869;
    end else begin
        ap_phi_mux_i_12_phi_fu_742_p4 = i_12_reg_738;
    end
end

always @ (*) begin
    if (((icmp_ln953_reg_2923 == 1'd0) & (1'b0 == ap_block_pp8_stage0) & (1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter1 == 1'b1))) begin
        ap_phi_mux_i_15_phi_fu_754_p4 = add_ln958_reg_2927;
    end else begin
        ap_phi_mux_i_15_phi_fu_754_p4 = i_15_reg_750;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln412_1_reg_2702 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_i_5_phi_fu_613_p4 = i_13_reg_2697;
    end else begin
        ap_phi_mux_i_5_phi_fu_613_p4 = i_5_reg_609;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln412_reg_2628 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_565_p4 = i_4_reg_2623;
    end else begin
        ap_phi_mux_i_phi_fu_565_p4 = i_reg_561;
    end
end

always @ (*) begin
    if (((icmp_ln1082_reg_3149 == 1'd1) & (icmp_ln1072_reg_3130 == 1'd0) & (1'b1 == ap_CS_fsm_state101))) begin
        ap_phi_mux_z_top_min_4_phi_fu_822_p6 = select_ln1002_reg_3096;
    end else begin
        ap_phi_mux_z_top_min_4_phi_fu_822_p6 = z_top_min_4_reg_819;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        ap_return_0 = white_space_height_read;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        ap_return_1 = lastPatchIdx_reg_3113;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        ap_return_2 = ap_phi_mux_current_z_top_index_0_phi_fu_811_p6;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        ap_return_3 = counter_0_reg_676;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        ap_return_4 = counterUpshift_0_reg_686;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        ap_return_5 = z_top_min_read;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        ap_return_6 = sext_ln534_1_reg_3134;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        ap_return_7 = ap_phi_mux_z_top_min_4_phi_fu_822_p6;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        current_z_i_index_address0 = i_8_cast_fu_1307_p1;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        current_z_i_index_address0 = i_9_cast_fu_1266_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        current_z_i_index_address0 = i_7_cast_fu_1212_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        current_z_i_index_address0 = zext_ln899_reg_2672;
    end else begin
        current_z_i_index_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        current_z_i_index_ce0 = 1'b1;
    end else begin
        current_z_i_index_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        current_z_i_index_we0 = 1'b1;
    end else begin
        current_z_i_index_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_delete_patch_fu_882_index = zext_ln1075_reg_3139;
    end else if (((icmp_ln1019_reg_3092 == 1'd1) & (1'b1 == ap_CS_fsm_state75))) begin
        grp_delete_patch_fu_882_index = zext_ln1038_reg_3103;
    end else begin
        grp_delete_patch_fu_882_index = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        grp_fu_899_p0 = zext_ln943_fu_1566_p1;
    end else if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        grp_fu_899_p0 = GDn_points_q0;
    end else begin
        grp_fu_899_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        grp_fu_906_p0 = grp_fu_1824_p_dout0;
    end else if (((ap_enable_reg_pp5_iter6 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_fu_906_p0 = grp_fu_1827_p_dout0;
    end else begin
        grp_fu_906_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        grp_fu_906_p1 = 32'd0;
    end else if (((ap_enable_reg_pp5_iter6 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_fu_906_p1 = sub_reg_2835;
    end else begin
        grp_fu_906_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_fu_913_p0 = bitcast_ln521_2_fu_2258_p1;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        grp_fu_913_p0 = bitcast_ln521_1_fu_2175_p1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        grp_fu_913_p0 = bitcast_ln521_fu_2070_p1;
    end else begin
        grp_fu_913_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        grp_fu_918_p0 = sext_ln277_2_fu_2231_p1;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        grp_fu_918_p0 = sext_ln277_1_fu_2148_p1;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        grp_fu_918_p0 = sext_ln277_fu_2053_p1;
    end else if (((ap_enable_reg_pp9_iter0 == 1'b1) & (1'b0 == ap_block_pp9_stage0) & (1'b1 == ap_CS_fsm_pp9_stage0))) begin
        grp_fu_918_p0 = sext_ln277_3_fu_1881_p1;
    end else begin
        grp_fu_918_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state105)) begin
        grp_makePatch_alignedToLine_fu_830_p_read = ppl_assign2_reg_3108;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_makePatch_alignedToLine_fu_830_p_read = ppl;
    end else begin
        grp_makePatch_alignedToLine_fu_830_p_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state105)) begin
        grp_makePatch_alignedToLine_fu_830_z_top = lhs_3_reg_2982;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_makePatch_alignedToLine_fu_830_z_top = select_ln1002_reg_3096;
    end else begin
        grp_makePatch_alignedToLine_fu_830_z_top = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln953_reg_2923 == 1'd0) & (1'b0 == ap_block_pp8_stage0) & (1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter1 == 1'b1))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_867_j = add_ln958_reg_2927;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_867_j = 3'd5;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_867_j = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln953_reg_2923 == 1'd0) & (1'b0 == ap_block_pp8_stage0) & (1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter1 == 1'b1))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_867_k = 3'd5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_867_k = add_ln901_reg_2653;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_867_k = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln953_reg_2923 == 1'd0) & (1'b0 == ap_block_pp8_stage0) & (1'b1 == ap_CS_fsm_pp8_stage0) & (ap_enable_reg_pp8_iter1 == 1'b1))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_867_z_j = new_z_i_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_867_z_j = z_top_min_read;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_867_z_j = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln1019_reg_3092 == 1'd1) & (1'b1 == ap_CS_fsm_state75) & (grp_delete_patch_fu_882_n_patches_ap_vld == 1'b1)) | ((1'b1 == ap_CS_fsm_state103) & (grp_delete_patch_fu_882_n_patches_ap_vld == 1'b1)))) begin
        n_patches_o = grp_delete_patch_fu_882_n_patches;
    end else if ((((1'b1 == ap_CS_fsm_state77) & (grp_makePatch_alignedToLine_fu_830_n_patches_o_ap_vld == 1'b1)) | ((1'b1 == ap_CS_fsm_state105) & (grp_makePatch_alignedToLine_fu_830_n_patches_o_ap_vld == 1'b1)))) begin
        n_patches_o = grp_makePatch_alignedToLine_fu_830_n_patches_o;
    end else begin
        n_patches_o = n_patches_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state103) | ((icmp_ln1019_reg_3092 == 1'd1) & (1'b1 == ap_CS_fsm_state75)))) begin
        n_patches_o_ap_vld = grp_delete_patch_fu_882_n_patches_ap_vld;
    end else if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state105))) begin
        n_patches_o_ap_vld = grp_makePatch_alignedToLine_fu_830_n_patches_o_ap_vld;
    end else begin
        n_patches_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter0 == 1'b1) & (1'b0 == ap_block_pp8_stage0) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        new_z_i_V_address0 = trunc_ln958_cast_fu_1808_p1;
    end else if (((ap_enable_reg_pp7_iter2 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        new_z_i_V_address0 = i_12_cast_reg_2878_pp7_iter1_reg;
    end else begin
        new_z_i_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp8_iter0 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0)) | ((ap_enable_reg_pp7_iter2 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001)))) begin
        new_z_i_V_ce0 = 1'b1;
    end else begin
        new_z_i_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter2 == 1'b1) & (icmp_ln947_reg_2874_pp7_iter1_reg == 1'd0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        new_z_i_V_we0 = 1'b1;
    end else begin
        new_z_i_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        new_z_i_index_address0 = i_11_cast_fu_1561_p1;
    end else if (((ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        new_z_i_index_address0 = new_z_i_index_addr_3_reg_2819_pp5_iter6_reg;
    end else if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        new_z_i_index_address0 = i_8_cast_reg_2800;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        new_z_i_index_address0 = i_9_cast_reg_2773;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        new_z_i_index_address0 = i_7_cast_reg_2730;
    end else begin
        new_z_i_index_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        new_z_i_index_address1 = i_12_cast_fu_1752_p1;
    end else if (((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        new_z_i_index_address1 = new_z_i_index_addr_4_reg_2858_pp6_iter2_reg;
    end else if (((ap_enable_reg_pp5_iter4 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        new_z_i_index_address1 = new_z_i_index_addr_3_reg_2819_pp5_iter3_reg;
    end else begin
        new_z_i_index_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0)) | ((ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)) | ((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        new_z_i_index_ce0 = 1'b1;
    end else begin
        new_z_i_index_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0)) | ((ap_enable_reg_pp6_iter3 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((ap_enable_reg_pp5_iter4 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        new_z_i_index_ce1 = 1'b1;
    end else begin
        new_z_i_index_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter7 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        new_z_i_index_d0 = val_fu_1540_p3;
    end else if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        new_z_i_index_d0 = add_ln921_fu_1312_p2;
    end else if ((((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        new_z_i_index_d0 = grp_fu_921_p2;
    end else begin
        new_z_i_index_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp5_iter7 == 1'b1) & (icmp_ln936_reg_2815_pp5_iter6_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001)) | ((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln919_reg_2796 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln928_reg_2769 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln907_reg_2726 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        new_z_i_index_we0 = 1'b1;
    end else begin
        new_z_i_index_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter3 == 1'b1) & (icmp_ln941_reg_2854_pp6_iter2_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        new_z_i_index_we1 = 1'b1;
    end else begin
        new_z_i_index_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        patches_parameters_address0 = zext_ln1051_fu_2416_p1;
    end else if (((1'b1 == ap_CS_fsm_state103) | ((icmp_ln1019_reg_3092 == 1'd1) & (1'b1 == ap_CS_fsm_state75)))) begin
        patches_parameters_address0 = grp_delete_patch_fu_882_patches_parameters_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state105))) begin
        patches_parameters_address0 = grp_makePatch_alignedToLine_fu_830_patches_parameters_address0;
    end else begin
        patches_parameters_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        patches_parameters_address1 = zext_ln1050_1_fu_2405_p1;
    end else if (((1'b1 == ap_CS_fsm_state103) | ((icmp_ln1019_reg_3092 == 1'd1) & (1'b1 == ap_CS_fsm_state75)))) begin
        patches_parameters_address1 = grp_delete_patch_fu_882_patches_parameters_V_address1;
    end else begin
        patches_parameters_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        patches_parameters_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state103) | ((icmp_ln1019_reg_3092 == 1'd1) & (1'b1 == ap_CS_fsm_state75)))) begin
        patches_parameters_ce0 = grp_delete_patch_fu_882_patches_parameters_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state105))) begin
        patches_parameters_ce0 = grp_makePatch_alignedToLine_fu_830_patches_parameters_ce0;
    end else begin
        patches_parameters_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        patches_parameters_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state103) | ((icmp_ln1019_reg_3092 == 1'd1) & (1'b1 == ap_CS_fsm_state75)))) begin
        patches_parameters_ce1 = grp_delete_patch_fu_882_patches_parameters_V_ce1;
    end else begin
        patches_parameters_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state103) | ((icmp_ln1019_reg_3092 == 1'd1) & (1'b1 == ap_CS_fsm_state75)))) begin
        patches_parameters_d0 = grp_delete_patch_fu_882_patches_parameters_V_d0;
    end else if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state105))) begin
        patches_parameters_d0 = grp_makePatch_alignedToLine_fu_830_patches_parameters_d0;
    end else begin
        patches_parameters_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state103) | ((icmp_ln1019_reg_3092 == 1'd1) & (1'b1 == ap_CS_fsm_state75)))) begin
        patches_parameters_we0 = grp_delete_patch_fu_882_patches_parameters_V_we0;
    end else if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state105))) begin
        patches_parameters_we0 = grp_makePatch_alignedToLine_fu_830_patches_parameters_we0;
    end else begin
        patches_parameters_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state103) | ((icmp_ln1019_reg_3092 == 1'd1) & (1'b1 == ap_CS_fsm_state75)))) begin
        patches_superpoints_address0 = grp_delete_patch_fu_882_patches_superpoints_address0;
    end else if ((((icmp_ln1082_reg_3149 == 1'd1) & (1'b1 == ap_CS_fsm_state99)) | ((icmp_ln1082_reg_3149 == 1'd1) & (1'b1 == ap_CS_fsm_state98)) | ((icmp_ln1082_reg_3149 == 1'd1) & (1'b1 == ap_CS_fsm_state82)) | ((icmp_ln1082_reg_3149 == 1'd1) & (1'b1 == ap_CS_fsm_state81)))) begin
        patches_superpoints_address0 = grp_areWedgeSuperPointsEqual_fu_855_wsp1_2_address0;
    end else if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state105))) begin
        patches_superpoints_address0 = grp_makePatch_alignedToLine_fu_830_patches_superpoints_address0;
    end else begin
        patches_superpoints_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state103) | ((icmp_ln1019_reg_3092 == 1'd1) & (1'b1 == ap_CS_fsm_state75)))) begin
        patches_superpoints_address1 = grp_delete_patch_fu_882_patches_superpoints_address1;
    end else if ((((icmp_ln1082_reg_3149 == 1'd1) & (1'b1 == ap_CS_fsm_state99)) | ((icmp_ln1082_reg_3149 == 1'd1) & (1'b1 == ap_CS_fsm_state98)) | ((icmp_ln1082_reg_3149 == 1'd1) & (1'b1 == ap_CS_fsm_state82)) | ((icmp_ln1082_reg_3149 == 1'd1) & (1'b1 == ap_CS_fsm_state81)))) begin
        patches_superpoints_address1 = grp_areWedgeSuperPointsEqual_fu_855_wsp1_2_address1;
    end else begin
        patches_superpoints_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state103) | ((icmp_ln1019_reg_3092 == 1'd1) & (1'b1 == ap_CS_fsm_state75)))) begin
        patches_superpoints_ce0 = grp_delete_patch_fu_882_patches_superpoints_ce0;
    end else if ((((icmp_ln1082_reg_3149 == 1'd1) & (1'b1 == ap_CS_fsm_state99)) | ((icmp_ln1082_reg_3149 == 1'd1) & (1'b1 == ap_CS_fsm_state98)) | ((icmp_ln1082_reg_3149 == 1'd1) & (1'b1 == ap_CS_fsm_state82)) | ((icmp_ln1082_reg_3149 == 1'd1) & (1'b1 == ap_CS_fsm_state81)))) begin
        patches_superpoints_ce0 = grp_areWedgeSuperPointsEqual_fu_855_wsp1_2_ce0;
    end else if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state105))) begin
        patches_superpoints_ce0 = grp_makePatch_alignedToLine_fu_830_patches_superpoints_ce0;
    end else begin
        patches_superpoints_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state103) | ((icmp_ln1019_reg_3092 == 1'd1) & (1'b1 == ap_CS_fsm_state75)))) begin
        patches_superpoints_ce1 = grp_delete_patch_fu_882_patches_superpoints_ce1;
    end else if ((((icmp_ln1082_reg_3149 == 1'd1) & (1'b1 == ap_CS_fsm_state99)) | ((icmp_ln1082_reg_3149 == 1'd1) & (1'b1 == ap_CS_fsm_state98)) | ((icmp_ln1082_reg_3149 == 1'd1) & (1'b1 == ap_CS_fsm_state82)) | ((icmp_ln1082_reg_3149 == 1'd1) & (1'b1 == ap_CS_fsm_state81)))) begin
        patches_superpoints_ce1 = grp_areWedgeSuperPointsEqual_fu_855_wsp1_2_ce1;
    end else begin
        patches_superpoints_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state103) | ((icmp_ln1019_reg_3092 == 1'd1) & (1'b1 == ap_CS_fsm_state75)))) begin
        patches_superpoints_d0 = grp_delete_patch_fu_882_patches_superpoints_d0;
    end else if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state105))) begin
        patches_superpoints_d0 = grp_makePatch_alignedToLine_fu_830_patches_superpoints_d0;
    end else begin
        patches_superpoints_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state103) | ((icmp_ln1019_reg_3092 == 1'd1) & (1'b1 == ap_CS_fsm_state75)))) begin
        patches_superpoints_we0 = grp_delete_patch_fu_882_patches_superpoints_we0;
    end else if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state105))) begin
        patches_superpoints_we0 = grp_makePatch_alignedToLine_fu_830_patches_superpoints_we0;
    end else begin
        patches_superpoints_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state105))) begin
        temp_V_ce0 = grp_makePatch_alignedToLine_fu_830_temp_V_ce0;
    end else begin
        temp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state105))) begin
        temp_V_ce1 = grp_makePatch_alignedToLine_fu_830_temp_V_ce1;
    end else begin
        temp_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state105))) begin
        temp_V_we0 = grp_makePatch_alignedToLine_fu_830_temp_V_we0;
    end else begin
        temp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state105))) begin
        temp_V_we1 = grp_makePatch_alignedToLine_fu_830_temp_V_we1;
    end else begin
        temp_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln412_fu_970_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln412_fu_970_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln870_fu_1072_p2 == 1'd1) & (icmp_ln899_fu_1066_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((icmp_ln870_fu_1072_p2 == 1'd0) & (icmp_ln899_fu_1066_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((ap_enable_reg_pp1_iter1 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((icmp_ln907_fu_1206_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((icmp_ln907_fu_1206_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((tmp_33_fu_1217_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((icmp_ln928_fu_1260_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((icmp_ln928_fu_1260_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if (~((icmp_ln919_fu_1301_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((icmp_ln919_fu_1301_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((icmp_ln936_fu_1325_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0)) & ~((ap_enable_reg_pp5_iter7 == 1'b1) & (ap_enable_reg_pp5_iter6 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((icmp_ln936_fu_1325_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0)) | ((ap_enable_reg_pp5_iter7 == 1'b1) & (ap_enable_reg_pp5_iter6 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_pp6_stage0;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((ap_enable_reg_pp6_iter1 == 1'b0) & (icmp_ln941_fu_1555_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)) & ~((ap_enable_reg_pp6_iter3 == 1'b1) & (ap_enable_reg_pp6_iter2 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((ap_enable_reg_pp6_iter1 == 1'b0) & (icmp_ln941_fu_1555_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)) | ((ap_enable_reg_pp6_iter3 == 1'b1) & (ap_enable_reg_pp6_iter2 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_pp7_stage0;
        end
        ap_ST_fsm_pp7_stage0 : begin
            if ((~((ap_enable_reg_pp7_iter1 == 1'b0) & (icmp_ln947_fu_1746_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone)) & ~((ap_enable_reg_pp7_iter2 == 1'b1) & (ap_enable_reg_pp7_iter1 == 1'b0) & (1'b0 == ap_block_pp7_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if ((((ap_enable_reg_pp7_iter1 == 1'b0) & (icmp_ln947_fu_1746_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone)) | ((ap_enable_reg_pp7_iter2 == 1'b1) & (ap_enable_reg_pp7_iter1 == 1'b0) & (1'b0 == ap_block_pp7_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_pp8_stage0;
        end
        ap_ST_fsm_pp8_stage0 : begin
            if ((~((ap_enable_reg_pp8_iter0 == 1'b1) & (icmp_ln953_fu_1796_p2 == 1'd1) & (1'b0 == ap_block_pp8_stage0_subdone) & (ap_enable_reg_pp8_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp8_stage0_subdone) & (ap_enable_reg_pp8_iter12 == 1'b1) & (ap_enable_reg_pp8_iter11 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end else if ((((ap_enable_reg_pp8_iter0 == 1'b1) & (icmp_ln953_fu_1796_p2 == 1'd1) & (1'b0 == ap_block_pp8_stage0_subdone) & (ap_enable_reg_pp8_iter1 == 1'b0)) | ((1'b0 == ap_block_pp8_stage0_subdone) & (ap_enable_reg_pp8_iter12 == 1'b1) & (ap_enable_reg_pp8_iter11 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_pp9_stage0;
        end
        ap_ST_fsm_pp9_stage0 : begin
            if ((~((icmp_ln965_fu_1848_p2 == 1'd1) & (ap_enable_reg_pp9_iter0 == 1'b1) & (1'b0 == ap_block_pp9_stage0_subdone) & (ap_enable_reg_pp9_iter1 == 1'b0)) & ~((ap_enable_reg_pp9_iter2 == 1'b1) & (1'b0 == ap_block_pp9_stage0_subdone) & (ap_enable_reg_pp9_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp9_stage0;
            end else if ((((ap_enable_reg_pp9_iter2 == 1'b1) & (1'b0 == ap_block_pp9_stage0_subdone) & (ap_enable_reg_pp9_iter1 == 1'b0)) | ((icmp_ln965_fu_1848_p2 == 1'd1) & (ap_enable_reg_pp9_iter0 == 1'b1) & (1'b0 == ap_block_pp9_stage0_subdone) & (ap_enable_reg_pp9_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp9_stage0;
            end
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            if (((1'b0 == ap_block_state75_on_subcall_done) & (1'b1 == ap_CS_fsm_state75))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            if (((1'b1 == ap_CS_fsm_state77) & (grp_makePatch_alignedToLine_fu_830_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            if (((icmp_ln1072_reg_3130 == 1'd0) & (1'b1 == ap_CS_fsm_state79))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state101;
            end
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            if (((icmp_ln1082_reg_3149 == 1'd1) & (1'b1 == ap_CS_fsm_state100) & (grp_areWedgeSuperPointsEqual_fu_855_ap_return == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else if (((icmp_ln1082_reg_3149 == 1'd0) & (1'b1 == ap_CS_fsm_state100))) begin
                ap_NS_fsm = ap_ST_fsm_state102;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state101;
            end
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            if (((1'b1 == ap_CS_fsm_state103) & (grp_delete_patch_fu_882_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state104;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            if (((1'b1 == ap_CS_fsm_state105) & (grp_makePatch_alignedToLine_fu_830_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state106;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state105;
            end
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign GDarrayDecoded_address1 = grp_makePatch_alignedToLine_fu_830_GDarrayDecoded_address1;

assign add_ln1018_fu_2346_p2 = ($signed(reg_951) + $signed(8'd255));

assign add_ln1050_fu_2393_p2 = (sub_ln1050_fu_2387_p2 + 12'd48);

assign add_ln1051_fu_2410_p2 = (sub_ln1050_fu_2387_p2 + 12'd55);

assign add_ln1082_fu_2496_p2 = (i_16_reg_796 + 3'd1);

assign add_ln1102_fu_2546_p2 = ($signed(select_ln934_reg_2783) + $signed(32'd4294967295));

assign add_ln215_fu_1121_p2 = (tmp_32_cast_reg_2682 + zext_ln215_fu_1117_p1);

assign add_ln341_2_fu_1657_p2 = ($signed(zext_ln341_2_fu_1653_p1) + $signed(9'd385));

assign add_ln341_fu_1466_p2 = ($signed(zext_ln341_fu_1462_p1) + $signed(9'd385));

assign add_ln510_fu_1920_p2 = ($signed(zext_ln510_fu_1917_p1) + $signed(12'd3073));

assign add_ln901_fu_1060_p2 = (i_17_reg_597 + 3'd1);

assign add_ln906_fu_1076_p2 = (zext_ln896_reg_2647 + 9'd1);

assign add_ln907_fu_1200_p2 = (i_7_reg_645 + 3'd1);

assign add_ln917_fu_1239_p2 = (p_read12 + 32'd1);

assign add_ln918_fu_1244_p2 = ($signed(ap_phi_mux_empty_73_phi_fu_659_p4) + $signed(9'd511));

assign add_ln919_fu_1295_p2 = (i_8_reg_705 + 3'd1);

assign add_ln921_fu_1312_p2 = ($signed(current_z_i_index_q0) + $signed(8'd255));

assign add_ln926_fu_1224_p2 = (p_read13 + 32'd1);

assign add_ln927_fu_1229_p2 = (ap_phi_mux_empty_73_phi_fu_659_p4 + 9'd1);

assign add_ln928_fu_1254_p2 = (i_9_reg_665 + 3'd1);

assign add_ln934_fu_1275_p2 = ($signed(reg_940) + $signed(32'd4294967295));

assign add_ln936_fu_1319_p2 = (i_10_reg_716 + 3'd1);

assign add_ln941_fu_1549_p2 = (i_11_reg_727 + 3'd1);

assign add_ln947_fu_1740_p2 = (ap_phi_mux_i_12_phi_fu_742_p4 + 3'd1);

assign add_ln949_fu_1773_p2 = (zext_ln947_fu_1765_p1 + zext_ln949_fu_1769_p1);

assign add_ln958_fu_1802_p2 = (ap_phi_mux_i_15_phi_fu_754_p4 + 3'd1);

assign add_ln965_fu_1842_p2 = (i_14_reg_761 + 3'd1);

assign add_ln989_fu_2112_p2 = ($signed(tmp_50_cast_fu_2104_p3) + $signed(11'd1025));

assign add_ln994_fu_2153_p2 = (tmp_50_cast_reg_3014 + 11'd769);

assign add_ln999_fu_2236_p2 = (tmp_50_cast_reg_3014 + 11'd513);

assign and_ln938_1_fu_1418_p2 = (grp_fu_906_p2 & and_ln938_fu_1412_p2);

assign and_ln938_fu_1412_p2 = (or_ln938_fu_1388_p2 & or_ln938_1_fu_1406_p2);

assign and_ln943_fu_1607_p2 = (or_ln943_fu_1601_p2 & grp_fu_906_p2);

assign and_ln987_fu_2127_p2 = (tmp_10_reg_3009 & or_ln987_fu_2123_p2);

assign and_ln992_fu_2210_p2 = (or_ln992_fu_2206_p2 & grp_fu_660_p_dout0);

assign and_ln997_fu_2293_p2 = (or_ln997_fu_2289_p2 & grp_fu_660_p_dout0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp8_stage0 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp9_stage0 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state121 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd67];

assign ap_NS_fsm_state7 = ap_NS_fsm[32'd5];

assign ap_NS_fsm_state81 = ap_NS_fsm[32'd49];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp9_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp9_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp9_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp5_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp5_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp5_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp5_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp5_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp6_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp7_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp7_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp7_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp8_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp8_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp8_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp8_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp8_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp8_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp8_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp8_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp8_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp8_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp8_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp8_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp8_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp9_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp9_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp9_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state75_on_subcall_done = ((icmp_ln1019_reg_3092 == 1'd1) & (grp_delete_patch_fu_882_ap_done == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

assign ap_enable_pp8 = (ap_idle_pp8 ^ 1'b1);

assign ap_enable_pp9 = (ap_idle_pp9 ^ 1'b1);

assign bitcast_ln521_1_fu_2175_p1 = zext_ln368_1_fu_2171_p1;

assign bitcast_ln521_2_fu_2258_p1 = zext_ln368_2_fu_2254_p1;

assign bitcast_ln521_fu_2070_p1 = zext_ln368_fu_2066_p1;

assign bitcast_ln938_1_fu_1359_p1 = sub_reg_2835_pp5_iter6_reg;

assign bitcast_ln938_fu_1342_p1 = conv_reg_2842;

assign bitcast_ln943_fu_1571_p1 = reg_945;

assign data_V_2_fu_1617_p3 = ((and_ln943_fu_1607_p2[0:0] == 1'b1) ? 31'd0 : trunc_ln312_fu_1613_p1);

assign data_V_3_fu_1886_p1 = grp_fu_1830_p_dout0;

assign data_V_4_fu_2058_p1 = grp_fu_1830_p_dout0;

assign data_V_5_fu_2163_p1 = grp_fu_1830_p_dout0;

assign data_V_6_fu_2246_p1 = grp_fu_1830_p_dout0;

assign data_V_fu_1430_p1 = dc_fu_1424_p3;

assign dc_fu_1424_p3 = ((and_ln938_1_fu_1418_p2[0:0] == 1'b1) ? conv_reg_2842 : sub_reg_2835_pp5_iter6_reg);

assign diff_1_fu_1166_p3 = ((tmp_32_fu_1158_p3[0:0] == 1'b1) ? sub_ln180_1_fu_1152_p2 : ret_3_fu_1147_p2);

assign diff_fu_1022_p3 = ((tmp_31_fu_1014_p3[0:0] == 1'b1) ? sub_ln180_fu_1008_p2 : ret_fu_1003_p2);

assign grp_areWedgeSuperPointsEqual_fu_855_ap_start = grp_areWedgeSuperPointsEqual_fu_855_ap_start_reg;

assign grp_delete_patch_fu_882_ap_start = grp_delete_patch_fu_882_ap_start_reg;

assign grp_fu_1824_p_ce = 1'b1;

assign grp_fu_1824_p_din0 = grp_fu_899_p0;

assign grp_fu_1827_p_ce = 1'b1;

assign grp_fu_1827_p_din0 = zext_ln938_fu_1337_p1;

assign grp_fu_1830_p_ce = 1'b1;

assign grp_fu_1830_p_din0 = grp_fu_918_p0;

assign grp_fu_660_p_ce = 1'b1;

assign grp_fu_660_p_din0 = grp_fu_913_p0;

assign grp_fu_660_p_din1 = 64'd4607182418800017408;

assign grp_fu_660_p_opcode = 5'd4;

assign grp_fu_899_ce = 1'b1;

assign grp_fu_899_p1 = grp_fu_1824_p_dout0;

assign grp_fu_903_ce = 1'b1;

assign grp_fu_903_p0 = zext_ln938_fu_1337_p1;

assign grp_fu_903_p1 = grp_fu_1827_p_dout0;

assign grp_fu_913_ce = 1'b1;

assign grp_fu_913_opcode = 5'd4;

assign grp_fu_913_p1 = 64'd4607182418800017408;

assign grp_fu_913_p2 = grp_fu_660_p_dout0;

assign grp_fu_918_ce = 1'b1;

assign grp_fu_918_p1 = grp_fu_1830_p_dout0;

assign grp_fu_921_p2 = (current_z_i_index_q0 + 8'd1);

assign grp_makePatch_alignedToLine_fu_830_ap_start = grp_makePatch_alignedToLine_fu_830_ap_start_reg;

assign grp_straightLineProjectorFromLayerIJtoK_fu_643_p_ce = 1'b1;

assign grp_straightLineProjectorFromLayerIJtoK_fu_643_p_din1 = complementary_apexZ0;

assign grp_straightLineProjectorFromLayerIJtoK_fu_643_p_din2 = grp_straightLineProjectorFromLayerIJtoK_fu_867_z_j;

assign grp_straightLineProjectorFromLayerIJtoK_fu_643_p_din3 = 3'd1;

assign grp_straightLineProjectorFromLayerIJtoK_fu_643_p_din4 = grp_straightLineProjectorFromLayerIJtoK_fu_867_j;

assign grp_straightLineProjectorFromLayerIJtoK_fu_643_p_din5 = grp_straightLineProjectorFromLayerIJtoK_fu_867_k;

assign grp_straightLineProjectorFromLayerIJtoK_fu_643_p_start = grp_straightLineProjectorFromLayerIJtoK_fu_867_ap_start_reg;

assign grp_straightLineProjectorFromLayerIJtoK_fu_867_ap_ce = 1'b1;

assign grp_straightLineProjectorFromLayerIJtoK_fu_867_ap_done = grp_straightLineProjectorFromLayerIJtoK_fu_643_p_done;

assign grp_straightLineProjectorFromLayerIJtoK_fu_867_ap_idle = grp_straightLineProjectorFromLayerIJtoK_fu_643_p_idle;

assign grp_straightLineProjectorFromLayerIJtoK_fu_867_ap_ready = grp_straightLineProjectorFromLayerIJtoK_fu_643_p_ready;

assign grp_straightLineProjectorFromLayerIJtoK_fu_867_ap_return = grp_straightLineProjectorFromLayerIJtoK_fu_643_p_dout0;

assign grp_straightLineProjectorFromLayerIJtoK_fu_867_ap_start = grp_straightLineProjectorFromLayerIJtoK_fu_867_ap_start_reg;

assign grp_straightLineProjectorFromLayerIJtoK_fu_867_i = 3'd1;

assign grp_straightLineProjectorFromLayerIJtoK_fu_867_z_i = complementary_apexZ0;

assign i_10_cast_fu_1331_p1 = i_10_reg_716;

assign i_11_cast_fu_1561_p1 = i_11_reg_727;

assign i_12_cast_fu_1752_p1 = ap_phi_mux_i_12_phi_fu_742_p4;

assign i_13_fu_1102_p2 = (ap_phi_mux_i_5_phi_fu_613_p4 + 8'd1);

assign i_4_fu_960_p2 = (ap_phi_mux_i_phi_fu_565_p4 + 8'd1);

assign i_7_cast_fu_1212_p1 = i_7_reg_645;

assign i_8_cast_fu_1307_p1 = i_8_reg_705;

assign i_9_cast_fu_1266_p1 = i_9_reg_665;

assign icmp_ln1019_fu_2306_p2 = ((n_patches_i > nPatchesAtOriginal) ? 1'b1 : 1'b0);

assign icmp_ln1072_fu_2431_p2 = ((tmp_47_fu_2421_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln1082_fu_2490_p2 = ((i_16_reg_796 < 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln412_1_fu_1112_p2 = (($signed(zext_ln412_1_fu_1108_p1) < $signed(GDn_points_load_1_reg_2687)) ? 1'b1 : 1'b0);

assign icmp_ln412_fu_970_p2 = (($signed(zext_ln412_fu_966_p1) < $signed(reg_940)) ? 1'b1 : 1'b0);

assign icmp_ln415_1_fu_1178_p2 = (($signed(sext_ln414_1_fu_1174_p1) < $signed(minVal_2_reg_634)) ? 1'b1 : 1'b0);

assign icmp_ln415_fu_1034_p2 = (($signed(sext_ln414_fu_1030_p1) < $signed(minVal_reg_585)) ? 1'b1 : 1'b0);

assign icmp_ln870_fu_1072_p0 = z_top_min_read;

assign icmp_ln870_fu_1072_p2 = ((icmp_ln870_fu_1072_p0 == previous_z_top_min_read) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_2463_p2 = (($signed(ret_17_fu_2444_p2) < $signed(ret_18_fu_2457_p2)) ? 1'b1 : 1'b0);

assign icmp_ln899_fu_1066_p2 = ((i_17_reg_597 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln907_fu_1206_p2 = ((i_7_reg_645 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln919_fu_1301_p2 = ((i_8_reg_705 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln928_fu_1260_p2 = ((i_9_reg_665 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln934_fu_1281_p2 = (($signed(sext_ln934_fu_1271_p1) < $signed(add_ln934_fu_1275_p2)) ? 1'b1 : 1'b0);

assign icmp_ln936_fu_1325_p2 = ((i_10_reg_716 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln938_1_fu_1382_p2 = ((trunc_ln938_fu_1355_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln938_2_fu_1394_p2 = ((tmp_1_fu_1362_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln938_3_fu_1400_p2 = ((trunc_ln938_1_fu_1372_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln938_fu_1376_p2 = ((tmp_s_fu_1345_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln941_fu_1555_p2 = ((i_11_reg_727 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln943_1_fu_1595_p2 = ((trunc_ln943_fu_1585_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln943_fu_1589_p2 = ((tmp_fu_1575_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln947_fu_1746_p2 = ((ap_phi_mux_i_12_phi_fu_742_p4 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln953_fu_1796_p2 = ((ap_phi_mux_i_15_phi_fu_754_p4 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln965_fu_1848_p2 = ((i_14_reg_761 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln967_fu_2001_p2 = (($signed(val_3_fu_1993_p3) < $signed(layerSMin_reg_772)) ? 1'b1 : 1'b0);

assign icmp_ln987_1_fu_2095_p2 = ((trunc_ln987_fu_2085_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln987_fu_2089_p2 = ((tmp_8_fu_2075_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln992_1_fu_2200_p2 = ((trunc_ln992_fu_2190_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln992_fu_2194_p2 = ((tmp_11_fu_2180_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln997_1_fu_2283_p2 = ((trunc_ln997_fu_2273_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln997_fu_2277_p2 = ((tmp_14_fu_2263_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign index_1_fu_1048_p3 = ((icmp_ln415_fu_1034_p2[0:0] == 1'b1) ? i_reg_561 : index_reg_573);

assign index_3_fu_1192_p3 = ((icmp_ln415_1_fu_1178_p2[0:0] == 1'b1) ? i_5_reg_609 : index_2_reg_621);

assign isNeg_2_fu_1663_p3 = add_ln341_2_fu_1657_p2[32'd8];

assign isNeg_3_fu_1926_p3 = add_ln510_fu_1920_p2[32'd11];

assign isNeg_fu_1472_p3 = add_ln341_fu_1466_p2[32'd8];

assign lastPatchIdx_fu_2357_p2 = ($signed(n_patches_i) + $signed(8'd255));

assign layerSMin_1_fu_2018_p3 = ((icmp_ln967_fu_2001_p2[0:0] == 1'b1) ? val_3_fu_1993_p3 : layerSMin_reg_772);

assign layerWithSmallestShift_1_fu_2010_p3 = ((icmp_ln967_fu_2001_p2[0:0] == 1'b1) ? zext_ln967_fu_2007_p1 : layerWithSmallestShift_reg_784);

assign lhs_3_fu_2030_p5 = layerWithSmallestShift_reg_784[1:0];

assign lhs_4_fu_2132_p3 = ((and_ln987_fu_2127_p2[0:0] == 1'b1) ? GDarrayDecoded_q0 : lhs_3_reg_2982);

assign lhs_5_fu_2216_p3 = ((and_ln992_fu_2210_p2[0:0] == 1'b1) ? GDarrayDecoded_q0 : lhs_4_reg_3025);

assign lhs_6_fu_2299_p3 = ((and_ln997_fu_2293_p2[0:0] == 1'b1) ? GDarrayDecoded_q0 : lhs_5_reg_3055);

assign mantissa_2_fu_1639_p4 = {{{{1'd1}, {tmp_51_fu_1635_p1}}}, {1'd0}};

assign mantissa_3_fu_1904_p4 = {{{{1'd1}, {tmp_53_reg_2967}}}, {1'd0}};

assign mantissa_fu_1448_p4 = {{{{1'd1}, {tmp_49_fu_1444_p1}}}, {1'd0}};

assign minVal_1_fu_1040_p3 = ((icmp_ln415_fu_1034_p2[0:0] == 1'b1) ? sext_ln414_fu_1030_p1 : minVal_reg_585);

assign minVal_3_fu_1184_p3 = ((icmp_ln415_1_fu_1178_p2[0:0] == 1'b1) ? sext_ln414_1_fu_1174_p1 : minVal_2_reg_634);

assign new_z_i_index_d1 = ((isNeg_2_fu_1663_p3[0:0] == 1'b1) ? zext_ln662_1_fu_1717_p1 : tmp_19_fu_1721_p4);

assign or_ln1050_fu_2399_p2 = (12'd1 | add_ln1050_fu_2393_p2);

assign or_ln215_1_fu_1132_p2 = (shl_ln215_fu_1126_p2 | 11'd1);

assign or_ln215_fu_984_p2 = (tmp_6_fu_976_p3 | 9'd1);

assign or_ln938_1_fu_1406_p2 = (icmp_ln938_3_fu_1400_p2 | icmp_ln938_2_fu_1394_p2);

assign or_ln938_fu_1388_p2 = (icmp_ln938_fu_1376_p2 | icmp_ln938_1_fu_1382_p2);

assign or_ln943_fu_1601_p2 = (icmp_ln943_fu_1589_p2 | icmp_ln943_1_fu_1595_p2);

assign or_ln949_fu_1785_p2 = (shl_ln949_fu_1779_p2 | 11'd1);

assign or_ln987_fu_2123_p2 = (icmp_ln987_reg_2999 | icmp_ln987_1_reg_3004);

assign or_ln992_fu_2206_p2 = (icmp_ln992_reg_3045 | icmp_ln992_1_reg_3050);

assign or_ln997_fu_2289_p2 = (icmp_ln997_reg_3076 | icmp_ln997_1_reg_3081);

assign p_Result_2_fu_2167_p1 = data_V_5_fu_2163_p1[62:0];

assign p_Result_3_fu_2250_p1 = data_V_6_fu_2246_p1[62:0];

assign p_Result_s_fu_2062_p1 = data_V_4_fu_2058_p1[62:0];

assign r_V_4_fu_1512_p2 = zext_ln68_fu_1458_p1 << sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_1502_p1;

assign r_V_5_fu_1697_p2 = zext_ln68_1_fu_1649_p1 >> sh_prom_i_i_i_i_i75_cast_cast_cast_cast_fu_1693_p1;

assign r_V_6_fu_1703_p2 = zext_ln68_1_fu_1649_p1 << sh_prom_i_i_i_i_i75_cast_cast_cast_cast_fu_1693_p1;

assign r_V_7_fu_1959_p2 = zext_ln15_fu_1913_p1 >> sh_prom_i_i_i_i_i102_cast_cast_cast_cast_fu_1955_p1;

assign r_V_8_fu_1965_p2 = zext_ln15_fu_1913_p1 << sh_prom_i_i_i_i_i102_cast_cast_cast_cast_fu_1955_p1;

assign r_V_fu_1506_p2 = zext_ln68_fu_1458_p1 >> sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_1502_p1;

assign ret_10_fu_2143_p2 = ($signed(sext_ln215_6_fu_2139_p1) - $signed(rhs_reg_2613));

assign ret_12_fu_2226_p2 = ($signed(sext_ln215_7_fu_2223_p1) - $signed(rhs_reg_2613));

assign ret_14_fu_2317_p2 = ($signed(sext_ln215_8_fu_2314_p1) - $signed(rhs_reg_2613));

assign ret_17_fu_2444_p2 = ($signed(sext_ln215_9_fu_2437_p1) - $signed(sext_ln215_10_fu_2440_p1));

assign ret_18_fu_2457_p2 = ($signed(sext_ln215_11_fu_2450_p1) - $signed(sext_ln215_12_fu_2453_p1));

assign ret_3_fu_1147_p2 = ($signed(sext_ln215_4_fu_1143_p1) - $signed(rhs_2_reg_2692));

assign ret_8_fu_2048_p2 = ($signed(sext_ln215_5_fu_2044_p1) - $signed(rhs_reg_2613));

assign ret_fu_1003_p2 = ($signed(sext_ln215_fu_999_p1) - $signed(rhs_reg_2613));

assign rhs_2_fu_1098_p1 = $signed(grp_straightLineProjectorFromLayerIJtoK_fu_643_p_dout0);

assign rhs_fu_956_p0 = z_top_min_read;

assign rhs_fu_956_p1 = rhs_fu_956_p0;

assign select_ln1002_fu_2339_p3 = ((tmp_42_fu_2331_p3[0:0] == 1'b1) ? new_z_i_atTop_V_3_fu_264 : lhs_6_reg_3086);

assign select_ln1056_fu_2469_p3 = ((icmp_ln878_fu_2463_p2[0:0] == 1'b1) ? ret_18_fu_2457_p2 : ret_17_fu_2444_p2);

assign select_ln934_fu_1287_p3 = ((icmp_ln934_fu_1281_p2[0:0] == 1'b1) ? sext_ln934_fu_1271_p1 : add_ln934_fu_1275_p2);

assign sext_ln1311_2_fu_1677_p1 = $signed(sub_ln1311_2_fu_1671_p2);

assign sext_ln1311_3_fu_1939_p1 = $signed(sub_ln1311_3_fu_1934_p2);

assign sext_ln1311_fu_1486_p1 = $signed(sub_ln1311_fu_1480_p2);

assign sext_ln215_10_fu_2440_p1 = $signed(patches_parameters_q1);

assign sext_ln215_11_fu_2450_p1 = $signed(original_d);

assign sext_ln215_12_fu_2453_p1 = $signed(patches_parameters_q0);

assign sext_ln215_4_fu_1143_p1 = $signed(GDarrayDecoded_q0);

assign sext_ln215_5_fu_2044_p1 = lhs_3_fu_2030_p6;

assign sext_ln215_6_fu_2139_p1 = lhs_4_fu_2132_p3;

assign sext_ln215_7_fu_2223_p1 = lhs_5_reg_3055;

assign sext_ln215_8_fu_2314_p1 = lhs_6_reg_3086;

assign sext_ln215_9_fu_2437_p1 = $signed(original_c);

assign sext_ln215_fu_999_p1 = $signed(GDarrayDecoded_q0);

assign sext_ln277_1_fu_2148_p1 = $signed(ret_10_fu_2143_p2);

assign sext_ln277_2_fu_2231_p1 = $signed(ret_12_fu_2226_p2);

assign sext_ln277_3_fu_1881_p1 = $signed(sub_ln967_fu_1876_p2);

assign sext_ln277_fu_2053_p1 = $signed(ret_8_fu_2048_p2);

assign sext_ln414_1_fu_1174_p1 = $signed(diff_1_fu_1166_p3);

assign sext_ln414_fu_1030_p1 = $signed(diff_fu_1022_p3);

assign sext_ln534_1_fu_2477_p1 = $signed(select_ln1056_fu_2469_p3);

assign sext_ln919_fu_1250_p1 = $signed(add_ln918_fu_1244_p2);

assign sext_ln934_fu_1271_p1 = $signed(ap_phi_mux_empty_76_phi_fu_699_p4);

assign sext_ln967_fu_1872_p1 = $signed(tmp_17_fu_1858_p6);

assign sh_prom_i_i_i_i_i102_cast_cast_cast_cast_fu_1955_p1 = $unsigned(sh_prom_i_i_i_i_i102_cast_cast_cast_fu_1951_p1);

assign sh_prom_i_i_i_i_i102_cast_cast_cast_fu_1951_p1 = $signed(ush_3_fu_1943_p3);

assign sh_prom_i_i_i_i_i75_cast_cast_cast_cast_fu_1693_p1 = $unsigned(sh_prom_i_i_i_i_i75_cast_cast_cast_fu_1689_p1);

assign sh_prom_i_i_i_i_i75_cast_cast_cast_fu_1689_p1 = $signed(ush_2_fu_1681_p3);

assign sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_1502_p1 = $unsigned(sh_prom_i_i_i_i_i_cast_cast_cast_fu_1498_p1);

assign sh_prom_i_i_i_i_i_cast_cast_cast_fu_1498_p1 = $signed(ush_fu_1490_p3);

assign shl_ln215_fu_1126_p2 = add_ln215_fu_1121_p2 << 11'd1;

assign shl_ln949_fu_1779_p2 = add_ln949_fu_1773_p2 << 11'd1;

assign sub_ln1050_fu_2387_p2 = (tmp_54_cast_fu_2367_p3 - zext_ln1050_fu_2383_p1);

assign sub_ln1311_2_fu_1671_p2 = (8'd127 - tmp_50_fu_1625_p4);

assign sub_ln1311_3_fu_1934_p2 = (11'd1023 - tmp_52_reg_2961);

assign sub_ln1311_fu_1480_p2 = (8'd127 - tmp_48_fu_1434_p4);

assign sub_ln180_1_fu_1152_p2 = (33'd0 - ret_3_fu_1147_p2);

assign sub_ln180_fu_1008_p2 = (33'd0 - ret_fu_1003_p2);

assign sub_ln967_fu_1876_p2 = ($signed(sext_ln967_fu_1872_p1) - $signed(rhs_reg_2613));

assign temp_V_address0 = grp_makePatch_alignedToLine_fu_830_temp_V_address0;

assign temp_V_address1 = grp_makePatch_alignedToLine_fu_830_temp_V_address1;

assign temp_V_d0 = grp_makePatch_alignedToLine_fu_830_temp_V_d0;

assign temp_V_d1 = grp_makePatch_alignedToLine_fu_830_temp_V_d1;

assign thirdLastPatchIdx_fu_2484_p2 = ($signed(reg_951) + $signed(8'd253));

assign tmp_11_fu_2180_p4 = {{data_V_5_fu_2163_p1[62:52]}};

assign tmp_14_fu_2263_p4 = {{data_V_6_fu_2246_p1[62:52]}};

assign tmp_15_fu_1530_p4 = {{r_V_4_fu_1512_p2[31:24]}};

assign tmp_17_fu_1858_p5 = i_14_reg_761[1:0];

assign tmp_19_fu_1721_p4 = {{r_V_6_fu_1703_p2[31:24]}};

assign tmp_1_fu_1362_p4 = {{bitcast_ln938_1_fu_1359_p1[30:23]}};

assign tmp_21_fu_1757_p3 = {{i_12_reg_738}, {7'd0}};

assign tmp_23_fu_1983_p4 = {{r_V_8_fu_1965_p2[116:53]}};

assign tmp_24_fu_2375_p3 = {{lastPatchIdx_fu_2357_p2}, {3'd0}};

assign tmp_31_fu_1014_p3 = ret_fu_1003_p2[32'd32];

assign tmp_32_cast_fu_1094_p1 = tmp_9_fu_1086_p3;

assign tmp_32_fu_1158_p3 = ret_3_fu_1147_p2[32'd32];

assign tmp_33_fu_1217_p1 = white_space_height_read;

assign tmp_33_fu_1217_p3 = tmp_33_fu_1217_p1[32'd63];

assign tmp_37_fu_1518_p3 = r_V_fu_1506_p2[32'd24];

assign tmp_41_fu_1709_p3 = r_V_5_fu_1697_p2[32'd24];

assign tmp_42_fu_2331_p3 = mul_ln1002_fu_2326_p2[32'd63];

assign tmp_46_fu_1971_p3 = r_V_7_fu_1959_p2[32'd53];

assign tmp_47_fu_2421_p4 = {{n_patches_i[7:2]}};

assign tmp_48_fu_1434_p4 = {{data_V_fu_1430_p1[30:23]}};

assign tmp_49_fu_1444_p1 = data_V_fu_1430_p1[22:0];

assign tmp_50_cast_fu_2104_p3 = {{trunc_ln989_fu_2101_p1}, {1'd0}};

assign tmp_50_fu_1625_p4 = {{data_V_2_fu_1617_p3[30:23]}};

assign tmp_51_fu_1635_p1 = data_V_2_fu_1617_p3[22:0];

assign tmp_53_fu_1900_p1 = data_V_3_fu_1886_p1[51:0];

assign tmp_54_cast_fu_2367_p3 = {{trunc_ln1050_fu_2363_p1}, {7'd0}};

assign tmp_6_fu_976_p3 = {{ap_phi_mux_i_phi_fu_565_p4}, {1'd0}};

assign tmp_7_fu_990_p3 = {{55'd2}, {or_ln215_fu_984_p2}};

assign tmp_8_fu_2075_p4 = {{data_V_4_fu_2058_p1[62:52]}};

assign tmp_9_fu_1086_p3 = {{i_17_reg_597}, {7'd0}};

assign tmp_fu_1575_p4 = {{bitcast_ln943_fu_1571_p1[30:23]}};

assign tmp_s_fu_1345_p4 = {{bitcast_ln938_fu_1342_p1[30:23]}};

assign trunc_ln1050_fu_2363_p1 = lastPatchIdx_fu_2357_p2[4:0];

assign trunc_ln312_fu_1613_p1 = bitcast_ln943_fu_1571_p1[30:0];

assign trunc_ln534_fu_1854_p1 = i_14_reg_761[1:0];

assign trunc_ln938_1_fu_1372_p1 = bitcast_ln938_1_fu_1359_p1[22:0];

assign trunc_ln938_fu_1355_p1 = bitcast_ln938_fu_1342_p1[22:0];

assign trunc_ln943_fu_1585_p1 = bitcast_ln943_fu_1571_p1[22:0];

assign trunc_ln955_fu_1813_p1 = ap_phi_mux_i_15_phi_fu_754_p4[1:0];

assign trunc_ln958_cast_fu_1808_p1 = ap_phi_mux_i_15_phi_fu_754_p4;

assign trunc_ln987_fu_2085_p1 = data_V_4_fu_2058_p1[51:0];

assign trunc_ln989_fu_2101_p1 = select_ln934_reg_2783[9:0];

assign trunc_ln992_fu_2190_p1 = data_V_5_fu_2163_p1[51:0];

assign trunc_ln997_fu_2273_p1 = data_V_6_fu_2246_p1[51:0];

assign ush_2_fu_1681_p3 = ((isNeg_2_fu_1663_p3[0:0] == 1'b1) ? sext_ln1311_2_fu_1677_p1 : add_ln341_2_fu_1657_p2);

assign ush_3_fu_1943_p3 = ((isNeg_3_fu_1926_p3[0:0] == 1'b1) ? sext_ln1311_3_fu_1939_p1 : add_ln510_fu_1920_p2);

assign ush_fu_1490_p3 = ((isNeg_fu_1472_p3[0:0] == 1'b1) ? sext_ln1311_fu_1486_p1 : add_ln341_fu_1466_p2);

assign val_3_fu_1993_p3 = ((isNeg_3_fu_1926_p3[0:0] == 1'b1) ? zext_ln662_2_fu_1979_p1 : tmp_23_fu_1983_p4);

assign val_fu_1540_p3 = ((isNeg_fu_1472_p3[0:0] == 1'b1) ? zext_ln662_fu_1526_p1 : tmp_15_fu_1530_p4);

assign zext_ln1038_fu_2352_p1 = add_ln1018_fu_2346_p2;

assign zext_ln1050_1_fu_2405_p1 = or_ln1050_fu_2399_p2;

assign zext_ln1050_fu_2383_p1 = tmp_24_fu_2375_p3;

assign zext_ln1051_fu_2416_p1 = add_ln1051_fu_2410_p2;

assign zext_ln1075_fu_2481_p1 = lastPatchIdx_reg_3113;

assign zext_ln15_fu_1913_p1 = mantissa_3_fu_1904_p4;

assign zext_ln215_1_fu_1138_p1 = or_ln215_1_fu_1132_p2;

assign zext_ln215_fu_1117_p1 = ap_phi_mux_i_5_phi_fu_613_p4;

assign zext_ln341_2_fu_1653_p1 = tmp_50_fu_1625_p4;

assign zext_ln341_fu_1462_p1 = tmp_48_fu_1434_p4;

assign zext_ln368_1_fu_2171_p1 = p_Result_2_fu_2167_p1;

assign zext_ln368_2_fu_2254_p1 = p_Result_3_fu_2250_p1;

assign zext_ln368_fu_2066_p1 = p_Result_s_fu_2062_p1;

assign zext_ln412_1_fu_1108_p1 = ap_phi_mux_i_5_phi_fu_613_p4;

assign zext_ln412_fu_966_p1 = ap_phi_mux_i_phi_fu_565_p4;

assign zext_ln510_fu_1917_p1 = tmp_52_reg_2961;

assign zext_ln662_1_fu_1717_p1 = tmp_41_fu_1709_p3;

assign zext_ln662_2_fu_1979_p1 = tmp_46_fu_1971_p3;

assign zext_ln662_fu_1526_p1 = tmp_37_fu_1518_p3;

assign zext_ln68_1_fu_1649_p1 = mantissa_2_fu_1639_p4;

assign zext_ln68_fu_1458_p1 = mantissa_fu_1448_p4;

assign zext_ln896_fu_1056_p1 = index_reg_573;

assign zext_ln899_fu_1081_p1 = i_17_reg_597;

assign zext_ln928_fu_1235_p1 = add_ln927_fu_1229_p2;

assign zext_ln938_fu_1337_p1 = new_z_i_index_q1;

assign zext_ln943_fu_1566_p1 = new_z_i_index_q0;

assign zext_ln947_fu_1765_p1 = tmp_21_fu_1757_p3;

assign zext_ln949_1_fu_1791_p1 = or_ln949_fu_1785_p2;

assign zext_ln949_fu_1769_p1 = new_z_i_index_q1;

assign zext_ln967_fu_2007_p1 = trunc_ln534_reg_2951_pp9_iter1_reg;

assign zext_ln989_fu_2118_p1 = add_ln989_fu_2112_p2;

assign zext_ln994_fu_2158_p1 = add_ln994_fu_2153_p2;

assign zext_ln999_fu_2241_p1 = add_ln999_fu_2236_p2;

always @ (posedge ap_clk) begin
    zext_ln896_reg_2647[8] <= 1'b0;
    zext_ln899_reg_2672[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    tmp_32_cast_reg_2682[6:0] <= 7'b0000000;
    tmp_32_cast_reg_2682[10] <= 1'b0;
    i_7_cast_reg_2730[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln928_reg_2749[9] <= 1'b0;
    i_9_cast_reg_2773[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_8_cast_reg_2800[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_12_cast_reg_2878[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_12_cast_reg_2878_pp7_iter1_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    tmp_50_cast_reg_3014[0] <= 1'b0;
    zext_ln1038_reg_3103[8] <= 1'b0;
    zext_ln1075_reg_3139[8] <= 1'b0;
end

endmodule //makePatches_ShadowQuilt_fromEdges_solveComplmentaryPatch
