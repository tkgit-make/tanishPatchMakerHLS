// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module makePatches_ShadowQuilt_fromEdges_areWedgeSuperPointsEqual (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        wsp1_2_address0,
        wsp1_2_ce0,
        wsp1_2_q0,
        wsp1_2_address1,
        wsp1_2_ce1,
        wsp1_2_q1,
        wsp1,
        wsp11,
        wsp2,
        wsp23,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] wsp1_2_address0;
output   wsp1_2_ce0;
input  [63:0] wsp1_2_q0;
output  [11:0] wsp1_2_address1;
output   wsp1_2_ce1;
input  [63:0] wsp1_2_q1;
input  [7:0] wsp1;
input  [2:0] wsp11;
input  [7:0] wsp2;
input  [2:0] wsp23;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] wsp1_2_address0;
reg wsp1_2_ce0;
reg[11:0] wsp1_2_address1;
reg wsp1_2_ce1;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
wire    ap_block_state8_pp0_stage1_iter3;
wire    ap_block_state10_pp0_stage1_iter4;
wire    ap_block_state12_pp0_stage1_iter5;
wire    ap_block_state14_pp0_stage1_iter6;
wire    ap_block_state16_pp0_stage1_iter7;
wire    ap_block_state18_pp0_stage1_iter8;
wire    ap_block_state20_pp0_stage1_iter9;
wire    ap_block_pp0_stage1_11001;
reg   [2:0] wsp23_read_reg_857;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_state11_pp0_stage0_iter5;
wire    ap_block_state13_pp0_stage0_iter6;
wire    ap_block_state15_pp0_stage0_iter7;
wire    ap_block_state17_pp0_stage0_iter8;
wire    ap_block_state19_pp0_stage0_iter9;
wire    ap_block_pp0_stage0_11001;
reg   [2:0] wsp23_read_reg_857_pp0_iter1_reg;
reg   [7:0] wsp2_read_reg_862;
reg   [7:0] wsp2_read_reg_862_pp0_iter1_reg;
reg   [2:0] wsp11_read_reg_868;
reg   [7:0] wsp1_read_reg_873;
wire  signed [63:0] sext_ln277_fu_293_p1;
wire   [0:0] icmp_ln23_fu_416_p2;
reg   [0:0] icmp_ln23_reg_894;
reg   [0:0] icmp_ln23_reg_894_pp0_iter2_reg;
reg   [0:0] icmp_ln23_reg_894_pp0_iter3_reg;
reg   [0:0] icmp_ln23_reg_894_pp0_iter4_reg;
reg   [0:0] icmp_ln23_reg_894_pp0_iter5_reg;
reg   [0:0] icmp_ln23_reg_894_pp0_iter6_reg;
reg   [0:0] icmp_ln23_reg_894_pp0_iter7_reg;
reg   [0:0] icmp_ln23_reg_894_pp0_iter8_reg;
reg   [0:0] icmp_ln23_reg_894_pp0_iter9_reg;
wire   [17:0] add_ln23_fu_465_p2;
reg   [17:0] add_ln23_reg_898;
reg   [17:0] add_ln23_reg_898_pp0_iter2_reg;
reg   [17:0] add_ln23_reg_898_pp0_iter3_reg;
reg   [17:0] add_ln23_reg_898_pp0_iter4_reg;
reg   [17:0] add_ln23_reg_898_pp0_iter5_reg;
reg   [17:0] add_ln23_reg_898_pp0_iter6_reg;
wire   [17:0] add_ln23_1_fu_530_p2;
reg   [17:0] add_ln23_1_reg_908;
reg   [17:0] add_ln23_1_reg_908_pp0_iter2_reg;
reg   [17:0] add_ln23_1_reg_908_pp0_iter3_reg;
reg   [17:0] add_ln23_1_reg_908_pp0_iter4_reg;
reg   [17:0] add_ln23_1_reg_908_pp0_iter5_reg;
wire   [7:0] grp_fu_481_p2;
reg   [7:0] urem_ln23_reg_928;
reg   [7:0] udiv_ln23_1_cast_reg_933;
reg   [5:0] tmp_83_reg_938;
wire  signed [63:0] sext_ln277_4_fu_711_p1;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] ap_phi_mux_empty_phi_fu_171_p4;
wire   [0:0] icmp_ln23_1_fu_834_p2;
reg   [0:0] ap_phi_reg_pp0_iter9_empty_reg_167;
wire   [0:0] ap_phi_reg_pp0_iter0_empty_reg_167;
reg   [0:0] ap_phi_reg_pp0_iter1_empty_reg_167;
reg   [0:0] ap_phi_reg_pp0_iter2_empty_reg_167;
reg   [0:0] ap_phi_reg_pp0_iter3_empty_reg_167;
reg   [0:0] ap_phi_reg_pp0_iter4_empty_reg_167;
reg   [0:0] ap_phi_reg_pp0_iter5_empty_reg_167;
reg   [0:0] ap_phi_reg_pp0_iter6_empty_reg_167;
reg   [0:0] ap_phi_reg_pp0_iter7_empty_reg_167;
reg   [0:0] ap_phi_reg_pp0_iter8_empty_reg_167;
wire   [63:0] zext_ln23_10_fu_221_p1;
wire   [63:0] zext_ln23_13_fu_266_p1;
wire   [63:0] zext_ln23_15_fu_643_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln23_17_fu_684_p1;
reg  signed [63:0] grp_fu_178_p0;
wire   [9:0] tmp_fu_189_p3;
wire   [10:0] zext_ln23_5_fu_197_p1;
wire   [10:0] zext_ln23_4_fu_185_p1;
wire   [10:0] add_ln23_4_fu_201_p2;
wire   [10:0] wsp23_cast_fu_181_p1;
wire   [10:0] add_ln23_5_fu_207_p2;
wire   [14:0] tmp_76_fu_213_p3;
wire   [9:0] tmp_s_fu_234_p3;
wire   [10:0] zext_ln23_12_fu_242_p1;
wire   [10:0] zext_ln23_11_fu_230_p1;
wire   [10:0] add_ln23_6_fu_246_p2;
wire   [10:0] wsp11_cast_fu_226_p1;
wire   [10:0] add_ln23_7_fu_252_p2;
wire   [14:0] tmp_77_fu_258_p3;
wire   [31:0] lhs_fu_271_p1;
wire   [31:0] rhs_fu_275_p1;
wire  signed [32:0] sext_ln215_fu_279_p1;
wire  signed [32:0] sext_ln215_28_fu_283_p1;
wire   [32:0] ret_fu_287_p2;
wire   [63:0] grp_fu_178_p1;
wire   [63:0] data_V_fu_298_p1;
wire   [51:0] tmp_89_fu_312_p1;
wire   [53:0] mantissa_fu_316_p4;
wire   [10:0] tmp_88_fu_302_p4;
wire   [11:0] zext_ln510_fu_330_p1;
wire   [11:0] add_ln510_fu_334_p2;
wire   [10:0] sub_ln1311_fu_348_p2;
wire   [0:0] isNeg_fu_340_p3;
wire  signed [11:0] sext_ln1311_fu_354_p1;
wire   [11:0] ush_fu_358_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i_cast_cast_cast_fu_366_p1;
wire   [168:0] zext_ln15_fu_326_p1;
wire   [168:0] sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_370_p1;
wire   [168:0] r_V_fu_374_p2;
wire   [0:0] tmp_81_fu_386_p3;
wire   [168:0] r_V_11_fu_380_p2;
wire   [63:0] zext_ln662_fu_394_p1;
wire   [63:0] tmp_49_fu_398_p4;
wire   [63:0] val_fu_408_p3;
wire   [16:0] shl_ln23_2_fu_422_p3;
wire   [14:0] shl_ln23_3_fu_433_p3;
wire   [9:0] shl_ln_fu_444_p3;
wire   [15:0] zext_ln23_1_fu_440_p1;
wire   [15:0] zext_ln23_2_fu_451_p1;
wire   [15:0] add_ln23_2_fu_455_p2;
wire   [17:0] zext_ln23_3_fu_461_p1;
wire   [17:0] zext_ln23_fu_429_p1;
wire   [10:0] grp_fu_481_p0;
wire   [3:0] grp_fu_481_p1;
wire   [16:0] shl_ln23_4_fu_487_p3;
wire   [14:0] shl_ln23_5_fu_498_p3;
wire   [9:0] shl_ln23_1_fu_509_p3;
wire   [15:0] zext_ln23_7_fu_505_p1;
wire   [15:0] zext_ln23_8_fu_516_p1;
wire   [15:0] add_ln23_3_fu_520_p2;
wire   [17:0] zext_ln23_9_fu_526_p1;
wire   [17:0] zext_ln23_6_fu_494_p1;
wire   [10:0] grp_fu_546_p0;
wire   [3:0] grp_fu_546_p1;
wire   [17:0] or_ln23_1_fu_552_p2;
wire   [17:0] or_ln23_fu_561_p2;
wire   [36:0] grp_fu_841_p2;
wire   [36:0] grp_fu_849_p2;
wire   [5:0] tmp_82_fu_597_p4;
wire   [7:0] tmp_150_cast_fu_606_p3;
wire   [7:0] udiv_ln_cast_fu_588_p4;
wire   [7:0] add_ln23_8_fu_614_p2;
wire   [7:0] trunc_ln23_fu_620_p1;
wire   [7:0] add_ln23_9_fu_623_p2;
wire   [11:0] tmp_152_cast_fu_629_p3;
wire   [11:0] or_ln23_2_fu_637_p2;
wire   [7:0] tmp_154_cast_fu_648_p3;
wire   [7:0] grp_fu_546_p2;
wire   [7:0] add_ln23_10_fu_655_p2;
wire   [7:0] trunc_ln23_2_fu_660_p1;
wire   [7:0] add_ln23_11_fu_664_p2;
wire   [11:0] tmp_156_cast_fu_670_p3;
wire   [11:0] or_ln23_3_fu_678_p2;
wire   [31:0] lhs_9_fu_689_p1;
wire   [31:0] rhs_14_fu_693_p1;
wire  signed [32:0] sext_ln215_29_fu_697_p1;
wire  signed [32:0] sext_ln215_30_fu_701_p1;
wire   [32:0] ret_37_fu_705_p2;
wire   [63:0] data_V_11_fu_716_p1;
wire   [51:0] tmp_91_fu_730_p1;
wire   [53:0] mantissa_4_fu_734_p4;
wire   [10:0] tmp_90_fu_720_p4;
wire   [11:0] zext_ln510_1_fu_748_p1;
wire   [11:0] add_ln510_1_fu_752_p2;
wire   [10:0] sub_ln1311_4_fu_766_p2;
wire   [0:0] isNeg_4_fu_758_p3;
wire  signed [11:0] sext_ln1311_4_fu_772_p1;
wire   [11:0] ush_4_fu_776_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i196_cast_cast_cast_fu_784_p1;
wire   [168:0] zext_ln15_2_fu_744_p1;
wire   [168:0] sh_prom_i_i_i_i_i196_cast_cast_cast_cast_fu_788_p1;
wire   [168:0] r_V_12_fu_792_p2;
wire   [0:0] tmp_87_fu_804_p3;
wire   [168:0] r_V_13_fu_798_p2;
wire   [63:0] zext_ln662_3_fu_812_p1;
wire   [63:0] tmp_51_fu_816_p4;
wire   [63:0] val_4_fu_826_p3;
wire   [17:0] grp_fu_841_p0;
wire   [19:0] grp_fu_841_p1;
wire   [17:0] grp_fu_849_p0;
wire   [19:0] grp_fu_849_p1;
reg   [1:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to9;
reg    ap_idle_pp0_0to8;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [36:0] grp_fu_841_p00;
wire   [36:0] grp_fu_849_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
end

makePatches_ShadowQuilt_fromEdges_sitodp_64s_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sitodp_64s_64_2_no_dsp_1_U112(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_178_p0),
    .ce(1'b1),
    .dout(grp_fu_178_p1)
);

makePatches_ShadowQuilt_fromEdges_urem_11ns_4ns_8_15_1 #(
    .ID( 1 ),
    .NUM_STAGE( 15 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
urem_11ns_4ns_8_15_1_U113(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_481_p0),
    .din1(grp_fu_481_p1),
    .ce(1'b1),
    .dout(grp_fu_481_p2)
);

makePatches_ShadowQuilt_fromEdges_urem_11ns_4ns_8_15_1 #(
    .ID( 1 ),
    .NUM_STAGE( 15 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
urem_11ns_4ns_8_15_1_U114(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_546_p0),
    .din1(grp_fu_546_p1),
    .ce(1'b1),
    .dout(grp_fu_546_p2)
);

makePatches_ShadowQuilt_fromEdges_mul_mul_18ns_20ns_37_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 37 ))
mul_mul_18ns_20ns_37_4_1_U115(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_841_p0),
    .din1(grp_fu_841_p1),
    .ce(1'b1),
    .dout(grp_fu_841_p2)
);

makePatches_ShadowQuilt_fromEdges_mul_mul_18ns_20ns_37_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 37 ))
mul_mul_18ns_20ns_37_4_1_U116(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_849_p0),
    .din1(grp_fu_849_p1),
    .ce(1'b1),
    .dout(grp_fu_849_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln23_fu_416_p2 == 1'd0))) begin
        ap_phi_reg_pp0_iter1_empty_reg_167 <= 1'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_empty_reg_167 <= ap_phi_reg_pp0_iter0_empty_reg_167;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln23_reg_894 == 1'd1))) begin
        add_ln23_1_reg_908[17 : 7] <= add_ln23_1_fu_530_p2[17 : 7];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln23_1_reg_908_pp0_iter2_reg[17 : 7] <= add_ln23_1_reg_908[17 : 7];
        add_ln23_1_reg_908_pp0_iter3_reg[17 : 7] <= add_ln23_1_reg_908_pp0_iter2_reg[17 : 7];
        add_ln23_1_reg_908_pp0_iter4_reg[17 : 7] <= add_ln23_1_reg_908_pp0_iter3_reg[17 : 7];
        add_ln23_1_reg_908_pp0_iter5_reg[17 : 7] <= add_ln23_1_reg_908_pp0_iter4_reg[17 : 7];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln23_fu_416_p2 == 1'd1))) begin
        add_ln23_reg_898[17 : 7] <= add_ln23_fu_465_p2[17 : 7];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln23_reg_898_pp0_iter2_reg[17 : 7] <= add_ln23_reg_898[17 : 7];
        add_ln23_reg_898_pp0_iter3_reg[17 : 7] <= add_ln23_reg_898_pp0_iter2_reg[17 : 7];
        add_ln23_reg_898_pp0_iter4_reg[17 : 7] <= add_ln23_reg_898_pp0_iter3_reg[17 : 7];
        add_ln23_reg_898_pp0_iter5_reg[17 : 7] <= add_ln23_reg_898_pp0_iter4_reg[17 : 7];
        add_ln23_reg_898_pp0_iter6_reg[17 : 7] <= add_ln23_reg_898_pp0_iter5_reg[17 : 7];
        icmp_ln23_reg_894 <= icmp_ln23_fu_416_p2;
        icmp_ln23_reg_894_pp0_iter2_reg <= icmp_ln23_reg_894;
        icmp_ln23_reg_894_pp0_iter3_reg <= icmp_ln23_reg_894_pp0_iter2_reg;
        icmp_ln23_reg_894_pp0_iter4_reg <= icmp_ln23_reg_894_pp0_iter3_reg;
        icmp_ln23_reg_894_pp0_iter5_reg <= icmp_ln23_reg_894_pp0_iter4_reg;
        icmp_ln23_reg_894_pp0_iter6_reg <= icmp_ln23_reg_894_pp0_iter5_reg;
        icmp_ln23_reg_894_pp0_iter7_reg <= icmp_ln23_reg_894_pp0_iter6_reg;
        icmp_ln23_reg_894_pp0_iter8_reg <= icmp_ln23_reg_894_pp0_iter7_reg;
        icmp_ln23_reg_894_pp0_iter9_reg <= icmp_ln23_reg_894_pp0_iter8_reg;
        wsp11_read_reg_868 <= wsp11;
        wsp1_read_reg_873 <= wsp1;
        wsp23_read_reg_857 <= wsp23;
        wsp23_read_reg_857_pp0_iter1_reg <= wsp23_read_reg_857;
        wsp2_read_reg_862 <= wsp2;
        wsp2_read_reg_862_pp0_iter1_reg <= wsp2_read_reg_862;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter2_empty_reg_167 <= ap_phi_reg_pp0_iter1_empty_reg_167;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter3_empty_reg_167 <= ap_phi_reg_pp0_iter2_empty_reg_167;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter4_empty_reg_167 <= ap_phi_reg_pp0_iter3_empty_reg_167;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter5_empty_reg_167 <= ap_phi_reg_pp0_iter4_empty_reg_167;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter6_empty_reg_167 <= ap_phi_reg_pp0_iter5_empty_reg_167;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter7_empty_reg_167 <= ap_phi_reg_pp0_iter6_empty_reg_167;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter8_empty_reg_167 <= ap_phi_reg_pp0_iter7_empty_reg_167;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter9_empty_reg_167 <= ap_phi_reg_pp0_iter8_empty_reg_167;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln23_reg_894_pp0_iter7_reg == 1'd1))) begin
        tmp_83_reg_938 <= {{grp_fu_841_p2[33:28]}};
        udiv_ln23_1_cast_reg_933 <= {{grp_fu_841_p2[35:28]}};
        urem_ln23_reg_928 <= grp_fu_481_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to8 = 1'b1;
    end else begin
        ap_idle_pp0_0to8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to9 = 1'b1;
    end else begin
        ap_idle_pp0_1to9 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln23_reg_894_pp0_iter9_reg == 1'd1)) begin
        ap_phi_mux_empty_phi_fu_171_p4 = icmp_ln23_1_fu_834_p2;
    end else begin
        ap_phi_mux_empty_phi_fu_171_p4 = ap_phi_reg_pp0_iter9_empty_reg_167;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to8 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_178_p0 = sext_ln277_4_fu_711_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_178_p0 = sext_ln277_fu_293_p1;
    end else begin
        grp_fu_178_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        wsp1_2_address0 = zext_ln23_17_fu_684_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        wsp1_2_address0 = zext_ln23_10_fu_221_p1;
    end else begin
        wsp1_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        wsp1_2_address1 = zext_ln23_15_fu_643_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        wsp1_2_address1 = zext_ln23_13_fu_266_p1;
    end else begin
        wsp1_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        wsp1_2_ce0 = 1'b1;
    end else begin
        wsp1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        wsp1_2_ce1 = 1'b1;
    end else begin
        wsp1_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to9 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((((ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone)) | ((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln23_10_fu_655_p2 = (tmp_154_cast_fu_648_p3 + udiv_ln23_1_cast_reg_933);

assign add_ln23_11_fu_664_p2 = (add_ln23_10_fu_655_p2 + trunc_ln23_2_fu_660_p1);

assign add_ln23_1_fu_530_p2 = (zext_ln23_9_fu_526_p1 + zext_ln23_6_fu_494_p1);

assign add_ln23_2_fu_455_p2 = (zext_ln23_1_fu_440_p1 + zext_ln23_2_fu_451_p1);

assign add_ln23_3_fu_520_p2 = (zext_ln23_7_fu_505_p1 + zext_ln23_8_fu_516_p1);

assign add_ln23_4_fu_201_p2 = (zext_ln23_5_fu_197_p1 + zext_ln23_4_fu_185_p1);

assign add_ln23_5_fu_207_p2 = (add_ln23_4_fu_201_p2 + wsp23_cast_fu_181_p1);

assign add_ln23_6_fu_246_p2 = (zext_ln23_12_fu_242_p1 + zext_ln23_11_fu_230_p1);

assign add_ln23_7_fu_252_p2 = (add_ln23_6_fu_246_p2 + wsp11_cast_fu_226_p1);

assign add_ln23_8_fu_614_p2 = (tmp_150_cast_fu_606_p3 + udiv_ln_cast_fu_588_p4);

assign add_ln23_9_fu_623_p2 = (add_ln23_8_fu_614_p2 + trunc_ln23_fu_620_p1);

assign add_ln23_fu_465_p2 = (zext_ln23_3_fu_461_p1 + zext_ln23_fu_429_p1);

assign add_ln510_1_fu_752_p2 = ($signed(zext_ln510_1_fu_748_p1) + $signed(12'd3073));

assign add_ln510_fu_334_p2 = ($signed(zext_ln510_fu_330_p1) + $signed(12'd3073));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_empty_reg_167 = 'bx;

assign ap_return = ap_phi_mux_empty_phi_fu_171_p4;

assign data_V_11_fu_716_p1 = grp_fu_178_p1;

assign data_V_fu_298_p1 = grp_fu_178_p1;

assign grp_fu_481_p0 = {{add_ln23_fu_465_p2[17:7]}};

assign grp_fu_481_p1 = 11'd5;

assign grp_fu_546_p0 = {{add_ln23_1_fu_530_p2[17:7]}};

assign grp_fu_546_p1 = 11'd5;

assign grp_fu_841_p0 = grp_fu_841_p00;

assign grp_fu_841_p00 = or_ln23_1_fu_552_p2;

assign grp_fu_841_p1 = 37'd419431;

assign grp_fu_849_p0 = grp_fu_849_p00;

assign grp_fu_849_p00 = or_ln23_fu_561_p2;

assign grp_fu_849_p1 = 37'd419431;

assign icmp_ln23_1_fu_834_p2 = (($signed(val_4_fu_826_p3) < $signed(64'd100)) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_416_p2 = (($signed(val_fu_408_p3) < $signed(64'd100)) ? 1'b1 : 1'b0);

assign isNeg_4_fu_758_p3 = add_ln510_1_fu_752_p2[32'd11];

assign isNeg_fu_340_p3 = add_ln510_fu_334_p2[32'd11];

assign lhs_9_fu_689_p1 = wsp1_2_q1[31:0];

assign lhs_fu_271_p1 = wsp1_2_q1[31:0];

assign mantissa_4_fu_734_p4 = {{{{1'd1}, {tmp_91_fu_730_p1}}}, {1'd0}};

assign mantissa_fu_316_p4 = {{{{1'd1}, {tmp_89_fu_312_p1}}}, {1'd0}};

assign or_ln23_1_fu_552_p2 = (18'd120 | add_ln23_1_reg_908_pp0_iter5_reg);

assign or_ln23_2_fu_637_p2 = (tmp_152_cast_fu_629_p3 | 12'd15);

assign or_ln23_3_fu_678_p2 = (tmp_156_cast_fu_670_p3 | 12'd15);

assign or_ln23_fu_561_p2 = (18'd120 | add_ln23_reg_898_pp0_iter6_reg);

assign r_V_11_fu_380_p2 = zext_ln15_fu_326_p1 << sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_370_p1;

assign r_V_12_fu_792_p2 = zext_ln15_2_fu_744_p1 >> sh_prom_i_i_i_i_i196_cast_cast_cast_cast_fu_788_p1;

assign r_V_13_fu_798_p2 = zext_ln15_2_fu_744_p1 << sh_prom_i_i_i_i_i196_cast_cast_cast_cast_fu_788_p1;

assign r_V_fu_374_p2 = zext_ln15_fu_326_p1 >> sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_370_p1;

assign ret_37_fu_705_p2 = ($signed(sext_ln215_29_fu_697_p1) - $signed(sext_ln215_30_fu_701_p1));

assign ret_fu_287_p2 = ($signed(sext_ln215_fu_279_p1) - $signed(sext_ln215_28_fu_283_p1));

assign rhs_14_fu_693_p1 = wsp1_2_q0[31:0];

assign rhs_fu_275_p1 = wsp1_2_q0[31:0];

assign sext_ln1311_4_fu_772_p1 = $signed(sub_ln1311_4_fu_766_p2);

assign sext_ln1311_fu_354_p1 = $signed(sub_ln1311_fu_348_p2);

assign sext_ln215_28_fu_283_p1 = $signed(rhs_fu_275_p1);

assign sext_ln215_29_fu_697_p1 = $signed(lhs_9_fu_689_p1);

assign sext_ln215_30_fu_701_p1 = $signed(rhs_14_fu_693_p1);

assign sext_ln215_fu_279_p1 = $signed(lhs_fu_271_p1);

assign sext_ln277_4_fu_711_p1 = $signed(ret_37_fu_705_p2);

assign sext_ln277_fu_293_p1 = $signed(ret_fu_287_p2);

assign sh_prom_i_i_i_i_i196_cast_cast_cast_cast_fu_788_p1 = $unsigned(sh_prom_i_i_i_i_i196_cast_cast_cast_fu_784_p1);

assign sh_prom_i_i_i_i_i196_cast_cast_cast_fu_784_p1 = $signed(ush_4_fu_776_p3);

assign sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_370_p1 = $unsigned(sh_prom_i_i_i_i_i_cast_cast_cast_fu_366_p1);

assign sh_prom_i_i_i_i_i_cast_cast_cast_fu_366_p1 = $signed(ush_fu_358_p3);

assign shl_ln23_1_fu_509_p3 = {{wsp23_read_reg_857_pp0_iter1_reg}, {7'd0}};

assign shl_ln23_2_fu_422_p3 = {{wsp1_read_reg_873}, {9'd0}};

assign shl_ln23_3_fu_433_p3 = {{wsp1_read_reg_873}, {7'd0}};

assign shl_ln23_4_fu_487_p3 = {{wsp2_read_reg_862_pp0_iter1_reg}, {9'd0}};

assign shl_ln23_5_fu_498_p3 = {{wsp2_read_reg_862_pp0_iter1_reg}, {7'd0}};

assign shl_ln_fu_444_p3 = {{wsp11_read_reg_868}, {7'd0}};

assign sub_ln1311_4_fu_766_p2 = (11'd1023 - tmp_90_fu_720_p4);

assign sub_ln1311_fu_348_p2 = (11'd1023 - tmp_88_fu_302_p4);

assign tmp_150_cast_fu_606_p3 = {{tmp_82_fu_597_p4}, {2'd0}};

assign tmp_152_cast_fu_629_p3 = {{add_ln23_9_fu_623_p2}, {4'd0}};

assign tmp_154_cast_fu_648_p3 = {{tmp_83_reg_938}, {2'd0}};

assign tmp_156_cast_fu_670_p3 = {{add_ln23_11_fu_664_p2}, {4'd0}};

assign tmp_49_fu_398_p4 = {{r_V_11_fu_380_p2[116:53]}};

assign tmp_51_fu_816_p4 = {{r_V_13_fu_798_p2[116:53]}};

assign tmp_76_fu_213_p3 = {{add_ln23_5_fu_207_p2}, {4'd0}};

assign tmp_77_fu_258_p3 = {{add_ln23_7_fu_252_p2}, {4'd0}};

assign tmp_81_fu_386_p3 = r_V_fu_374_p2[32'd53];

assign tmp_82_fu_597_p4 = {{grp_fu_849_p2[33:28]}};

assign tmp_87_fu_804_p3 = r_V_12_fu_792_p2[32'd53];

assign tmp_88_fu_302_p4 = {{data_V_fu_298_p1[62:52]}};

assign tmp_89_fu_312_p1 = data_V_fu_298_p1[51:0];

assign tmp_90_fu_720_p4 = {{data_V_11_fu_716_p1[62:52]}};

assign tmp_91_fu_730_p1 = data_V_11_fu_716_p1[51:0];

assign tmp_fu_189_p3 = {{wsp2}, {2'd0}};

assign tmp_s_fu_234_p3 = {{wsp1}, {2'd0}};

assign trunc_ln23_2_fu_660_p1 = grp_fu_546_p2[7:0];

assign trunc_ln23_fu_620_p1 = urem_ln23_reg_928[7:0];

assign udiv_ln_cast_fu_588_p4 = {{grp_fu_849_p2[35:28]}};

assign ush_4_fu_776_p3 = ((isNeg_4_fu_758_p3[0:0] == 1'b1) ? sext_ln1311_4_fu_772_p1 : add_ln510_1_fu_752_p2);

assign ush_fu_358_p3 = ((isNeg_fu_340_p3[0:0] == 1'b1) ? sext_ln1311_fu_354_p1 : add_ln510_fu_334_p2);

assign val_4_fu_826_p3 = ((isNeg_4_fu_758_p3[0:0] == 1'b1) ? zext_ln662_3_fu_812_p1 : tmp_51_fu_816_p4);

assign val_fu_408_p3 = ((isNeg_fu_340_p3[0:0] == 1'b1) ? zext_ln662_fu_394_p1 : tmp_49_fu_398_p4);

assign wsp11_cast_fu_226_p1 = wsp11;

assign wsp23_cast_fu_181_p1 = wsp23;

assign zext_ln15_2_fu_744_p1 = mantissa_4_fu_734_p4;

assign zext_ln15_fu_326_p1 = mantissa_fu_316_p4;

assign zext_ln23_10_fu_221_p1 = tmp_76_fu_213_p3;

assign zext_ln23_11_fu_230_p1 = wsp1;

assign zext_ln23_12_fu_242_p1 = tmp_s_fu_234_p3;

assign zext_ln23_13_fu_266_p1 = tmp_77_fu_258_p3;

assign zext_ln23_15_fu_643_p1 = or_ln23_2_fu_637_p2;

assign zext_ln23_17_fu_684_p1 = or_ln23_3_fu_678_p2;

assign zext_ln23_1_fu_440_p1 = shl_ln23_3_fu_433_p3;

assign zext_ln23_2_fu_451_p1 = shl_ln_fu_444_p3;

assign zext_ln23_3_fu_461_p1 = add_ln23_2_fu_455_p2;

assign zext_ln23_4_fu_185_p1 = wsp2;

assign zext_ln23_5_fu_197_p1 = tmp_fu_189_p3;

assign zext_ln23_6_fu_494_p1 = shl_ln23_4_fu_487_p3;

assign zext_ln23_7_fu_505_p1 = shl_ln23_5_fu_498_p3;

assign zext_ln23_8_fu_516_p1 = shl_ln23_1_fu_509_p3;

assign zext_ln23_9_fu_526_p1 = add_ln23_3_fu_520_p2;

assign zext_ln23_fu_429_p1 = shl_ln23_2_fu_422_p3;

assign zext_ln510_1_fu_748_p1 = tmp_90_fu_720_p4;

assign zext_ln510_fu_330_p1 = tmp_88_fu_302_p4;

assign zext_ln662_3_fu_812_p1 = tmp_87_fu_804_p3;

assign zext_ln662_fu_394_p1 = tmp_81_fu_386_p3;

always @ (posedge ap_clk) begin
    add_ln23_reg_898[6:0] <= 7'b0000000;
    add_ln23_reg_898_pp0_iter2_reg[6:0] <= 7'b0000000;
    add_ln23_reg_898_pp0_iter3_reg[6:0] <= 7'b0000000;
    add_ln23_reg_898_pp0_iter4_reg[6:0] <= 7'b0000000;
    add_ln23_reg_898_pp0_iter5_reg[6:0] <= 7'b0000000;
    add_ln23_reg_898_pp0_iter6_reg[6:0] <= 7'b0000000;
    add_ln23_1_reg_908[6:0] <= 7'b0000000;
    add_ln23_1_reg_908_pp0_iter2_reg[6:0] <= 7'b0000000;
    add_ln23_1_reg_908_pp0_iter3_reg[6:0] <= 7'b0000000;
    add_ln23_1_reg_908_pp0_iter4_reg[6:0] <= 7'b0000000;
    add_ln23_1_reg_908_pp0_iter5_reg[6:0] <= 7'b0000000;
end

endmodule //makePatches_ShadowQuilt_fromEdges_areWedgeSuperPointsEqual
