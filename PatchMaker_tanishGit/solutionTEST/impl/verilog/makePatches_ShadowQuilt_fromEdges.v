// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="makePatches_ShadowQuilt_fromEdges_makePatches_ShadowQuilt_fromEdges,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu19p-fsvb3824-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=5,HLS_SYN_DSP=0,HLS_SYN_FF=52233,HLS_SYN_LUT=98300,HLS_VERSION=2020_2}" *)

module makePatches_ShadowQuilt_fromEdges (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        stop,
        ppl,
        leftRight,
        n_patches_i,
        n_patches_o,
        n_patches_o_ap_vld,
        GDarray_address0,
        GDarray_ce0,
        GDarray_q0,
        GDn_points_address0,
        GDn_points_ce0,
        GDn_points_q0,
        patches_superpoints_address0,
        patches_superpoints_ce0,
        patches_superpoints_we0,
        patches_superpoints_d0,
        patches_superpoints_q0,
        patches_superpoints_address1,
        patches_superpoints_ce1,
        patches_superpoints_q1
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_pp0_stage0 = 10'd2;
parameter    ap_ST_fsm_state4 = 10'd4;
parameter    ap_ST_fsm_state5 = 10'd8;
parameter    ap_ST_fsm_state6 = 10'd16;
parameter    ap_ST_fsm_state7 = 10'd32;
parameter    ap_ST_fsm_state8 = 10'd64;
parameter    ap_ST_fsm_state9 = 10'd128;
parameter    ap_ST_fsm_state10 = 10'd256;
parameter    ap_ST_fsm_state11 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] stop;
input  [31:0] ppl;
input   leftRight;
input  [7:0] n_patches_i;
output  [7:0] n_patches_o;
output   n_patches_o_ap_vld;
output  [9:0] GDarray_address0;
output   GDarray_ce0;
input  [63:0] GDarray_q0;
output  [2:0] GDn_points_address0;
output   GDn_points_ce0;
input  [31:0] GDn_points_q0;
output  [11:0] patches_superpoints_address0;
output   patches_superpoints_ce0;
output   patches_superpoints_we0;
output  [63:0] patches_superpoints_d0;
input  [63:0] patches_superpoints_q0;
output  [11:0] patches_superpoints_address1;
output   patches_superpoints_ce1;
input  [63:0] patches_superpoints_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] n_patches_o;
reg n_patches_o_ap_vld;
reg GDarray_ce0;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [9:0] indvar_flatten_reg_208;
reg   [2:0] a_reg_219;
reg   [7:0] b_reg_230;
wire   [9:0] add_ln474_1_fu_358_p2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln474_fu_364_p2;
reg   [0:0] icmp_ln474_reg_741;
wire   [7:0] select_ln474_fu_382_p3;
reg   [7:0] select_ln474_reg_745;
wire   [2:0] select_ln474_1_fu_390_p3;
reg   [2:0] select_ln474_1_reg_750;
wire   [7:0] add_ln476_fu_415_p2;
wire   [0:0] icmp_ln504_fu_502_p2;
reg   [0:0] icmp_ln504_reg_779;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln886_fu_496_p2;
wire   [31:0] grp_fu_355_p1;
reg   [31:0] conv_i_i_reg_783;
wire    ap_CS_fsm_state6;
wire   [31:0] grp_fu_350_p2;
reg   [31:0] dc_reg_788;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln515_fu_714_p2;
wire   [0:0] icmp_ln515_1_fu_720_p2;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire   [31:0] patches_parameters_q0;
wire   [31:0] patches_parameters_q1;
reg   [10:0] GDarrayDecoded_V_address0;
reg    GDarrayDecoded_V_ce0;
reg    GDarrayDecoded_V_we0;
wire   [31:0] GDarrayDecoded_V_d0;
wire   [31:0] GDarrayDecoded_V_q0;
reg   [10:0] GDarrayDecoded_V_address1;
reg    GDarrayDecoded_V_ce1;
reg    GDarrayDecoded_V_we1;
wire   [31:0] GDarrayDecoded_V_d1;
wire   [31:0] GDarrayDecoded_V_q1;
wire    grp_solveNextPatchPair_fu_322_ap_start;
wire    grp_solveNextPatchPair_fu_322_ap_done;
wire    grp_solveNextPatchPair_fu_322_ap_idle;
wire    grp_solveNextPatchPair_fu_322_ap_ready;
wire   [7:0] grp_solveNextPatchPair_fu_322_n_patches_o;
wire    grp_solveNextPatchPair_fu_322_n_patches_o_ap_vld;
wire   [2:0] grp_solveNextPatchPair_fu_322_GDn_points_address0;
wire    grp_solveNextPatchPair_fu_322_GDn_points_ce0;
wire   [11:0] grp_solveNextPatchPair_fu_322_patches_superpoints_address0;
wire    grp_solveNextPatchPair_fu_322_patches_superpoints_ce0;
wire    grp_solveNextPatchPair_fu_322_patches_superpoints_we0;
wire   [63:0] grp_solveNextPatchPair_fu_322_patches_superpoints_d0;
wire   [11:0] grp_solveNextPatchPair_fu_322_patches_superpoints_address1;
wire    grp_solveNextPatchPair_fu_322_patches_superpoints_ce1;
wire   [10:0] grp_solveNextPatchPair_fu_322_GDarrayDecoded_address0;
wire    grp_solveNextPatchPair_fu_322_GDarrayDecoded_ce0;
wire   [10:0] grp_solveNextPatchPair_fu_322_GDarrayDecoded_address1;
wire    grp_solveNextPatchPair_fu_322_GDarrayDecoded_ce1;
wire   [11:0] grp_solveNextPatchPair_fu_322_patches_parameters_address0;
wire    grp_solveNextPatchPair_fu_322_patches_parameters_ce0;
wire    grp_solveNextPatchPair_fu_322_patches_parameters_we0;
wire   [31:0] grp_solveNextPatchPair_fu_322_patches_parameters_d0;
wire   [11:0] grp_solveNextPatchPair_fu_322_patches_parameters_address1;
wire    grp_solveNextPatchPair_fu_322_patches_parameters_ce1;
wire    grp_solveNextPatchPair_fu_322_patches_parameters_we1;
wire   [31:0] grp_solveNextPatchPair_fu_322_patches_parameters_d1;
wire   [31:0] grp_solveNextPatchPair_fu_322_ap_return_0;
wire   [31:0] grp_solveNextPatchPair_fu_322_ap_return_1;
wire   [31:0] grp_solveNextPatchPair_fu_322_ap_return_2;
wire   [31:0] grp_solveNextPatchPair_fu_322_ap_return_3;
wire   [31:0] grp_solveNextPatchPair_fu_322_ap_return_4;
wire   [31:0] grp_solveNextPatchPair_fu_322_ap_return_5;
wire   [31:0] grp_solveNextPatchPair_fu_322_ap_return_6;
reg   [2:0] ap_phi_mux_a_phi_fu_223_p4;
wire    ap_block_pp0_stage0;
reg   [31:0] ap_phi_mux_z_top_max_V_125_ph_phi_fu_245_p4;
reg   [31:0] z_top_max_V_125_ph_reg_241;
wire   [31:0] select_ln506_fu_659_p3;
wire    ap_CS_fsm_state9;
reg   [31:0] nPatchesInColumn_reg_253;
reg   [0:0] phi_ln531_reg_265;
reg   [31:0] z_top_max_V_125_reg_276;
reg   [0:0] phi_ln886_reg_287;
reg   [31:0] complementary_apexZ0_V_0_reg_298;
reg   [31:0] z_top_min_V_0_reg_310;
reg    grp_solveNextPatchPair_fu_322_ap_start_reg;
wire    ap_CS_fsm_state10;
wire   [0:0] and_ln531_1_fu_680_p2;
wire   [63:0] zext_ln478_1_fu_410_p1;
wire   [63:0] zext_ln478_2_fu_449_p1;
wire   [63:0] zext_ln479_fu_466_p1;
reg   [31:0] saved_apexZ0_fu_156;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln476_fu_376_p2;
wire   [2:0] add_ln474_fu_370_p2;
wire   [6:0] trunc_ln478_fu_398_p1;
wire   [9:0] tmp_44_fu_402_p3;
wire   [9:0] tmp_s_fu_421_p3;
wire   [10:0] tmp_105_cast_fu_428_p1;
wire   [10:0] zext_ln478_fu_432_p1;
wire   [10:0] add_ln478_fu_435_p2;
wire   [11:0] tmp_65_fu_441_p3;
wire   [10:0] shl_ln478_fu_454_p2;
wire   [10:0] or_ln479_fu_460_p2;
wire   [31:0] data_V_fu_508_p1;
wire   [22:0] tmp_69_fu_529_p1;
wire   [24:0] mantissa_fu_533_p4;
wire   [7:0] tmp_68_fu_519_p4;
wire   [8:0] zext_ln341_fu_547_p1;
wire   [8:0] add_ln341_fu_551_p2;
wire   [7:0] sub_ln1311_fu_565_p2;
wire   [0:0] isNeg_fu_557_p3;
wire  signed [8:0] sext_ln1311_fu_571_p1;
wire   [8:0] ush_fu_575_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i_i_cast_cast_cast_fu_583_p1;
wire   [110:0] zext_ln15_fu_543_p1;
wire   [110:0] sh_prom_i_i_i_i_i_i_cast_cast_cast_cast_fu_587_p1;
wire   [110:0] r_V_fu_591_p2;
wire   [0:0] tmp_fu_603_p3;
wire   [110:0] r_V_10_fu_597_p2;
wire   [31:0] zext_ln662_fu_611_p1;
wire   [31:0] tmp_67_fu_615_p4;
wire   [31:0] val_fu_625_p3;
wire   [0:0] p_Result_s_fu_511_p3;
wire   [31:0] result_V_6_fu_633_p2;
wire   [31:0] select_ln59_fu_639_p3;
wire   [31:0] add_ln69_fu_647_p2;
wire   [0:0] icmp_ln878_fu_653_p2;
wire   [0:0] icmp_ln531_fu_668_p2;
wire   [0:0] and_ln531_fu_674_p2;
reg   [9:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_solveNextPatchPair_fu_322_ap_start_reg = 1'b0;
end

makePatches_ShadowQuilt_fromEdges_patches_parameters #(
    .DataWidth( 32 ),
    .AddressRange( 3840 ),
    .AddressWidth( 12 ))
patches_parameters_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_solveNextPatchPair_fu_322_patches_parameters_address0),
    .ce0(grp_solveNextPatchPair_fu_322_patches_parameters_ce0),
    .we0(grp_solveNextPatchPair_fu_322_patches_parameters_we0),
    .d0(grp_solveNextPatchPair_fu_322_patches_parameters_d0),
    .q0(patches_parameters_q0),
    .address1(grp_solveNextPatchPair_fu_322_patches_parameters_address1),
    .ce1(grp_solveNextPatchPair_fu_322_patches_parameters_ce1),
    .we1(grp_solveNextPatchPair_fu_322_patches_parameters_we1),
    .d1(grp_solveNextPatchPair_fu_322_patches_parameters_d1),
    .q1(patches_parameters_q1)
);

makePatches_ShadowQuilt_fromEdges_GDarrayDecoded_V #(
    .DataWidth( 32 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
GDarrayDecoded_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(GDarrayDecoded_V_address0),
    .ce0(GDarrayDecoded_V_ce0),
    .we0(GDarrayDecoded_V_we0),
    .d0(GDarrayDecoded_V_d0),
    .q0(GDarrayDecoded_V_q0),
    .address1(GDarrayDecoded_V_address1),
    .ce1(GDarrayDecoded_V_ce1),
    .we1(GDarrayDecoded_V_we1),
    .d1(GDarrayDecoded_V_d1),
    .q1(GDarrayDecoded_V_q1)
);

makePatches_ShadowQuilt_fromEdges_solveNextPatchPair grp_solveNextPatchPair_fu_322(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_solveNextPatchPair_fu_322_ap_start),
    .ap_done(grp_solveNextPatchPair_fu_322_ap_done),
    .ap_idle(grp_solveNextPatchPair_fu_322_ap_idle),
    .ap_ready(grp_solveNextPatchPair_fu_322_ap_ready),
    .n_patches_i(n_patches_i),
    .n_patches_o(grp_solveNextPatchPair_fu_322_n_patches_o),
    .n_patches_o_ap_vld(grp_solveNextPatchPair_fu_322_n_patches_o_ap_vld),
    .GDn_points_address0(grp_solveNextPatchPair_fu_322_GDn_points_address0),
    .GDn_points_ce0(grp_solveNextPatchPair_fu_322_GDn_points_ce0),
    .GDn_points_q0(GDn_points_q0),
    .patches_superpoints_address0(grp_solveNextPatchPair_fu_322_patches_superpoints_address0),
    .patches_superpoints_ce0(grp_solveNextPatchPair_fu_322_patches_superpoints_ce0),
    .patches_superpoints_we0(grp_solveNextPatchPair_fu_322_patches_superpoints_we0),
    .patches_superpoints_d0(grp_solveNextPatchPair_fu_322_patches_superpoints_d0),
    .patches_superpoints_q0(patches_superpoints_q0),
    .patches_superpoints_address1(grp_solveNextPatchPair_fu_322_patches_superpoints_address1),
    .patches_superpoints_ce1(grp_solveNextPatchPair_fu_322_patches_superpoints_ce1),
    .patches_superpoints_q1(patches_superpoints_q1),
    .apexZ0(saved_apexZ0_fu_156),
    .ppl(ppl),
    .p_read1(nPatchesInColumn_reg_253),
    .p_read4(z_top_min_V_0_reg_310),
    .z_top_max_read(z_top_max_V_125_reg_276),
    .p_read7(complementary_apexZ0_V_0_reg_298),
    .GDarrayDecoded_address0(grp_solveNextPatchPair_fu_322_GDarrayDecoded_address0),
    .GDarrayDecoded_ce0(grp_solveNextPatchPair_fu_322_GDarrayDecoded_ce0),
    .GDarrayDecoded_q0(GDarrayDecoded_V_q0),
    .GDarrayDecoded_address1(grp_solveNextPatchPair_fu_322_GDarrayDecoded_address1),
    .GDarrayDecoded_ce1(grp_solveNextPatchPair_fu_322_GDarrayDecoded_ce1),
    .GDarrayDecoded_q1(GDarrayDecoded_V_q1),
    .patches_parameters_address0(grp_solveNextPatchPair_fu_322_patches_parameters_address0),
    .patches_parameters_ce0(grp_solveNextPatchPair_fu_322_patches_parameters_ce0),
    .patches_parameters_we0(grp_solveNextPatchPair_fu_322_patches_parameters_we0),
    .patches_parameters_d0(grp_solveNextPatchPair_fu_322_patches_parameters_d0),
    .patches_parameters_q0(patches_parameters_q0),
    .patches_parameters_address1(grp_solveNextPatchPair_fu_322_patches_parameters_address1),
    .patches_parameters_ce1(grp_solveNextPatchPair_fu_322_patches_parameters_ce1),
    .patches_parameters_we1(grp_solveNextPatchPair_fu_322_patches_parameters_we1),
    .patches_parameters_d1(grp_solveNextPatchPair_fu_322_patches_parameters_d1),
    .patches_parameters_q1(patches_parameters_q1),
    .ap_return_0(grp_solveNextPatchPair_fu_322_ap_return_0),
    .ap_return_1(grp_solveNextPatchPair_fu_322_ap_return_1),
    .ap_return_2(grp_solveNextPatchPair_fu_322_ap_return_2),
    .ap_return_3(grp_solveNextPatchPair_fu_322_ap_return_3),
    .ap_return_4(grp_solveNextPatchPair_fu_322_ap_return_4),
    .ap_return_5(grp_solveNextPatchPair_fu_322_ap_return_5),
    .ap_return_6(grp_solveNextPatchPair_fu_322_ap_return_6)
);

makePatches_ShadowQuilt_fromEdges_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U212(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_i_i_reg_783),
    .din1(32'd1084227584),
    .ce(1'b1),
    .dout(grp_fu_350_p2)
);

makePatches_ShadowQuilt_fromEdges_sitofp_32ns_32_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32ns_32_2_no_dsp_1_U213(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(saved_apexZ0_fu_156),
    .ce(1'b1),
    .dout(grp_fu_355_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_solveNextPatchPair_fu_322_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == and_ln531_1_fu_680_p2))) begin
            grp_solveNextPatchPair_fu_322_ap_start_reg <= 1'b1;
        end else if ((grp_solveNextPatchPair_fu_322_ap_ready == 1'b1)) begin
            grp_solveNextPatchPair_fu_322_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln474_reg_741 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_reg_219 <= select_ln474_1_reg_750;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        a_reg_219 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln474_fu_364_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_reg_230 <= add_ln476_fu_415_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        b_reg_230 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        complementary_apexZ0_V_0_reg_298 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (grp_solveNextPatchPair_fu_322_ap_done == 1'b1))) begin
        complementary_apexZ0_V_0_reg_298 <= grp_solveNextPatchPair_fu_322_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln474_fu_364_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_208 <= add_ln474_1_fu_358_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_208 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        nPatchesInColumn_reg_253 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (grp_solveNextPatchPair_fu_322_ap_done == 1'b1))) begin
        nPatchesInColumn_reg_253 <= grp_solveNextPatchPair_fu_322_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        phi_ln531_reg_265 <= 1'd1;
    end else if (((1'b1 == ap_CS_fsm_state11) & (grp_solveNextPatchPair_fu_322_ap_done == 1'b1))) begin
        phi_ln531_reg_265 <= icmp_ln515_1_fu_720_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        phi_ln886_reg_287 <= 1'd1;
    end else if (((1'b1 == ap_CS_fsm_state11) & (grp_solveNextPatchPair_fu_322_ap_done == 1'b1))) begin
        phi_ln886_reg_287 <= icmp_ln515_fu_714_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        saved_apexZ0_fu_156 <= 32'd22000100;
    end else if (((1'b1 == ap_CS_fsm_state11) & (grp_solveNextPatchPair_fu_322_ap_done == 1'b1))) begin
        saved_apexZ0_fu_156 <= grp_solveNextPatchPair_fu_322_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln504_reg_779 == 1'd0))) begin
        z_top_max_V_125_ph_reg_241 <= select_ln506_fu_659_p3;
    end else if (((icmp_ln504_fu_502_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln886_fu_496_p2 == 1'd1))) begin
        z_top_max_V_125_ph_reg_241 <= 32'd50000000;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        z_top_max_V_125_reg_276 <= ap_phi_mux_z_top_max_V_125_ph_phi_fu_245_p4;
    end else if (((1'b1 == ap_CS_fsm_state11) & (grp_solveNextPatchPair_fu_322_ap_done == 1'b1))) begin
        z_top_max_V_125_reg_276 <= grp_solveNextPatchPair_fu_322_ap_return_5;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        z_top_min_V_0_reg_310 <= 32'd4244967296;
    end else if (((1'b1 == ap_CS_fsm_state11) & (grp_solveNextPatchPair_fu_322_ap_done == 1'b1))) begin
        z_top_min_V_0_reg_310 <= grp_solveNextPatchPair_fu_322_ap_return_6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_i_i_reg_783 <= grp_fu_355_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        dc_reg_788 <= grp_fu_350_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln474_reg_741 <= icmp_ln474_fu_364_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln886_fu_496_p2 == 1'd1))) begin
        icmp_ln504_reg_779 <= icmp_ln504_fu_502_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln474_fu_364_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln474_1_reg_750 <= select_ln474_1_fu_390_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln474_fu_364_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln474_reg_745 <= select_ln474_fu_382_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        GDarrayDecoded_V_address0 = zext_ln479_fu_466_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        GDarrayDecoded_V_address0 = grp_solveNextPatchPair_fu_322_GDarrayDecoded_address0;
    end else begin
        GDarrayDecoded_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        GDarrayDecoded_V_address1 = zext_ln478_2_fu_449_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        GDarrayDecoded_V_address1 = grp_solveNextPatchPair_fu_322_GDarrayDecoded_address1;
    end else begin
        GDarrayDecoded_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        GDarrayDecoded_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        GDarrayDecoded_V_ce0 = grp_solveNextPatchPair_fu_322_GDarrayDecoded_ce0;
    end else begin
        GDarrayDecoded_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        GDarrayDecoded_V_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        GDarrayDecoded_V_ce1 = grp_solveNextPatchPair_fu_322_GDarrayDecoded_ce1;
    end else begin
        GDarrayDecoded_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln474_reg_741 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        GDarrayDecoded_V_we0 = 1'b1;
    end else begin
        GDarrayDecoded_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln474_reg_741 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        GDarrayDecoded_V_we1 = 1'b1;
    end else begin
        GDarrayDecoded_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        GDarray_ce0 = 1'b1;
    end else begin
        GDarray_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln474_fu_364_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln886_fu_496_p2 == 1'd0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln474_reg_741 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_a_phi_fu_223_p4 = select_ln474_1_reg_750;
    end else begin
        ap_phi_mux_a_phi_fu_223_p4 = a_reg_219;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln504_reg_779 == 1'd0))) begin
        ap_phi_mux_z_top_max_V_125_ph_phi_fu_245_p4 = select_ln506_fu_659_p3;
    end else begin
        ap_phi_mux_z_top_max_V_125_ph_phi_fu_245_p4 = z_top_max_V_125_ph_reg_241;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln886_fu_496_p2 == 1'd0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (grp_solveNextPatchPair_fu_322_n_patches_o_ap_vld == 1'b1))) begin
        n_patches_o = grp_solveNextPatchPair_fu_322_n_patches_o;
    end else begin
        n_patches_o = n_patches_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        n_patches_o_ap_vld = grp_solveNextPatchPair_fu_322_n_patches_o_ap_vld;
    end else begin
        n_patches_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln474_fu_364_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln474_fu_364_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln886_fu_496_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((icmp_ln504_fu_502_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln886_fu_496_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'd0 == and_ln531_1_fu_680_p2) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (grp_solveNextPatchPair_fu_322_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign GDarrayDecoded_V_d0 = GDarray_q0[31:0];

assign GDarrayDecoded_V_d1 = {{GDarray_q0[63:32]}};

assign GDarray_address0 = zext_ln478_1_fu_410_p1;

assign GDn_points_address0 = grp_solveNextPatchPair_fu_322_GDn_points_address0;

assign GDn_points_ce0 = grp_solveNextPatchPair_fu_322_GDn_points_ce0;

assign add_ln341_fu_551_p2 = ($signed(zext_ln341_fu_547_p1) + $signed(9'd385));

assign add_ln474_1_fu_358_p2 = (indvar_flatten_reg_208 + 10'd1);

assign add_ln474_fu_370_p2 = (ap_phi_mux_a_phi_fu_223_p4 + 3'd1);

assign add_ln476_fu_415_p2 = (select_ln474_fu_382_p3 + 8'd1);

assign add_ln478_fu_435_p2 = (tmp_105_cast_fu_428_p1 + zext_ln478_fu_432_p1);

assign add_ln69_fu_647_p2 = (select_ln59_fu_639_p3 + 32'd60000000);

assign and_ln531_1_fu_680_p2 = (phi_ln886_reg_287 & and_ln531_fu_674_p2);

assign and_ln531_fu_674_p2 = (phi_ln531_reg_265 & icmp_ln531_fu_668_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign data_V_fu_508_p1 = dc_reg_788;

assign grp_solveNextPatchPair_fu_322_ap_start = grp_solveNextPatchPair_fu_322_ap_start_reg;

assign icmp_ln474_fu_364_p2 = ((indvar_flatten_reg_208 == 10'd640) ? 1'b1 : 1'b0);

assign icmp_ln476_fu_376_p2 = ((b_reg_230 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln504_fu_502_p2 = ((n_patches_i == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln515_1_fu_720_p2 = (($signed(grp_solveNextPatchPair_fu_322_ap_return_3) < $signed(32'd15000000)) ? 1'b1 : 1'b0);

assign icmp_ln515_fu_714_p2 = (($signed(grp_solveNextPatchPair_fu_322_ap_return_2) > $signed(32'd4244967196)) ? 1'b1 : 1'b0);

assign icmp_ln531_fu_668_p2 = (($signed(nPatchesInColumn_reg_253) < $signed(32'd100000000)) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_653_p2 = (($signed(add_ln69_fu_647_p2) > $signed(32'd50000000)) ? 1'b1 : 1'b0);

assign icmp_ln886_fu_496_p2 = (($signed(saved_apexZ0_fu_156) > $signed(32'd4272967196)) ? 1'b1 : 1'b0);

assign isNeg_fu_557_p3 = add_ln341_fu_551_p2[32'd8];

assign mantissa_fu_533_p4 = {{{{1'd1}, {tmp_69_fu_529_p1}}}, {1'd0}};

assign or_ln479_fu_460_p2 = (shl_ln478_fu_454_p2 | 11'd1);

assign p_Result_s_fu_511_p3 = data_V_fu_508_p1[32'd31];

assign patches_superpoints_address0 = grp_solveNextPatchPair_fu_322_patches_superpoints_address0;

assign patches_superpoints_address1 = grp_solveNextPatchPair_fu_322_patches_superpoints_address1;

assign patches_superpoints_ce0 = grp_solveNextPatchPair_fu_322_patches_superpoints_ce0;

assign patches_superpoints_ce1 = grp_solveNextPatchPair_fu_322_patches_superpoints_ce1;

assign patches_superpoints_d0 = grp_solveNextPatchPair_fu_322_patches_superpoints_d0;

assign patches_superpoints_we0 = grp_solveNextPatchPair_fu_322_patches_superpoints_we0;

assign r_V_10_fu_597_p2 = zext_ln15_fu_543_p1 << sh_prom_i_i_i_i_i_i_cast_cast_cast_cast_fu_587_p1;

assign r_V_fu_591_p2 = zext_ln15_fu_543_p1 >> sh_prom_i_i_i_i_i_i_cast_cast_cast_cast_fu_587_p1;

assign result_V_6_fu_633_p2 = (32'd0 - val_fu_625_p3);

assign select_ln474_1_fu_390_p3 = ((icmp_ln476_fu_376_p2[0:0] == 1'b1) ? add_ln474_fu_370_p2 : ap_phi_mux_a_phi_fu_223_p4);

assign select_ln474_fu_382_p3 = ((icmp_ln476_fu_376_p2[0:0] == 1'b1) ? 8'd0 : b_reg_230);

assign select_ln506_fu_659_p3 = ((icmp_ln878_fu_653_p2[0:0] == 1'b1) ? 32'd50000000 : add_ln69_fu_647_p2);

assign select_ln59_fu_639_p3 = ((p_Result_s_fu_511_p3[0:0] == 1'b1) ? result_V_6_fu_633_p2 : val_fu_625_p3);

assign sext_ln1311_fu_571_p1 = $signed(sub_ln1311_fu_565_p2);

assign sh_prom_i_i_i_i_i_i_cast_cast_cast_cast_fu_587_p1 = $unsigned(sh_prom_i_i_i_i_i_i_cast_cast_cast_fu_583_p1);

assign sh_prom_i_i_i_i_i_i_cast_cast_cast_fu_583_p1 = $signed(ush_fu_575_p3);

assign shl_ln478_fu_454_p2 = add_ln478_fu_435_p2 << 11'd1;

assign sub_ln1311_fu_565_p2 = (8'd127 - tmp_68_fu_519_p4);

assign tmp_105_cast_fu_428_p1 = tmp_s_fu_421_p3;

assign tmp_44_fu_402_p3 = {{select_ln474_1_fu_390_p3}, {trunc_ln478_fu_398_p1}};

assign tmp_65_fu_441_p3 = {{add_ln478_fu_435_p2}, {1'd0}};

assign tmp_67_fu_615_p4 = {{r_V_10_fu_597_p2[55:24]}};

assign tmp_68_fu_519_p4 = {{data_V_fu_508_p1[30:23]}};

assign tmp_69_fu_529_p1 = data_V_fu_508_p1[22:0];

assign tmp_fu_603_p3 = r_V_fu_591_p2[32'd24];

assign tmp_s_fu_421_p3 = {{select_ln474_1_reg_750}, {7'd0}};

assign trunc_ln478_fu_398_p1 = select_ln474_fu_382_p3[6:0];

assign ush_fu_575_p3 = ((isNeg_fu_557_p3[0:0] == 1'b1) ? sext_ln1311_fu_571_p1 : add_ln341_fu_551_p2);

assign val_fu_625_p3 = ((isNeg_fu_557_p3[0:0] == 1'b1) ? zext_ln662_fu_611_p1 : tmp_67_fu_615_p4);

assign zext_ln15_fu_543_p1 = mantissa_fu_533_p4;

assign zext_ln341_fu_547_p1 = tmp_68_fu_519_p4;

assign zext_ln478_1_fu_410_p1 = tmp_44_fu_402_p3;

assign zext_ln478_2_fu_449_p1 = tmp_65_fu_441_p3;

assign zext_ln478_fu_432_p1 = select_ln474_reg_745;

assign zext_ln479_fu_466_p1 = or_ln479_fu_460_p2;

assign zext_ln662_fu_611_p1 = tmp_fu_603_p3;

endmodule //makePatches_ShadowQuilt_fromEdges
