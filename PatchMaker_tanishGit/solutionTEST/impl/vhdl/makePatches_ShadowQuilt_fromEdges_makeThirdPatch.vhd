-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity makePatches_ShadowQuilt_fromEdges_makeThirdPatch is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    n_patches_i : IN STD_LOGIC_VECTOR (7 downto 0);
    n_patches_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    n_patches_o_ap_vld : OUT STD_LOGIC;
    GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    GDn_points_ce0 : OUT STD_LOGIC;
    GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    patches_superpoints_ce0 : OUT STD_LOGIC;
    patches_superpoints_we0 : OUT STD_LOGIC;
    patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    patches_superpoints_ce1 : OUT STD_LOGIC;
    patches_superpoints_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    lastPatchIndex : IN STD_LOGIC_VECTOR (7 downto 0);
    z_top_min : IN STD_LOGIC_VECTOR (31 downto 0);
    z_top_max : IN STD_LOGIC_VECTOR (31 downto 0);
    complementary_apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
    apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
    ppl : IN STD_LOGIC_VECTOR (31 downto 0);
    GDarrayDecoded_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    GDarrayDecoded_ce0 : OUT STD_LOGIC;
    GDarrayDecoded_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    GDarrayDecoded_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    GDarrayDecoded_ce1 : OUT STD_LOGIC;
    GDarrayDecoded_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    patches_parameters_ce0 : OUT STD_LOGIC;
    patches_parameters_we0 : OUT STD_LOGIC;
    patches_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    patches_parameters_ce1 : OUT STD_LOGIC;
    patches_parameters_we1 : OUT STD_LOGIC;
    patches_parameters_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    temp_V_ce0 : OUT STD_LOGIC;
    temp_V_we0 : OUT STD_LOGIC;
    temp_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    temp_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_V_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    temp_V_ce1 : OUT STD_LOGIC;
    temp_V_we1 : OUT STD_LOGIC;
    temp_V_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1833_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1833_p_din2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1833_p_din3 : OUT STD_LOGIC_VECTOR (2 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1833_p_din4 : OUT STD_LOGIC_VECTOR (2 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1833_p_din5 : OUT STD_LOGIC_VECTOR (2 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1833_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1833_p_ce : OUT STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1833_p_start : OUT STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1833_p_ready : IN STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1833_p_done : IN STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1833_p_idle : IN STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1842_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1842_p_din2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1842_p_din3 : OUT STD_LOGIC_VECTOR (2 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1842_p_din4 : OUT STD_LOGIC_VECTOR (2 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1842_p_din5 : OUT STD_LOGIC_VECTOR (2 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1842_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_straightLineProjectorFromLayerIJtoK_fu_1842_p_ce : OUT STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1842_p_start : OUT STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1842_p_ready : IN STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1842_p_done : IN STD_LOGIC;
    grp_straightLineProjectorFromLayerIJtoK_fu_1842_p_idle : IN STD_LOGIC;
    grp_fu_660_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_660_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_660_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_660_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_660_p_ce : OUT STD_LOGIC;
    grp_fu_1851_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1851_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_1851_p_ce : OUT STD_LOGIC );
end;


architecture behav of makePatches_ShadowQuilt_fromEdges_makeThirdPatch is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state87 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state89 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state90 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state91 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state92 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state93 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state94 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state95 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state96 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state97 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state98 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state99 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state100 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state101 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state102 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state103 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state104 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state105 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state106 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state107 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state108 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state109 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state110 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state111 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state112 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state113 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state114 : STD_LOGIC_VECTOR (123 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state115 : STD_LOGIC_VECTOR (123 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state116 : STD_LOGIC_VECTOR (123 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state117 : STD_LOGIC_VECTOR (123 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state118 : STD_LOGIC_VECTOR (123 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state119 : STD_LOGIC_VECTOR (123 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state120 : STD_LOGIC_VECTOR (123 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state121 : STD_LOGIC_VECTOR (123 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state122 : STD_LOGIC_VECTOR (123 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state123 : STD_LOGIC_VECTOR (123 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state124 : STD_LOGIC_VECTOR (123 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011011";
    constant ap_const_lv32_79 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_59 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011001";
    constant ap_const_lv32_5E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011110";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_61 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100001";
    constant ap_const_lv32_62 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100010";
    constant ap_const_lv32_7A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111010";
    constant ap_const_lv32_6D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101101";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_5C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011100";
    constant ap_const_lv32_5D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011101";
    constant ap_const_lv32_5A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_6E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101110";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv32_7B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111011";
    constant ap_const_lv32_FFF0BDC0 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111100001011110111000000";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv64_41B1E1A300000000 : STD_LOGIC_VECTOR (63 downto 0) := "0100000110110001111000011010001100000000000000000000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv12_24 : STD_LOGIC_VECTOR (11 downto 0) := "000000100100";
    constant ap_const_lv12_2A : STD_LOGIC_VECTOR (11 downto 0) := "000000101010";
    constant ap_const_lv12_1E : STD_LOGIC_VECTOR (11 downto 0) := "000000011110";
    constant ap_const_lv12_18 : STD_LOGIC_VECTOR (11 downto 0) := "000000011000";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv33_1FFFFFF9C : STD_LOGIC_VECTOR (32 downto 0) := "111111111111111111111111110011100";
    constant ap_const_lv33_32 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000110010";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_A0 : STD_LOGIC_VECTOR (7 downto 0) := "10100000";
    constant ap_const_lv7_20 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_78 : STD_LOGIC_VECTOR (6 downto 0) := "1111000";
    constant ap_const_lv6_18 : STD_LOGIC_VECTOR (5 downto 0) := "011000";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv32_E4E1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000111001001110000111000000";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_FD : STD_LOGIC_VECTOR (7 downto 0) := "11111101";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (123 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1074_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1145 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal reg_1150 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state81 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state81 : signal is "none";
    signal or_ln791_1_fu_1740_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln791_1_fu_1792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_779_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln791_2_fu_1753_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state92 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state92 : signal is "none";
    signal ap_CS_fsm_state122 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state122 : signal is "none";
    signal and_ln857_fu_2618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln732_fu_1156_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln732_reg_2662 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln720_fu_1161_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln720_reg_2668 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln732_fu_1202_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln732_reg_2673 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal trunc_ln723_fu_1208_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln723_reg_2681 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln723_fu_1233_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln723_reg_2686 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln721_fu_1239_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln721_reg_2694 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal original_topR_jL_V_reg_2722 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln724_fu_1254_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln724_reg_2729 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal patches_parameters_addr_14_reg_2738 : STD_LOGIC_VECTOR (11 downto 0);
    signal patches_parameters_addr_15_reg_2743 : STD_LOGIC_VECTOR (11 downto 0);
    signal patches_parameters_addr_16_reg_2748 : STD_LOGIC_VECTOR (11 downto 0);
    signal patches_parameters_addr_17_reg_2753 : STD_LOGIC_VECTOR (11 downto 0);
    signal patches_parameters_addr_13_reg_2758 : STD_LOGIC_VECTOR (11 downto 0);
    signal patches_parameters_addr_18_reg_2763 : STD_LOGIC_VECTOR (11 downto 0);
    signal patches_parameters_addr_19_reg_2768 : STD_LOGIC_VECTOR (11 downto 0);
    signal bitcast_ln521_fu_1342_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal notlhs39_fu_1361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs39_reg_2778 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs40_fu_1367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs40_reg_2783 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_87_fu_1383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal original_topL_jL_V_3_reg_2793 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal grp_fu_1123_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_3_reg_2800 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_3_fu_1402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_3_reg_2804 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln521_3_fu_1420_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal notlhs37_fu_1439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs37_reg_2813 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs38_fu_1445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs38_reg_2818 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_92_fu_1461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal complementary_topR_jR_V_3_reg_2828 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal and_ln734_fu_1486_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln734_reg_2835 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln521_4_fu_1504_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal notlhs35_fu_1523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs35_reg_2844 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs36_fu_1529_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs36_reg_2849 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_97_fu_1545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal complementary_topL_jR_V_3_reg_2859 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal icmp_ln886_5_reg_2866 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_5_fu_1564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_5_reg_2870 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln521_5_fu_1582_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal notlhs_fu_1601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_reg_2879 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs_fu_1607_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs_reg_2884 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_102_fu_1623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal or_ln791_fu_1629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln791_reg_2915 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln791_2_fu_1649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln791_2_reg_2920 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal complementary_topR_jL_V_reg_2925 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal complementary_topL_jL_V_reg_2930 : STD_LOGIC_VECTOR (31 downto 0);
    signal horizontalShiftTop_fu_1655_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state80 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal horizontalShiftBottom_fu_1659_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln774_fu_1696_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shiftOriginal_1_fu_1700_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shiftOriginal_1_reg_2960 : STD_LOGIC_VECTOR (0 downto 0);
    signal leftRight_fu_1712_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal leftRight_reg_2974 : STD_LOGIC_VECTOR (0 downto 0);
    signal newZtop_V_2_fu_1718_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newZtop_V_2_reg_2979 : STD_LOGIC_VECTOR (31 downto 0);
    signal shifted_Align_5_fu_1828_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal shifted_Align_5_reg_2994 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln164_fu_1835_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln164_reg_3000 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln811_fu_1843_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln811_reg_3005 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state82 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state82 : signal is "none";
    signal add_ln1116_1_fu_1850_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state84 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state84 : signal is "none";
    signal select_ln1116_1_fu_1900_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln1116_fu_1856_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1118_2_fu_1960_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1120_fu_1987_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln1118_3_fu_1999_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal apexZ0_V_fu_2007_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal apexZ0_V_reg_3038 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state85 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state85 : signal is "none";
    signal add_ln1134_fu_2010_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln1134_reg_3044 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state86 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state86 : signal is "none";
    signal icmp_ln1134_fu_2016_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state87 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state87 : signal is "none";
    signal add_ln1141_1_fu_2039_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state88 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state88 : signal is "none";
    signal select_ln1141_1_fu_2089_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln1141_fu_2045_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1143_2_fu_2149_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1145_fu_2176_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln1143_3_fu_2188_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1153_1_fu_2196_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state90 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state90 : signal is "none";
    signal select_ln1153_1_fu_2246_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln1153_fu_2202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1155_1_fu_2274_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln1157_fu_2331_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln1155_2_fu_2343_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln817_fu_2359_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln817_reg_3117 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state95 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state95 : signal is "none";
    signal sub_ln821_fu_2386_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln821_reg_3122 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln817_1_fu_2392_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln817_1_reg_3130 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state97 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state97 : signal is "none";
    signal ap_CS_fsm_state98 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state98 : signal is "none";
    signal original_topL_jL_V_4_fu_2439_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topL_jL_V_4_reg_3155 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topR_jL_V_3_fu_2446_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topR_jL_V_3_reg_3162 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topR_jL_V_3_fu_2453_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topR_jL_V_3_reg_3169 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topL_jL_V_3_fu_2460_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topL_jL_V_3_reg_3175 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topR_jR_V_4_fu_2467_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topR_jR_V_4_reg_3181 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state99 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state99 : signal is "none";
    signal complementary_topL_jR_V_4_fu_2474_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topL_jR_V_4_reg_3186 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topR_jR_V_3_fu_2481_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topR_jR_V_3_reg_3191 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topL_jR_V_3_fu_2489_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topL_jR_V_3_reg_3198 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_18_fu_2496_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_18_reg_3204 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_19_fu_2499_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_19_reg_3209 : STD_LOGIC_VECTOR (32 downto 0);
    signal horizontalShiftTop_1_fu_2503_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal horizontalShiftTop_1_reg_3214 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_20_fu_2508_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_20_reg_3219 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_21_fu_2511_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_21_reg_3224 : STD_LOGIC_VECTOR (32 downto 0);
    signal horizontalShiftBottom_1_fu_2515_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal horizontalShiftBottom_1_reg_3229 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln857_reg_3237 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln859_fu_2623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln859_reg_3241 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln861_fu_2635_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln861_reg_3245 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state123 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state123 : signal is "none";
    signal init_patch_V_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal init_patch_V_0_ce0 : STD_LOGIC;
    signal init_patch_V_0_we0 : STD_LOGIC;
    signal init_patch_V_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal init_patch_V_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal init_patch_V_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal init_patch_V_1_ce0 : STD_LOGIC;
    signal init_patch_V_1_we0 : STD_LOGIC;
    signal init_patch_V_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal init_patch_V_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal init_patch_V_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal init_patch_V_2_ce0 : STD_LOGIC;
    signal init_patch_V_2_we0 : STD_LOGIC;
    signal init_patch_V_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal init_patch_V_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal init_patch_V_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal init_patch_V_3_ce0 : STD_LOGIC;
    signal init_patch_V_3_we0 : STD_LOGIC;
    signal init_patch_V_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal init_patch_V_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal init_patch_V_4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal init_patch_V_4_ce0 : STD_LOGIC;
    signal init_patch_V_4_we0 : STD_LOGIC;
    signal init_patch_V_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal init_patch_V_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_0_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_superpoints_0_V_ce0 : STD_LOGIC;
    signal NPpatches_superpoints_0_V_we0 : STD_LOGIC;
    signal NPpatches_superpoints_0_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_0_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_0_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_superpoints_0_V_ce1 : STD_LOGIC;
    signal NPpatches_superpoints_0_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_1_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_superpoints_1_V_ce0 : STD_LOGIC;
    signal NPpatches_superpoints_1_V_we0 : STD_LOGIC;
    signal NPpatches_superpoints_1_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_1_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_1_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_superpoints_1_V_ce1 : STD_LOGIC;
    signal NPpatches_superpoints_1_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_2_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_superpoints_2_V_ce0 : STD_LOGIC;
    signal NPpatches_superpoints_2_V_we0 : STD_LOGIC;
    signal NPpatches_superpoints_2_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_2_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_2_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_superpoints_2_V_ce1 : STD_LOGIC;
    signal NPpatches_superpoints_2_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_3_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_superpoints_3_V_ce0 : STD_LOGIC;
    signal NPpatches_superpoints_3_V_we0 : STD_LOGIC;
    signal NPpatches_superpoints_3_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_3_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_3_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_superpoints_3_V_ce1 : STD_LOGIC;
    signal NPpatches_superpoints_3_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_4_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_superpoints_4_V_ce0 : STD_LOGIC;
    signal NPpatches_superpoints_4_V_we0 : STD_LOGIC;
    signal NPpatches_superpoints_4_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_4_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_4_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_superpoints_4_V_ce1 : STD_LOGIC;
    signal NPpatches_superpoints_4_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_parameters_V_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_parameters_V_0_ce0 : STD_LOGIC;
    signal NPpatches_parameters_V_0_we0 : STD_LOGIC;
    signal NPpatches_parameters_V_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_parameters_V_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_parameters_V_0_ce1 : STD_LOGIC;
    signal NPpatches_parameters_V_0_we1 : STD_LOGIC;
    signal NPpatches_parameters_V_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_parameters_V_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_parameters_V_1_ce0 : STD_LOGIC;
    signal NPpatches_parameters_V_1_we0 : STD_LOGIC;
    signal NPpatches_parameters_V_1_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal NPpatches_parameters_V_1_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal NPpatches_parameters_V_1_ce1 : STD_LOGIC;
    signal NPpatches_parameters_V_1_we1 : STD_LOGIC;
    signal NPpatches_parameters_V_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_parameters_V_2_ce0 : STD_LOGIC;
    signal NPpatches_parameters_V_2_we0 : STD_LOGIC;
    signal NPpatches_parameters_V_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_parameters_V_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_parameters_V_2_ce1 : STD_LOGIC;
    signal NPpatches_parameters_V_2_we1 : STD_LOGIC;
    signal NPpatches_parameters_V_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_parameters_V_3_ce0 : STD_LOGIC;
    signal NPpatches_parameters_V_3_we0 : STD_LOGIC;
    signal NPpatches_parameters_V_3_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal NPpatches_parameters_V_3_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal NPpatches_parameters_V_3_ce1 : STD_LOGIC;
    signal NPpatches_parameters_V_3_we1 : STD_LOGIC;
    signal NPpatches_parameters_V_4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_parameters_V_4_ce0 : STD_LOGIC;
    signal NPpatches_parameters_V_4_we0 : STD_LOGIC;
    signal NPpatches_parameters_V_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_parameters_V_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_parameters_V_4_ce1 : STD_LOGIC;
    signal NPpatches_parameters_V_4_we1 : STD_LOGIC;
    signal NPpatches_parameters_V_4_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_add_patch6_fu_986_ap_start : STD_LOGIC;
    signal grp_add_patch6_fu_986_ap_done : STD_LOGIC;
    signal grp_add_patch6_fu_986_ap_idle : STD_LOGIC;
    signal grp_add_patch6_fu_986_ap_ready : STD_LOGIC;
    signal grp_add_patch6_fu_986_n_patches : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_add_patch6_fu_986_n_patches_ap_vld : STD_LOGIC;
    signal grp_add_patch6_fu_986_patches_superpoints_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_add_patch6_fu_986_patches_superpoints_ce0 : STD_LOGIC;
    signal grp_add_patch6_fu_986_patches_superpoints_we0 : STD_LOGIC;
    signal grp_add_patch6_fu_986_patches_superpoints_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch6_fu_986_wp_superpoints_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch6_fu_986_wp_superpoints_ce0 : STD_LOGIC;
    signal grp_add_patch6_fu_986_wp_superpoints_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch6_fu_986_wp_superpoints_ce1 : STD_LOGIC;
    signal grp_add_patch6_fu_986_wp_superpoints1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch6_fu_986_wp_superpoints1_ce0 : STD_LOGIC;
    signal grp_add_patch6_fu_986_wp_superpoints1_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch6_fu_986_wp_superpoints1_ce1 : STD_LOGIC;
    signal grp_add_patch6_fu_986_wp_superpoints2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch6_fu_986_wp_superpoints2_ce0 : STD_LOGIC;
    signal grp_add_patch6_fu_986_wp_superpoints2_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch6_fu_986_wp_superpoints2_ce1 : STD_LOGIC;
    signal grp_add_patch6_fu_986_wp_superpoints3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch6_fu_986_wp_superpoints3_ce0 : STD_LOGIC;
    signal grp_add_patch6_fu_986_wp_superpoints3_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch6_fu_986_wp_superpoints3_ce1 : STD_LOGIC;
    signal grp_add_patch6_fu_986_wp_superpoints4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch6_fu_986_wp_superpoints4_ce0 : STD_LOGIC;
    signal grp_add_patch6_fu_986_wp_superpoints4_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch6_fu_986_wp_superpoints4_ce1 : STD_LOGIC;
    signal grp_add_patch6_fu_986_wp_parameters_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch6_fu_986_wp_parameters_ce0 : STD_LOGIC;
    signal grp_add_patch6_fu_986_wp_parameters5_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch6_fu_986_wp_parameters5_ce0 : STD_LOGIC;
    signal grp_add_patch6_fu_986_wp_parameters6_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch6_fu_986_wp_parameters6_ce0 : STD_LOGIC;
    signal grp_add_patch6_fu_986_wp_parameters7_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch6_fu_986_wp_parameters7_ce0 : STD_LOGIC;
    signal grp_add_patch6_fu_986_wp_parameters8_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch6_fu_986_wp_parameters8_ce0 : STD_LOGIC;
    signal grp_add_patch6_fu_986_patches_parameters_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_add_patch6_fu_986_patches_parameters_ce0 : STD_LOGIC;
    signal grp_add_patch6_fu_986_patches_parameters_we0 : STD_LOGIC;
    signal grp_add_patch6_fu_986_patches_parameters_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_ap_start : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_ap_done : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_ap_idle : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_ap_ready : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_GDn_points_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_GDn_points_ce0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch_ce0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch_we0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch1_ce0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch1_we0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch2_ce0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch2_we0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch3_ce0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch3_we0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch4_ce0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch4_we0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_GDarrayDecoded_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_GDarrayDecoded_ce0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_GDarrayDecoded_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_GDarrayDecoded_ce1 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_temp_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_temp_V_ce0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_temp_V_we0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_temp_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_temp_V_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_temp_V_ce1 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_temp_V_we1 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_temp_V_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_wedgePatch_init_fu_1034_ap_start : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_ap_done : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_ap_idle : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_ap_ready : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_superpoints_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_superpoints_ce0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_superpoints_we0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_superpoints_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_superpoints_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_superpoints_ce1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_superpoints1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_superpoints1_ce0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_superpoints1_we0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_superpoints1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_superpoints1_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_superpoints1_ce1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_superpoints2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_superpoints2_ce0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_superpoints2_we0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_superpoints2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_superpoints2_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_superpoints2_ce1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_superpoints3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_superpoints3_ce0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_superpoints3_we0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_superpoints3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_superpoints3_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_superpoints3_ce1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_superpoints4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_superpoints4_ce0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_superpoints4_we0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_superpoints4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_superpoints4_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_superpoints4_ce1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_parameters_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_parameters_ce0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_parameters_we0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_parameters_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_parameters_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_parameters_ce1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_parameters_we1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_parameters_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_parameters5_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_parameters5_ce0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_parameters5_we0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_parameters5_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_parameters5_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_parameters5_ce1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_parameters5_we1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_parameters5_d1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_parameters6_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_parameters6_ce0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_parameters6_we0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_parameters6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_parameters6_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_parameters6_ce1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_parameters6_we1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_parameters6_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_parameters7_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_parameters7_ce0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_parameters7_we0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_parameters7_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_parameters7_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_parameters7_ce1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_parameters7_we1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_parameters7_d1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_parameters8_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_parameters8_ce0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_parameters8_we0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_parameters8_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_parameters8_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_1034_wp_parameters8_ce1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_parameters8_we1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_wp_parameters8_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_wedgePatch_init_fu_1034_superpointsI_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_1034_superpointsI_ce0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_superpointsI9_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_1034_superpointsI9_ce0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_superpointsI10_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_1034_superpointsI10_ce0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_superpointsI11_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_1034_superpointsI11_ce0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_1034_superpointsI12_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_1034_superpointsI12_ce0 : STD_LOGIC;
    signal grp_getShadows_fu_1058_ap_start : STD_LOGIC;
    signal grp_getShadows_fu_1058_ap_done : STD_LOGIC;
    signal grp_getShadows_fu_1058_ap_idle : STD_LOGIC;
    signal grp_getShadows_fu_1058_ap_ready : STD_LOGIC;
    signal grp_getShadows_fu_1058_patches_superpoints_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_getShadows_fu_1058_patches_superpoints_ce0 : STD_LOGIC;
    signal grp_getShadows_fu_1058_wp_superpoints : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_getShadows_fu_1058_wp_parameters_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_getShadows_fu_1058_wp_parameters_ce0 : STD_LOGIC;
    signal grp_getShadows_fu_1058_wp_parameters_we0 : STD_LOGIC;
    signal grp_getShadows_fu_1058_wp_parameters_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getShadows_fu_1058_wp_parameters_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_getShadows_fu_1058_wp_parameters_ce1 : STD_LOGIC;
    signal grp_getShadows_fu_1058_wp_parameters_we1 : STD_LOGIC;
    signal grp_getShadows_fu_1058_wp_parameters_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getShadows_fu_1058_wp_parameters_offset : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1074_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1074_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1074_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1074_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1074_ap_ce : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1074_z_i : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1074_z_j : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1074_i : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1074_j : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1074_k : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1088_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1088_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1088_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1088_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1088_ap_ce : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1088_z_i : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1088_z_j : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1088_i : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1088_j : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1088_k : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1088_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_delete_patch_fu_1103_ap_start : STD_LOGIC;
    signal grp_delete_patch_fu_1103_ap_done : STD_LOGIC;
    signal grp_delete_patch_fu_1103_ap_idle : STD_LOGIC;
    signal grp_delete_patch_fu_1103_ap_ready : STD_LOGIC;
    signal grp_delete_patch_fu_1103_n_patches : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_delete_patch_fu_1103_n_patches_ap_vld : STD_LOGIC;
    signal grp_delete_patch_fu_1103_patches_superpoints_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_delete_patch_fu_1103_patches_superpoints_ce0 : STD_LOGIC;
    signal grp_delete_patch_fu_1103_patches_superpoints_we0 : STD_LOGIC;
    signal grp_delete_patch_fu_1103_patches_superpoints_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_delete_patch_fu_1103_patches_superpoints_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_delete_patch_fu_1103_patches_superpoints_ce1 : STD_LOGIC;
    signal grp_delete_patch_fu_1103_index : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_delete_patch_fu_1103_patches_parameters_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_delete_patch_fu_1103_patches_parameters_V_ce0 : STD_LOGIC;
    signal grp_delete_patch_fu_1103_patches_parameters_V_we0 : STD_LOGIC;
    signal grp_delete_patch_fu_1103_patches_parameters_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_delete_patch_fu_1103_patches_parameters_V_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_delete_patch_fu_1103_patches_parameters_V_ce1 : STD_LOGIC;
    signal empty_88_reg_611 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_93_reg_623 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_98_reg_638 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_103_reg_650 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_104_reg_664 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state110 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state110 : signal is "none";
    signal empty_105_reg_673 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topR_jR_V_reg_682 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topL_jL_V_reg_692 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topR_jL_V_1_reg_702 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topL_jR_V_reg_712 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topR_jL_V_1_reg_722 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_topL_jL_V_1_reg_732 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topR_jR_V_1_reg_742 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_topL_jR_V_1_reg_752 : STD_LOGIC_VECTOR (31 downto 0);
    signal newZtop_V_reg_762 : STD_LOGIC_VECTOR (31 downto 0);
    signal makeHorizontallyShiftedPatch_reg_774 : STD_LOGIC_VECTOR (0 downto 0);
    signal shifted_Align_2_reg_788 : STD_LOGIC_VECTOR (63 downto 0);
    signal indvar_flatten13_reg_797 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state83 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state83 : signal is "none";
    signal ap_block_state83_on_subcall_done : BOOLEAN;
    signal a_reg_808 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten_reg_819 : STD_LOGIC_VECTOR (6 downto 0);
    signal b_reg_830 : STD_LOGIC_VECTOR (4 downto 0);
    signal c_reg_841 : STD_LOGIC_VECTOR (1 downto 0);
    signal init_patch_size_0_reg_852 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_reg_864 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten35_reg_876 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_1_reg_887 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten21_reg_898 : STD_LOGIC_VECTOR (6 downto 0);
    signal c_1_reg_909 : STD_LOGIC_VECTOR (4 downto 0);
    signal d_reg_920 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten57_reg_931 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state89 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state89 : signal is "none";
    signal b_2_reg_942 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten43_reg_953 : STD_LOGIC_VECTOR (5 downto 0);
    signal c_2_reg_964 : STD_LOGIC_VECTOR (2 downto 0);
    signal d_1_reg_975 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_add_patch6_fu_986_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state93 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state93 : signal is "none";
    signal ap_CS_fsm_state94 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state94 : signal is "none";
    signal grp_makeSuperPoint_alignedToLine8_fu_1007_ap_start_reg : STD_LOGIC := '0';
    signal grp_wedgePatch_init_fu_1034_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state91 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state91 : signal is "none";
    signal grp_getShadows_fu_1058_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state96 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state96 : signal is "none";
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1074_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (123 downto 0);
    signal ap_NS_fsm_state7 : STD_LOGIC;
    signal ap_NS_fsm_state23 : STD_LOGIC;
    signal ap_NS_fsm_state39 : STD_LOGIC;
    signal ap_NS_fsm_state55 : STD_LOGIC;
    signal ap_NS_fsm_state69 : STD_LOGIC;
    signal ap_NS_fsm_state99 : STD_LOGIC;
    signal ap_NS_fsm_state111 : STD_LOGIC;
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal ap_CS_fsm_state111 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state111 : signal is "none";
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1088_ap_start_reg : STD_LOGIC := '0';
    signal grp_delete_patch_fu_1103_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state124 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state124 : signal is "none";
    signal zext_ln723_1_fu_1249_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln732_1_fu_1265_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln737_fu_1275_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln745_fu_1285_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln746_fu_1295_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln727_fu_1305_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln747_fu_1315_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln748_fu_1325_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1122_1_fu_1978_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1147_1_fu_2167_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1159_2_fu_2322_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln821_fu_2404_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln822_fu_2414_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln823_fu_2424_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln824_fu_2434_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal horizontalOverlapBottom_V_fu_264 : STD_LOGIC_VECTOR (31 downto 0);
    signal horizontalOverlapBottom_V_1_fu_2594_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln878_7_fu_2520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal horizontalOverlapTop_V_fu_268 : STD_LOGIC_VECTOR (31 downto 0);
    signal horizontalOverlapTop_V_1_fu_2556_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal original_ppl_fu_272 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state78 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal grp_fu_1115_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1115_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1120_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal grp_fu_1123_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1129_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln710_fu_1166_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal secondLastPatchIndex_fu_1171_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_fu_1191_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_62_cast_fu_1184_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln732_fu_1198_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal secondLastPatchIndex_1_fu_1176_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_30_fu_1221_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_64_cast_fu_1213_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln723_fu_1229_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln723_fu_1244_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1129_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln732_fu_1260_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln737_fu_1270_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln745_fu_1280_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln746_fu_1290_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln727_fu_1300_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln747_fu_1310_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln748_fu_1320_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1120_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal data_V_fu_1330_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_fu_1334_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln368_fu_1338_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_1347_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_fu_1357_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal empty_85_fu_1373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1115_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_86_fu_1377_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln215_fu_1389_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_13_fu_1393_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_fu_1389_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_13_fu_1393_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_fu_1396_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal data_V_7_fu_1408_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_4_fu_1412_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln368_3_fu_1416_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_fu_1425_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_89_fu_1435_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal empty_90_fu_1451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_91_fu_1455_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln215_14_fu_1467_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_15_fu_1471_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_14_fu_1467_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_15_fu_1471_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_21_fu_1474_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln886_4_fu_1480_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_V_8_fu_1492_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_5_fu_1496_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln368_4_fu_1500_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_fu_1509_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_94_fu_1519_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal empty_95_fu_1535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_96_fu_1539_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln215_16_fu_1551_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_17_fu_1555_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_16_fu_1551_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_17_fu_1555_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_23_fu_1558_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal data_V_9_fu_1570_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_6_fu_1574_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln368_5_fu_1578_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_fu_1587_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_99_fu_1597_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal empty_100_fu_1613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_101_fu_1617_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_fu_1663_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal shifted_Align_fu_1671_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shifted_Align_fu_1671_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_6_fu_1683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shifted_Align_1_fu_1689_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shifted_Align_fu_1671_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal shifted_Align_1_fu_1689_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal shiftOriginal_fu_1677_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i297_not_fu_1706_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_fu_1724_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln791_fu_1734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_fu_1759_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln791_1_fu_1769_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln791_3_fu_1775_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln791_fu_1780_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln791_fu_1786_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_6_fu_1798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln534_fu_1804_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln534_fu_1812_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shifted_Align_3_fu_1816_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shifted_Align_4_fu_1822_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln811_fu_1839_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1118_fu_1868_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1120_fu_1888_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1116_fu_1882_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1116_fu_1862_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln1116_fu_1874_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln1116_fu_1894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1118_fu_1914_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1118_fu_1908_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln1122_1_fu_1932_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln1122_fu_1928_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln1116_2_fu_1936_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln1118_1_fu_1944_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln1118_fu_1920_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_66_cast_fu_1952_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln1122_fu_1968_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1122_fu_1972_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1118_1_fu_1993_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln1143_fu_2057_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1145_fu_2077_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1141_fu_2071_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1141_fu_2051_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln1141_fu_2063_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln1141_fu_2083_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1143_fu_2103_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1143_fu_2097_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln1147_1_fu_2121_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln1147_fu_2117_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln1141_2_fu_2125_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln1143_1_fu_2133_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln1143_fu_2109_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_67_cast_fu_2141_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln1147_fu_2157_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1147_fu_2161_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1143_1_fu_2182_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln1155_fu_2214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1157_fu_2234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1153_fu_2228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1153_fu_2208_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln1153_fu_2220_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln1153_fu_2240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1155_fu_2260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1155_fu_2254_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln1159_fu_2282_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_57_fu_2294_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl5_cast_fu_2286_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln1159_fu_2302_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln1155_fu_2266_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln1159_fu_2306_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln1159_1_fu_2312_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1159_fu_2316_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1155_1_fu_2337_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln817_fu_2351_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln821_fu_2366_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_68_cast_fu_2370_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_32_fu_2378_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln817_fu_2355_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln821_fu_2399_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln822_fu_2409_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln823_fu_2419_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln824_fu_2429_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln215_22_fu_2526_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_23_fu_2534_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_25_fu_2529_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_26_fu_2537_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln878_8_fu_2542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln839_fu_2548_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln839_1_fu_2552_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_24_fu_2564_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_25_fu_2572_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_27_fu_2567_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_28_fu_2575_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln878_9_fu_2580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln840_fu_2586_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln840_1_fu_2590_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_7_fu_2612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln861_fu_2629_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1115_ce : STD_LOGIC;
    signal grp_fu_1115_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1120_ce : STD_LOGIC;
    signal ap_predicate_op728_call_state124 : BOOLEAN;
    signal ap_block_state124_on_subcall_done : BOOLEAN;
    signal ap_condition_3137 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component makePatches_ShadowQuilt_fromEdges_add_patch6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        n_patches : OUT STD_LOGIC_VECTOR (7 downto 0);
        n_patches_ap_vld : OUT STD_LOGIC;
        n_patches_read : IN STD_LOGIC_VECTOR (7 downto 0);
        patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_superpoints_ce0 : OUT STD_LOGIC;
        patches_superpoints_we0 : OUT STD_LOGIC;
        patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        wp_superpoints_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints_ce0 : OUT STD_LOGIC;
        wp_superpoints_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints_ce1 : OUT STD_LOGIC;
        wp_superpoints_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints1_ce0 : OUT STD_LOGIC;
        wp_superpoints1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints1_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints1_ce1 : OUT STD_LOGIC;
        wp_superpoints1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints2_ce0 : OUT STD_LOGIC;
        wp_superpoints2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints2_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints2_ce1 : OUT STD_LOGIC;
        wp_superpoints2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints3_ce0 : OUT STD_LOGIC;
        wp_superpoints3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints3_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints3_ce1 : OUT STD_LOGIC;
        wp_superpoints3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints4_ce0 : OUT STD_LOGIC;
        wp_superpoints4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints4_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints4_ce1 : OUT STD_LOGIC;
        wp_superpoints4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters_ce0 : OUT STD_LOGIC;
        wp_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters5_ce0 : OUT STD_LOGIC;
        wp_parameters5_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        wp_parameters6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters6_ce0 : OUT STD_LOGIC;
        wp_parameters6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters7_ce0 : OUT STD_LOGIC;
        wp_parameters7_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        wp_parameters8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters8_ce0 : OUT STD_LOGIC;
        wp_parameters8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_parameters_ce0 : OUT STD_LOGIC;
        patches_parameters_we0 : OUT STD_LOGIC;
        patches_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine8 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        GDn_points_ce0 : OUT STD_LOGIC;
        GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        i : IN STD_LOGIC_VECTOR (2 downto 0);
        z_top : IN STD_LOGIC_VECTOR (31 downto 0);
        apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
        original_ppl : IN STD_LOGIC_VECTOR (31 downto 0);
        leftRight : IN STD_LOGIC_VECTOR (0 downto 0);
        init_patch_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        init_patch_ce0 : OUT STD_LOGIC;
        init_patch_we0 : OUT STD_LOGIC;
        init_patch_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        init_patch1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        init_patch1_ce0 : OUT STD_LOGIC;
        init_patch1_we0 : OUT STD_LOGIC;
        init_patch1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        init_patch2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        init_patch2_ce0 : OUT STD_LOGIC;
        init_patch2_we0 : OUT STD_LOGIC;
        init_patch2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        init_patch3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        init_patch3_ce0 : OUT STD_LOGIC;
        init_patch3_we0 : OUT STD_LOGIC;
        init_patch3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        init_patch4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        init_patch4_ce0 : OUT STD_LOGIC;
        init_patch4_we0 : OUT STD_LOGIC;
        init_patch4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (7 downto 0);
        GDarrayDecoded_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        GDarrayDecoded_ce0 : OUT STD_LOGIC;
        GDarrayDecoded_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        GDarrayDecoded_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        GDarrayDecoded_ce1 : OUT STD_LOGIC;
        GDarrayDecoded_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        temp_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        temp_V_ce0 : OUT STD_LOGIC;
        temp_V_we0 : OUT STD_LOGIC;
        temp_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        temp_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        temp_V_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        temp_V_ce1 : OUT STD_LOGIC;
        temp_V_we1 : OUT STD_LOGIC;
        temp_V_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_wedgePatch_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        wp_superpoints_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints_ce0 : OUT STD_LOGIC;
        wp_superpoints_we0 : OUT STD_LOGIC;
        wp_superpoints_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints_ce1 : OUT STD_LOGIC;
        wp_superpoints_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints1_ce0 : OUT STD_LOGIC;
        wp_superpoints1_we0 : OUT STD_LOGIC;
        wp_superpoints1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints1_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints1_ce1 : OUT STD_LOGIC;
        wp_superpoints1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints2_ce0 : OUT STD_LOGIC;
        wp_superpoints2_we0 : OUT STD_LOGIC;
        wp_superpoints2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints2_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints2_ce1 : OUT STD_LOGIC;
        wp_superpoints2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints3_ce0 : OUT STD_LOGIC;
        wp_superpoints3_we0 : OUT STD_LOGIC;
        wp_superpoints3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints3_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints3_ce1 : OUT STD_LOGIC;
        wp_superpoints3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints4_ce0 : OUT STD_LOGIC;
        wp_superpoints4_we0 : OUT STD_LOGIC;
        wp_superpoints4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints4_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints4_ce1 : OUT STD_LOGIC;
        wp_superpoints4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters_ce0 : OUT STD_LOGIC;
        wp_parameters_we0 : OUT STD_LOGIC;
        wp_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters_ce1 : OUT STD_LOGIC;
        wp_parameters_we1 : OUT STD_LOGIC;
        wp_parameters_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters5_ce0 : OUT STD_LOGIC;
        wp_parameters5_we0 : OUT STD_LOGIC;
        wp_parameters5_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        wp_parameters5_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters5_ce1 : OUT STD_LOGIC;
        wp_parameters5_we1 : OUT STD_LOGIC;
        wp_parameters5_d1 : OUT STD_LOGIC_VECTOR (0 downto 0);
        wp_parameters6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters6_ce0 : OUT STD_LOGIC;
        wp_parameters6_we0 : OUT STD_LOGIC;
        wp_parameters6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters6_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters6_ce1 : OUT STD_LOGIC;
        wp_parameters6_we1 : OUT STD_LOGIC;
        wp_parameters6_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters7_ce0 : OUT STD_LOGIC;
        wp_parameters7_we0 : OUT STD_LOGIC;
        wp_parameters7_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        wp_parameters7_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters7_ce1 : OUT STD_LOGIC;
        wp_parameters7_we1 : OUT STD_LOGIC;
        wp_parameters7_d1 : OUT STD_LOGIC_VECTOR (0 downto 0);
        wp_parameters8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters8_ce0 : OUT STD_LOGIC;
        wp_parameters8_we0 : OUT STD_LOGIC;
        wp_parameters8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters8_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters8_ce1 : OUT STD_LOGIC;
        wp_parameters8_we1 : OUT STD_LOGIC;
        wp_parameters8_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters8_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        superpointsI_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        superpointsI_ce0 : OUT STD_LOGIC;
        superpointsI_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        superpointsI9_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        superpointsI9_ce0 : OUT STD_LOGIC;
        superpointsI9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        superpointsI10_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        superpointsI10_ce0 : OUT STD_LOGIC;
        superpointsI10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        superpointsI11_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        superpointsI11_ce0 : OUT STD_LOGIC;
        superpointsI11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        superpointsI12_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        superpointsI12_ce0 : OUT STD_LOGIC;
        superpointsI12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        superpoint_count : IN STD_LOGIC_VECTOR (7 downto 0);
        apexZ0I : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_getShadows IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_superpoints_ce0 : OUT STD_LOGIC;
        patches_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        wp_superpoints : IN STD_LOGIC_VECTOR (8 downto 0);
        wp_parameters_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        wp_parameters_ce0 : OUT STD_LOGIC;
        wp_parameters_we0 : OUT STD_LOGIC;
        wp_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        wp_parameters_ce1 : OUT STD_LOGIC;
        wp_parameters_we1 : OUT STD_LOGIC;
        wp_parameters_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters_offset : IN STD_LOGIC_VECTOR (4 downto 0);
        zTopMin : IN STD_LOGIC_VECTOR (31 downto 0);
        zTopMax : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_straightLineProjectorFromLayerIJtoK IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        z_i : IN STD_LOGIC_VECTOR (31 downto 0);
        z_j : IN STD_LOGIC_VECTOR (31 downto 0);
        i : IN STD_LOGIC_VECTOR (2 downto 0);
        j : IN STD_LOGIC_VECTOR (2 downto 0);
        k : IN STD_LOGIC_VECTOR (2 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_delete_patch IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        n_patches : OUT STD_LOGIC_VECTOR (7 downto 0);
        n_patches_ap_vld : OUT STD_LOGIC;
        n_patches_read : IN STD_LOGIC_VECTOR (7 downto 0);
        patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_superpoints_ce0 : OUT STD_LOGIC;
        patches_superpoints_we0 : OUT STD_LOGIC;
        patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_superpoints_ce1 : OUT STD_LOGIC;
        patches_superpoints_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        index : IN STD_LOGIC_VECTOR (8 downto 0);
        patches_parameters_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_parameters_V_ce0 : OUT STD_LOGIC;
        patches_parameters_V_we0 : OUT STD_LOGIC;
        patches_parameters_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_V_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_parameters_V_ce1 : OUT STD_LOGIC;
        patches_parameters_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_dcmp_64ns_64ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_sitodp_32ns_64_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_init_patch_V_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_superpoints_0_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_parameters_V_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_parameters_V_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_parameters_V_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    init_patch_V_0_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_init_patch_V_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => init_patch_V_0_address0,
        ce0 => init_patch_V_0_ce0,
        we0 => init_patch_V_0_we0,
        d0 => init_patch_V_0_d0,
        q0 => init_patch_V_0_q0);

    init_patch_V_1_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_init_patch_V_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => init_patch_V_1_address0,
        ce0 => init_patch_V_1_ce0,
        we0 => init_patch_V_1_we0,
        d0 => init_patch_V_1_d0,
        q0 => init_patch_V_1_q0);

    init_patch_V_2_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_init_patch_V_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => init_patch_V_2_address0,
        ce0 => init_patch_V_2_ce0,
        we0 => init_patch_V_2_we0,
        d0 => init_patch_V_2_d0,
        q0 => init_patch_V_2_q0);

    init_patch_V_3_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_init_patch_V_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => init_patch_V_3_address0,
        ce0 => init_patch_V_3_ce0,
        we0 => init_patch_V_3_we0,
        d0 => init_patch_V_3_d0,
        q0 => init_patch_V_3_q0);

    init_patch_V_4_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_init_patch_V_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => init_patch_V_4_address0,
        ce0 => init_patch_V_4_ce0,
        we0 => init_patch_V_4_we0,
        d0 => init_patch_V_4_d0,
        q0 => init_patch_V_4_q0);

    NPpatches_superpoints_0_V_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_superpoints_0_V
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => NPpatches_superpoints_0_V_address0,
        ce0 => NPpatches_superpoints_0_V_ce0,
        we0 => NPpatches_superpoints_0_V_we0,
        d0 => NPpatches_superpoints_0_V_d0,
        q0 => NPpatches_superpoints_0_V_q0,
        address1 => NPpatches_superpoints_0_V_address1,
        ce1 => NPpatches_superpoints_0_V_ce1,
        q1 => NPpatches_superpoints_0_V_q1);

    NPpatches_superpoints_1_V_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_superpoints_0_V
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => NPpatches_superpoints_1_V_address0,
        ce0 => NPpatches_superpoints_1_V_ce0,
        we0 => NPpatches_superpoints_1_V_we0,
        d0 => NPpatches_superpoints_1_V_d0,
        q0 => NPpatches_superpoints_1_V_q0,
        address1 => NPpatches_superpoints_1_V_address1,
        ce1 => NPpatches_superpoints_1_V_ce1,
        q1 => NPpatches_superpoints_1_V_q1);

    NPpatches_superpoints_2_V_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_superpoints_0_V
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => NPpatches_superpoints_2_V_address0,
        ce0 => NPpatches_superpoints_2_V_ce0,
        we0 => NPpatches_superpoints_2_V_we0,
        d0 => NPpatches_superpoints_2_V_d0,
        q0 => NPpatches_superpoints_2_V_q0,
        address1 => NPpatches_superpoints_2_V_address1,
        ce1 => NPpatches_superpoints_2_V_ce1,
        q1 => NPpatches_superpoints_2_V_q1);

    NPpatches_superpoints_3_V_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_superpoints_0_V
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => NPpatches_superpoints_3_V_address0,
        ce0 => NPpatches_superpoints_3_V_ce0,
        we0 => NPpatches_superpoints_3_V_we0,
        d0 => NPpatches_superpoints_3_V_d0,
        q0 => NPpatches_superpoints_3_V_q0,
        address1 => NPpatches_superpoints_3_V_address1,
        ce1 => NPpatches_superpoints_3_V_ce1,
        q1 => NPpatches_superpoints_3_V_q1);

    NPpatches_superpoints_4_V_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_superpoints_0_V
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => NPpatches_superpoints_4_V_address0,
        ce0 => NPpatches_superpoints_4_V_ce0,
        we0 => NPpatches_superpoints_4_V_we0,
        d0 => NPpatches_superpoints_4_V_d0,
        q0 => NPpatches_superpoints_4_V_q0,
        address1 => NPpatches_superpoints_4_V_address1,
        ce1 => NPpatches_superpoints_4_V_ce1,
        q1 => NPpatches_superpoints_4_V_q1);

    NPpatches_parameters_V_0_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_parameters_V_0
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => NPpatches_parameters_V_0_address0,
        ce0 => NPpatches_parameters_V_0_ce0,
        we0 => NPpatches_parameters_V_0_we0,
        d0 => NPpatches_parameters_V_0_d0,
        q0 => NPpatches_parameters_V_0_q0,
        address1 => grp_wedgePatch_init_fu_1034_wp_parameters_address1,
        ce1 => NPpatches_parameters_V_0_ce1,
        we1 => NPpatches_parameters_V_0_we1,
        d1 => grp_wedgePatch_init_fu_1034_wp_parameters_d1,
        q1 => NPpatches_parameters_V_0_q1);

    NPpatches_parameters_V_1_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_parameters_V_1
    generic map (
        DataWidth => 1,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => NPpatches_parameters_V_1_address0,
        ce0 => NPpatches_parameters_V_1_ce0,
        we0 => NPpatches_parameters_V_1_we0,
        d0 => NPpatches_parameters_V_1_d0,
        q0 => NPpatches_parameters_V_1_q0,
        address1 => grp_wedgePatch_init_fu_1034_wp_parameters5_address1,
        ce1 => NPpatches_parameters_V_1_ce1,
        we1 => NPpatches_parameters_V_1_we1,
        d1 => grp_wedgePatch_init_fu_1034_wp_parameters5_d1);

    NPpatches_parameters_V_2_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_parameters_V_2
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => NPpatches_parameters_V_2_address0,
        ce0 => NPpatches_parameters_V_2_ce0,
        we0 => NPpatches_parameters_V_2_we0,
        d0 => NPpatches_parameters_V_2_d0,
        q0 => NPpatches_parameters_V_2_q0,
        address1 => grp_wedgePatch_init_fu_1034_wp_parameters6_address1,
        ce1 => NPpatches_parameters_V_2_ce1,
        we1 => NPpatches_parameters_V_2_we1,
        d1 => grp_wedgePatch_init_fu_1034_wp_parameters6_d1);

    NPpatches_parameters_V_3_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_parameters_V_1
    generic map (
        DataWidth => 1,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => NPpatches_parameters_V_3_address0,
        ce0 => NPpatches_parameters_V_3_ce0,
        we0 => NPpatches_parameters_V_3_we0,
        d0 => NPpatches_parameters_V_3_d0,
        q0 => NPpatches_parameters_V_3_q0,
        address1 => grp_wedgePatch_init_fu_1034_wp_parameters7_address1,
        ce1 => NPpatches_parameters_V_3_ce1,
        we1 => NPpatches_parameters_V_3_we1,
        d1 => grp_wedgePatch_init_fu_1034_wp_parameters7_d1);

    NPpatches_parameters_V_4_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_parameters_V_0
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => NPpatches_parameters_V_4_address0,
        ce0 => NPpatches_parameters_V_4_ce0,
        we0 => NPpatches_parameters_V_4_we0,
        d0 => NPpatches_parameters_V_4_d0,
        q0 => NPpatches_parameters_V_4_q0,
        address1 => grp_wedgePatch_init_fu_1034_wp_parameters8_address1,
        ce1 => NPpatches_parameters_V_4_ce1,
        we1 => NPpatches_parameters_V_4_we1,
        d1 => grp_wedgePatch_init_fu_1034_wp_parameters8_d1,
        q1 => NPpatches_parameters_V_4_q1);

    grp_add_patch6_fu_986 : component makePatches_ShadowQuilt_fromEdges_add_patch6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_add_patch6_fu_986_ap_start,
        ap_done => grp_add_patch6_fu_986_ap_done,
        ap_idle => grp_add_patch6_fu_986_ap_idle,
        ap_ready => grp_add_patch6_fu_986_ap_ready,
        n_patches => grp_add_patch6_fu_986_n_patches,
        n_patches_ap_vld => grp_add_patch6_fu_986_n_patches_ap_vld,
        n_patches_read => reg_1150,
        patches_superpoints_address0 => grp_add_patch6_fu_986_patches_superpoints_address0,
        patches_superpoints_ce0 => grp_add_patch6_fu_986_patches_superpoints_ce0,
        patches_superpoints_we0 => grp_add_patch6_fu_986_patches_superpoints_we0,
        patches_superpoints_d0 => grp_add_patch6_fu_986_patches_superpoints_d0,
        patches_superpoints_q0 => patches_superpoints_q0,
        wp_superpoints_address0 => grp_add_patch6_fu_986_wp_superpoints_address0,
        wp_superpoints_ce0 => grp_add_patch6_fu_986_wp_superpoints_ce0,
        wp_superpoints_q0 => NPpatches_superpoints_0_V_q0,
        wp_superpoints_address1 => grp_add_patch6_fu_986_wp_superpoints_address1,
        wp_superpoints_ce1 => grp_add_patch6_fu_986_wp_superpoints_ce1,
        wp_superpoints_q1 => NPpatches_superpoints_0_V_q1,
        wp_superpoints1_address0 => grp_add_patch6_fu_986_wp_superpoints1_address0,
        wp_superpoints1_ce0 => grp_add_patch6_fu_986_wp_superpoints1_ce0,
        wp_superpoints1_q0 => NPpatches_superpoints_1_V_q0,
        wp_superpoints1_address1 => grp_add_patch6_fu_986_wp_superpoints1_address1,
        wp_superpoints1_ce1 => grp_add_patch6_fu_986_wp_superpoints1_ce1,
        wp_superpoints1_q1 => NPpatches_superpoints_1_V_q1,
        wp_superpoints2_address0 => grp_add_patch6_fu_986_wp_superpoints2_address0,
        wp_superpoints2_ce0 => grp_add_patch6_fu_986_wp_superpoints2_ce0,
        wp_superpoints2_q0 => NPpatches_superpoints_2_V_q0,
        wp_superpoints2_address1 => grp_add_patch6_fu_986_wp_superpoints2_address1,
        wp_superpoints2_ce1 => grp_add_patch6_fu_986_wp_superpoints2_ce1,
        wp_superpoints2_q1 => NPpatches_superpoints_2_V_q1,
        wp_superpoints3_address0 => grp_add_patch6_fu_986_wp_superpoints3_address0,
        wp_superpoints3_ce0 => grp_add_patch6_fu_986_wp_superpoints3_ce0,
        wp_superpoints3_q0 => NPpatches_superpoints_3_V_q0,
        wp_superpoints3_address1 => grp_add_patch6_fu_986_wp_superpoints3_address1,
        wp_superpoints3_ce1 => grp_add_patch6_fu_986_wp_superpoints3_ce1,
        wp_superpoints3_q1 => NPpatches_superpoints_3_V_q1,
        wp_superpoints4_address0 => grp_add_patch6_fu_986_wp_superpoints4_address0,
        wp_superpoints4_ce0 => grp_add_patch6_fu_986_wp_superpoints4_ce0,
        wp_superpoints4_q0 => NPpatches_superpoints_4_V_q0,
        wp_superpoints4_address1 => grp_add_patch6_fu_986_wp_superpoints4_address1,
        wp_superpoints4_ce1 => grp_add_patch6_fu_986_wp_superpoints4_ce1,
        wp_superpoints4_q1 => NPpatches_superpoints_4_V_q1,
        wp_parameters_address0 => grp_add_patch6_fu_986_wp_parameters_address0,
        wp_parameters_ce0 => grp_add_patch6_fu_986_wp_parameters_ce0,
        wp_parameters_q0 => NPpatches_parameters_V_0_q0,
        wp_parameters5_address0 => grp_add_patch6_fu_986_wp_parameters5_address0,
        wp_parameters5_ce0 => grp_add_patch6_fu_986_wp_parameters5_ce0,
        wp_parameters5_q0 => NPpatches_parameters_V_1_q0,
        wp_parameters6_address0 => grp_add_patch6_fu_986_wp_parameters6_address0,
        wp_parameters6_ce0 => grp_add_patch6_fu_986_wp_parameters6_ce0,
        wp_parameters6_q0 => NPpatches_parameters_V_2_q0,
        wp_parameters7_address0 => grp_add_patch6_fu_986_wp_parameters7_address0,
        wp_parameters7_ce0 => grp_add_patch6_fu_986_wp_parameters7_ce0,
        wp_parameters7_q0 => NPpatches_parameters_V_3_q0,
        wp_parameters8_address0 => grp_add_patch6_fu_986_wp_parameters8_address0,
        wp_parameters8_ce0 => grp_add_patch6_fu_986_wp_parameters8_ce0,
        wp_parameters8_q0 => NPpatches_parameters_V_4_q0,
        patches_parameters_address0 => grp_add_patch6_fu_986_patches_parameters_address0,
        patches_parameters_ce0 => grp_add_patch6_fu_986_patches_parameters_ce0,
        patches_parameters_we0 => grp_add_patch6_fu_986_patches_parameters_we0,
        patches_parameters_d0 => grp_add_patch6_fu_986_patches_parameters_d0,
        patches_parameters_q0 => patches_parameters_q0);

    grp_makeSuperPoint_alignedToLine8_fu_1007 : component makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine8
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_makeSuperPoint_alignedToLine8_fu_1007_ap_start,
        ap_done => grp_makeSuperPoint_alignedToLine8_fu_1007_ap_done,
        ap_idle => grp_makeSuperPoint_alignedToLine8_fu_1007_ap_idle,
        ap_ready => grp_makeSuperPoint_alignedToLine8_fu_1007_ap_ready,
        GDn_points_address0 => grp_makeSuperPoint_alignedToLine8_fu_1007_GDn_points_address0,
        GDn_points_ce0 => grp_makeSuperPoint_alignedToLine8_fu_1007_GDn_points_ce0,
        GDn_points_q0 => GDn_points_q0,
        i => i_reg_864,
        z_top => newZtop_V_2_reg_2979,
        apexZ0 => apexZ0_V_reg_3038,
        original_ppl => original_ppl_fu_272,
        leftRight => leftRight_reg_2974,
        init_patch_address0 => grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch_address0,
        init_patch_ce0 => grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch_ce0,
        init_patch_we0 => grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch_we0,
        init_patch_d0 => grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch_d0,
        init_patch1_address0 => grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch1_address0,
        init_patch1_ce0 => grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch1_ce0,
        init_patch1_we0 => grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch1_we0,
        init_patch1_d0 => grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch1_d0,
        init_patch2_address0 => grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch2_address0,
        init_patch2_ce0 => grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch2_ce0,
        init_patch2_we0 => grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch2_we0,
        init_patch2_d0 => grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch2_d0,
        init_patch3_address0 => grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch3_address0,
        init_patch3_ce0 => grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch3_ce0,
        init_patch3_we0 => grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch3_we0,
        init_patch3_d0 => grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch3_d0,
        init_patch4_address0 => grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch4_address0,
        init_patch4_ce0 => grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch4_ce0,
        init_patch4_we0 => grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch4_we0,
        init_patch4_d0 => grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch4_d0,
        p_read1 => init_patch_size_0_reg_852,
        GDarrayDecoded_address0 => grp_makeSuperPoint_alignedToLine8_fu_1007_GDarrayDecoded_address0,
        GDarrayDecoded_ce0 => grp_makeSuperPoint_alignedToLine8_fu_1007_GDarrayDecoded_ce0,
        GDarrayDecoded_q0 => GDarrayDecoded_q0,
        GDarrayDecoded_address1 => grp_makeSuperPoint_alignedToLine8_fu_1007_GDarrayDecoded_address1,
        GDarrayDecoded_ce1 => grp_makeSuperPoint_alignedToLine8_fu_1007_GDarrayDecoded_ce1,
        GDarrayDecoded_q1 => GDarrayDecoded_q1,
        temp_V_address0 => grp_makeSuperPoint_alignedToLine8_fu_1007_temp_V_address0,
        temp_V_ce0 => grp_makeSuperPoint_alignedToLine8_fu_1007_temp_V_ce0,
        temp_V_we0 => grp_makeSuperPoint_alignedToLine8_fu_1007_temp_V_we0,
        temp_V_d0 => grp_makeSuperPoint_alignedToLine8_fu_1007_temp_V_d0,
        temp_V_q0 => temp_V_q0,
        temp_V_address1 => grp_makeSuperPoint_alignedToLine8_fu_1007_temp_V_address1,
        temp_V_ce1 => grp_makeSuperPoint_alignedToLine8_fu_1007_temp_V_ce1,
        temp_V_we1 => grp_makeSuperPoint_alignedToLine8_fu_1007_temp_V_we1,
        temp_V_d1 => grp_makeSuperPoint_alignedToLine8_fu_1007_temp_V_d1,
        ap_return_0 => grp_makeSuperPoint_alignedToLine8_fu_1007_ap_return_0,
        ap_return_1 => grp_makeSuperPoint_alignedToLine8_fu_1007_ap_return_1);

    grp_wedgePatch_init_fu_1034 : component makePatches_ShadowQuilt_fromEdges_wedgePatch_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_wedgePatch_init_fu_1034_ap_start,
        ap_done => grp_wedgePatch_init_fu_1034_ap_done,
        ap_idle => grp_wedgePatch_init_fu_1034_ap_idle,
        ap_ready => grp_wedgePatch_init_fu_1034_ap_ready,
        wp_superpoints_address0 => grp_wedgePatch_init_fu_1034_wp_superpoints_address0,
        wp_superpoints_ce0 => grp_wedgePatch_init_fu_1034_wp_superpoints_ce0,
        wp_superpoints_we0 => grp_wedgePatch_init_fu_1034_wp_superpoints_we0,
        wp_superpoints_d0 => grp_wedgePatch_init_fu_1034_wp_superpoints_d0,
        wp_superpoints_q0 => NPpatches_superpoints_0_V_q0,
        wp_superpoints_address1 => grp_wedgePatch_init_fu_1034_wp_superpoints_address1,
        wp_superpoints_ce1 => grp_wedgePatch_init_fu_1034_wp_superpoints_ce1,
        wp_superpoints_q1 => NPpatches_superpoints_0_V_q1,
        wp_superpoints1_address0 => grp_wedgePatch_init_fu_1034_wp_superpoints1_address0,
        wp_superpoints1_ce0 => grp_wedgePatch_init_fu_1034_wp_superpoints1_ce0,
        wp_superpoints1_we0 => grp_wedgePatch_init_fu_1034_wp_superpoints1_we0,
        wp_superpoints1_d0 => grp_wedgePatch_init_fu_1034_wp_superpoints1_d0,
        wp_superpoints1_q0 => NPpatches_superpoints_1_V_q0,
        wp_superpoints1_address1 => grp_wedgePatch_init_fu_1034_wp_superpoints1_address1,
        wp_superpoints1_ce1 => grp_wedgePatch_init_fu_1034_wp_superpoints1_ce1,
        wp_superpoints1_q1 => NPpatches_superpoints_1_V_q1,
        wp_superpoints2_address0 => grp_wedgePatch_init_fu_1034_wp_superpoints2_address0,
        wp_superpoints2_ce0 => grp_wedgePatch_init_fu_1034_wp_superpoints2_ce0,
        wp_superpoints2_we0 => grp_wedgePatch_init_fu_1034_wp_superpoints2_we0,
        wp_superpoints2_d0 => grp_wedgePatch_init_fu_1034_wp_superpoints2_d0,
        wp_superpoints2_q0 => NPpatches_superpoints_2_V_q0,
        wp_superpoints2_address1 => grp_wedgePatch_init_fu_1034_wp_superpoints2_address1,
        wp_superpoints2_ce1 => grp_wedgePatch_init_fu_1034_wp_superpoints2_ce1,
        wp_superpoints2_q1 => NPpatches_superpoints_2_V_q1,
        wp_superpoints3_address0 => grp_wedgePatch_init_fu_1034_wp_superpoints3_address0,
        wp_superpoints3_ce0 => grp_wedgePatch_init_fu_1034_wp_superpoints3_ce0,
        wp_superpoints3_we0 => grp_wedgePatch_init_fu_1034_wp_superpoints3_we0,
        wp_superpoints3_d0 => grp_wedgePatch_init_fu_1034_wp_superpoints3_d0,
        wp_superpoints3_q0 => NPpatches_superpoints_3_V_q0,
        wp_superpoints3_address1 => grp_wedgePatch_init_fu_1034_wp_superpoints3_address1,
        wp_superpoints3_ce1 => grp_wedgePatch_init_fu_1034_wp_superpoints3_ce1,
        wp_superpoints3_q1 => NPpatches_superpoints_3_V_q1,
        wp_superpoints4_address0 => grp_wedgePatch_init_fu_1034_wp_superpoints4_address0,
        wp_superpoints4_ce0 => grp_wedgePatch_init_fu_1034_wp_superpoints4_ce0,
        wp_superpoints4_we0 => grp_wedgePatch_init_fu_1034_wp_superpoints4_we0,
        wp_superpoints4_d0 => grp_wedgePatch_init_fu_1034_wp_superpoints4_d0,
        wp_superpoints4_q0 => NPpatches_superpoints_4_V_q0,
        wp_superpoints4_address1 => grp_wedgePatch_init_fu_1034_wp_superpoints4_address1,
        wp_superpoints4_ce1 => grp_wedgePatch_init_fu_1034_wp_superpoints4_ce1,
        wp_superpoints4_q1 => NPpatches_superpoints_4_V_q1,
        wp_parameters_address0 => grp_wedgePatch_init_fu_1034_wp_parameters_address0,
        wp_parameters_ce0 => grp_wedgePatch_init_fu_1034_wp_parameters_ce0,
        wp_parameters_we0 => grp_wedgePatch_init_fu_1034_wp_parameters_we0,
        wp_parameters_d0 => grp_wedgePatch_init_fu_1034_wp_parameters_d0,
        wp_parameters_q0 => NPpatches_parameters_V_0_q0,
        wp_parameters_address1 => grp_wedgePatch_init_fu_1034_wp_parameters_address1,
        wp_parameters_ce1 => grp_wedgePatch_init_fu_1034_wp_parameters_ce1,
        wp_parameters_we1 => grp_wedgePatch_init_fu_1034_wp_parameters_we1,
        wp_parameters_d1 => grp_wedgePatch_init_fu_1034_wp_parameters_d1,
        wp_parameters_q1 => NPpatches_parameters_V_0_q1,
        wp_parameters5_address0 => grp_wedgePatch_init_fu_1034_wp_parameters5_address0,
        wp_parameters5_ce0 => grp_wedgePatch_init_fu_1034_wp_parameters5_ce0,
        wp_parameters5_we0 => grp_wedgePatch_init_fu_1034_wp_parameters5_we0,
        wp_parameters5_d0 => grp_wedgePatch_init_fu_1034_wp_parameters5_d0,
        wp_parameters5_address1 => grp_wedgePatch_init_fu_1034_wp_parameters5_address1,
        wp_parameters5_ce1 => grp_wedgePatch_init_fu_1034_wp_parameters5_ce1,
        wp_parameters5_we1 => grp_wedgePatch_init_fu_1034_wp_parameters5_we1,
        wp_parameters5_d1 => grp_wedgePatch_init_fu_1034_wp_parameters5_d1,
        wp_parameters6_address0 => grp_wedgePatch_init_fu_1034_wp_parameters6_address0,
        wp_parameters6_ce0 => grp_wedgePatch_init_fu_1034_wp_parameters6_ce0,
        wp_parameters6_we0 => grp_wedgePatch_init_fu_1034_wp_parameters6_we0,
        wp_parameters6_d0 => grp_wedgePatch_init_fu_1034_wp_parameters6_d0,
        wp_parameters6_address1 => grp_wedgePatch_init_fu_1034_wp_parameters6_address1,
        wp_parameters6_ce1 => grp_wedgePatch_init_fu_1034_wp_parameters6_ce1,
        wp_parameters6_we1 => grp_wedgePatch_init_fu_1034_wp_parameters6_we1,
        wp_parameters6_d1 => grp_wedgePatch_init_fu_1034_wp_parameters6_d1,
        wp_parameters7_address0 => grp_wedgePatch_init_fu_1034_wp_parameters7_address0,
        wp_parameters7_ce0 => grp_wedgePatch_init_fu_1034_wp_parameters7_ce0,
        wp_parameters7_we0 => grp_wedgePatch_init_fu_1034_wp_parameters7_we0,
        wp_parameters7_d0 => grp_wedgePatch_init_fu_1034_wp_parameters7_d0,
        wp_parameters7_address1 => grp_wedgePatch_init_fu_1034_wp_parameters7_address1,
        wp_parameters7_ce1 => grp_wedgePatch_init_fu_1034_wp_parameters7_ce1,
        wp_parameters7_we1 => grp_wedgePatch_init_fu_1034_wp_parameters7_we1,
        wp_parameters7_d1 => grp_wedgePatch_init_fu_1034_wp_parameters7_d1,
        wp_parameters8_address0 => grp_wedgePatch_init_fu_1034_wp_parameters8_address0,
        wp_parameters8_ce0 => grp_wedgePatch_init_fu_1034_wp_parameters8_ce0,
        wp_parameters8_we0 => grp_wedgePatch_init_fu_1034_wp_parameters8_we0,
        wp_parameters8_d0 => grp_wedgePatch_init_fu_1034_wp_parameters8_d0,
        wp_parameters8_q0 => NPpatches_parameters_V_4_q0,
        wp_parameters8_address1 => grp_wedgePatch_init_fu_1034_wp_parameters8_address1,
        wp_parameters8_ce1 => grp_wedgePatch_init_fu_1034_wp_parameters8_ce1,
        wp_parameters8_we1 => grp_wedgePatch_init_fu_1034_wp_parameters8_we1,
        wp_parameters8_d1 => grp_wedgePatch_init_fu_1034_wp_parameters8_d1,
        wp_parameters8_q1 => NPpatches_parameters_V_4_q1,
        superpointsI_address0 => grp_wedgePatch_init_fu_1034_superpointsI_address0,
        superpointsI_ce0 => grp_wedgePatch_init_fu_1034_superpointsI_ce0,
        superpointsI_q0 => init_patch_V_0_q0,
        superpointsI9_address0 => grp_wedgePatch_init_fu_1034_superpointsI9_address0,
        superpointsI9_ce0 => grp_wedgePatch_init_fu_1034_superpointsI9_ce0,
        superpointsI9_q0 => init_patch_V_1_q0,
        superpointsI10_address0 => grp_wedgePatch_init_fu_1034_superpointsI10_address0,
        superpointsI10_ce0 => grp_wedgePatch_init_fu_1034_superpointsI10_ce0,
        superpointsI10_q0 => init_patch_V_2_q0,
        superpointsI11_address0 => grp_wedgePatch_init_fu_1034_superpointsI11_address0,
        superpointsI11_ce0 => grp_wedgePatch_init_fu_1034_superpointsI11_ce0,
        superpointsI11_q0 => init_patch_V_3_q0,
        superpointsI12_address0 => grp_wedgePatch_init_fu_1034_superpointsI12_address0,
        superpointsI12_ce0 => grp_wedgePatch_init_fu_1034_superpointsI12_ce0,
        superpointsI12_q0 => init_patch_V_4_q0,
        superpoint_count => init_patch_size_0_reg_852,
        apexZ0I => apexZ0_V_reg_3038);

    grp_getShadows_fu_1058 : component makePatches_ShadowQuilt_fromEdges_getShadows
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_getShadows_fu_1058_ap_start,
        ap_done => grp_getShadows_fu_1058_ap_done,
        ap_idle => grp_getShadows_fu_1058_ap_idle,
        ap_ready => grp_getShadows_fu_1058_ap_ready,
        patches_superpoints_address0 => grp_getShadows_fu_1058_patches_superpoints_address0,
        patches_superpoints_ce0 => grp_getShadows_fu_1058_patches_superpoints_ce0,
        patches_superpoints_q0 => patches_superpoints_q0,
        wp_superpoints => grp_getShadows_fu_1058_wp_superpoints,
        wp_parameters_address0 => grp_getShadows_fu_1058_wp_parameters_address0,
        wp_parameters_ce0 => grp_getShadows_fu_1058_wp_parameters_ce0,
        wp_parameters_we0 => grp_getShadows_fu_1058_wp_parameters_we0,
        wp_parameters_d0 => grp_getShadows_fu_1058_wp_parameters_d0,
        wp_parameters_q0 => patches_parameters_q0,
        wp_parameters_address1 => grp_getShadows_fu_1058_wp_parameters_address1,
        wp_parameters_ce1 => grp_getShadows_fu_1058_wp_parameters_ce1,
        wp_parameters_we1 => grp_getShadows_fu_1058_wp_parameters_we1,
        wp_parameters_d1 => grp_getShadows_fu_1058_wp_parameters_d1,
        wp_parameters_q1 => patches_parameters_q1,
        wp_parameters_offset => grp_getShadows_fu_1058_wp_parameters_offset,
        zTopMin => z_top_min,
        zTopMax => z_top_max);

    grp_delete_patch_fu_1103 : component makePatches_ShadowQuilt_fromEdges_delete_patch
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_delete_patch_fu_1103_ap_start,
        ap_done => grp_delete_patch_fu_1103_ap_done,
        ap_idle => grp_delete_patch_fu_1103_ap_idle,
        ap_ready => grp_delete_patch_fu_1103_ap_ready,
        n_patches => grp_delete_patch_fu_1103_n_patches,
        n_patches_ap_vld => grp_delete_patch_fu_1103_n_patches_ap_vld,
        n_patches_read => reg_1150,
        patches_superpoints_address0 => grp_delete_patch_fu_1103_patches_superpoints_address0,
        patches_superpoints_ce0 => grp_delete_patch_fu_1103_patches_superpoints_ce0,
        patches_superpoints_we0 => grp_delete_patch_fu_1103_patches_superpoints_we0,
        patches_superpoints_d0 => grp_delete_patch_fu_1103_patches_superpoints_d0,
        patches_superpoints_address1 => grp_delete_patch_fu_1103_patches_superpoints_address1,
        patches_superpoints_ce1 => grp_delete_patch_fu_1103_patches_superpoints_ce1,
        patches_superpoints_q1 => patches_superpoints_q1,
        index => grp_delete_patch_fu_1103_index,
        patches_parameters_V_address0 => grp_delete_patch_fu_1103_patches_parameters_V_address0,
        patches_parameters_V_ce0 => grp_delete_patch_fu_1103_patches_parameters_V_ce0,
        patches_parameters_V_we0 => grp_delete_patch_fu_1103_patches_parameters_V_we0,
        patches_parameters_V_d0 => grp_delete_patch_fu_1103_patches_parameters_V_d0,
        patches_parameters_V_address1 => grp_delete_patch_fu_1103_patches_parameters_V_address1,
        patches_parameters_V_ce1 => grp_delete_patch_fu_1103_patches_parameters_V_ce1,
        patches_parameters_V_q1 => patches_parameters_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_add_patch6_fu_986_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_add_patch6_fu_986_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
                    grp_add_patch6_fu_986_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_add_patch6_fu_986_ap_ready = ap_const_logic_1)) then 
                    grp_add_patch6_fu_986_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_delete_patch_fu_1103_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_delete_patch_fu_1103_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state123) or (ap_const_logic_1 = ap_CS_fsm_state82))) then 
                    grp_delete_patch_fu_1103_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_delete_patch_fu_1103_ap_ready = ap_const_logic_1)) then 
                    grp_delete_patch_fu_1103_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_getShadows_fu_1058_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_getShadows_fu_1058_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
                    grp_getShadows_fu_1058_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_getShadows_fu_1058_ap_ready = ap_const_logic_1)) then 
                    grp_getShadows_fu_1058_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_makeSuperPoint_alignedToLine8_fu_1007_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_makeSuperPoint_alignedToLine8_fu_1007_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln1134_fu_2016_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state86))) then 
                    grp_makeSuperPoint_alignedToLine8_fu_1007_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_makeSuperPoint_alignedToLine8_fu_1007_ap_ready = ap_const_logic_1)) then 
                    grp_makeSuperPoint_alignedToLine8_fu_1007_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_1074_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_straightLineProjectorFromLayerIJtoK_fu_1074_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state54) and (ap_const_logic_1 = ap_NS_fsm_state55)) or ((ap_const_logic_1 = ap_CS_fsm_state38) and (ap_const_logic_1 = ap_NS_fsm_state39)) or ((ap_const_logic_1 = ap_CS_fsm_state22) and (ap_const_logic_1 = ap_NS_fsm_state23)) or ((ap_const_logic_1 = ap_CS_fsm_state81) and (ap_const_logic_1 = ap_NS_fsm_state111)) or ((shiftOriginal_1_reg_2960 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state98) and (ap_const_logic_1 = ap_NS_fsm_state99)) or ((ap_const_logic_1 = ap_NS_fsm_state69) and ((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state54))) or ((ap_const_lv1_1 = and_ln724_fu_1254_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_logic_1 = ap_NS_fsm_state7)))) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_1074_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_straightLineProjectorFromLayerIJtoK_fu_1074_ap_ready = ap_const_logic_1)) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_1074_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_1088_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_straightLineProjectorFromLayerIJtoK_fu_1088_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state69) and ((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state54)))) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_1088_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_straightLineProjectorFromLayerIJtoK_fu_1088_ap_ready = ap_const_logic_1)) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_1088_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_wedgePatch_init_fu_1034_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_wedgePatch_init_fu_1034_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
                    grp_wedgePatch_init_fu_1034_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_wedgePatch_init_fu_1034_ap_ready = ap_const_logic_1)) then 
                    grp_wedgePatch_init_fu_1034_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    a_reg_808_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1116_fu_1856_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
                a_reg_808 <= select_ln1116_1_fu_1900_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state83) and (ap_const_boolean_0 = ap_block_state83_on_subcall_done))) then 
                a_reg_808 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    b_1_reg_887_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1134_fu_2016_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state86))) then 
                b_1_reg_887 <= ap_const_lv3_0;
            elsif (((icmp_ln1141_fu_2045_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state88))) then 
                b_1_reg_887 <= select_ln1141_1_fu_2089_p3;
            end if; 
        end if;
    end process;

    b_2_reg_942_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
                b_2_reg_942 <= ap_const_lv3_0;
            elsif (((icmp_ln1153_fu_2202_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state90))) then 
                b_2_reg_942 <= select_ln1153_1_fu_2246_p3;
            end if; 
        end if;
    end process;

    b_reg_830_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1116_fu_1856_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
                b_reg_830 <= select_ln1118_2_fu_1960_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state83) and (ap_const_boolean_0 = ap_block_state83_on_subcall_done))) then 
                b_reg_830 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    c_1_reg_909_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1134_fu_2016_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state86))) then 
                c_1_reg_909 <= ap_const_lv5_0;
            elsif (((icmp_ln1141_fu_2045_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state88))) then 
                c_1_reg_909 <= select_ln1143_2_fu_2149_p3;
            end if; 
        end if;
    end process;

    c_2_reg_964_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
                c_2_reg_964 <= ap_const_lv3_0;
            elsif (((icmp_ln1153_fu_2202_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state90))) then 
                c_2_reg_964 <= select_ln1155_1_fu_2274_p3;
            end if; 
        end if;
    end process;

    c_reg_841_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1116_fu_1856_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
                c_reg_841 <= add_ln1120_fu_1987_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state83) and (ap_const_boolean_0 = ap_block_state83_on_subcall_done))) then 
                c_reg_841 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    complementary_topL_jL_V_1_reg_732_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state110)) then 
                complementary_topL_jL_V_1_reg_732 <= complementary_topL_jL_V_3_reg_3175;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
                complementary_topL_jL_V_1_reg_732 <= complementary_topL_jL_V_reg_2930;
            end if; 
        end if;
    end process;

    complementary_topL_jR_V_reg_712_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state110)) then 
                complementary_topL_jR_V_reg_712 <= complementary_topL_jR_V_4_reg_3186;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
                complementary_topL_jR_V_reg_712 <= complementary_topL_jR_V_3_reg_2859;
            end if; 
        end if;
    end process;

    complementary_topR_jL_V_1_reg_722_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state110)) then 
                complementary_topR_jL_V_1_reg_722 <= complementary_topR_jL_V_3_reg_3169;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
                complementary_topR_jL_V_1_reg_722 <= complementary_topR_jL_V_reg_2925;
            end if; 
        end if;
    end process;

    complementary_topR_jR_V_reg_682_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state110)) then 
                complementary_topR_jR_V_reg_682 <= complementary_topR_jR_V_4_reg_3181;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
                complementary_topR_jR_V_reg_682 <= complementary_topR_jR_V_3_reg_2828;
            end if; 
        end if;
    end process;

    d_1_reg_975_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
                d_1_reg_975 <= ap_const_lv3_0;
            elsif (((icmp_ln1153_fu_2202_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state90))) then 
                d_1_reg_975 <= add_ln1157_fu_2331_p2;
            end if; 
        end if;
    end process;

    d_reg_920_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1134_fu_2016_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state86))) then 
                d_reg_920 <= ap_const_lv2_0;
            elsif (((icmp_ln1141_fu_2045_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state88))) then 
                d_reg_920 <= add_ln1145_fu_2176_p2;
            end if; 
        end if;
    end process;

    empty_103_reg_650_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln878_5_fu_1564_p2 = ap_const_lv1_0) and (grp_fu_1123_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state54)) or ((grp_fu_1123_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state54)))) then 
                empty_103_reg_650 <= ap_const_lv1_1;
            elsif (((icmp_ln878_5_reg_2870 = ap_const_lv1_1) and (icmp_ln886_5_reg_2866 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
                empty_103_reg_650 <= empty_102_fu_1623_p2;
            end if; 
        end if;
    end process;

    empty_104_reg_664_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state110)) then 
                empty_104_reg_664 <= horizontalShiftBottom_1_reg_3229;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
                empty_104_reg_664 <= horizontalShiftBottom_fu_1659_p2;
            end if; 
        end if;
    end process;

    empty_105_reg_673_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state110)) then 
                empty_105_reg_673 <= horizontalShiftTop_1_reg_3214;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
                empty_105_reg_673 <= horizontalShiftTop_fu_1655_p2;
            end if; 
        end if;
    end process;

    empty_88_reg_611_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln724_reg_2729) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                empty_88_reg_611 <= ap_const_lv1_1;
            elsif (((ap_const_lv1_1 = and_ln724_reg_2729) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                empty_88_reg_611 <= empty_87_fu_1383_p2;
            end if; 
        end if;
    end process;

    empty_93_reg_623_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln878_3_fu_1402_p2 = ap_const_lv1_0) and (grp_fu_1123_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((grp_fu_1123_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22)))) then 
                empty_93_reg_623 <= ap_const_lv1_1;
            elsif (((icmp_ln878_3_reg_2804 = ap_const_lv1_1) and (icmp_ln886_3_reg_2800 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
                empty_93_reg_623 <= empty_92_fu_1461_p2;
            end if; 
        end if;
    end process;

    empty_98_reg_638_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln734_fu_1486_p2) and (ap_const_logic_1 = ap_CS_fsm_state38))) then 
                empty_98_reg_638 <= ap_const_lv1_1;
            elsif (((ap_const_lv1_1 = and_ln734_reg_2835) and (ap_const_logic_1 = ap_CS_fsm_state53))) then 
                empty_98_reg_638 <= empty_97_fu_1545_p2;
            end if; 
        end if;
    end process;

    horizontalOverlapBottom_V_fu_264_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                horizontalOverlapBottom_V_fu_264 <= ap_const_lv32_FFF0BDC0;
            elsif (((shiftOriginal_1_reg_2960 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state110) and (icmp_ln878_7_fu_2520_p2 = ap_const_lv1_1))) then 
                horizontalOverlapBottom_V_fu_264 <= horizontalOverlapBottom_V_1_fu_2594_p3;
            end if; 
        end if;
    end process;

    horizontalOverlapTop_V_fu_268_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                horizontalOverlapTop_V_fu_268 <= ap_const_lv32_FFF0BDC0;
            elsif (((shiftOriginal_1_reg_2960 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state110) and (icmp_ln878_7_fu_2520_p2 = ap_const_lv1_1))) then 
                horizontalOverlapTop_V_fu_268 <= horizontalOverlapTop_V_1_fu_2556_p3;
            end if; 
        end if;
    end process;

    i_reg_864_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_makeSuperPoint_alignedToLine8_fu_1007_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state87))) then 
                i_reg_864 <= add_ln1134_reg_3044;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
                i_reg_864 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    indvar_flatten13_reg_797_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1116_fu_1856_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
                indvar_flatten13_reg_797 <= add_ln1116_1_fu_1850_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state83) and (ap_const_boolean_0 = ap_block_state83_on_subcall_done))) then 
                indvar_flatten13_reg_797 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    indvar_flatten21_reg_898_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1134_fu_2016_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state86))) then 
                indvar_flatten21_reg_898 <= ap_const_lv7_0;
            elsif (((icmp_ln1141_fu_2045_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state88))) then 
                indvar_flatten21_reg_898 <= select_ln1143_3_fu_2188_p3;
            end if; 
        end if;
    end process;

    indvar_flatten35_reg_876_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1134_fu_2016_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state86))) then 
                indvar_flatten35_reg_876 <= ap_const_lv8_0;
            elsif (((icmp_ln1141_fu_2045_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state88))) then 
                indvar_flatten35_reg_876 <= add_ln1141_1_fu_2039_p2;
            end if; 
        end if;
    end process;

    indvar_flatten43_reg_953_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
                indvar_flatten43_reg_953 <= ap_const_lv6_0;
            elsif (((icmp_ln1153_fu_2202_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state90))) then 
                indvar_flatten43_reg_953 <= select_ln1155_2_fu_2343_p3;
            end if; 
        end if;
    end process;

    indvar_flatten57_reg_931_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
                indvar_flatten57_reg_931 <= ap_const_lv7_0;
            elsif (((icmp_ln1153_fu_2202_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state90))) then 
                indvar_flatten57_reg_931 <= add_ln1153_1_fu_2196_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_819_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1116_fu_1856_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
                indvar_flatten_reg_819 <= select_ln1118_3_fu_1999_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state83) and (ap_const_boolean_0 = ap_block_state83_on_subcall_done))) then 
                indvar_flatten_reg_819 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    init_patch_size_0_reg_852_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_makeSuperPoint_alignedToLine8_fu_1007_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state87))) then 
                init_patch_size_0_reg_852 <= grp_makeSuperPoint_alignedToLine8_fu_1007_ap_return_1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
                init_patch_size_0_reg_852 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    makeHorizontallyShiftedPatch_reg_774_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state110)) then 
                makeHorizontallyShiftedPatch_reg_774 <= ap_const_lv1_1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
                makeHorizontallyShiftedPatch_reg_774 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    newZtop_V_reg_762_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state110)) then 
                newZtop_V_reg_762 <= newZtop_V_2_reg_2979;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
                newZtop_V_reg_762 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    original_ppl_fu_272_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                original_ppl_fu_272 <= ppl;
            elsif (((grp_makeSuperPoint_alignedToLine8_fu_1007_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state87))) then 
                original_ppl_fu_272 <= grp_makeSuperPoint_alignedToLine8_fu_1007_ap_return_0;
            end if; 
        end if;
    end process;

    original_topL_jL_V_reg_692_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state110)) then 
                original_topL_jL_V_reg_692 <= original_topL_jL_V_4_reg_3155;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
                original_topL_jL_V_reg_692 <= original_topL_jL_V_3_reg_2793;
            end if; 
        end if;
    end process;

    original_topL_jR_V_1_reg_752_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state110)) then 
                original_topL_jR_V_1_reg_752 <= original_topL_jR_V_3_reg_3198;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
                original_topL_jR_V_1_reg_752 <= patches_parameters_q1;
            end if; 
        end if;
    end process;

    original_topR_jL_V_1_reg_702_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state110)) then 
                original_topR_jL_V_1_reg_702 <= original_topR_jL_V_3_reg_3162;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
                original_topR_jL_V_1_reg_702 <= original_topR_jL_V_reg_2722;
            end if; 
        end if;
    end process;

    original_topR_jR_V_1_reg_742_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state110)) then 
                original_topR_jR_V_1_reg_742 <= original_topR_jR_V_3_reg_3191;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
                original_topR_jR_V_1_reg_742 <= patches_parameters_q0;
            end if; 
        end if;
    end process;

    shifted_Align_2_reg_788_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state110)) then 
                shifted_Align_2_reg_788 <= shifted_Align_5_reg_2994;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
                shifted_Align_2_reg_788 <= sext_ln774_fu_1696_p1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state86)) then
                add_ln1134_reg_3044 <= add_ln1134_fu_2010_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state82)) then
                add_ln811_reg_3005 <= add_ln811_fu_1843_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state95)) then
                add_ln817_1_reg_3130 <= add_ln817_1_fu_2392_p2;
                add_ln817_reg_3117 <= add_ln817_fu_2359_p2;
                    sub_ln821_reg_3122(11 downto 3) <= sub_ln821_fu_2386_p2(11 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                and_ln724_reg_2729 <= and_ln724_fu_1254_p2;
                original_topR_jL_V_reg_2722 <= patches_parameters_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state38)) then
                and_ln734_reg_2835 <= and_ln734_fu_1486_p2;
                complementary_topR_jR_V_3_reg_2828 <= patches_parameters_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state122)) then
                and_ln857_reg_3237 <= and_ln857_fu_2618_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state85)) then
                apexZ0_V_reg_3038 <= apexZ0_V_fu_2007_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state98)) then
                complementary_topL_jL_V_3_reg_3175 <= complementary_topL_jL_V_3_fu_2460_p3;
                complementary_topR_jL_V_3_reg_3169 <= complementary_topR_jL_V_3_fu_2453_p3;
                original_topL_jL_V_4_reg_3155 <= original_topL_jL_V_4_fu_2439_p3;
                original_topR_jL_V_3_reg_3162 <= original_topR_jL_V_3_fu_2446_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state79)) then
                complementary_topL_jL_V_reg_2930 <= patches_parameters_q0;
                complementary_topR_jL_V_reg_2925 <= patches_parameters_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state54)) then
                complementary_topL_jR_V_3_reg_2859 <= patches_parameters_q0;
                icmp_ln886_5_reg_2866 <= grp_fu_1123_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state99)) then
                complementary_topL_jR_V_4_reg_3186 <= complementary_topL_jR_V_4_fu_2474_p3;
                complementary_topR_jR_V_4_reg_3181 <= complementary_topR_jR_V_4_fu_2467_p3;
                horizontalShiftBottom_1_reg_3229 <= horizontalShiftBottom_1_fu_2515_p2;
                horizontalShiftTop_1_reg_3214 <= horizontalShiftTop_1_fu_2503_p2;
                original_topL_jR_V_3_reg_3198 <= original_topL_jR_V_3_fu_2489_p3;
                original_topR_jR_V_3_reg_3191 <= original_topR_jR_V_3_fu_2481_p3;
                sext_ln215_18_reg_3204 <= sext_ln215_18_fu_2496_p1;
                sext_ln215_19_reg_3209 <= sext_ln215_19_fu_2499_p1;
                sext_ln215_20_reg_3219 <= sext_ln215_20_fu_2508_p1;
                sext_ln215_21_reg_3224 <= sext_ln215_21_fu_2511_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln857_fu_2618_p2) and (ap_const_logic_1 = ap_CS_fsm_state122))) then
                icmp_ln859_reg_3241 <= icmp_ln859_fu_2623_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_fu_1123_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                icmp_ln878_3_reg_2804 <= icmp_ln878_3_fu_1402_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_fu_1123_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then
                icmp_ln878_5_reg_2870 <= icmp_ln878_5_fu_1564_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                icmp_ln886_3_reg_2800 <= grp_fu_1123_p2;
                original_topL_jL_V_3_reg_2793 <= patches_parameters_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state80)) then
                leftRight_reg_2974 <= leftRight_fu_1712_p2;
                newZtop_V_2_reg_2979 <= newZtop_V_2_fu_1718_p3;
                shiftOriginal_1_reg_2960 <= shiftOriginal_1_fu_1700_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state52)) then
                notlhs35_reg_2844 <= notlhs35_fu_1523_p2;
                notrhs36_reg_2849 <= notrhs36_fu_1529_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                notlhs37_reg_2813 <= notlhs37_fu_1439_p2;
                notrhs38_reg_2818 <= notrhs38_fu_1445_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                notlhs39_reg_2778 <= notlhs39_fu_1361_p2;
                notrhs40_reg_2783 <= notrhs40_fu_1367_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state68)) then
                notlhs_reg_2879 <= notlhs_fu_1601_p2;
                notrhs_reg_2884 <= notrhs_fu_1607_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state70)) then
                or_ln791_2_reg_2920 <= or_ln791_2_fu_1649_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state69)) then
                or_ln791_reg_2915 <= or_ln791_fu_1629_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                    patches_parameters_addr_13_reg_2758(11 downto 3) <= zext_ln727_fu_1305_p1(12 - 1 downto 0)(11 downto 3);
                    patches_parameters_addr_14_reg_2738(11 downto 3) <= zext_ln732_1_fu_1265_p1(12 - 1 downto 0)(11 downto 3);
                    patches_parameters_addr_15_reg_2743(11 downto 3) <= zext_ln737_fu_1275_p1(12 - 1 downto 0)(11 downto 3);
                    patches_parameters_addr_16_reg_2748(11 downto 3) <= zext_ln745_fu_1285_p1(12 - 1 downto 0)(11 downto 3);
                    patches_parameters_addr_17_reg_2753(11 downto 3) <= zext_ln746_fu_1295_p1(12 - 1 downto 0)(11 downto 3);
                    patches_parameters_addr_18_reg_2763(11 downto 3) <= zext_ln747_fu_1315_p1(12 - 1 downto 0)(11 downto 3);
                    patches_parameters_addr_19_reg_2768(11 downto 3) <= zext_ln748_fu_1325_p1(12 - 1 downto 0)(11 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state18))) then
                reg_1145 <= grp_straightLineProjectorFromLayerIJtoK_fu_1833_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state92) or ((ap_const_lv1_1 = and_ln857_fu_2618_p2) and (ap_const_logic_1 = ap_CS_fsm_state122)) or ((ap_const_logic_1 = ap_CS_fsm_state81) and (((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_779_p4 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln791_2_fu_1753_p2) and (or_ln791_1_fu_1740_p2 = ap_const_lv1_0)) or ((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_779_p4 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln791_1_fu_1792_p2) and (or_ln791_1_fu_1740_p2 = ap_const_lv1_1)))))) then
                reg_1150 <= n_patches_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state81) and (((ap_const_lv1_1 = and_ln791_2_fu_1753_p2) and (or_ln791_1_fu_1740_p2 = ap_const_lv1_0)) or ((ap_const_lv1_1 = and_ln791_1_fu_1792_p2) and (or_ln791_1_fu_1740_p2 = ap_const_lv1_1))))) then
                shifted_Align_5_reg_2994 <= shifted_Align_5_fu_1828_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                    sub_ln723_reg_2686(11 downto 3) <= sub_ln723_fu_1233_p2(11 downto 3);
                    sub_ln732_reg_2673(11 downto 3) <= sub_ln732_fu_1202_p2(11 downto 3);
                trunc_ln723_reg_2681 <= trunc_ln723_fu_1208_p1;
                    zext_ln721_reg_2694(7 downto 0) <= zext_ln721_fu_1239_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state81) and (((ap_const_lv1_0 = and_ln791_2_fu_1753_p2) and (ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_779_p4 = ap_const_lv1_1) and (or_ln791_1_fu_1740_p2 = ap_const_lv1_0)) or ((ap_const_lv1_0 = and_ln791_1_fu_1792_p2) and (ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_779_p4 = ap_const_lv1_1) and (or_ln791_1_fu_1740_p2 = ap_const_lv1_1))))) then
                trunc_ln164_reg_3000 <= trunc_ln164_fu_1835_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                trunc_ln732_reg_2662 <= trunc_ln732_fu_1156_p1;
                    zext_ln720_reg_2668(7 downto 0) <= zext_ln720_fu_1161_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state123)) then
                    zext_ln861_reg_3245(7 downto 0) <= zext_ln861_fu_2635_p1(7 downto 0);
            end if;
        end if;
    end process;
    zext_ln720_reg_2668(8) <= '0';
    sub_ln732_reg_2673(2 downto 0) <= "000";
    sub_ln723_reg_2686(2 downto 0) <= "000";
    zext_ln721_reg_2694(8) <= '0';
    patches_parameters_addr_14_reg_2738(2 downto 0) <= "010";
    patches_parameters_addr_15_reg_2743(2 downto 0) <= "110";
    patches_parameters_addr_16_reg_2748(2 downto 0) <= "100";
    patches_parameters_addr_17_reg_2753(2 downto 0) <= "000";
    patches_parameters_addr_13_reg_2758(2 downto 0) <= "000";
    patches_parameters_addr_18_reg_2763(2 downto 0) <= "010";
    patches_parameters_addr_19_reg_2768(2 downto 0) <= "110";
    sub_ln821_reg_3122(2 downto 0) <= "000";
    zext_ln861_reg_3245(8) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state81, or_ln791_1_fu_1740_p2, and_ln791_1_fu_1792_p2, ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_779_p4, and_ln791_2_fu_1753_p2, ap_CS_fsm_state92, ap_CS_fsm_state122, and_ln857_fu_2618_p2, and_ln724_reg_2729, ap_CS_fsm_state7, ap_CS_fsm_state22, grp_fu_1123_p2, icmp_ln878_3_fu_1402_p2, ap_CS_fsm_state38, and_ln734_fu_1486_p2, ap_CS_fsm_state54, icmp_ln878_5_fu_1564_p2, shiftOriginal_1_reg_2960, ap_CS_fsm_state84, icmp_ln1116_fu_1856_p2, ap_CS_fsm_state86, icmp_ln1134_fu_2016_p2, ap_CS_fsm_state87, ap_CS_fsm_state88, icmp_ln1141_fu_2045_p2, ap_CS_fsm_state90, icmp_ln1153_fu_2202_p2, ap_CS_fsm_state99, icmp_ln859_fu_2623_p2, grp_add_patch6_fu_986_ap_done, grp_makeSuperPoint_alignedToLine8_fu_1007_ap_done, grp_wedgePatch_init_fu_1034_ap_done, grp_getShadows_fu_1058_ap_done, ap_CS_fsm_state83, ap_block_state83_on_subcall_done, ap_CS_fsm_state94, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state96, ap_CS_fsm_state124, ap_block_state124_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_getShadows_fu_1058_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_getShadows_fu_1058_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_lv1_0 = and_ln724_reg_2729) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                if (((icmp_ln878_3_fu_1402_p2 = ap_const_lv1_1) and (grp_fu_1123_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                if (((ap_const_lv1_0 = and_ln734_fu_1486_p2) and (ap_const_logic_1 = ap_CS_fsm_state38))) then
                    ap_NS_fsm <= ap_ST_fsm_state53;
                else
                    ap_NS_fsm <= ap_ST_fsm_state39;
                end if;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                if (((icmp_ln878_5_fu_1564_p2 = ap_const_lv1_1) and (grp_fu_1123_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                else
                    ap_NS_fsm <= ap_ST_fsm_state69;
                end if;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state81) and (((ap_const_lv1_0 = and_ln791_2_fu_1753_p2) and (ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_779_p4 = ap_const_lv1_0) and (or_ln791_1_fu_1740_p2 = ap_const_lv1_0)) or ((ap_const_lv1_0 = and_ln791_1_fu_1792_p2) and (ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_779_p4 = ap_const_lv1_0) and (or_ln791_1_fu_1740_p2 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state124;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state81) and (((ap_const_lv1_0 = and_ln791_2_fu_1753_p2) and (ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_779_p4 = ap_const_lv1_1) and (or_ln791_1_fu_1740_p2 = ap_const_lv1_0)) or ((ap_const_lv1_0 = and_ln791_1_fu_1792_p2) and (ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_779_p4 = ap_const_lv1_1) and (or_ln791_1_fu_1740_p2 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state111;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state81) and (((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_779_p4 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln791_2_fu_1753_p2) and (or_ln791_1_fu_1740_p2 = ap_const_lv1_0)) or ((ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_779_p4 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln791_1_fu_1792_p2) and (or_ln791_1_fu_1740_p2 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state83;
                else
                    ap_NS_fsm <= ap_ST_fsm_state82;
                end if;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state83;
            when ap_ST_fsm_state83 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state83) and (ap_const_boolean_0 = ap_block_state83_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state84;
                else
                    ap_NS_fsm <= ap_ST_fsm_state83;
                end if;
            when ap_ST_fsm_state84 => 
                if (((icmp_ln1116_fu_1856_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then
                    ap_NS_fsm <= ap_ST_fsm_state84;
                else
                    ap_NS_fsm <= ap_ST_fsm_state85;
                end if;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state86;
            when ap_ST_fsm_state86 => 
                if (((icmp_ln1134_fu_2016_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state86))) then
                    ap_NS_fsm <= ap_ST_fsm_state88;
                else
                    ap_NS_fsm <= ap_ST_fsm_state87;
                end if;
            when ap_ST_fsm_state87 => 
                if (((grp_makeSuperPoint_alignedToLine8_fu_1007_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state87))) then
                    ap_NS_fsm <= ap_ST_fsm_state86;
                else
                    ap_NS_fsm <= ap_ST_fsm_state87;
                end if;
            when ap_ST_fsm_state88 => 
                if (((icmp_ln1141_fu_2045_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state88))) then
                    ap_NS_fsm <= ap_ST_fsm_state88;
                else
                    ap_NS_fsm <= ap_ST_fsm_state89;
                end if;
            when ap_ST_fsm_state89 => 
                ap_NS_fsm <= ap_ST_fsm_state90;
            when ap_ST_fsm_state90 => 
                if (((icmp_ln1153_fu_2202_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state90))) then
                    ap_NS_fsm <= ap_ST_fsm_state90;
                else
                    ap_NS_fsm <= ap_ST_fsm_state91;
                end if;
            when ap_ST_fsm_state91 => 
                ap_NS_fsm <= ap_ST_fsm_state92;
            when ap_ST_fsm_state92 => 
                if (((grp_wedgePatch_init_fu_1034_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state92))) then
                    ap_NS_fsm <= ap_ST_fsm_state93;
                else
                    ap_NS_fsm <= ap_ST_fsm_state92;
                end if;
            when ap_ST_fsm_state93 => 
                ap_NS_fsm <= ap_ST_fsm_state94;
            when ap_ST_fsm_state94 => 
                if (((grp_add_patch6_fu_986_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state94))) then
                    ap_NS_fsm <= ap_ST_fsm_state95;
                else
                    ap_NS_fsm <= ap_ST_fsm_state94;
                end if;
            when ap_ST_fsm_state95 => 
                ap_NS_fsm <= ap_ST_fsm_state96;
            when ap_ST_fsm_state96 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state96) and (grp_getShadows_fu_1058_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state97;
                else
                    ap_NS_fsm <= ap_ST_fsm_state96;
                end if;
            when ap_ST_fsm_state97 => 
                ap_NS_fsm <= ap_ST_fsm_state98;
            when ap_ST_fsm_state98 => 
                ap_NS_fsm <= ap_ST_fsm_state99;
            when ap_ST_fsm_state99 => 
                if (((shiftOriginal_1_reg_2960 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state99))) then
                    ap_NS_fsm <= ap_ST_fsm_state110;
                else
                    ap_NS_fsm <= ap_ST_fsm_state100;
                end if;
            when ap_ST_fsm_state100 => 
                ap_NS_fsm <= ap_ST_fsm_state101;
            when ap_ST_fsm_state101 => 
                ap_NS_fsm <= ap_ST_fsm_state102;
            when ap_ST_fsm_state102 => 
                ap_NS_fsm <= ap_ST_fsm_state103;
            when ap_ST_fsm_state103 => 
                ap_NS_fsm <= ap_ST_fsm_state104;
            when ap_ST_fsm_state104 => 
                ap_NS_fsm <= ap_ST_fsm_state105;
            when ap_ST_fsm_state105 => 
                ap_NS_fsm <= ap_ST_fsm_state106;
            when ap_ST_fsm_state106 => 
                ap_NS_fsm <= ap_ST_fsm_state107;
            when ap_ST_fsm_state107 => 
                ap_NS_fsm <= ap_ST_fsm_state108;
            when ap_ST_fsm_state108 => 
                ap_NS_fsm <= ap_ST_fsm_state109;
            when ap_ST_fsm_state109 => 
                ap_NS_fsm <= ap_ST_fsm_state110;
            when ap_ST_fsm_state110 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state111 => 
                ap_NS_fsm <= ap_ST_fsm_state112;
            when ap_ST_fsm_state112 => 
                ap_NS_fsm <= ap_ST_fsm_state113;
            when ap_ST_fsm_state113 => 
                ap_NS_fsm <= ap_ST_fsm_state114;
            when ap_ST_fsm_state114 => 
                ap_NS_fsm <= ap_ST_fsm_state115;
            when ap_ST_fsm_state115 => 
                ap_NS_fsm <= ap_ST_fsm_state116;
            when ap_ST_fsm_state116 => 
                ap_NS_fsm <= ap_ST_fsm_state117;
            when ap_ST_fsm_state117 => 
                ap_NS_fsm <= ap_ST_fsm_state118;
            when ap_ST_fsm_state118 => 
                ap_NS_fsm <= ap_ST_fsm_state119;
            when ap_ST_fsm_state119 => 
                ap_NS_fsm <= ap_ST_fsm_state120;
            when ap_ST_fsm_state120 => 
                ap_NS_fsm <= ap_ST_fsm_state121;
            when ap_ST_fsm_state121 => 
                ap_NS_fsm <= ap_ST_fsm_state122;
            when ap_ST_fsm_state122 => 
                if (((icmp_ln859_fu_2623_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln857_fu_2618_p2) and (ap_const_logic_1 = ap_CS_fsm_state122))) then
                    ap_NS_fsm <= ap_ST_fsm_state123;
                else
                    ap_NS_fsm <= ap_ST_fsm_state124;
                end if;
            when ap_ST_fsm_state123 => 
                ap_NS_fsm <= ap_ST_fsm_state124;
            when ap_ST_fsm_state124 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state124) and (ap_const_boolean_0 = ap_block_state124_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state124;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    GDarrayDecoded_address0 <= grp_makeSuperPoint_alignedToLine8_fu_1007_GDarrayDecoded_address0;
    GDarrayDecoded_address1 <= grp_makeSuperPoint_alignedToLine8_fu_1007_GDarrayDecoded_address1;
    GDarrayDecoded_ce0 <= grp_makeSuperPoint_alignedToLine8_fu_1007_GDarrayDecoded_ce0;
    GDarrayDecoded_ce1 <= grp_makeSuperPoint_alignedToLine8_fu_1007_GDarrayDecoded_ce1;
    GDn_points_address0 <= grp_makeSuperPoint_alignedToLine8_fu_1007_GDn_points_address0;
    GDn_points_ce0 <= grp_makeSuperPoint_alignedToLine8_fu_1007_GDn_points_ce0;

    NPpatches_parameters_V_0_address0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state90, grp_add_patch6_fu_986_wp_parameters_address0, grp_wedgePatch_init_fu_1034_wp_parameters_address0, ap_CS_fsm_state94, zext_ln1159_2_fu_2322_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            NPpatches_parameters_V_0_address0 <= zext_ln1159_2_fu_2322_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_parameters_V_0_address0 <= grp_wedgePatch_init_fu_1034_wp_parameters_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            NPpatches_parameters_V_0_address0 <= grp_add_patch6_fu_986_wp_parameters_address0;
        else 
            NPpatches_parameters_V_0_address0 <= "XXXXX";
        end if; 
    end process;


    NPpatches_parameters_V_0_ce0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state90, grp_add_patch6_fu_986_wp_parameters_ce0, grp_wedgePatch_init_fu_1034_wp_parameters_ce0, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            NPpatches_parameters_V_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_parameters_V_0_ce0 <= grp_wedgePatch_init_fu_1034_wp_parameters_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            NPpatches_parameters_V_0_ce0 <= grp_add_patch6_fu_986_wp_parameters_ce0;
        else 
            NPpatches_parameters_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_0_ce1_assign_proc : process(ap_CS_fsm_state92, grp_wedgePatch_init_fu_1034_wp_parameters_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_parameters_V_0_ce1 <= grp_wedgePatch_init_fu_1034_wp_parameters_ce1;
        else 
            NPpatches_parameters_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_0_d0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state90, grp_wedgePatch_init_fu_1034_wp_parameters_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            NPpatches_parameters_V_0_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_parameters_V_0_d0 <= grp_wedgePatch_init_fu_1034_wp_parameters_d0;
        else 
            NPpatches_parameters_V_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    NPpatches_parameters_V_0_we0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state90, select_ln1153_1_fu_2246_p3, icmp_ln1153_fu_2202_p2, grp_wedgePatch_init_fu_1034_wp_parameters_we0)
    begin
        if (((icmp_ln1153_fu_2202_p2 = ap_const_lv1_0) and (select_ln1153_1_fu_2246_p3 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state90))) then 
            NPpatches_parameters_V_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_parameters_V_0_we0 <= grp_wedgePatch_init_fu_1034_wp_parameters_we0;
        else 
            NPpatches_parameters_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_0_we1_assign_proc : process(ap_CS_fsm_state92, grp_wedgePatch_init_fu_1034_wp_parameters_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_parameters_V_0_we1 <= grp_wedgePatch_init_fu_1034_wp_parameters_we1;
        else 
            NPpatches_parameters_V_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_1_address0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state90, grp_add_patch6_fu_986_wp_parameters5_address0, grp_wedgePatch_init_fu_1034_wp_parameters5_address0, ap_CS_fsm_state94, zext_ln1159_2_fu_2322_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            NPpatches_parameters_V_1_address0 <= zext_ln1159_2_fu_2322_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_parameters_V_1_address0 <= grp_wedgePatch_init_fu_1034_wp_parameters5_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            NPpatches_parameters_V_1_address0 <= grp_add_patch6_fu_986_wp_parameters5_address0;
        else 
            NPpatches_parameters_V_1_address0 <= "XXXXX";
        end if; 
    end process;


    NPpatches_parameters_V_1_ce0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state90, grp_add_patch6_fu_986_wp_parameters5_ce0, grp_wedgePatch_init_fu_1034_wp_parameters5_ce0, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            NPpatches_parameters_V_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_parameters_V_1_ce0 <= grp_wedgePatch_init_fu_1034_wp_parameters5_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            NPpatches_parameters_V_1_ce0 <= grp_add_patch6_fu_986_wp_parameters5_ce0;
        else 
            NPpatches_parameters_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_1_ce1_assign_proc : process(ap_CS_fsm_state92, grp_wedgePatch_init_fu_1034_wp_parameters5_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_parameters_V_1_ce1 <= grp_wedgePatch_init_fu_1034_wp_parameters5_ce1;
        else 
            NPpatches_parameters_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_1_d0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state90, grp_wedgePatch_init_fu_1034_wp_parameters5_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            NPpatches_parameters_V_1_d0 <= ap_const_lv1_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_parameters_V_1_d0 <= grp_wedgePatch_init_fu_1034_wp_parameters5_d0;
        else 
            NPpatches_parameters_V_1_d0 <= "X";
        end if; 
    end process;


    NPpatches_parameters_V_1_we0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state90, select_ln1153_1_fu_2246_p3, icmp_ln1153_fu_2202_p2, grp_wedgePatch_init_fu_1034_wp_parameters5_we0)
    begin
        if (((icmp_ln1153_fu_2202_p2 = ap_const_lv1_0) and (select_ln1153_1_fu_2246_p3 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state90))) then 
            NPpatches_parameters_V_1_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_parameters_V_1_we0 <= grp_wedgePatch_init_fu_1034_wp_parameters5_we0;
        else 
            NPpatches_parameters_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_1_we1_assign_proc : process(ap_CS_fsm_state92, grp_wedgePatch_init_fu_1034_wp_parameters5_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_parameters_V_1_we1 <= grp_wedgePatch_init_fu_1034_wp_parameters5_we1;
        else 
            NPpatches_parameters_V_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_2_address0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state90, grp_add_patch6_fu_986_wp_parameters6_address0, grp_wedgePatch_init_fu_1034_wp_parameters6_address0, ap_CS_fsm_state94, zext_ln1159_2_fu_2322_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            NPpatches_parameters_V_2_address0 <= zext_ln1159_2_fu_2322_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_parameters_V_2_address0 <= grp_wedgePatch_init_fu_1034_wp_parameters6_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            NPpatches_parameters_V_2_address0 <= grp_add_patch6_fu_986_wp_parameters6_address0;
        else 
            NPpatches_parameters_V_2_address0 <= "XXXXX";
        end if; 
    end process;


    NPpatches_parameters_V_2_ce0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state90, grp_add_patch6_fu_986_wp_parameters6_ce0, grp_wedgePatch_init_fu_1034_wp_parameters6_ce0, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            NPpatches_parameters_V_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_parameters_V_2_ce0 <= grp_wedgePatch_init_fu_1034_wp_parameters6_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            NPpatches_parameters_V_2_ce0 <= grp_add_patch6_fu_986_wp_parameters6_ce0;
        else 
            NPpatches_parameters_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_2_ce1_assign_proc : process(ap_CS_fsm_state92, grp_wedgePatch_init_fu_1034_wp_parameters6_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_parameters_V_2_ce1 <= grp_wedgePatch_init_fu_1034_wp_parameters6_ce1;
        else 
            NPpatches_parameters_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_2_d0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state90, grp_wedgePatch_init_fu_1034_wp_parameters6_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            NPpatches_parameters_V_2_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_parameters_V_2_d0 <= grp_wedgePatch_init_fu_1034_wp_parameters6_d0;
        else 
            NPpatches_parameters_V_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    NPpatches_parameters_V_2_we0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state90, select_ln1153_1_fu_2246_p3, icmp_ln1153_fu_2202_p2, grp_wedgePatch_init_fu_1034_wp_parameters6_we0)
    begin
        if (((icmp_ln1153_fu_2202_p2 = ap_const_lv1_0) and (select_ln1153_1_fu_2246_p3 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state90))) then 
            NPpatches_parameters_V_2_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_parameters_V_2_we0 <= grp_wedgePatch_init_fu_1034_wp_parameters6_we0;
        else 
            NPpatches_parameters_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_2_we1_assign_proc : process(ap_CS_fsm_state92, grp_wedgePatch_init_fu_1034_wp_parameters6_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_parameters_V_2_we1 <= grp_wedgePatch_init_fu_1034_wp_parameters6_we1;
        else 
            NPpatches_parameters_V_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_3_address0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state90, grp_add_patch6_fu_986_wp_parameters7_address0, grp_wedgePatch_init_fu_1034_wp_parameters7_address0, ap_CS_fsm_state94, zext_ln1159_2_fu_2322_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            NPpatches_parameters_V_3_address0 <= zext_ln1159_2_fu_2322_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_parameters_V_3_address0 <= grp_wedgePatch_init_fu_1034_wp_parameters7_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            NPpatches_parameters_V_3_address0 <= grp_add_patch6_fu_986_wp_parameters7_address0;
        else 
            NPpatches_parameters_V_3_address0 <= "XXXXX";
        end if; 
    end process;


    NPpatches_parameters_V_3_ce0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state90, grp_add_patch6_fu_986_wp_parameters7_ce0, grp_wedgePatch_init_fu_1034_wp_parameters7_ce0, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            NPpatches_parameters_V_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_parameters_V_3_ce0 <= grp_wedgePatch_init_fu_1034_wp_parameters7_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            NPpatches_parameters_V_3_ce0 <= grp_add_patch6_fu_986_wp_parameters7_ce0;
        else 
            NPpatches_parameters_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_3_ce1_assign_proc : process(ap_CS_fsm_state92, grp_wedgePatch_init_fu_1034_wp_parameters7_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_parameters_V_3_ce1 <= grp_wedgePatch_init_fu_1034_wp_parameters7_ce1;
        else 
            NPpatches_parameters_V_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_3_d0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state90, grp_wedgePatch_init_fu_1034_wp_parameters7_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            NPpatches_parameters_V_3_d0 <= ap_const_lv1_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_parameters_V_3_d0 <= grp_wedgePatch_init_fu_1034_wp_parameters7_d0;
        else 
            NPpatches_parameters_V_3_d0 <= "X";
        end if; 
    end process;


    NPpatches_parameters_V_3_we0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state90, select_ln1153_1_fu_2246_p3, icmp_ln1153_fu_2202_p2, grp_wedgePatch_init_fu_1034_wp_parameters7_we0)
    begin
        if (((icmp_ln1153_fu_2202_p2 = ap_const_lv1_0) and (select_ln1153_1_fu_2246_p3 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state90))) then 
            NPpatches_parameters_V_3_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_parameters_V_3_we0 <= grp_wedgePatch_init_fu_1034_wp_parameters7_we0;
        else 
            NPpatches_parameters_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_3_we1_assign_proc : process(ap_CS_fsm_state92, grp_wedgePatch_init_fu_1034_wp_parameters7_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_parameters_V_3_we1 <= grp_wedgePatch_init_fu_1034_wp_parameters7_we1;
        else 
            NPpatches_parameters_V_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_4_address0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state90, grp_add_patch6_fu_986_wp_parameters8_address0, grp_wedgePatch_init_fu_1034_wp_parameters8_address0, ap_CS_fsm_state94, zext_ln1159_2_fu_2322_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            NPpatches_parameters_V_4_address0 <= zext_ln1159_2_fu_2322_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_parameters_V_4_address0 <= grp_wedgePatch_init_fu_1034_wp_parameters8_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            NPpatches_parameters_V_4_address0 <= grp_add_patch6_fu_986_wp_parameters8_address0;
        else 
            NPpatches_parameters_V_4_address0 <= "XXXXX";
        end if; 
    end process;


    NPpatches_parameters_V_4_ce0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state90, grp_add_patch6_fu_986_wp_parameters8_ce0, grp_wedgePatch_init_fu_1034_wp_parameters8_ce0, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            NPpatches_parameters_V_4_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_parameters_V_4_ce0 <= grp_wedgePatch_init_fu_1034_wp_parameters8_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            NPpatches_parameters_V_4_ce0 <= grp_add_patch6_fu_986_wp_parameters8_ce0;
        else 
            NPpatches_parameters_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_4_ce1_assign_proc : process(ap_CS_fsm_state92, grp_wedgePatch_init_fu_1034_wp_parameters8_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_parameters_V_4_ce1 <= grp_wedgePatch_init_fu_1034_wp_parameters8_ce1;
        else 
            NPpatches_parameters_V_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_4_d0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state90, grp_wedgePatch_init_fu_1034_wp_parameters8_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            NPpatches_parameters_V_4_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_parameters_V_4_d0 <= grp_wedgePatch_init_fu_1034_wp_parameters8_d0;
        else 
            NPpatches_parameters_V_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    NPpatches_parameters_V_4_we0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state90, select_ln1153_1_fu_2246_p3, icmp_ln1153_fu_2202_p2, grp_wedgePatch_init_fu_1034_wp_parameters8_we0)
    begin
        if ((not((select_ln1153_1_fu_2246_p3 = ap_const_lv3_0)) and not((select_ln1153_1_fu_2246_p3 = ap_const_lv3_1)) and not((select_ln1153_1_fu_2246_p3 = ap_const_lv3_2)) and not((select_ln1153_1_fu_2246_p3 = ap_const_lv3_3)) and (icmp_ln1153_fu_2202_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state90))) then 
            NPpatches_parameters_V_4_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_parameters_V_4_we0 <= grp_wedgePatch_init_fu_1034_wp_parameters8_we0;
        else 
            NPpatches_parameters_V_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_4_we1_assign_proc : process(ap_CS_fsm_state92, grp_wedgePatch_init_fu_1034_wp_parameters8_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_parameters_V_4_we1 <= grp_wedgePatch_init_fu_1034_wp_parameters8_we1;
        else 
            NPpatches_parameters_V_4_we1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_0_V_address0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state88, grp_add_patch6_fu_986_wp_superpoints_address0, grp_wedgePatch_init_fu_1034_wp_superpoints_address0, ap_CS_fsm_state94, zext_ln1147_1_fu_2167_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            NPpatches_superpoints_0_V_address0 <= zext_ln1147_1_fu_2167_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_superpoints_0_V_address0 <= grp_wedgePatch_init_fu_1034_wp_superpoints_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            NPpatches_superpoints_0_V_address0 <= grp_add_patch6_fu_986_wp_superpoints_address0;
        else 
            NPpatches_superpoints_0_V_address0 <= "XXXXX";
        end if; 
    end process;


    NPpatches_superpoints_0_V_address1_assign_proc : process(ap_CS_fsm_state92, grp_add_patch6_fu_986_wp_superpoints_address1, grp_wedgePatch_init_fu_1034_wp_superpoints_address1, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_superpoints_0_V_address1 <= grp_wedgePatch_init_fu_1034_wp_superpoints_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            NPpatches_superpoints_0_V_address1 <= grp_add_patch6_fu_986_wp_superpoints_address1;
        else 
            NPpatches_superpoints_0_V_address1 <= "XXXXX";
        end if; 
    end process;


    NPpatches_superpoints_0_V_ce0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state88, grp_add_patch6_fu_986_wp_superpoints_ce0, grp_wedgePatch_init_fu_1034_wp_superpoints_ce0, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            NPpatches_superpoints_0_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_superpoints_0_V_ce0 <= grp_wedgePatch_init_fu_1034_wp_superpoints_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            NPpatches_superpoints_0_V_ce0 <= grp_add_patch6_fu_986_wp_superpoints_ce0;
        else 
            NPpatches_superpoints_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_0_V_ce1_assign_proc : process(ap_CS_fsm_state92, grp_add_patch6_fu_986_wp_superpoints_ce1, grp_wedgePatch_init_fu_1034_wp_superpoints_ce1, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_superpoints_0_V_ce1 <= grp_wedgePatch_init_fu_1034_wp_superpoints_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            NPpatches_superpoints_0_V_ce1 <= grp_add_patch6_fu_986_wp_superpoints_ce1;
        else 
            NPpatches_superpoints_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_0_V_d0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state88, grp_wedgePatch_init_fu_1034_wp_superpoints_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            NPpatches_superpoints_0_V_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_superpoints_0_V_d0 <= grp_wedgePatch_init_fu_1034_wp_superpoints_d0;
        else 
            NPpatches_superpoints_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    NPpatches_superpoints_0_V_we0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state88, select_ln1141_1_fu_2089_p3, icmp_ln1141_fu_2045_p2, grp_wedgePatch_init_fu_1034_wp_superpoints_we0)
    begin
        if (((icmp_ln1141_fu_2045_p2 = ap_const_lv1_0) and (select_ln1141_1_fu_2089_p3 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state88))) then 
            NPpatches_superpoints_0_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_superpoints_0_V_we0 <= grp_wedgePatch_init_fu_1034_wp_superpoints_we0;
        else 
            NPpatches_superpoints_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_1_V_address0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state88, grp_add_patch6_fu_986_wp_superpoints1_address0, grp_wedgePatch_init_fu_1034_wp_superpoints1_address0, ap_CS_fsm_state94, zext_ln1147_1_fu_2167_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            NPpatches_superpoints_1_V_address0 <= zext_ln1147_1_fu_2167_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_superpoints_1_V_address0 <= grp_wedgePatch_init_fu_1034_wp_superpoints1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            NPpatches_superpoints_1_V_address0 <= grp_add_patch6_fu_986_wp_superpoints1_address0;
        else 
            NPpatches_superpoints_1_V_address0 <= "XXXXX";
        end if; 
    end process;


    NPpatches_superpoints_1_V_address1_assign_proc : process(ap_CS_fsm_state92, grp_add_patch6_fu_986_wp_superpoints1_address1, grp_wedgePatch_init_fu_1034_wp_superpoints1_address1, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_superpoints_1_V_address1 <= grp_wedgePatch_init_fu_1034_wp_superpoints1_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            NPpatches_superpoints_1_V_address1 <= grp_add_patch6_fu_986_wp_superpoints1_address1;
        else 
            NPpatches_superpoints_1_V_address1 <= "XXXXX";
        end if; 
    end process;


    NPpatches_superpoints_1_V_ce0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state88, grp_add_patch6_fu_986_wp_superpoints1_ce0, grp_wedgePatch_init_fu_1034_wp_superpoints1_ce0, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            NPpatches_superpoints_1_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_superpoints_1_V_ce0 <= grp_wedgePatch_init_fu_1034_wp_superpoints1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            NPpatches_superpoints_1_V_ce0 <= grp_add_patch6_fu_986_wp_superpoints1_ce0;
        else 
            NPpatches_superpoints_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_1_V_ce1_assign_proc : process(ap_CS_fsm_state92, grp_add_patch6_fu_986_wp_superpoints1_ce1, grp_wedgePatch_init_fu_1034_wp_superpoints1_ce1, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_superpoints_1_V_ce1 <= grp_wedgePatch_init_fu_1034_wp_superpoints1_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            NPpatches_superpoints_1_V_ce1 <= grp_add_patch6_fu_986_wp_superpoints1_ce1;
        else 
            NPpatches_superpoints_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_1_V_d0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state88, grp_wedgePatch_init_fu_1034_wp_superpoints1_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            NPpatches_superpoints_1_V_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_superpoints_1_V_d0 <= grp_wedgePatch_init_fu_1034_wp_superpoints1_d0;
        else 
            NPpatches_superpoints_1_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    NPpatches_superpoints_1_V_we0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state88, select_ln1141_1_fu_2089_p3, icmp_ln1141_fu_2045_p2, grp_wedgePatch_init_fu_1034_wp_superpoints1_we0)
    begin
        if (((icmp_ln1141_fu_2045_p2 = ap_const_lv1_0) and (select_ln1141_1_fu_2089_p3 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state88))) then 
            NPpatches_superpoints_1_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_superpoints_1_V_we0 <= grp_wedgePatch_init_fu_1034_wp_superpoints1_we0;
        else 
            NPpatches_superpoints_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_2_V_address0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state88, grp_add_patch6_fu_986_wp_superpoints2_address0, grp_wedgePatch_init_fu_1034_wp_superpoints2_address0, ap_CS_fsm_state94, zext_ln1147_1_fu_2167_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            NPpatches_superpoints_2_V_address0 <= zext_ln1147_1_fu_2167_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_superpoints_2_V_address0 <= grp_wedgePatch_init_fu_1034_wp_superpoints2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            NPpatches_superpoints_2_V_address0 <= grp_add_patch6_fu_986_wp_superpoints2_address0;
        else 
            NPpatches_superpoints_2_V_address0 <= "XXXXX";
        end if; 
    end process;


    NPpatches_superpoints_2_V_address1_assign_proc : process(ap_CS_fsm_state92, grp_add_patch6_fu_986_wp_superpoints2_address1, grp_wedgePatch_init_fu_1034_wp_superpoints2_address1, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_superpoints_2_V_address1 <= grp_wedgePatch_init_fu_1034_wp_superpoints2_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            NPpatches_superpoints_2_V_address1 <= grp_add_patch6_fu_986_wp_superpoints2_address1;
        else 
            NPpatches_superpoints_2_V_address1 <= "XXXXX";
        end if; 
    end process;


    NPpatches_superpoints_2_V_ce0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state88, grp_add_patch6_fu_986_wp_superpoints2_ce0, grp_wedgePatch_init_fu_1034_wp_superpoints2_ce0, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            NPpatches_superpoints_2_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_superpoints_2_V_ce0 <= grp_wedgePatch_init_fu_1034_wp_superpoints2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            NPpatches_superpoints_2_V_ce0 <= grp_add_patch6_fu_986_wp_superpoints2_ce0;
        else 
            NPpatches_superpoints_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_2_V_ce1_assign_proc : process(ap_CS_fsm_state92, grp_add_patch6_fu_986_wp_superpoints2_ce1, grp_wedgePatch_init_fu_1034_wp_superpoints2_ce1, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_superpoints_2_V_ce1 <= grp_wedgePatch_init_fu_1034_wp_superpoints2_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            NPpatches_superpoints_2_V_ce1 <= grp_add_patch6_fu_986_wp_superpoints2_ce1;
        else 
            NPpatches_superpoints_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_2_V_d0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state88, grp_wedgePatch_init_fu_1034_wp_superpoints2_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            NPpatches_superpoints_2_V_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_superpoints_2_V_d0 <= grp_wedgePatch_init_fu_1034_wp_superpoints2_d0;
        else 
            NPpatches_superpoints_2_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    NPpatches_superpoints_2_V_we0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state88, select_ln1141_1_fu_2089_p3, icmp_ln1141_fu_2045_p2, grp_wedgePatch_init_fu_1034_wp_superpoints2_we0)
    begin
        if (((icmp_ln1141_fu_2045_p2 = ap_const_lv1_0) and (select_ln1141_1_fu_2089_p3 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state88))) then 
            NPpatches_superpoints_2_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_superpoints_2_V_we0 <= grp_wedgePatch_init_fu_1034_wp_superpoints2_we0;
        else 
            NPpatches_superpoints_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_3_V_address0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state88, grp_add_patch6_fu_986_wp_superpoints3_address0, grp_wedgePatch_init_fu_1034_wp_superpoints3_address0, ap_CS_fsm_state94, zext_ln1147_1_fu_2167_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            NPpatches_superpoints_3_V_address0 <= zext_ln1147_1_fu_2167_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_superpoints_3_V_address0 <= grp_wedgePatch_init_fu_1034_wp_superpoints3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            NPpatches_superpoints_3_V_address0 <= grp_add_patch6_fu_986_wp_superpoints3_address0;
        else 
            NPpatches_superpoints_3_V_address0 <= "XXXXX";
        end if; 
    end process;


    NPpatches_superpoints_3_V_address1_assign_proc : process(ap_CS_fsm_state92, grp_add_patch6_fu_986_wp_superpoints3_address1, grp_wedgePatch_init_fu_1034_wp_superpoints3_address1, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_superpoints_3_V_address1 <= grp_wedgePatch_init_fu_1034_wp_superpoints3_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            NPpatches_superpoints_3_V_address1 <= grp_add_patch6_fu_986_wp_superpoints3_address1;
        else 
            NPpatches_superpoints_3_V_address1 <= "XXXXX";
        end if; 
    end process;


    NPpatches_superpoints_3_V_ce0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state88, grp_add_patch6_fu_986_wp_superpoints3_ce0, grp_wedgePatch_init_fu_1034_wp_superpoints3_ce0, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            NPpatches_superpoints_3_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_superpoints_3_V_ce0 <= grp_wedgePatch_init_fu_1034_wp_superpoints3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            NPpatches_superpoints_3_V_ce0 <= grp_add_patch6_fu_986_wp_superpoints3_ce0;
        else 
            NPpatches_superpoints_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_3_V_ce1_assign_proc : process(ap_CS_fsm_state92, grp_add_patch6_fu_986_wp_superpoints3_ce1, grp_wedgePatch_init_fu_1034_wp_superpoints3_ce1, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_superpoints_3_V_ce1 <= grp_wedgePatch_init_fu_1034_wp_superpoints3_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            NPpatches_superpoints_3_V_ce1 <= grp_add_patch6_fu_986_wp_superpoints3_ce1;
        else 
            NPpatches_superpoints_3_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_3_V_d0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state88, grp_wedgePatch_init_fu_1034_wp_superpoints3_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            NPpatches_superpoints_3_V_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_superpoints_3_V_d0 <= grp_wedgePatch_init_fu_1034_wp_superpoints3_d0;
        else 
            NPpatches_superpoints_3_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    NPpatches_superpoints_3_V_we0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state88, select_ln1141_1_fu_2089_p3, icmp_ln1141_fu_2045_p2, grp_wedgePatch_init_fu_1034_wp_superpoints3_we0)
    begin
        if (((icmp_ln1141_fu_2045_p2 = ap_const_lv1_0) and (select_ln1141_1_fu_2089_p3 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state88))) then 
            NPpatches_superpoints_3_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_superpoints_3_V_we0 <= grp_wedgePatch_init_fu_1034_wp_superpoints3_we0;
        else 
            NPpatches_superpoints_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_4_V_address0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state88, grp_add_patch6_fu_986_wp_superpoints4_address0, grp_wedgePatch_init_fu_1034_wp_superpoints4_address0, ap_CS_fsm_state94, zext_ln1147_1_fu_2167_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            NPpatches_superpoints_4_V_address0 <= zext_ln1147_1_fu_2167_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_superpoints_4_V_address0 <= grp_wedgePatch_init_fu_1034_wp_superpoints4_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            NPpatches_superpoints_4_V_address0 <= grp_add_patch6_fu_986_wp_superpoints4_address0;
        else 
            NPpatches_superpoints_4_V_address0 <= "XXXXX";
        end if; 
    end process;


    NPpatches_superpoints_4_V_address1_assign_proc : process(ap_CS_fsm_state92, grp_add_patch6_fu_986_wp_superpoints4_address1, grp_wedgePatch_init_fu_1034_wp_superpoints4_address1, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_superpoints_4_V_address1 <= grp_wedgePatch_init_fu_1034_wp_superpoints4_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            NPpatches_superpoints_4_V_address1 <= grp_add_patch6_fu_986_wp_superpoints4_address1;
        else 
            NPpatches_superpoints_4_V_address1 <= "XXXXX";
        end if; 
    end process;


    NPpatches_superpoints_4_V_ce0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state88, grp_add_patch6_fu_986_wp_superpoints4_ce0, grp_wedgePatch_init_fu_1034_wp_superpoints4_ce0, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            NPpatches_superpoints_4_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_superpoints_4_V_ce0 <= grp_wedgePatch_init_fu_1034_wp_superpoints4_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            NPpatches_superpoints_4_V_ce0 <= grp_add_patch6_fu_986_wp_superpoints4_ce0;
        else 
            NPpatches_superpoints_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_4_V_ce1_assign_proc : process(ap_CS_fsm_state92, grp_add_patch6_fu_986_wp_superpoints4_ce1, grp_wedgePatch_init_fu_1034_wp_superpoints4_ce1, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_superpoints_4_V_ce1 <= grp_wedgePatch_init_fu_1034_wp_superpoints4_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            NPpatches_superpoints_4_V_ce1 <= grp_add_patch6_fu_986_wp_superpoints4_ce1;
        else 
            NPpatches_superpoints_4_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_4_V_d0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state88, grp_wedgePatch_init_fu_1034_wp_superpoints4_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            NPpatches_superpoints_4_V_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_superpoints_4_V_d0 <= grp_wedgePatch_init_fu_1034_wp_superpoints4_d0;
        else 
            NPpatches_superpoints_4_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    NPpatches_superpoints_4_V_we0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state88, select_ln1141_1_fu_2089_p3, icmp_ln1141_fu_2045_p2, grp_wedgePatch_init_fu_1034_wp_superpoints4_we0)
    begin
        if ((not((select_ln1141_1_fu_2089_p3 = ap_const_lv3_0)) and not((select_ln1141_1_fu_2089_p3 = ap_const_lv3_1)) and not((select_ln1141_1_fu_2089_p3 = ap_const_lv3_2)) and not((select_ln1141_1_fu_2089_p3 = ap_const_lv3_3)) and (icmp_ln1141_fu_2045_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state88))) then 
            NPpatches_superpoints_4_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            NPpatches_superpoints_4_V_we0 <= grp_wedgePatch_init_fu_1034_wp_superpoints4_we0;
        else 
            NPpatches_superpoints_4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln1116_1_fu_1850_p2 <= std_logic_vector(unsigned(indvar_flatten13_reg_797) + unsigned(ap_const_lv8_1));
    add_ln1116_fu_1862_p2 <= std_logic_vector(unsigned(a_reg_808) + unsigned(ap_const_lv3_1));
    add_ln1118_1_fu_1993_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_819) + unsigned(ap_const_lv7_1));
    add_ln1118_fu_1908_p2 <= std_logic_vector(unsigned(select_ln1116_fu_1874_p3) + unsigned(ap_const_lv5_1));
    add_ln1120_fu_1987_p2 <= std_logic_vector(unsigned(select_ln1118_fu_1920_p3) + unsigned(ap_const_lv2_1));
    add_ln1122_fu_1972_p2 <= std_logic_vector(unsigned(tmp_66_cast_fu_1952_p3) + unsigned(zext_ln1122_fu_1968_p1));
    add_ln1134_fu_2010_p2 <= std_logic_vector(unsigned(i_reg_864) + unsigned(ap_const_lv3_1));
    add_ln1141_1_fu_2039_p2 <= std_logic_vector(unsigned(indvar_flatten35_reg_876) + unsigned(ap_const_lv8_1));
    add_ln1141_fu_2051_p2 <= std_logic_vector(unsigned(b_1_reg_887) + unsigned(ap_const_lv3_1));
    add_ln1143_1_fu_2182_p2 <= std_logic_vector(unsigned(indvar_flatten21_reg_898) + unsigned(ap_const_lv7_1));
    add_ln1143_fu_2097_p2 <= std_logic_vector(unsigned(select_ln1141_fu_2063_p3) + unsigned(ap_const_lv5_1));
    add_ln1145_fu_2176_p2 <= std_logic_vector(unsigned(select_ln1143_fu_2109_p3) + unsigned(ap_const_lv2_1));
    add_ln1147_fu_2161_p2 <= std_logic_vector(unsigned(tmp_67_cast_fu_2141_p3) + unsigned(zext_ln1147_fu_2157_p1));
    add_ln1153_1_fu_2196_p2 <= std_logic_vector(unsigned(indvar_flatten57_reg_931) + unsigned(ap_const_lv7_1));
    add_ln1153_fu_2208_p2 <= std_logic_vector(unsigned(b_2_reg_942) + unsigned(ap_const_lv3_1));
    add_ln1155_1_fu_2337_p2 <= std_logic_vector(unsigned(indvar_flatten43_reg_953) + unsigned(ap_const_lv6_1));
    add_ln1155_fu_2254_p2 <= std_logic_vector(unsigned(select_ln1153_fu_2220_p3) + unsigned(ap_const_lv3_1));
    add_ln1157_fu_2331_p2 <= std_logic_vector(unsigned(select_ln1155_fu_2266_p3) + unsigned(ap_const_lv3_1));
    add_ln1159_fu_2316_p2 <= std_logic_vector(unsigned(sub_ln1159_fu_2306_p2) + unsigned(zext_ln1159_1_fu_2312_p1));
    add_ln723_fu_1244_p2 <= std_logic_vector(unsigned(sub_ln723_reg_2686) + unsigned(ap_const_lv12_24));
    add_ln727_fu_1300_p2 <= std_logic_vector(unsigned(sub_ln723_reg_2686) + unsigned(ap_const_lv12_18));
    add_ln732_fu_1260_p2 <= std_logic_vector(unsigned(sub_ln732_reg_2673) + unsigned(ap_const_lv12_2A));
    add_ln737_fu_1270_p2 <= std_logic_vector(unsigned(sub_ln732_reg_2673) + unsigned(ap_const_lv12_1E));
    add_ln745_fu_1280_p2 <= std_logic_vector(unsigned(sub_ln732_reg_2673) + unsigned(ap_const_lv12_24));
    add_ln746_fu_1290_p2 <= std_logic_vector(unsigned(sub_ln732_reg_2673) + unsigned(ap_const_lv12_18));
    add_ln747_fu_1310_p2 <= std_logic_vector(unsigned(sub_ln723_reg_2686) + unsigned(ap_const_lv12_2A));
    add_ln748_fu_1320_p2 <= std_logic_vector(unsigned(sub_ln723_reg_2686) + unsigned(ap_const_lv12_1E));
    add_ln811_fu_1843_p2 <= std_logic_vector(unsigned(zext_ln811_fu_1839_p1) + unsigned(ap_const_lv9_1FF));
    add_ln817_1_fu_2392_p2 <= std_logic_vector(unsigned(trunc_ln817_fu_2355_p1) + unsigned(ap_const_lv5_1F));
    add_ln817_fu_2359_p2 <= std_logic_vector(unsigned(zext_ln817_fu_2351_p1) + unsigned(ap_const_lv9_1FF));
    add_ln821_fu_2399_p2 <= std_logic_vector(unsigned(sub_ln821_reg_3122) + unsigned(ap_const_lv12_24));
    add_ln822_fu_2409_p2 <= std_logic_vector(unsigned(sub_ln821_reg_3122) + unsigned(ap_const_lv12_18));
    add_ln823_fu_2419_p2 <= std_logic_vector(unsigned(sub_ln821_reg_3122) + unsigned(ap_const_lv12_2A));
    add_ln824_fu_2429_p2 <= std_logic_vector(unsigned(sub_ln821_reg_3122) + unsigned(ap_const_lv12_1E));
    add_ln861_fu_2629_p2 <= std_logic_vector(unsigned(reg_1150) + unsigned(ap_const_lv8_FD));
    and_ln1116_fu_1894_p2 <= (xor_ln1116_fu_1882_p2 and icmp_ln1120_fu_1888_p2);
    and_ln1141_fu_2083_p2 <= (xor_ln1141_fu_2071_p2 and icmp_ln1145_fu_2077_p2);
    and_ln1153_fu_2240_p2 <= (xor_ln1153_fu_2228_p2 and icmp_ln1157_fu_2234_p2);
    and_ln724_fu_1254_p2 <= (grp_fu_1129_p2 and grp_fu_1123_p2);
    and_ln734_fu_1486_p2 <= (icmp_ln886_4_fu_1480_p2 and grp_fu_1129_p2);
    and_ln791_1_fu_1792_p2 <= (grp_fu_1135_p2 and and_ln791_fu_1786_p2);
    and_ln791_2_fu_1753_p2 <= (grp_fu_1140_p2 and grp_fu_1135_p2);
    and_ln791_fu_1786_p2 <= (xor_ln791_fu_1780_p2 and grp_fu_1140_p2);
    and_ln857_fu_2618_p2 <= (shiftOriginal_1_reg_2960 and icmp_ln886_7_fu_2612_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state110 <= ap_CS_fsm(109);
    ap_CS_fsm_state111 <= ap_CS_fsm(110);
    ap_CS_fsm_state122 <= ap_CS_fsm(121);
    ap_CS_fsm_state123 <= ap_CS_fsm(122);
    ap_CS_fsm_state124 <= ap_CS_fsm(123);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state66 <= ap_CS_fsm(65);
    ap_CS_fsm_state67 <= ap_CS_fsm(66);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state78 <= ap_CS_fsm(77);
    ap_CS_fsm_state79 <= ap_CS_fsm(78);
    ap_CS_fsm_state80 <= ap_CS_fsm(79);
    ap_CS_fsm_state81 <= ap_CS_fsm(80);
    ap_CS_fsm_state82 <= ap_CS_fsm(81);
    ap_CS_fsm_state83 <= ap_CS_fsm(82);
    ap_CS_fsm_state84 <= ap_CS_fsm(83);
    ap_CS_fsm_state85 <= ap_CS_fsm(84);
    ap_CS_fsm_state86 <= ap_CS_fsm(85);
    ap_CS_fsm_state87 <= ap_CS_fsm(86);
    ap_CS_fsm_state88 <= ap_CS_fsm(87);
    ap_CS_fsm_state89 <= ap_CS_fsm(88);
    ap_CS_fsm_state90 <= ap_CS_fsm(89);
    ap_CS_fsm_state91 <= ap_CS_fsm(90);
    ap_CS_fsm_state92 <= ap_CS_fsm(91);
    ap_CS_fsm_state93 <= ap_CS_fsm(92);
    ap_CS_fsm_state94 <= ap_CS_fsm(93);
    ap_CS_fsm_state95 <= ap_CS_fsm(94);
    ap_CS_fsm_state96 <= ap_CS_fsm(95);
    ap_CS_fsm_state97 <= ap_CS_fsm(96);
    ap_CS_fsm_state98 <= ap_CS_fsm(97);
    ap_CS_fsm_state99 <= ap_CS_fsm(98);
    ap_NS_fsm_state111 <= ap_NS_fsm(110);
    ap_NS_fsm_state23 <= ap_NS_fsm(22);
    ap_NS_fsm_state39 <= ap_NS_fsm(38);
    ap_NS_fsm_state55 <= ap_NS_fsm(54);
    ap_NS_fsm_state69 <= ap_NS_fsm(68);
    ap_NS_fsm_state7 <= ap_NS_fsm(6);
    ap_NS_fsm_state99 <= ap_NS_fsm(98);

    ap_block_state124_on_subcall_done_assign_proc : process(grp_delete_patch_fu_1103_ap_done, ap_predicate_op728_call_state124)
    begin
                ap_block_state124_on_subcall_done <= ((ap_predicate_op728_call_state124 = ap_const_boolean_1) and (grp_delete_patch_fu_1103_ap_done = ap_const_logic_0));
    end process;


    ap_block_state83_on_subcall_done_assign_proc : process(grp_delete_patch_fu_1103_ap_done, makeHorizontallyShiftedPatch_reg_774)
    begin
                ap_block_state83_on_subcall_done <= ((makeHorizontallyShiftedPatch_reg_774 = ap_const_lv1_1) and (grp_delete_patch_fu_1103_ap_done = ap_const_logic_0));
    end process;


    ap_condition_3137_assign_proc : process(and_ln857_reg_3237, icmp_ln859_reg_3241, ap_CS_fsm_state124)
    begin
                ap_condition_3137 <= ((icmp_ln859_reg_3241 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln857_reg_3237) and (ap_const_logic_1 = ap_CS_fsm_state124));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state124, ap_block_state124_on_subcall_done)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state124) and (ap_const_boolean_0 = ap_block_state124_on_subcall_done)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_makeHorizontallyShiftedPatch_phi_fu_779_p4 <= makeHorizontallyShiftedPatch_reg_774;

    ap_predicate_op728_call_state124_assign_proc : process(and_ln857_reg_3237, icmp_ln859_reg_3241, makeHorizontallyShiftedPatch_reg_774)
    begin
                ap_predicate_op728_call_state124 <= ((icmp_ln859_reg_3241 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln857_reg_3237) and (makeHorizontallyShiftedPatch_reg_774 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state124, ap_block_state124_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state124) and (ap_const_boolean_0 = ap_block_state124_on_subcall_done))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    apexZ0_V_fu_2007_p1 <= shifted_Align_5_reg_2994(32 - 1 downto 0);
    bitcast_ln521_3_fu_1420_p1 <= zext_ln368_3_fu_1416_p1;
    bitcast_ln521_4_fu_1504_p1 <= zext_ln368_4_fu_1500_p1;
    bitcast_ln521_5_fu_1582_p1 <= zext_ln368_5_fu_1578_p1;
    bitcast_ln521_fu_1342_p1 <= zext_ln368_fu_1338_p1;
    cmp_i_i297_not_fu_1706_p2 <= (icmp_ln886_6_fu_1683_p2 xor ap_const_lv1_1);
    complementary_topL_jL_V_3_fu_2460_p3 <= 
        complementary_topL_jL_V_1_reg_732 when (shiftOriginal_1_reg_2960(0) = '1') else 
        patches_parameters_q1;
    complementary_topL_jR_V_4_fu_2474_p3 <= 
        complementary_topL_jR_V_reg_712 when (shiftOriginal_1_reg_2960(0) = '1') else 
        patches_parameters_q1;
    complementary_topR_jL_V_3_fu_2453_p3 <= 
        complementary_topR_jL_V_1_reg_722 when (shiftOriginal_1_reg_2960(0) = '1') else 
        patches_parameters_q0;
    complementary_topR_jR_V_4_fu_2467_p3 <= 
        complementary_topR_jR_V_reg_682 when (shiftOriginal_1_reg_2960(0) = '1') else 
        patches_parameters_q0;
    data_V_7_fu_1408_p1 <= grp_fu_1851_p_dout0;
    data_V_8_fu_1492_p1 <= grp_fu_1851_p_dout0;
    data_V_9_fu_1570_p1 <= grp_fu_1851_p_dout0;
    data_V_fu_1330_p1 <= grp_fu_1851_p_dout0;
    empty_100_fu_1613_p2 <= (notrhs_reg_2884 or notlhs_reg_2879);
    empty_101_fu_1617_p2 <= (grp_fu_660_p_dout0 and empty_100_fu_1613_p2);
    empty_102_fu_1623_p2 <= (empty_101_fu_1617_p2 xor ap_const_lv1_1);
    empty_85_fu_1373_p2 <= (notrhs40_reg_2783 or notlhs39_reg_2778);
    empty_86_fu_1377_p2 <= (grp_fu_660_p_dout0 and empty_85_fu_1373_p2);
    empty_87_fu_1383_p2 <= (empty_86_fu_1377_p2 xor ap_const_lv1_1);
    empty_89_fu_1435_p1 <= data_V_7_fu_1408_p1(52 - 1 downto 0);
    empty_90_fu_1451_p2 <= (notrhs38_reg_2818 or notlhs37_reg_2813);
    empty_91_fu_1455_p2 <= (grp_fu_660_p_dout0 and empty_90_fu_1451_p2);
    empty_92_fu_1461_p2 <= (empty_91_fu_1455_p2 xor ap_const_lv1_1);
    empty_94_fu_1519_p1 <= data_V_8_fu_1492_p1(52 - 1 downto 0);
    empty_95_fu_1535_p2 <= (notrhs36_reg_2849 or notlhs35_reg_2844);
    empty_96_fu_1539_p2 <= (grp_fu_660_p_dout0 and empty_95_fu_1535_p2);
    empty_97_fu_1545_p2 <= (empty_96_fu_1539_p2 xor ap_const_lv1_1);
    empty_99_fu_1597_p1 <= data_V_9_fu_1570_p1(52 - 1 downto 0);
    empty_fu_1357_p1 <= data_V_fu_1330_p1(52 - 1 downto 0);
    grp_add_patch6_fu_986_ap_start <= grp_add_patch6_fu_986_ap_start_reg;
    grp_delete_patch_fu_1103_ap_start <= grp_delete_patch_fu_1103_ap_start_reg;

    grp_delete_patch_fu_1103_index_assign_proc : process(add_ln811_reg_3005, zext_ln861_reg_3245, makeHorizontallyShiftedPatch_reg_774, ap_CS_fsm_state83, ap_condition_3137)
    begin
        if ((makeHorizontallyShiftedPatch_reg_774 = ap_const_lv1_1)) then
            if ((ap_const_boolean_1 = ap_condition_3137)) then 
                grp_delete_patch_fu_1103_index <= zext_ln861_reg_3245;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
                grp_delete_patch_fu_1103_index <= add_ln811_reg_3005;
            else 
                grp_delete_patch_fu_1103_index <= "XXXXXXXXX";
            end if;
        else 
            grp_delete_patch_fu_1103_index <= "XXXXXXXXX";
        end if; 
    end process;

    grp_fu_1115_ce <= ap_const_logic_1;
    grp_fu_1115_opcode <= ap_const_lv5_4;

    grp_fu_1115_p0_assign_proc : process(bitcast_ln521_fu_1342_p1, ap_CS_fsm_state20, bitcast_ln521_3_fu_1420_p1, ap_CS_fsm_state36, bitcast_ln521_4_fu_1504_p1, ap_CS_fsm_state52, bitcast_ln521_5_fu_1582_p1, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            grp_fu_1115_p0 <= bitcast_ln521_5_fu_1582_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            grp_fu_1115_p0 <= bitcast_ln521_4_fu_1504_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_1115_p0 <= bitcast_ln521_3_fu_1420_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_1115_p0 <= bitcast_ln521_fu_1342_p1;
        else 
            grp_fu_1115_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_1115_p1 <= ap_const_lv64_41B1E1A300000000;
    grp_fu_1115_p2 <= grp_fu_660_p_dout0;
    grp_fu_1120_ce <= ap_const_logic_1;
    grp_fu_1120_p0 <= reg_1145;
    grp_fu_1120_p1 <= grp_fu_1851_p_dout0;
    grp_fu_1123_p1 <= complementary_apexZ0;
    grp_fu_1123_p2 <= "1" when (signed(patches_parameters_q0) > signed(grp_fu_1123_p1)) else "0";
    grp_fu_1129_p1 <= apexZ0;
    grp_fu_1129_p2 <= "1" when (signed(patches_parameters_q0) < signed(grp_fu_1129_p1)) else "0";
    grp_fu_1135_p2 <= "1" when (signed(horizontalOverlapTop_V_fu_268) < signed(ap_const_lv32_1)) else "0";
    grp_fu_1140_p2 <= "1" when (signed(horizontalOverlapBottom_V_fu_264) < signed(ap_const_lv32_1)) else "0";
    grp_fu_1851_p_ce <= ap_const_logic_1;
    grp_fu_1851_p_din0 <= reg_1145;
    grp_fu_660_p_ce <= ap_const_logic_1;
    grp_fu_660_p_din0 <= grp_fu_1115_p0;
    grp_fu_660_p_din1 <= ap_const_lv64_41B1E1A300000000;
    grp_fu_660_p_opcode <= ap_const_lv5_4;
    grp_getShadows_fu_1058_ap_start <= grp_getShadows_fu_1058_ap_start_reg;

    grp_getShadows_fu_1058_wp_parameters_offset_assign_proc : process(trunc_ln732_reg_2662, trunc_ln723_reg_2681, add_ln817_1_reg_3130, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state96)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            grp_getShadows_fu_1058_wp_parameters_offset <= add_ln817_1_reg_3130;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_getShadows_fu_1058_wp_parameters_offset <= trunc_ln723_reg_2681;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_getShadows_fu_1058_wp_parameters_offset <= trunc_ln732_reg_2662;
        else 
            grp_getShadows_fu_1058_wp_parameters_offset <= "XXXXX";
        end if; 
    end process;


    grp_getShadows_fu_1058_wp_superpoints_assign_proc : process(zext_ln720_reg_2668, zext_ln721_reg_2694, add_ln817_reg_3117, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state96)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            grp_getShadows_fu_1058_wp_superpoints <= add_ln817_reg_3117;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_getShadows_fu_1058_wp_superpoints <= zext_ln721_reg_2694;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_getShadows_fu_1058_wp_superpoints <= zext_ln720_reg_2668;
        else 
            grp_getShadows_fu_1058_wp_superpoints <= "XXXXXXXXX";
        end if; 
    end process;

    grp_makeSuperPoint_alignedToLine8_fu_1007_ap_start <= grp_makeSuperPoint_alignedToLine8_fu_1007_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_1074_ap_ce <= ap_const_logic_1;
    grp_straightLineProjectorFromLayerIJtoK_fu_1074_ap_done <= grp_straightLineProjectorFromLayerIJtoK_fu_1833_p_done;
    grp_straightLineProjectorFromLayerIJtoK_fu_1074_ap_idle <= grp_straightLineProjectorFromLayerIJtoK_fu_1833_p_idle;
    grp_straightLineProjectorFromLayerIJtoK_fu_1074_ap_ready <= grp_straightLineProjectorFromLayerIJtoK_fu_1833_p_ready;
    grp_straightLineProjectorFromLayerIJtoK_fu_1074_ap_return <= grp_straightLineProjectorFromLayerIJtoK_fu_1833_p_dout0;
    grp_straightLineProjectorFromLayerIJtoK_fu_1074_ap_start <= grp_straightLineProjectorFromLayerIJtoK_fu_1074_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_1074_i <= ap_const_lv3_1;
    grp_straightLineProjectorFromLayerIJtoK_fu_1074_j <= ap_const_lv3_5;
    grp_straightLineProjectorFromLayerIJtoK_fu_1074_k <= ap_const_lv3_0;

    grp_straightLineProjectorFromLayerIJtoK_fu_1074_z_i_assign_proc : process(apexZ0, original_topR_jL_V_reg_2722, and_ln724_reg_2729, ap_CS_fsm_state7, original_topL_jL_V_3_reg_2793, complementary_topR_jR_V_3_reg_2828, complementary_topL_jR_V_3_reg_2859, ap_CS_fsm_state69, shiftOriginal_1_reg_2960, trunc_ln164_reg_3000, ap_CS_fsm_state99, original_topR_jR_V_3_fu_2481_p3, ap_CS_fsm_state23, ap_CS_fsm_state39, ap_CS_fsm_state55, ap_CS_fsm_state111)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_1074_z_i <= trunc_ln164_reg_3000;
        elsif (((shiftOriginal_1_reg_2960 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state99))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_1074_z_i <= original_topR_jR_V_3_fu_2481_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_1074_z_i <= apexZ0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_1074_z_i <= complementary_topL_jR_V_3_reg_2859;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_1074_z_i <= complementary_topR_jR_V_3_reg_2828;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_1074_z_i <= original_topL_jL_V_3_reg_2793;
        elsif (((ap_const_lv1_1 = and_ln724_reg_2729) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_1074_z_i <= original_topR_jL_V_reg_2722;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_1074_z_i <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_1074_z_j_assign_proc : process(z_top_min, z_top_max, and_ln724_reg_2729, ap_CS_fsm_state7, ap_CS_fsm_state69, shiftOriginal_1_reg_2960, ap_CS_fsm_state99, newZtop_V_reg_762, ap_CS_fsm_state23, ap_CS_fsm_state39, ap_CS_fsm_state55, ap_CS_fsm_state111)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_1074_z_j <= newZtop_V_reg_762;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_1074_z_j <= z_top_min;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state39) or ((ap_const_lv1_1 = and_ln724_reg_2729) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((shiftOriginal_1_reg_2960 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state99)))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_1074_z_j <= z_top_max;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_1074_z_j <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_straightLineProjectorFromLayerIJtoK_fu_1088_ap_ce <= ap_const_logic_1;
    grp_straightLineProjectorFromLayerIJtoK_fu_1088_ap_done <= grp_straightLineProjectorFromLayerIJtoK_fu_1842_p_done;
    grp_straightLineProjectorFromLayerIJtoK_fu_1088_ap_idle <= grp_straightLineProjectorFromLayerIJtoK_fu_1842_p_idle;
    grp_straightLineProjectorFromLayerIJtoK_fu_1088_ap_ready <= grp_straightLineProjectorFromLayerIJtoK_fu_1842_p_ready;
    grp_straightLineProjectorFromLayerIJtoK_fu_1088_ap_return <= grp_straightLineProjectorFromLayerIJtoK_fu_1842_p_dout0;
    grp_straightLineProjectorFromLayerIJtoK_fu_1088_ap_start <= grp_straightLineProjectorFromLayerIJtoK_fu_1088_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_1088_i <= ap_const_lv3_1;
    grp_straightLineProjectorFromLayerIJtoK_fu_1088_j <= ap_const_lv3_5;
    grp_straightLineProjectorFromLayerIJtoK_fu_1088_k <= ap_const_lv3_0;
    grp_straightLineProjectorFromLayerIJtoK_fu_1088_z_i <= complementary_apexZ0;
    grp_straightLineProjectorFromLayerIJtoK_fu_1088_z_j <= z_top_min;
    grp_straightLineProjectorFromLayerIJtoK_fu_1833_p_ce <= ap_const_logic_1;
    grp_straightLineProjectorFromLayerIJtoK_fu_1833_p_din1 <= grp_straightLineProjectorFromLayerIJtoK_fu_1074_z_i;
    grp_straightLineProjectorFromLayerIJtoK_fu_1833_p_din2 <= grp_straightLineProjectorFromLayerIJtoK_fu_1074_z_j;
    grp_straightLineProjectorFromLayerIJtoK_fu_1833_p_din3 <= ap_const_lv3_1;
    grp_straightLineProjectorFromLayerIJtoK_fu_1833_p_din4 <= ap_const_lv3_5;
    grp_straightLineProjectorFromLayerIJtoK_fu_1833_p_din5 <= ap_const_lv3_0;
    grp_straightLineProjectorFromLayerIJtoK_fu_1833_p_start <= grp_straightLineProjectorFromLayerIJtoK_fu_1074_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_1842_p_ce <= ap_const_logic_1;
    grp_straightLineProjectorFromLayerIJtoK_fu_1842_p_din1 <= complementary_apexZ0;
    grp_straightLineProjectorFromLayerIJtoK_fu_1842_p_din2 <= z_top_min;
    grp_straightLineProjectorFromLayerIJtoK_fu_1842_p_din3 <= ap_const_lv3_1;
    grp_straightLineProjectorFromLayerIJtoK_fu_1842_p_din4 <= ap_const_lv3_5;
    grp_straightLineProjectorFromLayerIJtoK_fu_1842_p_din5 <= ap_const_lv3_0;
    grp_straightLineProjectorFromLayerIJtoK_fu_1842_p_start <= grp_straightLineProjectorFromLayerIJtoK_fu_1088_ap_start_reg;
    grp_wedgePatch_init_fu_1034_ap_start <= grp_wedgePatch_init_fu_1034_ap_start_reg;
    horizontalOverlapBottom_V_1_fu_2594_p3 <= 
        trunc_ln840_fu_2586_p1 when (icmp_ln878_9_fu_2580_p2(0) = '1') else 
        trunc_ln840_1_fu_2590_p1;
    horizontalOverlapTop_V_1_fu_2556_p3 <= 
        trunc_ln839_fu_2548_p1 when (icmp_ln878_8_fu_2542_p2(0) = '1') else 
        trunc_ln839_1_fu_2552_p1;
    horizontalShiftBottom_1_fu_2515_p2 <= std_logic_vector(signed(original_topL_jL_V_4_reg_3155) - signed(complementary_topL_jR_V_4_fu_2474_p3));
    horizontalShiftBottom_fu_1659_p2 <= std_logic_vector(signed(original_topL_jL_V_3_reg_2793) - signed(complementary_topL_jR_V_3_reg_2859));
    horizontalShiftTop_1_fu_2503_p2 <= std_logic_vector(signed(original_topR_jL_V_3_reg_3162) - signed(complementary_topR_jR_V_4_fu_2467_p3));
    horizontalShiftTop_fu_1655_p2 <= std_logic_vector(unsigned(original_topR_jL_V_reg_2722) - unsigned(complementary_topR_jR_V_3_reg_2828));
    icmp_ln1116_fu_1856_p2 <= "1" when (indvar_flatten13_reg_797 = ap_const_lv8_A0) else "0";
    icmp_ln1118_fu_1868_p2 <= "1" when (indvar_flatten_reg_819 = ap_const_lv7_20) else "0";
    icmp_ln1120_fu_1888_p2 <= "1" when (c_reg_841 = ap_const_lv2_2) else "0";
    icmp_ln1134_fu_2016_p2 <= "1" when (i_reg_864 = ap_const_lv3_5) else "0";
    icmp_ln1141_fu_2045_p2 <= "1" when (indvar_flatten35_reg_876 = ap_const_lv8_A0) else "0";
    icmp_ln1143_fu_2057_p2 <= "1" when (indvar_flatten21_reg_898 = ap_const_lv7_20) else "0";
    icmp_ln1145_fu_2077_p2 <= "1" when (d_reg_920 = ap_const_lv2_2) else "0";
    icmp_ln1153_fu_2202_p2 <= "1" when (indvar_flatten57_reg_931 = ap_const_lv7_78) else "0";
    icmp_ln1155_fu_2214_p2 <= "1" when (indvar_flatten43_reg_953 = ap_const_lv6_18) else "0";
    icmp_ln1157_fu_2234_p2 <= "1" when (d_1_reg_975 = ap_const_lv3_6) else "0";
    icmp_ln710_fu_1166_p2 <= "1" when (lastPatchIndex = ap_const_lv8_0) else "0";
    icmp_ln791_1_fu_1769_p2 <= "1" when (signed(tmp_56_fu_1759_p4) < signed(ap_const_lv31_1)) else "0";
    icmp_ln791_fu_1734_p2 <= "1" when (signed(tmp_55_fu_1724_p4) < signed(ap_const_lv31_1)) else "0";
    icmp_ln859_fu_2623_p2 <= "1" when (unsigned(n_patches_i) > unsigned(ap_const_lv8_2)) else "0";
    icmp_ln878_3_fu_1402_p2 <= "1" when (signed(ret_fu_1396_p2) < signed(ap_const_lv33_1FFFFFF9C)) else "0";
    icmp_ln878_5_fu_1564_p2 <= "1" when (signed(ret_23_fu_1558_p2) < signed(ap_const_lv33_1FFFFFF9C)) else "0";
    icmp_ln878_6_fu_1798_p2 <= "1" when (signed(empty_105_reg_673) < signed(empty_104_reg_664)) else "0";
    icmp_ln878_7_fu_2520_p2 <= "1" when (signed(grp_straightLineProjectorFromLayerIJtoK_fu_1833_p_dout0) < signed(ap_const_lv32_E4E1C0)) else "0";
    icmp_ln878_8_fu_2542_p2 <= "1" when (signed(ret_25_fu_2529_p2) < signed(ret_26_fu_2537_p2)) else "0";
    icmp_ln878_9_fu_2580_p2 <= "1" when (signed(ret_27_fu_2567_p2) < signed(ret_28_fu_2575_p2)) else "0";
    icmp_ln886_4_fu_1480_p2 <= "1" when (signed(ret_21_fu_1474_p2) > signed(ap_const_lv33_32)) else "0";
    icmp_ln886_6_fu_1683_p2 <= "1" when (signed(grp_straightLineProjectorFromLayerIJtoK_fu_1842_p_dout0) > signed(ap_const_lv32_0)) else "0";
    icmp_ln886_7_fu_2612_p2 <= "1" when (signed(grp_straightLineProjectorFromLayerIJtoK_fu_1833_p_dout0) > signed(ap_const_lv32_E4E1C0)) else "0";

    init_patch_V_0_address0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state84, ap_CS_fsm_state87, grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch_address0, grp_wedgePatch_init_fu_1034_superpointsI_address0, zext_ln1122_1_fu_1978_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            init_patch_V_0_address0 <= zext_ln1122_1_fu_1978_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            init_patch_V_0_address0 <= grp_wedgePatch_init_fu_1034_superpointsI_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            init_patch_V_0_address0 <= grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch_address0;
        else 
            init_patch_V_0_address0 <= "XXXXX";
        end if; 
    end process;


    init_patch_V_0_ce0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state84, ap_CS_fsm_state87, grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch_ce0, grp_wedgePatch_init_fu_1034_superpointsI_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            init_patch_V_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            init_patch_V_0_ce0 <= grp_wedgePatch_init_fu_1034_superpointsI_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            init_patch_V_0_ce0 <= grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch_ce0;
        else 
            init_patch_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_V_0_d0_assign_proc : process(ap_CS_fsm_state84, ap_CS_fsm_state87, grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            init_patch_V_0_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            init_patch_V_0_d0 <= grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch_d0;
        else 
            init_patch_V_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_V_0_we0_assign_proc : process(ap_CS_fsm_state84, select_ln1116_1_fu_1900_p3, icmp_ln1116_fu_1856_p2, ap_CS_fsm_state87, grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch_we0)
    begin
        if (((icmp_ln1116_fu_1856_p2 = ap_const_lv1_0) and (select_ln1116_1_fu_1900_p3 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            init_patch_V_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            init_patch_V_0_we0 <= grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch_we0;
        else 
            init_patch_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_V_1_address0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state84, ap_CS_fsm_state87, grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch1_address0, grp_wedgePatch_init_fu_1034_superpointsI9_address0, zext_ln1122_1_fu_1978_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            init_patch_V_1_address0 <= zext_ln1122_1_fu_1978_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            init_patch_V_1_address0 <= grp_wedgePatch_init_fu_1034_superpointsI9_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            init_patch_V_1_address0 <= grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch1_address0;
        else 
            init_patch_V_1_address0 <= "XXXXX";
        end if; 
    end process;


    init_patch_V_1_ce0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state84, ap_CS_fsm_state87, grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch1_ce0, grp_wedgePatch_init_fu_1034_superpointsI9_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            init_patch_V_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            init_patch_V_1_ce0 <= grp_wedgePatch_init_fu_1034_superpointsI9_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            init_patch_V_1_ce0 <= grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch1_ce0;
        else 
            init_patch_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_V_1_d0_assign_proc : process(ap_CS_fsm_state84, ap_CS_fsm_state87, grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch1_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            init_patch_V_1_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            init_patch_V_1_d0 <= grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch1_d0;
        else 
            init_patch_V_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_V_1_we0_assign_proc : process(ap_CS_fsm_state84, select_ln1116_1_fu_1900_p3, icmp_ln1116_fu_1856_p2, ap_CS_fsm_state87, grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch1_we0)
    begin
        if (((icmp_ln1116_fu_1856_p2 = ap_const_lv1_0) and (select_ln1116_1_fu_1900_p3 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            init_patch_V_1_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            init_patch_V_1_we0 <= grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch1_we0;
        else 
            init_patch_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_V_2_address0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state84, ap_CS_fsm_state87, grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch2_address0, grp_wedgePatch_init_fu_1034_superpointsI10_address0, zext_ln1122_1_fu_1978_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            init_patch_V_2_address0 <= zext_ln1122_1_fu_1978_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            init_patch_V_2_address0 <= grp_wedgePatch_init_fu_1034_superpointsI10_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            init_patch_V_2_address0 <= grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch2_address0;
        else 
            init_patch_V_2_address0 <= "XXXXX";
        end if; 
    end process;


    init_patch_V_2_ce0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state84, ap_CS_fsm_state87, grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch2_ce0, grp_wedgePatch_init_fu_1034_superpointsI10_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            init_patch_V_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            init_patch_V_2_ce0 <= grp_wedgePatch_init_fu_1034_superpointsI10_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            init_patch_V_2_ce0 <= grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch2_ce0;
        else 
            init_patch_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_V_2_d0_assign_proc : process(ap_CS_fsm_state84, ap_CS_fsm_state87, grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch2_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            init_patch_V_2_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            init_patch_V_2_d0 <= grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch2_d0;
        else 
            init_patch_V_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_V_2_we0_assign_proc : process(ap_CS_fsm_state84, select_ln1116_1_fu_1900_p3, icmp_ln1116_fu_1856_p2, ap_CS_fsm_state87, grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch2_we0)
    begin
        if (((icmp_ln1116_fu_1856_p2 = ap_const_lv1_0) and (select_ln1116_1_fu_1900_p3 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            init_patch_V_2_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            init_patch_V_2_we0 <= grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch2_we0;
        else 
            init_patch_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_V_3_address0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state84, ap_CS_fsm_state87, grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch3_address0, grp_wedgePatch_init_fu_1034_superpointsI11_address0, zext_ln1122_1_fu_1978_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            init_patch_V_3_address0 <= zext_ln1122_1_fu_1978_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            init_patch_V_3_address0 <= grp_wedgePatch_init_fu_1034_superpointsI11_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            init_patch_V_3_address0 <= grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch3_address0;
        else 
            init_patch_V_3_address0 <= "XXXXX";
        end if; 
    end process;


    init_patch_V_3_ce0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state84, ap_CS_fsm_state87, grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch3_ce0, grp_wedgePatch_init_fu_1034_superpointsI11_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            init_patch_V_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            init_patch_V_3_ce0 <= grp_wedgePatch_init_fu_1034_superpointsI11_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            init_patch_V_3_ce0 <= grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch3_ce0;
        else 
            init_patch_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_V_3_d0_assign_proc : process(ap_CS_fsm_state84, ap_CS_fsm_state87, grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch3_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            init_patch_V_3_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            init_patch_V_3_d0 <= grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch3_d0;
        else 
            init_patch_V_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_V_3_we0_assign_proc : process(ap_CS_fsm_state84, select_ln1116_1_fu_1900_p3, icmp_ln1116_fu_1856_p2, ap_CS_fsm_state87, grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch3_we0)
    begin
        if (((icmp_ln1116_fu_1856_p2 = ap_const_lv1_0) and (select_ln1116_1_fu_1900_p3 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            init_patch_V_3_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            init_patch_V_3_we0 <= grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch3_we0;
        else 
            init_patch_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_V_4_address0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state84, ap_CS_fsm_state87, grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch4_address0, grp_wedgePatch_init_fu_1034_superpointsI12_address0, zext_ln1122_1_fu_1978_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            init_patch_V_4_address0 <= zext_ln1122_1_fu_1978_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            init_patch_V_4_address0 <= grp_wedgePatch_init_fu_1034_superpointsI12_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            init_patch_V_4_address0 <= grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch4_address0;
        else 
            init_patch_V_4_address0 <= "XXXXX";
        end if; 
    end process;


    init_patch_V_4_ce0_assign_proc : process(ap_CS_fsm_state92, ap_CS_fsm_state84, ap_CS_fsm_state87, grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch4_ce0, grp_wedgePatch_init_fu_1034_superpointsI12_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            init_patch_V_4_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            init_patch_V_4_ce0 <= grp_wedgePatch_init_fu_1034_superpointsI12_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            init_patch_V_4_ce0 <= grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch4_ce0;
        else 
            init_patch_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_V_4_d0_assign_proc : process(ap_CS_fsm_state84, ap_CS_fsm_state87, grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch4_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            init_patch_V_4_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            init_patch_V_4_d0 <= grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch4_d0;
        else 
            init_patch_V_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_V_4_we0_assign_proc : process(ap_CS_fsm_state84, select_ln1116_1_fu_1900_p3, icmp_ln1116_fu_1856_p2, ap_CS_fsm_state87, grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch4_we0)
    begin
        if ((not((select_ln1116_1_fu_1900_p3 = ap_const_lv3_0)) and not((select_ln1116_1_fu_1900_p3 = ap_const_lv3_1)) and not((select_ln1116_1_fu_1900_p3 = ap_const_lv3_2)) and not((select_ln1116_1_fu_1900_p3 = ap_const_lv3_3)) and (icmp_ln1116_fu_1856_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            init_patch_V_4_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            init_patch_V_4_we0 <= grp_makeSuperPoint_alignedToLine8_fu_1007_init_patch4_we0;
        else 
            init_patch_V_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    leftRight_fu_1712_p2 <= (tmp_54_fu_1663_p3 and cmp_i_i297_not_fu_1706_p2);

    n_patches_o_assign_proc : process(n_patches_i, and_ln857_reg_3237, icmp_ln859_reg_3241, grp_add_patch6_fu_986_n_patches, grp_add_patch6_fu_986_n_patches_ap_vld, grp_delete_patch_fu_1103_n_patches, grp_delete_patch_fu_1103_n_patches_ap_vld, makeHorizontallyShiftedPatch_reg_774, ap_CS_fsm_state83, ap_CS_fsm_state94, ap_CS_fsm_state124)
    begin
        if ((((icmp_ln859_reg_3241 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln857_reg_3237) and (ap_const_logic_1 = ap_CS_fsm_state124) and (makeHorizontallyShiftedPatch_reg_774 = ap_const_lv1_1) and (grp_delete_patch_fu_1103_n_patches_ap_vld = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state83) and (makeHorizontallyShiftedPatch_reg_774 = ap_const_lv1_1) and (grp_delete_patch_fu_1103_n_patches_ap_vld = ap_const_logic_1)))) then 
            n_patches_o <= grp_delete_patch_fu_1103_n_patches;
        elsif (((grp_add_patch6_fu_986_n_patches_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state94))) then 
            n_patches_o <= grp_add_patch6_fu_986_n_patches;
        else 
            n_patches_o <= n_patches_i;
        end if; 
    end process;


    n_patches_o_ap_vld_assign_proc : process(and_ln857_reg_3237, icmp_ln859_reg_3241, grp_add_patch6_fu_986_n_patches_ap_vld, grp_delete_patch_fu_1103_n_patches_ap_vld, makeHorizontallyShiftedPatch_reg_774, ap_CS_fsm_state83, ap_CS_fsm_state94, ap_CS_fsm_state124)
    begin
        if ((((icmp_ln859_reg_3241 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln857_reg_3237) and (ap_const_logic_1 = ap_CS_fsm_state124) and (makeHorizontallyShiftedPatch_reg_774 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state83) and (makeHorizontallyShiftedPatch_reg_774 = ap_const_lv1_1)))) then 
            n_patches_o_ap_vld <= grp_delete_patch_fu_1103_n_patches_ap_vld;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            n_patches_o_ap_vld <= grp_add_patch6_fu_986_n_patches_ap_vld;
        else 
            n_patches_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    newZtop_V_2_fu_1718_p3 <= 
        z_top_max when (shiftOriginal_1_fu_1700_p2(0) = '1') else 
        z_top_min;
    notlhs35_fu_1523_p2 <= "0" when (tmp_26_fu_1509_p4 = ap_const_lv11_7FF) else "1";
    notlhs37_fu_1439_p2 <= "0" when (tmp_23_fu_1425_p4 = ap_const_lv11_7FF) else "1";
    notlhs39_fu_1361_p2 <= "0" when (tmp_s_fu_1347_p4 = ap_const_lv11_7FF) else "1";
    notlhs_fu_1601_p2 <= "0" when (tmp_29_fu_1587_p4 = ap_const_lv11_7FF) else "1";
    notrhs36_fu_1529_p2 <= "1" when (empty_94_fu_1519_p1 = ap_const_lv52_0) else "0";
    notrhs38_fu_1445_p2 <= "1" when (empty_89_fu_1435_p1 = ap_const_lv52_0) else "0";
    notrhs40_fu_1367_p2 <= "1" when (empty_fu_1357_p1 = ap_const_lv52_0) else "0";
    notrhs_fu_1607_p2 <= "1" when (empty_99_fu_1597_p1 = ap_const_lv52_0) else "0";
    or_ln1118_fu_1914_p2 <= (icmp_ln1118_fu_1868_p2 or and_ln1116_fu_1894_p2);
    or_ln1143_fu_2103_p2 <= (icmp_ln1143_fu_2057_p2 or and_ln1141_fu_2083_p2);
    or_ln1155_fu_2260_p2 <= (icmp_ln1155_fu_2214_p2 or and_ln1153_fu_2240_p2);
    or_ln791_1_fu_1740_p2 <= (or_ln791_reg_2915 or icmp_ln791_fu_1734_p2);
    or_ln791_2_fu_1649_p2 <= (empty_93_reg_623 or empty_103_reg_650);
    or_ln791_3_fu_1775_p2 <= (or_ln791_2_reg_2920 or icmp_ln791_1_fu_1769_p2);
    or_ln791_fu_1629_p2 <= (empty_98_reg_638 or empty_88_reg_611);
    original_topL_jL_V_4_fu_2439_p3 <= 
        patches_parameters_q1 when (shiftOriginal_1_reg_2960(0) = '1') else 
        original_topL_jL_V_reg_692;
    original_topL_jR_V_3_fu_2489_p3 <= 
        patches_parameters_q1 when (shiftOriginal_1_reg_2960(0) = '1') else 
        original_topL_jR_V_1_reg_752;
    original_topR_jL_V_3_fu_2446_p3 <= 
        patches_parameters_q0 when (shiftOriginal_1_reg_2960(0) = '1') else 
        original_topR_jL_V_1_reg_702;
    original_topR_jR_V_3_fu_2481_p3 <= 
        patches_parameters_q0 when (shiftOriginal_1_reg_2960(0) = '1') else 
        original_topR_jR_V_1_reg_742;
    p_Result_4_fu_1412_p1 <= data_V_7_fu_1408_p1(63 - 1 downto 0);
    p_Result_5_fu_1496_p1 <= data_V_8_fu_1492_p1(63 - 1 downto 0);
    p_Result_6_fu_1574_p1 <= data_V_9_fu_1570_p1(63 - 1 downto 0);
    p_Result_s_fu_1334_p1 <= data_V_fu_1330_p1(63 - 1 downto 0);
    p_shl5_cast_fu_2286_p3 <= (trunc_ln1159_fu_2282_p1 & ap_const_lv3_0);

    patches_parameters_address0_assign_proc : process(ap_CS_fsm_state5, patches_parameters_addr_14_reg_2738, patches_parameters_addr_15_reg_2743, patches_parameters_addr_17_reg_2753, patches_parameters_addr_13_reg_2758, patches_parameters_addr_18_reg_2763, ap_CS_fsm_state21, ap_CS_fsm_state37, ap_CS_fsm_state53, ap_CS_fsm_state79, ap_CS_fsm_state97, ap_CS_fsm_state98, and_ln857_reg_3237, icmp_ln859_reg_3241, grp_add_patch6_fu_986_patches_parameters_address0, grp_getShadows_fu_1058_wp_parameters_address0, grp_delete_patch_fu_1103_patches_parameters_V_address0, makeHorizontallyShiftedPatch_reg_774, ap_CS_fsm_state83, ap_CS_fsm_state94, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state96, ap_CS_fsm_state124, zext_ln723_1_fu_1249_p1, zext_ln821_fu_2404_p1, zext_ln823_fu_2424_p1, ap_CS_fsm_state78)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state98)) then 
            patches_parameters_address0 <= zext_ln823_fu_2424_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            patches_parameters_address0 <= zext_ln821_fu_2404_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            patches_parameters_address0 <= patches_parameters_addr_18_reg_2763;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            patches_parameters_address0 <= patches_parameters_addr_17_reg_2753;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            patches_parameters_address0 <= patches_parameters_addr_15_reg_2743;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            patches_parameters_address0 <= patches_parameters_addr_14_reg_2738;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            patches_parameters_address0 <= patches_parameters_addr_13_reg_2758;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            patches_parameters_address0 <= zext_ln723_1_fu_1249_p1(12 - 1 downto 0);
        elsif ((((icmp_ln859_reg_3241 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln857_reg_3237) and (ap_const_logic_1 = ap_CS_fsm_state124) and (makeHorizontallyShiftedPatch_reg_774 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state83) and (makeHorizontallyShiftedPatch_reg_774 = ap_const_lv1_1)))) then 
            patches_parameters_address0 <= grp_delete_patch_fu_1103_patches_parameters_V_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_address0 <= grp_getShadows_fu_1058_wp_parameters_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            patches_parameters_address0 <= grp_add_patch6_fu_986_patches_parameters_address0;
        else 
            patches_parameters_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    patches_parameters_address1_assign_proc : process(patches_parameters_addr_16_reg_2748, patches_parameters_addr_19_reg_2768, ap_CS_fsm_state79, ap_CS_fsm_state97, ap_CS_fsm_state98, and_ln857_reg_3237, icmp_ln859_reg_3241, grp_getShadows_fu_1058_wp_parameters_address1, grp_delete_patch_fu_1103_patches_parameters_V_address1, makeHorizontallyShiftedPatch_reg_774, ap_CS_fsm_state83, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state96, ap_CS_fsm_state124, zext_ln822_fu_2414_p1, zext_ln824_fu_2434_p1, ap_CS_fsm_state78)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state98)) then 
            patches_parameters_address1 <= zext_ln824_fu_2434_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            patches_parameters_address1 <= zext_ln822_fu_2414_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            patches_parameters_address1 <= patches_parameters_addr_19_reg_2768;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            patches_parameters_address1 <= patches_parameters_addr_16_reg_2748;
        elsif ((((icmp_ln859_reg_3241 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln857_reg_3237) and (ap_const_logic_1 = ap_CS_fsm_state124) and (makeHorizontallyShiftedPatch_reg_774 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state83) and (makeHorizontallyShiftedPatch_reg_774 = ap_const_lv1_1)))) then 
            patches_parameters_address1 <= grp_delete_patch_fu_1103_patches_parameters_V_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_address1 <= grp_getShadows_fu_1058_wp_parameters_address1;
        else 
            patches_parameters_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    patches_parameters_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state21, ap_CS_fsm_state37, ap_CS_fsm_state53, ap_CS_fsm_state79, ap_CS_fsm_state97, ap_CS_fsm_state98, and_ln857_reg_3237, icmp_ln859_reg_3241, grp_add_patch6_fu_986_patches_parameters_ce0, grp_getShadows_fu_1058_wp_parameters_ce0, grp_delete_patch_fu_1103_patches_parameters_V_ce0, makeHorizontallyShiftedPatch_reg_774, ap_CS_fsm_state83, ap_CS_fsm_state94, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state96, ap_CS_fsm_state124, ap_CS_fsm_state78)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state98) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state78))) then 
            patches_parameters_ce0 <= ap_const_logic_1;
        elsif ((((icmp_ln859_reg_3241 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln857_reg_3237) and (ap_const_logic_1 = ap_CS_fsm_state124) and (makeHorizontallyShiftedPatch_reg_774 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state83) and (makeHorizontallyShiftedPatch_reg_774 = ap_const_lv1_1)))) then 
            patches_parameters_ce0 <= grp_delete_patch_fu_1103_patches_parameters_V_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_ce0 <= grp_getShadows_fu_1058_wp_parameters_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            patches_parameters_ce0 <= grp_add_patch6_fu_986_patches_parameters_ce0;
        else 
            patches_parameters_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    patches_parameters_ce1_assign_proc : process(ap_CS_fsm_state79, ap_CS_fsm_state97, ap_CS_fsm_state98, and_ln857_reg_3237, icmp_ln859_reg_3241, grp_getShadows_fu_1058_wp_parameters_ce1, grp_delete_patch_fu_1103_patches_parameters_V_ce1, makeHorizontallyShiftedPatch_reg_774, ap_CS_fsm_state83, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state96, ap_CS_fsm_state124, ap_CS_fsm_state78)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state98) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78))) then 
            patches_parameters_ce1 <= ap_const_logic_1;
        elsif ((((icmp_ln859_reg_3241 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln857_reg_3237) and (ap_const_logic_1 = ap_CS_fsm_state124) and (makeHorizontallyShiftedPatch_reg_774 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state83) and (makeHorizontallyShiftedPatch_reg_774 = ap_const_lv1_1)))) then 
            patches_parameters_ce1 <= grp_delete_patch_fu_1103_patches_parameters_V_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_ce1 <= grp_getShadows_fu_1058_wp_parameters_ce1;
        else 
            patches_parameters_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    patches_parameters_d0_assign_proc : process(and_ln857_reg_3237, icmp_ln859_reg_3241, grp_add_patch6_fu_986_patches_parameters_d0, grp_getShadows_fu_1058_wp_parameters_d0, grp_delete_patch_fu_1103_patches_parameters_V_d0, makeHorizontallyShiftedPatch_reg_774, ap_CS_fsm_state83, ap_CS_fsm_state94, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state96, ap_CS_fsm_state124)
    begin
        if ((((icmp_ln859_reg_3241 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln857_reg_3237) and (ap_const_logic_1 = ap_CS_fsm_state124) and (makeHorizontallyShiftedPatch_reg_774 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state83) and (makeHorizontallyShiftedPatch_reg_774 = ap_const_lv1_1)))) then 
            patches_parameters_d0 <= grp_delete_patch_fu_1103_patches_parameters_V_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_d0 <= grp_getShadows_fu_1058_wp_parameters_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            patches_parameters_d0 <= grp_add_patch6_fu_986_patches_parameters_d0;
        else 
            patches_parameters_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    patches_parameters_d1 <= grp_getShadows_fu_1058_wp_parameters_d1;

    patches_parameters_we0_assign_proc : process(and_ln857_reg_3237, icmp_ln859_reg_3241, grp_add_patch6_fu_986_patches_parameters_we0, grp_getShadows_fu_1058_wp_parameters_we0, grp_delete_patch_fu_1103_patches_parameters_V_we0, makeHorizontallyShiftedPatch_reg_774, ap_CS_fsm_state83, ap_CS_fsm_state94, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state96, ap_CS_fsm_state124)
    begin
        if ((((icmp_ln859_reg_3241 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln857_reg_3237) and (ap_const_logic_1 = ap_CS_fsm_state124) and (makeHorizontallyShiftedPatch_reg_774 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state83) and (makeHorizontallyShiftedPatch_reg_774 = ap_const_lv1_1)))) then 
            patches_parameters_we0 <= grp_delete_patch_fu_1103_patches_parameters_V_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_we0 <= grp_getShadows_fu_1058_wp_parameters_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            patches_parameters_we0 <= grp_add_patch6_fu_986_patches_parameters_we0;
        else 
            patches_parameters_we0 <= ap_const_logic_0;
        end if; 
    end process;


    patches_parameters_we1_assign_proc : process(grp_getShadows_fu_1058_wp_parameters_we1, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state96)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_we1 <= grp_getShadows_fu_1058_wp_parameters_we1;
        else 
            patches_parameters_we1 <= ap_const_logic_0;
        end if; 
    end process;


    patches_superpoints_address0_assign_proc : process(and_ln857_reg_3237, icmp_ln859_reg_3241, grp_add_patch6_fu_986_patches_superpoints_address0, grp_getShadows_fu_1058_patches_superpoints_address0, grp_delete_patch_fu_1103_patches_superpoints_address0, makeHorizontallyShiftedPatch_reg_774, ap_CS_fsm_state83, ap_CS_fsm_state94, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state96, ap_CS_fsm_state124)
    begin
        if ((((icmp_ln859_reg_3241 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln857_reg_3237) and (ap_const_logic_1 = ap_CS_fsm_state124) and (makeHorizontallyShiftedPatch_reg_774 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state83) and (makeHorizontallyShiftedPatch_reg_774 = ap_const_lv1_1)))) then 
            patches_superpoints_address0 <= grp_delete_patch_fu_1103_patches_superpoints_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_superpoints_address0 <= grp_getShadows_fu_1058_patches_superpoints_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            patches_superpoints_address0 <= grp_add_patch6_fu_986_patches_superpoints_address0;
        else 
            patches_superpoints_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    patches_superpoints_address1 <= grp_delete_patch_fu_1103_patches_superpoints_address1;

    patches_superpoints_ce0_assign_proc : process(and_ln857_reg_3237, icmp_ln859_reg_3241, grp_add_patch6_fu_986_patches_superpoints_ce0, grp_getShadows_fu_1058_patches_superpoints_ce0, grp_delete_patch_fu_1103_patches_superpoints_ce0, makeHorizontallyShiftedPatch_reg_774, ap_CS_fsm_state83, ap_CS_fsm_state94, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state96, ap_CS_fsm_state124)
    begin
        if ((((icmp_ln859_reg_3241 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln857_reg_3237) and (ap_const_logic_1 = ap_CS_fsm_state124) and (makeHorizontallyShiftedPatch_reg_774 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state83) and (makeHorizontallyShiftedPatch_reg_774 = ap_const_lv1_1)))) then 
            patches_superpoints_ce0 <= grp_delete_patch_fu_1103_patches_superpoints_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_superpoints_ce0 <= grp_getShadows_fu_1058_patches_superpoints_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            patches_superpoints_ce0 <= grp_add_patch6_fu_986_patches_superpoints_ce0;
        else 
            patches_superpoints_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    patches_superpoints_ce1_assign_proc : process(and_ln857_reg_3237, icmp_ln859_reg_3241, grp_delete_patch_fu_1103_patches_superpoints_ce1, makeHorizontallyShiftedPatch_reg_774, ap_CS_fsm_state83, ap_CS_fsm_state124)
    begin
        if ((((icmp_ln859_reg_3241 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln857_reg_3237) and (ap_const_logic_1 = ap_CS_fsm_state124) and (makeHorizontallyShiftedPatch_reg_774 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state83) and (makeHorizontallyShiftedPatch_reg_774 = ap_const_lv1_1)))) then 
            patches_superpoints_ce1 <= grp_delete_patch_fu_1103_patches_superpoints_ce1;
        else 
            patches_superpoints_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    patches_superpoints_d0_assign_proc : process(and_ln857_reg_3237, icmp_ln859_reg_3241, grp_add_patch6_fu_986_patches_superpoints_d0, grp_delete_patch_fu_1103_patches_superpoints_d0, makeHorizontallyShiftedPatch_reg_774, ap_CS_fsm_state83, ap_CS_fsm_state94, ap_CS_fsm_state124)
    begin
        if ((((icmp_ln859_reg_3241 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln857_reg_3237) and (ap_const_logic_1 = ap_CS_fsm_state124) and (makeHorizontallyShiftedPatch_reg_774 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state83) and (makeHorizontallyShiftedPatch_reg_774 = ap_const_lv1_1)))) then 
            patches_superpoints_d0 <= grp_delete_patch_fu_1103_patches_superpoints_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            patches_superpoints_d0 <= grp_add_patch6_fu_986_patches_superpoints_d0;
        else 
            patches_superpoints_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    patches_superpoints_we0_assign_proc : process(and_ln857_reg_3237, icmp_ln859_reg_3241, grp_add_patch6_fu_986_patches_superpoints_we0, grp_delete_patch_fu_1103_patches_superpoints_we0, makeHorizontallyShiftedPatch_reg_774, ap_CS_fsm_state83, ap_CS_fsm_state94, ap_CS_fsm_state124)
    begin
        if ((((icmp_ln859_reg_3241 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln857_reg_3237) and (ap_const_logic_1 = ap_CS_fsm_state124) and (makeHorizontallyShiftedPatch_reg_774 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state83) and (makeHorizontallyShiftedPatch_reg_774 = ap_const_lv1_1)))) then 
            patches_superpoints_we0 <= grp_delete_patch_fu_1103_patches_superpoints_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            patches_superpoints_we0 <= grp_add_patch6_fu_986_patches_superpoints_we0;
        else 
            patches_superpoints_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ret_21_fu_1474_p2 <= std_logic_vector(signed(sext_ln215_14_fu_1467_p1) - signed(sext_ln215_15_fu_1471_p1));
    ret_23_fu_1558_p2 <= std_logic_vector(signed(sext_ln215_16_fu_1551_p1) - signed(sext_ln215_17_fu_1555_p1));
    ret_25_fu_2529_p2 <= std_logic_vector(signed(sext_ln215_22_fu_2526_p1) - signed(sext_ln215_18_reg_3204));
    ret_26_fu_2537_p2 <= std_logic_vector(signed(sext_ln215_19_reg_3209) - signed(sext_ln215_23_fu_2534_p1));
    ret_27_fu_2567_p2 <= std_logic_vector(signed(sext_ln215_24_fu_2564_p1) - signed(sext_ln215_20_reg_3219));
    ret_28_fu_2575_p2 <= std_logic_vector(signed(sext_ln215_21_reg_3224) - signed(sext_ln215_25_fu_2572_p1));
    ret_fu_1396_p2 <= std_logic_vector(signed(sext_ln215_fu_1389_p1) - signed(sext_ln215_13_fu_1393_p1));
    secondLastPatchIndex_1_fu_1176_p3 <= 
        ap_const_lv8_0 when (icmp_ln710_fu_1166_p2(0) = '1') else 
        secondLastPatchIndex_fu_1171_p2;
    secondLastPatchIndex_fu_1171_p2 <= std_logic_vector(unsigned(lastPatchIndex) + unsigned(ap_const_lv8_FF));
    select_ln1116_1_fu_1900_p3 <= 
        add_ln1116_fu_1862_p2 when (icmp_ln1118_fu_1868_p2(0) = '1') else 
        a_reg_808;
    select_ln1116_2_fu_1936_p3 <= 
        ap_const_lv4_0 when (icmp_ln1118_fu_1868_p2(0) = '1') else 
        trunc_ln1122_1_fu_1932_p1;
    select_ln1116_fu_1874_p3 <= 
        ap_const_lv5_0 when (icmp_ln1118_fu_1868_p2(0) = '1') else 
        b_reg_830;
    select_ln1118_1_fu_1944_p3 <= 
        trunc_ln1122_fu_1928_p1 when (and_ln1116_fu_1894_p2(0) = '1') else 
        select_ln1116_2_fu_1936_p3;
    select_ln1118_2_fu_1960_p3 <= 
        add_ln1118_fu_1908_p2 when (and_ln1116_fu_1894_p2(0) = '1') else 
        select_ln1116_fu_1874_p3;
    select_ln1118_3_fu_1999_p3 <= 
        ap_const_lv7_1 when (icmp_ln1118_fu_1868_p2(0) = '1') else 
        add_ln1118_1_fu_1993_p2;
    select_ln1118_fu_1920_p3 <= 
        ap_const_lv2_0 when (or_ln1118_fu_1914_p2(0) = '1') else 
        c_reg_841;
    select_ln1141_1_fu_2089_p3 <= 
        add_ln1141_fu_2051_p2 when (icmp_ln1143_fu_2057_p2(0) = '1') else 
        b_1_reg_887;
    select_ln1141_2_fu_2125_p3 <= 
        ap_const_lv4_0 when (icmp_ln1143_fu_2057_p2(0) = '1') else 
        trunc_ln1147_1_fu_2121_p1;
    select_ln1141_fu_2063_p3 <= 
        ap_const_lv5_0 when (icmp_ln1143_fu_2057_p2(0) = '1') else 
        c_1_reg_909;
    select_ln1143_1_fu_2133_p3 <= 
        trunc_ln1147_fu_2117_p1 when (and_ln1141_fu_2083_p2(0) = '1') else 
        select_ln1141_2_fu_2125_p3;
    select_ln1143_2_fu_2149_p3 <= 
        add_ln1143_fu_2097_p2 when (and_ln1141_fu_2083_p2(0) = '1') else 
        select_ln1141_fu_2063_p3;
    select_ln1143_3_fu_2188_p3 <= 
        ap_const_lv7_1 when (icmp_ln1143_fu_2057_p2(0) = '1') else 
        add_ln1143_1_fu_2182_p2;
    select_ln1143_fu_2109_p3 <= 
        ap_const_lv2_0 when (or_ln1143_fu_2103_p2(0) = '1') else 
        d_reg_920;
    select_ln1153_1_fu_2246_p3 <= 
        add_ln1153_fu_2208_p2 when (icmp_ln1155_fu_2214_p2(0) = '1') else 
        b_2_reg_942;
    select_ln1153_fu_2220_p3 <= 
        ap_const_lv3_0 when (icmp_ln1155_fu_2214_p2(0) = '1') else 
        c_2_reg_964;
    select_ln1155_1_fu_2274_p3 <= 
        add_ln1155_fu_2254_p2 when (and_ln1153_fu_2240_p2(0) = '1') else 
        select_ln1153_fu_2220_p3;
    select_ln1155_2_fu_2343_p3 <= 
        ap_const_lv6_1 when (icmp_ln1155_fu_2214_p2(0) = '1') else 
        add_ln1155_1_fu_2337_p2;
    select_ln1155_fu_2266_p3 <= 
        ap_const_lv3_0 when (or_ln1155_fu_2260_p2(0) = '1') else 
        d_1_reg_975;
    select_ln534_fu_1804_p3 <= 
        empty_104_reg_664 when (icmp_ln878_6_fu_1798_p2(0) = '1') else 
        empty_105_reg_673;
    sext_ln215_13_fu_1393_p0 <= apexZ0;
        sext_ln215_13_fu_1393_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln215_13_fu_1393_p0),33));

    sext_ln215_14_fu_1467_p0 <= patches_parameters_q0;
        sext_ln215_14_fu_1467_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln215_14_fu_1467_p0),33));

    sext_ln215_15_fu_1471_p0 <= complementary_apexZ0;
        sext_ln215_15_fu_1471_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln215_15_fu_1471_p0),33));

    sext_ln215_16_fu_1551_p0 <= patches_parameters_q0;
        sext_ln215_16_fu_1551_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln215_16_fu_1551_p0),33));

    sext_ln215_17_fu_1555_p0 <= apexZ0;
        sext_ln215_17_fu_1555_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln215_17_fu_1555_p0),33));

        sext_ln215_18_fu_2496_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(original_topR_jL_V_3_reg_3162),33));

        sext_ln215_19_fu_2499_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(complementary_topR_jR_V_4_fu_2467_p3),33));

        sext_ln215_20_fu_2508_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(original_topL_jL_V_4_reg_3155),33));

        sext_ln215_21_fu_2511_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(complementary_topL_jR_V_4_fu_2474_p3),33));

        sext_ln215_22_fu_2526_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(complementary_topR_jL_V_3_reg_3169),33));

        sext_ln215_23_fu_2534_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(original_topR_jR_V_3_reg_3191),33));

        sext_ln215_24_fu_2564_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(complementary_topL_jL_V_3_reg_3175),33));

        sext_ln215_25_fu_2572_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(original_topL_jR_V_3_reg_3198),33));

    sext_ln215_fu_1389_p0 <= patches_parameters_q0;
        sext_ln215_fu_1389_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln215_fu_1389_p0),33));

        sext_ln534_fu_1812_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln534_fu_1804_p3),64));

        sext_ln774_fu_1696_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shifted_Align_1_fu_1689_p3),64));

    shiftOriginal_1_fu_1700_p2 <= (shiftOriginal_fu_1677_p2 or icmp_ln886_6_fu_1683_p2);
    shiftOriginal_fu_1677_p2 <= (tmp_54_fu_1663_p3 xor ap_const_lv1_1);
    shifted_Align_1_fu_1689_p1 <= apexZ0;
    shifted_Align_1_fu_1689_p3 <= 
        shifted_Align_1_fu_1689_p1 when (icmp_ln886_6_fu_1683_p2(0) = '1') else 
        shifted_Align_fu_1671_p3;
    shifted_Align_3_fu_1816_p2 <= std_logic_vector(unsigned(shifted_Align_2_reg_788) - unsigned(sext_ln534_fu_1812_p1));
    shifted_Align_4_fu_1822_p2 <= std_logic_vector(unsigned(shifted_Align_2_reg_788) + unsigned(sext_ln534_fu_1812_p1));
    shifted_Align_5_fu_1828_p3 <= 
        shifted_Align_3_fu_1816_p2 when (shiftOriginal_1_reg_2960(0) = '1') else 
        shifted_Align_4_fu_1822_p2;
    shifted_Align_fu_1671_p1 <= complementary_apexZ0;
    shifted_Align_fu_1671_p2 <= apexZ0;
    shifted_Align_fu_1671_p3 <= 
        shifted_Align_fu_1671_p1 when (tmp_54_fu_1663_p3(0) = '1') else 
        shifted_Align_fu_1671_p2;
    sub_ln1159_fu_2306_p2 <= std_logic_vector(unsigned(p_shl5_cast_fu_2286_p3) - unsigned(zext_ln1159_fu_2302_p1));
    sub_ln723_fu_1233_p2 <= std_logic_vector(unsigned(tmp_64_cast_fu_1213_p3) - unsigned(zext_ln723_fu_1229_p1));
    sub_ln732_fu_1202_p2 <= std_logic_vector(unsigned(tmp_62_cast_fu_1184_p3) - unsigned(zext_ln732_fu_1198_p1));
    sub_ln821_fu_2386_p2 <= std_logic_vector(unsigned(tmp_68_cast_fu_2370_p3) - unsigned(tmp_32_fu_2378_p3));
    temp_V_address0 <= grp_makeSuperPoint_alignedToLine8_fu_1007_temp_V_address0;
    temp_V_address1 <= grp_makeSuperPoint_alignedToLine8_fu_1007_temp_V_address1;
    temp_V_ce0 <= grp_makeSuperPoint_alignedToLine8_fu_1007_temp_V_ce0;
    temp_V_ce1 <= grp_makeSuperPoint_alignedToLine8_fu_1007_temp_V_ce1;
    temp_V_d0 <= grp_makeSuperPoint_alignedToLine8_fu_1007_temp_V_d0;
    temp_V_d1 <= grp_makeSuperPoint_alignedToLine8_fu_1007_temp_V_d1;
    temp_V_we0 <= grp_makeSuperPoint_alignedToLine8_fu_1007_temp_V_we0;
    temp_V_we1 <= grp_makeSuperPoint_alignedToLine8_fu_1007_temp_V_we1;
    tmp_23_fu_1425_p4 <= data_V_7_fu_1408_p1(62 downto 52);
    tmp_26_fu_1509_p4 <= data_V_8_fu_1492_p1(62 downto 52);
    tmp_27_fu_1191_p3 <= (lastPatchIndex & ap_const_lv3_0);
    tmp_29_fu_1587_p4 <= data_V_9_fu_1570_p1(62 downto 52);
    tmp_30_fu_1221_p3 <= (secondLastPatchIndex_1_fu_1176_p3 & ap_const_lv3_0);
    tmp_32_fu_2378_p3 <= (add_ln817_fu_2359_p2 & ap_const_lv3_0);
    tmp_54_fu_1663_p3 <= grp_straightLineProjectorFromLayerIJtoK_fu_1833_p_dout0(31 downto 31);
    tmp_55_fu_1724_p4 <= empty_105_reg_673(31 downto 1);
    tmp_56_fu_1759_p4 <= empty_104_reg_664(31 downto 1);
    tmp_57_fu_2294_p3 <= (select_ln1155_1_fu_2274_p3 & ap_const_lv1_0);
    tmp_62_cast_fu_1184_p3 <= (trunc_ln732_reg_2662 & ap_const_lv7_0);
    tmp_64_cast_fu_1213_p3 <= (trunc_ln723_fu_1208_p1 & ap_const_lv7_0);
    tmp_66_cast_fu_1952_p3 <= (select_ln1118_1_fu_1944_p3 & ap_const_lv1_0);
    tmp_67_cast_fu_2141_p3 <= (select_ln1143_1_fu_2133_p3 & ap_const_lv1_0);
    tmp_68_cast_fu_2370_p3 <= (trunc_ln821_fu_2366_p1 & ap_const_lv7_0);
    tmp_s_fu_1347_p4 <= data_V_fu_1330_p1(62 downto 52);
    trunc_ln1122_1_fu_1932_p1 <= b_reg_830(4 - 1 downto 0);
    trunc_ln1122_fu_1928_p1 <= add_ln1118_fu_1908_p2(4 - 1 downto 0);
    trunc_ln1147_1_fu_2121_p1 <= c_1_reg_909(4 - 1 downto 0);
    trunc_ln1147_fu_2117_p1 <= add_ln1143_fu_2097_p2(4 - 1 downto 0);
    trunc_ln1159_fu_2282_p1 <= select_ln1155_1_fu_2274_p3(2 - 1 downto 0);
    trunc_ln164_fu_1835_p1 <= shifted_Align_2_reg_788(32 - 1 downto 0);
    trunc_ln723_fu_1208_p1 <= secondLastPatchIndex_1_fu_1176_p3(5 - 1 downto 0);
    trunc_ln732_fu_1156_p1 <= lastPatchIndex(5 - 1 downto 0);
    trunc_ln817_fu_2355_p1 <= n_patches_i(5 - 1 downto 0);
    trunc_ln821_fu_2366_p1 <= add_ln817_fu_2359_p2(5 - 1 downto 0);
    trunc_ln839_1_fu_2552_p1 <= ret_25_fu_2529_p2(32 - 1 downto 0);
    trunc_ln839_fu_2548_p1 <= ret_26_fu_2537_p2(32 - 1 downto 0);
    trunc_ln840_1_fu_2590_p1 <= ret_27_fu_2567_p2(32 - 1 downto 0);
    trunc_ln840_fu_2586_p1 <= ret_28_fu_2575_p2(32 - 1 downto 0);
    xor_ln1116_fu_1882_p2 <= (icmp_ln1118_fu_1868_p2 xor ap_const_lv1_1);
    xor_ln1141_fu_2071_p2 <= (icmp_ln1143_fu_2057_p2 xor ap_const_lv1_1);
    xor_ln1153_fu_2228_p2 <= (icmp_ln1155_fu_2214_p2 xor ap_const_lv1_1);
    xor_ln791_fu_1780_p2 <= (or_ln791_3_fu_1775_p2 xor ap_const_lv1_1);
    zext_ln1122_1_fu_1978_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1122_fu_1972_p2),64));
    zext_ln1122_fu_1968_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1118_fu_1920_p3),5));
    zext_ln1147_1_fu_2167_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1147_fu_2161_p2),64));
    zext_ln1147_fu_2157_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1143_fu_2109_p3),5));
    zext_ln1159_1_fu_2312_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1155_fu_2266_p3),5));
    zext_ln1159_2_fu_2322_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1159_fu_2316_p2),64));
    zext_ln1159_fu_2302_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_57_fu_2294_p3),5));
    zext_ln368_3_fu_1416_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_4_fu_1412_p1),64));
    zext_ln368_4_fu_1500_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_5_fu_1496_p1),64));
    zext_ln368_5_fu_1578_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_6_fu_1574_p1),64));
    zext_ln368_fu_1338_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_s_fu_1334_p1),64));
    zext_ln720_fu_1161_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lastPatchIndex),9));
    zext_ln721_fu_1239_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(secondLastPatchIndex_1_fu_1176_p3),9));
    zext_ln723_1_fu_1249_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln723_fu_1244_p2),64));
    zext_ln723_fu_1229_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_30_fu_1221_p3),12));
    zext_ln727_fu_1305_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln727_fu_1300_p2),64));
    zext_ln732_1_fu_1265_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln732_fu_1260_p2),64));
    zext_ln732_fu_1198_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_fu_1191_p3),12));
    zext_ln737_fu_1275_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln737_fu_1270_p2),64));
    zext_ln745_fu_1285_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln745_fu_1280_p2),64));
    zext_ln746_fu_1295_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln746_fu_1290_p2),64));
    zext_ln747_fu_1315_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln747_fu_1310_p2),64));
    zext_ln748_fu_1325_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln748_fu_1320_p2),64));
    zext_ln811_fu_1839_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_1150),9));
    zext_ln817_fu_2351_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_patches_i),9));
    zext_ln821_fu_2404_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln821_fu_2399_p2),64));
    zext_ln822_fu_2414_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln822_fu_2409_p2),64));
    zext_ln823_fu_2424_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln823_fu_2419_p2),64));
    zext_ln824_fu_2434_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln824_fu_2429_p2),64));
    zext_ln861_fu_2635_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln861_fu_2629_p2),9));
end behav;
