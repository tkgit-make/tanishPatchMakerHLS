-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine8 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    GDn_points_ce0 : OUT STD_LOGIC;
    GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    i : IN STD_LOGIC_VECTOR (2 downto 0);
    z_top : IN STD_LOGIC_VECTOR (31 downto 0);
    apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
    original_ppl : IN STD_LOGIC_VECTOR (31 downto 0);
    leftRight : IN STD_LOGIC_VECTOR (0 downto 0);
    init_patch_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    init_patch_ce0 : OUT STD_LOGIC;
    init_patch_we0 : OUT STD_LOGIC;
    init_patch_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    init_patch1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    init_patch1_ce0 : OUT STD_LOGIC;
    init_patch1_we0 : OUT STD_LOGIC;
    init_patch1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    init_patch2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    init_patch2_ce0 : OUT STD_LOGIC;
    init_patch2_we0 : OUT STD_LOGIC;
    init_patch2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    init_patch3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    init_patch3_ce0 : OUT STD_LOGIC;
    init_patch3_we0 : OUT STD_LOGIC;
    init_patch3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    init_patch4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    init_patch4_ce0 : OUT STD_LOGIC;
    init_patch4_we0 : OUT STD_LOGIC;
    init_patch4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (7 downto 0);
    GDarrayDecoded_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    GDarrayDecoded_ce0 : OUT STD_LOGIC;
    GDarrayDecoded_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    GDarrayDecoded_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    GDarrayDecoded_ce1 : OUT STD_LOGIC;
    GDarrayDecoded_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    temp_V_ce0 : OUT STD_LOGIC;
    temp_V_we0 : OUT STD_LOGIC;
    temp_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    temp_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_V_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    temp_V_ce1 : OUT STD_LOGIC;
    temp_V_we1 : OUT STD_LOGIC;
    temp_V_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine8 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000001000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000001000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000010000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000100000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000001000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000010000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000100000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000001000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000010000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000100000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000001000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000010000000000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000100000000000000000";
    constant ap_ST_fsm_pp1_stage1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000001000000000000000000";
    constant ap_ST_fsm_pp1_stage2 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000010000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000100000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (30 downto 0) := "0000000001000000000000000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000010000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (30 downto 0) := "0000000100000000000000000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (30 downto 0) := "0000001000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (30 downto 0) := "0000010000000000000000000000000";
    constant ap_ST_fsm_pp4_stage0 : STD_LOGIC_VECTOR (30 downto 0) := "0000100000000000000000000000000";
    constant ap_ST_fsm_pp5_stage0 : STD_LOGIC_VECTOR (30 downto 0) := "0001000000000000000000000000000";
    constant ap_ST_fsm_pp6_stage0 : STD_LOGIC_VECTOR (30 downto 0) := "0010000000000000000000000000000";
    constant ap_ST_fsm_pp7_stage0 : STD_LOGIC_VECTOR (30 downto 0) := "0100000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (30 downto 0) := "1000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv64_7FFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "0111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv33_0 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_4B989680 : STD_LOGIC_VECTOR (31 downto 0) := "01001011100110001001011010000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv25_1B3B4C0 : STD_LOGIC_VECTOR (24 downto 0) := "1101100111011010011000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv64_FFFFFFFFFFFFFFF6 : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111110110";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv33_1 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000001";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal radii_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal radii_ce0 : STD_LOGIC;
    signal radii_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal trapezoid_edges_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal trapezoid_edges_V_ce0 : STD_LOGIC;
    signal trapezoid_edges_V_q0 : STD_LOGIC_VECTOR (25 downto 0);
    signal row_list_size_reg_523 : STD_LOGIC_VECTOR (30 downto 0);
    signal j_reg_535 : STD_LOGIC_VECTOR (7 downto 0);
    signal start_value_reg_558 : STD_LOGIC_VECTOR (63 downto 0);
    signal start_index_reg_570 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_x_assign_2_reg_582 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_21_reg_594 : STD_LOGIC_VECTOR (7 downto 0);
    signal left_bound_reg_605 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_bound_reg_617 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_22_reg_629 : STD_LOGIC_VECTOR (7 downto 0);
    signal rbVal_reg_640 : STD_LOGIC_VECTOR (63 downto 0);
    signal lbVal_reg_652 : STD_LOGIC_VECTOR (63 downto 0);
    signal temp_size_3_reg_713 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_13_reg_724 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten13_reg_733 : STD_LOGIC_VECTOR (32 downto 0);
    signal temp_size_2_reg_744 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_12_reg_755 : STD_LOGIC_VECTOR (7 downto 0);
    signal z_1_reg_764 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten_reg_775 : STD_LOGIC_VECTOR (32 downto 0);
    signal temp_size_1_reg_786 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_11_reg_797 : STD_LOGIC_VECTOR (7 downto 0);
    signal z_reg_806 : STD_LOGIC_VECTOR (1 downto 0);
    signal temp_size_reg_817 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_10_reg_828 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten21_reg_837 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_16_reg_848 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_18_reg_859 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_883_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_894 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal zext_ln1176_fu_901_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1176_reg_2166 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal leftRight_read_read_fu_234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal apexZ0_read_read_fu_246_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_fu_907_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_reg_2210 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1176_1_fu_918_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1176_1_reg_2215 : STD_LOGIC_VECTOR (10 downto 0);
    signal y_reg_2224 : STD_LOGIC_VECTOR (24 downto 0);
    signal GDn_points_load_reg_2229 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1180_fu_922_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1180_reg_2235 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1182_fu_928_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln1182_reg_2239 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln1180_1_fu_938_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1180_1_reg_2244 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_fu_969_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1186_fu_985_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal sext_ln1422_fu_1002_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_fu_878_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_reg_2268 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_874_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_1_reg_2273 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_870_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal dc_reg_2278 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal result_V_fu_1138_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal result_V_reg_2283 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal icmp_ln1313_fu_1146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1313_reg_2288 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_3_fu_1152_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_3_reg_2292 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ap_block_state19_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state22_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal zext_ln1313_fu_1158_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1313_reg_2297 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1313_reg_2297_pp1_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1313_1_fu_1162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1313_1_reg_2302 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1313_1_reg_2302_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal start_value_1_fu_1177_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal start_value_1_reg_2311 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp1_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage1 : signal is "none";
    signal ap_block_state20_pp1_stage1_iter0 : BOOLEAN;
    signal ap_block_state23_pp1_stage1_iter1 : BOOLEAN;
    signal ap_block_pp1_stage1_11001 : BOOLEAN;
    signal start_value_1_reg_2311_pp1_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_58_reg_2319 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln180_fu_1195_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp1_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage2 : signal is "none";
    signal ap_block_state21_pp1_stage2_iter0 : BOOLEAN;
    signal ap_block_state24_pp1_stage2_iter1 : BOOLEAN;
    signal ap_block_pp1_stage2_11001 : BOOLEAN;
    signal grp_fu_890_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv2_i_reg_2329 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal icmp_ln1315_fu_1254_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1315_reg_2340 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1315_1_fu_1260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1315_1_reg_2345 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1315_2_fu_1266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1315_2_reg_2350 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1315_3_fu_1272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1315_3_reg_2355 : STD_LOGIC_VECTOR (0 downto 0);
    signal start_value_2_fu_1298_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal start_index_2_fu_1305_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1315_2_fu_1312_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal rhs_18_fu_1319_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal rhs_18_reg_2380 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal j_5_fu_1323_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal ap_block_state27_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state28_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal zext_ln1293_fu_1329_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1293_reg_2391 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1293_fu_1333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1293_reg_2397 : STD_LOGIC_VECTOR (0 downto 0);
    signal left_bound_1_fu_1385_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal lbVal_1_fu_1392_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal right_bound_3_fu_1437_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal rbVal_2_fu_1444_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln1242_fu_1482_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1242_reg_2426 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal icmp_ln1257_fu_1505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_9_fu_1511_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1272_fu_1521_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_8_fu_1527_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1259_fu_1540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_1552_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_38_reg_2453 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln1214_fu_1613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_7_fu_1619_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1229_fu_1627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_1639_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_37_reg_2471 : STD_LOGIC_VECTOR (32 downto 0);
    signal j_6_fu_1647_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1216_fu_1656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1279_fu_1662_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal ap_block_state30_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state31_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal icmp_ln1272_1_fu_1672_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1272_1_reg_2490 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_1677_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_41_reg_2494 : STD_LOGIC_VECTOR (9 downto 0);
    signal j_20_fu_1724_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1284_fu_1748_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1284_reg_2515 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal trunc_ln13_fu_1753_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln13_reg_2520 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln1259_fu_1756_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_CS_fsm_pp4_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage0 : signal is "none";
    signal ap_enable_reg_pp4_iter0 : STD_LOGIC := '0';
    signal ap_block_state33_pp4_stage0_iter0 : BOOLEAN;
    signal ap_block_state34_pp4_stage0_iter1 : BOOLEAN;
    signal ap_block_pp4_stage0_11001 : BOOLEAN;
    signal icmp_ln1259_1_fu_1762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1259_1_reg_2529 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1259_1_fu_1793_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1259_1_reg_2533 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1259_2_fu_1816_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln1259_2_reg_2538 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln1263_1_fu_1844_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1263_1_reg_2543 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1261_fu_1861_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln1229_fu_1871_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_CS_fsm_pp5_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp5_stage0 : signal is "none";
    signal ap_enable_reg_pp5_iter0 : STD_LOGIC := '0';
    signal ap_block_state35_pp5_stage0_iter0 : BOOLEAN;
    signal ap_block_state36_pp5_stage0_iter1 : BOOLEAN;
    signal ap_block_pp5_stage0_11001 : BOOLEAN;
    signal icmp_ln1229_1_fu_1877_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1229_1_reg_2563 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1229_1_fu_1908_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1229_1_reg_2567 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1229_2_fu_1931_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln1229_2_reg_2572 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln1233_1_fu_1959_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1233_1_reg_2577 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1231_fu_1976_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln1223_fu_1986_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_pp6_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp6_stage0 : signal is "none";
    signal ap_enable_reg_pp6_iter0 : STD_LOGIC := '0';
    signal ap_block_state37_pp6_stage0_iter0 : BOOLEAN;
    signal ap_block_state38_pp6_stage0_iter1 : BOOLEAN;
    signal ap_block_pp6_stage0_11001 : BOOLEAN;
    signal icmp_ln1216_1_fu_1996_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1216_1_reg_2597 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_2002_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_39_reg_2601 : STD_LOGIC_VECTOR (9 downto 0);
    signal j_16_fu_2049_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln9_1_fu_2073_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_pp7_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp7_stage0 : signal is "none";
    signal ap_enable_reg_pp7_iter0 : STD_LOGIC := '0';
    signal ap_block_state39_pp7_stage0_iter0 : BOOLEAN;
    signal ap_block_state40_pp7_stage0_iter1 : BOOLEAN;
    signal ap_block_pp7_stage0_11001 : BOOLEAN;
    signal icmp_ln9_fu_2079_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln9_reg_2627 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln9_1_fu_2105_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln9_1_reg_2631 : STD_LOGIC_VECTOR (4 downto 0);
    signal init_patch_addr_reg_2641 : STD_LOGIC_VECTOR (4 downto 0);
    signal init_patch1_addr_reg_2646 : STD_LOGIC_VECTOR (4 downto 0);
    signal init_patch2_addr_reg_2651 : STD_LOGIC_VECTOR (4 downto 0);
    signal init_patch3_addr_reg_2656 : STD_LOGIC_VECTOR (4 downto 0);
    signal init_patch4_addr_reg_2661 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln11_fu_2145_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state19 : STD_LOGIC;
    signal ap_block_pp1_stage2_subdone : BOOLEAN;
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state27 : STD_LOGIC;
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state30 : STD_LOGIC;
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_block_pp4_stage0_subdone : BOOLEAN;
    signal ap_condition_pp4_exit_iter0_state33 : STD_LOGIC;
    signal ap_enable_reg_pp4_iter1 : STD_LOGIC := '0';
    signal ap_block_pp5_stage0_subdone : BOOLEAN;
    signal ap_condition_pp5_exit_iter0_state35 : STD_LOGIC;
    signal ap_enable_reg_pp5_iter1 : STD_LOGIC := '0';
    signal ap_block_pp6_stage0_subdone : BOOLEAN;
    signal ap_condition_pp6_exit_iter0_state37 : STD_LOGIC;
    signal ap_enable_reg_pp6_iter1 : STD_LOGIC := '0';
    signal ap_block_pp7_stage0_subdone : BOOLEAN;
    signal ap_condition_pp7_exit_iter0_state39 : STD_LOGIC;
    signal ap_enable_reg_pp7_iter1 : STD_LOGIC := '0';
    signal row_list_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal row_list_V_ce0 : STD_LOGIC;
    signal row_list_V_we0 : STD_LOGIC;
    signal row_list_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_row_list_size_phi_fu_527_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal row_list_size_1_reg_546 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_j_21_phi_fu_598_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal ap_phi_mux_start_index_29_phi_fu_668_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal start_index_29_reg_664 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_start_value_28_phi_fu_680_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal start_value_28_reg_676 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_left_bound_2_phi_fu_692_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal left_bound_2_reg_688 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_right_bound_2_phi_fu_704_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_bound_2_reg_700 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_temp_size_2_phi_fu_748_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp4_stage0 : BOOLEAN;
    signal ap_phi_mux_j_12_phi_fu_758_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_temp_size_1_phi_fu_790_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp5_stage0 : BOOLEAN;
    signal ap_phi_mux_j_11_phi_fu_800_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_i_16_phi_fu_852_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp7_stage0 : BOOLEAN;
    signal zext_ln1182_1_fu_964_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lftr_wideiv_cast_fu_975_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1315_fu_1168_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1295_fu_1339_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1276_2_fu_1702_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal zext_ln1276_3_fu_1719_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1276_fu_1730_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_fu_1739_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1263_4_fu_1856_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1263_3_fu_1867_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1233_4_fu_1971_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1233_3_fu_1982_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1220_2_fu_2027_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp6_stage0 : BOOLEAN;
    signal zext_ln1220_3_fu_2044_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1220_fu_2055_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_fu_2064_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln13_1_fu_2135_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_fu_883_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_886_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage1 : BOOLEAN;
    signal grp_fu_890_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage2 : BOOLEAN;
    signal tmp_s_fu_911_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1180_fu_934_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1182_fu_943_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1182_1_fu_947_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln1182_fu_952_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln1182_fu_958_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1186_fu_980_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln215_26_fu_993_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_fu_990_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_26_fu_993_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_fu_996_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal data_V_fu_1007_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_64_fu_1028_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal mantissa_fu_1032_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_63_fu_1018_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln341_fu_1046_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln341_fu_1050_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1311_fu_1064_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_fu_1056_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1311_fu_1070_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ush_fu_1074_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_prom_i_i_i_i_i_cast_cast_cast_fu_1082_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_fu_1042_p1 : STD_LOGIC_VECTOR (110 downto 0);
    signal sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_1086_p1 : STD_LOGIC_VECTOR (110 downto 0);
    signal r_V_fu_1090_p2 : STD_LOGIC_VECTOR (110 downto 0);
    signal tmp_fu_1102_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_9_fu_1096_p2 : STD_LOGIC_VECTOR (110 downto 0);
    signal zext_ln662_fu_1110_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_36_fu_1114_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal val_fu_1124_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_fu_1010_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_V_5_fu_1132_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln534_fu_1173_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln180_fu_1190_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal data_V_10_fu_1202_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln368_fu_1206_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_7_fu_1214_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln1315_fu_1227_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_fu_1230_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln1315_1_fu_1240_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_33_fu_1244_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln1315_fu_1210_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal or_ln1315_fu_1278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1315_1_fu_1282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1315_fu_1286_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_886_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1315_1_fu_1292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln215_27_fu_1344_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_32_fu_1348_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_59_fu_1359_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln180_2_fu_1353_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln180_1_fu_1367_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln1295_fu_1375_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln1295_fu_1379_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_33_fu_1400_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_60_fu_1411_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln180_3_fu_1405_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal rbVal_1_fu_1419_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln1301_fu_1427_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln1301_fu_1431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1242_fu_1452_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1242_fu_1458_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1247_fu_1464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1242_fu_1470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1249_fu_1476_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1257_fu_1490_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln1257_fu_1499_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1257_fu_1495_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1272_fu_1517_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1259_fu_1536_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add89_fu_1531_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1259_fu_1546_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1209_fu_1560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1209_1_fu_1566_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1209_fu_1572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1211_fu_1578_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1209_fu_1584_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1214_fu_1597_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1214_fu_1592_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln1214_1_fu_1601_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1229_fu_1623_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1229_fu_1633_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln1214_2_fu_1607_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1216_fu_1652_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1272_1_fu_1668_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1276_1_fu_1685_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1276_fu_1689_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_62_fu_1694_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1276_fu_1707_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln1276_1_fu_1713_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln1276_fu_1734_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln1261_fu_1779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_19_fu_1773_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1263_fu_1801_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1263_fu_1805_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1266_fu_1767_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1263_fu_1824_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln1259_fu_1785_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_97_cast_fu_1828_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1263_2_fu_1840_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_112_fu_1810_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1263_1_fu_1836_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1263_2_fu_1850_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln1231_fu_1894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_17_fu_1888_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1233_fu_1916_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1233_fu_1920_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1236_fu_1882_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1233_fu_1939_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln1229_fu_1900_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_93_cast_fu_1943_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1233_2_fu_1955_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_111_fu_1925_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1233_1_fu_1951_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1233_2_fu_1965_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1216_1_fu_1992_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1220_1_fu_2010_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1220_fu_2014_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_61_fu_2019_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1220_fu_2032_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln1220_1_fu_2038_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln1220_fu_2059_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln11_fu_2091_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln9_fu_2085_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_43_fu_2113_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln9_fu_2097_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_102_cast_fu_2121_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln13_fu_2125_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln13_fu_2129_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal ap_block_pp1_stage1_00001 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_block_pp1_stage1_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal ap_idle_pp4 : STD_LOGIC;
    signal ap_enable_pp4 : STD_LOGIC;
    signal ap_idle_pp5 : STD_LOGIC;
    signal ap_enable_pp5 : STD_LOGIC;
    signal ap_idle_pp6 : STD_LOGIC;
    signal ap_enable_pp6 : STD_LOGIC;
    signal ap_idle_pp7 : STD_LOGIC;
    signal ap_enable_pp7 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component makePatches_ShadowQuilt_fromEdges_fadd_32ns_32ns_32_3_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_fmul_32ns_32ns_32_2_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_fdiv_32ns_32ns_32_6_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_sitofp_64ns_32_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_dcmp_64ns_64ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_sitodp_64ns_64_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine8_radii IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine8_trapezoid_edges_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine8_row_list_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    radii_U : component makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine8_radii
    generic map (
        DataWidth => 25,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => radii_address0,
        ce0 => radii_ce0,
        q0 => radii_q0);

    trapezoid_edges_V_U : component makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine8_trapezoid_edges_V
    generic map (
        DataWidth => 26,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => trapezoid_edges_V_address0,
        ce0 => trapezoid_edges_V_ce0,
        q0 => trapezoid_edges_V_q0);

    row_list_V_U : component makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine8_row_list_V
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => row_list_V_address0,
        ce0 => row_list_V_ce0,
        we0 => row_list_V_we0,
        d0 => GDarrayDecoded_q0,
        q0 => row_list_V_q0);

    fadd_32ns_32ns_32_3_full_dsp_1_U1 : component makePatches_ShadowQuilt_fromEdges_fadd_32ns_32ns_32_3_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => i_op_assign_1_reg_2273,
        din1 => reg_894,
        ce => ap_const_logic_1,
        dout => grp_fu_870_p2);

    fmul_32ns_32ns_32_2_max_dsp_1_U2 : component makePatches_ShadowQuilt_fromEdges_fmul_32ns_32ns_32_2_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_894,
        din1 => i_op_assign_reg_2268,
        ce => ap_const_logic_1,
        dout => grp_fu_874_p2);

    fdiv_32ns_32ns_32_6_no_dsp_1_U3 : component makePatches_ShadowQuilt_fromEdges_fdiv_32ns_32ns_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_894,
        din1 => ap_const_lv32_4B989680,
        ce => ap_const_logic_1,
        dout => grp_fu_878_p2);

    sitofp_64ns_32_2_no_dsp_1_U4 : component makePatches_ShadowQuilt_fromEdges_sitofp_64ns_32_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_883_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_883_p1);

    dcmp_64ns_64ns_1_2_no_dsp_1_U5 : component makePatches_ShadowQuilt_fromEdges_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv2_i_reg_2329,
        din1 => grp_fu_886_p1,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_886_p2);

    sitodp_64ns_64_2_no_dsp_1_U6 : component makePatches_ShadowQuilt_fromEdges_sitodp_64ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_890_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_890_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln1180_fu_922_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((icmp_ln1180_fu_922_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state19) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln1313_fu_1146_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2))) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif (((icmp_ln1313_fu_1146_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state27) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state27))) then 
                    ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state27);
                elsif ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state30) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln1272_fu_1521_p2 = ap_const_lv1_0) and (icmp_ln1257_fu_1505_p2 = ap_const_lv1_0) and (leftRight_read_read_fu_234_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state30))) then 
                    ap_enable_reg_pp3_iter1 <= (ap_const_logic_1 xor ap_condition_pp3_exit_iter0_state30);
                elsif ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                elsif (((icmp_ln1272_fu_1521_p2 = ap_const_lv1_0) and (icmp_ln1257_fu_1505_p2 = ap_const_lv1_0) and (leftRight_read_read_fu_234_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                    ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp4_exit_iter0_state33) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln1259_fu_1540_p2 = ap_const_lv1_1) and (icmp_ln1257_fu_1505_p2 = ap_const_lv1_1) and (leftRight_read_read_fu_234_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp4_exit_iter0_state33))) then 
                    ap_enable_reg_pp4_iter1 <= (ap_const_logic_1 xor ap_condition_pp4_exit_iter0_state33);
                elsif ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then 
                    ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
                elsif (((icmp_ln1259_fu_1540_p2 = ap_const_lv1_1) and (icmp_ln1257_fu_1505_p2 = ap_const_lv1_1) and (leftRight_read_read_fu_234_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                    ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp5_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp5_exit_iter0_state35) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
                    ap_enable_reg_pp5_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln1229_fu_1627_p2 = ap_const_lv1_1) and (icmp_ln1214_fu_1613_p2 = ap_const_lv1_0) and (leftRight_read_read_fu_234_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                    ap_enable_reg_pp5_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp5_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp5_exit_iter0_state35))) then 
                    ap_enable_reg_pp5_iter1 <= (ap_const_logic_1 xor ap_condition_pp5_exit_iter0_state35);
                elsif ((ap_const_boolean_0 = ap_block_pp5_stage0_subdone)) then 
                    ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
                elsif (((icmp_ln1229_fu_1627_p2 = ap_const_lv1_1) and (icmp_ln1214_fu_1613_p2 = ap_const_lv1_0) and (leftRight_read_read_fu_234_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                    ap_enable_reg_pp5_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp6_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp6_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp6_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp6_exit_iter0_state37) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0))) then 
                    ap_enable_reg_pp6_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln1216_fu_1656_p2 = ap_const_lv1_0) and (icmp_ln1214_fu_1613_p2 = ap_const_lv1_1) and (leftRight_read_read_fu_234_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                    ap_enable_reg_pp6_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp6_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp6_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp6_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp6_exit_iter0_state37))) then 
                    ap_enable_reg_pp6_iter1 <= (ap_const_logic_1 xor ap_condition_pp6_exit_iter0_state37);
                elsif ((ap_const_boolean_0 = ap_block_pp6_stage0_subdone)) then 
                    ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
                elsif (((icmp_ln1216_fu_1656_p2 = ap_const_lv1_0) and (icmp_ln1214_fu_1613_p2 = ap_const_lv1_1) and (leftRight_read_read_fu_234_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                    ap_enable_reg_pp6_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp7_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp7_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp7_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp7_exit_iter0_state39) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0))) then 
                    ap_enable_reg_pp7_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                    ap_enable_reg_pp7_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp7_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp7_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp7_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp7_exit_iter0_state39))) then 
                    ap_enable_reg_pp7_iter1 <= (ap_const_logic_1 xor ap_condition_pp7_exit_iter0_state39);
                elsif ((ap_const_boolean_0 = ap_block_pp7_stage0_subdone)) then 
                    ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                    ap_enable_reg_pp7_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_16_reg_848_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (icmp_ln9_reg_2627 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0))) then 
                i_16_reg_848 <= select_ln9_1_reg_2631;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                i_16_reg_848 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    indvar_flatten13_reg_733_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1259_1_fu_1762_p2 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
                indvar_flatten13_reg_733 <= add_ln1259_fu_1756_p2;
            elsif (((icmp_ln1259_fu_1540_p2 = ap_const_lv1_1) and (icmp_ln1257_fu_1505_p2 = ap_const_lv1_1) and (leftRight_read_read_fu_234_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                indvar_flatten13_reg_733 <= ap_const_lv33_0;
            end if; 
        end if;
    end process;

    indvar_flatten21_reg_837_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln9_fu_2079_p2 = ap_const_lv1_0) and (ap_enable_reg_pp7_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0))) then 
                indvar_flatten21_reg_837 <= add_ln9_1_fu_2073_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                indvar_flatten21_reg_837 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_775_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1229_1_fu_1877_p2 = ap_const_lv1_0) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
                indvar_flatten_reg_775 <= add_ln1229_fu_1871_p2;
            elsif (((icmp_ln1229_fu_1627_p2 = ap_const_lv1_1) and (icmp_ln1214_fu_1613_p2 = ap_const_lv1_0) and (leftRight_read_read_fu_234_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                indvar_flatten_reg_775 <= ap_const_lv33_0;
            end if; 
        end if;
    end process;

    j_10_reg_828_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1216_fu_1656_p2 = ap_const_lv1_0) and (icmp_ln1214_fu_1613_p2 = ap_const_lv1_1) and (leftRight_read_read_fu_234_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                j_10_reg_828 <= j_6_fu_1647_p2;
            elsif (((icmp_ln1216_1_fu_1996_p2 = ap_const_lv1_0) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0))) then 
                j_10_reg_828 <= j_16_fu_2049_p2;
            end if; 
        end if;
    end process;

    j_11_reg_797_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (icmp_ln1229_1_reg_2563 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
                j_11_reg_797 <= select_ln1229_1_reg_2567;
            elsif (((icmp_ln1229_fu_1627_p2 = ap_const_lv1_1) and (icmp_ln1214_fu_1613_p2 = ap_const_lv1_0) and (leftRight_read_read_fu_234_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                j_11_reg_797 <= j_7_fu_1619_p1;
            end if; 
        end if;
    end process;

    j_12_reg_755_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (icmp_ln1259_1_reg_2529 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
                j_12_reg_755 <= select_ln1259_1_reg_2533;
            elsif (((icmp_ln1259_fu_1540_p2 = ap_const_lv1_1) and (icmp_ln1257_fu_1505_p2 = ap_const_lv1_1) and (leftRight_read_read_fu_234_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                j_12_reg_755 <= j_8_fu_1527_p1;
            end if; 
        end if;
    end process;

    j_13_reg_724_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1272_fu_1521_p2 = ap_const_lv1_0) and (icmp_ln1257_fu_1505_p2 = ap_const_lv1_0) and (leftRight_read_read_fu_234_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                j_13_reg_724 <= j_9_fu_1511_p2;
            elsif (((icmp_ln1272_1_fu_1672_p2 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                j_13_reg_724 <= j_20_fu_1724_p2;
            end if; 
        end if;
    end process;

    j_18_reg_859_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln9_fu_2079_p2 = ap_const_lv1_0) and (ap_enable_reg_pp7_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0))) then 
                j_18_reg_859 <= add_ln11_fu_2145_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                j_18_reg_859 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    j_21_reg_594_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1313_fu_1146_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                j_21_reg_594 <= ap_const_lv8_0;
            elsif (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln1313_1_reg_2302 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                j_21_reg_594 <= j_3_reg_2292;
            end if; 
        end if;
    end process;

    j_22_reg_629_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1293_fu_1333_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                j_22_reg_629 <= j_5_fu_1323_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                j_22_reg_629 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    j_reg_535_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1180_fu_922_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_reg_535 <= ap_const_lv8_0;
            elsif (((icmp_ln1180_1_fu_938_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                j_reg_535 <= j_1_fu_969_p2;
            end if; 
        end if;
    end process;

    lbVal_reg_652_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln1293_reg_2397 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                lbVal_reg_652 <= lbVal_1_fu_1392_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                lbVal_reg_652 <= ap_const_lv64_7FFFFFFFFFFFFFFF;
            end if; 
        end if;
    end process;

    left_bound_2_reg_688_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1313_reg_2288 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                left_bound_2_reg_688 <= left_bound_reg_605;
            elsif (((icmp_ln1313_fu_1146_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                left_bound_2_reg_688 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    left_bound_reg_605_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln1293_reg_2397 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                left_bound_reg_605 <= left_bound_1_fu_1385_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                left_bound_reg_605 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    p_x_assign_2_reg_582_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1313_fu_1146_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                p_x_assign_2_reg_582 <= ap_const_lv64_7FFFFFFFFFFFFFFF;
            elsif (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln1313_1_reg_2302_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2))) then 
                p_x_assign_2_reg_582 <= select_ln1315_2_fu_1312_p3;
            end if; 
        end if;
    end process;

    rbVal_reg_640_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln1293_reg_2397 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                rbVal_reg_640 <= rbVal_2_fu_1444_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                rbVal_reg_640 <= ap_const_lv64_7FFFFFFFFFFFFFFF;
            end if; 
        end if;
    end process;

    right_bound_2_reg_700_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1313_reg_2288 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                right_bound_2_reg_700 <= right_bound_reg_617;
            elsif (((icmp_ln1313_fu_1146_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                right_bound_2_reg_700 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    right_bound_reg_617_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln1293_reg_2397 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                right_bound_reg_617 <= right_bound_3_fu_1437_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                right_bound_reg_617 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    row_list_size_1_reg_546_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1180_reg_2235 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                row_list_size_1_reg_546 <= GDn_points_load_reg_2229;
            elsif (((icmp_ln1180_fu_922_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                row_list_size_1_reg_546 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    row_list_size_reg_523_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1180_fu_922_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                row_list_size_reg_523 <= ap_const_lv31_0;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1180_1_reg_2244 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                row_list_size_reg_523 <= add_ln1182_reg_2239;
            end if; 
        end if;
    end process;

    start_index_29_reg_664_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1313_reg_2288 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                start_index_29_reg_664 <= start_index_reg_570;
            elsif (((icmp_ln1313_fu_1146_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                start_index_29_reg_664 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    start_index_reg_570_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1313_fu_1146_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                start_index_reg_570 <= ap_const_lv32_0;
            elsif (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln1313_1_reg_2302_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2))) then 
                start_index_reg_570 <= start_index_2_fu_1305_p3;
            end if; 
        end if;
    end process;

    start_value_28_reg_676_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1313_reg_2288 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                start_value_28_reg_676 <= start_value_reg_558;
            elsif (((icmp_ln1313_fu_1146_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                start_value_28_reg_676 <= ap_const_lv64_7FFFFFFFFFFFFFFF;
            end if; 
        end if;
    end process;

    start_value_reg_558_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1313_fu_1146_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                start_value_reg_558 <= ap_const_lv64_7FFFFFFFFFFFFFFF;
            elsif (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln1313_1_reg_2302_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2))) then 
                start_value_reg_558 <= start_value_2_fu_1298_p3;
            end if; 
        end if;
    end process;

    temp_size_1_reg_786_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (icmp_ln1229_1_reg_2563 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
                temp_size_1_reg_786 <= select_ln1229_2_reg_2572;
            elsif (((icmp_ln1229_fu_1627_p2 = ap_const_lv1_1) and (icmp_ln1214_fu_1613_p2 = ap_const_lv1_0) and (leftRight_read_read_fu_234_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                temp_size_1_reg_786 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    temp_size_2_reg_744_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (icmp_ln1259_1_reg_2529 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
                temp_size_2_reg_744 <= select_ln1259_2_reg_2538;
            elsif (((icmp_ln1259_fu_1540_p2 = ap_const_lv1_1) and (icmp_ln1257_fu_1505_p2 = ap_const_lv1_1) and (leftRight_read_read_fu_234_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                temp_size_2_reg_744 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    temp_size_3_reg_713_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1272_fu_1521_p2 = ap_const_lv1_0) and (icmp_ln1257_fu_1505_p2 = ap_const_lv1_0) and (leftRight_read_read_fu_234_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                temp_size_3_reg_713 <= ap_const_lv9_0;
            elsif (((icmp_ln1272_1_fu_1672_p2 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                temp_size_3_reg_713 <= add_ln1279_fu_1662_p2;
            end if; 
        end if;
    end process;

    temp_size_reg_817_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1216_fu_1656_p2 = ap_const_lv1_0) and (icmp_ln1214_fu_1613_p2 = ap_const_lv1_1) and (leftRight_read_read_fu_234_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                temp_size_reg_817 <= ap_const_lv9_0;
            elsif (((icmp_ln1216_1_fu_1996_p2 = ap_const_lv1_0) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0))) then 
                temp_size_reg_817 <= add_ln1223_fu_1986_p2;
            end if; 
        end if;
    end process;

    z_1_reg_764_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1259_1_fu_1762_p2 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
                z_1_reg_764 <= add_ln1261_fu_1861_p2;
            elsif (((icmp_ln1259_fu_1540_p2 = ap_const_lv1_1) and (icmp_ln1257_fu_1505_p2 = ap_const_lv1_1) and (leftRight_read_read_fu_234_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                z_1_reg_764 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    z_reg_806_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1229_1_fu_1877_p2 = ap_const_lv1_0) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
                z_reg_806 <= add_ln1231_fu_1976_p2;
            elsif (((icmp_ln1229_fu_1627_p2 = ap_const_lv1_1) and (icmp_ln1214_fu_1613_p2 = ap_const_lv1_0) and (leftRight_read_read_fu_234_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                z_reg_806 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                GDn_points_load_reg_2229 <= GDn_points_q0;
                empty_reg_2210 <= empty_fu_907_p1;
                icmp_ln1180_reg_2235 <= icmp_ln1180_fu_922_p2;
                y_reg_2224 <= radii_q0;
                    zext_ln1176_1_reg_2215(9 downto 7) <= zext_ln1176_1_fu_918_p1(9 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln1182_reg_2239 <= add_ln1182_fu_928_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1229_1_fu_1877_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then
                add_ln1233_1_reg_2577 <= add_ln1233_1_fu_1959_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1259_1_fu_1762_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then
                add_ln1263_1_reg_2543 <= add_ln1263_1_fu_1844_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then
                add_ln1284_reg_2515 <= add_ln1284_fu_1748_p2;
                trunc_ln13_reg_2520 <= trunc_ln13_fu_1753_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln1313_1_reg_2302 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                conv2_i_reg_2329 <= grp_fu_890_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                dc_reg_2278 <= grp_fu_870_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                i_op_assign_1_reg_2273 <= grp_fu_874_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                i_op_assign_reg_2268 <= grp_fu_878_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1180_1_reg_2244 <= icmp_ln1180_1_fu_938_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0))) then
                icmp_ln1216_1_reg_2597 <= icmp_ln1216_1_fu_1996_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then
                icmp_ln1229_1_reg_2563 <= icmp_ln1229_1_fu_1877_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then
                icmp_ln1259_1_reg_2529 <= icmp_ln1259_1_fu_1762_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                icmp_ln1272_1_reg_2490 <= icmp_ln1272_1_fu_1672_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                icmp_ln1293_reg_2397 <= icmp_ln1293_fu_1333_p2;
                    zext_ln1293_reg_2391(7 downto 0) <= zext_ln1293_fu_1329_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln1313_1_reg_2302 <= icmp_ln1313_1_fu_1162_p2;
                icmp_ln1313_1_reg_2302_pp1_iter1_reg <= icmp_ln1313_1_reg_2302;
                    zext_ln1313_reg_2297(7 downto 0) <= zext_ln1313_fu_1158_p1(7 downto 0);
                    zext_ln1313_reg_2297_pp1_iter1_reg(7 downto 0) <= zext_ln1313_reg_2297(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                icmp_ln1313_reg_2288 <= icmp_ln1313_fu_1146_p2;
                result_V_reg_2283 <= result_V_fu_1138_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1313_1_reg_2302_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then
                icmp_ln1315_1_reg_2345 <= icmp_ln1315_1_fu_1260_p2;
                icmp_ln1315_2_reg_2350 <= icmp_ln1315_2_fu_1266_p2;
                icmp_ln1315_3_reg_2355 <= icmp_ln1315_3_fu_1272_p2;
                icmp_ln1315_reg_2340 <= icmp_ln1315_fu_1254_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0))) then
                icmp_ln9_reg_2627 <= icmp_ln9_fu_2079_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln9_fu_2079_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0))) then
                init_patch1_addr_reg_2646 <= zext_ln13_1_fu_2135_p1(5 - 1 downto 0);
                init_patch2_addr_reg_2651 <= zext_ln13_1_fu_2135_p1(5 - 1 downto 0);
                init_patch3_addr_reg_2656 <= zext_ln13_1_fu_2135_p1(5 - 1 downto 0);
                init_patch4_addr_reg_2661 <= zext_ln13_1_fu_2135_p1(5 - 1 downto 0);
                init_patch_addr_reg_2641 <= zext_ln13_1_fu_2135_p1(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                j_3_reg_2292 <= j_3_fu_1152_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state6))) then
                reg_894 <= grp_fu_883_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                    rhs_18_reg_2380(25 downto 0) <= rhs_18_fu_1319_p1(25 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1229_1_fu_1877_p2 = ap_const_lv1_0) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then
                select_ln1229_1_reg_2567 <= select_ln1229_1_fu_1908_p3;
                select_ln1229_2_reg_2572 <= select_ln1229_2_fu_1931_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((leftRight_read_read_fu_234_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                select_ln1242_reg_2426 <= select_ln1242_fu_1482_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1259_1_fu_1762_p2 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then
                select_ln1259_1_reg_2533 <= select_ln1259_1_fu_1793_p3;
                select_ln1259_2_reg_2538 <= select_ln1259_2_fu_1816_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln9_fu_2079_p2 = ap_const_lv1_0) and (ap_enable_reg_pp7_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0))) then
                select_ln9_1_reg_2631 <= select_ln9_1_fu_2105_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1313_1_reg_2302 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then
                start_value_1_reg_2311 <= start_value_1_fu_1177_p2;
                tmp_58_reg_2319 <= start_value_1_fu_1177_p2(63 downto 63);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then
                start_value_1_reg_2311_pp1_iter1_reg <= start_value_1_reg_2311;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1229_fu_1627_p2 = ap_const_lv1_1) and (icmp_ln1214_fu_1613_p2 = ap_const_lv1_0) and (leftRight_read_read_fu_234_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    tmp_37_reg_2471(32 downto 1) <= tmp_37_fu_1639_p3(32 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1259_fu_1540_p2 = ap_const_lv1_1) and (icmp_ln1257_fu_1505_p2 = ap_const_lv1_1) and (leftRight_read_read_fu_234_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    tmp_38_reg_2453(32 downto 1) <= tmp_38_fu_1552_p3(32 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1216_1_fu_1996_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0))) then
                    tmp_39_reg_2601(9 downto 1) <= tmp_39_fu_2002_p3(9 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1272_1_fu_1672_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                    tmp_41_reg_2494(9 downto 1) <= tmp_41_fu_1677_p3(9 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    zext_ln1176_reg_2166(2 downto 0) <= zext_ln1176_fu_901_p1(2 downto 0);
            end if;
        end if;
    end process;
    zext_ln1176_reg_2166(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln1176_1_reg_2215(6 downto 0) <= "0000000";
    zext_ln1176_1_reg_2215(10) <= '0';
    zext_ln1313_reg_2297(31 downto 8) <= "000000000000000000000000";
    zext_ln1313_reg_2297_pp1_iter1_reg(31 downto 8) <= "000000000000000000000000";
    rhs_18_reg_2380(32 downto 26) <= "0000000";
    zext_ln1293_reg_2391(31 downto 8) <= "000000000000000000000000";
    tmp_38_reg_2453(0) <= '0';
    tmp_37_reg_2471(0) <= '0';
    tmp_41_reg_2494(0) <= '0';
    tmp_39_reg_2601(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, leftRight_read_read_fu_234_p2, icmp_ln1180_fu_922_p2, ap_enable_reg_pp0_iter0, icmp_ln1180_1_fu_938_p2, ap_CS_fsm_state18, icmp_ln1313_fu_1146_p2, ap_enable_reg_pp1_iter0, icmp_ln1313_1_fu_1162_p2, ap_CS_fsm_pp1_stage2, ap_enable_reg_pp1_iter1, ap_enable_reg_pp2_iter0, icmp_ln1293_fu_1333_p2, ap_CS_fsm_state29, icmp_ln1257_fu_1505_p2, icmp_ln1272_fu_1521_p2, icmp_ln1259_fu_1540_p2, icmp_ln1214_fu_1613_p2, icmp_ln1229_fu_1627_p2, icmp_ln1216_fu_1656_p2, ap_enable_reg_pp3_iter0, icmp_ln1272_1_fu_1672_p2, ap_enable_reg_pp4_iter0, icmp_ln1259_1_fu_1762_p2, ap_enable_reg_pp5_iter0, icmp_ln1229_1_fu_1877_p2, ap_enable_reg_pp6_iter0, icmp_ln1216_1_fu_1996_p2, ap_enable_reg_pp7_iter0, icmp_ln9_fu_2079_p2, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone, ap_block_pp1_stage2_subdone, ap_block_pp2_stage0_subdone, ap_block_pp3_stage0_subdone, ap_block_pp4_stage0_subdone, ap_block_pp5_stage0_subdone, ap_block_pp6_stage0_subdone, ap_block_pp7_stage0_subdone, ap_block_pp1_stage1_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln1180_fu_922_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((icmp_ln1180_1_fu_938_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((icmp_ln1180_1_fu_938_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                if (((icmp_ln1313_fu_1146_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (icmp_ln1313_1_fu_1162_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                elsif (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (icmp_ln1313_1_fu_1162_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                end if;
            when ap_ST_fsm_pp1_stage2 => 
                if ((not(((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2))) and (ap_const_boolean_0 = ap_block_pp1_stage2_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage2;
                end if;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if (not(((icmp_ln1293_fu_1333_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((icmp_ln1293_fu_1333_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state29 => 
                if (((icmp_ln1216_fu_1656_p2 = ap_const_lv1_0) and (icmp_ln1214_fu_1613_p2 = ap_const_lv1_1) and (leftRight_read_read_fu_234_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_pp6_stage0;
                elsif (((icmp_ln1229_fu_1627_p2 = ap_const_lv1_1) and (icmp_ln1214_fu_1613_p2 = ap_const_lv1_0) and (leftRight_read_read_fu_234_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                elsif (((icmp_ln1259_fu_1540_p2 = ap_const_lv1_1) and (icmp_ln1257_fu_1505_p2 = ap_const_lv1_1) and (leftRight_read_read_fu_234_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                elsif (((icmp_ln1272_fu_1521_p2 = ap_const_lv1_0) and (icmp_ln1257_fu_1505_p2 = ap_const_lv1_0) and (leftRight_read_read_fu_234_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_pp3_stage0 => 
                if (not(((icmp_ln1272_1_fu_1672_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif (((icmp_ln1272_1_fu_1672_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_pp7_stage0;
            when ap_ST_fsm_pp4_stage0 => 
                if (not(((icmp_ln1259_1_fu_1762_p2 = ap_const_lv1_1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                elsif (((icmp_ln1259_1_fu_1762_p2 = ap_const_lv1_1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                end if;
            when ap_ST_fsm_pp5_stage0 => 
                if (not(((icmp_ln1229_1_fu_1877_p2 = ap_const_lv1_1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                elsif (((icmp_ln1229_1_fu_1877_p2 = ap_const_lv1_1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                end if;
            when ap_ST_fsm_pp6_stage0 => 
                if (not(((icmp_ln1216_1_fu_1996_p2 = ap_const_lv1_1) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp6_stage0;
                elsif (((icmp_ln1216_1_fu_1996_p2 = ap_const_lv1_1) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp6_stage0;
                end if;
            when ap_ST_fsm_pp7_stage0 => 
                if (not(((icmp_ln9_fu_2079_p2 = ap_const_lv1_1) and (ap_enable_reg_pp7_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp7_stage0;
                elsif (((icmp_ln9_fu_2079_p2 = ap_const_lv1_1) and (ap_enable_reg_pp7_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state41;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp7_stage0;
                end if;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    GDarrayDecoded_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp6_iter0, ap_block_pp0_stage0, ap_block_pp5_stage0, zext_ln1182_1_fu_964_p1, ap_block_pp3_stage0, zext_ln1276_3_fu_1719_p1, zext_ln1233_4_fu_1971_p1, zext_ln1220_2_fu_2027_p1, ap_block_pp6_stage0)
    begin
        if (((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0))) then 
            GDarrayDecoded_address0 <= zext_ln1220_2_fu_2027_p1(11 - 1 downto 0);
        elsif (((ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
            GDarrayDecoded_address0 <= zext_ln1233_4_fu_1971_p1(11 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            GDarrayDecoded_address0 <= zext_ln1276_3_fu_1719_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            GDarrayDecoded_address0 <= zext_ln1182_1_fu_964_p1(11 - 1 downto 0);
        else 
            GDarrayDecoded_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    GDarrayDecoded_address1_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp6_iter0, ap_block_pp4_stage0, zext_ln1276_2_fu_1702_p1, ap_block_pp3_stage0, zext_ln1263_4_fu_1856_p1, ap_block_pp6_stage0, zext_ln1220_3_fu_2044_p1)
    begin
        if (((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0))) then 
            GDarrayDecoded_address1 <= zext_ln1220_3_fu_2044_p1(11 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
            GDarrayDecoded_address1 <= zext_ln1263_4_fu_1856_p1(11 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            GDarrayDecoded_address1 <= zext_ln1276_2_fu_1702_p1(11 - 1 downto 0);
        else 
            GDarrayDecoded_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    GDarrayDecoded_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_block_pp3_stage0_11001, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_block_pp5_stage0_11001, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp6_iter0, ap_block_pp6_stage0_11001)
    begin
        if ((((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0)) or ((ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0)) or ((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            GDarrayDecoded_ce0 <= ap_const_logic_1;
        else 
            GDarrayDecoded_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    GDarrayDecoded_ce1_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_block_pp3_stage0_11001, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter0, ap_block_pp4_stage0_11001, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp6_iter0, ap_block_pp6_stage0_11001)
    begin
        if ((((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0)) or ((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)) or ((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            GDarrayDecoded_ce1 <= ap_const_logic_1;
        else 
            GDarrayDecoded_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    GDn_points_address0 <= zext_ln1176_fu_901_p1(3 - 1 downto 0);

    GDn_points_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            GDn_points_ce0 <= ap_const_logic_1;
        else 
            GDn_points_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    add89_fu_1531_p2 <= std_logic_vector(unsigned(ap_phi_mux_left_bound_2_phi_fu_692_p4) + unsigned(original_ppl));
    add_ln1182_1_fu_947_p2 <= std_logic_vector(unsigned(zext_ln1176_1_reg_2215) + unsigned(zext_ln1182_fu_943_p1));
    add_ln1182_fu_928_p2 <= std_logic_vector(unsigned(ap_phi_mux_row_list_size_phi_fu_527_p4) + unsigned(ap_const_lv31_1));
    add_ln1186_fu_980_p2 <= std_logic_vector(unsigned(y_reg_2224) + unsigned(ap_const_lv25_1B3B4C0));
    add_ln11_fu_2145_p2 <= std_logic_vector(unsigned(select_ln9_fu_2097_p3) + unsigned(ap_const_lv2_1));
    add_ln1211_fu_1578_p2 <= std_logic_vector(unsigned(ap_phi_mux_start_index_29_phi_fu_668_p4) + unsigned(ap_const_lv32_FFFFFFFF));
    add_ln1214_1_fu_1601_p2 <= std_logic_vector(unsigned(ap_phi_mux_right_bound_2_phi_fu_704_p4) + unsigned(ap_const_lv32_1));
    add_ln1214_2_fu_1607_p2 <= std_logic_vector(unsigned(trunc_ln1214_fu_1597_p1) + unsigned(ap_const_lv8_1));
    add_ln1214_fu_1592_p2 <= std_logic_vector(unsigned(select_ln1209_fu_1584_p3) + unsigned(original_ppl));
    add_ln1220_fu_2014_p2 <= std_logic_vector(unsigned(zext_ln1176_1_reg_2215) + unsigned(zext_ln1220_1_fu_2010_p1));
    add_ln1223_fu_1986_p2 <= std_logic_vector(unsigned(temp_size_reg_817) + unsigned(ap_const_lv9_1));
    add_ln1229_fu_1871_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_775) + unsigned(ap_const_lv33_1));
    add_ln1231_fu_1976_p2 <= std_logic_vector(unsigned(select_ln1229_fu_1900_p3) + unsigned(ap_const_lv2_1));
    add_ln1233_1_fu_1959_p2 <= std_logic_vector(unsigned(tmp_93_cast_fu_1943_p3) + unsigned(zext_ln1233_2_fu_1955_p1));
    add_ln1233_2_fu_1965_p2 <= std_logic_vector(unsigned(empty_111_fu_1925_p2) + unsigned(zext_ln1233_1_fu_1951_p1));
    add_ln1233_fu_1920_p2 <= std_logic_vector(unsigned(zext_ln1176_1_reg_2215) + unsigned(zext_ln1233_fu_1916_p1));
    add_ln1236_fu_1882_p2 <= std_logic_vector(unsigned(ap_phi_mux_temp_size_1_phi_fu_790_p4) + unsigned(ap_const_lv64_1));
    add_ln1242_fu_1452_p2 <= std_logic_vector(unsigned(row_list_size_1_reg_546) + unsigned(ap_const_lv32_FFFFFFFF));
    add_ln1249_fu_1476_p2 <= std_logic_vector(unsigned(ap_phi_mux_start_index_29_phi_fu_668_p4) + unsigned(ap_const_lv32_1));
    add_ln1257_fu_1499_p2 <= std_logic_vector(unsigned(sub_ln1257_fu_1490_p2) + unsigned(ap_const_lv32_1));
    add_ln1259_fu_1756_p2 <= std_logic_vector(unsigned(indvar_flatten13_reg_733) + unsigned(ap_const_lv33_1));
    add_ln1261_fu_1861_p2 <= std_logic_vector(unsigned(select_ln1259_fu_1785_p3) + unsigned(ap_const_lv2_1));
    add_ln1263_1_fu_1844_p2 <= std_logic_vector(unsigned(tmp_97_cast_fu_1828_p3) + unsigned(zext_ln1263_2_fu_1840_p1));
    add_ln1263_2_fu_1850_p2 <= std_logic_vector(unsigned(empty_112_fu_1810_p2) + unsigned(zext_ln1263_1_fu_1836_p1));
    add_ln1263_fu_1805_p2 <= std_logic_vector(unsigned(zext_ln1176_1_reg_2215) + unsigned(zext_ln1263_fu_1801_p1));
    add_ln1266_fu_1767_p2 <= std_logic_vector(unsigned(ap_phi_mux_temp_size_2_phi_fu_748_p4) + unsigned(ap_const_lv64_1));
    add_ln1276_fu_1689_p2 <= std_logic_vector(unsigned(zext_ln1176_1_reg_2215) + unsigned(zext_ln1276_1_fu_1685_p1));
    add_ln1279_fu_1662_p2 <= std_logic_vector(unsigned(temp_size_3_reg_713) + unsigned(ap_const_lv9_1));
    add_ln1284_fu_1748_p2 <= std_logic_vector(unsigned(p_read1) + unsigned(ap_const_lv8_1));
    add_ln13_fu_2129_p2 <= std_logic_vector(unsigned(tmp_102_cast_fu_2121_p1) + unsigned(zext_ln13_fu_2125_p1));
    add_ln341_fu_1050_p2 <= std_logic_vector(unsigned(zext_ln341_fu_1046_p1) + unsigned(ap_const_lv9_181));
    add_ln9_1_fu_2073_p2 <= std_logic_vector(unsigned(indvar_flatten21_reg_837) + unsigned(ap_const_lv6_1));
    add_ln9_fu_2085_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_16_phi_fu_852_p4) + unsigned(ap_const_lv5_1));
    and_ln1209_fu_1572_p2 <= (icmp_ln1209_fu_1560_p2 and icmp_ln1209_1_fu_1566_p2);
    and_ln1242_fu_1470_p2 <= (icmp_ln1247_fu_1464_p2 and icmp_ln1242_fu_1458_p2);
    and_ln1315_1_fu_1292_p2 <= (grp_fu_886_p2 and and_ln1315_fu_1286_p2);
    and_ln1315_fu_1286_p2 <= (or_ln1315_fu_1278_p2 and or_ln1315_1_fu_1282_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(17);
    ap_CS_fsm_pp1_stage1 <= ap_CS_fsm(18);
    ap_CS_fsm_pp1_stage2 <= ap_CS_fsm(19);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(22);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(24);
    ap_CS_fsm_pp4_stage0 <= ap_CS_fsm(26);
    ap_CS_fsm_pp5_stage0 <= ap_CS_fsm(27);
    ap_CS_fsm_pp6_stage0 <= ap_CS_fsm(28);
    ap_CS_fsm_pp7_stage0 <= ap_CS_fsm(29);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(9);
    ap_CS_fsm_state12 <= ap_CS_fsm(10);
    ap_CS_fsm_state13 <= ap_CS_fsm(11);
    ap_CS_fsm_state14 <= ap_CS_fsm(12);
    ap_CS_fsm_state15 <= ap_CS_fsm(13);
    ap_CS_fsm_state17 <= ap_CS_fsm(15);
    ap_CS_fsm_state18 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state25 <= ap_CS_fsm(20);
    ap_CS_fsm_state26 <= ap_CS_fsm(21);
    ap_CS_fsm_state29 <= ap_CS_fsm(23);
    ap_CS_fsm_state32 <= ap_CS_fsm(25);
    ap_CS_fsm_state41 <= ap_CS_fsm(30);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
    ap_CS_fsm_state6 <= ap_CS_fsm(4);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp7_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp7_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp7_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp1_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp1_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp1_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp1_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp3_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp4_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp4_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp5_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp5_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp6_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp6_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp7_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp7_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln1180_1_fu_938_p2)
    begin
        if ((icmp_ln1180_1_fu_938_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state19_assign_proc : process(icmp_ln1313_1_fu_1162_p2)
    begin
        if ((icmp_ln1313_1_fu_1162_p2 = ap_const_lv1_0)) then 
            ap_condition_pp1_exit_iter0_state19 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state27_assign_proc : process(icmp_ln1293_fu_1333_p2)
    begin
        if ((icmp_ln1293_fu_1333_p2 = ap_const_lv1_0)) then 
            ap_condition_pp2_exit_iter0_state27 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state27 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state30_assign_proc : process(icmp_ln1272_1_fu_1672_p2)
    begin
        if ((icmp_ln1272_1_fu_1672_p2 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state30 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state30 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp4_exit_iter0_state33_assign_proc : process(icmp_ln1259_1_fu_1762_p2)
    begin
        if ((icmp_ln1259_1_fu_1762_p2 = ap_const_lv1_1)) then 
            ap_condition_pp4_exit_iter0_state33 <= ap_const_logic_1;
        else 
            ap_condition_pp4_exit_iter0_state33 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp5_exit_iter0_state35_assign_proc : process(icmp_ln1229_1_fu_1877_p2)
    begin
        if ((icmp_ln1229_1_fu_1877_p2 = ap_const_lv1_1)) then 
            ap_condition_pp5_exit_iter0_state35 <= ap_const_logic_1;
        else 
            ap_condition_pp5_exit_iter0_state35 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp6_exit_iter0_state37_assign_proc : process(icmp_ln1216_1_fu_1996_p2)
    begin
        if ((icmp_ln1216_1_fu_1996_p2 = ap_const_lv1_1)) then 
            ap_condition_pp6_exit_iter0_state37 <= ap_const_logic_1;
        else 
            ap_condition_pp6_exit_iter0_state37 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp7_exit_iter0_state39_assign_proc : process(icmp_ln9_fu_2079_p2)
    begin
        if ((icmp_ln9_fu_2079_p2 = ap_const_lv1_1)) then 
            ap_condition_pp7_exit_iter0_state39 <= ap_const_logic_1;
        else 
            ap_condition_pp7_exit_iter0_state39 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state41)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);
    ap_enable_pp4 <= (ap_idle_pp4 xor ap_const_logic_1);
    ap_enable_pp5 <= (ap_idle_pp5 xor ap_const_logic_1);
    ap_enable_pp6 <= (ap_idle_pp6 xor ap_const_logic_1);
    ap_enable_pp7 <= (ap_idle_pp7 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp4_assign_proc : process(ap_enable_reg_pp4_iter0, ap_enable_reg_pp4_iter1)
    begin
        if (((ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_0))) then 
            ap_idle_pp4 <= ap_const_logic_1;
        else 
            ap_idle_pp4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp5_assign_proc : process(ap_enable_reg_pp5_iter0, ap_enable_reg_pp5_iter1)
    begin
        if (((ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_enable_reg_pp5_iter0 = ap_const_logic_0))) then 
            ap_idle_pp5 <= ap_const_logic_1;
        else 
            ap_idle_pp5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp6_assign_proc : process(ap_enable_reg_pp6_iter0, ap_enable_reg_pp6_iter1)
    begin
        if (((ap_enable_reg_pp6_iter1 = ap_const_logic_0) and (ap_enable_reg_pp6_iter0 = ap_const_logic_0))) then 
            ap_idle_pp6 <= ap_const_logic_1;
        else 
            ap_idle_pp6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp7_assign_proc : process(ap_enable_reg_pp7_iter0, ap_enable_reg_pp7_iter1)
    begin
        if (((ap_enable_reg_pp7_iter1 = ap_const_logic_0) and (ap_enable_reg_pp7_iter0 = ap_const_logic_0))) then 
            ap_idle_pp7 <= ap_const_logic_1;
        else 
            ap_idle_pp7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_16_phi_fu_852_p4_assign_proc : process(i_16_reg_848, ap_CS_fsm_pp7_stage0, icmp_ln9_reg_2627, select_ln9_1_reg_2631, ap_enable_reg_pp7_iter1, ap_block_pp7_stage0)
    begin
        if (((ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (icmp_ln9_reg_2627 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp7_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0))) then 
            ap_phi_mux_i_16_phi_fu_852_p4 <= select_ln9_1_reg_2631;
        else 
            ap_phi_mux_i_16_phi_fu_852_p4 <= i_16_reg_848;
        end if; 
    end process;


    ap_phi_mux_j_11_phi_fu_800_p4_assign_proc : process(j_11_reg_797, ap_CS_fsm_pp5_stage0, icmp_ln1229_1_reg_2563, select_ln1229_1_reg_2567, ap_enable_reg_pp5_iter1, ap_block_pp5_stage0)
    begin
        if (((ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (icmp_ln1229_1_reg_2563 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp5_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
            ap_phi_mux_j_11_phi_fu_800_p4 <= select_ln1229_1_reg_2567;
        else 
            ap_phi_mux_j_11_phi_fu_800_p4 <= j_11_reg_797;
        end if; 
    end process;


    ap_phi_mux_j_12_phi_fu_758_p4_assign_proc : process(j_12_reg_755, ap_CS_fsm_pp4_stage0, icmp_ln1259_1_reg_2529, select_ln1259_1_reg_2533, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0)
    begin
        if (((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (icmp_ln1259_1_reg_2529 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
            ap_phi_mux_j_12_phi_fu_758_p4 <= select_ln1259_1_reg_2533;
        else 
            ap_phi_mux_j_12_phi_fu_758_p4 <= j_12_reg_755;
        end if; 
    end process;


    ap_phi_mux_j_21_phi_fu_598_p4_assign_proc : process(j_21_reg_594, j_3_reg_2292, ap_CS_fsm_pp1_stage0, icmp_ln1313_1_reg_2302, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln1313_1_reg_2302 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_j_21_phi_fu_598_p4 <= j_3_reg_2292;
        else 
            ap_phi_mux_j_21_phi_fu_598_p4 <= j_21_reg_594;
        end if; 
    end process;


    ap_phi_mux_left_bound_2_phi_fu_692_p4_assign_proc : process(left_bound_reg_605, icmp_ln1313_reg_2288, ap_CS_fsm_state29, left_bound_2_reg_688)
    begin
        if (((icmp_ln1313_reg_2288 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            ap_phi_mux_left_bound_2_phi_fu_692_p4 <= left_bound_reg_605;
        else 
            ap_phi_mux_left_bound_2_phi_fu_692_p4 <= left_bound_2_reg_688;
        end if; 
    end process;


    ap_phi_mux_right_bound_2_phi_fu_704_p4_assign_proc : process(right_bound_reg_617, icmp_ln1313_reg_2288, ap_CS_fsm_state29, right_bound_2_reg_700)
    begin
        if (((icmp_ln1313_reg_2288 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            ap_phi_mux_right_bound_2_phi_fu_704_p4 <= right_bound_reg_617;
        else 
            ap_phi_mux_right_bound_2_phi_fu_704_p4 <= right_bound_2_reg_700;
        end if; 
    end process;


    ap_phi_mux_row_list_size_phi_fu_527_p4_assign_proc : process(row_list_size_reg_523, add_ln1182_reg_2239, ap_CS_fsm_pp0_stage0, icmp_ln1180_1_reg_2244, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1180_1_reg_2244 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_row_list_size_phi_fu_527_p4 <= add_ln1182_reg_2239;
        else 
            ap_phi_mux_row_list_size_phi_fu_527_p4 <= row_list_size_reg_523;
        end if; 
    end process;


    ap_phi_mux_start_index_29_phi_fu_668_p4_assign_proc : process(start_index_reg_570, icmp_ln1313_reg_2288, ap_CS_fsm_state29, start_index_29_reg_664)
    begin
        if (((icmp_ln1313_reg_2288 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            ap_phi_mux_start_index_29_phi_fu_668_p4 <= start_index_reg_570;
        else 
            ap_phi_mux_start_index_29_phi_fu_668_p4 <= start_index_29_reg_664;
        end if; 
    end process;


    ap_phi_mux_start_value_28_phi_fu_680_p4_assign_proc : process(start_value_reg_558, icmp_ln1313_reg_2288, ap_CS_fsm_state29, start_value_28_reg_676)
    begin
        if (((icmp_ln1313_reg_2288 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            ap_phi_mux_start_value_28_phi_fu_680_p4 <= start_value_reg_558;
        else 
            ap_phi_mux_start_value_28_phi_fu_680_p4 <= start_value_28_reg_676;
        end if; 
    end process;


    ap_phi_mux_temp_size_1_phi_fu_790_p4_assign_proc : process(temp_size_1_reg_786, ap_CS_fsm_pp5_stage0, icmp_ln1229_1_reg_2563, select_ln1229_2_reg_2572, ap_enable_reg_pp5_iter1, ap_block_pp5_stage0)
    begin
        if (((ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (icmp_ln1229_1_reg_2563 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp5_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
            ap_phi_mux_temp_size_1_phi_fu_790_p4 <= select_ln1229_2_reg_2572;
        else 
            ap_phi_mux_temp_size_1_phi_fu_790_p4 <= temp_size_1_reg_786;
        end if; 
    end process;


    ap_phi_mux_temp_size_2_phi_fu_748_p4_assign_proc : process(temp_size_2_reg_744, ap_CS_fsm_pp4_stage0, icmp_ln1259_1_reg_2529, select_ln1259_2_reg_2538, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0)
    begin
        if (((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (icmp_ln1259_1_reg_2529 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
            ap_phi_mux_temp_size_2_phi_fu_748_p4 <= select_ln1259_2_reg_2538;
        else 
            ap_phi_mux_temp_size_2_phi_fu_748_p4 <= temp_size_2_reg_744;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= original_ppl;
    ap_return_1 <= add_ln1284_reg_2515;
    apexZ0_read_read_fu_246_p2 <= apexZ0;
    bitcast_ln1315_fu_1227_p1 <= conv2_i_reg_2329;
    data_V_10_fu_1202_p1 <= grp_fu_890_p1;
    data_V_fu_1007_p1 <= dc_reg_2278;
    empty_111_fu_1925_p2 <= std_logic_vector(shift_left(unsigned(add_ln1233_fu_1920_p2),to_integer(unsigned('0' & ap_const_lv11_1(11-1 downto 0)))));
    empty_112_fu_1810_p2 <= std_logic_vector(shift_left(unsigned(add_ln1263_fu_1805_p2),to_integer(unsigned('0' & ap_const_lv11_1(11-1 downto 0)))));
    empty_fu_907_p1 <= original_ppl(8 - 1 downto 0);

    grp_fu_883_p0_assign_proc : process(apexZ0_read_read_fu_246_p2, zext_ln1186_fu_985_p1, ap_CS_fsm_state5, sext_ln1422_fu_1002_p1, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                        grp_fu_883_p0 <= std_logic_vector(IEEE.numeric_std.resize(signed(apexZ0_read_read_fu_246_p2),64));

        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_883_p0 <= sext_ln1422_fu_1002_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_883_p0 <= zext_ln1186_fu_985_p1;
        else 
            grp_fu_883_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_886_p1 <= p_Result_7_fu_1214_p3;

    grp_fu_890_p0_assign_proc : process(p_x_assign_2_reg_582, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, select_ln180_fu_1195_p3, ap_CS_fsm_pp1_stage2, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_block_pp1_stage2)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_fu_890_p0 <= p_x_assign_2_reg_582;
        elsif (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2))) then 
            grp_fu_890_p0 <= select_ln180_fu_1195_p3;
        else 
            grp_fu_890_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln1180_1_fu_938_p2 <= "1" when (zext_ln1180_fu_934_p1 = GDn_points_load_reg_2229) else "0";
    icmp_ln1180_fu_922_p2 <= "1" when (signed(GDn_points_q0) > signed(ap_const_lv32_0)) else "0";
    icmp_ln11_fu_2091_p2 <= "1" when (j_18_reg_859 = ap_const_lv2_2) else "0";
    icmp_ln1209_1_fu_1566_p2 <= "1" when (signed(ap_phi_mux_start_value_28_phi_fu_680_p4) > signed(ap_const_lv64_A)) else "0";
    icmp_ln1209_fu_1560_p2 <= "0" when (ap_phi_mux_start_index_29_phi_fu_668_p4 = ap_const_lv32_0) else "1";
    icmp_ln1214_fu_1613_p2 <= "1" when (signed(add_ln1214_fu_1592_p2) > signed(add_ln1214_1_fu_1601_p2)) else "0";
    icmp_ln1216_1_fu_1996_p2 <= "1" when (signed(zext_ln1216_1_fu_1992_p1) > signed(right_bound_2_reg_700)) else "0";
    icmp_ln1216_fu_1656_p2 <= "1" when (signed(zext_ln1216_fu_1652_p1) > signed(ap_phi_mux_right_bound_2_phi_fu_704_p4)) else "0";
    icmp_ln1229_1_fu_1877_p2 <= "1" when (indvar_flatten_reg_775 = tmp_37_reg_2471) else "0";
    icmp_ln1229_fu_1627_p2 <= "1" when (signed(zext_ln1229_fu_1623_p1) < signed(add_ln1214_fu_1592_p2)) else "0";
    icmp_ln1231_fu_1894_p2 <= "1" when (z_reg_806 = ap_const_lv2_2) else "0";
    icmp_ln1242_fu_1458_p2 <= "0" when (ap_phi_mux_start_index_29_phi_fu_668_p4 = add_ln1242_fu_1452_p2) else "1";
    icmp_ln1247_fu_1464_p2 <= "1" when (signed(ap_phi_mux_start_value_28_phi_fu_680_p4) < signed(ap_const_lv64_FFFFFFFFFFFFFFF6)) else "0";
    icmp_ln1257_fu_1505_p2 <= "1" when (signed(add_ln1257_fu_1499_p2) < signed(ap_phi_mux_left_bound_2_phi_fu_692_p4)) else "0";
    icmp_ln1259_1_fu_1762_p2 <= "1" when (indvar_flatten13_reg_733 = tmp_38_reg_2453) else "0";
    icmp_ln1259_fu_1540_p2 <= "1" when (signed(zext_ln1259_fu_1536_p1) < signed(add89_fu_1531_p2)) else "0";
    icmp_ln1261_fu_1779_p2 <= "1" when (z_1_reg_764 = ap_const_lv2_2) else "0";
    icmp_ln1272_1_fu_1672_p2 <= "1" when (signed(zext_ln1272_1_fu_1668_p1) > signed(select_ln1242_reg_2426)) else "0";
    icmp_ln1272_fu_1521_p2 <= "1" when (signed(zext_ln1272_fu_1517_p1) > signed(select_ln1242_fu_1482_p3)) else "0";
    icmp_ln1293_fu_1333_p2 <= "1" when (signed(zext_ln1293_fu_1329_p1) < signed(row_list_size_1_reg_546)) else "0";
    icmp_ln1295_fu_1379_p2 <= "1" when (signed(sext_ln1295_fu_1375_p1) < signed(lbVal_reg_652)) else "0";
    icmp_ln1301_fu_1431_p2 <= "1" when (signed(sext_ln1301_fu_1427_p1) < signed(rbVal_reg_640)) else "0";
    icmp_ln1313_1_fu_1162_p2 <= "1" when (signed(zext_ln1313_fu_1158_p1) < signed(row_list_size_1_reg_546)) else "0";
    icmp_ln1313_fu_1146_p2 <= "1" when (signed(row_list_size_1_reg_546) > signed(ap_const_lv32_0)) else "0";
    icmp_ln1315_1_fu_1260_p2 <= "1" when (trunc_ln1315_1_fu_1240_p1 = ap_const_lv52_0) else "0";
    icmp_ln1315_2_fu_1266_p2 <= "0" when (tmp_33_fu_1244_p4 = ap_const_lv11_7FF) else "1";
    icmp_ln1315_3_fu_1272_p2 <= "1" when (trunc_ln1315_fu_1210_p1 = ap_const_lv52_0) else "0";
    icmp_ln1315_fu_1254_p2 <= "0" when (tmp_32_fu_1230_p4 = ap_const_lv11_7FF) else "1";
    icmp_ln9_fu_2079_p2 <= "1" when (indvar_flatten21_reg_837 = ap_const_lv6_20) else "0";
    init_patch1_address0 <= init_patch1_addr_reg_2646;

    init_patch1_ce0_assign_proc : process(ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp7_iter1)
    begin
        if (((ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0))) then 
            init_patch1_ce0 <= ap_const_logic_1;
        else 
            init_patch1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    init_patch1_d0 <= temp_V_q0;

    init_patch1_we0_assign_proc : process(trunc_ln13_reg_2520, ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp7_iter1)
    begin
        if (((ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (trunc_ln13_reg_2520 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0))) then 
            init_patch1_we0 <= ap_const_logic_1;
        else 
            init_patch1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    init_patch2_address0 <= init_patch2_addr_reg_2651;

    init_patch2_ce0_assign_proc : process(ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp7_iter1)
    begin
        if (((ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0))) then 
            init_patch2_ce0 <= ap_const_logic_1;
        else 
            init_patch2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    init_patch2_d0 <= temp_V_q0;

    init_patch2_we0_assign_proc : process(trunc_ln13_reg_2520, ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp7_iter1)
    begin
        if (((ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (trunc_ln13_reg_2520 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0))) then 
            init_patch2_we0 <= ap_const_logic_1;
        else 
            init_patch2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    init_patch3_address0 <= init_patch3_addr_reg_2656;

    init_patch3_ce0_assign_proc : process(ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp7_iter1)
    begin
        if (((ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0))) then 
            init_patch3_ce0 <= ap_const_logic_1;
        else 
            init_patch3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    init_patch3_d0 <= temp_V_q0;

    init_patch3_we0_assign_proc : process(trunc_ln13_reg_2520, ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp7_iter1)
    begin
        if (((ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (trunc_ln13_reg_2520 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0))) then 
            init_patch3_we0 <= ap_const_logic_1;
        else 
            init_patch3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    init_patch4_address0 <= init_patch4_addr_reg_2661;

    init_patch4_ce0_assign_proc : process(ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp7_iter1)
    begin
        if (((ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0))) then 
            init_patch4_ce0 <= ap_const_logic_1;
        else 
            init_patch4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    init_patch4_d0 <= temp_V_q0;

    init_patch4_we0_assign_proc : process(trunc_ln13_reg_2520, ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp7_iter1)
    begin
        if ((not((trunc_ln13_reg_2520 = ap_const_lv3_0)) and not((trunc_ln13_reg_2520 = ap_const_lv3_1)) and not((trunc_ln13_reg_2520 = ap_const_lv3_2)) and not((trunc_ln13_reg_2520 = ap_const_lv3_3)) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0))) then 
            init_patch4_we0 <= ap_const_logic_1;
        else 
            init_patch4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    init_patch_address0 <= init_patch_addr_reg_2641;

    init_patch_ce0_assign_proc : process(ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp7_iter1)
    begin
        if (((ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0))) then 
            init_patch_ce0 <= ap_const_logic_1;
        else 
            init_patch_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    init_patch_d0 <= temp_V_q0;

    init_patch_we0_assign_proc : process(trunc_ln13_reg_2520, ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp7_iter1)
    begin
        if (((ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (trunc_ln13_reg_2520 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0))) then 
            init_patch_we0 <= ap_const_logic_1;
        else 
            init_patch_we0 <= ap_const_logic_0;
        end if; 
    end process;

    isNeg_fu_1056_p3 <= add_ln341_fu_1050_p2(8 downto 8);
    j_16_fu_2049_p2 <= std_logic_vector(unsigned(j_10_reg_828) + unsigned(ap_const_lv8_1));
    j_17_fu_1888_p2 <= std_logic_vector(unsigned(ap_phi_mux_j_11_phi_fu_800_p4) + unsigned(ap_const_lv8_1));
    j_19_fu_1773_p2 <= std_logic_vector(unsigned(ap_phi_mux_j_12_phi_fu_758_p4) + unsigned(ap_const_lv8_1));
    j_1_fu_969_p2 <= std_logic_vector(unsigned(j_reg_535) + unsigned(ap_const_lv8_1));
    j_20_fu_1724_p2 <= std_logic_vector(unsigned(j_13_reg_724) + unsigned(ap_const_lv8_1));
    j_3_fu_1152_p2 <= std_logic_vector(unsigned(ap_phi_mux_j_21_phi_fu_598_p4) + unsigned(ap_const_lv8_1));
    j_5_fu_1323_p2 <= std_logic_vector(unsigned(j_22_reg_629) + unsigned(ap_const_lv8_1));
    j_6_fu_1647_p2 <= std_logic_vector(unsigned(add_ln1214_2_fu_1607_p2) - unsigned(empty_reg_2210));
    j_7_fu_1619_p1 <= select_ln1209_fu_1584_p3(8 - 1 downto 0);
    j_8_fu_1527_p1 <= ap_phi_mux_left_bound_2_phi_fu_692_p4(8 - 1 downto 0);
    j_9_fu_1511_p2 <= std_logic_vector(unsigned(trunc_ln1257_fu_1495_p1) + unsigned(ap_const_lv8_1));
    lbVal_1_fu_1392_p3 <= 
        sext_ln1295_fu_1375_p1 when (icmp_ln1295_fu_1379_p2(0) = '1') else 
        lbVal_reg_652;
    leftRight_read_read_fu_234_p2 <= leftRight;
    left_bound_1_fu_1385_p3 <= 
        zext_ln1293_reg_2391 when (icmp_ln1295_fu_1379_p2(0) = '1') else 
        left_bound_reg_605;
    lftr_wideiv_cast_fu_975_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(row_list_size_reg_523),64));
    mantissa_fu_1032_p4 <= ((ap_const_lv1_1 & tmp_64_fu_1028_p1) & ap_const_lv1_0);
    or_ln1182_fu_958_p2 <= (shl_ln1182_fu_952_p2 or ap_const_lv11_1);
    or_ln1220_1_fu_2038_p2 <= (shl_ln1220_fu_2032_p2 or ap_const_lv11_1);
    or_ln1220_fu_2059_p2 <= (tmp_39_reg_2601 or ap_const_lv10_1);
    or_ln1276_1_fu_1713_p2 <= (shl_ln1276_fu_1707_p2 or ap_const_lv11_1);
    or_ln1276_fu_1734_p2 <= (tmp_41_reg_2494 or ap_const_lv10_1);
    or_ln1315_1_fu_1282_p2 <= (icmp_ln1315_3_reg_2355 or icmp_ln1315_2_reg_2350);
    or_ln1315_fu_1278_p2 <= (icmp_ln1315_reg_2340 or icmp_ln1315_1_reg_2345);
    p_Result_7_fu_1214_p3 <= (ap_const_lv1_0 & trunc_ln368_fu_1206_p1);
    p_Result_s_fu_1010_p3 <= data_V_fu_1007_p1(31 downto 31);
    r_V_9_fu_1096_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_fu_1042_p1),to_integer(unsigned('0' & sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_1086_p1(31-1 downto 0)))));
    r_V_fu_1090_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_fu_1042_p1),to_integer(unsigned('0' & sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_1086_p1(31-1 downto 0)))));
    radii_address0 <= zext_ln1176_fu_901_p1(3 - 1 downto 0);

    radii_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            radii_ce0 <= ap_const_logic_1;
        else 
            radii_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    rbVal_1_fu_1419_p3 <= 
        sub_ln180_3_fu_1405_p2 when (tmp_60_fu_1411_p3(0) = '1') else 
        ret_33_fu_1400_p2;
    rbVal_2_fu_1444_p3 <= 
        sext_ln1301_fu_1427_p1 when (icmp_ln1301_fu_1431_p2(0) = '1') else 
        rbVal_reg_640;
    result_V_5_fu_1132_p2 <= std_logic_vector(unsigned(ap_const_lv64_0) - unsigned(val_fu_1124_p3));
    result_V_fu_1138_p3 <= 
        result_V_5_fu_1132_p2 when (p_Result_s_fu_1010_p3(0) = '1') else 
        val_fu_1124_p3;
    ret_32_fu_1348_p2 <= std_logic_vector(signed(sext_ln215_27_fu_1344_p1) + signed(rhs_18_reg_2380));
    ret_33_fu_1400_p2 <= std_logic_vector(signed(sext_ln215_27_fu_1344_p1) - signed(rhs_18_reg_2380));
    ret_fu_996_p2 <= std_logic_vector(signed(sext_ln215_fu_990_p1) - signed(sext_ln215_26_fu_993_p1));
    rhs_18_fu_1319_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trapezoid_edges_V_q0),33));
    right_bound_3_fu_1437_p3 <= 
        zext_ln1293_reg_2391 when (icmp_ln1301_fu_1431_p2(0) = '1') else 
        right_bound_reg_617;

    row_list_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp2_stage0, lftr_wideiv_cast_fu_975_p1, zext_ln1315_fu_1168_p1, zext_ln1295_fu_1339_p1)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            row_list_V_address0 <= zext_ln1295_fu_1339_p1(7 - 1 downto 0);
        elsif (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            row_list_V_address0 <= zext_ln1315_fu_1168_p1(7 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            row_list_V_address0 <= lftr_wideiv_cast_fu_975_p1(7 - 1 downto 0);
        else 
            row_list_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    row_list_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            row_list_V_ce0 <= ap_const_logic_1;
        else 
            row_list_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    row_list_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln1180_1_reg_2244, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1180_1_reg_2244 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            row_list_V_we0 <= ap_const_logic_1;
        else 
            row_list_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln1209_fu_1584_p3 <= 
        add_ln1211_fu_1578_p2 when (and_ln1209_fu_1572_p2(0) = '1') else 
        ap_phi_mux_start_index_29_phi_fu_668_p4;
    select_ln1229_1_fu_1908_p3 <= 
        j_17_fu_1888_p2 when (icmp_ln1231_fu_1894_p2(0) = '1') else 
        ap_phi_mux_j_11_phi_fu_800_p4;
    select_ln1229_2_fu_1931_p3 <= 
        add_ln1236_fu_1882_p2 when (icmp_ln1231_fu_1894_p2(0) = '1') else 
        ap_phi_mux_temp_size_1_phi_fu_790_p4;
    select_ln1229_fu_1900_p3 <= 
        ap_const_lv2_0 when (icmp_ln1231_fu_1894_p2(0) = '1') else 
        z_reg_806;
    select_ln1242_fu_1482_p3 <= 
        add_ln1249_fu_1476_p2 when (and_ln1242_fu_1470_p2(0) = '1') else 
        ap_phi_mux_start_index_29_phi_fu_668_p4;
    select_ln1259_1_fu_1793_p3 <= 
        j_19_fu_1773_p2 when (icmp_ln1261_fu_1779_p2(0) = '1') else 
        ap_phi_mux_j_12_phi_fu_758_p4;
    select_ln1259_2_fu_1816_p3 <= 
        add_ln1266_fu_1767_p2 when (icmp_ln1261_fu_1779_p2(0) = '1') else 
        ap_phi_mux_temp_size_2_phi_fu_748_p4;
    select_ln1259_fu_1785_p3 <= 
        ap_const_lv2_0 when (icmp_ln1261_fu_1779_p2(0) = '1') else 
        z_1_reg_764;
    select_ln1315_2_fu_1312_p3 <= 
        start_value_1_reg_2311_pp1_iter1_reg when (and_ln1315_1_fu_1292_p2(0) = '1') else 
        p_x_assign_2_reg_582;
    select_ln180_1_fu_1367_p3 <= 
        sub_ln180_2_fu_1353_p2 when (tmp_59_fu_1359_p3(0) = '1') else 
        ret_32_fu_1348_p2;
    select_ln180_fu_1195_p3 <= 
        sub_ln180_fu_1190_p2 when (tmp_58_reg_2319(0) = '1') else 
        start_value_1_reg_2311;
    select_ln9_1_fu_2105_p3 <= 
        add_ln9_fu_2085_p2 when (icmp_ln11_fu_2091_p2(0) = '1') else 
        ap_phi_mux_i_16_phi_fu_852_p4;
    select_ln9_fu_2097_p3 <= 
        ap_const_lv2_0 when (icmp_ln11_fu_2091_p2(0) = '1') else 
        j_18_reg_859;
        sext_ln1295_fu_1375_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln180_1_fu_1367_p3),64));

        sext_ln1301_fu_1427_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rbVal_1_fu_1419_p3),64));

        sext_ln1311_fu_1070_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1311_fu_1064_p2),9));

        sext_ln1422_fu_1002_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_fu_996_p2),64));

    sext_ln215_26_fu_993_p0 <= apexZ0;
        sext_ln215_26_fu_993_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln215_26_fu_993_p0),33));

        sext_ln215_27_fu_1344_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(row_list_V_q0),33));

        sext_ln215_fu_990_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(z_top),33));

        sext_ln534_fu_1173_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(row_list_V_q0),64));

    sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_1086_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_prom_i_i_i_i_i_cast_cast_cast_fu_1082_p1),111));
        sh_prom_i_i_i_i_i_cast_cast_cast_fu_1082_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_fu_1074_p3),32));

    shl_ln1182_fu_952_p2 <= std_logic_vector(shift_left(unsigned(add_ln1182_1_fu_947_p2),to_integer(unsigned('0' & ap_const_lv11_1(11-1 downto 0)))));
    shl_ln1220_fu_2032_p2 <= std_logic_vector(shift_left(unsigned(add_ln1220_fu_2014_p2),to_integer(unsigned('0' & ap_const_lv11_1(11-1 downto 0)))));
    shl_ln1276_fu_1707_p2 <= std_logic_vector(shift_left(unsigned(add_ln1276_fu_1689_p2),to_integer(unsigned('0' & ap_const_lv11_1(11-1 downto 0)))));
    start_index_2_fu_1305_p3 <= 
        zext_ln1313_reg_2297_pp1_iter1_reg when (and_ln1315_1_fu_1292_p2(0) = '1') else 
        start_index_reg_570;
    start_value_1_fu_1177_p2 <= std_logic_vector(signed(sext_ln534_fu_1173_p1) - signed(result_V_reg_2283));
    start_value_2_fu_1298_p3 <= 
        start_value_1_reg_2311_pp1_iter1_reg when (and_ln1315_1_fu_1292_p2(0) = '1') else 
        start_value_reg_558;
    sub_ln1229_fu_1633_p2 <= std_logic_vector(unsigned(add_ln1214_fu_1592_p2) - unsigned(zext_ln1229_fu_1623_p1));
    sub_ln1257_fu_1490_p2 <= std_logic_vector(unsigned(select_ln1242_fu_1482_p3) - unsigned(original_ppl));
    sub_ln1259_fu_1546_p2 <= std_logic_vector(unsigned(add89_fu_1531_p2) - unsigned(zext_ln1259_fu_1536_p1));
    sub_ln1311_fu_1064_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(tmp_63_fu_1018_p4));
    sub_ln180_2_fu_1353_p2 <= std_logic_vector(unsigned(ap_const_lv33_0) - unsigned(ret_32_fu_1348_p2));
    sub_ln180_3_fu_1405_p2 <= std_logic_vector(unsigned(ap_const_lv33_0) - unsigned(ret_33_fu_1400_p2));
    sub_ln180_fu_1190_p2 <= std_logic_vector(unsigned(ap_const_lv64_0) - unsigned(start_value_1_reg_2311));

    temp_V_address0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp6_stage0, ap_CS_fsm_pp7_stage0, ap_enable_reg_pp7_iter0, ap_enable_reg_pp3_iter1, ap_enable_reg_pp4_iter1, ap_enable_reg_pp6_iter1, ap_block_pp4_stage0, ap_block_pp7_stage0, ap_block_pp3_stage0, tmp_42_fu_1739_p3, zext_ln1263_3_fu_1867_p1, ap_block_pp6_stage0, tmp_40_fu_2064_p3, zext_ln13_1_fu_2135_p1)
    begin
        if (((ap_enable_reg_pp7_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0))) then 
            temp_V_address0 <= zext_ln13_1_fu_2135_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0))) then 
            temp_V_address0 <= tmp_40_fu_2064_p3(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
            temp_V_address0 <= zext_ln1263_3_fu_1867_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            temp_V_address0 <= tmp_42_fu_1739_p3(8 - 1 downto 0);
        else 
            temp_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    temp_V_address1_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp3_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_block_pp5_stage0, ap_block_pp3_stage0, zext_ln1276_fu_1730_p1, zext_ln1233_3_fu_1982_p1, ap_block_pp6_stage0, zext_ln1220_fu_2055_p1)
    begin
        if (((ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0))) then 
            temp_V_address1 <= zext_ln1220_fu_2055_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
            temp_V_address1 <= zext_ln1233_3_fu_1982_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            temp_V_address1 <= zext_ln1276_fu_1730_p1(8 - 1 downto 0);
        else 
            temp_V_address1 <= "XXXXXXXX";
        end if; 
    end process;


    temp_V_ce0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, ap_CS_fsm_pp7_stage0, ap_enable_reg_pp7_iter0, ap_block_pp7_stage0_11001, ap_enable_reg_pp3_iter1, ap_enable_reg_pp4_iter1, ap_enable_reg_pp6_iter1)
    begin
        if ((((ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)) or ((ap_enable_reg_pp7_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0)))) then 
            temp_V_ce0 <= ap_const_logic_1;
        else 
            temp_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_V_ce1_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, ap_enable_reg_pp3_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1)
    begin
        if ((((ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0)))) then 
            temp_V_ce1 <= ap_const_logic_1;
        else 
            temp_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    temp_V_d0_assign_proc : process(GDarrayDecoded_q0, GDarrayDecoded_q1, ap_CS_fsm_pp3_stage0, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp3_iter1, ap_enable_reg_pp4_iter1, ap_enable_reg_pp6_iter1, ap_block_pp4_stage0, ap_block_pp3_stage0, ap_block_pp6_stage0)
    begin
        if ((((ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0)) or ((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)))) then 
            temp_V_d0 <= GDarrayDecoded_q1;
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            temp_V_d0 <= GDarrayDecoded_q0;
        else 
            temp_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    temp_V_d1_assign_proc : process(GDarrayDecoded_q0, GDarrayDecoded_q1, ap_CS_fsm_pp3_stage0, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp3_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_block_pp5_stage0, ap_block_pp3_stage0, ap_block_pp6_stage0)
    begin
        if ((((ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0)) or ((ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0)))) then 
            temp_V_d1 <= GDarrayDecoded_q0;
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            temp_V_d1 <= GDarrayDecoded_q1;
        else 
            temp_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    temp_V_we0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, icmp_ln1272_1_reg_2490, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, icmp_ln1259_1_reg_2529, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, icmp_ln1216_1_reg_2597, ap_enable_reg_pp3_iter1, ap_enable_reg_pp4_iter1, ap_enable_reg_pp6_iter1)
    begin
        if ((((ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (icmp_ln1216_1_reg_2597 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln1272_1_reg_2490 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (icmp_ln1259_1_reg_2529 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)))) then 
            temp_V_we0 <= ap_const_logic_1;
        else 
            temp_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_V_we1_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, icmp_ln1272_1_reg_2490, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, icmp_ln1229_1_reg_2563, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, icmp_ln1216_1_reg_2597, ap_enable_reg_pp3_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1)
    begin
        if ((((ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (icmp_ln1216_1_reg_2597 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln1272_1_reg_2490 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (icmp_ln1229_1_reg_2563 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0)))) then 
            temp_V_we1 <= ap_const_logic_1;
        else 
            temp_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_102_cast_fu_2121_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_43_fu_2113_p3),7));
    tmp_32_fu_1230_p4 <= bitcast_ln1315_fu_1227_p1(62 downto 52);
    tmp_33_fu_1244_p4 <= data_V_10_fu_1202_p1(62 downto 52);
    tmp_36_fu_1114_p4 <= r_V_9_fu_1096_p2(87 downto 24);
    tmp_37_fu_1639_p3 <= (sub_ln1229_fu_1633_p2 & ap_const_lv1_0);
    tmp_38_fu_1552_p3 <= (sub_ln1259_fu_1546_p2 & ap_const_lv1_0);
    tmp_39_fu_2002_p3 <= (temp_size_reg_817 & ap_const_lv1_0);
    tmp_40_fu_2064_p3 <= (ap_const_lv54_0 & or_ln1220_fu_2059_p2);
    tmp_41_fu_1677_p3 <= (temp_size_3_reg_713 & ap_const_lv1_0);
    tmp_42_fu_1739_p3 <= (ap_const_lv54_0 & or_ln1276_fu_1734_p2);
    tmp_43_fu_2113_p3 <= (select_ln9_1_fu_2105_p3 & ap_const_lv1_0);
    tmp_59_fu_1359_p3 <= ret_32_fu_1348_p2(32 downto 32);
    tmp_60_fu_1411_p3 <= ret_33_fu_1400_p2(32 downto 32);
    tmp_61_fu_2019_p3 <= (add_ln1220_fu_2014_p2 & ap_const_lv1_0);
    tmp_62_fu_1694_p3 <= (add_ln1276_fu_1689_p2 & ap_const_lv1_0);
    tmp_63_fu_1018_p4 <= data_V_fu_1007_p1(30 downto 23);
    tmp_64_fu_1028_p1 <= data_V_fu_1007_p1(23 - 1 downto 0);
    tmp_93_cast_fu_1943_p3 <= (trunc_ln1233_fu_1939_p1 & ap_const_lv1_0);
    tmp_97_cast_fu_1828_p3 <= (trunc_ln1263_fu_1824_p1 & ap_const_lv1_0);
    tmp_fu_1102_p3 <= r_V_fu_1090_p2(24 downto 24);
    tmp_s_fu_911_p3 <= (i & ap_const_lv7_0);
    trapezoid_edges_V_address0 <= zext_ln1176_reg_2166(3 - 1 downto 0);

    trapezoid_edges_V_ce0_assign_proc : process(ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            trapezoid_edges_V_ce0 <= ap_const_logic_1;
        else 
            trapezoid_edges_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln1214_fu_1597_p1 <= ap_phi_mux_right_bound_2_phi_fu_704_p4(8 - 1 downto 0);
    trunc_ln1233_fu_1939_p1 <= select_ln1229_2_fu_1931_p3(7 - 1 downto 0);
    trunc_ln1257_fu_1495_p1 <= sub_ln1257_fu_1490_p2(8 - 1 downto 0);
    trunc_ln1263_fu_1824_p1 <= select_ln1259_2_fu_1816_p3(7 - 1 downto 0);
    trunc_ln1315_1_fu_1240_p1 <= bitcast_ln1315_fu_1227_p1(52 - 1 downto 0);
    trunc_ln1315_fu_1210_p1 <= data_V_10_fu_1202_p1(52 - 1 downto 0);
    trunc_ln13_fu_1753_p1 <= p_read1(3 - 1 downto 0);
    trunc_ln368_fu_1206_p1 <= data_V_10_fu_1202_p1(63 - 1 downto 0);
    ush_fu_1074_p3 <= 
        sext_ln1311_fu_1070_p1 when (isNeg_fu_1056_p3(0) = '1') else 
        add_ln341_fu_1050_p2;
    val_fu_1124_p3 <= 
        zext_ln662_fu_1110_p1 when (isNeg_fu_1056_p3(0) = '1') else 
        tmp_36_fu_1114_p4;
    zext_ln1176_1_fu_918_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_911_p3),11));
    zext_ln1176_fu_901_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i),64));
    zext_ln1180_fu_934_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_row_list_size_phi_fu_527_p4),32));
    zext_ln1182_1_fu_964_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1182_fu_958_p2),64));
    zext_ln1182_fu_943_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_reg_535),11));
    zext_ln1186_fu_985_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1186_fu_980_p2),64));
    zext_ln1216_1_fu_1992_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_10_reg_828),32));
    zext_ln1216_fu_1652_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_6_fu_1647_p2),32));
    zext_ln1220_1_fu_2010_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_10_reg_828),11));
    zext_ln1220_2_fu_2027_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_61_fu_2019_p3),64));
    zext_ln1220_3_fu_2044_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1220_1_fu_2038_p2),64));
    zext_ln1220_fu_2055_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_39_reg_2601),64));
    zext_ln1229_fu_1623_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_7_fu_1619_p1),32));
    zext_ln1233_1_fu_1951_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1229_fu_1900_p3),11));
    zext_ln1233_2_fu_1955_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1229_fu_1900_p3),8));
    zext_ln1233_3_fu_1982_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1233_1_reg_2577),64));
    zext_ln1233_4_fu_1971_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1233_2_fu_1965_p2),64));
    zext_ln1233_fu_1916_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1229_1_fu_1908_p3),11));
    zext_ln1259_fu_1536_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_8_fu_1527_p1),32));
    zext_ln1263_1_fu_1836_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1259_fu_1785_p3),11));
    zext_ln1263_2_fu_1840_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1259_fu_1785_p3),8));
    zext_ln1263_3_fu_1867_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1263_1_reg_2543),64));
    zext_ln1263_4_fu_1856_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1263_2_fu_1850_p2),64));
    zext_ln1263_fu_1801_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1259_1_fu_1793_p3),11));
    zext_ln1272_1_fu_1668_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_13_reg_724),32));
    zext_ln1272_fu_1517_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_9_fu_1511_p2),32));
    zext_ln1276_1_fu_1685_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_13_reg_724),11));
    zext_ln1276_2_fu_1702_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_62_fu_1694_p3),64));
    zext_ln1276_3_fu_1719_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1276_1_fu_1713_p2),64));
    zext_ln1276_fu_1730_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_41_reg_2494),64));
    zext_ln1293_fu_1329_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_22_reg_629),32));
    zext_ln1295_fu_1339_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_22_reg_629),64));
    zext_ln1313_fu_1158_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_j_21_phi_fu_598_p4),32));
    zext_ln1315_fu_1168_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_j_21_phi_fu_598_p4),64));
    zext_ln13_1_fu_2135_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln13_fu_2129_p2),64));
    zext_ln13_fu_2125_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln9_fu_2097_p3),7));
    zext_ln15_fu_1042_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_fu_1032_p4),111));
    zext_ln341_fu_1046_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_63_fu_1018_p4),9));
    zext_ln662_fu_1110_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_1102_p3),64));
end behav;
