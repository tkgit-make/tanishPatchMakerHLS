-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    n_patches_i : IN STD_LOGIC_VECTOR (7 downto 0);
    n_patches_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    n_patches_o_ap_vld : OUT STD_LOGIC;
    GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    GDn_points_ce0 : OUT STD_LOGIC;
    GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    patches_superpoints_ce0 : OUT STD_LOGIC;
    patches_superpoints_we0 : OUT STD_LOGIC;
    patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
    z_top : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read : IN STD_LOGIC_VECTOR (31 downto 0);
    leftRight : IN STD_LOGIC_VECTOR (0 downto 0);
    GDarrayDecoded_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    GDarrayDecoded_ce0 : OUT STD_LOGIC;
    GDarrayDecoded_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    GDarrayDecoded_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    GDarrayDecoded_ce1 : OUT STD_LOGIC;
    GDarrayDecoded_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    patches_parameters_ce0 : OUT STD_LOGIC;
    patches_parameters_we0 : OUT STD_LOGIC;
    patches_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    temp_V_ce0 : OUT STD_LOGIC;
    temp_V_we0 : OUT STD_LOGIC;
    temp_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    temp_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_V_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    temp_V_ce1 : OUT STD_LOGIC;
    temp_V_we1 : OUT STD_LOGIC;
    temp_V_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_A0 : STD_LOGIC_VECTOR (7 downto 0) := "10100000";
    constant ap_const_lv7_20 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv7_78 : STD_LOGIC_VECTOR (6 downto 0) := "1111000";
    constant ap_const_lv6_18 : STD_LOGIC_VECTOR (5 downto 0) := "011000";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal add_ln1116_2_fu_696_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal select_ln1116_3_fu_746_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln1116_fu_702_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1118_5_fu_806_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1120_fu_833_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln1118_6_fu_845_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1134_fu_853_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln1134_reg_1235 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln1134_fu_859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal add_ln1141_2_fu_873_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal select_ln1141_3_fu_923_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln1141_fu_879_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1143_5_fu_983_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1145_fu_1010_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln1143_6_fu_1022_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1153_2_fu_1030_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal select_ln1153_2_fu_1080_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln1153_fu_1036_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1155_3_fu_1108_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln1157_fu_1165_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln1155_4_fu_1177_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal init_patch_V_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal init_patch_V_0_ce0 : STD_LOGIC;
    signal init_patch_V_0_we0 : STD_LOGIC;
    signal init_patch_V_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal init_patch_V_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal init_patch_V_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal init_patch_V_1_ce0 : STD_LOGIC;
    signal init_patch_V_1_we0 : STD_LOGIC;
    signal init_patch_V_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal init_patch_V_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal init_patch_V_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal init_patch_V_2_ce0 : STD_LOGIC;
    signal init_patch_V_2_we0 : STD_LOGIC;
    signal init_patch_V_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal init_patch_V_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal init_patch_V_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal init_patch_V_3_ce0 : STD_LOGIC;
    signal init_patch_V_3_we0 : STD_LOGIC;
    signal init_patch_V_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal init_patch_V_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal init_patch_V_4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal init_patch_V_4_ce0 : STD_LOGIC;
    signal init_patch_V_4_we0 : STD_LOGIC;
    signal init_patch_V_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal init_patch_V_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_0_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_superpoints_0_V_ce0 : STD_LOGIC;
    signal NPpatches_superpoints_0_V_we0 : STD_LOGIC;
    signal NPpatches_superpoints_0_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_0_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_0_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_superpoints_0_V_ce1 : STD_LOGIC;
    signal NPpatches_superpoints_0_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_1_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_superpoints_1_V_ce0 : STD_LOGIC;
    signal NPpatches_superpoints_1_V_we0 : STD_LOGIC;
    signal NPpatches_superpoints_1_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_1_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_1_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_superpoints_1_V_ce1 : STD_LOGIC;
    signal NPpatches_superpoints_1_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_2_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_superpoints_2_V_ce0 : STD_LOGIC;
    signal NPpatches_superpoints_2_V_we0 : STD_LOGIC;
    signal NPpatches_superpoints_2_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_2_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_2_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_superpoints_2_V_ce1 : STD_LOGIC;
    signal NPpatches_superpoints_2_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_3_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_superpoints_3_V_ce0 : STD_LOGIC;
    signal NPpatches_superpoints_3_V_we0 : STD_LOGIC;
    signal NPpatches_superpoints_3_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_3_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_3_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_superpoints_3_V_ce1 : STD_LOGIC;
    signal NPpatches_superpoints_3_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_4_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_superpoints_4_V_ce0 : STD_LOGIC;
    signal NPpatches_superpoints_4_V_we0 : STD_LOGIC;
    signal NPpatches_superpoints_4_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_4_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_superpoints_4_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_superpoints_4_V_ce1 : STD_LOGIC;
    signal NPpatches_superpoints_4_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_parameters_V_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_parameters_V_0_ce0 : STD_LOGIC;
    signal NPpatches_parameters_V_0_we0 : STD_LOGIC;
    signal NPpatches_parameters_V_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_parameters_V_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_parameters_V_0_ce1 : STD_LOGIC;
    signal NPpatches_parameters_V_0_we1 : STD_LOGIC;
    signal NPpatches_parameters_V_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_parameters_V_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_parameters_V_1_ce0 : STD_LOGIC;
    signal NPpatches_parameters_V_1_we0 : STD_LOGIC;
    signal NPpatches_parameters_V_1_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal NPpatches_parameters_V_1_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal NPpatches_parameters_V_1_ce1 : STD_LOGIC;
    signal NPpatches_parameters_V_1_we1 : STD_LOGIC;
    signal NPpatches_parameters_V_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_parameters_V_2_ce0 : STD_LOGIC;
    signal NPpatches_parameters_V_2_we0 : STD_LOGIC;
    signal NPpatches_parameters_V_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_parameters_V_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_parameters_V_2_ce1 : STD_LOGIC;
    signal NPpatches_parameters_V_2_we1 : STD_LOGIC;
    signal NPpatches_parameters_V_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_parameters_V_3_ce0 : STD_LOGIC;
    signal NPpatches_parameters_V_3_we0 : STD_LOGIC;
    signal NPpatches_parameters_V_3_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal NPpatches_parameters_V_3_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal NPpatches_parameters_V_3_ce1 : STD_LOGIC;
    signal NPpatches_parameters_V_3_we1 : STD_LOGIC;
    signal NPpatches_parameters_V_4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_parameters_V_4_ce0 : STD_LOGIC;
    signal NPpatches_parameters_V_4_we0 : STD_LOGIC;
    signal NPpatches_parameters_V_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_parameters_V_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal NPpatches_parameters_V_4_ce1 : STD_LOGIC;
    signal NPpatches_parameters_V_4_we1 : STD_LOGIC;
    signal NPpatches_parameters_V_4_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_add_patch6_fu_624_ap_start : STD_LOGIC;
    signal grp_add_patch6_fu_624_ap_done : STD_LOGIC;
    signal grp_add_patch6_fu_624_ap_idle : STD_LOGIC;
    signal grp_add_patch6_fu_624_ap_ready : STD_LOGIC;
    signal grp_add_patch6_fu_624_n_patches : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_add_patch6_fu_624_n_patches_ap_vld : STD_LOGIC;
    signal grp_add_patch6_fu_624_patches_superpoints_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_add_patch6_fu_624_patches_superpoints_ce0 : STD_LOGIC;
    signal grp_add_patch6_fu_624_patches_superpoints_we0 : STD_LOGIC;
    signal grp_add_patch6_fu_624_patches_superpoints_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch6_fu_624_wp_superpoints_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch6_fu_624_wp_superpoints_ce0 : STD_LOGIC;
    signal grp_add_patch6_fu_624_wp_superpoints_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch6_fu_624_wp_superpoints_ce1 : STD_LOGIC;
    signal grp_add_patch6_fu_624_wp_superpoints1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch6_fu_624_wp_superpoints1_ce0 : STD_LOGIC;
    signal grp_add_patch6_fu_624_wp_superpoints1_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch6_fu_624_wp_superpoints1_ce1 : STD_LOGIC;
    signal grp_add_patch6_fu_624_wp_superpoints2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch6_fu_624_wp_superpoints2_ce0 : STD_LOGIC;
    signal grp_add_patch6_fu_624_wp_superpoints2_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch6_fu_624_wp_superpoints2_ce1 : STD_LOGIC;
    signal grp_add_patch6_fu_624_wp_superpoints3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch6_fu_624_wp_superpoints3_ce0 : STD_LOGIC;
    signal grp_add_patch6_fu_624_wp_superpoints3_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch6_fu_624_wp_superpoints3_ce1 : STD_LOGIC;
    signal grp_add_patch6_fu_624_wp_superpoints4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch6_fu_624_wp_superpoints4_ce0 : STD_LOGIC;
    signal grp_add_patch6_fu_624_wp_superpoints4_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch6_fu_624_wp_superpoints4_ce1 : STD_LOGIC;
    signal grp_add_patch6_fu_624_wp_parameters_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch6_fu_624_wp_parameters_ce0 : STD_LOGIC;
    signal grp_add_patch6_fu_624_wp_parameters5_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch6_fu_624_wp_parameters5_ce0 : STD_LOGIC;
    signal grp_add_patch6_fu_624_wp_parameters6_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch6_fu_624_wp_parameters6_ce0 : STD_LOGIC;
    signal grp_add_patch6_fu_624_wp_parameters7_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch6_fu_624_wp_parameters7_ce0 : STD_LOGIC;
    signal grp_add_patch6_fu_624_wp_parameters8_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch6_fu_624_wp_parameters8_ce0 : STD_LOGIC;
    signal grp_add_patch6_fu_624_patches_parameters_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_add_patch6_fu_624_patches_parameters_ce0 : STD_LOGIC;
    signal grp_add_patch6_fu_624_patches_parameters_we0 : STD_LOGIC;
    signal grp_add_patch6_fu_624_patches_parameters_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_645_ap_start : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_645_ap_done : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_645_ap_idle : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_645_ap_ready : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_645_GDn_points_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_645_GDn_points_ce0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_645_init_patch_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_645_init_patch_ce0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_645_init_patch_we0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_645_init_patch_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_645_init_patch1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_645_init_patch1_ce0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_645_init_patch1_we0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_645_init_patch1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_645_init_patch2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_645_init_patch2_ce0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_645_init_patch2_we0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_645_init_patch2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_645_init_patch3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_645_init_patch3_ce0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_645_init_patch3_we0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_645_init_patch3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_645_init_patch4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_645_init_patch4_ce0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_645_init_patch4_we0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_645_init_patch4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_645_GDarrayDecoded_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_645_GDarrayDecoded_ce0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_645_GDarrayDecoded_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_645_GDarrayDecoded_ce1 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_645_temp_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_645_temp_V_ce0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_645_temp_V_we0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_645_temp_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_645_temp_V_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_645_temp_V_ce1 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_645_temp_V_we1 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine8_fu_645_temp_V_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_645_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeSuperPoint_alignedToLine8_fu_645_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_wedgePatch_init_fu_672_ap_start : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_ap_done : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_ap_idle : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_ap_ready : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_superpoints_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_superpoints_ce0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_superpoints_we0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_superpoints_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_superpoints_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_superpoints_ce1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_superpoints1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_superpoints1_ce0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_superpoints1_we0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_superpoints1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_superpoints1_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_superpoints1_ce1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_superpoints2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_superpoints2_ce0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_superpoints2_we0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_superpoints2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_superpoints2_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_superpoints2_ce1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_superpoints3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_superpoints3_ce0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_superpoints3_we0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_superpoints3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_superpoints3_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_superpoints3_ce1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_superpoints4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_superpoints4_ce0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_superpoints4_we0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_superpoints4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_superpoints4_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_superpoints4_ce1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_parameters_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_parameters_ce0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_parameters_we0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_parameters_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_parameters_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_parameters_ce1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_parameters_we1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_parameters_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_parameters5_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_parameters5_ce0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_parameters5_we0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_parameters5_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_parameters5_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_parameters5_ce1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_parameters5_we1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_parameters5_d1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_parameters6_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_parameters6_ce0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_parameters6_we0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_parameters6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_parameters6_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_parameters6_ce1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_parameters6_we1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_parameters6_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_parameters7_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_parameters7_ce0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_parameters7_we0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_parameters7_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_parameters7_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_parameters7_ce1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_parameters7_we1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_parameters7_d1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_parameters8_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_parameters8_ce0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_parameters8_we0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_parameters8_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_parameters8_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_672_wp_parameters8_ce1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_parameters8_we1 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_wp_parameters8_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_wedgePatch_init_fu_672_superpointsI_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_672_superpointsI_ce0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_superpointsI9_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_672_superpointsI9_ce0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_superpointsI10_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_672_superpointsI10_ce0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_superpointsI11_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_672_superpointsI11_ce0 : STD_LOGIC;
    signal grp_wedgePatch_init_fu_672_superpointsI12_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_wedgePatch_init_fu_672_superpointsI12_ce0 : STD_LOGIC;
    signal indvar_flatten13_reg_425 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_reg_436 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten_reg_447 : STD_LOGIC_VECTOR (6 downto 0);
    signal b_reg_458 : STD_LOGIC_VECTOR (4 downto 0);
    signal c_reg_469 : STD_LOGIC_VECTOR (1 downto 0);
    signal init_patch_size_0_reg_480 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ppl_0_reg_492 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_502 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten35_reg_514 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_3_reg_525 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten21_reg_536 : STD_LOGIC_VECTOR (6 downto 0);
    signal c_3_reg_547 : STD_LOGIC_VECTOR (4 downto 0);
    signal d_reg_558 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten57_reg_569 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal b_4_reg_580 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten43_reg_591 : STD_LOGIC_VECTOR (5 downto 0);
    signal c_4_reg_602 : STD_LOGIC_VECTOR (2 downto 0);
    signal d_2_reg_613 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_add_patch6_fu_624_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_makeSuperPoint_alignedToLine8_fu_645_ap_start_reg : STD_LOGIC := '0';
    signal grp_wedgePatch_init_fu_672_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal zext_ln1122_2_fu_824_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1147_2_fu_1001_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1159_4_fu_1156_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln1118_fu_714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1120_fu_734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1116_fu_728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1116_fu_708_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln1116_fu_720_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln1116_fu_740_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1118_fu_760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1118_fu_754_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln1122_2_fu_778_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln1122_fu_774_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln1116_4_fu_782_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln1118_4_fu_790_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln1118_fu_766_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_cast_fu_798_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln1122_fu_814_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1122_fu_818_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1118_2_fu_839_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln1143_fu_891_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1145_fu_911_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1141_fu_905_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1141_fu_885_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln1141_fu_897_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln1141_fu_917_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1143_fu_937_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1143_fu_931_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln1147_2_fu_955_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln1147_fu_951_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln1141_4_fu_959_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln1143_4_fu_967_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln1143_fu_943_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_110_cast_fu_975_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln1147_fu_991_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1147_fu_995_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1143_2_fu_1016_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln1155_fu_1048_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1157_fu_1068_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1153_fu_1062_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1153_fu_1042_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln1153_fu_1054_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln1153_fu_1074_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1155_fu_1094_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1155_fu_1088_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln1159_fu_1116_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_1128_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl_cast_fu_1120_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln1159_fu_1136_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln1155_fu_1100_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln1159_fu_1140_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln1159_3_fu_1146_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1159_fu_1150_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1155_2_fu_1171_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component makePatches_ShadowQuilt_fromEdges_add_patch6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        n_patches : OUT STD_LOGIC_VECTOR (7 downto 0);
        n_patches_ap_vld : OUT STD_LOGIC;
        n_patches_read : IN STD_LOGIC_VECTOR (7 downto 0);
        patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_superpoints_ce0 : OUT STD_LOGIC;
        patches_superpoints_we0 : OUT STD_LOGIC;
        patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        wp_superpoints_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints_ce0 : OUT STD_LOGIC;
        wp_superpoints_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints_ce1 : OUT STD_LOGIC;
        wp_superpoints_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints1_ce0 : OUT STD_LOGIC;
        wp_superpoints1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints1_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints1_ce1 : OUT STD_LOGIC;
        wp_superpoints1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints2_ce0 : OUT STD_LOGIC;
        wp_superpoints2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints2_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints2_ce1 : OUT STD_LOGIC;
        wp_superpoints2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints3_ce0 : OUT STD_LOGIC;
        wp_superpoints3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints3_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints3_ce1 : OUT STD_LOGIC;
        wp_superpoints3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints4_ce0 : OUT STD_LOGIC;
        wp_superpoints4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints4_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints4_ce1 : OUT STD_LOGIC;
        wp_superpoints4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters_ce0 : OUT STD_LOGIC;
        wp_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters5_ce0 : OUT STD_LOGIC;
        wp_parameters5_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        wp_parameters6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters6_ce0 : OUT STD_LOGIC;
        wp_parameters6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters7_ce0 : OUT STD_LOGIC;
        wp_parameters7_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        wp_parameters8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters8_ce0 : OUT STD_LOGIC;
        wp_parameters8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_parameters_ce0 : OUT STD_LOGIC;
        patches_parameters_we0 : OUT STD_LOGIC;
        patches_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine8 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        GDn_points_ce0 : OUT STD_LOGIC;
        GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        i : IN STD_LOGIC_VECTOR (2 downto 0);
        z_top : IN STD_LOGIC_VECTOR (31 downto 0);
        apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
        original_ppl : IN STD_LOGIC_VECTOR (31 downto 0);
        leftRight : IN STD_LOGIC_VECTOR (0 downto 0);
        init_patch_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        init_patch_ce0 : OUT STD_LOGIC;
        init_patch_we0 : OUT STD_LOGIC;
        init_patch_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        init_patch1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        init_patch1_ce0 : OUT STD_LOGIC;
        init_patch1_we0 : OUT STD_LOGIC;
        init_patch1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        init_patch2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        init_patch2_ce0 : OUT STD_LOGIC;
        init_patch2_we0 : OUT STD_LOGIC;
        init_patch2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        init_patch3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        init_patch3_ce0 : OUT STD_LOGIC;
        init_patch3_we0 : OUT STD_LOGIC;
        init_patch3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        init_patch4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        init_patch4_ce0 : OUT STD_LOGIC;
        init_patch4_we0 : OUT STD_LOGIC;
        init_patch4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (7 downto 0);
        GDarrayDecoded_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        GDarrayDecoded_ce0 : OUT STD_LOGIC;
        GDarrayDecoded_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        GDarrayDecoded_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        GDarrayDecoded_ce1 : OUT STD_LOGIC;
        GDarrayDecoded_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        temp_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        temp_V_ce0 : OUT STD_LOGIC;
        temp_V_we0 : OUT STD_LOGIC;
        temp_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        temp_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        temp_V_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        temp_V_ce1 : OUT STD_LOGIC;
        temp_V_we1 : OUT STD_LOGIC;
        temp_V_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_wedgePatch_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        wp_superpoints_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints_ce0 : OUT STD_LOGIC;
        wp_superpoints_we0 : OUT STD_LOGIC;
        wp_superpoints_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints_ce1 : OUT STD_LOGIC;
        wp_superpoints_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints1_ce0 : OUT STD_LOGIC;
        wp_superpoints1_we0 : OUT STD_LOGIC;
        wp_superpoints1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints1_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints1_ce1 : OUT STD_LOGIC;
        wp_superpoints1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints2_ce0 : OUT STD_LOGIC;
        wp_superpoints2_we0 : OUT STD_LOGIC;
        wp_superpoints2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints2_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints2_ce1 : OUT STD_LOGIC;
        wp_superpoints2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints3_ce0 : OUT STD_LOGIC;
        wp_superpoints3_we0 : OUT STD_LOGIC;
        wp_superpoints3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints3_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints3_ce1 : OUT STD_LOGIC;
        wp_superpoints3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints4_ce0 : OUT STD_LOGIC;
        wp_superpoints4_we0 : OUT STD_LOGIC;
        wp_superpoints4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_superpoints4_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_superpoints4_ce1 : OUT STD_LOGIC;
        wp_superpoints4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters_ce0 : OUT STD_LOGIC;
        wp_parameters_we0 : OUT STD_LOGIC;
        wp_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters_ce1 : OUT STD_LOGIC;
        wp_parameters_we1 : OUT STD_LOGIC;
        wp_parameters_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters5_ce0 : OUT STD_LOGIC;
        wp_parameters5_we0 : OUT STD_LOGIC;
        wp_parameters5_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        wp_parameters5_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters5_ce1 : OUT STD_LOGIC;
        wp_parameters5_we1 : OUT STD_LOGIC;
        wp_parameters5_d1 : OUT STD_LOGIC_VECTOR (0 downto 0);
        wp_parameters6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters6_ce0 : OUT STD_LOGIC;
        wp_parameters6_we0 : OUT STD_LOGIC;
        wp_parameters6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters6_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters6_ce1 : OUT STD_LOGIC;
        wp_parameters6_we1 : OUT STD_LOGIC;
        wp_parameters6_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters7_ce0 : OUT STD_LOGIC;
        wp_parameters7_we0 : OUT STD_LOGIC;
        wp_parameters7_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        wp_parameters7_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters7_ce1 : OUT STD_LOGIC;
        wp_parameters7_we1 : OUT STD_LOGIC;
        wp_parameters7_d1 : OUT STD_LOGIC_VECTOR (0 downto 0);
        wp_parameters8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters8_ce0 : OUT STD_LOGIC;
        wp_parameters8_we0 : OUT STD_LOGIC;
        wp_parameters8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters8_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters8_ce1 : OUT STD_LOGIC;
        wp_parameters8_we1 : OUT STD_LOGIC;
        wp_parameters8_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        wp_parameters8_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        superpointsI_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        superpointsI_ce0 : OUT STD_LOGIC;
        superpointsI_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        superpointsI9_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        superpointsI9_ce0 : OUT STD_LOGIC;
        superpointsI9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        superpointsI10_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        superpointsI10_ce0 : OUT STD_LOGIC;
        superpointsI10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        superpointsI11_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        superpointsI11_ce0 : OUT STD_LOGIC;
        superpointsI11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        superpointsI12_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        superpointsI12_ce0 : OUT STD_LOGIC;
        superpointsI12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        superpoint_count : IN STD_LOGIC_VECTOR (7 downto 0);
        apexZ0I : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_init_patch_V_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_superpoints_0_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_parameters_V_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_parameters_V_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_parameters_V_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    init_patch_V_0_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_init_patch_V_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => init_patch_V_0_address0,
        ce0 => init_patch_V_0_ce0,
        we0 => init_patch_V_0_we0,
        d0 => init_patch_V_0_d0,
        q0 => init_patch_V_0_q0);

    init_patch_V_1_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_init_patch_V_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => init_patch_V_1_address0,
        ce0 => init_patch_V_1_ce0,
        we0 => init_patch_V_1_we0,
        d0 => init_patch_V_1_d0,
        q0 => init_patch_V_1_q0);

    init_patch_V_2_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_init_patch_V_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => init_patch_V_2_address0,
        ce0 => init_patch_V_2_ce0,
        we0 => init_patch_V_2_we0,
        d0 => init_patch_V_2_d0,
        q0 => init_patch_V_2_q0);

    init_patch_V_3_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_init_patch_V_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => init_patch_V_3_address0,
        ce0 => init_patch_V_3_ce0,
        we0 => init_patch_V_3_we0,
        d0 => init_patch_V_3_d0,
        q0 => init_patch_V_3_q0);

    init_patch_V_4_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_init_patch_V_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => init_patch_V_4_address0,
        ce0 => init_patch_V_4_ce0,
        we0 => init_patch_V_4_we0,
        d0 => init_patch_V_4_d0,
        q0 => init_patch_V_4_q0);

    NPpatches_superpoints_0_V_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_superpoints_0_V
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => NPpatches_superpoints_0_V_address0,
        ce0 => NPpatches_superpoints_0_V_ce0,
        we0 => NPpatches_superpoints_0_V_we0,
        d0 => NPpatches_superpoints_0_V_d0,
        q0 => NPpatches_superpoints_0_V_q0,
        address1 => NPpatches_superpoints_0_V_address1,
        ce1 => NPpatches_superpoints_0_V_ce1,
        q1 => NPpatches_superpoints_0_V_q1);

    NPpatches_superpoints_1_V_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_superpoints_0_V
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => NPpatches_superpoints_1_V_address0,
        ce0 => NPpatches_superpoints_1_V_ce0,
        we0 => NPpatches_superpoints_1_V_we0,
        d0 => NPpatches_superpoints_1_V_d0,
        q0 => NPpatches_superpoints_1_V_q0,
        address1 => NPpatches_superpoints_1_V_address1,
        ce1 => NPpatches_superpoints_1_V_ce1,
        q1 => NPpatches_superpoints_1_V_q1);

    NPpatches_superpoints_2_V_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_superpoints_0_V
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => NPpatches_superpoints_2_V_address0,
        ce0 => NPpatches_superpoints_2_V_ce0,
        we0 => NPpatches_superpoints_2_V_we0,
        d0 => NPpatches_superpoints_2_V_d0,
        q0 => NPpatches_superpoints_2_V_q0,
        address1 => NPpatches_superpoints_2_V_address1,
        ce1 => NPpatches_superpoints_2_V_ce1,
        q1 => NPpatches_superpoints_2_V_q1);

    NPpatches_superpoints_3_V_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_superpoints_0_V
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => NPpatches_superpoints_3_V_address0,
        ce0 => NPpatches_superpoints_3_V_ce0,
        we0 => NPpatches_superpoints_3_V_we0,
        d0 => NPpatches_superpoints_3_V_d0,
        q0 => NPpatches_superpoints_3_V_q0,
        address1 => NPpatches_superpoints_3_V_address1,
        ce1 => NPpatches_superpoints_3_V_ce1,
        q1 => NPpatches_superpoints_3_V_q1);

    NPpatches_superpoints_4_V_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_superpoints_0_V
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => NPpatches_superpoints_4_V_address0,
        ce0 => NPpatches_superpoints_4_V_ce0,
        we0 => NPpatches_superpoints_4_V_we0,
        d0 => NPpatches_superpoints_4_V_d0,
        q0 => NPpatches_superpoints_4_V_q0,
        address1 => NPpatches_superpoints_4_V_address1,
        ce1 => NPpatches_superpoints_4_V_ce1,
        q1 => NPpatches_superpoints_4_V_q1);

    NPpatches_parameters_V_0_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_parameters_V_0
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => NPpatches_parameters_V_0_address0,
        ce0 => NPpatches_parameters_V_0_ce0,
        we0 => NPpatches_parameters_V_0_we0,
        d0 => NPpatches_parameters_V_0_d0,
        q0 => NPpatches_parameters_V_0_q0,
        address1 => grp_wedgePatch_init_fu_672_wp_parameters_address1,
        ce1 => NPpatches_parameters_V_0_ce1,
        we1 => NPpatches_parameters_V_0_we1,
        d1 => grp_wedgePatch_init_fu_672_wp_parameters_d1,
        q1 => NPpatches_parameters_V_0_q1);

    NPpatches_parameters_V_1_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_parameters_V_1
    generic map (
        DataWidth => 1,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => NPpatches_parameters_V_1_address0,
        ce0 => NPpatches_parameters_V_1_ce0,
        we0 => NPpatches_parameters_V_1_we0,
        d0 => NPpatches_parameters_V_1_d0,
        q0 => NPpatches_parameters_V_1_q0,
        address1 => grp_wedgePatch_init_fu_672_wp_parameters5_address1,
        ce1 => NPpatches_parameters_V_1_ce1,
        we1 => NPpatches_parameters_V_1_we1,
        d1 => grp_wedgePatch_init_fu_672_wp_parameters5_d1);

    NPpatches_parameters_V_2_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_parameters_V_2
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => NPpatches_parameters_V_2_address0,
        ce0 => NPpatches_parameters_V_2_ce0,
        we0 => NPpatches_parameters_V_2_we0,
        d0 => NPpatches_parameters_V_2_d0,
        q0 => NPpatches_parameters_V_2_q0,
        address1 => grp_wedgePatch_init_fu_672_wp_parameters6_address1,
        ce1 => NPpatches_parameters_V_2_ce1,
        we1 => NPpatches_parameters_V_2_we1,
        d1 => grp_wedgePatch_init_fu_672_wp_parameters6_d1);

    NPpatches_parameters_V_3_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_parameters_V_1
    generic map (
        DataWidth => 1,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => NPpatches_parameters_V_3_address0,
        ce0 => NPpatches_parameters_V_3_ce0,
        we0 => NPpatches_parameters_V_3_we0,
        d0 => NPpatches_parameters_V_3_d0,
        q0 => NPpatches_parameters_V_3_q0,
        address1 => grp_wedgePatch_init_fu_672_wp_parameters7_address1,
        ce1 => NPpatches_parameters_V_3_ce1,
        we1 => NPpatches_parameters_V_3_we1,
        d1 => grp_wedgePatch_init_fu_672_wp_parameters7_d1);

    NPpatches_parameters_V_4_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_parameters_V_0
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => NPpatches_parameters_V_4_address0,
        ce0 => NPpatches_parameters_V_4_ce0,
        we0 => NPpatches_parameters_V_4_we0,
        d0 => NPpatches_parameters_V_4_d0,
        q0 => NPpatches_parameters_V_4_q0,
        address1 => grp_wedgePatch_init_fu_672_wp_parameters8_address1,
        ce1 => NPpatches_parameters_V_4_ce1,
        we1 => NPpatches_parameters_V_4_we1,
        d1 => grp_wedgePatch_init_fu_672_wp_parameters8_d1,
        q1 => NPpatches_parameters_V_4_q1);

    grp_add_patch6_fu_624 : component makePatches_ShadowQuilt_fromEdges_add_patch6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_add_patch6_fu_624_ap_start,
        ap_done => grp_add_patch6_fu_624_ap_done,
        ap_idle => grp_add_patch6_fu_624_ap_idle,
        ap_ready => grp_add_patch6_fu_624_ap_ready,
        n_patches => grp_add_patch6_fu_624_n_patches,
        n_patches_ap_vld => grp_add_patch6_fu_624_n_patches_ap_vld,
        n_patches_read => n_patches_i,
        patches_superpoints_address0 => grp_add_patch6_fu_624_patches_superpoints_address0,
        patches_superpoints_ce0 => grp_add_patch6_fu_624_patches_superpoints_ce0,
        patches_superpoints_we0 => grp_add_patch6_fu_624_patches_superpoints_we0,
        patches_superpoints_d0 => grp_add_patch6_fu_624_patches_superpoints_d0,
        patches_superpoints_q0 => patches_superpoints_q0,
        wp_superpoints_address0 => grp_add_patch6_fu_624_wp_superpoints_address0,
        wp_superpoints_ce0 => grp_add_patch6_fu_624_wp_superpoints_ce0,
        wp_superpoints_q0 => NPpatches_superpoints_0_V_q0,
        wp_superpoints_address1 => grp_add_patch6_fu_624_wp_superpoints_address1,
        wp_superpoints_ce1 => grp_add_patch6_fu_624_wp_superpoints_ce1,
        wp_superpoints_q1 => NPpatches_superpoints_0_V_q1,
        wp_superpoints1_address0 => grp_add_patch6_fu_624_wp_superpoints1_address0,
        wp_superpoints1_ce0 => grp_add_patch6_fu_624_wp_superpoints1_ce0,
        wp_superpoints1_q0 => NPpatches_superpoints_1_V_q0,
        wp_superpoints1_address1 => grp_add_patch6_fu_624_wp_superpoints1_address1,
        wp_superpoints1_ce1 => grp_add_patch6_fu_624_wp_superpoints1_ce1,
        wp_superpoints1_q1 => NPpatches_superpoints_1_V_q1,
        wp_superpoints2_address0 => grp_add_patch6_fu_624_wp_superpoints2_address0,
        wp_superpoints2_ce0 => grp_add_patch6_fu_624_wp_superpoints2_ce0,
        wp_superpoints2_q0 => NPpatches_superpoints_2_V_q0,
        wp_superpoints2_address1 => grp_add_patch6_fu_624_wp_superpoints2_address1,
        wp_superpoints2_ce1 => grp_add_patch6_fu_624_wp_superpoints2_ce1,
        wp_superpoints2_q1 => NPpatches_superpoints_2_V_q1,
        wp_superpoints3_address0 => grp_add_patch6_fu_624_wp_superpoints3_address0,
        wp_superpoints3_ce0 => grp_add_patch6_fu_624_wp_superpoints3_ce0,
        wp_superpoints3_q0 => NPpatches_superpoints_3_V_q0,
        wp_superpoints3_address1 => grp_add_patch6_fu_624_wp_superpoints3_address1,
        wp_superpoints3_ce1 => grp_add_patch6_fu_624_wp_superpoints3_ce1,
        wp_superpoints3_q1 => NPpatches_superpoints_3_V_q1,
        wp_superpoints4_address0 => grp_add_patch6_fu_624_wp_superpoints4_address0,
        wp_superpoints4_ce0 => grp_add_patch6_fu_624_wp_superpoints4_ce0,
        wp_superpoints4_q0 => NPpatches_superpoints_4_V_q0,
        wp_superpoints4_address1 => grp_add_patch6_fu_624_wp_superpoints4_address1,
        wp_superpoints4_ce1 => grp_add_patch6_fu_624_wp_superpoints4_ce1,
        wp_superpoints4_q1 => NPpatches_superpoints_4_V_q1,
        wp_parameters_address0 => grp_add_patch6_fu_624_wp_parameters_address0,
        wp_parameters_ce0 => grp_add_patch6_fu_624_wp_parameters_ce0,
        wp_parameters_q0 => NPpatches_parameters_V_0_q0,
        wp_parameters5_address0 => grp_add_patch6_fu_624_wp_parameters5_address0,
        wp_parameters5_ce0 => grp_add_patch6_fu_624_wp_parameters5_ce0,
        wp_parameters5_q0 => NPpatches_parameters_V_1_q0,
        wp_parameters6_address0 => grp_add_patch6_fu_624_wp_parameters6_address0,
        wp_parameters6_ce0 => grp_add_patch6_fu_624_wp_parameters6_ce0,
        wp_parameters6_q0 => NPpatches_parameters_V_2_q0,
        wp_parameters7_address0 => grp_add_patch6_fu_624_wp_parameters7_address0,
        wp_parameters7_ce0 => grp_add_patch6_fu_624_wp_parameters7_ce0,
        wp_parameters7_q0 => NPpatches_parameters_V_3_q0,
        wp_parameters8_address0 => grp_add_patch6_fu_624_wp_parameters8_address0,
        wp_parameters8_ce0 => grp_add_patch6_fu_624_wp_parameters8_ce0,
        wp_parameters8_q0 => NPpatches_parameters_V_4_q0,
        patches_parameters_address0 => grp_add_patch6_fu_624_patches_parameters_address0,
        patches_parameters_ce0 => grp_add_patch6_fu_624_patches_parameters_ce0,
        patches_parameters_we0 => grp_add_patch6_fu_624_patches_parameters_we0,
        patches_parameters_d0 => grp_add_patch6_fu_624_patches_parameters_d0,
        patches_parameters_q0 => patches_parameters_q0);

    grp_makeSuperPoint_alignedToLine8_fu_645 : component makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine8
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_makeSuperPoint_alignedToLine8_fu_645_ap_start,
        ap_done => grp_makeSuperPoint_alignedToLine8_fu_645_ap_done,
        ap_idle => grp_makeSuperPoint_alignedToLine8_fu_645_ap_idle,
        ap_ready => grp_makeSuperPoint_alignedToLine8_fu_645_ap_ready,
        GDn_points_address0 => grp_makeSuperPoint_alignedToLine8_fu_645_GDn_points_address0,
        GDn_points_ce0 => grp_makeSuperPoint_alignedToLine8_fu_645_GDn_points_ce0,
        GDn_points_q0 => GDn_points_q0,
        i => i_reg_502,
        z_top => z_top,
        apexZ0 => apexZ0,
        original_ppl => p_read,
        leftRight => leftRight,
        init_patch_address0 => grp_makeSuperPoint_alignedToLine8_fu_645_init_patch_address0,
        init_patch_ce0 => grp_makeSuperPoint_alignedToLine8_fu_645_init_patch_ce0,
        init_patch_we0 => grp_makeSuperPoint_alignedToLine8_fu_645_init_patch_we0,
        init_patch_d0 => grp_makeSuperPoint_alignedToLine8_fu_645_init_patch_d0,
        init_patch1_address0 => grp_makeSuperPoint_alignedToLine8_fu_645_init_patch1_address0,
        init_patch1_ce0 => grp_makeSuperPoint_alignedToLine8_fu_645_init_patch1_ce0,
        init_patch1_we0 => grp_makeSuperPoint_alignedToLine8_fu_645_init_patch1_we0,
        init_patch1_d0 => grp_makeSuperPoint_alignedToLine8_fu_645_init_patch1_d0,
        init_patch2_address0 => grp_makeSuperPoint_alignedToLine8_fu_645_init_patch2_address0,
        init_patch2_ce0 => grp_makeSuperPoint_alignedToLine8_fu_645_init_patch2_ce0,
        init_patch2_we0 => grp_makeSuperPoint_alignedToLine8_fu_645_init_patch2_we0,
        init_patch2_d0 => grp_makeSuperPoint_alignedToLine8_fu_645_init_patch2_d0,
        init_patch3_address0 => grp_makeSuperPoint_alignedToLine8_fu_645_init_patch3_address0,
        init_patch3_ce0 => grp_makeSuperPoint_alignedToLine8_fu_645_init_patch3_ce0,
        init_patch3_we0 => grp_makeSuperPoint_alignedToLine8_fu_645_init_patch3_we0,
        init_patch3_d0 => grp_makeSuperPoint_alignedToLine8_fu_645_init_patch3_d0,
        init_patch4_address0 => grp_makeSuperPoint_alignedToLine8_fu_645_init_patch4_address0,
        init_patch4_ce0 => grp_makeSuperPoint_alignedToLine8_fu_645_init_patch4_ce0,
        init_patch4_we0 => grp_makeSuperPoint_alignedToLine8_fu_645_init_patch4_we0,
        init_patch4_d0 => grp_makeSuperPoint_alignedToLine8_fu_645_init_patch4_d0,
        p_read1 => init_patch_size_0_reg_480,
        GDarrayDecoded_address0 => grp_makeSuperPoint_alignedToLine8_fu_645_GDarrayDecoded_address0,
        GDarrayDecoded_ce0 => grp_makeSuperPoint_alignedToLine8_fu_645_GDarrayDecoded_ce0,
        GDarrayDecoded_q0 => GDarrayDecoded_q0,
        GDarrayDecoded_address1 => grp_makeSuperPoint_alignedToLine8_fu_645_GDarrayDecoded_address1,
        GDarrayDecoded_ce1 => grp_makeSuperPoint_alignedToLine8_fu_645_GDarrayDecoded_ce1,
        GDarrayDecoded_q1 => GDarrayDecoded_q1,
        temp_V_address0 => grp_makeSuperPoint_alignedToLine8_fu_645_temp_V_address0,
        temp_V_ce0 => grp_makeSuperPoint_alignedToLine8_fu_645_temp_V_ce0,
        temp_V_we0 => grp_makeSuperPoint_alignedToLine8_fu_645_temp_V_we0,
        temp_V_d0 => grp_makeSuperPoint_alignedToLine8_fu_645_temp_V_d0,
        temp_V_q0 => temp_V_q0,
        temp_V_address1 => grp_makeSuperPoint_alignedToLine8_fu_645_temp_V_address1,
        temp_V_ce1 => grp_makeSuperPoint_alignedToLine8_fu_645_temp_V_ce1,
        temp_V_we1 => grp_makeSuperPoint_alignedToLine8_fu_645_temp_V_we1,
        temp_V_d1 => grp_makeSuperPoint_alignedToLine8_fu_645_temp_V_d1,
        ap_return_0 => grp_makeSuperPoint_alignedToLine8_fu_645_ap_return_0,
        ap_return_1 => grp_makeSuperPoint_alignedToLine8_fu_645_ap_return_1);

    grp_wedgePatch_init_fu_672 : component makePatches_ShadowQuilt_fromEdges_wedgePatch_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_wedgePatch_init_fu_672_ap_start,
        ap_done => grp_wedgePatch_init_fu_672_ap_done,
        ap_idle => grp_wedgePatch_init_fu_672_ap_idle,
        ap_ready => grp_wedgePatch_init_fu_672_ap_ready,
        wp_superpoints_address0 => grp_wedgePatch_init_fu_672_wp_superpoints_address0,
        wp_superpoints_ce0 => grp_wedgePatch_init_fu_672_wp_superpoints_ce0,
        wp_superpoints_we0 => grp_wedgePatch_init_fu_672_wp_superpoints_we0,
        wp_superpoints_d0 => grp_wedgePatch_init_fu_672_wp_superpoints_d0,
        wp_superpoints_q0 => NPpatches_superpoints_0_V_q0,
        wp_superpoints_address1 => grp_wedgePatch_init_fu_672_wp_superpoints_address1,
        wp_superpoints_ce1 => grp_wedgePatch_init_fu_672_wp_superpoints_ce1,
        wp_superpoints_q1 => NPpatches_superpoints_0_V_q1,
        wp_superpoints1_address0 => grp_wedgePatch_init_fu_672_wp_superpoints1_address0,
        wp_superpoints1_ce0 => grp_wedgePatch_init_fu_672_wp_superpoints1_ce0,
        wp_superpoints1_we0 => grp_wedgePatch_init_fu_672_wp_superpoints1_we0,
        wp_superpoints1_d0 => grp_wedgePatch_init_fu_672_wp_superpoints1_d0,
        wp_superpoints1_q0 => NPpatches_superpoints_1_V_q0,
        wp_superpoints1_address1 => grp_wedgePatch_init_fu_672_wp_superpoints1_address1,
        wp_superpoints1_ce1 => grp_wedgePatch_init_fu_672_wp_superpoints1_ce1,
        wp_superpoints1_q1 => NPpatches_superpoints_1_V_q1,
        wp_superpoints2_address0 => grp_wedgePatch_init_fu_672_wp_superpoints2_address0,
        wp_superpoints2_ce0 => grp_wedgePatch_init_fu_672_wp_superpoints2_ce0,
        wp_superpoints2_we0 => grp_wedgePatch_init_fu_672_wp_superpoints2_we0,
        wp_superpoints2_d0 => grp_wedgePatch_init_fu_672_wp_superpoints2_d0,
        wp_superpoints2_q0 => NPpatches_superpoints_2_V_q0,
        wp_superpoints2_address1 => grp_wedgePatch_init_fu_672_wp_superpoints2_address1,
        wp_superpoints2_ce1 => grp_wedgePatch_init_fu_672_wp_superpoints2_ce1,
        wp_superpoints2_q1 => NPpatches_superpoints_2_V_q1,
        wp_superpoints3_address0 => grp_wedgePatch_init_fu_672_wp_superpoints3_address0,
        wp_superpoints3_ce0 => grp_wedgePatch_init_fu_672_wp_superpoints3_ce0,
        wp_superpoints3_we0 => grp_wedgePatch_init_fu_672_wp_superpoints3_we0,
        wp_superpoints3_d0 => grp_wedgePatch_init_fu_672_wp_superpoints3_d0,
        wp_superpoints3_q0 => NPpatches_superpoints_3_V_q0,
        wp_superpoints3_address1 => grp_wedgePatch_init_fu_672_wp_superpoints3_address1,
        wp_superpoints3_ce1 => grp_wedgePatch_init_fu_672_wp_superpoints3_ce1,
        wp_superpoints3_q1 => NPpatches_superpoints_3_V_q1,
        wp_superpoints4_address0 => grp_wedgePatch_init_fu_672_wp_superpoints4_address0,
        wp_superpoints4_ce0 => grp_wedgePatch_init_fu_672_wp_superpoints4_ce0,
        wp_superpoints4_we0 => grp_wedgePatch_init_fu_672_wp_superpoints4_we0,
        wp_superpoints4_d0 => grp_wedgePatch_init_fu_672_wp_superpoints4_d0,
        wp_superpoints4_q0 => NPpatches_superpoints_4_V_q0,
        wp_superpoints4_address1 => grp_wedgePatch_init_fu_672_wp_superpoints4_address1,
        wp_superpoints4_ce1 => grp_wedgePatch_init_fu_672_wp_superpoints4_ce1,
        wp_superpoints4_q1 => NPpatches_superpoints_4_V_q1,
        wp_parameters_address0 => grp_wedgePatch_init_fu_672_wp_parameters_address0,
        wp_parameters_ce0 => grp_wedgePatch_init_fu_672_wp_parameters_ce0,
        wp_parameters_we0 => grp_wedgePatch_init_fu_672_wp_parameters_we0,
        wp_parameters_d0 => grp_wedgePatch_init_fu_672_wp_parameters_d0,
        wp_parameters_q0 => NPpatches_parameters_V_0_q0,
        wp_parameters_address1 => grp_wedgePatch_init_fu_672_wp_parameters_address1,
        wp_parameters_ce1 => grp_wedgePatch_init_fu_672_wp_parameters_ce1,
        wp_parameters_we1 => grp_wedgePatch_init_fu_672_wp_parameters_we1,
        wp_parameters_d1 => grp_wedgePatch_init_fu_672_wp_parameters_d1,
        wp_parameters_q1 => NPpatches_parameters_V_0_q1,
        wp_parameters5_address0 => grp_wedgePatch_init_fu_672_wp_parameters5_address0,
        wp_parameters5_ce0 => grp_wedgePatch_init_fu_672_wp_parameters5_ce0,
        wp_parameters5_we0 => grp_wedgePatch_init_fu_672_wp_parameters5_we0,
        wp_parameters5_d0 => grp_wedgePatch_init_fu_672_wp_parameters5_d0,
        wp_parameters5_address1 => grp_wedgePatch_init_fu_672_wp_parameters5_address1,
        wp_parameters5_ce1 => grp_wedgePatch_init_fu_672_wp_parameters5_ce1,
        wp_parameters5_we1 => grp_wedgePatch_init_fu_672_wp_parameters5_we1,
        wp_parameters5_d1 => grp_wedgePatch_init_fu_672_wp_parameters5_d1,
        wp_parameters6_address0 => grp_wedgePatch_init_fu_672_wp_parameters6_address0,
        wp_parameters6_ce0 => grp_wedgePatch_init_fu_672_wp_parameters6_ce0,
        wp_parameters6_we0 => grp_wedgePatch_init_fu_672_wp_parameters6_we0,
        wp_parameters6_d0 => grp_wedgePatch_init_fu_672_wp_parameters6_d0,
        wp_parameters6_address1 => grp_wedgePatch_init_fu_672_wp_parameters6_address1,
        wp_parameters6_ce1 => grp_wedgePatch_init_fu_672_wp_parameters6_ce1,
        wp_parameters6_we1 => grp_wedgePatch_init_fu_672_wp_parameters6_we1,
        wp_parameters6_d1 => grp_wedgePatch_init_fu_672_wp_parameters6_d1,
        wp_parameters7_address0 => grp_wedgePatch_init_fu_672_wp_parameters7_address0,
        wp_parameters7_ce0 => grp_wedgePatch_init_fu_672_wp_parameters7_ce0,
        wp_parameters7_we0 => grp_wedgePatch_init_fu_672_wp_parameters7_we0,
        wp_parameters7_d0 => grp_wedgePatch_init_fu_672_wp_parameters7_d0,
        wp_parameters7_address1 => grp_wedgePatch_init_fu_672_wp_parameters7_address1,
        wp_parameters7_ce1 => grp_wedgePatch_init_fu_672_wp_parameters7_ce1,
        wp_parameters7_we1 => grp_wedgePatch_init_fu_672_wp_parameters7_we1,
        wp_parameters7_d1 => grp_wedgePatch_init_fu_672_wp_parameters7_d1,
        wp_parameters8_address0 => grp_wedgePatch_init_fu_672_wp_parameters8_address0,
        wp_parameters8_ce0 => grp_wedgePatch_init_fu_672_wp_parameters8_ce0,
        wp_parameters8_we0 => grp_wedgePatch_init_fu_672_wp_parameters8_we0,
        wp_parameters8_d0 => grp_wedgePatch_init_fu_672_wp_parameters8_d0,
        wp_parameters8_q0 => NPpatches_parameters_V_4_q0,
        wp_parameters8_address1 => grp_wedgePatch_init_fu_672_wp_parameters8_address1,
        wp_parameters8_ce1 => grp_wedgePatch_init_fu_672_wp_parameters8_ce1,
        wp_parameters8_we1 => grp_wedgePatch_init_fu_672_wp_parameters8_we1,
        wp_parameters8_d1 => grp_wedgePatch_init_fu_672_wp_parameters8_d1,
        wp_parameters8_q1 => NPpatches_parameters_V_4_q1,
        superpointsI_address0 => grp_wedgePatch_init_fu_672_superpointsI_address0,
        superpointsI_ce0 => grp_wedgePatch_init_fu_672_superpointsI_ce0,
        superpointsI_q0 => init_patch_V_0_q0,
        superpointsI9_address0 => grp_wedgePatch_init_fu_672_superpointsI9_address0,
        superpointsI9_ce0 => grp_wedgePatch_init_fu_672_superpointsI9_ce0,
        superpointsI9_q0 => init_patch_V_1_q0,
        superpointsI10_address0 => grp_wedgePatch_init_fu_672_superpointsI10_address0,
        superpointsI10_ce0 => grp_wedgePatch_init_fu_672_superpointsI10_ce0,
        superpointsI10_q0 => init_patch_V_2_q0,
        superpointsI11_address0 => grp_wedgePatch_init_fu_672_superpointsI11_address0,
        superpointsI11_ce0 => grp_wedgePatch_init_fu_672_superpointsI11_ce0,
        superpointsI11_q0 => init_patch_V_3_q0,
        superpointsI12_address0 => grp_wedgePatch_init_fu_672_superpointsI12_address0,
        superpointsI12_ce0 => grp_wedgePatch_init_fu_672_superpointsI12_ce0,
        superpointsI12_q0 => init_patch_V_4_q0,
        superpoint_count => init_patch_size_0_reg_480,
        apexZ0I => apexZ0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_add_patch6_fu_624_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_add_patch6_fu_624_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    grp_add_patch6_fu_624_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_add_patch6_fu_624_ap_ready = ap_const_logic_1)) then 
                    grp_add_patch6_fu_624_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_makeSuperPoint_alignedToLine8_fu_645_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_makeSuperPoint_alignedToLine8_fu_645_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln1134_fu_859_p2 = ap_const_lv1_0))) then 
                    grp_makeSuperPoint_alignedToLine8_fu_645_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_makeSuperPoint_alignedToLine8_fu_645_ap_ready = ap_const_logic_1)) then 
                    grp_makeSuperPoint_alignedToLine8_fu_645_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_wedgePatch_init_fu_672_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_wedgePatch_init_fu_672_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    grp_wedgePatch_init_fu_672_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_wedgePatch_init_fu_672_ap_ready = ap_const_logic_1)) then 
                    grp_wedgePatch_init_fu_672_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    a_reg_436_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1116_fu_702_p2 = ap_const_lv1_0))) then 
                a_reg_436 <= select_ln1116_3_fu_746_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                a_reg_436 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    b_3_reg_525_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln1134_fu_859_p2 = ap_const_lv1_1))) then 
                b_3_reg_525 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1141_fu_879_p2 = ap_const_lv1_0))) then 
                b_3_reg_525 <= select_ln1141_3_fu_923_p3;
            end if; 
        end if;
    end process;

    b_4_reg_580_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                b_4_reg_580 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln1153_fu_1036_p2 = ap_const_lv1_0))) then 
                b_4_reg_580 <= select_ln1153_2_fu_1080_p3;
            end if; 
        end if;
    end process;

    b_reg_458_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1116_fu_702_p2 = ap_const_lv1_0))) then 
                b_reg_458 <= select_ln1118_5_fu_806_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                b_reg_458 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    c_3_reg_547_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln1134_fu_859_p2 = ap_const_lv1_1))) then 
                c_3_reg_547 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1141_fu_879_p2 = ap_const_lv1_0))) then 
                c_3_reg_547 <= select_ln1143_5_fu_983_p3;
            end if; 
        end if;
    end process;

    c_4_reg_602_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                c_4_reg_602 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln1153_fu_1036_p2 = ap_const_lv1_0))) then 
                c_4_reg_602 <= select_ln1155_3_fu_1108_p3;
            end if; 
        end if;
    end process;

    c_reg_469_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1116_fu_702_p2 = ap_const_lv1_0))) then 
                c_reg_469 <= add_ln1120_fu_833_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                c_reg_469 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    d_2_reg_613_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                d_2_reg_613 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln1153_fu_1036_p2 = ap_const_lv1_0))) then 
                d_2_reg_613 <= add_ln1157_fu_1165_p2;
            end if; 
        end if;
    end process;

    d_reg_558_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln1134_fu_859_p2 = ap_const_lv1_1))) then 
                d_reg_558 <= ap_const_lv2_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1141_fu_879_p2 = ap_const_lv1_0))) then 
                d_reg_558 <= add_ln1145_fu_1010_p2;
            end if; 
        end if;
    end process;

    i_reg_502_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                i_reg_502 <= ap_const_lv3_0;
            elsif (((grp_makeSuperPoint_alignedToLine8_fu_645_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                i_reg_502 <= add_ln1134_reg_1235;
            end if; 
        end if;
    end process;

    indvar_flatten13_reg_425_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1116_fu_702_p2 = ap_const_lv1_0))) then 
                indvar_flatten13_reg_425 <= add_ln1116_2_fu_696_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten13_reg_425 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    indvar_flatten21_reg_536_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln1134_fu_859_p2 = ap_const_lv1_1))) then 
                indvar_flatten21_reg_536 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1141_fu_879_p2 = ap_const_lv1_0))) then 
                indvar_flatten21_reg_536 <= select_ln1143_6_fu_1022_p3;
            end if; 
        end if;
    end process;

    indvar_flatten35_reg_514_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln1134_fu_859_p2 = ap_const_lv1_1))) then 
                indvar_flatten35_reg_514 <= ap_const_lv8_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1141_fu_879_p2 = ap_const_lv1_0))) then 
                indvar_flatten35_reg_514 <= add_ln1141_2_fu_873_p2;
            end if; 
        end if;
    end process;

    indvar_flatten43_reg_591_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                indvar_flatten43_reg_591 <= ap_const_lv6_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln1153_fu_1036_p2 = ap_const_lv1_0))) then 
                indvar_flatten43_reg_591 <= select_ln1155_4_fu_1177_p3;
            end if; 
        end if;
    end process;

    indvar_flatten57_reg_569_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                indvar_flatten57_reg_569 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln1153_fu_1036_p2 = ap_const_lv1_0))) then 
                indvar_flatten57_reg_569 <= add_ln1153_2_fu_1030_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_447_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1116_fu_702_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_447 <= select_ln1118_6_fu_845_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_447 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    init_patch_size_0_reg_480_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                init_patch_size_0_reg_480 <= ap_const_lv8_0;
            elsif (((grp_makeSuperPoint_alignedToLine8_fu_645_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                init_patch_size_0_reg_480 <= grp_makeSuperPoint_alignedToLine8_fu_645_ap_return_1;
            end if; 
        end if;
    end process;

    ppl_0_reg_492_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                ppl_0_reg_492 <= p_read;
            elsif (((grp_makeSuperPoint_alignedToLine8_fu_645_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                ppl_0_reg_492 <= grp_makeSuperPoint_alignedToLine8_fu_645_ap_return_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln1134_reg_1235 <= add_ln1134_fu_853_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln1116_fu_702_p2, ap_CS_fsm_state4, icmp_ln1134_fu_859_p2, ap_CS_fsm_state5, ap_CS_fsm_state6, icmp_ln1141_fu_879_p2, ap_CS_fsm_state8, icmp_ln1153_fu_1036_p2, ap_CS_fsm_state10, grp_add_patch6_fu_624_ap_done, grp_makeSuperPoint_alignedToLine8_fu_645_ap_done, grp_wedgePatch_init_fu_672_ap_done, ap_CS_fsm_state12)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1116_fu_702_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln1134_fu_859_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((grp_makeSuperPoint_alignedToLine8_fu_645_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1141_fu_879_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln1153_fu_1036_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((grp_wedgePatch_init_fu_672_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((grp_add_patch6_fu_624_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    GDarrayDecoded_address0 <= grp_makeSuperPoint_alignedToLine8_fu_645_GDarrayDecoded_address0;
    GDarrayDecoded_address1 <= grp_makeSuperPoint_alignedToLine8_fu_645_GDarrayDecoded_address1;
    GDarrayDecoded_ce0 <= grp_makeSuperPoint_alignedToLine8_fu_645_GDarrayDecoded_ce0;
    GDarrayDecoded_ce1 <= grp_makeSuperPoint_alignedToLine8_fu_645_GDarrayDecoded_ce1;
    GDn_points_address0 <= grp_makeSuperPoint_alignedToLine8_fu_645_GDn_points_address0;
    GDn_points_ce0 <= grp_makeSuperPoint_alignedToLine8_fu_645_GDn_points_ce0;

    NPpatches_parameters_V_0_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state10, grp_add_patch6_fu_624_wp_parameters_address0, grp_wedgePatch_init_fu_672_wp_parameters_address0, ap_CS_fsm_state12, zext_ln1159_4_fu_1156_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            NPpatches_parameters_V_0_address0 <= zext_ln1159_4_fu_1156_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_0_address0 <= grp_wedgePatch_init_fu_672_wp_parameters_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_parameters_V_0_address0 <= grp_add_patch6_fu_624_wp_parameters_address0;
        else 
            NPpatches_parameters_V_0_address0 <= "XXXXX";
        end if; 
    end process;


    NPpatches_parameters_V_0_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state10, grp_add_patch6_fu_624_wp_parameters_ce0, grp_wedgePatch_init_fu_672_wp_parameters_ce0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            NPpatches_parameters_V_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_0_ce0 <= grp_wedgePatch_init_fu_672_wp_parameters_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_parameters_V_0_ce0 <= grp_add_patch6_fu_624_wp_parameters_ce0;
        else 
            NPpatches_parameters_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_0_ce1_assign_proc : process(ap_CS_fsm_state10, grp_wedgePatch_init_fu_672_wp_parameters_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_0_ce1 <= grp_wedgePatch_init_fu_672_wp_parameters_ce1;
        else 
            NPpatches_parameters_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_0_d0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state10, grp_wedgePatch_init_fu_672_wp_parameters_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            NPpatches_parameters_V_0_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_0_d0 <= grp_wedgePatch_init_fu_672_wp_parameters_d0;
        else 
            NPpatches_parameters_V_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    NPpatches_parameters_V_0_we0_assign_proc : process(ap_CS_fsm_state8, select_ln1153_2_fu_1080_p3, icmp_ln1153_fu_1036_p2, ap_CS_fsm_state10, grp_wedgePatch_init_fu_672_wp_parameters_we0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln1153_fu_1036_p2 = ap_const_lv1_0) and (select_ln1153_2_fu_1080_p3 = ap_const_lv3_0))) then 
            NPpatches_parameters_V_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_0_we0 <= grp_wedgePatch_init_fu_672_wp_parameters_we0;
        else 
            NPpatches_parameters_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_0_we1_assign_proc : process(ap_CS_fsm_state10, grp_wedgePatch_init_fu_672_wp_parameters_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_0_we1 <= grp_wedgePatch_init_fu_672_wp_parameters_we1;
        else 
            NPpatches_parameters_V_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_1_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state10, grp_add_patch6_fu_624_wp_parameters5_address0, grp_wedgePatch_init_fu_672_wp_parameters5_address0, ap_CS_fsm_state12, zext_ln1159_4_fu_1156_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            NPpatches_parameters_V_1_address0 <= zext_ln1159_4_fu_1156_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_1_address0 <= grp_wedgePatch_init_fu_672_wp_parameters5_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_parameters_V_1_address0 <= grp_add_patch6_fu_624_wp_parameters5_address0;
        else 
            NPpatches_parameters_V_1_address0 <= "XXXXX";
        end if; 
    end process;


    NPpatches_parameters_V_1_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state10, grp_add_patch6_fu_624_wp_parameters5_ce0, grp_wedgePatch_init_fu_672_wp_parameters5_ce0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            NPpatches_parameters_V_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_1_ce0 <= grp_wedgePatch_init_fu_672_wp_parameters5_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_parameters_V_1_ce0 <= grp_add_patch6_fu_624_wp_parameters5_ce0;
        else 
            NPpatches_parameters_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_1_ce1_assign_proc : process(ap_CS_fsm_state10, grp_wedgePatch_init_fu_672_wp_parameters5_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_1_ce1 <= grp_wedgePatch_init_fu_672_wp_parameters5_ce1;
        else 
            NPpatches_parameters_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_1_d0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state10, grp_wedgePatch_init_fu_672_wp_parameters5_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            NPpatches_parameters_V_1_d0 <= ap_const_lv1_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_1_d0 <= grp_wedgePatch_init_fu_672_wp_parameters5_d0;
        else 
            NPpatches_parameters_V_1_d0 <= "X";
        end if; 
    end process;


    NPpatches_parameters_V_1_we0_assign_proc : process(ap_CS_fsm_state8, select_ln1153_2_fu_1080_p3, icmp_ln1153_fu_1036_p2, ap_CS_fsm_state10, grp_wedgePatch_init_fu_672_wp_parameters5_we0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln1153_fu_1036_p2 = ap_const_lv1_0) and (select_ln1153_2_fu_1080_p3 = ap_const_lv3_1))) then 
            NPpatches_parameters_V_1_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_1_we0 <= grp_wedgePatch_init_fu_672_wp_parameters5_we0;
        else 
            NPpatches_parameters_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_1_we1_assign_proc : process(ap_CS_fsm_state10, grp_wedgePatch_init_fu_672_wp_parameters5_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_1_we1 <= grp_wedgePatch_init_fu_672_wp_parameters5_we1;
        else 
            NPpatches_parameters_V_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_2_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state10, grp_add_patch6_fu_624_wp_parameters6_address0, grp_wedgePatch_init_fu_672_wp_parameters6_address0, ap_CS_fsm_state12, zext_ln1159_4_fu_1156_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            NPpatches_parameters_V_2_address0 <= zext_ln1159_4_fu_1156_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_2_address0 <= grp_wedgePatch_init_fu_672_wp_parameters6_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_parameters_V_2_address0 <= grp_add_patch6_fu_624_wp_parameters6_address0;
        else 
            NPpatches_parameters_V_2_address0 <= "XXXXX";
        end if; 
    end process;


    NPpatches_parameters_V_2_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state10, grp_add_patch6_fu_624_wp_parameters6_ce0, grp_wedgePatch_init_fu_672_wp_parameters6_ce0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            NPpatches_parameters_V_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_2_ce0 <= grp_wedgePatch_init_fu_672_wp_parameters6_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_parameters_V_2_ce0 <= grp_add_patch6_fu_624_wp_parameters6_ce0;
        else 
            NPpatches_parameters_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_2_ce1_assign_proc : process(ap_CS_fsm_state10, grp_wedgePatch_init_fu_672_wp_parameters6_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_2_ce1 <= grp_wedgePatch_init_fu_672_wp_parameters6_ce1;
        else 
            NPpatches_parameters_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_2_d0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state10, grp_wedgePatch_init_fu_672_wp_parameters6_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            NPpatches_parameters_V_2_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_2_d0 <= grp_wedgePatch_init_fu_672_wp_parameters6_d0;
        else 
            NPpatches_parameters_V_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    NPpatches_parameters_V_2_we0_assign_proc : process(ap_CS_fsm_state8, select_ln1153_2_fu_1080_p3, icmp_ln1153_fu_1036_p2, ap_CS_fsm_state10, grp_wedgePatch_init_fu_672_wp_parameters6_we0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln1153_fu_1036_p2 = ap_const_lv1_0) and (select_ln1153_2_fu_1080_p3 = ap_const_lv3_2))) then 
            NPpatches_parameters_V_2_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_2_we0 <= grp_wedgePatch_init_fu_672_wp_parameters6_we0;
        else 
            NPpatches_parameters_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_2_we1_assign_proc : process(ap_CS_fsm_state10, grp_wedgePatch_init_fu_672_wp_parameters6_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_2_we1 <= grp_wedgePatch_init_fu_672_wp_parameters6_we1;
        else 
            NPpatches_parameters_V_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_3_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state10, grp_add_patch6_fu_624_wp_parameters7_address0, grp_wedgePatch_init_fu_672_wp_parameters7_address0, ap_CS_fsm_state12, zext_ln1159_4_fu_1156_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            NPpatches_parameters_V_3_address0 <= zext_ln1159_4_fu_1156_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_3_address0 <= grp_wedgePatch_init_fu_672_wp_parameters7_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_parameters_V_3_address0 <= grp_add_patch6_fu_624_wp_parameters7_address0;
        else 
            NPpatches_parameters_V_3_address0 <= "XXXXX";
        end if; 
    end process;


    NPpatches_parameters_V_3_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state10, grp_add_patch6_fu_624_wp_parameters7_ce0, grp_wedgePatch_init_fu_672_wp_parameters7_ce0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            NPpatches_parameters_V_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_3_ce0 <= grp_wedgePatch_init_fu_672_wp_parameters7_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_parameters_V_3_ce0 <= grp_add_patch6_fu_624_wp_parameters7_ce0;
        else 
            NPpatches_parameters_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_3_ce1_assign_proc : process(ap_CS_fsm_state10, grp_wedgePatch_init_fu_672_wp_parameters7_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_3_ce1 <= grp_wedgePatch_init_fu_672_wp_parameters7_ce1;
        else 
            NPpatches_parameters_V_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_3_d0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state10, grp_wedgePatch_init_fu_672_wp_parameters7_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            NPpatches_parameters_V_3_d0 <= ap_const_lv1_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_3_d0 <= grp_wedgePatch_init_fu_672_wp_parameters7_d0;
        else 
            NPpatches_parameters_V_3_d0 <= "X";
        end if; 
    end process;


    NPpatches_parameters_V_3_we0_assign_proc : process(ap_CS_fsm_state8, select_ln1153_2_fu_1080_p3, icmp_ln1153_fu_1036_p2, ap_CS_fsm_state10, grp_wedgePatch_init_fu_672_wp_parameters7_we0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln1153_fu_1036_p2 = ap_const_lv1_0) and (select_ln1153_2_fu_1080_p3 = ap_const_lv3_3))) then 
            NPpatches_parameters_V_3_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_3_we0 <= grp_wedgePatch_init_fu_672_wp_parameters7_we0;
        else 
            NPpatches_parameters_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_3_we1_assign_proc : process(ap_CS_fsm_state10, grp_wedgePatch_init_fu_672_wp_parameters7_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_3_we1 <= grp_wedgePatch_init_fu_672_wp_parameters7_we1;
        else 
            NPpatches_parameters_V_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_4_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state10, grp_add_patch6_fu_624_wp_parameters8_address0, grp_wedgePatch_init_fu_672_wp_parameters8_address0, ap_CS_fsm_state12, zext_ln1159_4_fu_1156_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            NPpatches_parameters_V_4_address0 <= zext_ln1159_4_fu_1156_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_4_address0 <= grp_wedgePatch_init_fu_672_wp_parameters8_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_parameters_V_4_address0 <= grp_add_patch6_fu_624_wp_parameters8_address0;
        else 
            NPpatches_parameters_V_4_address0 <= "XXXXX";
        end if; 
    end process;


    NPpatches_parameters_V_4_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state10, grp_add_patch6_fu_624_wp_parameters8_ce0, grp_wedgePatch_init_fu_672_wp_parameters8_ce0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            NPpatches_parameters_V_4_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_4_ce0 <= grp_wedgePatch_init_fu_672_wp_parameters8_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_parameters_V_4_ce0 <= grp_add_patch6_fu_624_wp_parameters8_ce0;
        else 
            NPpatches_parameters_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_4_ce1_assign_proc : process(ap_CS_fsm_state10, grp_wedgePatch_init_fu_672_wp_parameters8_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_4_ce1 <= grp_wedgePatch_init_fu_672_wp_parameters8_ce1;
        else 
            NPpatches_parameters_V_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_4_d0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state10, grp_wedgePatch_init_fu_672_wp_parameters8_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            NPpatches_parameters_V_4_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_4_d0 <= grp_wedgePatch_init_fu_672_wp_parameters8_d0;
        else 
            NPpatches_parameters_V_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    NPpatches_parameters_V_4_we0_assign_proc : process(ap_CS_fsm_state8, select_ln1153_2_fu_1080_p3, icmp_ln1153_fu_1036_p2, ap_CS_fsm_state10, grp_wedgePatch_init_fu_672_wp_parameters8_we0)
    begin
        if ((not((select_ln1153_2_fu_1080_p3 = ap_const_lv3_0)) and not((select_ln1153_2_fu_1080_p3 = ap_const_lv3_1)) and not((select_ln1153_2_fu_1080_p3 = ap_const_lv3_2)) and not((select_ln1153_2_fu_1080_p3 = ap_const_lv3_3)) and (ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln1153_fu_1036_p2 = ap_const_lv1_0))) then 
            NPpatches_parameters_V_4_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_4_we0 <= grp_wedgePatch_init_fu_672_wp_parameters8_we0;
        else 
            NPpatches_parameters_V_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_V_4_we1_assign_proc : process(ap_CS_fsm_state10, grp_wedgePatch_init_fu_672_wp_parameters8_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_parameters_V_4_we1 <= grp_wedgePatch_init_fu_672_wp_parameters8_we1;
        else 
            NPpatches_parameters_V_4_we1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_0_V_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state10, grp_add_patch6_fu_624_wp_superpoints_address0, grp_wedgePatch_init_fu_672_wp_superpoints_address0, ap_CS_fsm_state12, zext_ln1147_2_fu_1001_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            NPpatches_superpoints_0_V_address0 <= zext_ln1147_2_fu_1001_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_0_V_address0 <= grp_wedgePatch_init_fu_672_wp_superpoints_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_0_V_address0 <= grp_add_patch6_fu_624_wp_superpoints_address0;
        else 
            NPpatches_superpoints_0_V_address0 <= "XXXXX";
        end if; 
    end process;


    NPpatches_superpoints_0_V_address1_assign_proc : process(ap_CS_fsm_state10, grp_add_patch6_fu_624_wp_superpoints_address1, grp_wedgePatch_init_fu_672_wp_superpoints_address1, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_0_V_address1 <= grp_wedgePatch_init_fu_672_wp_superpoints_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_0_V_address1 <= grp_add_patch6_fu_624_wp_superpoints_address1;
        else 
            NPpatches_superpoints_0_V_address1 <= "XXXXX";
        end if; 
    end process;


    NPpatches_superpoints_0_V_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state10, grp_add_patch6_fu_624_wp_superpoints_ce0, grp_wedgePatch_init_fu_672_wp_superpoints_ce0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            NPpatches_superpoints_0_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_0_V_ce0 <= grp_wedgePatch_init_fu_672_wp_superpoints_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_0_V_ce0 <= grp_add_patch6_fu_624_wp_superpoints_ce0;
        else 
            NPpatches_superpoints_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_0_V_ce1_assign_proc : process(ap_CS_fsm_state10, grp_add_patch6_fu_624_wp_superpoints_ce1, grp_wedgePatch_init_fu_672_wp_superpoints_ce1, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_0_V_ce1 <= grp_wedgePatch_init_fu_672_wp_superpoints_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_0_V_ce1 <= grp_add_patch6_fu_624_wp_superpoints_ce1;
        else 
            NPpatches_superpoints_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_0_V_d0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state10, grp_wedgePatch_init_fu_672_wp_superpoints_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            NPpatches_superpoints_0_V_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_0_V_d0 <= grp_wedgePatch_init_fu_672_wp_superpoints_d0;
        else 
            NPpatches_superpoints_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    NPpatches_superpoints_0_V_we0_assign_proc : process(ap_CS_fsm_state6, select_ln1141_3_fu_923_p3, icmp_ln1141_fu_879_p2, ap_CS_fsm_state10, grp_wedgePatch_init_fu_672_wp_superpoints_we0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1141_fu_879_p2 = ap_const_lv1_0) and (select_ln1141_3_fu_923_p3 = ap_const_lv3_0))) then 
            NPpatches_superpoints_0_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_0_V_we0 <= grp_wedgePatch_init_fu_672_wp_superpoints_we0;
        else 
            NPpatches_superpoints_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_1_V_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state10, grp_add_patch6_fu_624_wp_superpoints1_address0, grp_wedgePatch_init_fu_672_wp_superpoints1_address0, ap_CS_fsm_state12, zext_ln1147_2_fu_1001_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            NPpatches_superpoints_1_V_address0 <= zext_ln1147_2_fu_1001_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_1_V_address0 <= grp_wedgePatch_init_fu_672_wp_superpoints1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_1_V_address0 <= grp_add_patch6_fu_624_wp_superpoints1_address0;
        else 
            NPpatches_superpoints_1_V_address0 <= "XXXXX";
        end if; 
    end process;


    NPpatches_superpoints_1_V_address1_assign_proc : process(ap_CS_fsm_state10, grp_add_patch6_fu_624_wp_superpoints1_address1, grp_wedgePatch_init_fu_672_wp_superpoints1_address1, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_1_V_address1 <= grp_wedgePatch_init_fu_672_wp_superpoints1_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_1_V_address1 <= grp_add_patch6_fu_624_wp_superpoints1_address1;
        else 
            NPpatches_superpoints_1_V_address1 <= "XXXXX";
        end if; 
    end process;


    NPpatches_superpoints_1_V_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state10, grp_add_patch6_fu_624_wp_superpoints1_ce0, grp_wedgePatch_init_fu_672_wp_superpoints1_ce0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            NPpatches_superpoints_1_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_1_V_ce0 <= grp_wedgePatch_init_fu_672_wp_superpoints1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_1_V_ce0 <= grp_add_patch6_fu_624_wp_superpoints1_ce0;
        else 
            NPpatches_superpoints_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_1_V_ce1_assign_proc : process(ap_CS_fsm_state10, grp_add_patch6_fu_624_wp_superpoints1_ce1, grp_wedgePatch_init_fu_672_wp_superpoints1_ce1, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_1_V_ce1 <= grp_wedgePatch_init_fu_672_wp_superpoints1_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_1_V_ce1 <= grp_add_patch6_fu_624_wp_superpoints1_ce1;
        else 
            NPpatches_superpoints_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_1_V_d0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state10, grp_wedgePatch_init_fu_672_wp_superpoints1_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            NPpatches_superpoints_1_V_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_1_V_d0 <= grp_wedgePatch_init_fu_672_wp_superpoints1_d0;
        else 
            NPpatches_superpoints_1_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    NPpatches_superpoints_1_V_we0_assign_proc : process(ap_CS_fsm_state6, select_ln1141_3_fu_923_p3, icmp_ln1141_fu_879_p2, ap_CS_fsm_state10, grp_wedgePatch_init_fu_672_wp_superpoints1_we0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1141_fu_879_p2 = ap_const_lv1_0) and (select_ln1141_3_fu_923_p3 = ap_const_lv3_1))) then 
            NPpatches_superpoints_1_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_1_V_we0 <= grp_wedgePatch_init_fu_672_wp_superpoints1_we0;
        else 
            NPpatches_superpoints_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_2_V_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state10, grp_add_patch6_fu_624_wp_superpoints2_address0, grp_wedgePatch_init_fu_672_wp_superpoints2_address0, ap_CS_fsm_state12, zext_ln1147_2_fu_1001_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            NPpatches_superpoints_2_V_address0 <= zext_ln1147_2_fu_1001_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_2_V_address0 <= grp_wedgePatch_init_fu_672_wp_superpoints2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_2_V_address0 <= grp_add_patch6_fu_624_wp_superpoints2_address0;
        else 
            NPpatches_superpoints_2_V_address0 <= "XXXXX";
        end if; 
    end process;


    NPpatches_superpoints_2_V_address1_assign_proc : process(ap_CS_fsm_state10, grp_add_patch6_fu_624_wp_superpoints2_address1, grp_wedgePatch_init_fu_672_wp_superpoints2_address1, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_2_V_address1 <= grp_wedgePatch_init_fu_672_wp_superpoints2_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_2_V_address1 <= grp_add_patch6_fu_624_wp_superpoints2_address1;
        else 
            NPpatches_superpoints_2_V_address1 <= "XXXXX";
        end if; 
    end process;


    NPpatches_superpoints_2_V_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state10, grp_add_patch6_fu_624_wp_superpoints2_ce0, grp_wedgePatch_init_fu_672_wp_superpoints2_ce0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            NPpatches_superpoints_2_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_2_V_ce0 <= grp_wedgePatch_init_fu_672_wp_superpoints2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_2_V_ce0 <= grp_add_patch6_fu_624_wp_superpoints2_ce0;
        else 
            NPpatches_superpoints_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_2_V_ce1_assign_proc : process(ap_CS_fsm_state10, grp_add_patch6_fu_624_wp_superpoints2_ce1, grp_wedgePatch_init_fu_672_wp_superpoints2_ce1, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_2_V_ce1 <= grp_wedgePatch_init_fu_672_wp_superpoints2_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_2_V_ce1 <= grp_add_patch6_fu_624_wp_superpoints2_ce1;
        else 
            NPpatches_superpoints_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_2_V_d0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state10, grp_wedgePatch_init_fu_672_wp_superpoints2_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            NPpatches_superpoints_2_V_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_2_V_d0 <= grp_wedgePatch_init_fu_672_wp_superpoints2_d0;
        else 
            NPpatches_superpoints_2_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    NPpatches_superpoints_2_V_we0_assign_proc : process(ap_CS_fsm_state6, select_ln1141_3_fu_923_p3, icmp_ln1141_fu_879_p2, ap_CS_fsm_state10, grp_wedgePatch_init_fu_672_wp_superpoints2_we0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1141_fu_879_p2 = ap_const_lv1_0) and (select_ln1141_3_fu_923_p3 = ap_const_lv3_2))) then 
            NPpatches_superpoints_2_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_2_V_we0 <= grp_wedgePatch_init_fu_672_wp_superpoints2_we0;
        else 
            NPpatches_superpoints_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_3_V_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state10, grp_add_patch6_fu_624_wp_superpoints3_address0, grp_wedgePatch_init_fu_672_wp_superpoints3_address0, ap_CS_fsm_state12, zext_ln1147_2_fu_1001_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            NPpatches_superpoints_3_V_address0 <= zext_ln1147_2_fu_1001_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_3_V_address0 <= grp_wedgePatch_init_fu_672_wp_superpoints3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_3_V_address0 <= grp_add_patch6_fu_624_wp_superpoints3_address0;
        else 
            NPpatches_superpoints_3_V_address0 <= "XXXXX";
        end if; 
    end process;


    NPpatches_superpoints_3_V_address1_assign_proc : process(ap_CS_fsm_state10, grp_add_patch6_fu_624_wp_superpoints3_address1, grp_wedgePatch_init_fu_672_wp_superpoints3_address1, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_3_V_address1 <= grp_wedgePatch_init_fu_672_wp_superpoints3_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_3_V_address1 <= grp_add_patch6_fu_624_wp_superpoints3_address1;
        else 
            NPpatches_superpoints_3_V_address1 <= "XXXXX";
        end if; 
    end process;


    NPpatches_superpoints_3_V_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state10, grp_add_patch6_fu_624_wp_superpoints3_ce0, grp_wedgePatch_init_fu_672_wp_superpoints3_ce0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            NPpatches_superpoints_3_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_3_V_ce0 <= grp_wedgePatch_init_fu_672_wp_superpoints3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_3_V_ce0 <= grp_add_patch6_fu_624_wp_superpoints3_ce0;
        else 
            NPpatches_superpoints_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_3_V_ce1_assign_proc : process(ap_CS_fsm_state10, grp_add_patch6_fu_624_wp_superpoints3_ce1, grp_wedgePatch_init_fu_672_wp_superpoints3_ce1, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_3_V_ce1 <= grp_wedgePatch_init_fu_672_wp_superpoints3_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_3_V_ce1 <= grp_add_patch6_fu_624_wp_superpoints3_ce1;
        else 
            NPpatches_superpoints_3_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_3_V_d0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state10, grp_wedgePatch_init_fu_672_wp_superpoints3_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            NPpatches_superpoints_3_V_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_3_V_d0 <= grp_wedgePatch_init_fu_672_wp_superpoints3_d0;
        else 
            NPpatches_superpoints_3_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    NPpatches_superpoints_3_V_we0_assign_proc : process(ap_CS_fsm_state6, select_ln1141_3_fu_923_p3, icmp_ln1141_fu_879_p2, ap_CS_fsm_state10, grp_wedgePatch_init_fu_672_wp_superpoints3_we0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1141_fu_879_p2 = ap_const_lv1_0) and (select_ln1141_3_fu_923_p3 = ap_const_lv3_3))) then 
            NPpatches_superpoints_3_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_3_V_we0 <= grp_wedgePatch_init_fu_672_wp_superpoints3_we0;
        else 
            NPpatches_superpoints_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_4_V_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state10, grp_add_patch6_fu_624_wp_superpoints4_address0, grp_wedgePatch_init_fu_672_wp_superpoints4_address0, ap_CS_fsm_state12, zext_ln1147_2_fu_1001_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            NPpatches_superpoints_4_V_address0 <= zext_ln1147_2_fu_1001_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_4_V_address0 <= grp_wedgePatch_init_fu_672_wp_superpoints4_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_4_V_address0 <= grp_add_patch6_fu_624_wp_superpoints4_address0;
        else 
            NPpatches_superpoints_4_V_address0 <= "XXXXX";
        end if; 
    end process;


    NPpatches_superpoints_4_V_address1_assign_proc : process(ap_CS_fsm_state10, grp_add_patch6_fu_624_wp_superpoints4_address1, grp_wedgePatch_init_fu_672_wp_superpoints4_address1, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_4_V_address1 <= grp_wedgePatch_init_fu_672_wp_superpoints4_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_4_V_address1 <= grp_add_patch6_fu_624_wp_superpoints4_address1;
        else 
            NPpatches_superpoints_4_V_address1 <= "XXXXX";
        end if; 
    end process;


    NPpatches_superpoints_4_V_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state10, grp_add_patch6_fu_624_wp_superpoints4_ce0, grp_wedgePatch_init_fu_672_wp_superpoints4_ce0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            NPpatches_superpoints_4_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_4_V_ce0 <= grp_wedgePatch_init_fu_672_wp_superpoints4_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_4_V_ce0 <= grp_add_patch6_fu_624_wp_superpoints4_ce0;
        else 
            NPpatches_superpoints_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_4_V_ce1_assign_proc : process(ap_CS_fsm_state10, grp_add_patch6_fu_624_wp_superpoints4_ce1, grp_wedgePatch_init_fu_672_wp_superpoints4_ce1, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_4_V_ce1 <= grp_wedgePatch_init_fu_672_wp_superpoints4_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_4_V_ce1 <= grp_add_patch6_fu_624_wp_superpoints4_ce1;
        else 
            NPpatches_superpoints_4_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_4_V_d0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state10, grp_wedgePatch_init_fu_672_wp_superpoints4_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            NPpatches_superpoints_4_V_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_4_V_d0 <= grp_wedgePatch_init_fu_672_wp_superpoints4_d0;
        else 
            NPpatches_superpoints_4_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    NPpatches_superpoints_4_V_we0_assign_proc : process(ap_CS_fsm_state6, select_ln1141_3_fu_923_p3, icmp_ln1141_fu_879_p2, ap_CS_fsm_state10, grp_wedgePatch_init_fu_672_wp_superpoints4_we0)
    begin
        if ((not((select_ln1141_3_fu_923_p3 = ap_const_lv3_0)) and not((select_ln1141_3_fu_923_p3 = ap_const_lv3_1)) and not((select_ln1141_3_fu_923_p3 = ap_const_lv3_2)) and not((select_ln1141_3_fu_923_p3 = ap_const_lv3_3)) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1141_fu_879_p2 = ap_const_lv1_0))) then 
            NPpatches_superpoints_4_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            NPpatches_superpoints_4_V_we0 <= grp_wedgePatch_init_fu_672_wp_superpoints4_we0;
        else 
            NPpatches_superpoints_4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln1116_2_fu_696_p2 <= std_logic_vector(unsigned(indvar_flatten13_reg_425) + unsigned(ap_const_lv8_1));
    add_ln1116_fu_708_p2 <= std_logic_vector(unsigned(a_reg_436) + unsigned(ap_const_lv3_1));
    add_ln1118_2_fu_839_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_447) + unsigned(ap_const_lv7_1));
    add_ln1118_fu_754_p2 <= std_logic_vector(unsigned(select_ln1116_fu_720_p3) + unsigned(ap_const_lv5_1));
    add_ln1120_fu_833_p2 <= std_logic_vector(unsigned(select_ln1118_fu_766_p3) + unsigned(ap_const_lv2_1));
    add_ln1122_fu_818_p2 <= std_logic_vector(unsigned(tmp_cast_fu_798_p3) + unsigned(zext_ln1122_fu_814_p1));
    add_ln1134_fu_853_p2 <= std_logic_vector(unsigned(i_reg_502) + unsigned(ap_const_lv3_1));
    add_ln1141_2_fu_873_p2 <= std_logic_vector(unsigned(indvar_flatten35_reg_514) + unsigned(ap_const_lv8_1));
    add_ln1141_fu_885_p2 <= std_logic_vector(unsigned(b_3_reg_525) + unsigned(ap_const_lv3_1));
    add_ln1143_2_fu_1016_p2 <= std_logic_vector(unsigned(indvar_flatten21_reg_536) + unsigned(ap_const_lv7_1));
    add_ln1143_fu_931_p2 <= std_logic_vector(unsigned(select_ln1141_fu_897_p3) + unsigned(ap_const_lv5_1));
    add_ln1145_fu_1010_p2 <= std_logic_vector(unsigned(select_ln1143_fu_943_p3) + unsigned(ap_const_lv2_1));
    add_ln1147_fu_995_p2 <= std_logic_vector(unsigned(tmp_110_cast_fu_975_p3) + unsigned(zext_ln1147_fu_991_p1));
    add_ln1153_2_fu_1030_p2 <= std_logic_vector(unsigned(indvar_flatten57_reg_569) + unsigned(ap_const_lv7_1));
    add_ln1153_fu_1042_p2 <= std_logic_vector(unsigned(b_4_reg_580) + unsigned(ap_const_lv3_1));
    add_ln1155_2_fu_1171_p2 <= std_logic_vector(unsigned(indvar_flatten43_reg_591) + unsigned(ap_const_lv6_1));
    add_ln1155_fu_1088_p2 <= std_logic_vector(unsigned(select_ln1153_fu_1054_p3) + unsigned(ap_const_lv3_1));
    add_ln1157_fu_1165_p2 <= std_logic_vector(unsigned(select_ln1155_fu_1100_p3) + unsigned(ap_const_lv3_1));
    add_ln1159_fu_1150_p2 <= std_logic_vector(unsigned(sub_ln1159_fu_1140_p2) + unsigned(zext_ln1159_3_fu_1146_p1));
    and_ln1116_fu_740_p2 <= (xor_ln1116_fu_728_p2 and icmp_ln1120_fu_734_p2);
    and_ln1141_fu_917_p2 <= (xor_ln1141_fu_905_p2 and icmp_ln1145_fu_911_p2);
    and_ln1153_fu_1074_p2 <= (xor_ln1153_fu_1062_p2 and icmp_ln1157_fu_1068_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_add_patch6_fu_624_ap_done, ap_CS_fsm_state12)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)) or ((grp_add_patch6_fu_624_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_add_patch6_fu_624_ap_done, ap_CS_fsm_state12)
    begin
        if (((grp_add_patch6_fu_624_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= ppl_0_reg_492;
    grp_add_patch6_fu_624_ap_start <= grp_add_patch6_fu_624_ap_start_reg;
    grp_makeSuperPoint_alignedToLine8_fu_645_ap_start <= grp_makeSuperPoint_alignedToLine8_fu_645_ap_start_reg;
    grp_wedgePatch_init_fu_672_ap_start <= grp_wedgePatch_init_fu_672_ap_start_reg;
    icmp_ln1116_fu_702_p2 <= "1" when (indvar_flatten13_reg_425 = ap_const_lv8_A0) else "0";
    icmp_ln1118_fu_714_p2 <= "1" when (indvar_flatten_reg_447 = ap_const_lv7_20) else "0";
    icmp_ln1120_fu_734_p2 <= "1" when (c_reg_469 = ap_const_lv2_2) else "0";
    icmp_ln1134_fu_859_p2 <= "1" when (i_reg_502 = ap_const_lv3_5) else "0";
    icmp_ln1141_fu_879_p2 <= "1" when (indvar_flatten35_reg_514 = ap_const_lv8_A0) else "0";
    icmp_ln1143_fu_891_p2 <= "1" when (indvar_flatten21_reg_536 = ap_const_lv7_20) else "0";
    icmp_ln1145_fu_911_p2 <= "1" when (d_reg_558 = ap_const_lv2_2) else "0";
    icmp_ln1153_fu_1036_p2 <= "1" when (indvar_flatten57_reg_569 = ap_const_lv7_78) else "0";
    icmp_ln1155_fu_1048_p2 <= "1" when (indvar_flatten43_reg_591 = ap_const_lv6_18) else "0";
    icmp_ln1157_fu_1068_p2 <= "1" when (d_2_reg_613 = ap_const_lv3_6) else "0";

    init_patch_V_0_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state10, grp_makeSuperPoint_alignedToLine8_fu_645_init_patch_address0, grp_wedgePatch_init_fu_672_superpointsI_address0, zext_ln1122_2_fu_824_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            init_patch_V_0_address0 <= zext_ln1122_2_fu_824_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            init_patch_V_0_address0 <= grp_wedgePatch_init_fu_672_superpointsI_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_V_0_address0 <= grp_makeSuperPoint_alignedToLine8_fu_645_init_patch_address0;
        else 
            init_patch_V_0_address0 <= "XXXXX";
        end if; 
    end process;


    init_patch_V_0_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state10, grp_makeSuperPoint_alignedToLine8_fu_645_init_patch_ce0, grp_wedgePatch_init_fu_672_superpointsI_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            init_patch_V_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            init_patch_V_0_ce0 <= grp_wedgePatch_init_fu_672_superpointsI_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_V_0_ce0 <= grp_makeSuperPoint_alignedToLine8_fu_645_init_patch_ce0;
        else 
            init_patch_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_V_0_d0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, grp_makeSuperPoint_alignedToLine8_fu_645_init_patch_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            init_patch_V_0_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_V_0_d0 <= grp_makeSuperPoint_alignedToLine8_fu_645_init_patch_d0;
        else 
            init_patch_V_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_V_0_we0_assign_proc : process(ap_CS_fsm_state2, select_ln1116_3_fu_746_p3, icmp_ln1116_fu_702_p2, ap_CS_fsm_state5, grp_makeSuperPoint_alignedToLine8_fu_645_init_patch_we0)
    begin
        if (((select_ln1116_3_fu_746_p3 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1116_fu_702_p2 = ap_const_lv1_0))) then 
            init_patch_V_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_V_0_we0 <= grp_makeSuperPoint_alignedToLine8_fu_645_init_patch_we0;
        else 
            init_patch_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_V_1_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state10, grp_makeSuperPoint_alignedToLine8_fu_645_init_patch1_address0, grp_wedgePatch_init_fu_672_superpointsI9_address0, zext_ln1122_2_fu_824_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            init_patch_V_1_address0 <= zext_ln1122_2_fu_824_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            init_patch_V_1_address0 <= grp_wedgePatch_init_fu_672_superpointsI9_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_V_1_address0 <= grp_makeSuperPoint_alignedToLine8_fu_645_init_patch1_address0;
        else 
            init_patch_V_1_address0 <= "XXXXX";
        end if; 
    end process;


    init_patch_V_1_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state10, grp_makeSuperPoint_alignedToLine8_fu_645_init_patch1_ce0, grp_wedgePatch_init_fu_672_superpointsI9_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            init_patch_V_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            init_patch_V_1_ce0 <= grp_wedgePatch_init_fu_672_superpointsI9_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_V_1_ce0 <= grp_makeSuperPoint_alignedToLine8_fu_645_init_patch1_ce0;
        else 
            init_patch_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_V_1_d0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, grp_makeSuperPoint_alignedToLine8_fu_645_init_patch1_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            init_patch_V_1_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_V_1_d0 <= grp_makeSuperPoint_alignedToLine8_fu_645_init_patch1_d0;
        else 
            init_patch_V_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_V_1_we0_assign_proc : process(ap_CS_fsm_state2, select_ln1116_3_fu_746_p3, icmp_ln1116_fu_702_p2, ap_CS_fsm_state5, grp_makeSuperPoint_alignedToLine8_fu_645_init_patch1_we0)
    begin
        if (((select_ln1116_3_fu_746_p3 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1116_fu_702_p2 = ap_const_lv1_0))) then 
            init_patch_V_1_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_V_1_we0 <= grp_makeSuperPoint_alignedToLine8_fu_645_init_patch1_we0;
        else 
            init_patch_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_V_2_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state10, grp_makeSuperPoint_alignedToLine8_fu_645_init_patch2_address0, grp_wedgePatch_init_fu_672_superpointsI10_address0, zext_ln1122_2_fu_824_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            init_patch_V_2_address0 <= zext_ln1122_2_fu_824_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            init_patch_V_2_address0 <= grp_wedgePatch_init_fu_672_superpointsI10_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_V_2_address0 <= grp_makeSuperPoint_alignedToLine8_fu_645_init_patch2_address0;
        else 
            init_patch_V_2_address0 <= "XXXXX";
        end if; 
    end process;


    init_patch_V_2_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state10, grp_makeSuperPoint_alignedToLine8_fu_645_init_patch2_ce0, grp_wedgePatch_init_fu_672_superpointsI10_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            init_patch_V_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            init_patch_V_2_ce0 <= grp_wedgePatch_init_fu_672_superpointsI10_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_V_2_ce0 <= grp_makeSuperPoint_alignedToLine8_fu_645_init_patch2_ce0;
        else 
            init_patch_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_V_2_d0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, grp_makeSuperPoint_alignedToLine8_fu_645_init_patch2_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            init_patch_V_2_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_V_2_d0 <= grp_makeSuperPoint_alignedToLine8_fu_645_init_patch2_d0;
        else 
            init_patch_V_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_V_2_we0_assign_proc : process(ap_CS_fsm_state2, select_ln1116_3_fu_746_p3, icmp_ln1116_fu_702_p2, ap_CS_fsm_state5, grp_makeSuperPoint_alignedToLine8_fu_645_init_patch2_we0)
    begin
        if (((select_ln1116_3_fu_746_p3 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1116_fu_702_p2 = ap_const_lv1_0))) then 
            init_patch_V_2_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_V_2_we0 <= grp_makeSuperPoint_alignedToLine8_fu_645_init_patch2_we0;
        else 
            init_patch_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_V_3_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state10, grp_makeSuperPoint_alignedToLine8_fu_645_init_patch3_address0, grp_wedgePatch_init_fu_672_superpointsI11_address0, zext_ln1122_2_fu_824_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            init_patch_V_3_address0 <= zext_ln1122_2_fu_824_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            init_patch_V_3_address0 <= grp_wedgePatch_init_fu_672_superpointsI11_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_V_3_address0 <= grp_makeSuperPoint_alignedToLine8_fu_645_init_patch3_address0;
        else 
            init_patch_V_3_address0 <= "XXXXX";
        end if; 
    end process;


    init_patch_V_3_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state10, grp_makeSuperPoint_alignedToLine8_fu_645_init_patch3_ce0, grp_wedgePatch_init_fu_672_superpointsI11_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            init_patch_V_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            init_patch_V_3_ce0 <= grp_wedgePatch_init_fu_672_superpointsI11_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_V_3_ce0 <= grp_makeSuperPoint_alignedToLine8_fu_645_init_patch3_ce0;
        else 
            init_patch_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_V_3_d0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, grp_makeSuperPoint_alignedToLine8_fu_645_init_patch3_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            init_patch_V_3_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_V_3_d0 <= grp_makeSuperPoint_alignedToLine8_fu_645_init_patch3_d0;
        else 
            init_patch_V_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_V_3_we0_assign_proc : process(ap_CS_fsm_state2, select_ln1116_3_fu_746_p3, icmp_ln1116_fu_702_p2, ap_CS_fsm_state5, grp_makeSuperPoint_alignedToLine8_fu_645_init_patch3_we0)
    begin
        if (((select_ln1116_3_fu_746_p3 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1116_fu_702_p2 = ap_const_lv1_0))) then 
            init_patch_V_3_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_V_3_we0 <= grp_makeSuperPoint_alignedToLine8_fu_645_init_patch3_we0;
        else 
            init_patch_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_V_4_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state10, grp_makeSuperPoint_alignedToLine8_fu_645_init_patch4_address0, grp_wedgePatch_init_fu_672_superpointsI12_address0, zext_ln1122_2_fu_824_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            init_patch_V_4_address0 <= zext_ln1122_2_fu_824_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            init_patch_V_4_address0 <= grp_wedgePatch_init_fu_672_superpointsI12_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_V_4_address0 <= grp_makeSuperPoint_alignedToLine8_fu_645_init_patch4_address0;
        else 
            init_patch_V_4_address0 <= "XXXXX";
        end if; 
    end process;


    init_patch_V_4_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state10, grp_makeSuperPoint_alignedToLine8_fu_645_init_patch4_ce0, grp_wedgePatch_init_fu_672_superpointsI12_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            init_patch_V_4_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            init_patch_V_4_ce0 <= grp_wedgePatch_init_fu_672_superpointsI12_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_V_4_ce0 <= grp_makeSuperPoint_alignedToLine8_fu_645_init_patch4_ce0;
        else 
            init_patch_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_V_4_d0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, grp_makeSuperPoint_alignedToLine8_fu_645_init_patch4_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            init_patch_V_4_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_V_4_d0 <= grp_makeSuperPoint_alignedToLine8_fu_645_init_patch4_d0;
        else 
            init_patch_V_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_V_4_we0_assign_proc : process(ap_CS_fsm_state2, select_ln1116_3_fu_746_p3, icmp_ln1116_fu_702_p2, ap_CS_fsm_state5, grp_makeSuperPoint_alignedToLine8_fu_645_init_patch4_we0)
    begin
        if ((not((select_ln1116_3_fu_746_p3 = ap_const_lv3_0)) and not((select_ln1116_3_fu_746_p3 = ap_const_lv3_1)) and not((select_ln1116_3_fu_746_p3 = ap_const_lv3_2)) and not((select_ln1116_3_fu_746_p3 = ap_const_lv3_3)) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1116_fu_702_p2 = ap_const_lv1_0))) then 
            init_patch_V_4_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_V_4_we0 <= grp_makeSuperPoint_alignedToLine8_fu_645_init_patch4_we0;
        else 
            init_patch_V_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    n_patches_o_assign_proc : process(n_patches_i, grp_add_patch6_fu_624_n_patches, grp_add_patch6_fu_624_n_patches_ap_vld, ap_CS_fsm_state12)
    begin
        if (((grp_add_patch6_fu_624_n_patches_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            n_patches_o <= grp_add_patch6_fu_624_n_patches;
        else 
            n_patches_o <= n_patches_i;
        end if; 
    end process;


    n_patches_o_ap_vld_assign_proc : process(grp_add_patch6_fu_624_n_patches_ap_vld, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            n_patches_o_ap_vld <= grp_add_patch6_fu_624_n_patches_ap_vld;
        else 
            n_patches_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    or_ln1118_fu_760_p2 <= (icmp_ln1118_fu_714_p2 or and_ln1116_fu_740_p2);
    or_ln1143_fu_937_p2 <= (icmp_ln1143_fu_891_p2 or and_ln1141_fu_917_p2);
    or_ln1155_fu_1094_p2 <= (icmp_ln1155_fu_1048_p2 or and_ln1153_fu_1074_p2);
    p_shl_cast_fu_1120_p3 <= (trunc_ln1159_fu_1116_p1 & ap_const_lv3_0);
    patches_parameters_address0 <= grp_add_patch6_fu_624_patches_parameters_address0;
    patches_parameters_ce0 <= grp_add_patch6_fu_624_patches_parameters_ce0;
    patches_parameters_d0 <= grp_add_patch6_fu_624_patches_parameters_d0;
    patches_parameters_we0 <= grp_add_patch6_fu_624_patches_parameters_we0;
    patches_superpoints_address0 <= grp_add_patch6_fu_624_patches_superpoints_address0;
    patches_superpoints_ce0 <= grp_add_patch6_fu_624_patches_superpoints_ce0;
    patches_superpoints_d0 <= grp_add_patch6_fu_624_patches_superpoints_d0;
    patches_superpoints_we0 <= grp_add_patch6_fu_624_patches_superpoints_we0;
    select_ln1116_3_fu_746_p3 <= 
        add_ln1116_fu_708_p2 when (icmp_ln1118_fu_714_p2(0) = '1') else 
        a_reg_436;
    select_ln1116_4_fu_782_p3 <= 
        ap_const_lv4_0 when (icmp_ln1118_fu_714_p2(0) = '1') else 
        trunc_ln1122_2_fu_778_p1;
    select_ln1116_fu_720_p3 <= 
        ap_const_lv5_0 when (icmp_ln1118_fu_714_p2(0) = '1') else 
        b_reg_458;
    select_ln1118_4_fu_790_p3 <= 
        trunc_ln1122_fu_774_p1 when (and_ln1116_fu_740_p2(0) = '1') else 
        select_ln1116_4_fu_782_p3;
    select_ln1118_5_fu_806_p3 <= 
        add_ln1118_fu_754_p2 when (and_ln1116_fu_740_p2(0) = '1') else 
        select_ln1116_fu_720_p3;
    select_ln1118_6_fu_845_p3 <= 
        ap_const_lv7_1 when (icmp_ln1118_fu_714_p2(0) = '1') else 
        add_ln1118_2_fu_839_p2;
    select_ln1118_fu_766_p3 <= 
        ap_const_lv2_0 when (or_ln1118_fu_760_p2(0) = '1') else 
        c_reg_469;
    select_ln1141_3_fu_923_p3 <= 
        add_ln1141_fu_885_p2 when (icmp_ln1143_fu_891_p2(0) = '1') else 
        b_3_reg_525;
    select_ln1141_4_fu_959_p3 <= 
        ap_const_lv4_0 when (icmp_ln1143_fu_891_p2(0) = '1') else 
        trunc_ln1147_2_fu_955_p1;
    select_ln1141_fu_897_p3 <= 
        ap_const_lv5_0 when (icmp_ln1143_fu_891_p2(0) = '1') else 
        c_3_reg_547;
    select_ln1143_4_fu_967_p3 <= 
        trunc_ln1147_fu_951_p1 when (and_ln1141_fu_917_p2(0) = '1') else 
        select_ln1141_4_fu_959_p3;
    select_ln1143_5_fu_983_p3 <= 
        add_ln1143_fu_931_p2 when (and_ln1141_fu_917_p2(0) = '1') else 
        select_ln1141_fu_897_p3;
    select_ln1143_6_fu_1022_p3 <= 
        ap_const_lv7_1 when (icmp_ln1143_fu_891_p2(0) = '1') else 
        add_ln1143_2_fu_1016_p2;
    select_ln1143_fu_943_p3 <= 
        ap_const_lv2_0 when (or_ln1143_fu_937_p2(0) = '1') else 
        d_reg_558;
    select_ln1153_2_fu_1080_p3 <= 
        add_ln1153_fu_1042_p2 when (icmp_ln1155_fu_1048_p2(0) = '1') else 
        b_4_reg_580;
    select_ln1153_fu_1054_p3 <= 
        ap_const_lv3_0 when (icmp_ln1155_fu_1048_p2(0) = '1') else 
        c_4_reg_602;
    select_ln1155_3_fu_1108_p3 <= 
        add_ln1155_fu_1088_p2 when (and_ln1153_fu_1074_p2(0) = '1') else 
        select_ln1153_fu_1054_p3;
    select_ln1155_4_fu_1177_p3 <= 
        ap_const_lv6_1 when (icmp_ln1155_fu_1048_p2(0) = '1') else 
        add_ln1155_2_fu_1171_p2;
    select_ln1155_fu_1100_p3 <= 
        ap_const_lv3_0 when (or_ln1155_fu_1094_p2(0) = '1') else 
        d_2_reg_613;
    sub_ln1159_fu_1140_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_1120_p3) - unsigned(zext_ln1159_fu_1136_p1));
    temp_V_address0 <= grp_makeSuperPoint_alignedToLine8_fu_645_temp_V_address0;
    temp_V_address1 <= grp_makeSuperPoint_alignedToLine8_fu_645_temp_V_address1;
    temp_V_ce0 <= grp_makeSuperPoint_alignedToLine8_fu_645_temp_V_ce0;
    temp_V_ce1 <= grp_makeSuperPoint_alignedToLine8_fu_645_temp_V_ce1;
    temp_V_d0 <= grp_makeSuperPoint_alignedToLine8_fu_645_temp_V_d0;
    temp_V_d1 <= grp_makeSuperPoint_alignedToLine8_fu_645_temp_V_d1;
    temp_V_we0 <= grp_makeSuperPoint_alignedToLine8_fu_645_temp_V_we0;
    temp_V_we1 <= grp_makeSuperPoint_alignedToLine8_fu_645_temp_V_we1;
    tmp_110_cast_fu_975_p3 <= (select_ln1143_4_fu_967_p3 & ap_const_lv1_0);
    tmp_cast_fu_798_p3 <= (select_ln1118_4_fu_790_p3 & ap_const_lv1_0);
    tmp_fu_1128_p3 <= (select_ln1155_3_fu_1108_p3 & ap_const_lv1_0);
    trunc_ln1122_2_fu_778_p1 <= b_reg_458(4 - 1 downto 0);
    trunc_ln1122_fu_774_p1 <= add_ln1118_fu_754_p2(4 - 1 downto 0);
    trunc_ln1147_2_fu_955_p1 <= c_3_reg_547(4 - 1 downto 0);
    trunc_ln1147_fu_951_p1 <= add_ln1143_fu_931_p2(4 - 1 downto 0);
    trunc_ln1159_fu_1116_p1 <= select_ln1155_3_fu_1108_p3(2 - 1 downto 0);
    xor_ln1116_fu_728_p2 <= (icmp_ln1118_fu_714_p2 xor ap_const_lv1_1);
    xor_ln1141_fu_905_p2 <= (icmp_ln1143_fu_891_p2 xor ap_const_lv1_1);
    xor_ln1153_fu_1062_p2 <= (icmp_ln1155_fu_1048_p2 xor ap_const_lv1_1);
    zext_ln1122_2_fu_824_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1122_fu_818_p2),64));
    zext_ln1122_fu_814_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1118_fu_766_p3),5));
    zext_ln1147_2_fu_1001_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1147_fu_995_p2),64));
    zext_ln1147_fu_991_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1143_fu_943_p3),5));
    zext_ln1159_3_fu_1146_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1155_fu_1100_p3),5));
    zext_ln1159_4_fu_1156_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1159_fu_1150_p2),64));
    zext_ln1159_fu_1136_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_1128_p3),5));
end behav;
