-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity makePatches_ShadowQuilt_fromEdges_getParallelograms is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read6 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read7 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read8 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read9 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_10 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_11 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_12 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_13 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_14 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_15 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_16 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_17 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_18 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_19 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_20 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_21 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_22 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_23 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of makePatches_ShadowQuilt_fromEdges_getParallelograms is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv32_FEB04E1C : STD_LOGIC_VECTOR (31 downto 0) := "11111110101100000100111000011100";
    constant ap_const_lv32_14FB1E4 : STD_LOGIC_VECTOR (31 downto 0) := "00000001010011111011000111100100";
    constant ap_const_lv26_15EF424 : STD_LOGIC_VECTOR (25 downto 0) := "01010111101111010000100100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv30_1 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i_reg_142 : STD_LOGIC_VECTOR (2 downto 0);
    signal write_flag24_0_reg_154 : STD_LOGIC_VECTOR (0 downto 0);
    signal wp_parameters8089_049_reg_166 : STD_LOGIC_VECTOR (31 downto 0);
    signal wp_parameters8090_048_reg_178 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag27_0_reg_190 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag21_0_reg_202 : STD_LOGIC_VECTOR (0 downto 0);
    signal wp_parameters8091_047_reg_214 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag30_0_reg_226 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_V_1_reg_238 : STD_LOGIC_VECTOR (31 downto 0);
    signal wp_parameters8092_045_reg_250 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag33_0_reg_262 : STD_LOGIC_VECTOR (0 downto 0);
    signal wp_parameters8093_044_reg_274 : STD_LOGIC_VECTOR (31 downto 0);
    signal wp_parameters88_043_reg_286 : STD_LOGIC_VECTOR (31 downto 0);
    signal wp_parameters81_042_reg_298 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag39_0_reg_310 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag15_0_reg_322 : STD_LOGIC_VECTOR (0 downto 0);
    signal wp_parameters8194_041_reg_334 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag42_0_reg_346 : STD_LOGIC_VECTOR (0 downto 0);
    signal wp_parameters87_040_reg_358 : STD_LOGIC_VECTOR (31 downto 0);
    signal wp_parameters8195_039_reg_370 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag45_0_reg_382 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag12_0_reg_394 : STD_LOGIC_VECTOR (0 downto 0);
    signal wp_parameters8196_038_reg_406 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag48_0_reg_418 : STD_LOGIC_VECTOR (0 downto 0);
    signal wp_parameters86_037_reg_430 : STD_LOGIC_VECTOR (31 downto 0);
    signal wp_parameters8197_036_reg_442 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag51_0_reg_454 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag9_0_reg_466 : STD_LOGIC_VECTOR (0 downto 0);
    signal wp_parameters8198_035_reg_478 : STD_LOGIC_VECTOR (31 downto 0);
    signal wp_parameters85_034_reg_490 : STD_LOGIC_VECTOR (31 downto 0);
    signal wp_parameters82_033_reg_502 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag57_0_reg_514 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag6_0_reg_526 : STD_LOGIC_VECTOR (0 downto 0);
    signal wp_parameters8299_032_reg_538 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag60_0_reg_550 : STD_LOGIC_VECTOR (0 downto 0);
    signal wp_parameters84_031_reg_562 : STD_LOGIC_VECTOR (31 downto 0);
    signal wp_parameters82100_030_reg_574 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag63_0_reg_586 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag3_0_reg_598 : STD_LOGIC_VECTOR (0 downto 0);
    signal wp_parameters82101_029_reg_610 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag66_0_reg_622 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_V_10_reg_634 : STD_LOGIC_VECTOR (31 downto 0);
    signal wp_parameters82102_027_reg_646 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag69_0_reg_658 : STD_LOGIC_VECTOR (0 downto 0);
    signal wp_parameters82103_026_reg_670 : STD_LOGIC_VECTOR (31 downto 0);
    signal wp_parameters893_0_reg_682 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_reg_693 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln37_fu_806_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln37_reg_2223 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln34_fu_818_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln34_reg_2233 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln50_fu_822_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln50_reg_2243 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln50_reg_2243_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln50_reg_2243_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln50_reg_2243_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln50_reg_2243_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln50_reg_2243_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln50_reg_2243_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln50_reg_2243_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln50_reg_2243_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln50_reg_2243_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln50_reg_2243_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln50_reg_2243_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln50_reg_2243_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln50_reg_2243_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln50_reg_2243_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln50_reg_2243_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln50_reg_2243_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln50_reg_2243_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln50_reg_2243_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln50_reg_2243_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_fu_828_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_reg_2247 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal icmp_ln63_fu_870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln63_reg_2256 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln65_fu_876_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln65_reg_2276 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln66_fu_880_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln66_reg_2283 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln63_fu_1274_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_reg_2299 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal select_ln63_3_fu_1282_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_3_reg_2304 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_4_fu_1290_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_4_reg_2309 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_6_fu_1298_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_6_reg_2314 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_8_fu_1306_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln63_8_reg_2319 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln63_9_fu_1314_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_9_reg_2324 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_10_fu_1322_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln63_10_reg_2329 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln63_11_fu_1330_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln63_11_reg_2334 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln63_13_fu_1338_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_13_reg_2339 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_14_fu_1346_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_14_reg_2344 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_16_fu_1354_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_16_reg_2349 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_17_fu_1362_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln63_17_reg_2354 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln63_19_fu_1370_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_19_reg_2359 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_20_fu_1378_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_20_reg_2364 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_22_fu_1386_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_22_reg_2369 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_24_fu_1394_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln63_24_reg_2374 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln63_25_fu_1402_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_25_reg_2379 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_26_fu_1410_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_26_reg_2384 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_27_fu_1418_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln63_27_reg_2389 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln63_30_fu_1426_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_30_reg_2394 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_31_fu_1434_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_31_reg_2399 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_33_fu_1442_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_33_reg_2404 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_36_fu_1450_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_36_reg_2409 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_37_fu_1458_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_37_reg_2414 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_39_fu_1466_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_39_reg_2419 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_41_fu_1474_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln63_41_reg_2424 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln63_42_fu_1482_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_42_reg_2429 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_43_fu_1490_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln63_43_reg_2434 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln63_44_fu_1498_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln63_45_fu_1506_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln63_1_fu_1757_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal select_ln63_2_fu_1764_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln63_5_fu_1771_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_V_12_fu_1778_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_V_13_fu_1785_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln63_15_fu_1792_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln63_18_fu_1799_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln63_21_fu_1806_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln63_23_fu_1813_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln63_28_fu_1820_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_V_14_fu_1827_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln63_32_fu_1834_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln63_34_fu_1841_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln63_35_fu_1848_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln63_38_fu_1855_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_V_15_fu_1862_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_flush_enable : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter19_state21 : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_704_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_704_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_704_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_704_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_704_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_717_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_717_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_717_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_717_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_717_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_730_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_730_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_730_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_730_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_730_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_743_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_743_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_743_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_743_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_743_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_i_phi_fu_146_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_write_flag24_0_phi_fu_158_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_write_flag27_0_phi_fu_194_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_write_flag21_0_phi_fu_206_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_write_flag30_0_phi_fu_230_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_write_flag33_0_phi_fu_266_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_write_flag39_0_phi_fu_314_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_write_flag15_0_phi_fu_326_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_write_flag42_0_phi_fu_350_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_write_flag45_0_phi_fu_386_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_write_flag12_0_phi_fu_398_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_write_flag48_0_phi_fu_422_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_write_flag51_0_phi_fu_458_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_write_flag9_0_phi_fu_470_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_write_flag57_0_phi_fu_518_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_write_flag6_0_phi_fu_530_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_write_flag60_0_phi_fu_554_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_write_flag63_0_phi_fu_590_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_write_flag3_0_phi_fu_602_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_write_flag66_0_phi_fu_626_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_write_flag69_0_phi_fu_662_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_704_ap_start_reg : STD_LOGIC := '0';
    signal tmp_136_fu_847_p7 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_717_ap_start_reg : STD_LOGIC := '0';
    signal grp_straightLineProjectorFromLayerIJtoK_fu_730_ap_start_reg : STD_LOGIC := '0';
    signal tmp_s_fu_834_p7 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_743_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln878_fu_756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal z1_min_V_fu_762_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln878_14_fu_774_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal z1_max_V_fu_780_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_fu_792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln35_fu_788_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal z1_max_V_1_fu_798_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln34_fu_770_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal z1_min_V_1_fu_810_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_fu_860_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal write_flag24_1_fu_982_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag27_1_fu_1038_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag21_1_fu_926_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag30_1_fu_1146_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal wp_parameters8092_1_fu_1133_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag33_1_fu_1254_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal wp_parameters8093_1_fu_1241_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal wp_parameters88_1_fu_1228_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag39_1_fu_912_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag15_1_fu_1214_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag42_1_fu_968_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal wp_parameters87_1_fu_1120_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag45_1_fu_1024_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag12_1_fu_1106_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag48_1_fu_1092_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal wp_parameters8197_1_fu_1079_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag51_1_fu_1200_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag9_1_fu_1010_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal wp_parameters8198_1_fu_1187_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag57_1_fu_898_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag6_1_fu_954_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag60_1_fu_940_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag63_1_fu_996_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag3_1_fu_884_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag66_1_fu_1065_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal wp_parameters82102_1_fu_1052_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_flag69_1_fu_1173_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal wp_parameters82103_1_fu_1160_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln691_fu_1268_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln65_fu_1514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln65_1_fu_1527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_V_2_fu_1519_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln65_2_fu_1540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_V_4_fu_1545_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_V_5_fu_1553_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_V_7_fu_1569_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_V_8_fu_1577_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal wp_parameters8089_1_fu_1640_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal wp_parameters8090_1_fu_1692_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal wp_parameters8091_1_fu_1744_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_V_3_fu_1532_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_V_6_fu_1561_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal wp_parameters8194_1_fu_1627_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal wp_parameters8195_1_fu_1679_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal wp_parameters8196_1_fu_1731_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal wp_parameters86_1_fu_1718_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal wp_parameters85_1_fu_1666_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_V_9_fu_1585_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal wp_parameters8299_1_fu_1614_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal wp_parameters84_1_fu_1601_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal wp_parameters82100_1_fu_1653_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal wp_parameters82101_1_fu_1705_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_V_11_fu_1593_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal select_ln75_fu_1869_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln75_1_fu_1877_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln75_2_fu_1885_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln75_3_fu_1893_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln75_4_fu_1901_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln75_5_fu_1909_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln75_6_fu_1917_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln75_7_fu_1925_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln75_8_fu_1933_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln75_9_fu_1941_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln75_10_fu_1949_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln75_11_fu_1957_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln75_12_fu_1965_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln75_13_fu_1973_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln75_14_fu_1981_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln75_15_fu_1989_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln75_16_fu_1997_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln75_17_fu_2005_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln75_18_fu_2013_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln75_19_fu_2021_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component makePatches_ShadowQuilt_fromEdges_straightLineProjectorFromLayerIJtoK IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        z_i : IN STD_LOGIC_VECTOR (31 downto 0);
        z_j : IN STD_LOGIC_VECTOR (31 downto 0);
        i : IN STD_LOGIC_VECTOR (2 downto 0);
        j : IN STD_LOGIC_VECTOR (2 downto 0);
        k : IN STD_LOGIC_VECTOR (2 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_mux_53_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_mux_42_1_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (0 downto 0);
        din1 : IN STD_LOGIC_VECTOR (0 downto 0);
        din2 : IN STD_LOGIC_VECTOR (0 downto 0);
        din3 : IN STD_LOGIC_VECTOR (0 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_mux_42_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_straightLineProjectorFromLayerIJtoK_fu_704 : component makePatches_ShadowQuilt_fromEdges_straightLineProjectorFromLayerIJtoK
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_straightLineProjectorFromLayerIJtoK_fu_704_ap_start,
        ap_done => grp_straightLineProjectorFromLayerIJtoK_fu_704_ap_done,
        ap_idle => grp_straightLineProjectorFromLayerIJtoK_fu_704_ap_idle,
        ap_ready => grp_straightLineProjectorFromLayerIJtoK_fu_704_ap_ready,
        ap_ce => ap_const_logic_1,
        z_i => sext_ln34_reg_2233,
        z_j => tmp_136_fu_847_p7,
        i => ap_const_lv3_1,
        j => j_reg_2247,
        k => ap_const_lv3_5,
        ap_return => grp_straightLineProjectorFromLayerIJtoK_fu_704_ap_return);

    grp_straightLineProjectorFromLayerIJtoK_fu_717 : component makePatches_ShadowQuilt_fromEdges_straightLineProjectorFromLayerIJtoK
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_straightLineProjectorFromLayerIJtoK_fu_717_ap_start,
        ap_done => grp_straightLineProjectorFromLayerIJtoK_fu_717_ap_done,
        ap_idle => grp_straightLineProjectorFromLayerIJtoK_fu_717_ap_idle,
        ap_ready => grp_straightLineProjectorFromLayerIJtoK_fu_717_ap_ready,
        ap_ce => ap_const_logic_1,
        z_i => sext_ln37_reg_2223,
        z_j => tmp_136_fu_847_p7,
        i => ap_const_lv3_1,
        j => j_reg_2247,
        k => ap_const_lv3_5,
        ap_return => grp_straightLineProjectorFromLayerIJtoK_fu_717_ap_return);

    grp_straightLineProjectorFromLayerIJtoK_fu_730 : component makePatches_ShadowQuilt_fromEdges_straightLineProjectorFromLayerIJtoK
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_straightLineProjectorFromLayerIJtoK_fu_730_ap_start,
        ap_done => grp_straightLineProjectorFromLayerIJtoK_fu_730_ap_done,
        ap_idle => grp_straightLineProjectorFromLayerIJtoK_fu_730_ap_idle,
        ap_ready => grp_straightLineProjectorFromLayerIJtoK_fu_730_ap_ready,
        ap_ce => ap_const_logic_1,
        z_i => sext_ln34_reg_2233,
        z_j => tmp_s_fu_834_p7,
        i => ap_const_lv3_1,
        j => j_reg_2247,
        k => ap_const_lv3_5,
        ap_return => grp_straightLineProjectorFromLayerIJtoK_fu_730_ap_return);

    grp_straightLineProjectorFromLayerIJtoK_fu_743 : component makePatches_ShadowQuilt_fromEdges_straightLineProjectorFromLayerIJtoK
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_straightLineProjectorFromLayerIJtoK_fu_743_ap_start,
        ap_done => grp_straightLineProjectorFromLayerIJtoK_fu_743_ap_done,
        ap_idle => grp_straightLineProjectorFromLayerIJtoK_fu_743_ap_idle,
        ap_ready => grp_straightLineProjectorFromLayerIJtoK_fu_743_ap_ready,
        ap_ce => ap_const_logic_1,
        z_i => sext_ln37_reg_2223,
        z_j => tmp_s_fu_834_p7,
        i => ap_const_lv3_1,
        j => j_reg_2247,
        k => ap_const_lv3_5,
        ap_return => grp_straightLineProjectorFromLayerIJtoK_fu_743_ap_return);

    mux_53_32_1_1_U3104 : component makePatches_ShadowQuilt_fromEdges_mux_53_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => p_read,
        din1 => p_read2,
        din2 => p_read4,
        din3 => p_read6,
        din4 => p_read8,
        din5 => i_reg_142,
        dout => tmp_s_fu_834_p7);

    mux_53_32_1_1_U3105 : component makePatches_ShadowQuilt_fromEdges_mux_53_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => p_read1,
        din1 => p_read3,
        din2 => p_read5,
        din3 => p_read7,
        din4 => p_read9,
        din5 => i_reg_142,
        dout => tmp_136_fu_847_p7);

    mux_42_1_1_1_U3106 : component makePatches_ShadowQuilt_fromEdges_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_1,
        din1 => ap_phi_mux_write_flag3_0_phi_fu_602_p4,
        din2 => ap_phi_mux_write_flag3_0_phi_fu_602_p4,
        din3 => ap_phi_mux_write_flag3_0_phi_fu_602_p4,
        din4 => trunc_ln66_fu_880_p1,
        dout => write_flag3_1_fu_884_p6);

    mux_42_1_1_1_U3107 : component makePatches_ShadowQuilt_fromEdges_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_phi_mux_write_flag57_0_phi_fu_518_p4,
        din1 => ap_phi_mux_write_flag57_0_phi_fu_518_p4,
        din2 => ap_phi_mux_write_flag57_0_phi_fu_518_p4,
        din3 => ap_const_lv1_1,
        din4 => trunc_ln66_fu_880_p1,
        dout => write_flag57_1_fu_898_p6);

    mux_42_1_1_1_U3108 : component makePatches_ShadowQuilt_fromEdges_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_phi_mux_write_flag39_0_phi_fu_314_p4,
        din1 => ap_phi_mux_write_flag39_0_phi_fu_314_p4,
        din2 => ap_const_lv1_1,
        din3 => ap_phi_mux_write_flag39_0_phi_fu_314_p4,
        din4 => trunc_ln66_fu_880_p1,
        dout => write_flag39_1_fu_912_p6);

    mux_42_1_1_1_U3109 : component makePatches_ShadowQuilt_fromEdges_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_phi_mux_write_flag21_0_phi_fu_206_p4,
        din1 => ap_const_lv1_1,
        din2 => ap_phi_mux_write_flag21_0_phi_fu_206_p4,
        din3 => ap_phi_mux_write_flag21_0_phi_fu_206_p4,
        din4 => trunc_ln66_fu_880_p1,
        dout => write_flag21_1_fu_926_p6);

    mux_42_1_1_1_U3110 : component makePatches_ShadowQuilt_fromEdges_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_phi_mux_write_flag60_0_phi_fu_554_p4,
        din1 => ap_phi_mux_write_flag60_0_phi_fu_554_p4,
        din2 => ap_phi_mux_write_flag60_0_phi_fu_554_p4,
        din3 => ap_const_lv1_1,
        din4 => trunc_ln66_fu_880_p1,
        dout => write_flag60_1_fu_940_p6);

    mux_42_1_1_1_U3111 : component makePatches_ShadowQuilt_fromEdges_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_1,
        din1 => ap_phi_mux_write_flag6_0_phi_fu_530_p4,
        din2 => ap_phi_mux_write_flag6_0_phi_fu_530_p4,
        din3 => ap_phi_mux_write_flag6_0_phi_fu_530_p4,
        din4 => trunc_ln66_fu_880_p1,
        dout => write_flag6_1_fu_954_p6);

    mux_42_1_1_1_U3112 : component makePatches_ShadowQuilt_fromEdges_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_phi_mux_write_flag42_0_phi_fu_350_p4,
        din1 => ap_phi_mux_write_flag42_0_phi_fu_350_p4,
        din2 => ap_const_lv1_1,
        din3 => ap_phi_mux_write_flag42_0_phi_fu_350_p4,
        din4 => trunc_ln66_fu_880_p1,
        dout => write_flag42_1_fu_968_p6);

    mux_42_1_1_1_U3113 : component makePatches_ShadowQuilt_fromEdges_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_phi_mux_write_flag24_0_phi_fu_158_p4,
        din1 => ap_const_lv1_1,
        din2 => ap_phi_mux_write_flag24_0_phi_fu_158_p4,
        din3 => ap_phi_mux_write_flag24_0_phi_fu_158_p4,
        din4 => trunc_ln66_fu_880_p1,
        dout => write_flag24_1_fu_982_p6);

    mux_42_1_1_1_U3114 : component makePatches_ShadowQuilt_fromEdges_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_phi_mux_write_flag63_0_phi_fu_590_p4,
        din1 => ap_phi_mux_write_flag63_0_phi_fu_590_p4,
        din2 => ap_phi_mux_write_flag63_0_phi_fu_590_p4,
        din3 => ap_const_lv1_1,
        din4 => trunc_ln66_fu_880_p1,
        dout => write_flag63_1_fu_996_p6);

    mux_42_1_1_1_U3115 : component makePatches_ShadowQuilt_fromEdges_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_1,
        din1 => ap_phi_mux_write_flag9_0_phi_fu_470_p4,
        din2 => ap_phi_mux_write_flag9_0_phi_fu_470_p4,
        din3 => ap_phi_mux_write_flag9_0_phi_fu_470_p4,
        din4 => trunc_ln66_fu_880_p1,
        dout => write_flag9_1_fu_1010_p6);

    mux_42_1_1_1_U3116 : component makePatches_ShadowQuilt_fromEdges_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_phi_mux_write_flag45_0_phi_fu_386_p4,
        din1 => ap_phi_mux_write_flag45_0_phi_fu_386_p4,
        din2 => ap_const_lv1_1,
        din3 => ap_phi_mux_write_flag45_0_phi_fu_386_p4,
        din4 => trunc_ln66_fu_880_p1,
        dout => write_flag45_1_fu_1024_p6);

    mux_42_1_1_1_U3117 : component makePatches_ShadowQuilt_fromEdges_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_phi_mux_write_flag27_0_phi_fu_194_p4,
        din1 => ap_const_lv1_1,
        din2 => ap_phi_mux_write_flag27_0_phi_fu_194_p4,
        din3 => ap_phi_mux_write_flag27_0_phi_fu_194_p4,
        din4 => trunc_ln66_fu_880_p1,
        dout => write_flag27_1_fu_1038_p6);

    mux_42_32_1_1_U3118 : component makePatches_ShadowQuilt_fromEdges_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => select_ln63_41_reg_2424,
        din1 => select_ln63_41_reg_2424,
        din2 => select_ln63_41_reg_2424,
        din3 => sext_ln34_reg_2233,
        din4 => trunc_ln66_fu_880_p1,
        dout => wp_parameters82102_1_fu_1052_p6);

    mux_42_1_1_1_U3119 : component makePatches_ShadowQuilt_fromEdges_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_phi_mux_write_flag66_0_phi_fu_626_p4,
        din1 => ap_phi_mux_write_flag66_0_phi_fu_626_p4,
        din2 => ap_phi_mux_write_flag66_0_phi_fu_626_p4,
        din3 => ap_const_lv1_1,
        din4 => trunc_ln66_fu_880_p1,
        dout => write_flag66_1_fu_1065_p6);

    mux_42_32_1_1_U3120 : component makePatches_ShadowQuilt_fromEdges_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => select_ln63_24_reg_2374,
        din1 => select_ln63_24_reg_2374,
        din2 => sext_ln34_reg_2233,
        din3 => select_ln63_24_reg_2374,
        din4 => trunc_ln66_fu_880_p1,
        dout => wp_parameters8197_1_fu_1079_p6);

    mux_42_1_1_1_U3121 : component makePatches_ShadowQuilt_fromEdges_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_phi_mux_write_flag48_0_phi_fu_422_p4,
        din1 => ap_phi_mux_write_flag48_0_phi_fu_422_p4,
        din2 => ap_const_lv1_1,
        din3 => ap_phi_mux_write_flag48_0_phi_fu_422_p4,
        din4 => trunc_ln66_fu_880_p1,
        dout => write_flag48_1_fu_1092_p6);

    mux_42_1_1_1_U3122 : component makePatches_ShadowQuilt_fromEdges_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_1,
        din1 => ap_phi_mux_write_flag12_0_phi_fu_398_p4,
        din2 => ap_phi_mux_write_flag12_0_phi_fu_398_p4,
        din3 => ap_phi_mux_write_flag12_0_phi_fu_398_p4,
        din4 => trunc_ln66_fu_880_p1,
        dout => write_flag12_1_fu_1106_p6);

    mux_42_32_1_1_U3123 : component makePatches_ShadowQuilt_fromEdges_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => sext_ln34_reg_2233,
        din1 => select_ln63_17_reg_2354,
        din2 => select_ln63_17_reg_2354,
        din3 => select_ln63_17_reg_2354,
        din4 => trunc_ln66_fu_880_p1,
        dout => wp_parameters87_1_fu_1120_p6);

    mux_42_32_1_1_U3124 : component makePatches_ShadowQuilt_fromEdges_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => select_ln63_8_reg_2319,
        din1 => sext_ln34_reg_2233,
        din2 => select_ln63_8_reg_2319,
        din3 => select_ln63_8_reg_2319,
        din4 => trunc_ln66_fu_880_p1,
        dout => wp_parameters8092_1_fu_1133_p6);

    mux_42_1_1_1_U3125 : component makePatches_ShadowQuilt_fromEdges_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_phi_mux_write_flag30_0_phi_fu_230_p4,
        din1 => ap_const_lv1_1,
        din2 => ap_phi_mux_write_flag30_0_phi_fu_230_p4,
        din3 => ap_phi_mux_write_flag30_0_phi_fu_230_p4,
        din4 => trunc_ln66_fu_880_p1,
        dout => write_flag30_1_fu_1146_p6);

    mux_42_32_1_1_U3126 : component makePatches_ShadowQuilt_fromEdges_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => select_ln63_43_reg_2434,
        din1 => select_ln63_43_reg_2434,
        din2 => select_ln63_43_reg_2434,
        din3 => sext_ln37_reg_2223,
        din4 => trunc_ln66_fu_880_p1,
        dout => wp_parameters82103_1_fu_1160_p6);

    mux_42_1_1_1_U3127 : component makePatches_ShadowQuilt_fromEdges_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_phi_mux_write_flag69_0_phi_fu_662_p4,
        din1 => ap_phi_mux_write_flag69_0_phi_fu_662_p4,
        din2 => ap_phi_mux_write_flag69_0_phi_fu_662_p4,
        din3 => ap_const_lv1_1,
        din4 => trunc_ln66_fu_880_p1,
        dout => write_flag69_1_fu_1173_p6);

    mux_42_32_1_1_U3128 : component makePatches_ShadowQuilt_fromEdges_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => select_ln63_27_reg_2389,
        din1 => select_ln63_27_reg_2389,
        din2 => sext_ln37_reg_2223,
        din3 => select_ln63_27_reg_2389,
        din4 => trunc_ln66_fu_880_p1,
        dout => wp_parameters8198_1_fu_1187_p6);

    mux_42_1_1_1_U3129 : component makePatches_ShadowQuilt_fromEdges_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_phi_mux_write_flag51_0_phi_fu_458_p4,
        din1 => ap_phi_mux_write_flag51_0_phi_fu_458_p4,
        din2 => ap_const_lv1_1,
        din3 => ap_phi_mux_write_flag51_0_phi_fu_458_p4,
        din4 => trunc_ln66_fu_880_p1,
        dout => write_flag51_1_fu_1200_p6);

    mux_42_1_1_1_U3130 : component makePatches_ShadowQuilt_fromEdges_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_1,
        din1 => ap_phi_mux_write_flag15_0_phi_fu_326_p4,
        din2 => ap_phi_mux_write_flag15_0_phi_fu_326_p4,
        din3 => ap_phi_mux_write_flag15_0_phi_fu_326_p4,
        din4 => trunc_ln66_fu_880_p1,
        dout => write_flag15_1_fu_1214_p6);

    mux_42_32_1_1_U3131 : component makePatches_ShadowQuilt_fromEdges_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => sext_ln37_reg_2223,
        din1 => select_ln63_11_reg_2334,
        din2 => select_ln63_11_reg_2334,
        din3 => select_ln63_11_reg_2334,
        din4 => trunc_ln66_fu_880_p1,
        dout => wp_parameters88_1_fu_1228_p6);

    mux_42_32_1_1_U3132 : component makePatches_ShadowQuilt_fromEdges_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => select_ln63_10_reg_2329,
        din1 => sext_ln37_reg_2223,
        din2 => select_ln63_10_reg_2329,
        din3 => select_ln63_10_reg_2329,
        din4 => trunc_ln66_fu_880_p1,
        dout => wp_parameters8093_1_fu_1241_p6);

    mux_42_1_1_1_U3133 : component makePatches_ShadowQuilt_fromEdges_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_phi_mux_write_flag33_0_phi_fu_266_p4,
        din1 => ap_const_lv1_1,
        din2 => ap_phi_mux_write_flag33_0_phi_fu_266_p4,
        din3 => ap_phi_mux_write_flag33_0_phi_fu_266_p4,
        din4 => trunc_ln66_fu_880_p1,
        dout => write_flag33_1_fu_1254_p6);

    mux_42_32_1_1_U3134 : component makePatches_ShadowQuilt_fromEdges_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => grp_straightLineProjectorFromLayerIJtoK_fu_717_ap_return,
        din1 => wp_parameters84_031_reg_562,
        din2 => wp_parameters84_031_reg_562,
        din3 => wp_parameters84_031_reg_562,
        din4 => trunc_ln66_reg_2283,
        dout => wp_parameters84_1_fu_1601_p6);

    mux_42_32_1_1_U3135 : component makePatches_ShadowQuilt_fromEdges_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => wp_parameters8299_032_reg_538,
        din1 => wp_parameters8299_032_reg_538,
        din2 => wp_parameters8299_032_reg_538,
        din3 => grp_straightLineProjectorFromLayerIJtoK_fu_717_ap_return,
        din4 => trunc_ln66_reg_2283,
        dout => wp_parameters8299_1_fu_1614_p6);

    mux_42_32_1_1_U3136 : component makePatches_ShadowQuilt_fromEdges_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => wp_parameters8194_041_reg_334,
        din1 => wp_parameters8194_041_reg_334,
        din2 => grp_straightLineProjectorFromLayerIJtoK_fu_717_ap_return,
        din3 => wp_parameters8194_041_reg_334,
        din4 => trunc_ln66_reg_2283,
        dout => wp_parameters8194_1_fu_1627_p6);

    mux_42_32_1_1_U3137 : component makePatches_ShadowQuilt_fromEdges_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => wp_parameters8089_049_reg_166,
        din1 => grp_straightLineProjectorFromLayerIJtoK_fu_717_ap_return,
        din2 => wp_parameters8089_049_reg_166,
        din3 => wp_parameters8089_049_reg_166,
        din4 => trunc_ln66_reg_2283,
        dout => wp_parameters8089_1_fu_1640_p6);

    mux_42_32_1_1_U3138 : component makePatches_ShadowQuilt_fromEdges_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => wp_parameters82100_030_reg_574,
        din1 => wp_parameters82100_030_reg_574,
        din2 => wp_parameters82100_030_reg_574,
        din3 => grp_straightLineProjectorFromLayerIJtoK_fu_730_ap_return,
        din4 => trunc_ln66_reg_2283,
        dout => wp_parameters82100_1_fu_1653_p6);

    mux_42_32_1_1_U3139 : component makePatches_ShadowQuilt_fromEdges_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => grp_straightLineProjectorFromLayerIJtoK_fu_730_ap_return,
        din1 => wp_parameters85_034_reg_490,
        din2 => wp_parameters85_034_reg_490,
        din3 => wp_parameters85_034_reg_490,
        din4 => trunc_ln66_reg_2283,
        dout => wp_parameters85_1_fu_1666_p6);

    mux_42_32_1_1_U3140 : component makePatches_ShadowQuilt_fromEdges_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => wp_parameters8195_039_reg_370,
        din1 => wp_parameters8195_039_reg_370,
        din2 => grp_straightLineProjectorFromLayerIJtoK_fu_730_ap_return,
        din3 => wp_parameters8195_039_reg_370,
        din4 => trunc_ln66_reg_2283,
        dout => wp_parameters8195_1_fu_1679_p6);

    mux_42_32_1_1_U3141 : component makePatches_ShadowQuilt_fromEdges_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => wp_parameters8090_048_reg_178,
        din1 => grp_straightLineProjectorFromLayerIJtoK_fu_730_ap_return,
        din2 => wp_parameters8090_048_reg_178,
        din3 => wp_parameters8090_048_reg_178,
        din4 => trunc_ln66_reg_2283,
        dout => wp_parameters8090_1_fu_1692_p6);

    mux_42_32_1_1_U3142 : component makePatches_ShadowQuilt_fromEdges_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => wp_parameters82101_029_reg_610,
        din1 => wp_parameters82101_029_reg_610,
        din2 => wp_parameters82101_029_reg_610,
        din3 => grp_straightLineProjectorFromLayerIJtoK_fu_743_ap_return,
        din4 => trunc_ln66_reg_2283,
        dout => wp_parameters82101_1_fu_1705_p6);

    mux_42_32_1_1_U3143 : component makePatches_ShadowQuilt_fromEdges_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => grp_straightLineProjectorFromLayerIJtoK_fu_743_ap_return,
        din1 => wp_parameters86_037_reg_430,
        din2 => wp_parameters86_037_reg_430,
        din3 => wp_parameters86_037_reg_430,
        din4 => trunc_ln66_reg_2283,
        dout => wp_parameters86_1_fu_1718_p6);

    mux_42_32_1_1_U3144 : component makePatches_ShadowQuilt_fromEdges_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => wp_parameters8196_038_reg_406,
        din1 => wp_parameters8196_038_reg_406,
        din2 => grp_straightLineProjectorFromLayerIJtoK_fu_743_ap_return,
        din3 => wp_parameters8196_038_reg_406,
        din4 => trunc_ln66_reg_2283,
        dout => wp_parameters8196_1_fu_1731_p6);

    mux_42_32_1_1_U3145 : component makePatches_ShadowQuilt_fromEdges_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => wp_parameters8091_047_reg_214,
        din1 => grp_straightLineProjectorFromLayerIJtoK_fu_743_ap_return,
        din2 => wp_parameters8091_047_reg_214,
        din3 => wp_parameters8091_047_reg_214,
        din4 => trunc_ln66_reg_2283,
        dout => wp_parameters8091_1_fu_1744_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp0_flush_enable)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                elsif ((((ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter19_state21)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                    ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter19_state21))) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter18;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_704_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_straightLineProjectorFromLayerIJtoK_fu_704_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln50_fu_822_p2 = ap_const_lv1_0))) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_704_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_straightLineProjectorFromLayerIJtoK_fu_704_ap_ready = ap_const_logic_1)) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_704_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_717_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_straightLineProjectorFromLayerIJtoK_fu_717_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln50_fu_822_p2 = ap_const_lv1_0))) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_717_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_straightLineProjectorFromLayerIJtoK_fu_717_ap_ready = ap_const_logic_1)) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_717_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_730_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_straightLineProjectorFromLayerIJtoK_fu_730_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln50_fu_822_p2 = ap_const_lv1_0))) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_730_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_straightLineProjectorFromLayerIJtoK_fu_730_ap_ready = ap_const_logic_1)) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_730_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_743_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_straightLineProjectorFromLayerIJtoK_fu_743_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln50_fu_822_p2 = ap_const_lv1_0))) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_743_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_straightLineProjectorFromLayerIJtoK_fu_743_ap_ready = ap_const_logic_1)) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_743_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    empty_reg_693_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter18_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                empty_reg_693 <= select_ln63_45_fu_1506_p3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                empty_reg_693 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    i_reg_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln50_reg_2243 = ap_const_lv1_0))) then 
                i_reg_142 <= j_reg_2247;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_142 <= ap_const_lv3_1;
            end if; 
        end if;
    end process;

    wp_parameters893_0_reg_682_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter18_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                wp_parameters893_0_reg_682 <= select_ln63_44_fu_1498_p3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                wp_parameters893_0_reg_682 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    write_flag12_0_reg_394_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag12_0_reg_394 <= select_ln63_20_reg_2364;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag12_0_reg_394 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag15_0_reg_322_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag15_0_reg_322 <= select_ln63_14_reg_2344;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag15_0_reg_322 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag21_0_reg_202_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag21_0_reg_202 <= select_ln63_4_reg_2309;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag21_0_reg_202 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag24_0_reg_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag24_0_reg_154 <= select_ln63_reg_2299;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag24_0_reg_154 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag27_0_reg_190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag27_0_reg_190 <= select_ln63_3_reg_2304;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag27_0_reg_190 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag30_0_reg_226_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag30_0_reg_226 <= select_ln63_6_reg_2314;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag30_0_reg_226 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag33_0_reg_262_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag33_0_reg_262 <= select_ln63_9_reg_2324;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag33_0_reg_262 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag39_0_reg_310_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag39_0_reg_310 <= select_ln63_13_reg_2339;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag39_0_reg_310 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag3_0_reg_598_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag3_0_reg_598 <= select_ln63_37_reg_2414;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag3_0_reg_598 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag42_0_reg_346_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag42_0_reg_346 <= select_ln63_16_reg_2349;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag42_0_reg_346 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag45_0_reg_382_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag45_0_reg_382 <= select_ln63_19_reg_2359;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag45_0_reg_382 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag48_0_reg_418_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag48_0_reg_418 <= select_ln63_22_reg_2369;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag48_0_reg_418 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag51_0_reg_454_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag51_0_reg_454 <= select_ln63_25_reg_2379;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag51_0_reg_454 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag57_0_reg_514_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag57_0_reg_514 <= select_ln63_30_reg_2394;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag57_0_reg_514 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag60_0_reg_550_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag60_0_reg_550 <= select_ln63_33_reg_2404;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag60_0_reg_550 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag63_0_reg_586_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag63_0_reg_586 <= select_ln63_36_reg_2409;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag63_0_reg_586 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag66_0_reg_622_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag66_0_reg_622 <= select_ln63_39_reg_2419;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag66_0_reg_622 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag69_0_reg_658_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag69_0_reg_658 <= select_ln63_42_reg_2429;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag69_0_reg_658 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag6_0_reg_526_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag6_0_reg_526 <= select_ln63_31_reg_2399;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag6_0_reg_526 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_flag9_0_reg_466_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                write_flag9_0_reg_466 <= select_ln63_26_reg_2384;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                write_flag9_0_reg_466 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                a_V_10_reg_634 <= a_V_15_fu_1862_p3;
                a_V_1_reg_238 <= a_V_12_fu_1778_p3;
                wp_parameters8089_049_reg_166 <= select_ln63_1_fu_1757_p3;
                wp_parameters8090_048_reg_178 <= select_ln63_2_fu_1764_p3;
                wp_parameters8091_047_reg_214 <= select_ln63_5_fu_1771_p3;
                wp_parameters8092_045_reg_250 <= select_ln63_8_reg_2319;
                wp_parameters8093_044_reg_274 <= select_ln63_10_reg_2329;
                wp_parameters8194_041_reg_334 <= select_ln63_15_fu_1792_p3;
                wp_parameters8195_039_reg_370 <= select_ln63_18_fu_1799_p3;
                wp_parameters8196_038_reg_406 <= select_ln63_21_fu_1806_p3;
                wp_parameters8197_036_reg_442 <= select_ln63_24_reg_2374;
                wp_parameters8198_035_reg_478 <= select_ln63_27_reg_2389;
                wp_parameters81_042_reg_298 <= a_V_13_fu_1785_p3;
                wp_parameters82100_030_reg_574 <= select_ln63_35_fu_1848_p3;
                wp_parameters82101_029_reg_610 <= select_ln63_38_fu_1855_p3;
                wp_parameters82102_027_reg_646 <= select_ln63_41_reg_2424;
                wp_parameters82103_026_reg_670 <= select_ln63_43_reg_2434;
                wp_parameters8299_032_reg_538 <= select_ln63_32_fu_1834_p3;
                wp_parameters82_033_reg_502 <= a_V_14_fu_1827_p3;
                wp_parameters84_031_reg_562 <= select_ln63_34_fu_1841_p3;
                wp_parameters85_034_reg_490 <= select_ln63_28_fu_1820_p3;
                wp_parameters86_037_reg_430 <= select_ln63_23_fu_1813_p3;
                wp_parameters87_040_reg_358 <= select_ln63_17_reg_2354;
                wp_parameters88_043_reg_286 <= select_ln63_11_reg_2334;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln50_reg_2243 <= icmp_ln50_fu_822_p2;
                icmp_ln50_reg_2243_pp0_iter1_reg <= icmp_ln50_reg_2243;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln50_reg_2243_pp0_iter10_reg <= icmp_ln50_reg_2243_pp0_iter9_reg;
                icmp_ln50_reg_2243_pp0_iter11_reg <= icmp_ln50_reg_2243_pp0_iter10_reg;
                icmp_ln50_reg_2243_pp0_iter12_reg <= icmp_ln50_reg_2243_pp0_iter11_reg;
                icmp_ln50_reg_2243_pp0_iter13_reg <= icmp_ln50_reg_2243_pp0_iter12_reg;
                icmp_ln50_reg_2243_pp0_iter14_reg <= icmp_ln50_reg_2243_pp0_iter13_reg;
                icmp_ln50_reg_2243_pp0_iter15_reg <= icmp_ln50_reg_2243_pp0_iter14_reg;
                icmp_ln50_reg_2243_pp0_iter16_reg <= icmp_ln50_reg_2243_pp0_iter15_reg;
                icmp_ln50_reg_2243_pp0_iter17_reg <= icmp_ln50_reg_2243_pp0_iter16_reg;
                icmp_ln50_reg_2243_pp0_iter18_reg <= icmp_ln50_reg_2243_pp0_iter17_reg;
                icmp_ln50_reg_2243_pp0_iter19_reg <= icmp_ln50_reg_2243_pp0_iter18_reg;
                icmp_ln50_reg_2243_pp0_iter2_reg <= icmp_ln50_reg_2243_pp0_iter1_reg;
                icmp_ln50_reg_2243_pp0_iter3_reg <= icmp_ln50_reg_2243_pp0_iter2_reg;
                icmp_ln50_reg_2243_pp0_iter4_reg <= icmp_ln50_reg_2243_pp0_iter3_reg;
                icmp_ln50_reg_2243_pp0_iter5_reg <= icmp_ln50_reg_2243_pp0_iter4_reg;
                icmp_ln50_reg_2243_pp0_iter6_reg <= icmp_ln50_reg_2243_pp0_iter5_reg;
                icmp_ln50_reg_2243_pp0_iter7_reg <= icmp_ln50_reg_2243_pp0_iter6_reg;
                icmp_ln50_reg_2243_pp0_iter8_reg <= icmp_ln50_reg_2243_pp0_iter7_reg;
                icmp_ln50_reg_2243_pp0_iter9_reg <= icmp_ln50_reg_2243_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln50_reg_2243_pp0_iter18_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln63_reg_2256 <= icmp_ln63_fu_870_p2;
                trunc_ln65_reg_2276 <= trunc_ln65_fu_876_p1;
                trunc_ln66_reg_2283 <= trunc_ln66_fu_880_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln50_fu_822_p2 = ap_const_lv1_0))) then
                j_reg_2247 <= j_fu_828_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter18_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                select_ln63_10_reg_2329 <= select_ln63_10_fu_1322_p3;
                select_ln63_11_reg_2334 <= select_ln63_11_fu_1330_p3;
                select_ln63_13_reg_2339 <= select_ln63_13_fu_1338_p3;
                select_ln63_14_reg_2344 <= select_ln63_14_fu_1346_p3;
                select_ln63_16_reg_2349 <= select_ln63_16_fu_1354_p3;
                select_ln63_17_reg_2354 <= select_ln63_17_fu_1362_p3;
                select_ln63_19_reg_2359 <= select_ln63_19_fu_1370_p3;
                select_ln63_20_reg_2364 <= select_ln63_20_fu_1378_p3;
                select_ln63_22_reg_2369 <= select_ln63_22_fu_1386_p3;
                select_ln63_24_reg_2374 <= select_ln63_24_fu_1394_p3;
                select_ln63_25_reg_2379 <= select_ln63_25_fu_1402_p3;
                select_ln63_26_reg_2384 <= select_ln63_26_fu_1410_p3;
                select_ln63_27_reg_2389 <= select_ln63_27_fu_1418_p3;
                select_ln63_30_reg_2394 <= select_ln63_30_fu_1426_p3;
                select_ln63_31_reg_2399 <= select_ln63_31_fu_1434_p3;
                select_ln63_33_reg_2404 <= select_ln63_33_fu_1442_p3;
                select_ln63_36_reg_2409 <= select_ln63_36_fu_1450_p3;
                select_ln63_37_reg_2414 <= select_ln63_37_fu_1458_p3;
                select_ln63_39_reg_2419 <= select_ln63_39_fu_1466_p3;
                select_ln63_3_reg_2304 <= select_ln63_3_fu_1282_p3;
                select_ln63_41_reg_2424 <= select_ln63_41_fu_1474_p3;
                select_ln63_42_reg_2429 <= select_ln63_42_fu_1482_p3;
                select_ln63_43_reg_2434 <= select_ln63_43_fu_1490_p3;
                select_ln63_4_reg_2309 <= select_ln63_4_fu_1290_p3;
                select_ln63_6_reg_2314 <= select_ln63_6_fu_1298_p3;
                select_ln63_8_reg_2319 <= select_ln63_8_fu_1306_p3;
                select_ln63_9_reg_2324 <= select_ln63_9_fu_1314_p3;
                select_ln63_reg_2299 <= select_ln63_fu_1274_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                sext_ln34_reg_2233 <= sext_ln34_fu_818_p1;
                sext_ln37_reg_2223 <= sext_ln37_fu_806_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter19, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter18)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    a_V_11_fu_1593_p3 <= 
        grp_straightLineProjectorFromLayerIJtoK_fu_704_ap_return when (icmp_ln65_1_fu_1527_p2(0) = '1') else 
        a_V_10_reg_634;
    a_V_12_fu_1778_p3 <= 
        a_V_3_fu_1532_p3 when (icmp_ln63_reg_2256(0) = '1') else 
        a_V_1_reg_238;
    a_V_13_fu_1785_p3 <= 
        a_V_6_fu_1561_p3 when (icmp_ln63_reg_2256(0) = '1') else 
        wp_parameters81_042_reg_298;
    a_V_14_fu_1827_p3 <= 
        a_V_9_fu_1585_p3 when (icmp_ln63_reg_2256(0) = '1') else 
        wp_parameters82_033_reg_502;
    a_V_15_fu_1862_p3 <= 
        a_V_11_fu_1593_p3 when (icmp_ln63_reg_2256(0) = '1') else 
        a_V_10_reg_634;
    a_V_2_fu_1519_p3 <= 
        grp_straightLineProjectorFromLayerIJtoK_fu_704_ap_return when (icmp_ln65_fu_1514_p2(0) = '1') else 
        a_V_1_reg_238;
    a_V_3_fu_1532_p3 <= 
        a_V_1_reg_238 when (icmp_ln65_1_fu_1527_p2(0) = '1') else 
        a_V_2_fu_1519_p3;
    a_V_4_fu_1545_p3 <= 
        grp_straightLineProjectorFromLayerIJtoK_fu_704_ap_return when (icmp_ln65_2_fu_1540_p2(0) = '1') else 
        wp_parameters81_042_reg_298;
    a_V_5_fu_1553_p3 <= 
        wp_parameters81_042_reg_298 when (icmp_ln65_fu_1514_p2(0) = '1') else 
        a_V_4_fu_1545_p3;
    a_V_6_fu_1561_p3 <= 
        wp_parameters81_042_reg_298 when (icmp_ln65_1_fu_1527_p2(0) = '1') else 
        a_V_5_fu_1553_p3;
    a_V_7_fu_1569_p3 <= 
        wp_parameters82_033_reg_502 when (icmp_ln65_2_fu_1540_p2(0) = '1') else 
        grp_straightLineProjectorFromLayerIJtoK_fu_704_ap_return;
    a_V_8_fu_1577_p3 <= 
        wp_parameters82_033_reg_502 when (icmp_ln65_fu_1514_p2(0) = '1') else 
        a_V_7_fu_1569_p3;
    a_V_9_fu_1585_p3 <= 
        wp_parameters82_033_reg_502 when (icmp_ln65_1_fu_1527_p2(0) = '1') else 
        a_V_8_fu_1577_p3;
    add_ln691_fu_1268_p2 <= std_logic_vector(unsigned(wp_parameters893_0_reg_682) + unsigned(ap_const_lv32_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state23 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter19_state21_assign_proc : process(ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter18)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_1))) then 
            ap_condition_pp0_exit_iter19_state21 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter19_state21 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp0_flush_enable_assign_proc : process(icmp_ln50_fu_822_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln50_fu_822_p2 = ap_const_lv1_1))) then 
            ap_condition_pp0_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp0_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_phi_fu_146_p4_assign_proc : process(i_reg_142, icmp_ln50_reg_2243, ap_CS_fsm_pp0_stage0, j_reg_2247, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln50_reg_2243 = ap_const_lv1_0))) then 
            ap_phi_mux_i_phi_fu_146_p4 <= j_reg_2247;
        else 
            ap_phi_mux_i_phi_fu_146_p4 <= i_reg_142;
        end if; 
    end process;


    ap_phi_mux_write_flag12_0_phi_fu_398_p4_assign_proc : process(write_flag12_0_reg_394, icmp_ln50_reg_2243_pp0_iter19_reg, select_ln63_20_reg_2364, ap_enable_reg_pp0_iter20, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_write_flag12_0_phi_fu_398_p4 <= select_ln63_20_reg_2364;
        else 
            ap_phi_mux_write_flag12_0_phi_fu_398_p4 <= write_flag12_0_reg_394;
        end if; 
    end process;


    ap_phi_mux_write_flag15_0_phi_fu_326_p4_assign_proc : process(write_flag15_0_reg_322, icmp_ln50_reg_2243_pp0_iter19_reg, select_ln63_14_reg_2344, ap_enable_reg_pp0_iter20, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_write_flag15_0_phi_fu_326_p4 <= select_ln63_14_reg_2344;
        else 
            ap_phi_mux_write_flag15_0_phi_fu_326_p4 <= write_flag15_0_reg_322;
        end if; 
    end process;


    ap_phi_mux_write_flag21_0_phi_fu_206_p4_assign_proc : process(write_flag21_0_reg_202, icmp_ln50_reg_2243_pp0_iter19_reg, select_ln63_4_reg_2309, ap_enable_reg_pp0_iter20, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_write_flag21_0_phi_fu_206_p4 <= select_ln63_4_reg_2309;
        else 
            ap_phi_mux_write_flag21_0_phi_fu_206_p4 <= write_flag21_0_reg_202;
        end if; 
    end process;


    ap_phi_mux_write_flag24_0_phi_fu_158_p4_assign_proc : process(write_flag24_0_reg_154, icmp_ln50_reg_2243_pp0_iter19_reg, select_ln63_reg_2299, ap_enable_reg_pp0_iter20, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_write_flag24_0_phi_fu_158_p4 <= select_ln63_reg_2299;
        else 
            ap_phi_mux_write_flag24_0_phi_fu_158_p4 <= write_flag24_0_reg_154;
        end if; 
    end process;


    ap_phi_mux_write_flag27_0_phi_fu_194_p4_assign_proc : process(write_flag27_0_reg_190, icmp_ln50_reg_2243_pp0_iter19_reg, select_ln63_3_reg_2304, ap_enable_reg_pp0_iter20, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_write_flag27_0_phi_fu_194_p4 <= select_ln63_3_reg_2304;
        else 
            ap_phi_mux_write_flag27_0_phi_fu_194_p4 <= write_flag27_0_reg_190;
        end if; 
    end process;


    ap_phi_mux_write_flag30_0_phi_fu_230_p4_assign_proc : process(write_flag30_0_reg_226, icmp_ln50_reg_2243_pp0_iter19_reg, select_ln63_6_reg_2314, ap_enable_reg_pp0_iter20, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_write_flag30_0_phi_fu_230_p4 <= select_ln63_6_reg_2314;
        else 
            ap_phi_mux_write_flag30_0_phi_fu_230_p4 <= write_flag30_0_reg_226;
        end if; 
    end process;


    ap_phi_mux_write_flag33_0_phi_fu_266_p4_assign_proc : process(write_flag33_0_reg_262, icmp_ln50_reg_2243_pp0_iter19_reg, select_ln63_9_reg_2324, ap_enable_reg_pp0_iter20, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_write_flag33_0_phi_fu_266_p4 <= select_ln63_9_reg_2324;
        else 
            ap_phi_mux_write_flag33_0_phi_fu_266_p4 <= write_flag33_0_reg_262;
        end if; 
    end process;


    ap_phi_mux_write_flag39_0_phi_fu_314_p4_assign_proc : process(write_flag39_0_reg_310, icmp_ln50_reg_2243_pp0_iter19_reg, select_ln63_13_reg_2339, ap_enable_reg_pp0_iter20, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_write_flag39_0_phi_fu_314_p4 <= select_ln63_13_reg_2339;
        else 
            ap_phi_mux_write_flag39_0_phi_fu_314_p4 <= write_flag39_0_reg_310;
        end if; 
    end process;


    ap_phi_mux_write_flag3_0_phi_fu_602_p4_assign_proc : process(write_flag3_0_reg_598, icmp_ln50_reg_2243_pp0_iter19_reg, select_ln63_37_reg_2414, ap_enable_reg_pp0_iter20, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_write_flag3_0_phi_fu_602_p4 <= select_ln63_37_reg_2414;
        else 
            ap_phi_mux_write_flag3_0_phi_fu_602_p4 <= write_flag3_0_reg_598;
        end if; 
    end process;


    ap_phi_mux_write_flag42_0_phi_fu_350_p4_assign_proc : process(write_flag42_0_reg_346, icmp_ln50_reg_2243_pp0_iter19_reg, select_ln63_16_reg_2349, ap_enable_reg_pp0_iter20, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_write_flag42_0_phi_fu_350_p4 <= select_ln63_16_reg_2349;
        else 
            ap_phi_mux_write_flag42_0_phi_fu_350_p4 <= write_flag42_0_reg_346;
        end if; 
    end process;


    ap_phi_mux_write_flag45_0_phi_fu_386_p4_assign_proc : process(write_flag45_0_reg_382, icmp_ln50_reg_2243_pp0_iter19_reg, select_ln63_19_reg_2359, ap_enable_reg_pp0_iter20, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_write_flag45_0_phi_fu_386_p4 <= select_ln63_19_reg_2359;
        else 
            ap_phi_mux_write_flag45_0_phi_fu_386_p4 <= write_flag45_0_reg_382;
        end if; 
    end process;


    ap_phi_mux_write_flag48_0_phi_fu_422_p4_assign_proc : process(write_flag48_0_reg_418, icmp_ln50_reg_2243_pp0_iter19_reg, select_ln63_22_reg_2369, ap_enable_reg_pp0_iter20, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_write_flag48_0_phi_fu_422_p4 <= select_ln63_22_reg_2369;
        else 
            ap_phi_mux_write_flag48_0_phi_fu_422_p4 <= write_flag48_0_reg_418;
        end if; 
    end process;


    ap_phi_mux_write_flag51_0_phi_fu_458_p4_assign_proc : process(write_flag51_0_reg_454, icmp_ln50_reg_2243_pp0_iter19_reg, select_ln63_25_reg_2379, ap_enable_reg_pp0_iter20, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_write_flag51_0_phi_fu_458_p4 <= select_ln63_25_reg_2379;
        else 
            ap_phi_mux_write_flag51_0_phi_fu_458_p4 <= write_flag51_0_reg_454;
        end if; 
    end process;


    ap_phi_mux_write_flag57_0_phi_fu_518_p4_assign_proc : process(write_flag57_0_reg_514, icmp_ln50_reg_2243_pp0_iter19_reg, select_ln63_30_reg_2394, ap_enable_reg_pp0_iter20, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_write_flag57_0_phi_fu_518_p4 <= select_ln63_30_reg_2394;
        else 
            ap_phi_mux_write_flag57_0_phi_fu_518_p4 <= write_flag57_0_reg_514;
        end if; 
    end process;


    ap_phi_mux_write_flag60_0_phi_fu_554_p4_assign_proc : process(write_flag60_0_reg_550, icmp_ln50_reg_2243_pp0_iter19_reg, select_ln63_33_reg_2404, ap_enable_reg_pp0_iter20, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_write_flag60_0_phi_fu_554_p4 <= select_ln63_33_reg_2404;
        else 
            ap_phi_mux_write_flag60_0_phi_fu_554_p4 <= write_flag60_0_reg_550;
        end if; 
    end process;


    ap_phi_mux_write_flag63_0_phi_fu_590_p4_assign_proc : process(write_flag63_0_reg_586, icmp_ln50_reg_2243_pp0_iter19_reg, select_ln63_36_reg_2409, ap_enable_reg_pp0_iter20, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_write_flag63_0_phi_fu_590_p4 <= select_ln63_36_reg_2409;
        else 
            ap_phi_mux_write_flag63_0_phi_fu_590_p4 <= write_flag63_0_reg_586;
        end if; 
    end process;


    ap_phi_mux_write_flag66_0_phi_fu_626_p4_assign_proc : process(write_flag66_0_reg_622, icmp_ln50_reg_2243_pp0_iter19_reg, select_ln63_39_reg_2419, ap_enable_reg_pp0_iter20, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_write_flag66_0_phi_fu_626_p4 <= select_ln63_39_reg_2419;
        else 
            ap_phi_mux_write_flag66_0_phi_fu_626_p4 <= write_flag66_0_reg_622;
        end if; 
    end process;


    ap_phi_mux_write_flag69_0_phi_fu_662_p4_assign_proc : process(write_flag69_0_reg_658, icmp_ln50_reg_2243_pp0_iter19_reg, select_ln63_42_reg_2429, ap_enable_reg_pp0_iter20, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_write_flag69_0_phi_fu_662_p4 <= select_ln63_42_reg_2429;
        else 
            ap_phi_mux_write_flag69_0_phi_fu_662_p4 <= write_flag69_0_reg_658;
        end if; 
    end process;


    ap_phi_mux_write_flag6_0_phi_fu_530_p4_assign_proc : process(write_flag6_0_reg_526, icmp_ln50_reg_2243_pp0_iter19_reg, select_ln63_31_reg_2399, ap_enable_reg_pp0_iter20, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_write_flag6_0_phi_fu_530_p4 <= select_ln63_31_reg_2399;
        else 
            ap_phi_mux_write_flag6_0_phi_fu_530_p4 <= write_flag6_0_reg_526;
        end if; 
    end process;


    ap_phi_mux_write_flag9_0_phi_fu_470_p4_assign_proc : process(write_flag9_0_reg_466, icmp_ln50_reg_2243_pp0_iter19_reg, select_ln63_26_reg_2384, ap_enable_reg_pp0_iter20, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln50_reg_2243_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_write_flag9_0_phi_fu_470_p4 <= select_ln63_26_reg_2384;
        else 
            ap_phi_mux_write_flag9_0_phi_fu_470_p4 <= write_flag9_0_reg_466;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= a_V_10_reg_634;
    ap_return_1 <= select_ln75_fu_1869_p3;
    ap_return_10 <= select_ln75_8_fu_1933_p3;
    ap_return_11 <= select_ln75_9_fu_1941_p3;
    ap_return_12 <= wp_parameters81_042_reg_298;
    ap_return_13 <= select_ln75_10_fu_1949_p3;
    ap_return_14 <= select_ln75_11_fu_1957_p3;
    ap_return_15 <= select_ln75_12_fu_1965_p3;
    ap_return_16 <= select_ln75_13_fu_1973_p3;
    ap_return_17 <= select_ln75_14_fu_1981_p3;
    ap_return_18 <= wp_parameters82_033_reg_502;
    ap_return_19 <= select_ln75_15_fu_1989_p3;
    ap_return_2 <= select_ln75_1_fu_1877_p3;
    ap_return_20 <= select_ln75_16_fu_1997_p3;
    ap_return_21 <= select_ln75_17_fu_2005_p3;
    ap_return_22 <= select_ln75_18_fu_2013_p3;
    ap_return_23 <= select_ln75_19_fu_2021_p3;
    ap_return_3 <= select_ln75_2_fu_1885_p3;
    ap_return_4 <= select_ln75_3_fu_1893_p3;
    ap_return_5 <= select_ln75_4_fu_1901_p3;
    ap_return_6 <= a_V_1_reg_238;
    ap_return_7 <= select_ln75_5_fu_1909_p3;
    ap_return_8 <= select_ln75_6_fu_1917_p3;
    ap_return_9 <= select_ln75_7_fu_1925_p3;
    grp_straightLineProjectorFromLayerIJtoK_fu_704_ap_start <= grp_straightLineProjectorFromLayerIJtoK_fu_704_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_717_ap_start <= grp_straightLineProjectorFromLayerIJtoK_fu_717_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_730_ap_start <= grp_straightLineProjectorFromLayerIJtoK_fu_730_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_743_ap_start <= grp_straightLineProjectorFromLayerIJtoK_fu_743_ap_start_reg;
    icmp_ln50_fu_822_p2 <= "1" when (ap_phi_mux_i_phi_fu_146_p4 = ap_const_lv3_5) else "0";
    icmp_ln63_fu_870_p2 <= "1" when (signed(tmp_fu_860_p4) < signed(ap_const_lv30_1)) else "0";
    icmp_ln65_1_fu_1527_p2 <= "1" when (trunc_ln65_reg_2276 = ap_const_lv2_0) else "0";
    icmp_ln65_2_fu_1540_p2 <= "1" when (trunc_ln65_reg_2276 = ap_const_lv2_2) else "0";
    icmp_ln65_fu_1514_p2 <= "1" when (trunc_ln65_reg_2276 = ap_const_lv2_1) else "0";
    icmp_ln878_14_fu_774_p2 <= "1" when (signed(p_read1) < signed(ap_const_lv32_14FB1E4)) else "0";
    icmp_ln878_fu_756_p2 <= "1" when (signed(p_read) < signed(ap_const_lv32_FEB04E1C)) else "0";
    icmp_ln886_fu_792_p2 <= "1" when (signed(z1_min_V_fu_762_p3) > signed(z1_max_V_fu_780_p3)) else "0";
    j_fu_828_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_phi_fu_146_p4) + unsigned(ap_const_lv3_1));
    select_ln63_10_fu_1322_p3 <= 
        wp_parameters8093_1_fu_1241_p6 when (icmp_ln63_fu_870_p2(0) = '1') else 
        select_ln63_10_reg_2329;
    select_ln63_11_fu_1330_p3 <= 
        wp_parameters88_1_fu_1228_p6 when (icmp_ln63_fu_870_p2(0) = '1') else 
        select_ln63_11_reg_2334;
    select_ln63_13_fu_1338_p3 <= 
        write_flag39_1_fu_912_p6 when (icmp_ln63_fu_870_p2(0) = '1') else 
        ap_phi_mux_write_flag39_0_phi_fu_314_p4;
    select_ln63_14_fu_1346_p3 <= 
        write_flag15_1_fu_1214_p6 when (icmp_ln63_fu_870_p2(0) = '1') else 
        ap_phi_mux_write_flag15_0_phi_fu_326_p4;
    select_ln63_15_fu_1792_p3 <= 
        wp_parameters8194_1_fu_1627_p6 when (icmp_ln63_reg_2256(0) = '1') else 
        wp_parameters8194_041_reg_334;
    select_ln63_16_fu_1354_p3 <= 
        write_flag42_1_fu_968_p6 when (icmp_ln63_fu_870_p2(0) = '1') else 
        ap_phi_mux_write_flag42_0_phi_fu_350_p4;
    select_ln63_17_fu_1362_p3 <= 
        wp_parameters87_1_fu_1120_p6 when (icmp_ln63_fu_870_p2(0) = '1') else 
        select_ln63_17_reg_2354;
    select_ln63_18_fu_1799_p3 <= 
        wp_parameters8195_1_fu_1679_p6 when (icmp_ln63_reg_2256(0) = '1') else 
        wp_parameters8195_039_reg_370;
    select_ln63_19_fu_1370_p3 <= 
        write_flag45_1_fu_1024_p6 when (icmp_ln63_fu_870_p2(0) = '1') else 
        ap_phi_mux_write_flag45_0_phi_fu_386_p4;
    select_ln63_1_fu_1757_p3 <= 
        wp_parameters8089_1_fu_1640_p6 when (icmp_ln63_reg_2256(0) = '1') else 
        wp_parameters8089_049_reg_166;
    select_ln63_20_fu_1378_p3 <= 
        write_flag12_1_fu_1106_p6 when (icmp_ln63_fu_870_p2(0) = '1') else 
        ap_phi_mux_write_flag12_0_phi_fu_398_p4;
    select_ln63_21_fu_1806_p3 <= 
        wp_parameters8196_1_fu_1731_p6 when (icmp_ln63_reg_2256(0) = '1') else 
        wp_parameters8196_038_reg_406;
    select_ln63_22_fu_1386_p3 <= 
        write_flag48_1_fu_1092_p6 when (icmp_ln63_fu_870_p2(0) = '1') else 
        ap_phi_mux_write_flag48_0_phi_fu_422_p4;
    select_ln63_23_fu_1813_p3 <= 
        wp_parameters86_1_fu_1718_p6 when (icmp_ln63_reg_2256(0) = '1') else 
        wp_parameters86_037_reg_430;
    select_ln63_24_fu_1394_p3 <= 
        wp_parameters8197_1_fu_1079_p6 when (icmp_ln63_fu_870_p2(0) = '1') else 
        select_ln63_24_reg_2374;
    select_ln63_25_fu_1402_p3 <= 
        write_flag51_1_fu_1200_p6 when (icmp_ln63_fu_870_p2(0) = '1') else 
        ap_phi_mux_write_flag51_0_phi_fu_458_p4;
    select_ln63_26_fu_1410_p3 <= 
        write_flag9_1_fu_1010_p6 when (icmp_ln63_fu_870_p2(0) = '1') else 
        ap_phi_mux_write_flag9_0_phi_fu_470_p4;
    select_ln63_27_fu_1418_p3 <= 
        wp_parameters8198_1_fu_1187_p6 when (icmp_ln63_fu_870_p2(0) = '1') else 
        select_ln63_27_reg_2389;
    select_ln63_28_fu_1820_p3 <= 
        wp_parameters85_1_fu_1666_p6 when (icmp_ln63_reg_2256(0) = '1') else 
        wp_parameters85_034_reg_490;
    select_ln63_2_fu_1764_p3 <= 
        wp_parameters8090_1_fu_1692_p6 when (icmp_ln63_reg_2256(0) = '1') else 
        wp_parameters8090_048_reg_178;
    select_ln63_30_fu_1426_p3 <= 
        write_flag57_1_fu_898_p6 when (icmp_ln63_fu_870_p2(0) = '1') else 
        ap_phi_mux_write_flag57_0_phi_fu_518_p4;
    select_ln63_31_fu_1434_p3 <= 
        write_flag6_1_fu_954_p6 when (icmp_ln63_fu_870_p2(0) = '1') else 
        ap_phi_mux_write_flag6_0_phi_fu_530_p4;
    select_ln63_32_fu_1834_p3 <= 
        wp_parameters8299_1_fu_1614_p6 when (icmp_ln63_reg_2256(0) = '1') else 
        wp_parameters8299_032_reg_538;
    select_ln63_33_fu_1442_p3 <= 
        write_flag60_1_fu_940_p6 when (icmp_ln63_fu_870_p2(0) = '1') else 
        ap_phi_mux_write_flag60_0_phi_fu_554_p4;
    select_ln63_34_fu_1841_p3 <= 
        wp_parameters84_1_fu_1601_p6 when (icmp_ln63_reg_2256(0) = '1') else 
        wp_parameters84_031_reg_562;
    select_ln63_35_fu_1848_p3 <= 
        wp_parameters82100_1_fu_1653_p6 when (icmp_ln63_reg_2256(0) = '1') else 
        wp_parameters82100_030_reg_574;
    select_ln63_36_fu_1450_p3 <= 
        write_flag63_1_fu_996_p6 when (icmp_ln63_fu_870_p2(0) = '1') else 
        ap_phi_mux_write_flag63_0_phi_fu_590_p4;
    select_ln63_37_fu_1458_p3 <= 
        write_flag3_1_fu_884_p6 when (icmp_ln63_fu_870_p2(0) = '1') else 
        ap_phi_mux_write_flag3_0_phi_fu_602_p4;
    select_ln63_38_fu_1855_p3 <= 
        wp_parameters82101_1_fu_1705_p6 when (icmp_ln63_reg_2256(0) = '1') else 
        wp_parameters82101_029_reg_610;
    select_ln63_39_fu_1466_p3 <= 
        write_flag66_1_fu_1065_p6 when (icmp_ln63_fu_870_p2(0) = '1') else 
        ap_phi_mux_write_flag66_0_phi_fu_626_p4;
    select_ln63_3_fu_1282_p3 <= 
        write_flag27_1_fu_1038_p6 when (icmp_ln63_fu_870_p2(0) = '1') else 
        ap_phi_mux_write_flag27_0_phi_fu_194_p4;
    select_ln63_41_fu_1474_p3 <= 
        wp_parameters82102_1_fu_1052_p6 when (icmp_ln63_fu_870_p2(0) = '1') else 
        select_ln63_41_reg_2424;
    select_ln63_42_fu_1482_p3 <= 
        write_flag69_1_fu_1173_p6 when (icmp_ln63_fu_870_p2(0) = '1') else 
        ap_phi_mux_write_flag69_0_phi_fu_662_p4;
    select_ln63_43_fu_1490_p3 <= 
        wp_parameters82103_1_fu_1160_p6 when (icmp_ln63_fu_870_p2(0) = '1') else 
        select_ln63_43_reg_2434;
    select_ln63_44_fu_1498_p3 <= 
        add_ln691_fu_1268_p2 when (icmp_ln63_fu_870_p2(0) = '1') else 
        wp_parameters893_0_reg_682;
    select_ln63_45_fu_1506_p3 <= 
        add_ln691_fu_1268_p2 when (icmp_ln63_fu_870_p2(0) = '1') else 
        empty_reg_693;
    select_ln63_4_fu_1290_p3 <= 
        write_flag21_1_fu_926_p6 when (icmp_ln63_fu_870_p2(0) = '1') else 
        ap_phi_mux_write_flag21_0_phi_fu_206_p4;
    select_ln63_5_fu_1771_p3 <= 
        wp_parameters8091_1_fu_1744_p6 when (icmp_ln63_reg_2256(0) = '1') else 
        wp_parameters8091_047_reg_214;
    select_ln63_6_fu_1298_p3 <= 
        write_flag30_1_fu_1146_p6 when (icmp_ln63_fu_870_p2(0) = '1') else 
        ap_phi_mux_write_flag30_0_phi_fu_230_p4;
    select_ln63_8_fu_1306_p3 <= 
        wp_parameters8092_1_fu_1133_p6 when (icmp_ln63_fu_870_p2(0) = '1') else 
        select_ln63_8_reg_2319;
    select_ln63_9_fu_1314_p3 <= 
        write_flag33_1_fu_1254_p6 when (icmp_ln63_fu_870_p2(0) = '1') else 
        ap_phi_mux_write_flag33_0_phi_fu_266_p4;
    select_ln63_fu_1274_p3 <= 
        write_flag24_1_fu_982_p6 when (icmp_ln63_fu_870_p2(0) = '1') else 
        ap_phi_mux_write_flag24_0_phi_fu_158_p4;
    select_ln75_10_fu_1949_p3 <= 
        wp_parameters8194_041_reg_334 when (write_flag39_0_reg_310(0) = '1') else 
        ap_const_lv32_0;
    select_ln75_11_fu_1957_p3 <= 
        wp_parameters8195_039_reg_370 when (write_flag42_0_reg_346(0) = '1') else 
        ap_const_lv32_0;
    select_ln75_12_fu_1965_p3 <= 
        wp_parameters8196_038_reg_406 when (write_flag45_0_reg_382(0) = '1') else 
        ap_const_lv32_0;
    select_ln75_13_fu_1973_p3 <= 
        wp_parameters8197_036_reg_442 when (write_flag48_0_reg_418(0) = '1') else 
        ap_const_lv32_0;
    select_ln75_14_fu_1981_p3 <= 
        wp_parameters8198_035_reg_478 when (write_flag51_0_reg_454(0) = '1') else 
        ap_const_lv32_0;
    select_ln75_15_fu_1989_p3 <= 
        wp_parameters8299_032_reg_538 when (write_flag57_0_reg_514(0) = '1') else 
        ap_const_lv32_0;
    select_ln75_16_fu_1997_p3 <= 
        wp_parameters82100_030_reg_574 when (write_flag60_0_reg_550(0) = '1') else 
        ap_const_lv32_0;
    select_ln75_17_fu_2005_p3 <= 
        wp_parameters82101_029_reg_610 when (write_flag63_0_reg_586(0) = '1') else 
        ap_const_lv32_0;
    select_ln75_18_fu_2013_p3 <= 
        wp_parameters82102_027_reg_646 when (write_flag66_0_reg_622(0) = '1') else 
        ap_const_lv32_0;
    select_ln75_19_fu_2021_p3 <= 
        wp_parameters82103_026_reg_670 when (write_flag69_0_reg_658(0) = '1') else 
        ap_const_lv32_0;
    select_ln75_1_fu_1877_p3 <= 
        wp_parameters85_034_reg_490 when (write_flag6_0_reg_526(0) = '1') else 
        ap_const_lv32_0;
    select_ln75_2_fu_1885_p3 <= 
        wp_parameters86_037_reg_430 when (write_flag9_0_reg_466(0) = '1') else 
        ap_const_lv32_0;
    select_ln75_3_fu_1893_p3 <= 
        wp_parameters87_040_reg_358 when (write_flag12_0_reg_394(0) = '1') else 
        ap_const_lv32_0;
    select_ln75_4_fu_1901_p3 <= 
        wp_parameters88_043_reg_286 when (write_flag15_0_reg_322(0) = '1') else 
        ap_const_lv32_0;
    select_ln75_5_fu_1909_p3 <= 
        wp_parameters8089_049_reg_166 when (write_flag21_0_reg_202(0) = '1') else 
        ap_const_lv32_0;
    select_ln75_6_fu_1917_p3 <= 
        wp_parameters8090_048_reg_178 when (write_flag24_0_reg_154(0) = '1') else 
        ap_const_lv32_0;
    select_ln75_7_fu_1925_p3 <= 
        wp_parameters8091_047_reg_214 when (write_flag27_0_reg_190(0) = '1') else 
        ap_const_lv32_0;
    select_ln75_8_fu_1933_p3 <= 
        wp_parameters8092_045_reg_250 when (write_flag30_0_reg_226(0) = '1') else 
        ap_const_lv32_0;
    select_ln75_9_fu_1941_p3 <= 
        wp_parameters8093_044_reg_274 when (write_flag33_0_reg_262(0) = '1') else 
        ap_const_lv32_0;
    select_ln75_fu_1869_p3 <= 
        wp_parameters84_031_reg_562 when (write_flag3_0_reg_598(0) = '1') else 
        ap_const_lv32_0;
        sext_ln34_fu_818_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(z1_min_V_1_fu_810_p3),32));

        sext_ln37_fu_806_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(z1_max_V_1_fu_798_p3),32));

    tmp_fu_860_p4 <= empty_reg_693(31 downto 2);
    trunc_ln34_fu_770_p1 <= z1_min_V_fu_762_p3(26 - 1 downto 0);
    trunc_ln35_fu_788_p1 <= z1_max_V_fu_780_p3(26 - 1 downto 0);
    trunc_ln65_fu_876_p1 <= empty_reg_693(2 - 1 downto 0);
    trunc_ln66_fu_880_p1 <= wp_parameters893_0_reg_682(2 - 1 downto 0);
    z1_max_V_1_fu_798_p3 <= 
        ap_const_lv26_15EF424 when (icmp_ln886_fu_792_p2(0) = '1') else 
        trunc_ln35_fu_788_p1;
    z1_max_V_fu_780_p3 <= 
        p_read1 when (icmp_ln878_14_fu_774_p2(0) = '1') else 
        ap_const_lv32_14FB1E4;
    z1_min_V_1_fu_810_p3 <= 
        ap_const_lv26_15EF424 when (icmp_ln886_fu_792_p2(0) = '1') else 
        trunc_ln34_fu_770_p1;
    z1_min_V_fu_762_p3 <= 
        ap_const_lv32_FEB04E1C when (icmp_ln878_fu_756_p2(0) = '1') else 
        p_read;
end behav;
