

================================================================
== Vitis HLS Report for 'get_acceptanceCorners'
================================================================
* Date:           Thu Jul 25 14:49:09 2024

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:45 MST 2020)
* Project:        PatchMaker_tanishGit
* Solution:       solutionTEST (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu19p-fsvb3824-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  5.00 ns|  1.539 ns|     1.35 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        6|        6|  30.000 ns|  30.000 ns|    6|    6|     none|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                       |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |               Loop Name               |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- get_acceptanceCorners_minMaxFinding  |        4|        4|         1|          1|          1|     4|       yes|
        +---------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 2 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.38>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%p_read1825 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %p_read18" [patchMaker.cpp:220]   --->   Operation 4 'read' 'p_read1825' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%p_read1724 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %p_read17" [patchMaker.cpp:220]   --->   Operation 5 'read' 'p_read1724' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%p_read1623 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %p_read16" [patchMaker.cpp:220]   --->   Operation 6 'read' 'p_read1623' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%p_read1422 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %p_read14" [patchMaker.cpp:220]   --->   Operation 7 'read' 'p_read1422' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%p_read1321 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %p_read13" [patchMaker.cpp:220]   --->   Operation 8 'read' 'p_read1321' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%p_read1220 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %p_read12" [patchMaker.cpp:220]   --->   Operation 9 'read' 'p_read1220' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%p_read1119 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %p_read11" [patchMaker.cpp:220]   --->   Operation 10 'read' 'p_read1119' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%p_read1018 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %p_read10" [patchMaker.cpp:220]   --->   Operation 11 'read' 'p_read1018' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%p_read917 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %p_read9" [patchMaker.cpp:220]   --->   Operation 12 'read' 'p_read917' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%p_read816 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %p_read8" [patchMaker.cpp:220]   --->   Operation 13 'read' 'p_read816' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%p_read715 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %p_read7" [patchMaker.cpp:220]   --->   Operation 14 'read' 'p_read715' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%p_read614 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %p_read6" [patchMaker.cpp:220]   --->   Operation 15 'read' 'p_read614' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%p_read1513 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %p_read15" [patchMaker.cpp:220]   --->   Operation 16 'read' 'p_read1513' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%p_read412 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %p_read4" [patchMaker.cpp:220]   --->   Operation 17 'read' 'p_read412' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%p_read311 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %p_read3" [patchMaker.cpp:220]   --->   Operation 18 'read' 'p_read311' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%p_read210 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %p_read2" [patchMaker.cpp:220]   --->   Operation 19 'read' 'p_read210' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%p_read19 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %p_read1" [patchMaker.cpp:220]   --->   Operation 20 'read' 'p_read19' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%p_read_27079 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %p_read" [patchMaker.cpp:220]   --->   Operation 21 'read' 'p_read_27079' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.38ns)   --->   "%br_ln220 = br void" [patchMaker.cpp:220]   --->   Operation 22 'br' 'br_ln220' <Predicate = true> <Delay = 0.38>

State 2 <SV = 1> <Delay = 1.53>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%i = phi i3 0, void %.lr.ph, i3 %add_ln220, void %.split" [patchMaker.cpp:220]   --->   Operation 23 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%d_corner_max_V = phi i32 0, void %.lr.ph, i32 %d_corner_max_V_3, void %.split"   --->   Operation 24 'phi' 'd_corner_max_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%c_corner_max_V = phi i32 0, void %.lr.ph, i32 %c_corner_max_V_1, void %.split"   --->   Operation 25 'phi' 'c_corner_max_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%b_corner_min_V = phi i32 4294967295, void %.lr.ph, i32 %b_corner_min_V_3, void %.split"   --->   Operation 26 'phi' 'b_corner_min_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%a_corner_min_V = phi i32 4294967295, void %.lr.ph, i32 %a_corner_min_V_1, void %.split"   --->   Operation 27 'phi' 'a_corner_min_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.57ns)   --->   "%add_ln220 = add i3 %i, i3 1" [patchMaker.cpp:220]   --->   Operation 28 'add' 'add_ln220' <Predicate = true> <Delay = 0.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 29 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.49ns)   --->   "%icmp_ln220 = icmp_eq  i3 %i, i3 4" [patchMaker.cpp:220]   --->   Operation 30 'icmp' 'icmp_ln220' <Predicate = true> <Delay = 0.49> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 4, i64 4, i64 4"   --->   Operation 31 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%br_ln220 = br i1 %icmp_ln220, void %.split, void %._crit_edge.loopexit" [patchMaker.cpp:220]   --->   Operation 32 'br' 'br_ln220' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%specloopname_ln213 = specloopname void @_ssdm_op_SpecLoopName, void @empty_3" [patchMaker.cpp:213]   --->   Operation 33 'specloopname' 'specloopname_ln213' <Predicate = (!icmp_ln220)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%trunc_ln878 = trunc i3 %i"   --->   Operation 34 'trunc' 'trunc_ln878' <Predicate = (!icmp_ln220)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.45ns)   --->   "%tmp = mux i32 @_ssdm_op_Mux.ap_auto.4i32.i2, i32 %p_read_27079, i32 %p_read614, i32 %p_read1018, i32 %p_read1422, i2 %trunc_ln878"   --->   Operation 35 'mux' 'tmp' <Predicate = (!icmp_ln220)> <Delay = 0.45> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.85ns)   --->   "%icmp_ln878 = icmp_slt  i32 %tmp, i32 %a_corner_min_V"   --->   Operation 36 'icmp' 'icmp_ln878' <Predicate = (!icmp_ln220)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.22ns)   --->   "%a_corner_min_V_1 = select i1 %icmp_ln878, i32 %tmp, i32 %a_corner_min_V" [patchMaker.cpp:222]   --->   Operation 37 'select' 'a_corner_min_V_1' <Predicate = (!icmp_ln220)> <Delay = 0.22> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.45ns)   --->   "%b_corner_min_V_2 = mux i32 @_ssdm_op_Mux.ap_auto.4i32.i2, i32 %p_read19, i32 %p_read715, i32 %p_read1119, i32 %p_read1623, i2 %trunc_ln878"   --->   Operation 38 'mux' 'b_corner_min_V_2' <Predicate = (!icmp_ln220)> <Delay = 0.45> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.85ns)   --->   "%icmp_ln878_10 = icmp_slt  i32 %b_corner_min_V_2, i32 %b_corner_min_V"   --->   Operation 39 'icmp' 'icmp_ln878_10' <Predicate = (!icmp_ln220)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.22ns)   --->   "%b_corner_min_V_3 = select i1 %icmp_ln878_10, i32 %b_corner_min_V_2, i32 %b_corner_min_V" [patchMaker.cpp:226]   --->   Operation 40 'select' 'b_corner_min_V_3' <Predicate = (!icmp_ln220)> <Delay = 0.22> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.45ns)   --->   "%tmp_s = mux i32 @_ssdm_op_Mux.ap_auto.4i32.i2, i32 %p_read210, i32 %p_read816, i32 %p_read1220, i32 %p_read1724, i2 %trunc_ln878"   --->   Operation 41 'mux' 'tmp_s' <Predicate = (!icmp_ln220)> <Delay = 0.45> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.85ns)   --->   "%icmp_ln886 = icmp_sgt  i32 %tmp_s, i32 %c_corner_max_V"   --->   Operation 42 'icmp' 'icmp_ln886' <Predicate = (!icmp_ln220)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.22ns)   --->   "%c_corner_max_V_1 = select i1 %icmp_ln886, i32 %tmp_s, i32 %c_corner_max_V" [patchMaker.cpp:230]   --->   Operation 43 'select' 'c_corner_max_V_1' <Predicate = (!icmp_ln220)> <Delay = 0.22> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.45ns)   --->   "%d_corner_max_V_2 = mux i32 @_ssdm_op_Mux.ap_auto.4i32.i2, i32 %p_read311, i32 %p_read917, i32 %p_read1321, i32 %p_read1825, i2 %trunc_ln878"   --->   Operation 44 'mux' 'd_corner_max_V_2' <Predicate = (!icmp_ln220)> <Delay = 0.45> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.85ns)   --->   "%icmp_ln886_8 = icmp_sgt  i32 %d_corner_max_V_2, i32 %d_corner_max_V"   --->   Operation 45 'icmp' 'icmp_ln886_8' <Predicate = (!icmp_ln220)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.22ns)   --->   "%d_corner_max_V_3 = select i1 %icmp_ln886_8, i32 %d_corner_max_V_2, i32 %d_corner_max_V" [patchMaker.cpp:234]   --->   Operation 46 'select' 'd_corner_max_V_3' <Predicate = (!icmp_ln220)> <Delay = 0.22> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 47 'br' 'br_ln0' <Predicate = (!icmp_ln220)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.31>
ST_3 : Operation 48 [1/1] (0.85ns)   --->   "%icmp_ln874 = icmp_eq  i32 %a_corner_min_V, i32 %p_read1422"   --->   Operation 48 'icmp' 'icmp_ln874' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 49 [1/1] (0.85ns)   --->   "%icmp_ln874_1 = icmp_eq  i32 %b_corner_min_V, i32 %p_read1623"   --->   Operation 49 'icmp' 'icmp_ln874_1' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 50 [1/1] (0.12ns)   --->   "%and_ln256 = and i1 %icmp_ln874_1, i1 %icmp_ln874" [patchMaker.cpp:256]   --->   Operation 50 'and' 'and_ln256' <Predicate = true> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln874 = zext i1 %and_ln256"   --->   Operation 51 'zext' 'zext_ln874' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.85ns)   --->   "%icmp_ln874_2 = icmp_eq  i32 %c_corner_max_V, i32 %p_read1724"   --->   Operation 52 'icmp' 'icmp_ln874_2' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node and_ln266_1)   --->   "%and_ln261 = and i1 %icmp_ln874_2, i1 %and_ln256" [patchMaker.cpp:261]   --->   Operation 53 'and' 'and_ln261' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 54 [1/1] (0.85ns)   --->   "%icmp_ln874_3 = icmp_eq  i32 %d_corner_max_V, i32 %p_read1825"   --->   Operation 54 'icmp' 'icmp_ln874_3' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 55 [1/1] (0.12ns)   --->   "%and_ln266 = and i1 %icmp_ln874_3, i1 %icmp_ln874_2" [patchMaker.cpp:266]   --->   Operation 55 'and' 'and_ln266' <Predicate = true> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%zext_ln266 = zext i1 %and_ln266" [patchMaker.cpp:266]   --->   Operation 56 'zext' 'zext_ln266' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (0.12ns) (out node of the LUT)   --->   "%and_ln266_1 = and i1 %icmp_ln874_3, i1 %and_ln261" [patchMaker.cpp:266]   --->   Operation 57 'and' 'and_ln266_1' <Predicate = true> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln886 = zext i1 %and_ln266_1"   --->   Operation 58 'zext' 'zext_ln886' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (0.85ns)   --->   "%icmp_ln886_7 = icmp_sgt  i32 %c_corner_max_V, i32 %a_corner_min_V"   --->   Operation 59 'icmp' 'icmp_ln886_7' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 60 [1/1] (0.22ns)   --->   "%select_ln273 = select i1 %icmp_ln886_7, i32 %b_corner_min_V, i32 %c_corner_max_V" [patchMaker.cpp:273]   --->   Operation 60 'select' 'select_ln273' <Predicate = true> <Delay = 0.22> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 61 [1/1] (0.22ns)   --->   "%select_ln273_1 = select i1 %icmp_ln886_7, i32 %b_corner_min_V, i32 %a_corner_min_V" [patchMaker.cpp:273]   --->   Operation 61 'select' 'select_ln273_1' <Predicate = true> <Delay = 0.22> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 62 [1/1] (0.85ns)   --->   "%icmp_ln878_9 = icmp_slt  i32 %b_corner_min_V, i32 %d_corner_max_V"   --->   Operation 62 'icmp' 'icmp_ln878_9' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 63 [1/1] (0.22ns)   --->   "%b_corner_min_V_1 = select i1 %icmp_ln878_9, i32 %select_ln273, i32 %b_corner_min_V" [patchMaker.cpp:280]   --->   Operation 63 'select' 'b_corner_min_V_1' <Predicate = true> <Delay = 0.22> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 64 [1/1] (0.22ns)   --->   "%d_corner_max_V_1 = select i1 %icmp_ln878_9, i32 %select_ln273, i32 %d_corner_max_V" [patchMaker.cpp:280]   --->   Operation 64 'select' 'd_corner_max_V_1' <Predicate = true> <Delay = 0.22> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 65 [1/1] (0.12ns)   --->   "%or_ln280 = or i1 %icmp_ln878_9, i1 %icmp_ln886_7" [patchMaker.cpp:280]   --->   Operation 65 'or' 'or_ln280' <Predicate = true> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "%zext_ln280 = zext i1 %or_ln280" [patchMaker.cpp:280]   --->   Operation 66 'zext' 'zext_ln280' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "%mrv = insertvalue i384 <undef>, i32 %p_read412" [patchMaker.cpp:286]   --->   Operation 67 'insertvalue' 'mrv' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue i384 %mrv, i32 %select_ln273_1" [patchMaker.cpp:286]   --->   Operation 68 'insertvalue' 'mrv_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (0.00ns)   --->   "%mrv_2 = insertvalue i384 %mrv_1, i32 %p_read1513" [patchMaker.cpp:286]   --->   Operation 69 'insertvalue' 'mrv_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "%mrv_3 = insertvalue i384 %mrv_2, i32 %b_corner_min_V_1" [patchMaker.cpp:286]   --->   Operation 70 'insertvalue' 'mrv_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%mrv_4 = insertvalue i384 %mrv_3, i32 %p_read412" [patchMaker.cpp:286]   --->   Operation 71 'insertvalue' 'mrv_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%mrv_5 = insertvalue i384 %mrv_4, i32 %select_ln273" [patchMaker.cpp:286]   --->   Operation 72 'insertvalue' 'mrv_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%mrv_6 = insertvalue i384 %mrv_5, i32 %p_read1513" [patchMaker.cpp:286]   --->   Operation 73 'insertvalue' 'mrv_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 74 [1/1] (0.00ns)   --->   "%mrv_7 = insertvalue i384 %mrv_6, i32 %d_corner_max_V_1" [patchMaker.cpp:286]   --->   Operation 74 'insertvalue' 'mrv_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "%mrv_8 = insertvalue i384 %mrv_7, i32 %zext_ln266" [patchMaker.cpp:286]   --->   Operation 75 'insertvalue' 'mrv_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 76 [1/1] (0.00ns)   --->   "%mrv_9 = insertvalue i384 %mrv_8, i32 %zext_ln874" [patchMaker.cpp:286]   --->   Operation 76 'insertvalue' 'mrv_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "%mrv_10 = insertvalue i384 %mrv_9, i32 %zext_ln886" [patchMaker.cpp:286]   --->   Operation 77 'insertvalue' 'mrv_10' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 78 [1/1] (0.00ns)   --->   "%mrv_11 = insertvalue i384 %mrv_10, i32 %zext_ln280" [patchMaker.cpp:286]   --->   Operation 78 'insertvalue' 'mrv_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 79 [1/1] (0.00ns)   --->   "%ret_ln286 = ret i384 %mrv_11" [patchMaker.cpp:286]   --->   Operation 79 'ret' 'ret_ln286' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 1.35ns.

 <State 1>: 0.387ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i', patchMaker.cpp:220) with incoming values : ('add_ln220', patchMaker.cpp:220) [39]  (0.387 ns)

 <State 2>: 1.54ns
The critical path consists of the following:
	'phi' operation ('i', patchMaker.cpp:220) with incoming values : ('add_ln220', patchMaker.cpp:220) [39]  (0 ns)
	'mux' operation ('tmp') [52]  (0.453 ns)
	'icmp' operation ('icmp_ln878') [53]  (0.859 ns)
	'select' operation ('a_corner_min.V', patchMaker.cpp:222) [54]  (0.227 ns)

 <State 3>: 1.31ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln886_7') [77]  (0.859 ns)
	'select' operation ('select_ln273', patchMaker.cpp:273) [78]  (0.227 ns)
	'select' operation ('b_corner_min.V', patchMaker.cpp:280) [81]  (0.227 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
