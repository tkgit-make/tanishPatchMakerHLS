

================================================================
== Vitis HLS Report for 'getSolveNextPatchPairWhileCondition'
================================================================
* Date:           Thu Aug  8 03:59:07 2024

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:45 MST 2020)
* Project:        PatchMaker_tanishGit
* Solution:       solutionLC (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu19p-fsvb3824-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  3.00 ns|  1.309 ns|     0.81 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        1|        1|  3.000 ns|  3.000 ns|    1|    1|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.14>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%white_space_height_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %white_space_height" [patchMaker.cpp:1025]   --->   Operation 3 'read' 'white_space_height_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (1.14ns)   --->   "%sub_ln180 = sub i64 0, i64 %white_space_height_read" [C:/Xilinx/Vitis_HLS/2020.2/tps/mingw/6.2.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\6.2.0\include\c++\cstdlib:180]   --->   Operation 4 'sub' 'sub_ln180' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 1.30>
ST_2 : Operation 5 [1/1] (0.00ns)   --->   "%p_read17 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %p_read1" [patchMaker.cpp:1025]   --->   Operation 5 'read' 'p_read17' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 6 [1/1] (0.00ns)   --->   "%current_z_top_index_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %current_z_top_index" [patchMaker.cpp:1025]   --->   Operation 6 'read' 'current_z_top_index_read' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 7 [1/1] (0.00ns)   --->   "%previous_white_space_height_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %previous_white_space_height" [patchMaker.cpp:1025]   --->   Operation 7 'read' 'previous_white_space_height_read' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 8 [1/1] (0.00ns)   --->   "%repeat_original_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %repeat_original" [patchMaker.cpp:1025]   --->   Operation 8 'read' 'repeat_original_read' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 9 [1/1] (0.00ns)   --->   "%p_read_28261 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %p_read" [patchMaker.cpp:1025]   --->   Operation 9 'read' 'p_read_28261' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 10 [1/1] (1.06ns)   --->   "%icmp_ln1025 = icmp_slt  i64 %white_space_height_read, i64 1" [patchMaker.cpp:1025]   --->   Operation 10 'icmp' 'icmp_ln1025' <Predicate = true> <Delay = 1.06> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.06> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 11 [1/1] (0.00ns) (grouped into LUT with out node xor_ln1031)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %previous_white_space_height_read, i32 63" [patchMaker.cpp:1025]   --->   Operation 11 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (0.00ns) (grouped into LUT with out node xor_ln1031)   --->   "%xor_ln1025 = xor i1 %tmp, i1 1" [patchMaker.cpp:1025]   --->   Operation 12 'xor' 'xor_ln1025' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 13 [1/1] (0.00ns) (grouped into LUT with out node xor_ln1031)   --->   "%and_ln1025 = and i1 %icmp_ln1025, i1 %xor_ln1025" [patchMaker.cpp:1025]   --->   Operation 13 'and' 'and_ln1025' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 14 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln1031)   --->   "%tmp_30 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %white_space_height_read, i32 63" [C:/Xilinx/Vitis_HLS/2020.2/tps/mingw/6.2.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\6.2.0\include\c++\cstdlib:180]   --->   Operation 14 'bitselect' 'tmp_30' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln1031)   --->   "%select_ln180 = select i1 %tmp_30, i64 %sub_ln180, i64 %white_space_height_read" [C:/Xilinx/Vitis_HLS/2020.2/tps/mingw/6.2.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\6.2.0\include\c++\cstdlib:180]   --->   Operation 15 'select' 'select_ln180' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.85ns)   --->   "%exp4 = icmp_sgt  i32 %p_read_28261, i32 %current_z_top_index_read" [patchMaker.cpp:1028]   --->   Operation 16 'icmp' 'exp4' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.06> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 17 [1/1] (1.06ns) (out node of the LUT)   --->   "%icmp_ln1031 = icmp_slt  i64 %select_ln180, i64 6" [patchMaker.cpp:1031]   --->   Operation 17 'icmp' 'icmp_ln1031' <Predicate = true> <Delay = 1.06> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.06> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 18 [1/1] (0.85ns)   --->   "%icmp_ln1031_1 = icmp_slt  i32 %p_read17, i32 4244967197" [patchMaker.cpp:1031]   --->   Operation 18 'icmp' 'icmp_ln1031_1' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.06> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (1.06ns)   --->   "%icmp_ln1031_2 = icmp_slt  i64 %white_space_height_read, i64 6" [patchMaker.cpp:1031]   --->   Operation 19 'icmp' 'icmp_ln1031_2' <Predicate = true> <Delay = 1.06> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.06> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (0.00ns) (grouped into LUT with out node xor_ln1031)   --->   "%and_ln1031 = and i1 %icmp_ln1031_2, i1 %icmp_ln1031_1" [patchMaker.cpp:1031]   --->   Operation 20 'and' 'and_ln1031' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.00ns) (grouped into LUT with out node xor_ln1031)   --->   "%or_ln1031 = or i1 %icmp_ln1031, i1 %and_ln1031" [patchMaker.cpp:1031]   --->   Operation 21 'or' 'or_ln1031' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (0.00ns) (grouped into LUT with out node xor_ln1031)   --->   "%or_ln1031_1 = or i1 %or_ln1031, i1 %and_ln1025" [patchMaker.cpp:1031]   --->   Operation 22 'or' 'or_ln1031_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns) (grouped into LUT with out node xor_ln1031)   --->   "%or_ln1031_2 = or i1 %or_ln1031_1, i1 %repeat_original_read" [patchMaker.cpp:1031]   --->   Operation 23 'or' 'or_ln1031_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.12ns) (out node of the LUT)   --->   "%xor_ln1031 = xor i1 %or_ln1031_2, i1 1" [patchMaker.cpp:1031]   --->   Operation 24 'xor' 'xor_ln1031' <Predicate = true> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.12ns) (out node of the LUT)   --->   "%and_ln1031_1 = and i1 %exp4, i1 %xor_ln1031" [patchMaker.cpp:1031]   --->   Operation 25 'and' 'and_ln1031_1' <Predicate = true> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%ret_ln1031 = ret i1 %and_ln1031_1" [patchMaker.cpp:1031]   --->   Operation 26 'ret' 'ret_ln1031' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 0
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ p_read]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ repeat_original]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ white_space_height]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ previous_white_space_height]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ current_z_top_index]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ p_read1]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
white_space_height_read          (read     ) [ 001]
sub_ln180                        (sub      ) [ 001]
p_read17                         (read     ) [ 000]
current_z_top_index_read         (read     ) [ 000]
previous_white_space_height_read (read     ) [ 000]
repeat_original_read             (read     ) [ 000]
p_read_28261                     (read     ) [ 000]
icmp_ln1025                      (icmp     ) [ 000]
tmp                              (bitselect) [ 000]
xor_ln1025                       (xor      ) [ 000]
and_ln1025                       (and      ) [ 000]
tmp_30                           (bitselect) [ 000]
select_ln180                     (select   ) [ 000]
exp4                             (icmp     ) [ 000]
icmp_ln1031                      (icmp     ) [ 000]
icmp_ln1031_1                    (icmp     ) [ 000]
icmp_ln1031_2                    (icmp     ) [ 000]
and_ln1031                       (and      ) [ 000]
or_ln1031                        (or       ) [ 000]
or_ln1031_1                      (or       ) [ 000]
or_ln1031_2                      (or       ) [ 000]
xor_ln1031                       (xor      ) [ 000]
and_ln1031_1                     (and      ) [ 000]
ret_ln1031                       (ret      ) [ 000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="p_read">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_read"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="repeat_original">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="repeat_original"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="white_space_height">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="white_space_height"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="previous_white_space_height">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="previous_white_space_height"/></StgValue>
</bind>
</comp>

<comp id="8" class="1000" name="current_z_top_index">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="current_z_top_index"/></StgValue>
</bind>
</comp>

<comp id="10" class="1000" name="p_read1">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_read1"/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i64"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i32"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i1"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_BitSelect.i1.i64.i32"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="32" class="1004" name="white_space_height_read_read_fu_32">
<pin_list>
<pin id="33" dir="0" index="0" bw="64" slack="0"/>
<pin id="34" dir="0" index="1" bw="64" slack="0"/>
<pin id="35" dir="1" index="2" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="white_space_height_read/1 "/>
</bind>
</comp>

<comp id="38" class="1004" name="p_read17_read_fu_38">
<pin_list>
<pin id="39" dir="0" index="0" bw="32" slack="0"/>
<pin id="40" dir="0" index="1" bw="32" slack="0"/>
<pin id="41" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="p_read17/2 "/>
</bind>
</comp>

<comp id="44" class="1004" name="current_z_top_index_read_read_fu_44">
<pin_list>
<pin id="45" dir="0" index="0" bw="32" slack="0"/>
<pin id="46" dir="0" index="1" bw="32" slack="0"/>
<pin id="47" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="current_z_top_index_read/2 "/>
</bind>
</comp>

<comp id="50" class="1004" name="previous_white_space_height_read_read_fu_50">
<pin_list>
<pin id="51" dir="0" index="0" bw="64" slack="0"/>
<pin id="52" dir="0" index="1" bw="64" slack="0"/>
<pin id="53" dir="1" index="2" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="previous_white_space_height_read/2 "/>
</bind>
</comp>

<comp id="56" class="1004" name="repeat_original_read_read_fu_56">
<pin_list>
<pin id="57" dir="0" index="0" bw="1" slack="0"/>
<pin id="58" dir="0" index="1" bw="1" slack="0"/>
<pin id="59" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="repeat_original_read/2 "/>
</bind>
</comp>

<comp id="62" class="1004" name="p_read_28261_read_fu_62">
<pin_list>
<pin id="63" dir="0" index="0" bw="32" slack="0"/>
<pin id="64" dir="0" index="1" bw="32" slack="0"/>
<pin id="65" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="p_read_28261/2 "/>
</bind>
</comp>

<comp id="68" class="1004" name="sub_ln180_fu_68">
<pin_list>
<pin id="69" dir="0" index="0" bw="1" slack="0"/>
<pin id="70" dir="0" index="1" bw="64" slack="0"/>
<pin id="71" dir="1" index="2" bw="64" slack="1"/>
</pin_list>
<bind>
<opcode="sub(10) " fcode="sub"/>
<opset="sub_ln180/1 "/>
</bind>
</comp>

<comp id="74" class="1004" name="icmp_ln1025_fu_74">
<pin_list>
<pin id="75" dir="0" index="0" bw="64" slack="1"/>
<pin id="76" dir="0" index="1" bw="1" slack="0"/>
<pin id="77" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln1025/2 "/>
</bind>
</comp>

<comp id="79" class="1004" name="tmp_fu_79">
<pin_list>
<pin id="80" dir="0" index="0" bw="1" slack="0"/>
<pin id="81" dir="0" index="1" bw="64" slack="0"/>
<pin id="82" dir="0" index="2" bw="7" slack="0"/>
<pin id="83" dir="1" index="3" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="bitselect(1000) " fcode="bitselect"/>
<opset="tmp/2 "/>
</bind>
</comp>

<comp id="87" class="1004" name="xor_ln1025_fu_87">
<pin_list>
<pin id="88" dir="0" index="0" bw="1" slack="0"/>
<pin id="89" dir="0" index="1" bw="1" slack="0"/>
<pin id="90" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln1025/2 "/>
</bind>
</comp>

<comp id="93" class="1004" name="and_ln1025_fu_93">
<pin_list>
<pin id="94" dir="0" index="0" bw="1" slack="0"/>
<pin id="95" dir="0" index="1" bw="1" slack="0"/>
<pin id="96" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln1025/2 "/>
</bind>
</comp>

<comp id="99" class="1004" name="tmp_30_fu_99">
<pin_list>
<pin id="100" dir="0" index="0" bw="1" slack="0"/>
<pin id="101" dir="0" index="1" bw="64" slack="1"/>
<pin id="102" dir="0" index="2" bw="7" slack="0"/>
<pin id="103" dir="1" index="3" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="bitselect(1000) " fcode="bitselect"/>
<opset="tmp_30/2 "/>
</bind>
</comp>

<comp id="106" class="1004" name="select_ln180_fu_106">
<pin_list>
<pin id="107" dir="0" index="0" bw="1" slack="0"/>
<pin id="108" dir="0" index="1" bw="64" slack="1"/>
<pin id="109" dir="0" index="2" bw="64" slack="1"/>
<pin id="110" dir="1" index="3" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln180/2 "/>
</bind>
</comp>

<comp id="112" class="1004" name="exp4_fu_112">
<pin_list>
<pin id="113" dir="0" index="0" bw="32" slack="0"/>
<pin id="114" dir="0" index="1" bw="32" slack="0"/>
<pin id="115" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="exp4/2 "/>
</bind>
</comp>

<comp id="118" class="1004" name="icmp_ln1031_fu_118">
<pin_list>
<pin id="119" dir="0" index="0" bw="64" slack="0"/>
<pin id="120" dir="0" index="1" bw="4" slack="0"/>
<pin id="121" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln1031/2 "/>
</bind>
</comp>

<comp id="124" class="1004" name="icmp_ln1031_1_fu_124">
<pin_list>
<pin id="125" dir="0" index="0" bw="32" slack="0"/>
<pin id="126" dir="0" index="1" bw="27" slack="0"/>
<pin id="127" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln1031_1/2 "/>
</bind>
</comp>

<comp id="130" class="1004" name="icmp_ln1031_2_fu_130">
<pin_list>
<pin id="131" dir="0" index="0" bw="64" slack="1"/>
<pin id="132" dir="0" index="1" bw="4" slack="0"/>
<pin id="133" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln1031_2/2 "/>
</bind>
</comp>

<comp id="135" class="1004" name="and_ln1031_fu_135">
<pin_list>
<pin id="136" dir="0" index="0" bw="1" slack="0"/>
<pin id="137" dir="0" index="1" bw="1" slack="0"/>
<pin id="138" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln1031/2 "/>
</bind>
</comp>

<comp id="141" class="1004" name="or_ln1031_fu_141">
<pin_list>
<pin id="142" dir="0" index="0" bw="1" slack="0"/>
<pin id="143" dir="0" index="1" bw="1" slack="0"/>
<pin id="144" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln1031/2 "/>
</bind>
</comp>

<comp id="147" class="1004" name="or_ln1031_1_fu_147">
<pin_list>
<pin id="148" dir="0" index="0" bw="1" slack="0"/>
<pin id="149" dir="0" index="1" bw="1" slack="0"/>
<pin id="150" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln1031_1/2 "/>
</bind>
</comp>

<comp id="153" class="1004" name="or_ln1031_2_fu_153">
<pin_list>
<pin id="154" dir="0" index="0" bw="1" slack="0"/>
<pin id="155" dir="0" index="1" bw="1" slack="0"/>
<pin id="156" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln1031_2/2 "/>
</bind>
</comp>

<comp id="159" class="1004" name="xor_ln1031_fu_159">
<pin_list>
<pin id="160" dir="0" index="0" bw="1" slack="0"/>
<pin id="161" dir="0" index="1" bw="1" slack="0"/>
<pin id="162" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln1031/2 "/>
</bind>
</comp>

<comp id="165" class="1004" name="and_ln1031_1_fu_165">
<pin_list>
<pin id="166" dir="0" index="0" bw="1" slack="0"/>
<pin id="167" dir="0" index="1" bw="1" slack="0"/>
<pin id="168" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln1031_1/2 "/>
</bind>
</comp>

<comp id="171" class="1005" name="white_space_height_read_reg_171">
<pin_list>
<pin id="172" dir="0" index="0" bw="64" slack="1"/>
<pin id="173" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="white_space_height_read "/>
</bind>
</comp>

<comp id="179" class="1005" name="sub_ln180_reg_179">
<pin_list>
<pin id="180" dir="0" index="0" bw="64" slack="1"/>
<pin id="181" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="sub_ln180 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="36"><net_src comp="12" pin="0"/><net_sink comp="32" pin=0"/></net>

<net id="37"><net_src comp="4" pin="0"/><net_sink comp="32" pin=1"/></net>

<net id="42"><net_src comp="16" pin="0"/><net_sink comp="38" pin=0"/></net>

<net id="43"><net_src comp="10" pin="0"/><net_sink comp="38" pin=1"/></net>

<net id="48"><net_src comp="16" pin="0"/><net_sink comp="44" pin=0"/></net>

<net id="49"><net_src comp="8" pin="0"/><net_sink comp="44" pin=1"/></net>

<net id="54"><net_src comp="12" pin="0"/><net_sink comp="50" pin=0"/></net>

<net id="55"><net_src comp="6" pin="0"/><net_sink comp="50" pin=1"/></net>

<net id="60"><net_src comp="18" pin="0"/><net_sink comp="56" pin=0"/></net>

<net id="61"><net_src comp="2" pin="0"/><net_sink comp="56" pin=1"/></net>

<net id="66"><net_src comp="16" pin="0"/><net_sink comp="62" pin=0"/></net>

<net id="67"><net_src comp="0" pin="0"/><net_sink comp="62" pin=1"/></net>

<net id="72"><net_src comp="14" pin="0"/><net_sink comp="68" pin=0"/></net>

<net id="73"><net_src comp="32" pin="2"/><net_sink comp="68" pin=1"/></net>

<net id="78"><net_src comp="20" pin="0"/><net_sink comp="74" pin=1"/></net>

<net id="84"><net_src comp="22" pin="0"/><net_sink comp="79" pin=0"/></net>

<net id="85"><net_src comp="50" pin="2"/><net_sink comp="79" pin=1"/></net>

<net id="86"><net_src comp="24" pin="0"/><net_sink comp="79" pin=2"/></net>

<net id="91"><net_src comp="79" pin="3"/><net_sink comp="87" pin=0"/></net>

<net id="92"><net_src comp="26" pin="0"/><net_sink comp="87" pin=1"/></net>

<net id="97"><net_src comp="74" pin="2"/><net_sink comp="93" pin=0"/></net>

<net id="98"><net_src comp="87" pin="2"/><net_sink comp="93" pin=1"/></net>

<net id="104"><net_src comp="22" pin="0"/><net_sink comp="99" pin=0"/></net>

<net id="105"><net_src comp="24" pin="0"/><net_sink comp="99" pin=2"/></net>

<net id="111"><net_src comp="99" pin="3"/><net_sink comp="106" pin=0"/></net>

<net id="116"><net_src comp="62" pin="2"/><net_sink comp="112" pin=0"/></net>

<net id="117"><net_src comp="44" pin="2"/><net_sink comp="112" pin=1"/></net>

<net id="122"><net_src comp="106" pin="3"/><net_sink comp="118" pin=0"/></net>

<net id="123"><net_src comp="28" pin="0"/><net_sink comp="118" pin=1"/></net>

<net id="128"><net_src comp="38" pin="2"/><net_sink comp="124" pin=0"/></net>

<net id="129"><net_src comp="30" pin="0"/><net_sink comp="124" pin=1"/></net>

<net id="134"><net_src comp="28" pin="0"/><net_sink comp="130" pin=1"/></net>

<net id="139"><net_src comp="130" pin="2"/><net_sink comp="135" pin=0"/></net>

<net id="140"><net_src comp="124" pin="2"/><net_sink comp="135" pin=1"/></net>

<net id="145"><net_src comp="118" pin="2"/><net_sink comp="141" pin=0"/></net>

<net id="146"><net_src comp="135" pin="2"/><net_sink comp="141" pin=1"/></net>

<net id="151"><net_src comp="141" pin="2"/><net_sink comp="147" pin=0"/></net>

<net id="152"><net_src comp="93" pin="2"/><net_sink comp="147" pin=1"/></net>

<net id="157"><net_src comp="147" pin="2"/><net_sink comp="153" pin=0"/></net>

<net id="158"><net_src comp="56" pin="2"/><net_sink comp="153" pin=1"/></net>

<net id="163"><net_src comp="153" pin="2"/><net_sink comp="159" pin=0"/></net>

<net id="164"><net_src comp="26" pin="0"/><net_sink comp="159" pin=1"/></net>

<net id="169"><net_src comp="112" pin="2"/><net_sink comp="165" pin=0"/></net>

<net id="170"><net_src comp="159" pin="2"/><net_sink comp="165" pin=1"/></net>

<net id="174"><net_src comp="32" pin="2"/><net_sink comp="171" pin=0"/></net>

<net id="175"><net_src comp="171" pin="1"/><net_sink comp="74" pin=0"/></net>

<net id="176"><net_src comp="171" pin="1"/><net_sink comp="99" pin=1"/></net>

<net id="177"><net_src comp="171" pin="1"/><net_sink comp="106" pin=2"/></net>

<net id="178"><net_src comp="171" pin="1"/><net_sink comp="130" pin=0"/></net>

<net id="182"><net_src comp="68" pin="2"/><net_sink comp="179" pin=0"/></net>

<net id="183"><net_src comp="179" pin="1"/><net_sink comp="106" pin=1"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
 - Input state : 
	Port: getSolveNextPatchPairWhileCondition : p_read | {2 }
	Port: getSolveNextPatchPairWhileCondition : repeat_original | {2 }
	Port: getSolveNextPatchPairWhileCondition : white_space_height | {1 }
	Port: getSolveNextPatchPairWhileCondition : previous_white_space_height | {2 }
	Port: getSolveNextPatchPairWhileCondition : current_z_top_index | {2 }
	Port: getSolveNextPatchPairWhileCondition : p_read1 | {2 }
  - Chain level:
	State 1
	State 2
		xor_ln1025 : 1
		and_ln1025 : 1
		select_ln180 : 1
		icmp_ln1031 : 2
		and_ln1031 : 1
		or_ln1031 : 3
		or_ln1031_1 : 3
		or_ln1031_2 : 3
		xor_ln1031 : 3
		and_ln1031_1 : 3
		ret_ln1031 : 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|---------------------------------------------|---------|---------|
| Operation|               Functional Unit               |    FF   |   LUT   |
|----------|---------------------------------------------|---------|---------|
|          |              icmp_ln1025_fu_74              |    0    |    29   |
|          |                 exp4_fu_112                 |    0    |    20   |
|   icmp   |              icmp_ln1031_fu_118             |    0    |    29   |
|          |             icmp_ln1031_1_fu_124            |    0    |    20   |
|          |             icmp_ln1031_2_fu_130            |    0    |    29   |
|----------|---------------------------------------------|---------|---------|
|    sub   |               sub_ln180_fu_68               |    0    |    71   |
|----------|---------------------------------------------|---------|---------|
|  select  |             select_ln180_fu_106             |    0    |    63   |
|----------|---------------------------------------------|---------|---------|
|          |               and_ln1025_fu_93              |    0    |    2    |
|    and   |              and_ln1031_fu_135              |    0    |    2    |
|          |             and_ln1031_1_fu_165             |    0    |    2    |
|----------|---------------------------------------------|---------|---------|
|          |               or_ln1031_fu_141              |    0    |    2    |
|    or    |              or_ln1031_1_fu_147             |    0    |    2    |
|          |              or_ln1031_2_fu_153             |    0    |    2    |
|----------|---------------------------------------------|---------|---------|
|    xor   |               xor_ln1025_fu_87              |    0    |    2    |
|          |              xor_ln1031_fu_159              |    0    |    2    |
|----------|---------------------------------------------|---------|---------|
|          |      white_space_height_read_read_fu_32     |    0    |    0    |
|          |             p_read17_read_fu_38             |    0    |    0    |
|   read   |     current_z_top_index_read_read_fu_44     |    0    |    0    |
|          | previous_white_space_height_read_read_fu_50 |    0    |    0    |
|          |       repeat_original_read_read_fu_56       |    0    |    0    |
|          |           p_read_28261_read_fu_62           |    0    |    0    |
|----------|---------------------------------------------|---------|---------|
| bitselect|                  tmp_fu_79                  |    0    |    0    |
|          |                 tmp_30_fu_99                |    0    |    0    |
|----------|---------------------------------------------|---------|---------|
|   Total  |                                             |    0    |   277   |
|----------|---------------------------------------------|---------|---------|

Memories:
N/A

* Register list:
+-------------------------------+--------+
|                               |   FF   |
+-------------------------------+--------+
|       sub_ln180_reg_179       |   64   |
|white_space_height_read_reg_171|   64   |
+-------------------------------+--------+
|             Total             |   128  |
+-------------------------------+--------+

* Multiplexer (MUX) list: 
|--------|------|------|------|--------|
|  Comp  |  Pin | Size |  BW  | S x BW |
|--------|------|------|------|--------|
|  Total |      |      |      |    0   |
|--------|------|------|------|--------|



* Summary:
+-----------+--------+--------+
|           |   FF   |   LUT  |
+-----------+--------+--------+
|  Function |    0   |   277  |
|   Memory  |    -   |    -   |
|Multiplexer|    -   |    -   |
|  Register |   128  |    -   |
+-----------+--------+--------+
|   Total   |   128  |   277  |
+-----------+--------+--------+
