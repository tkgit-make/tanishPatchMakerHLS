

================================================================
== Vitis HLS Report for 'getSolveNextColumnWhileConditional'
================================================================
* Date:           Thu Aug  8 04:16:46 2024

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:45 MST 2020)
* Project:        PatchMaker_tanishGit
* Solution:       solutionLC (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu19p-fsvb3824-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  3.00 ns|  0.981 ns|     0.81 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        0|        0|      0 ns|      0 ns|    0|    0|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A



================================================================
== Utilization Estimates
================================================================
* Summary: 
+---------------------+---------+------+---------+---------+-----+
|         Name        | BRAM_18K|  DSP |    FF   |   LUT   | URAM|
+---------------------+---------+------+---------+---------+-----+
|DSP                  |        -|     -|        -|        -|    -|
|Expression           |        -|     -|        0|       64|    -|
|FIFO                 |        -|     -|        -|        -|    -|
|Instance             |        -|     -|        -|        -|    -|
|Memory               |        -|     -|        -|        -|    -|
|Multiplexer          |        -|     -|        -|        -|    -|
|Register             |        -|     -|        -|        -|    -|
+---------------------+---------+------+---------+---------+-----+
|Total                |        0|     0|        0|       64|    0|
+---------------------+---------+------+---------+---------+-----+
|Available SLR        |     1080|   960|  2042880|  1021440|   80|
+---------------------+---------+------+---------+---------+-----+
|Utilization SLR (%)  |        0|     0|        0|       ~0|    0|
+---------------------+---------+------+---------+---------+-----+
|Available            |     4320|  3840|  8171520|  4085760|  320|
+---------------------+---------+------+---------+---------+-----+
|Utilization (%)      |        0|     0|        0|       ~0|    0|
+---------------------+---------+------+---------+---------+-----+

+ Detail: 
    * Instance: 
    N/A

    * DSP: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    +-----------------------+----------+----+---+----+------------+------------+
    |     Variable Name     | Operation| DSP| FF| LUT| Bitwidth P0| Bitwidth P1|
    +-----------------------+----------+----+---+----+------------+------------+
    |and_ln861_fu_50_p2     |       and|   0|  0|   2|           1|           1|
    |ap_return              |       and|   0|  0|   2|           1|           1|
    |icmp_ln861_1_fu_38_p2  |      icmp|   0|  0|  20|          32|          27|
    |icmp_ln861_2_fu_44_p2  |      icmp|   0|  0|  20|          32|          24|
    |icmp_ln861_fu_32_p2    |      icmp|   0|  0|  20|          32|          27|
    +-----------------------+----------+----+---+----+------------+------------+
    |Total                  |          |   0|  0|  64|          98|          80|
    +-----------------------+----------+----+---+----+------------+------------+

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
+--------------------------+-----+-----+------------+------------------------------------+--------------+
|         RTL Ports        | Dir | Bits|  Protocol  |            Source Object           |    C Type    |
+--------------------------+-----+-----+------------+------------------------------------+--------------+
|ap_ready                  |  out|    1|  ap_ctrl_hs|  getSolveNextColumnWhileConditional|  return value|
|ap_return                 |  out|    1|  ap_ctrl_hs|  getSolveNextColumnWhileConditional|  return value|
|c_corner                  |   in|   32|     ap_none|                            c_corner|        scalar|
|nPatchesInColumn          |   in|   32|     ap_none|                    nPatchesInColumn|        scalar|
|projectionOfCornerToBeam  |   in|   32|     ap_none|            projectionOfCornerToBeam|        scalar|
+--------------------------+-----+-----+------------+------------------------------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 1
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.98>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%projectionOfCornerToBeam_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %projectionOfCornerToBeam" [patchMaker.cpp:857]   --->   Operation 2 'read' 'projectionOfCornerToBeam_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%nPatchesInColumn_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %nPatchesInColumn" [patchMaker.cpp:857]   --->   Operation 3 'read' 'nPatchesInColumn_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%c_corner_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %c_corner" [patchMaker.cpp:857]   --->   Operation 4 'read' 'c_corner_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.85ns)   --->   "%icmp_ln861 = icmp_sgt  i32 %c_corner_read, i32 4244967196" [patchMaker.cpp:861]   --->   Operation 5 'icmp' 'icmp_ln861' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 6 [1/1] (0.85ns)   --->   "%icmp_ln861_1 = icmp_slt  i32 %nPatchesInColumn_read, i32 100000000" [patchMaker.cpp:861]   --->   Operation 6 'icmp' 'icmp_ln861_1' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 7 [1/1] (0.85ns)   --->   "%icmp_ln861_2 = icmp_slt  i32 %projectionOfCornerToBeam_read, i32 15000000" [patchMaker.cpp:861]   --->   Operation 7 'icmp' 'icmp_ln861_2' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 8 [1/1] (0.00ns) (grouped into LUT with out node and_ln861_1)   --->   "%and_ln861 = and i1 %icmp_ln861_1, i1 %icmp_ln861_2" [patchMaker.cpp:861]   --->   Operation 8 'and' 'and_ln861' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 9 [1/1] (0.12ns) (out node of the LUT)   --->   "%and_ln861_1 = and i1 %and_ln861, i1 %icmp_ln861" [patchMaker.cpp:861]   --->   Operation 9 'and' 'and_ln861_1' <Predicate = true> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%ret_ln861 = ret i1 %and_ln861_1" [patchMaker.cpp:861]   --->   Operation 10 'ret' 'ret_ln861' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 1
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 0
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ c_corner]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ nPatchesInColumn]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ projectionOfCornerToBeam]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
projectionOfCornerToBeam_read (read) [ 00]
nPatchesInColumn_read         (read) [ 00]
c_corner_read                 (read) [ 00]
icmp_ln861                    (icmp) [ 00]
icmp_ln861_1                  (icmp) [ 00]
icmp_ln861_2                  (icmp) [ 00]
and_ln861                     (and ) [ 00]
and_ln861_1                   (and ) [ 00]
ret_ln861                     (ret ) [ 00]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="c_corner">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="c_corner"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="nPatchesInColumn">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="nPatchesInColumn"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="projectionOfCornerToBeam">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="projectionOfCornerToBeam"/></StgValue>
</bind>
</comp>

<comp id="6" class="1001" name="const_6">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i32"/></StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="14" class="1004" name="projectionOfCornerToBeam_read_read_fu_14">
<pin_list>
<pin id="15" dir="0" index="0" bw="32" slack="0"/>
<pin id="16" dir="0" index="1" bw="32" slack="0"/>
<pin id="17" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="projectionOfCornerToBeam_read/1 "/>
</bind>
</comp>

<comp id="20" class="1004" name="nPatchesInColumn_read_read_fu_20">
<pin_list>
<pin id="21" dir="0" index="0" bw="32" slack="0"/>
<pin id="22" dir="0" index="1" bw="32" slack="0"/>
<pin id="23" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="nPatchesInColumn_read/1 "/>
</bind>
</comp>

<comp id="26" class="1004" name="c_corner_read_read_fu_26">
<pin_list>
<pin id="27" dir="0" index="0" bw="32" slack="0"/>
<pin id="28" dir="0" index="1" bw="32" slack="0"/>
<pin id="29" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="c_corner_read/1 "/>
</bind>
</comp>

<comp id="32" class="1004" name="icmp_ln861_fu_32">
<pin_list>
<pin id="33" dir="0" index="0" bw="32" slack="0"/>
<pin id="34" dir="0" index="1" bw="32" slack="0"/>
<pin id="35" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln861/1 "/>
</bind>
</comp>

<comp id="38" class="1004" name="icmp_ln861_1_fu_38">
<pin_list>
<pin id="39" dir="0" index="0" bw="32" slack="0"/>
<pin id="40" dir="0" index="1" bw="32" slack="0"/>
<pin id="41" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln861_1/1 "/>
</bind>
</comp>

<comp id="44" class="1004" name="icmp_ln861_2_fu_44">
<pin_list>
<pin id="45" dir="0" index="0" bw="32" slack="0"/>
<pin id="46" dir="0" index="1" bw="32" slack="0"/>
<pin id="47" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln861_2/1 "/>
</bind>
</comp>

<comp id="50" class="1004" name="and_ln861_fu_50">
<pin_list>
<pin id="51" dir="0" index="0" bw="1" slack="0"/>
<pin id="52" dir="0" index="1" bw="1" slack="0"/>
<pin id="53" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln861/1 "/>
</bind>
</comp>

<comp id="56" class="1004" name="and_ln861_1_fu_56">
<pin_list>
<pin id="57" dir="0" index="0" bw="1" slack="0"/>
<pin id="58" dir="0" index="1" bw="1" slack="0"/>
<pin id="59" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln861_1/1 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="18"><net_src comp="6" pin="0"/><net_sink comp="14" pin=0"/></net>

<net id="19"><net_src comp="4" pin="0"/><net_sink comp="14" pin=1"/></net>

<net id="24"><net_src comp="6" pin="0"/><net_sink comp="20" pin=0"/></net>

<net id="25"><net_src comp="2" pin="0"/><net_sink comp="20" pin=1"/></net>

<net id="30"><net_src comp="6" pin="0"/><net_sink comp="26" pin=0"/></net>

<net id="31"><net_src comp="0" pin="0"/><net_sink comp="26" pin=1"/></net>

<net id="36"><net_src comp="26" pin="2"/><net_sink comp="32" pin=0"/></net>

<net id="37"><net_src comp="8" pin="0"/><net_sink comp="32" pin=1"/></net>

<net id="42"><net_src comp="20" pin="2"/><net_sink comp="38" pin=0"/></net>

<net id="43"><net_src comp="10" pin="0"/><net_sink comp="38" pin=1"/></net>

<net id="48"><net_src comp="14" pin="2"/><net_sink comp="44" pin=0"/></net>

<net id="49"><net_src comp="12" pin="0"/><net_sink comp="44" pin=1"/></net>

<net id="54"><net_src comp="38" pin="2"/><net_sink comp="50" pin=0"/></net>

<net id="55"><net_src comp="44" pin="2"/><net_sink comp="50" pin=1"/></net>

<net id="60"><net_src comp="50" pin="2"/><net_sink comp="56" pin=0"/></net>

<net id="61"><net_src comp="32" pin="2"/><net_sink comp="56" pin=1"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
 - Input state : 
	Port: getSolveNextColumnWhileConditional : c_corner | {1 }
	Port: getSolveNextColumnWhileConditional : nPatchesInColumn | {1 }
	Port: getSolveNextColumnWhileConditional : projectionOfCornerToBeam | {1 }
  - Chain level:
	State 1
		and_ln861 : 1
		and_ln861_1 : 1
		ret_ln861 : 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|------------------------------------------|---------|---------|
| Operation|              Functional Unit             |    FF   |   LUT   |
|----------|------------------------------------------|---------|---------|
|          |             icmp_ln861_fu_32             |    0    |    20   |
|   icmp   |            icmp_ln861_1_fu_38            |    0    |    20   |
|          |            icmp_ln861_2_fu_44            |    0    |    20   |
|----------|------------------------------------------|---------|---------|
|    and   |              and_ln861_fu_50             |    0    |    2    |
|          |             and_ln861_1_fu_56            |    0    |    2    |
|----------|------------------------------------------|---------|---------|
|          | projectionOfCornerToBeam_read_read_fu_14 |    0    |    0    |
|   read   |     nPatchesInColumn_read_read_fu_20     |    0    |    0    |
|          |         c_corner_read_read_fu_26         |    0    |    0    |
|----------|------------------------------------------|---------|---------|
|   Total  |                                          |    0    |    64   |
|----------|------------------------------------------|---------|---------|

Memories:
N/A

* Register list:
N/A

* Multiplexer (MUX) list: 
|--------|------|------|------|--------|
|  Comp  |  Pin | Size |  BW  | S x BW |
|--------|------|------|------|--------|
|  Total |      |      |      |    0   |
|--------|------|------|------|--------|



* Summary:
+-----------+--------+--------+
|           |   FF   |   LUT  |
+-----------+--------+--------+
|  Function |    0   |   64   |
|   Memory  |    -   |    -   |
|Multiplexer|    -   |    -   |
|  Register |    -   |    -   |
+-----------+--------+--------+
|   Total   |    0   |   64   |
+-----------+--------+--------+
