// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MPSQ_solveComplmentaryPatch (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        n_patches_i,
        n_patches_o,
        n_patches_o_ap_vld,
        GDn_points_address0,
        GDn_points_ce0,
        GDn_points_q0,
        patches_superpoints_address0,
        patches_superpoints_ce0,
        patches_superpoints_we0,
        patches_superpoints_d0,
        patches_superpoints_q0,
        patches_superpoints_address1,
        patches_superpoints_ce1,
        patches_superpoints_q1,
        ppl,
        nPatchesAtOriginal,
        previous_z_top_min_read,
        complementary_apexZ0,
        white_space_height_read,
        original_c,
        original_d,
        p_read12,
        p_read13,
        z_top_min_read,
        GDarrayDecoded_address0,
        GDarrayDecoded_ce0,
        GDarrayDecoded_q0,
        patches_parameters_address0,
        patches_parameters_ce0,
        patches_parameters_we0,
        patches_parameters_d0,
        patches_parameters_q0,
        patches_parameters_address1,
        patches_parameters_ce1,
        patches_parameters_q1,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din1,
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din2,
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din3,
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din4,
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din5,
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_dout0,
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_ce,
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_start,
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_ready,
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_done,
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_idle,
        grp_fu_1631_p_din0,
        grp_fu_1631_p_din1,
        grp_fu_1631_p_dout0,
        grp_fu_1631_p_ce
);

parameter    ap_ST_fsm_state1 = 77'd1;
parameter    ap_ST_fsm_state2 = 77'd2;
parameter    ap_ST_fsm_state3 = 77'd4;
parameter    ap_ST_fsm_state4 = 77'd8;
parameter    ap_ST_fsm_state5 = 77'd16;
parameter    ap_ST_fsm_state6 = 77'd32;
parameter    ap_ST_fsm_state7 = 77'd64;
parameter    ap_ST_fsm_state8 = 77'd128;
parameter    ap_ST_fsm_pp0_stage0 = 77'd256;
parameter    ap_ST_fsm_state11 = 77'd512;
parameter    ap_ST_fsm_pp1_stage0 = 77'd1024;
parameter    ap_ST_fsm_state14 = 77'd2048;
parameter    ap_ST_fsm_pp2_stage0 = 77'd4096;
parameter    ap_ST_fsm_state17 = 77'd8192;
parameter    ap_ST_fsm_pp3_stage0 = 77'd16384;
parameter    ap_ST_fsm_state20 = 77'd32768;
parameter    ap_ST_fsm_pp4_stage0 = 77'd65536;
parameter    ap_ST_fsm_state29 = 77'd131072;
parameter    ap_ST_fsm_pp5_stage0 = 77'd262144;
parameter    ap_ST_fsm_state33 = 77'd524288;
parameter    ap_ST_fsm_pp6_stage0 = 77'd1048576;
parameter    ap_ST_fsm_state40 = 77'd2097152;
parameter    ap_ST_fsm_pp7_stage0 = 77'd4194304;
parameter    ap_ST_fsm_state43 = 77'd8388608;
parameter    ap_ST_fsm_state44 = 77'd16777216;
parameter    ap_ST_fsm_state45 = 77'd33554432;
parameter    ap_ST_fsm_state46 = 77'd67108864;
parameter    ap_ST_fsm_state47 = 77'd134217728;
parameter    ap_ST_fsm_state48 = 77'd268435456;
parameter    ap_ST_fsm_state49 = 77'd536870912;
parameter    ap_ST_fsm_state50 = 77'd1073741824;
parameter    ap_ST_fsm_state51 = 77'd2147483648;
parameter    ap_ST_fsm_state52 = 77'd4294967296;
parameter    ap_ST_fsm_state53 = 77'd8589934592;
parameter    ap_ST_fsm_state54 = 77'd17179869184;
parameter    ap_ST_fsm_state55 = 77'd34359738368;
parameter    ap_ST_fsm_state56 = 77'd68719476736;
parameter    ap_ST_fsm_state57 = 77'd137438953472;
parameter    ap_ST_fsm_state58 = 77'd274877906944;
parameter    ap_ST_fsm_state59 = 77'd549755813888;
parameter    ap_ST_fsm_state60 = 77'd1099511627776;
parameter    ap_ST_fsm_state61 = 77'd2199023255552;
parameter    ap_ST_fsm_state62 = 77'd4398046511104;
parameter    ap_ST_fsm_state63 = 77'd8796093022208;
parameter    ap_ST_fsm_state64 = 77'd17592186044416;
parameter    ap_ST_fsm_state65 = 77'd35184372088832;
parameter    ap_ST_fsm_state66 = 77'd70368744177664;
parameter    ap_ST_fsm_state67 = 77'd140737488355328;
parameter    ap_ST_fsm_state68 = 77'd281474976710656;
parameter    ap_ST_fsm_state69 = 77'd562949953421312;
parameter    ap_ST_fsm_state70 = 77'd1125899906842624;
parameter    ap_ST_fsm_state71 = 77'd2251799813685248;
parameter    ap_ST_fsm_state72 = 77'd4503599627370496;
parameter    ap_ST_fsm_state73 = 77'd9007199254740992;
parameter    ap_ST_fsm_state74 = 77'd18014398509481984;
parameter    ap_ST_fsm_state75 = 77'd36028797018963968;
parameter    ap_ST_fsm_state76 = 77'd72057594037927936;
parameter    ap_ST_fsm_state77 = 77'd144115188075855872;
parameter    ap_ST_fsm_state78 = 77'd288230376151711744;
parameter    ap_ST_fsm_state79 = 77'd576460752303423488;
parameter    ap_ST_fsm_state80 = 77'd1152921504606846976;
parameter    ap_ST_fsm_state81 = 77'd2305843009213693952;
parameter    ap_ST_fsm_state82 = 77'd4611686018427387904;
parameter    ap_ST_fsm_state83 = 77'd9223372036854775808;
parameter    ap_ST_fsm_state84 = 77'd18446744073709551616;
parameter    ap_ST_fsm_state85 = 77'd36893488147419103232;
parameter    ap_ST_fsm_state86 = 77'd73786976294838206464;
parameter    ap_ST_fsm_state87 = 77'd147573952589676412928;
parameter    ap_ST_fsm_state88 = 77'd295147905179352825856;
parameter    ap_ST_fsm_state89 = 77'd590295810358705651712;
parameter    ap_ST_fsm_state90 = 77'd1180591620717411303424;
parameter    ap_ST_fsm_state91 = 77'd2361183241434822606848;
parameter    ap_ST_fsm_state92 = 77'd4722366482869645213696;
parameter    ap_ST_fsm_state93 = 77'd9444732965739290427392;
parameter    ap_ST_fsm_state94 = 77'd18889465931478580854784;
parameter    ap_ST_fsm_state95 = 77'd37778931862957161709568;
parameter    ap_ST_fsm_state96 = 77'd75557863725914323419136;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] n_patches_i;
output  [7:0] n_patches_o;
output   n_patches_o_ap_vld;
output  [2:0] GDn_points_address0;
output   GDn_points_ce0;
input  [31:0] GDn_points_q0;
output  [11:0] patches_superpoints_address0;
output   patches_superpoints_ce0;
output   patches_superpoints_we0;
output  [63:0] patches_superpoints_d0;
input  [63:0] patches_superpoints_q0;
output  [11:0] patches_superpoints_address1;
output   patches_superpoints_ce1;
input  [63:0] patches_superpoints_q1;
input  [31:0] ppl;
input  [7:0] nPatchesAtOriginal;
input  [31:0] previous_z_top_min_read;
input  [31:0] complementary_apexZ0;
input  [63:0] white_space_height_read;
input  [31:0] original_c;
input  [31:0] original_d;
input  [31:0] p_read12;
input  [31:0] p_read13;
input  [31:0] z_top_min_read;
output  [11:0] GDarrayDecoded_address0;
output   GDarrayDecoded_ce0;
input  [31:0] GDarrayDecoded_q0;
output  [11:0] patches_parameters_address0;
output   patches_parameters_ce0;
output   patches_parameters_we0;
output  [31:0] patches_parameters_d0;
input  [31:0] patches_parameters_q0;
output  [11:0] patches_parameters_address1;
output   patches_parameters_ce1;
input  [31:0] patches_parameters_q1;
output  [63:0] ap_return_0;
output  [7:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;
output  [31:0] ap_return_4;
output  [31:0] ap_return_5;
output  [63:0] ap_return_6;
output  [31:0] ap_return_7;
output  [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din1;
output  [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din2;
output  [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din3;
output  [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din4;
output  [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din5;
input  [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_613_p_dout0;
output   grp_straightLineProjectorFromLayerIJtoK_fu_613_p_ce;
output   grp_straightLineProjectorFromLayerIJtoK_fu_613_p_start;
input   grp_straightLineProjectorFromLayerIJtoK_fu_613_p_ready;
input   grp_straightLineProjectorFromLayerIJtoK_fu_613_p_done;
input   grp_straightLineProjectorFromLayerIJtoK_fu_613_p_idle;
output  [32:0] grp_fu_1631_p_din0;
output  [63:0] grp_fu_1631_p_din1;
input  [63:0] grp_fu_1631_p_dout0;
output   grp_fu_1631_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] n_patches_o;
reg n_patches_o_ap_vld;
reg[2:0] GDn_points_address0;
reg GDn_points_ce0;
reg[11:0] patches_superpoints_address0;
reg patches_superpoints_ce0;
reg patches_superpoints_we0;
reg[63:0] patches_superpoints_d0;
reg[11:0] patches_superpoints_address1;
reg patches_superpoints_ce1;
reg[11:0] GDarrayDecoded_address0;
reg GDarrayDecoded_ce0;
reg[11:0] patches_parameters_address0;
reg patches_parameters_ce0;
reg patches_parameters_we0;
reg[31:0] patches_parameters_d0;
reg[11:0] patches_parameters_address1;
reg patches_parameters_ce1;
reg[63:0] ap_return_0;
reg[7:0] ap_return_1;
reg[31:0] ap_return_2;
reg[31:0] ap_return_3;
reg[31:0] ap_return_4;
reg[31:0] ap_return_5;
reg[63:0] ap_return_6;
reg[31:0] ap_return_7;

(* fsm_encoding = "none" *) reg   [76:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [2:0] i_2_reg_514;
reg   [2:0] i_4_reg_534;
reg   [2:0] i_3_reg_545;
reg   [2:0] i_5_reg_585;
reg   [2:0] i_6_reg_596;
reg   [2:0] i_7_reg_607;
reg   [2:0] i_8_reg_619;
reg   [2:0] i_9_reg_630;
reg   [63:0] layerSMin_reg_641;
reg   [7:0] layerWithSmallestShift_reg_653;
reg   [7:0] reg_808;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state2;
wire   [8:0] zext_ln1104_fu_813_p1;
reg   [8:0] zext_ln1104_reg_1858;
wire   [2:0] add_ln1110_fu_817_p2;
reg   [2:0] add_ln1110_reg_1864;
wire    ap_CS_fsm_state3;
wire   [63:0] zext_ln1108_fu_823_p1;
reg   [63:0] zext_ln1108_reg_1870;
wire   [0:0] icmp_ln1108_fu_827_p2;
wire   [0:0] icmp_ln870_fu_833_p2;
reg   [0:0] icmp_ln870_reg_1879;
wire   [8:0] add_ln1115_fu_837_p2;
reg   [8:0] add_ln1115_reg_1883;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_760_ap_return;
reg   [31:0] agg_tmp7_reg_1888;
wire    ap_CS_fsm_state7;
wire   [2:0] add_ln1117_fu_842_p2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state9_pp0_stage0_iter0;
wire    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln1117_fu_848_p2;
reg   [0:0] icmp_ln1117_reg_1898;
wire   [63:0] i_2_cast_fu_854_p1;
reg   [63:0] i_2_cast_reg_1902;
wire   [0:0] tmp_fu_859_p3;
reg   [0:0] tmp_reg_1912;
wire    ap_CS_fsm_state11;
wire   [31:0] add_ln1137_fu_866_p2;
reg   [31:0] add_ln1137_reg_1916;
wire   [9:0] zext_ln1140_fu_877_p1;
reg   [9:0] zext_ln1140_reg_1921;
wire   [31:0] add_ln1127_fu_881_p2;
reg   [31:0] add_ln1127_reg_1926;
wire  signed [9:0] sext_ln1130_fu_892_p1;
reg  signed [9:0] sext_ln1130_reg_1931;
wire   [2:0] add_ln1140_fu_896_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state12_pp1_stage0_iter0;
wire    ap_block_state13_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln1140_fu_902_p2;
reg   [0:0] icmp_ln1140_reg_1941;
wire   [63:0] i_4_cast_fu_908_p1;
reg   [63:0] i_4_cast_reg_1945;
wire    ap_CS_fsm_state14;
wire   [2:0] add_ln1130_fu_913_p2;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state15_pp2_stage0_iter0;
wire    ap_block_state16_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [0:0] icmp_ln1130_fu_919_p2;
reg   [0:0] icmp_ln1130_reg_1965;
wire   [63:0] i_3_cast_fu_925_p1;
reg   [63:0] i_3_cast_reg_1969;
wire   [31:0] select_ln1146_fu_947_p3;
reg   [31:0] select_ln1146_reg_1979;
wire    ap_CS_fsm_state17;
wire   [2:0] add_ln1149_fu_955_p2;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state18_pp3_stage0_iter0;
wire    ap_block_state19_pp3_stage0_iter1;
wire    ap_block_pp3_stage0_11001;
wire   [0:0] icmp_ln1149_fu_961_p2;
reg   [0:0] icmp_ln1149_reg_1992;
reg   [2:0] new_z_i_index_addr_3_reg_1996;
wire   [2:0] add_ln1155_fu_1002_p2;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter0;
wire    ap_block_state21_pp4_stage0_iter0;
wire    ap_block_state22_pp4_stage0_iter1;
wire    ap_block_state23_pp4_stage0_iter2;
wire    ap_block_state24_pp4_stage0_iter3;
wire    ap_block_state25_pp4_stage0_iter4;
wire    ap_block_state26_pp4_stage0_iter5;
wire    ap_block_state27_pp4_stage0_iter6;
wire    ap_block_state28_pp4_stage0_iter7;
wire    ap_block_pp4_stage0_11001;
wire   [0:0] icmp_ln1155_fu_1008_p2;
reg   [0:0] icmp_ln1155_reg_2012;
reg   [0:0] icmp_ln1155_reg_2012_pp4_iter1_reg;
reg   [0:0] icmp_ln1155_reg_2012_pp4_iter2_reg;
reg   [0:0] icmp_ln1155_reg_2012_pp4_iter3_reg;
reg   [0:0] icmp_ln1155_reg_2012_pp4_iter4_reg;
reg   [0:0] icmp_ln1155_reg_2012_pp4_iter5_reg;
reg   [0:0] icmp_ln1155_reg_2012_pp4_iter6_reg;
reg   [2:0] new_z_i_index_addr_4_reg_2016;
reg   [2:0] new_z_i_index_addr_4_reg_2016_pp4_iter1_reg;
reg   [2:0] new_z_i_index_addr_4_reg_2016_pp4_iter2_reg;
reg   [2:0] new_z_i_index_addr_4_reg_2016_pp4_iter3_reg;
reg   [2:0] new_z_i_index_addr_4_reg_2016_pp4_iter4_reg;
reg   [2:0] new_z_i_index_addr_4_reg_2016_pp4_iter5_reg;
reg   [2:0] new_z_i_index_addr_4_reg_2016_pp4_iter6_reg;
wire   [7:0] new_z_i_index_q0;
reg   [7:0] new_z_i_index_load_1_reg_2022;
reg    ap_enable_reg_pp4_iter1;
wire   [31:0] grp_fu_775_p1;
reg   [31:0] conv_reg_2032;
reg   [31:0] conv_reg_2032_pp4_iter5_reg;
reg   [7:0] tmp_23_reg_2038;
wire   [22:0] tmp_24_fu_1086_p1;
reg   [22:0] tmp_24_reg_2044;
wire   [2:0] add_ln1162_fu_1188_p2;
reg   [2:0] add_ln1162_reg_2049;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter0;
wire    ap_block_state30_pp5_stage0_iter0;
wire    ap_block_state31_pp5_stage0_iter1;
wire    ap_block_state32_pp5_stage0_iter2;
wire    ap_block_pp5_stage0_11001;
wire   [0:0] icmp_ln1162_fu_1194_p2;
reg   [0:0] icmp_ln1162_reg_2054;
reg   [0:0] icmp_ln1162_reg_2054_pp5_iter1_reg;
wire   [63:0] i_7_cast_fu_1200_p1;
reg   [63:0] i_7_cast_reg_2058;
reg   [63:0] i_7_cast_reg_2058_pp5_iter1_reg;
wire   [0:0] icmp_ln1170_fu_1230_p2;
reg   [0:0] icmp_ln1170_reg_2103;
wire    ap_CS_fsm_pp6_stage0;
wire    ap_block_state34_pp6_stage0_iter0;
wire    ap_block_state35_pp6_stage0_iter1;
wire    ap_block_state36_pp6_stage0_iter2;
wire    ap_block_state37_pp6_stage0_iter3;
wire    ap_block_state38_pp6_stage0_iter4;
wire    ap_block_state39_pp6_stage0_iter5;
wire    ap_block_pp6_stage0_11001;
reg   [0:0] icmp_ln1170_reg_2103_pp6_iter1_reg;
wire   [2:0] add_ln1175_fu_1236_p2;
reg   [2:0] add_ln1175_reg_2107;
reg    ap_enable_reg_pp6_iter0;
reg   [2:0] add_ln1175_reg_2107_pp6_iter1_reg;
wire   [1:0] trunc_ln1172_fu_1247_p1;
reg   [1:0] trunc_ln1172_reg_2118;
reg   [1:0] trunc_ln1172_reg_2118_pp6_iter1_reg;
reg   [1:0] trunc_ln1172_reg_2118_pp6_iter2_reg;
reg   [1:0] trunc_ln1172_reg_2118_pp6_iter3_reg;
reg   [1:0] trunc_ln1172_reg_2118_pp6_iter4_reg;
wire   [31:0] new_z_i_V_q0;
reg   [31:0] new_z_i_V_load_reg_2122;
reg    ap_enable_reg_pp6_iter1;
wire  signed [32:0] sext_ln1183_fu_1276_p1;
reg  signed [32:0] sext_ln1183_reg_2127;
wire    ap_CS_fsm_state40;
wire   [2:0] add_ln1183_fu_1279_p2;
wire    ap_CS_fsm_pp7_stage0;
reg    ap_enable_reg_pp7_iter0;
wire    ap_block_state41_pp7_stage0_iter0;
wire    ap_block_state42_pp7_stage0_iter1;
wire    ap_block_pp7_stage0_11001;
wire   [0:0] icmp_ln1183_fu_1285_p2;
reg   [0:0] icmp_ln1183_reg_2141;
wire   [1:0] trunc_ln534_fu_1291_p1;
reg   [1:0] trunc_ln534_reg_2145;
wire   [31:0] tmp_8_fu_1295_p6;
reg   [31:0] tmp_8_reg_2150;
wire   [7:0] layerWithSmallestShift_1_fu_1352_p3;
reg    ap_enable_reg_pp7_iter1;
wire   [63:0] layerSMin_1_fu_1360_p3;
wire   [1:0] trunc_ln1192_fu_1368_p1;
reg   [1:0] trunc_ln1192_reg_2165;
wire    ap_CS_fsm_state43;
wire   [11:0] tmp_21_cast_fu_1375_p3;
reg   [11:0] tmp_21_cast_reg_2170;
wire  signed [31:0] lhs_fu_1394_p6;
reg  signed [31:0] lhs_reg_2181;
wire    ap_CS_fsm_state44;
wire  signed [31:0] lhs_2_fu_1454_p3;
reg  signed [31:0] lhs_2_reg_2192;
wire    ap_CS_fsm_state45;
wire  signed [31:0] lhs_3_fu_1508_p3;
reg  signed [31:0] lhs_3_reg_2203;
wire  signed [31:0] lhs_4_fu_1551_p3;
reg  signed [31:0] lhs_4_reg_2209;
wire    ap_CS_fsm_state46;
wire   [32:0] ret_6_fu_1561_p2;
reg   [32:0] ret_6_reg_2215;
wire    ap_CS_fsm_state47;
wire  signed [63:0] sext_ln534_fu_1566_p1;
wire    ap_CS_fsm_state48;
reg   [0:0] tmp_19_reg_2225;
wire   [0:0] icmp_ln1237_fu_1582_p2;
reg   [0:0] icmp_ln1237_reg_2230;
wire   [31:0] select_ln1220_fu_1590_p3;
reg   [31:0] select_ln1220_reg_2234;
wire    ap_CS_fsm_state50;
wire   [8:0] zext_ln1256_fu_1602_p1;
reg   [8:0] zext_ln1256_reg_2241;
wire   [31:0] grp_makePatch_alignedToLine_fu_699_ap_return;
reg   [31:0] ppl_assign2_reg_2246;
wire    ap_CS_fsm_state53;
wire   [7:0] lastPatchIdx_fu_1607_p2;
reg   [7:0] lastPatchIdx_reg_2251;
wire   [4:0] trunc_ln1268_fu_1613_p1;
reg   [4:0] trunc_ln1268_reg_2259;
wire   [0:0] icmp_ln1290_fu_1627_p2;
reg   [0:0] icmp_ln1290_reg_2264;
wire    ap_CS_fsm_state55;
wire  signed [63:0] sext_ln534_1_fu_1725_p1;
reg  signed [63:0] sext_ln534_1_reg_2278;
wire    ap_CS_fsm_state56;
wire   [8:0] zext_ln1293_fu_1729_p1;
reg   [8:0] zext_ln1293_reg_2283;
wire   [7:0] thirdLastPatchIdx_fu_1732_p2;
reg   [7:0] thirdLastPatchIdx_reg_2288;
wire   [0:0] icmp_ln1300_fu_1738_p2;
reg   [0:0] icmp_ln1300_reg_2293;
wire    ap_CS_fsm_state57;
wire   [2:0] add_ln1300_fu_1744_p2;
reg   [2:0] add_ln1300_reg_2297;
wire   [31:0] add_ln1320_fu_1794_p2;
wire    ap_CS_fsm_state96;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state9;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state12;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state15;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state18;
reg    ap_enable_reg_pp3_iter1;
wire    ap_CS_fsm_state20;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state21;
reg    ap_enable_reg_pp4_iter2;
reg    ap_enable_reg_pp4_iter3;
reg    ap_enable_reg_pp4_iter4;
reg    ap_enable_reg_pp4_iter5;
reg    ap_enable_reg_pp4_iter6;
reg    ap_enable_reg_pp4_iter7;
wire    ap_CS_fsm_state29;
wire    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state30;
reg    ap_enable_reg_pp5_iter1;
reg    ap_enable_reg_pp5_iter2;
wire    ap_CS_fsm_state33;
wire    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state34;
reg    ap_enable_reg_pp6_iter2;
reg    ap_enable_reg_pp6_iter3;
reg    ap_enable_reg_pp6_iter4;
reg    ap_enable_reg_pp6_iter5;
wire    ap_block_pp7_stage0_subdone;
reg    ap_condition_pp7_exit_iter0_state41;
reg   [2:0] current_z_i_index_address0;
reg    current_z_i_index_ce0;
reg    current_z_i_index_we0;
wire   [7:0] current_z_i_index_q0;
reg   [2:0] new_z_i_index_address0;
reg    new_z_i_index_ce0;
reg    new_z_i_index_we0;
reg   [7:0] new_z_i_index_d0;
reg   [2:0] new_z_i_index_address1;
reg    new_z_i_index_ce1;
reg    new_z_i_index_we1;
wire   [7:0] new_z_i_index_d1;
wire   [7:0] new_z_i_index_q1;
reg   [2:0] new_z_i_V_address0;
reg    new_z_i_V_ce0;
reg    new_z_i_V_we0;
wire    grp_makePatch_alignedToLine_fu_699_ap_start;
wire    grp_makePatch_alignedToLine_fu_699_ap_done;
wire    grp_makePatch_alignedToLine_fu_699_ap_idle;
wire    grp_makePatch_alignedToLine_fu_699_ap_ready;
wire   [7:0] grp_makePatch_alignedToLine_fu_699_n_patches_o;
wire    grp_makePatch_alignedToLine_fu_699_n_patches_o_ap_vld;
wire   [2:0] grp_makePatch_alignedToLine_fu_699_GDn_points_address0;
wire    grp_makePatch_alignedToLine_fu_699_GDn_points_ce0;
wire   [11:0] grp_makePatch_alignedToLine_fu_699_patches_superpoints_address0;
wire    grp_makePatch_alignedToLine_fu_699_patches_superpoints_ce0;
wire    grp_makePatch_alignedToLine_fu_699_patches_superpoints_we0;
wire   [63:0] grp_makePatch_alignedToLine_fu_699_patches_superpoints_d0;
reg   [31:0] grp_makePatch_alignedToLine_fu_699_z_top;
reg   [31:0] grp_makePatch_alignedToLine_fu_699_p_read;
wire   [11:0] grp_makePatch_alignedToLine_fu_699_GDarrayDecoded_address0;
wire    grp_makePatch_alignedToLine_fu_699_GDarrayDecoded_ce0;
wire   [11:0] grp_makePatch_alignedToLine_fu_699_patches_parameters_address0;
wire    grp_makePatch_alignedToLine_fu_699_patches_parameters_ce0;
wire    grp_makePatch_alignedToLine_fu_699_patches_parameters_we0;
wire   [31:0] grp_makePatch_alignedToLine_fu_699_patches_parameters_d0;
wire    grp_areWedgeSuperPointsEqual_fu_722_ap_start;
wire    grp_areWedgeSuperPointsEqual_fu_722_ap_done;
wire    grp_areWedgeSuperPointsEqual_fu_722_ap_idle;
wire    grp_areWedgeSuperPointsEqual_fu_722_ap_ready;
wire   [11:0] grp_areWedgeSuperPointsEqual_fu_722_wsp1_2_address0;
wire    grp_areWedgeSuperPointsEqual_fu_722_wsp1_2_ce0;
wire   [11:0] grp_areWedgeSuperPointsEqual_fu_722_wsp1_2_address1;
wire    grp_areWedgeSuperPointsEqual_fu_722_wsp1_2_ce1;
wire   [0:0] grp_areWedgeSuperPointsEqual_fu_722_ap_return;
wire    grp_delete_patch_fu_734_ap_start;
wire    grp_delete_patch_fu_734_ap_done;
wire    grp_delete_patch_fu_734_ap_idle;
wire    grp_delete_patch_fu_734_ap_ready;
wire   [7:0] grp_delete_patch_fu_734_n_patches;
wire    grp_delete_patch_fu_734_n_patches_ap_vld;
wire   [11:0] grp_delete_patch_fu_734_patches_superpoints_address0;
wire    grp_delete_patch_fu_734_patches_superpoints_ce0;
wire    grp_delete_patch_fu_734_patches_superpoints_we0;
wire   [63:0] grp_delete_patch_fu_734_patches_superpoints_d0;
wire   [11:0] grp_delete_patch_fu_734_patches_superpoints_address1;
wire    grp_delete_patch_fu_734_patches_superpoints_ce1;
reg   [8:0] grp_delete_patch_fu_734_index;
wire   [11:0] grp_delete_patch_fu_734_patches_parameters_V_address0;
wire    grp_delete_patch_fu_734_patches_parameters_V_ce0;
wire    grp_delete_patch_fu_734_patches_parameters_V_we0;
wire   [31:0] grp_delete_patch_fu_734_patches_parameters_V_d0;
wire   [11:0] grp_delete_patch_fu_734_patches_parameters_V_address1;
wire    grp_delete_patch_fu_734_patches_parameters_V_ce1;
wire    grp_get_index_from_z_fu_746_ap_start;
wire    grp_get_index_from_z_fu_746_ap_done;
wire    grp_get_index_from_z_fu_746_ap_idle;
wire    grp_get_index_from_z_fu_746_ap_ready;
wire   [2:0] grp_get_index_from_z_fu_746_GDn_points_address0;
wire    grp_get_index_from_z_fu_746_GDn_points_ce0;
reg   [2:0] grp_get_index_from_z_fu_746_layer;
reg   [31:0] grp_get_index_from_z_fu_746_z_value;
wire   [11:0] grp_get_index_from_z_fu_746_GDarrayDecoded_address0;
wire    grp_get_index_from_z_fu_746_GDarrayDecoded_ce0;
wire   [7:0] grp_get_index_from_z_fu_746_ap_return;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_760_ap_start;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_760_ap_done;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_760_ap_idle;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_760_ap_ready;
wire    grp_straightLineProjectorFromLayerIJtoK_fu_760_ap_ce;
wire   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_760_z_i;
reg   [31:0] grp_straightLineProjectorFromLayerIJtoK_fu_760_z_j;
wire   [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_760_i;
reg   [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_760_j;
reg   [2:0] grp_straightLineProjectorFromLayerIJtoK_fu_760_k;
reg   [2:0] i_reg_502;
wire    ap_CS_fsm_state8;
reg   [8:0] ap_phi_mux_empty_73_phi_fu_528_p4;
reg   [8:0] empty_73_reg_525;
reg   [31:0] counter_0_reg_556;
reg   [31:0] counterUpshift_0_reg_566;
reg   [9:0] empty_76_reg_576;
reg   [2:0] ap_phi_mux_i_7_phi_fu_611_p4;
wire    ap_block_pp5_stage0;
reg   [2:0] ap_phi_mux_i_8_phi_fu_623_p4;
wire    ap_block_pp6_stage0;
wire    ap_block_pp7_stage0;
reg   [2:0] i_10_reg_665;
wire    ap_CS_fsm_state76;
reg   [31:0] ap_phi_mux_current_z_top_index_0_phi_fu_680_p6;
reg   [31:0] current_z_top_index_0_reg_677;
wire    ap_CS_fsm_state77;
reg   [31:0] ap_phi_mux_z_top_min_4_phi_fu_691_p6;
reg   [31:0] z_top_min_4_reg_688;
reg    grp_makePatch_alignedToLine_fu_699_ap_start_reg;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state80;
wire    ap_CS_fsm_state81;
reg    grp_areWedgeSuperPointsEqual_fu_722_ap_start_reg;
reg   [76:0] ap_NS_fsm;
wire    ap_NS_fsm_state58;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state75;
reg    grp_delete_patch_fu_734_ap_start_reg;
wire    ap_CS_fsm_state78;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state79;
reg    grp_get_index_from_z_fu_746_ap_start_reg;
reg    grp_straightLineProjectorFromLayerIJtoK_fu_760_ap_start_reg;
wire    ap_NS_fsm_state4;
wire    ap_CS_fsm_state4;
wire    ap_block_pp0_stage0;
wire    ap_block_pp1_stage0;
wire    ap_block_pp2_stage0;
wire   [63:0] i_5_cast_fu_967_p1;
wire    ap_block_pp3_stage0;
wire   [63:0] i_6_cast_fu_1014_p1;
wire    ap_block_pp4_stage0;
wire   [63:0] tmp_15_fu_1221_p3;
wire   [63:0] trunc_ln1175_cast_fu_1242_p1;
wire   [63:0] zext_ln1207_fu_1389_p1;
wire   [63:0] zext_ln1212_fu_1449_p1;
wire   [63:0] zext_ln1217_fu_1467_p1;
wire   [63:0] zext_ln1268_1_fu_1669_p1;
wire   [63:0] zext_ln1269_fu_1680_p1;
reg   [31:0] new_z_i_atTop_V_3_fu_228;
reg   [31:0] new_z_i_atTop_V_3_1_fu_232;
reg   [31:0] new_z_i_atTop_V_3_2_fu_236;
reg   [31:0] new_z_i_atTop_V_3_3_fu_240;
reg   [31:0] new_z_i_atTop_V_3_4_fu_244;
wire   [7:0] grp_fu_783_p2;
wire   [7:0] add_ln1132_fu_930_p2;
wire   [7:0] select_ln1151_fu_993_p3;
wire   [31:0] grp_fu_775_p0;
wire  signed [31:0] icmp_ln870_fu_833_p0;
wire  signed [63:0] tmp_fu_859_p1;
wire   [8:0] add_ln1138_fu_871_p2;
wire   [8:0] add_ln1128_fu_886_p2;
wire  signed [31:0] sext_ln1146_fu_937_p1;
wire   [31:0] grp_fu_790_p2;
wire   [0:0] icmp_ln1146_fu_941_p2;
wire   [31:0] zext_ln1151_fu_973_p1;
wire   [7:0] trunc_ln1151_fu_977_p1;
wire   [0:0] icmp_ln1151_fu_981_p2;
wire   [7:0] add_ln1151_1_fu_987_p2;
wire   [31:0] bitcast_ln1157_fu_1023_p1;
wire   [7:0] tmp_1_fu_1026_p4;
wire   [22:0] trunc_ln1157_fu_1036_p1;
wire   [0:0] icmp_ln1157_1_fu_1046_p2;
wire   [0:0] icmp_ln1157_fu_1040_p2;
wire   [0:0] or_ln1157_fu_1052_p2;
wire   [0:0] grp_fu_778_p2;
wire   [0:0] and_ln1157_fu_1058_p2;
wire   [30:0] trunc_ln312_fu_1064_p1;
wire   [30:0] data_V_fu_1068_p3;
wire   [24:0] mantissa_fu_1090_p4;
wire   [8:0] zext_ln341_fu_1103_p1;
wire   [8:0] add_ln341_fu_1106_p2;
wire   [7:0] sub_ln1311_fu_1120_p2;
wire   [0:0] isNeg_fu_1112_p3;
wire  signed [8:0] sext_ln1311_fu_1125_p1;
wire   [8:0] ush_fu_1129_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i_cast_cast_cast_fu_1137_p1;
wire   [54:0] zext_ln68_fu_1099_p1;
wire   [54:0] sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_1141_p1;
wire   [54:0] r_V_fu_1145_p2;
wire   [0:0] tmp_13_fu_1157_p3;
wire   [54:0] r_V_1_fu_1151_p2;
wire   [7:0] zext_ln662_fu_1165_p1;
wire   [7:0] tmp_12_fu_1169_p4;
wire   [11:0] tmp_14_fu_1205_p4;
wire   [11:0] or_ln1164_fu_1215_p2;
wire  signed [31:0] sext_ln1183_fu_1276_p0;
wire   [1:0] tmp_8_fu_1295_p5;
wire  signed [32:0] sext_ln1185_fu_1309_p1;
wire   [32:0] sub_ln1185_fu_1312_p2;
wire   [0:0] tmp_20_fu_1323_p3;
wire   [32:0] sub_ln180_1_fu_1317_p2;
wire   [32:0] select_ln180_1_fu_1331_p3;
wire  signed [63:0] sext_ln1185_1_fu_1339_p1;
wire   [0:0] icmp_ln1185_fu_1343_p2;
wire   [7:0] zext_ln1185_fu_1349_p1;
wire   [10:0] trunc_ln1207_fu_1372_p1;
wire   [11:0] add_ln1207_fu_1383_p2;
wire  signed [32:0] sext_ln215_fu_1407_p1;
wire   [32:0] ret_fu_1411_p2;
wire   [0:0] tmp_16_fu_1422_p3;
wire   [32:0] sub_ln180_fu_1416_p2;
wire   [32:0] select_ln180_fu_1430_p3;
wire   [11:0] add_ln1212_fu_1444_p2;
wire   [0:0] icmp_ln1205_fu_1438_p2;
wire   [11:0] add_ln1217_fu_1462_p2;
wire  signed [32:0] sext_ln215_4_fu_1472_p1;
wire   [32:0] ret_4_fu_1475_p2;
wire   [0:0] tmp_17_fu_1486_p3;
wire   [32:0] sub_ln180_2_fu_1480_p2;
wire   [32:0] select_ln180_2_fu_1494_p3;
wire   [0:0] icmp_ln1210_fu_1502_p2;
wire  signed [32:0] sext_ln215_5_fu_1515_p1;
wire   [32:0] ret_5_fu_1518_p2;
wire   [0:0] tmp_18_fu_1529_p3;
wire   [32:0] sub_ln180_3_fu_1523_p2;
wire   [32:0] select_ln180_3_fu_1537_p3;
wire   [0:0] icmp_ln1215_fu_1545_p2;
wire  signed [32:0] sext_ln215_6_fu_1558_p1;
wire  signed [32:0] grp_fu_1569_p0;
wire  signed [63:0] grp_fu_1569_p1;
wire   [63:0] grp_fu_1569_p2;
wire   [7:0] add_ln1236_fu_1596_p2;
wire   [5:0] tmp_22_fu_1617_p4;
wire   [10:0] tmp_21_fu_1640_p3;
wire   [11:0] tmp_22_cast_fu_1633_p3;
wire   [11:0] zext_ln1268_fu_1647_p1;
wire   [11:0] sub_ln1268_fu_1651_p2;
wire   [11:0] add_ln1268_fu_1657_p2;
wire   [11:0] or_ln1268_fu_1663_p2;
wire   [11:0] add_ln1269_fu_1674_p2;
wire  signed [32:0] sext_ln215_7_fu_1685_p1;
wire  signed [32:0] sext_ln215_8_fu_1688_p1;
wire  signed [32:0] sext_ln215_9_fu_1698_p1;
wire  signed [32:0] sext_ln215_10_fu_1701_p1;
wire   [32:0] ret_7_fu_1692_p2;
wire   [32:0] ret_8_fu_1705_p2;
wire   [0:0] icmp_ln878_fu_1711_p2;
wire   [32:0] select_ln1274_fu_1717_p3;
wire    ap_block_pp4_stage0_00001;
wire    grp_fu_1569_ce;
reg   [63:0] ap_return_0_preg;
reg   [7:0] ap_return_1_preg;
reg   [31:0] ap_return_2_preg;
reg   [31:0] ap_return_3_preg;
reg   [31:0] ap_return_4_preg;
reg   [31:0] ap_return_5_preg;
reg   [63:0] ap_return_6_preg;
reg   [31:0] ap_return_7_preg;
reg    ap_block_state51_on_subcall_done;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 77'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter4 = 1'b0;
#0 ap_enable_reg_pp4_iter5 = 1'b0;
#0 ap_enable_reg_pp4_iter6 = 1'b0;
#0 ap_enable_reg_pp4_iter7 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter3 = 1'b0;
#0 ap_enable_reg_pp6_iter4 = 1'b0;
#0 ap_enable_reg_pp6_iter5 = 1'b0;
#0 grp_makePatch_alignedToLine_fu_699_ap_start_reg = 1'b0;
#0 grp_areWedgeSuperPointsEqual_fu_722_ap_start_reg = 1'b0;
#0 grp_delete_patch_fu_734_ap_start_reg = 1'b0;
#0 grp_get_index_from_z_fu_746_ap_start_reg = 1'b0;
#0 grp_straightLineProjectorFromLayerIJtoK_fu_760_ap_start_reg = 1'b0;
#0 ap_return_0_preg = 64'd0;
#0 ap_return_1_preg = 8'd0;
#0 ap_return_2_preg = 32'd0;
#0 ap_return_3_preg = 32'd0;
#0 ap_return_4_preg = 32'd0;
#0 ap_return_5_preg = 32'd0;
#0 ap_return_6_preg = 64'd0;
#0 ap_return_7_preg = 32'd0;
end

MPSQ_solveComplmentaryPatch_current_z_i_index #(
    .DataWidth( 8 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
current_z_i_index_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(current_z_i_index_address0),
    .ce0(current_z_i_index_ce0),
    .we0(current_z_i_index_we0),
    .d0(grp_get_index_from_z_fu_746_ap_return),
    .q0(current_z_i_index_q0)
);

MPSQ_solveComplmentaryPatch_new_z_i_index #(
    .DataWidth( 8 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
new_z_i_index_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(new_z_i_index_address0),
    .ce0(new_z_i_index_ce0),
    .we0(new_z_i_index_we0),
    .d0(new_z_i_index_d0),
    .q0(new_z_i_index_q0),
    .address1(new_z_i_index_address1),
    .ce1(new_z_i_index_ce1),
    .we1(new_z_i_index_we1),
    .d1(new_z_i_index_d1),
    .q1(new_z_i_index_q1)
);

MPSQ_solveComplmentaryPatch_new_z_i_V #(
    .DataWidth( 32 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
new_z_i_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(new_z_i_V_address0),
    .ce0(new_z_i_V_ce0),
    .we0(new_z_i_V_we0),
    .d0(GDarrayDecoded_q0),
    .q0(new_z_i_V_q0)
);

MPSQ_makePatch_alignedToLine grp_makePatch_alignedToLine_fu_699(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_makePatch_alignedToLine_fu_699_ap_start),
    .ap_done(grp_makePatch_alignedToLine_fu_699_ap_done),
    .ap_idle(grp_makePatch_alignedToLine_fu_699_ap_idle),
    .ap_ready(grp_makePatch_alignedToLine_fu_699_ap_ready),
    .n_patches_i(n_patches_i),
    .n_patches_o(grp_makePatch_alignedToLine_fu_699_n_patches_o),
    .n_patches_o_ap_vld(grp_makePatch_alignedToLine_fu_699_n_patches_o_ap_vld),
    .GDn_points_address0(grp_makePatch_alignedToLine_fu_699_GDn_points_address0),
    .GDn_points_ce0(grp_makePatch_alignedToLine_fu_699_GDn_points_ce0),
    .GDn_points_q0(GDn_points_q0),
    .patches_superpoints_address0(grp_makePatch_alignedToLine_fu_699_patches_superpoints_address0),
    .patches_superpoints_ce0(grp_makePatch_alignedToLine_fu_699_patches_superpoints_ce0),
    .patches_superpoints_we0(grp_makePatch_alignedToLine_fu_699_patches_superpoints_we0),
    .patches_superpoints_d0(grp_makePatch_alignedToLine_fu_699_patches_superpoints_d0),
    .patches_superpoints_q0(patches_superpoints_q0),
    .apexZ0(complementary_apexZ0),
    .z_top(grp_makePatch_alignedToLine_fu_699_z_top),
    .p_read(grp_makePatch_alignedToLine_fu_699_p_read),
    .leftRight(1'd1),
    .GDarrayDecoded_address0(grp_makePatch_alignedToLine_fu_699_GDarrayDecoded_address0),
    .GDarrayDecoded_ce0(grp_makePatch_alignedToLine_fu_699_GDarrayDecoded_ce0),
    .GDarrayDecoded_q0(GDarrayDecoded_q0),
    .patches_parameters_address0(grp_makePatch_alignedToLine_fu_699_patches_parameters_address0),
    .patches_parameters_ce0(grp_makePatch_alignedToLine_fu_699_patches_parameters_ce0),
    .patches_parameters_we0(grp_makePatch_alignedToLine_fu_699_patches_parameters_we0),
    .patches_parameters_d0(grp_makePatch_alignedToLine_fu_699_patches_parameters_d0),
    .patches_parameters_q0(patches_parameters_q0),
    .ap_return(grp_makePatch_alignedToLine_fu_699_ap_return)
);

MPSQ_areWedgeSuperPointsEqual grp_areWedgeSuperPointsEqual_fu_722(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_areWedgeSuperPointsEqual_fu_722_ap_start),
    .ap_done(grp_areWedgeSuperPointsEqual_fu_722_ap_done),
    .ap_idle(grp_areWedgeSuperPointsEqual_fu_722_ap_idle),
    .ap_ready(grp_areWedgeSuperPointsEqual_fu_722_ap_ready),
    .wsp1_2_address0(grp_areWedgeSuperPointsEqual_fu_722_wsp1_2_address0),
    .wsp1_2_ce0(grp_areWedgeSuperPointsEqual_fu_722_wsp1_2_ce0),
    .wsp1_2_q0(patches_superpoints_q0),
    .wsp1_2_address1(grp_areWedgeSuperPointsEqual_fu_722_wsp1_2_address1),
    .wsp1_2_ce1(grp_areWedgeSuperPointsEqual_fu_722_wsp1_2_ce1),
    .wsp1_2_q1(patches_superpoints_q1),
    .wsp1(lastPatchIdx_reg_2251),
    .wsp11(i_10_reg_665),
    .wsp2(thirdLastPatchIdx_reg_2288),
    .wsp23(i_10_reg_665),
    .ap_return(grp_areWedgeSuperPointsEqual_fu_722_ap_return)
);

MPSQ_delete_patch grp_delete_patch_fu_734(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_delete_patch_fu_734_ap_start),
    .ap_done(grp_delete_patch_fu_734_ap_done),
    .ap_idle(grp_delete_patch_fu_734_ap_idle),
    .ap_ready(grp_delete_patch_fu_734_ap_ready),
    .n_patches(grp_delete_patch_fu_734_n_patches),
    .n_patches_ap_vld(grp_delete_patch_fu_734_n_patches_ap_vld),
    .n_patches_read(reg_808),
    .patches_superpoints_address0(grp_delete_patch_fu_734_patches_superpoints_address0),
    .patches_superpoints_ce0(grp_delete_patch_fu_734_patches_superpoints_ce0),
    .patches_superpoints_we0(grp_delete_patch_fu_734_patches_superpoints_we0),
    .patches_superpoints_d0(grp_delete_patch_fu_734_patches_superpoints_d0),
    .patches_superpoints_address1(grp_delete_patch_fu_734_patches_superpoints_address1),
    .patches_superpoints_ce1(grp_delete_patch_fu_734_patches_superpoints_ce1),
    .patches_superpoints_q1(patches_superpoints_q1),
    .index(grp_delete_patch_fu_734_index),
    .patches_parameters_V_address0(grp_delete_patch_fu_734_patches_parameters_V_address0),
    .patches_parameters_V_ce0(grp_delete_patch_fu_734_patches_parameters_V_ce0),
    .patches_parameters_V_we0(grp_delete_patch_fu_734_patches_parameters_V_we0),
    .patches_parameters_V_d0(grp_delete_patch_fu_734_patches_parameters_V_d0),
    .patches_parameters_V_address1(grp_delete_patch_fu_734_patches_parameters_V_address1),
    .patches_parameters_V_ce1(grp_delete_patch_fu_734_patches_parameters_V_ce1),
    .patches_parameters_V_q1(patches_parameters_q1)
);

MPSQ_get_index_from_z grp_get_index_from_z_fu_746(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_get_index_from_z_fu_746_ap_start),
    .ap_done(grp_get_index_from_z_fu_746_ap_done),
    .ap_idle(grp_get_index_from_z_fu_746_ap_idle),
    .ap_ready(grp_get_index_from_z_fu_746_ap_ready),
    .GDn_points_address0(grp_get_index_from_z_fu_746_GDn_points_address0),
    .GDn_points_ce0(grp_get_index_from_z_fu_746_GDn_points_ce0),
    .GDn_points_q0(GDn_points_q0),
    .layer(grp_get_index_from_z_fu_746_layer),
    .z_value(grp_get_index_from_z_fu_746_z_value),
    .GDarrayDecoded_address0(grp_get_index_from_z_fu_746_GDarrayDecoded_address0),
    .GDarrayDecoded_ce0(grp_get_index_from_z_fu_746_GDarrayDecoded_ce0),
    .GDarrayDecoded_q0(GDarrayDecoded_q0),
    .ap_return(grp_get_index_from_z_fu_746_ap_return)
);

MPSQ_sitofp_32ns_32_3_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32ns_32_3_no_dsp_1_U95(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_775_p0),
    .ce(1'b1),
    .dout(grp_fu_775_p1)
);

MPSQ_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U96(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_reg_2032),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_778_p2)
);

MPSQ_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U97(
    .din0(new_z_i_atTop_V_3_1_fu_232),
    .din1(new_z_i_atTop_V_3_2_fu_236),
    .din2(new_z_i_atTop_V_3_3_fu_240),
    .din3(new_z_i_atTop_V_3_4_fu_244),
    .din4(tmp_8_fu_1295_p5),
    .dout(tmp_8_fu_1295_p6)
);

MPSQ_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U98(
    .din0(new_z_i_atTop_V_3_1_fu_232),
    .din1(new_z_i_atTop_V_3_2_fu_236),
    .din2(new_z_i_atTop_V_3_3_fu_240),
    .din3(new_z_i_atTop_V_3_4_fu_244),
    .din4(trunc_ln1192_reg_2165),
    .dout(lhs_fu_1394_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln870_fu_833_p2 == 1'd1) & (icmp_ln1108_fu_827_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state9))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state9);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((icmp_ln870_fu_833_p2 == 1'd1) & (icmp_ln1108_fu_827_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state12) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((tmp_fu_859_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state12))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state12);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((tmp_fu_859_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state15) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((tmp_fu_859_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state15))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state15);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((tmp_fu_859_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state18) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state18))) begin
            ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state18);
        end else if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state21) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp4_exit_iter0_state21)) begin
                ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state21);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter4 <= ap_enable_reg_pp4_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter5 <= ap_enable_reg_pp4_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter6 <= ap_enable_reg_pp4_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter7 <= ap_enable_reg_pp4_iter6;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_enable_reg_pp4_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_condition_pp5_exit_iter0_state30) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state29)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter0_state30)) begin
                ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state30);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end else if ((1'b1 == ap_CS_fsm_state29)) begin
            ap_enable_reg_pp5_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp6_stage0_subdone) & (1'b1 == ap_condition_pp6_exit_iter0_state34) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state33)) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp6_exit_iter0_state34)) begin
                ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state34);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter3 <= ap_enable_reg_pp6_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter4 <= ap_enable_reg_pp6_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter5 <= ap_enable_reg_pp6_iter4;
        end else if ((1'b1 == ap_CS_fsm_state33)) begin
            ap_enable_reg_pp6_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp7_stage0_subdone) & (1'b1 == ap_condition_pp7_exit_iter0_state41) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state40)) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp7_stage0_subdone) & (1'b1 == ap_condition_pp7_exit_iter0_state41))) begin
            ap_enable_reg_pp7_iter1 <= (1'b1 ^ ap_condition_pp7_exit_iter0_state41);
        end else if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
        end else if ((1'b1 == ap_CS_fsm_state40)) begin
            ap_enable_reg_pp7_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state77)) begin
            ap_return_0_preg <= white_space_height_read;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 8'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state77)) begin
            ap_return_1_preg <= lastPatchIdx_reg_2251;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state77)) begin
            ap_return_2_preg <= ap_phi_mux_current_z_top_index_0_phi_fu_680_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state77)) begin
            ap_return_3_preg <= counter_0_reg_556;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state77)) begin
            ap_return_4_preg <= counterUpshift_0_reg_566;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state77)) begin
            ap_return_5_preg <= z_top_min_read;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state77)) begin
            ap_return_6_preg <= sext_ln534_1_reg_2278;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_7_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state77)) begin
            ap_return_7_preg <= ap_phi_mux_z_top_min_4_phi_fu_691_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_areWedgeSuperPointsEqual_fu_722_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln1300_fu_1738_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state57) & (1'b1 == ap_NS_fsm_state58))) begin
            grp_areWedgeSuperPointsEqual_fu_722_ap_start_reg <= 1'b1;
        end else if ((grp_areWedgeSuperPointsEqual_fu_722_ap_ready == 1'b1)) begin
            grp_areWedgeSuperPointsEqual_fu_722_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_delete_patch_fu_734_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state78) | ((icmp_ln1237_reg_2230 == 1'd1) & (1'b1 == ap_CS_fsm_state50)))) begin
            grp_delete_patch_fu_734_ap_start_reg <= 1'b1;
        end else if ((grp_delete_patch_fu_734_ap_ready == 1'b1)) begin
            grp_delete_patch_fu_734_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_get_index_from_z_fu_746_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state7) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
            grp_get_index_from_z_fu_746_ap_start_reg <= 1'b1;
        end else if ((grp_get_index_from_z_fu_746_ap_ready == 1'b1)) begin
            grp_get_index_from_z_fu_746_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_makePatch_alignedToLine_fu_699_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state52))) begin
            grp_makePatch_alignedToLine_fu_699_ap_start_reg <= 1'b1;
        end else if ((grp_makePatch_alignedToLine_fu_699_ap_ready == 1'b1)) begin
            grp_makePatch_alignedToLine_fu_699_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_760_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp6_iter1 == 1'b1) & (icmp_ln1170_reg_2103 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0)) | ((1'b1 == ap_CS_fsm_state3) & (1'b1 == ap_NS_fsm_state4)))) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_760_ap_start_reg <= 1'b1;
        end else if ((grp_straightLineProjectorFromLayerIJtoK_fu_760_ap_ready == 1'b1)) begin
            grp_straightLineProjectorFromLayerIJtoK_fu_760_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        if ((tmp_reg_1912 == 1'd1)) begin
            counterUpshift_0_reg_566 <= p_read13;
        end else if ((tmp_reg_1912 == 1'd0)) begin
            counterUpshift_0_reg_566 <= add_ln1137_reg_1916;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        if ((tmp_reg_1912 == 1'd1)) begin
            counter_0_reg_556 <= add_ln1127_reg_1926;
        end else if ((tmp_reg_1912 == 1'd0)) begin
            counter_0_reg_556 <= p_read12;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln1290_reg_2264 == 1'd1) & (1'b1 == ap_CS_fsm_state56)) | ((icmp_ln1300_reg_2293 == 1'd1) & (icmp_ln1290_reg_2264 == 1'd0) & (1'b1 == ap_CS_fsm_state77)))) begin
        current_z_top_index_0_reg_677 <= select_ln1146_reg_1979;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        current_z_top_index_0_reg_677 <= add_ln1320_fu_1794_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln870_reg_1879 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        empty_73_reg_525 <= add_ln1115_reg_1883;
    end else if (((icmp_ln870_fu_833_p2 == 1'd0) & (icmp_ln1108_fu_827_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        empty_73_reg_525 <= zext_ln1104_reg_1858;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        if ((tmp_reg_1912 == 1'd1)) begin
            empty_76_reg_576 <= sext_ln1130_reg_1931;
        end else if ((tmp_reg_1912 == 1'd0)) begin
            empty_76_reg_576 <= zext_ln1140_reg_1921;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_areWedgeSuperPointsEqual_fu_722_ap_return == 1'd1) & (icmp_ln1300_reg_2293 == 1'd1) & (1'b1 == ap_CS_fsm_state76))) begin
        i_10_reg_665 <= add_ln1300_reg_2297;
    end else if (((icmp_ln1290_reg_2264 == 1'd0) & (1'b1 == ap_CS_fsm_state56))) begin
        i_10_reg_665 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln870_fu_833_p2 == 1'd1) & (icmp_ln1108_fu_827_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_2_reg_514 <= 3'd0;
    end else if (((icmp_ln1117_fu_848_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_2_reg_514 <= add_ln1117_fu_842_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_859_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        i_3_reg_545 <= 3'd0;
    end else if (((icmp_ln1130_fu_919_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_3_reg_545 <= add_ln1130_fu_913_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_859_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        i_4_reg_534 <= 3'd0;
    end else if (((icmp_ln1140_fu_902_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_4_reg_534 <= add_ln1140_fu_896_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1149_fu_961_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i_5_reg_585 <= add_ln1149_fu_955_p2;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        i_5_reg_585 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        i_6_reg_596 <= 3'd0;
    end else if (((icmp_ln1155_fu_1008_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        i_6_reg_596 <= add_ln1155_fu_1002_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        i_7_reg_607 <= 3'd0;
    end else if (((ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln1162_reg_2054 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        i_7_reg_607 <= add_ln1162_reg_2049;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        i_8_reg_619 <= 3'd1;
    end else if (((ap_enable_reg_pp6_iter1 == 1'b1) & (icmp_ln1170_reg_2103 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        i_8_reg_619 <= add_ln1175_reg_2107;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1183_fu_1285_p2 == 1'd0) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        i_9_reg_630 <= add_ln1183_fu_1279_p2;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        i_9_reg_630 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_get_index_from_z_fu_746_ap_done == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            i_reg_502 <= add_ln1110_reg_1864;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            i_reg_502 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b1) & (icmp_ln1183_reg_2141 == 1'd0) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        layerSMin_reg_641 <= layerSMin_1_fu_1360_p3;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        layerSMin_reg_641 <= 64'd9223372036854775807;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b1) & (icmp_ln1183_reg_2141 == 1'd0) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        layerWithSmallestShift_reg_653 <= layerWithSmallestShift_1_fu_1352_p3;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        layerWithSmallestShift_reg_653 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln1290_reg_2264 == 1'd1) & (1'b1 == ap_CS_fsm_state56)) | ((icmp_ln1300_reg_2293 == 1'd1) & (icmp_ln1290_reg_2264 == 1'd0) & (1'b1 == ap_CS_fsm_state77)))) begin
        z_top_min_4_reg_688 <= select_ln1220_reg_2234;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        z_top_min_4_reg_688 <= lhs_reg_2181;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln1110_reg_1864 <= add_ln1110_fu_817_p2;
        zext_ln1108_reg_1870[2 : 0] <= zext_ln1108_fu_823_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln870_fu_833_p2 == 1'd1) & (icmp_ln1108_fu_827_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        add_ln1115_reg_1883 <= add_ln1115_fu_837_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_859_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        add_ln1127_reg_1926 <= add_ln1127_fu_881_p2;
        sext_ln1130_reg_1931 <= sext_ln1130_fu_892_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_859_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        add_ln1137_reg_1916 <= add_ln1137_fu_866_p2;
        zext_ln1140_reg_1921[8 : 0] <= zext_ln1140_fu_877_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        add_ln1162_reg_2049 <= add_ln1162_fu_1188_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln1170_fu_1230_p2 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        add_ln1175_reg_2107 <= add_ln1175_fu_1236_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        add_ln1175_reg_2107_pp6_iter1_reg <= add_ln1175_reg_2107;
        icmp_ln1170_reg_2103 <= icmp_ln1170_fu_1230_p2;
        icmp_ln1170_reg_2103_pp6_iter1_reg <= icmp_ln1170_reg_2103;
        trunc_ln1172_reg_2118_pp6_iter1_reg <= trunc_ln1172_reg_2118;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        add_ln1300_reg_2297 <= add_ln1300_fu_1744_p2;
        icmp_ln1300_reg_2293 <= icmp_ln1300_fu_1738_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        agg_tmp7_reg_1888 <= grp_straightLineProjectorFromLayerIJtoK_fu_613_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1155_reg_2012_pp4_iter3_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        conv_reg_2032 <= grp_fu_775_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp4_stage0_11001)) begin
        conv_reg_2032_pp4_iter5_reg <= conv_reg_2032;
        icmp_ln1155_reg_2012_pp4_iter2_reg <= icmp_ln1155_reg_2012_pp4_iter1_reg;
        icmp_ln1155_reg_2012_pp4_iter3_reg <= icmp_ln1155_reg_2012_pp4_iter2_reg;
        icmp_ln1155_reg_2012_pp4_iter4_reg <= icmp_ln1155_reg_2012_pp4_iter3_reg;
        icmp_ln1155_reg_2012_pp4_iter5_reg <= icmp_ln1155_reg_2012_pp4_iter4_reg;
        icmp_ln1155_reg_2012_pp4_iter6_reg <= icmp_ln1155_reg_2012_pp4_iter5_reg;
        new_z_i_index_addr_4_reg_2016_pp4_iter2_reg <= new_z_i_index_addr_4_reg_2016_pp4_iter1_reg;
        new_z_i_index_addr_4_reg_2016_pp4_iter3_reg <= new_z_i_index_addr_4_reg_2016_pp4_iter2_reg;
        new_z_i_index_addr_4_reg_2016_pp4_iter4_reg <= new_z_i_index_addr_4_reg_2016_pp4_iter3_reg;
        new_z_i_index_addr_4_reg_2016_pp4_iter5_reg <= new_z_i_index_addr_4_reg_2016_pp4_iter4_reg;
        new_z_i_index_addr_4_reg_2016_pp4_iter6_reg <= new_z_i_index_addr_4_reg_2016_pp4_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1117_fu_848_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_2_cast_reg_1902[2 : 0] <= i_2_cast_fu_854_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1130_fu_919_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_3_cast_reg_1969[2 : 0] <= i_3_cast_fu_925_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1140_fu_902_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_4_cast_reg_1945[2 : 0] <= i_4_cast_fu_908_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1162_fu_1194_p2 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        i_7_cast_reg_2058[2 : 0] <= i_7_cast_fu_1200_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        i_7_cast_reg_2058_pp5_iter1_reg[2 : 0] <= i_7_cast_reg_2058[2 : 0];
        icmp_ln1162_reg_2054 <= icmp_ln1162_fu_1194_p2;
        icmp_ln1162_reg_2054_pp5_iter1_reg <= icmp_ln1162_reg_2054;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1117_reg_1898 <= icmp_ln1117_fu_848_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln1130_reg_1965 <= icmp_ln1130_fu_919_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln1140_reg_1941 <= icmp_ln1140_fu_902_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln1149_reg_1992 <= icmp_ln1149_fu_961_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        icmp_ln1155_reg_2012 <= icmp_ln1155_fu_1008_p2;
        icmp_ln1155_reg_2012_pp4_iter1_reg <= icmp_ln1155_reg_2012;
        new_z_i_index_addr_4_reg_2016_pp4_iter1_reg <= new_z_i_index_addr_4_reg_2016;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        icmp_ln1183_reg_2141 <= icmp_ln1183_fu_1285_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        icmp_ln1237_reg_2230 <= icmp_ln1237_fu_1582_p2;
        tmp_19_reg_2225 <= grp_fu_1631_p_dout0[32'd63];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        icmp_ln1290_reg_2264 <= icmp_ln1290_fu_1627_p2;
        lastPatchIdx_reg_2251 <= lastPatchIdx_fu_1607_p2;
        trunc_ln1268_reg_2259 <= trunc_ln1268_fu_1613_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1108_fu_827_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        icmp_ln870_reg_1879 <= icmp_ln870_fu_833_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        lhs_2_reg_2192 <= lhs_2_fu_1454_p3;
        lhs_reg_2181 <= lhs_fu_1394_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        lhs_3_reg_2203 <= lhs_3_fu_1508_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        lhs_4_reg_2209 <= lhs_4_fu_1551_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b1) & (icmp_ln1170_reg_2103 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        new_z_i_V_load_reg_2122 <= new_z_i_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter5 == 1'b1) & (trunc_ln1172_reg_2118_pp6_iter4_reg == 2'd1) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        new_z_i_atTop_V_3_1_fu_232 <= grp_straightLineProjectorFromLayerIJtoK_fu_613_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter5 == 1'b1) & (trunc_ln1172_reg_2118_pp6_iter4_reg == 2'd2) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        new_z_i_atTop_V_3_2_fu_236 <= grp_straightLineProjectorFromLayerIJtoK_fu_613_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter5 == 1'b1) & (trunc_ln1172_reg_2118_pp6_iter4_reg == 2'd3) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        new_z_i_atTop_V_3_3_fu_240 <= grp_straightLineProjectorFromLayerIJtoK_fu_613_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter5 == 1'b1) & (trunc_ln1172_reg_2118_pp6_iter4_reg == 2'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        new_z_i_atTop_V_3_4_fu_244 <= grp_straightLineProjectorFromLayerIJtoK_fu_613_p_dout0;
        new_z_i_atTop_V_3_fu_228 <= grp_straightLineProjectorFromLayerIJtoK_fu_613_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1149_fu_961_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        new_z_i_index_addr_3_reg_1996 <= i_5_cast_fu_967_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1155_fu_1008_p2 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        new_z_i_index_addr_4_reg_2016 <= i_6_cast_fu_1014_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln1155_reg_2012 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        new_z_i_index_load_1_reg_2022 <= new_z_i_index_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        ppl_assign2_reg_2246 <= grp_makePatch_alignedToLine_fu_699_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state49))) begin
        reg_808 <= n_patches_i;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ret_6_reg_2215 <= ret_6_fu_1561_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        select_ln1146_reg_1979 <= select_ln1146_fu_947_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        select_ln1220_reg_2234 <= select_ln1220_fu_1590_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        sext_ln1183_reg_2127 <= sext_ln1183_fu_1276_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        sext_ln534_1_reg_2278 <= sext_ln534_1_fu_1725_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1290_reg_2264 == 1'd0) & (1'b1 == ap_CS_fsm_state56))) begin
        thirdLastPatchIdx_reg_2288 <= thirdLastPatchIdx_fu_1732_p2;
        zext_ln1293_reg_2283[7 : 0] <= zext_ln1293_fu_1729_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        tmp_21_cast_reg_2170[11 : 1] <= tmp_21_cast_fu_1375_p3[11 : 1];
        trunc_ln1192_reg_2165 <= trunc_ln1192_fu_1368_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1155_reg_2012_pp4_iter5_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        tmp_23_reg_2038 <= {{data_V_fu_1068_p3[30:23]}};
        tmp_24_reg_2044 <= tmp_24_fu_1086_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1183_fu_1285_p2 == 1'd0) & (1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        tmp_8_reg_2150 <= tmp_8_fu_1295_p6;
        trunc_ln534_reg_2145 <= trunc_ln534_fu_1291_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_reg_1912 <= tmp_fu_859_p1[32'd63];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1170_fu_1230_p2 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        trunc_ln1172_reg_2118 <= trunc_ln1172_fu_1247_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp6_stage0_11001)) begin
        trunc_ln1172_reg_2118_pp6_iter2_reg <= trunc_ln1172_reg_2118_pp6_iter1_reg;
        trunc_ln1172_reg_2118_pp6_iter3_reg <= trunc_ln1172_reg_2118_pp6_iter2_reg;
        trunc_ln1172_reg_2118_pp6_iter4_reg <= trunc_ln1172_reg_2118_pp6_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        zext_ln1104_reg_1858[7 : 0] <= zext_ln1104_fu_813_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1237_reg_2230 == 1'd1) & (1'b1 == ap_CS_fsm_state50))) begin
        zext_ln1256_reg_2241[7 : 0] <= zext_ln1256_fu_1602_p1[7 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        GDarrayDecoded_address0 = zext_ln1217_fu_1467_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        GDarrayDecoded_address0 = zext_ln1212_fu_1449_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        GDarrayDecoded_address0 = zext_ln1207_fu_1389_p1;
    end else if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        GDarrayDecoded_address0 = tmp_15_fu_1221_p3;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state2))) begin
        GDarrayDecoded_address0 = grp_get_index_from_z_fu_746_GDarrayDecoded_address0;
    end else if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state81))) begin
        GDarrayDecoded_address0 = grp_makePatch_alignedToLine_fu_699_GDarrayDecoded_address0;
    end else begin
        GDarrayDecoded_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | ((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0)))) begin
        GDarrayDecoded_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state2))) begin
        GDarrayDecoded_ce0 = grp_get_index_from_z_fu_746_GDarrayDecoded_ce0;
    end else if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state81))) begin
        GDarrayDecoded_ce0 = grp_makePatch_alignedToLine_fu_699_GDarrayDecoded_ce0;
    end else begin
        GDarrayDecoded_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        GDn_points_address0 = i_5_cast_fu_967_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        GDn_points_address0 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state2))) begin
        GDn_points_address0 = grp_get_index_from_z_fu_746_GDn_points_address0;
    end else if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state81))) begin
        GDn_points_address0 = grp_makePatch_alignedToLine_fu_699_GDn_points_address0;
    end else begin
        GDn_points_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        GDn_points_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state2))) begin
        GDn_points_ce0 = grp_get_index_from_z_fu_746_GDn_points_ce0;
    end else if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state81))) begin
        GDn_points_ce0 = grp_makePatch_alignedToLine_fu_699_GDn_points_ce0;
    end else begin
        GDn_points_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1117_fu_848_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1140_fu_902_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1130_fu_919_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state15 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state15 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1149_fu_961_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state18 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state18 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1155_fu_1008_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state21 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state21 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1162_fu_1194_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state30 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state30 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1170_fu_1230_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state34 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state34 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1183_fu_1285_p2 == 1'd1)) begin
        ap_condition_pp7_exit_iter0_state41 = 1'b1;
    end else begin
        ap_condition_pp7_exit_iter0_state41 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state77) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter7 == 1'b0) & (ap_enable_reg_pp4_iter6 == 1'b0) & (ap_enable_reg_pp4_iter5 == 1'b0) & (ap_enable_reg_pp4_iter4 == 1'b0) & (ap_enable_reg_pp4_iter3 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter5 == 1'b0) & (ap_enable_reg_pp6_iter4 == 1'b0) & (ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1300_reg_2293 == 1'd1) & (icmp_ln1290_reg_2264 == 1'd0) & (1'b1 == ap_CS_fsm_state77))) begin
        ap_phi_mux_current_z_top_index_0_phi_fu_680_p6 = select_ln1146_reg_1979;
    end else begin
        ap_phi_mux_current_z_top_index_0_phi_fu_680_p6 = current_z_top_index_0_reg_677;
    end
end

always @ (*) begin
    if (((icmp_ln870_reg_1879 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_phi_mux_empty_73_phi_fu_528_p4 = add_ln1115_reg_1883;
    end else begin
        ap_phi_mux_empty_73_phi_fu_528_p4 = empty_73_reg_525;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln1162_reg_2054 == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        ap_phi_mux_i_7_phi_fu_611_p4 = add_ln1162_reg_2049;
    end else begin
        ap_phi_mux_i_7_phi_fu_611_p4 = i_7_reg_607;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b1) & (icmp_ln1170_reg_2103 == 1'd0) & (1'b0 == ap_block_pp6_stage0) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        ap_phi_mux_i_8_phi_fu_623_p4 = add_ln1175_reg_2107;
    end else begin
        ap_phi_mux_i_8_phi_fu_623_p4 = i_8_reg_619;
    end
end

always @ (*) begin
    if (((icmp_ln1300_reg_2293 == 1'd1) & (icmp_ln1290_reg_2264 == 1'd0) & (1'b1 == ap_CS_fsm_state77))) begin
        ap_phi_mux_z_top_min_4_phi_fu_691_p6 = select_ln1220_reg_2234;
    end else begin
        ap_phi_mux_z_top_min_4_phi_fu_691_p6 = z_top_min_4_reg_688;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        ap_return_0 = white_space_height_read;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        ap_return_1 = lastPatchIdx_reg_2251;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        ap_return_2 = ap_phi_mux_current_z_top_index_0_phi_fu_680_p6;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        ap_return_3 = counter_0_reg_556;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        ap_return_4 = counterUpshift_0_reg_566;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        ap_return_5 = z_top_min_read;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        ap_return_6 = sext_ln534_1_reg_2278;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        ap_return_7 = ap_phi_mux_z_top_min_4_phi_fu_691_p6;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        current_z_i_index_address0 = i_3_cast_fu_925_p1;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        current_z_i_index_address0 = i_4_cast_fu_908_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        current_z_i_index_address0 = i_2_cast_fu_854_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        current_z_i_index_address0 = zext_ln1108_reg_1870;
    end else begin
        current_z_i_index_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((grp_get_index_from_z_fu_746_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        current_z_i_index_ce0 = 1'b1;
    end else begin
        current_z_i_index_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((grp_get_index_from_z_fu_746_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        current_z_i_index_we0 = 1'b1;
    end else begin
        current_z_i_index_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        grp_delete_patch_fu_734_index = zext_ln1293_reg_2283;
    end else if (((icmp_ln1237_reg_2230 == 1'd1) & (1'b1 == ap_CS_fsm_state51))) begin
        grp_delete_patch_fu_734_index = zext_ln1256_reg_2241;
    end else begin
        grp_delete_patch_fu_734_index = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_get_index_from_z_fu_746_layer = i_reg_502;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_get_index_from_z_fu_746_layer = 3'd4;
    end else begin
        grp_get_index_from_z_fu_746_layer = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_get_index_from_z_fu_746_z_value = agg_tmp7_reg_1888;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_get_index_from_z_fu_746_z_value = z_top_min_read;
    end else begin
        grp_get_index_from_z_fu_746_z_value = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        grp_makePatch_alignedToLine_fu_699_p_read = ppl_assign2_reg_2246;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_makePatch_alignedToLine_fu_699_p_read = ppl;
    end else begin
        grp_makePatch_alignedToLine_fu_699_p_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        grp_makePatch_alignedToLine_fu_699_z_top = lhs_reg_2181;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_makePatch_alignedToLine_fu_699_z_top = select_ln1220_reg_2234;
    end else begin
        grp_makePatch_alignedToLine_fu_699_z_top = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter2 == 1'b1) & (icmp_ln1170_reg_2103_pp6_iter1_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_760_j = add_ln1175_reg_2107_pp6_iter1_reg;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_760_j = 3'd5;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_760_j = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter2 == 1'b1) & (icmp_ln1170_reg_2103_pp6_iter1_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_760_k = 3'd5;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_760_k = add_ln1110_reg_1864;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_760_k = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter2 == 1'b1) & (icmp_ln1170_reg_2103_pp6_iter1_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0))) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_760_z_j = new_z_i_V_load_reg_2122;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_straightLineProjectorFromLayerIJtoK_fu_760_z_j = z_top_min_read;
    end else begin
        grp_straightLineProjectorFromLayerIJtoK_fu_760_z_j = 'bx;
    end
end

always @ (*) begin
    if ((((grp_delete_patch_fu_734_n_patches_ap_vld == 1'b1) & (icmp_ln1237_reg_2230 == 1'd1) & (1'b1 == ap_CS_fsm_state51)) | ((grp_delete_patch_fu_734_n_patches_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state79)))) begin
        n_patches_o = grp_delete_patch_fu_734_n_patches;
    end else if ((((grp_makePatch_alignedToLine_fu_699_n_patches_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state53)) | ((grp_makePatch_alignedToLine_fu_699_n_patches_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state81)))) begin
        n_patches_o = grp_makePatch_alignedToLine_fu_699_n_patches_o;
    end else begin
        n_patches_o = n_patches_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state79) | ((icmp_ln1237_reg_2230 == 1'd1) & (1'b1 == ap_CS_fsm_state51)))) begin
        n_patches_o_ap_vld = grp_delete_patch_fu_734_n_patches_ap_vld;
    end else if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state81))) begin
        n_patches_o_ap_vld = grp_makePatch_alignedToLine_fu_699_n_patches_o_ap_vld;
    end else begin
        n_patches_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        new_z_i_V_address0 = trunc_ln1175_cast_fu_1242_p1;
    end else if (((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        new_z_i_V_address0 = i_7_cast_reg_2058_pp5_iter1_reg;
    end else begin
        new_z_i_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0)) | ((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        new_z_i_V_ce0 = 1'b1;
    end else begin
        new_z_i_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter2 == 1'b1) & (icmp_ln1162_reg_2054_pp5_iter1_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        new_z_i_V_we0 = 1'b1;
    end else begin
        new_z_i_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        new_z_i_index_address0 = i_6_cast_fu_1014_p1;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        new_z_i_index_address0 = new_z_i_index_addr_3_reg_1996;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        new_z_i_index_address0 = i_3_cast_reg_1969;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        new_z_i_index_address0 = i_4_cast_reg_1945;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        new_z_i_index_address0 = i_2_cast_reg_1902;
    end else begin
        new_z_i_index_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        new_z_i_index_address1 = i_7_cast_fu_1200_p1;
    end else if (((ap_enable_reg_pp4_iter7 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        new_z_i_index_address1 = new_z_i_index_addr_4_reg_2016_pp4_iter6_reg;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        new_z_i_index_address1 = i_5_cast_fu_967_p1;
    end else begin
        new_z_i_index_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        new_z_i_index_ce0 = 1'b1;
    end else begin
        new_z_i_index_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((ap_enable_reg_pp4_iter7 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)))) begin
        new_z_i_index_ce1 = 1'b1;
    end else begin
        new_z_i_index_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        new_z_i_index_d0 = select_ln1151_fu_993_p3;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        new_z_i_index_d0 = add_ln1132_fu_930_p2;
    end else if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        new_z_i_index_d0 = grp_fu_783_p2;
    end else begin
        new_z_i_index_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln1149_reg_1992 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln1130_reg_1965 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1140_reg_1941 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1117_reg_1898 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        new_z_i_index_we0 = 1'b1;
    end else begin
        new_z_i_index_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter7 == 1'b1) & (icmp_ln1155_reg_2012_pp4_iter6_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        new_z_i_index_we1 = 1'b1;
    end else begin
        new_z_i_index_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        patches_parameters_address0 = zext_ln1269_fu_1680_p1;
    end else if (((1'b1 == ap_CS_fsm_state79) | ((icmp_ln1237_reg_2230 == 1'd1) & (1'b1 == ap_CS_fsm_state51)))) begin
        patches_parameters_address0 = grp_delete_patch_fu_734_patches_parameters_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state81))) begin
        patches_parameters_address0 = grp_makePatch_alignedToLine_fu_699_patches_parameters_address0;
    end else begin
        patches_parameters_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        patches_parameters_address1 = zext_ln1268_1_fu_1669_p1;
    end else if (((1'b1 == ap_CS_fsm_state79) | ((icmp_ln1237_reg_2230 == 1'd1) & (1'b1 == ap_CS_fsm_state51)))) begin
        patches_parameters_address1 = grp_delete_patch_fu_734_patches_parameters_V_address1;
    end else begin
        patches_parameters_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        patches_parameters_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state79) | ((icmp_ln1237_reg_2230 == 1'd1) & (1'b1 == ap_CS_fsm_state51)))) begin
        patches_parameters_ce0 = grp_delete_patch_fu_734_patches_parameters_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state81))) begin
        patches_parameters_ce0 = grp_makePatch_alignedToLine_fu_699_patches_parameters_ce0;
    end else begin
        patches_parameters_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        patches_parameters_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state79) | ((icmp_ln1237_reg_2230 == 1'd1) & (1'b1 == ap_CS_fsm_state51)))) begin
        patches_parameters_ce1 = grp_delete_patch_fu_734_patches_parameters_V_ce1;
    end else begin
        patches_parameters_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state79) | ((icmp_ln1237_reg_2230 == 1'd1) & (1'b1 == ap_CS_fsm_state51)))) begin
        patches_parameters_d0 = grp_delete_patch_fu_734_patches_parameters_V_d0;
    end else if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state81))) begin
        patches_parameters_d0 = grp_makePatch_alignedToLine_fu_699_patches_parameters_d0;
    end else begin
        patches_parameters_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state79) | ((icmp_ln1237_reg_2230 == 1'd1) & (1'b1 == ap_CS_fsm_state51)))) begin
        patches_parameters_we0 = grp_delete_patch_fu_734_patches_parameters_V_we0;
    end else if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state81))) begin
        patches_parameters_we0 = grp_makePatch_alignedToLine_fu_699_patches_parameters_we0;
    end else begin
        patches_parameters_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state79) | ((icmp_ln1237_reg_2230 == 1'd1) & (1'b1 == ap_CS_fsm_state51)))) begin
        patches_superpoints_address0 = grp_delete_patch_fu_734_patches_superpoints_address0;
    end else if ((((icmp_ln1300_reg_2293 == 1'd1) & (1'b1 == ap_CS_fsm_state75)) | ((icmp_ln1300_reg_2293 == 1'd1) & (1'b1 == ap_CS_fsm_state59)) | ((icmp_ln1300_reg_2293 == 1'd1) & (1'b1 == ap_CS_fsm_state58)) | ((icmp_ln1300_reg_2293 == 1'd1) & (1'b1 == ap_CS_fsm_state76)))) begin
        patches_superpoints_address0 = grp_areWedgeSuperPointsEqual_fu_722_wsp1_2_address0;
    end else if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state81))) begin
        patches_superpoints_address0 = grp_makePatch_alignedToLine_fu_699_patches_superpoints_address0;
    end else begin
        patches_superpoints_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state79) | ((icmp_ln1237_reg_2230 == 1'd1) & (1'b1 == ap_CS_fsm_state51)))) begin
        patches_superpoints_address1 = grp_delete_patch_fu_734_patches_superpoints_address1;
    end else if ((((icmp_ln1300_reg_2293 == 1'd1) & (1'b1 == ap_CS_fsm_state75)) | ((icmp_ln1300_reg_2293 == 1'd1) & (1'b1 == ap_CS_fsm_state59)) | ((icmp_ln1300_reg_2293 == 1'd1) & (1'b1 == ap_CS_fsm_state58)) | ((icmp_ln1300_reg_2293 == 1'd1) & (1'b1 == ap_CS_fsm_state76)))) begin
        patches_superpoints_address1 = grp_areWedgeSuperPointsEqual_fu_722_wsp1_2_address1;
    end else begin
        patches_superpoints_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state79) | ((icmp_ln1237_reg_2230 == 1'd1) & (1'b1 == ap_CS_fsm_state51)))) begin
        patches_superpoints_ce0 = grp_delete_patch_fu_734_patches_superpoints_ce0;
    end else if ((((icmp_ln1300_reg_2293 == 1'd1) & (1'b1 == ap_CS_fsm_state75)) | ((icmp_ln1300_reg_2293 == 1'd1) & (1'b1 == ap_CS_fsm_state59)) | ((icmp_ln1300_reg_2293 == 1'd1) & (1'b1 == ap_CS_fsm_state58)) | ((icmp_ln1300_reg_2293 == 1'd1) & (1'b1 == ap_CS_fsm_state76)))) begin
        patches_superpoints_ce0 = grp_areWedgeSuperPointsEqual_fu_722_wsp1_2_ce0;
    end else if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state81))) begin
        patches_superpoints_ce0 = grp_makePatch_alignedToLine_fu_699_patches_superpoints_ce0;
    end else begin
        patches_superpoints_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state79) | ((icmp_ln1237_reg_2230 == 1'd1) & (1'b1 == ap_CS_fsm_state51)))) begin
        patches_superpoints_ce1 = grp_delete_patch_fu_734_patches_superpoints_ce1;
    end else if ((((icmp_ln1300_reg_2293 == 1'd1) & (1'b1 == ap_CS_fsm_state75)) | ((icmp_ln1300_reg_2293 == 1'd1) & (1'b1 == ap_CS_fsm_state59)) | ((icmp_ln1300_reg_2293 == 1'd1) & (1'b1 == ap_CS_fsm_state58)) | ((icmp_ln1300_reg_2293 == 1'd1) & (1'b1 == ap_CS_fsm_state76)))) begin
        patches_superpoints_ce1 = grp_areWedgeSuperPointsEqual_fu_722_wsp1_2_ce1;
    end else begin
        patches_superpoints_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state79) | ((icmp_ln1237_reg_2230 == 1'd1) & (1'b1 == ap_CS_fsm_state51)))) begin
        patches_superpoints_d0 = grp_delete_patch_fu_734_patches_superpoints_d0;
    end else if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state81))) begin
        patches_superpoints_d0 = grp_makePatch_alignedToLine_fu_699_patches_superpoints_d0;
    end else begin
        patches_superpoints_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state79) | ((icmp_ln1237_reg_2230 == 1'd1) & (1'b1 == ap_CS_fsm_state51)))) begin
        patches_superpoints_we0 = grp_delete_patch_fu_734_patches_superpoints_we0;
    end else if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state81))) begin
        patches_superpoints_we0 = grp_makePatch_alignedToLine_fu_699_patches_superpoints_we0;
    end else begin
        patches_superpoints_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_get_index_from_z_fu_746_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln870_fu_833_p2 == 1'd1) & (icmp_ln1108_fu_827_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln870_fu_833_p2 == 1'd0) & (icmp_ln1108_fu_827_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_get_index_from_z_fu_746_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln1117_fu_848_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln1117_fu_848_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((tmp_fu_859_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((icmp_ln1140_fu_902_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((icmp_ln1140_fu_902_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((icmp_ln1130_fu_919_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((icmp_ln1130_fu_919_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((icmp_ln1149_fu_961_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((icmp_ln1149_fu_961_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((ap_enable_reg_pp4_iter1 == 1'b0) & (icmp_ln1155_fu_1008_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone)) & ~((ap_enable_reg_pp4_iter7 == 1'b1) & (ap_enable_reg_pp4_iter6 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if ((((ap_enable_reg_pp4_iter1 == 1'b0) & (icmp_ln1155_fu_1008_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone)) | ((ap_enable_reg_pp4_iter7 == 1'b1) & (ap_enable_reg_pp4_iter6 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((ap_enable_reg_pp5_iter1 == 1'b0) & (icmp_ln1162_fu_1194_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)) & ~((ap_enable_reg_pp5_iter2 == 1'b1) & (ap_enable_reg_pp5_iter1 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((ap_enable_reg_pp5_iter1 == 1'b0) & (icmp_ln1162_fu_1194_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)) | ((ap_enable_reg_pp5_iter2 == 1'b1) & (ap_enable_reg_pp5_iter1 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_pp6_stage0;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln1170_fu_1230_p2 == 1'd1) & (1'b0 == ap_block_pp6_stage0_subdone)) & ~((ap_enable_reg_pp6_iter5 == 1'b1) & (ap_enable_reg_pp6_iter4 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln1170_fu_1230_p2 == 1'd1) & (1'b0 == ap_block_pp6_stage0_subdone)) | ((ap_enable_reg_pp6_iter5 == 1'b1) & (ap_enable_reg_pp6_iter4 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_pp7_stage0;
        end
        ap_ST_fsm_pp7_stage0 : begin
            if (~((icmp_ln1183_fu_1285_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if (((icmp_ln1183_fu_1285_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            if (((1'b0 == ap_block_state51_on_subcall_done) & (1'b1 == ap_CS_fsm_state51))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            if (((grp_makePatch_alignedToLine_fu_699_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state53))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            if (((icmp_ln1290_reg_2264 == 1'd0) & (1'b1 == ap_CS_fsm_state56))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            if (((grp_areWedgeSuperPointsEqual_fu_722_ap_return == 1'd1) & (icmp_ln1300_reg_2293 == 1'd1) & (1'b1 == ap_CS_fsm_state76))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else if (((icmp_ln1300_reg_2293 == 1'd0) & (1'b1 == ap_CS_fsm_state76))) begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            if (((grp_delete_patch_fu_734_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state79))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            if (((grp_makePatch_alignedToLine_fu_699_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state81))) begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1110_fu_817_p2 = (i_reg_502 + 3'd1);

assign add_ln1115_fu_837_p2 = (zext_ln1104_reg_1858 + 9'd1);

assign add_ln1117_fu_842_p2 = (i_2_reg_514 + 3'd1);

assign add_ln1127_fu_881_p2 = (p_read12 + 32'd1);

assign add_ln1128_fu_886_p2 = ($signed(ap_phi_mux_empty_73_phi_fu_528_p4) + $signed(9'd511));

assign add_ln1130_fu_913_p2 = (i_3_reg_545 + 3'd1);

assign add_ln1132_fu_930_p2 = ($signed(current_z_i_index_q0) + $signed(8'd255));

assign add_ln1137_fu_866_p2 = (p_read13 + 32'd1);

assign add_ln1138_fu_871_p2 = (ap_phi_mux_empty_73_phi_fu_528_p4 + 9'd1);

assign add_ln1140_fu_896_p2 = (i_4_reg_534 + 3'd1);

assign add_ln1149_fu_955_p2 = (i_5_reg_585 + 3'd1);

assign add_ln1151_1_fu_987_p2 = ($signed(trunc_ln1151_fu_977_p1) + $signed(8'd255));

assign add_ln1155_fu_1002_p2 = (i_6_reg_596 + 3'd1);

assign add_ln1162_fu_1188_p2 = (ap_phi_mux_i_7_phi_fu_611_p4 + 3'd1);

assign add_ln1175_fu_1236_p2 = (ap_phi_mux_i_8_phi_fu_623_p4 + 3'd1);

assign add_ln1183_fu_1279_p2 = (i_9_reg_630 + 3'd1);

assign add_ln1207_fu_1383_p2 = ($signed(tmp_21_cast_fu_1375_p3) + $signed(12'd2049));

assign add_ln1212_fu_1444_p2 = (tmp_21_cast_reg_2170 + 12'd1537);

assign add_ln1217_fu_1462_p2 = (tmp_21_cast_reg_2170 + 12'd1025);

assign add_ln1236_fu_1596_p2 = ($signed(reg_808) + $signed(8'd255));

assign add_ln1268_fu_1657_p2 = (sub_ln1268_fu_1651_p2 + 12'd48);

assign add_ln1269_fu_1674_p2 = (sub_ln1268_fu_1651_p2 + 12'd55);

assign add_ln1300_fu_1744_p2 = (i_10_reg_665 + 3'd1);

assign add_ln1320_fu_1794_p2 = ($signed(select_ln1146_reg_1979) + $signed(32'd4294967295));

assign add_ln341_fu_1106_p2 = ($signed(zext_ln341_fu_1103_p1) + $signed(9'd385));

assign and_ln1157_fu_1058_p2 = (or_ln1157_fu_1052_p2 & grp_fu_778_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd76];

assign ap_NS_fsm_state4 = ap_NS_fsm[32'd3];

assign ap_NS_fsm_state58 = ap_NS_fsm[32'd38];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp4_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp4_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp4_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp4_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp4_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp6_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp6_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp6_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp7_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp7_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state51_on_subcall_done = ((grp_delete_patch_fu_734_ap_done == 1'b0) & (icmp_ln1237_reg_2230 == 1'd1));
end

assign ap_block_state9_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

assign bitcast_ln1157_fu_1023_p1 = conv_reg_2032_pp4_iter5_reg;

assign data_V_fu_1068_p3 = ((and_ln1157_fu_1058_p2[0:0] == 1'b1) ? 31'd0 : trunc_ln312_fu_1064_p1);

assign grp_areWedgeSuperPointsEqual_fu_722_ap_start = grp_areWedgeSuperPointsEqual_fu_722_ap_start_reg;

assign grp_delete_patch_fu_734_ap_start = grp_delete_patch_fu_734_ap_start_reg;

assign grp_fu_1569_ce = 1'b1;

assign grp_fu_1569_p0 = sext_ln534_fu_1566_p1;

assign grp_fu_1569_p1 = white_space_height_read;

assign grp_fu_1569_p2 = grp_fu_1631_p_dout0;

assign grp_fu_1631_p_ce = 1'b1;

assign grp_fu_1631_p_din0 = sext_ln534_fu_1566_p1;

assign grp_fu_1631_p_din1 = white_space_height_read;

assign grp_fu_775_p0 = new_z_i_index_load_1_reg_2022;

assign grp_fu_783_p2 = (current_z_i_index_q0 + 8'd1);

assign grp_fu_790_p2 = ($signed(GDn_points_q0) + $signed(32'd4294967295));

assign grp_get_index_from_z_fu_746_ap_start = grp_get_index_from_z_fu_746_ap_start_reg;

assign grp_makePatch_alignedToLine_fu_699_ap_start = grp_makePatch_alignedToLine_fu_699_ap_start_reg;

assign grp_straightLineProjectorFromLayerIJtoK_fu_613_p_ce = 1'b1;

assign grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din1 = complementary_apexZ0;

assign grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din2 = grp_straightLineProjectorFromLayerIJtoK_fu_760_z_j;

assign grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din3 = 3'd1;

assign grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din4 = grp_straightLineProjectorFromLayerIJtoK_fu_760_j;

assign grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din5 = grp_straightLineProjectorFromLayerIJtoK_fu_760_k;

assign grp_straightLineProjectorFromLayerIJtoK_fu_613_p_start = grp_straightLineProjectorFromLayerIJtoK_fu_760_ap_start_reg;

assign grp_straightLineProjectorFromLayerIJtoK_fu_760_ap_ce = 1'b1;

assign grp_straightLineProjectorFromLayerIJtoK_fu_760_ap_done = grp_straightLineProjectorFromLayerIJtoK_fu_613_p_done;

assign grp_straightLineProjectorFromLayerIJtoK_fu_760_ap_idle = grp_straightLineProjectorFromLayerIJtoK_fu_613_p_idle;

assign grp_straightLineProjectorFromLayerIJtoK_fu_760_ap_ready = grp_straightLineProjectorFromLayerIJtoK_fu_613_p_ready;

assign grp_straightLineProjectorFromLayerIJtoK_fu_760_ap_return = grp_straightLineProjectorFromLayerIJtoK_fu_613_p_dout0;

assign grp_straightLineProjectorFromLayerIJtoK_fu_760_ap_start = grp_straightLineProjectorFromLayerIJtoK_fu_760_ap_start_reg;

assign grp_straightLineProjectorFromLayerIJtoK_fu_760_i = 3'd1;

assign grp_straightLineProjectorFromLayerIJtoK_fu_760_z_i = complementary_apexZ0;

assign i_2_cast_fu_854_p1 = i_2_reg_514;

assign i_3_cast_fu_925_p1 = i_3_reg_545;

assign i_4_cast_fu_908_p1 = i_4_reg_534;

assign i_5_cast_fu_967_p1 = i_5_reg_585;

assign i_6_cast_fu_1014_p1 = i_6_reg_596;

assign i_7_cast_fu_1200_p1 = ap_phi_mux_i_7_phi_fu_611_p4;

assign icmp_ln1108_fu_827_p2 = ((i_reg_502 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln1117_fu_848_p2 = ((i_2_reg_514 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln1130_fu_919_p2 = ((i_3_reg_545 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln1140_fu_902_p2 = ((i_4_reg_534 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln1146_fu_941_p2 = (($signed(sext_ln1146_fu_937_p1) < $signed(grp_fu_790_p2)) ? 1'b1 : 1'b0);

assign icmp_ln1149_fu_961_p2 = ((i_5_reg_585 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln1151_fu_981_p2 = (($signed(zext_ln1151_fu_973_p1) < $signed(grp_fu_790_p2)) ? 1'b1 : 1'b0);

assign icmp_ln1155_fu_1008_p2 = ((i_6_reg_596 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln1157_1_fu_1046_p2 = ((trunc_ln1157_fu_1036_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln1157_fu_1040_p2 = ((tmp_1_fu_1026_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln1162_fu_1194_p2 = ((ap_phi_mux_i_7_phi_fu_611_p4 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln1170_fu_1230_p2 = ((ap_phi_mux_i_8_phi_fu_623_p4 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln1183_fu_1285_p2 = ((i_9_reg_630 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln1185_fu_1343_p2 = (($signed(sext_ln1185_1_fu_1339_p1) < $signed(layerSMin_reg_641)) ? 1'b1 : 1'b0);

assign icmp_ln1205_fu_1438_p2 = (($signed(select_ln180_fu_1430_p3) < $signed(33'd1)) ? 1'b1 : 1'b0);

assign icmp_ln1210_fu_1502_p2 = (($signed(select_ln180_2_fu_1494_p3) < $signed(33'd1)) ? 1'b1 : 1'b0);

assign icmp_ln1215_fu_1545_p2 = (($signed(select_ln180_3_fu_1537_p3) < $signed(33'd1)) ? 1'b1 : 1'b0);

assign icmp_ln1237_fu_1582_p2 = ((n_patches_i > nPatchesAtOriginal) ? 1'b1 : 1'b0);

assign icmp_ln1290_fu_1627_p2 = ((tmp_22_fu_1617_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln1300_fu_1738_p2 = ((i_10_reg_665 < 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln870_fu_833_p0 = z_top_min_read;

assign icmp_ln870_fu_833_p2 = ((icmp_ln870_fu_833_p0 == previous_z_top_min_read) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_1711_p2 = (($signed(ret_7_fu_1692_p2) < $signed(ret_8_fu_1705_p2)) ? 1'b1 : 1'b0);

assign isNeg_fu_1112_p3 = add_ln341_fu_1106_p2[32'd8];

assign lastPatchIdx_fu_1607_p2 = ($signed(n_patches_i) + $signed(8'd255));

assign layerSMin_1_fu_1360_p3 = ((icmp_ln1185_fu_1343_p2[0:0] == 1'b1) ? sext_ln1185_1_fu_1339_p1 : layerSMin_reg_641);

assign layerWithSmallestShift_1_fu_1352_p3 = ((icmp_ln1185_fu_1343_p2[0:0] == 1'b1) ? zext_ln1185_fu_1349_p1 : layerWithSmallestShift_reg_653);

assign lhs_2_fu_1454_p3 = ((icmp_ln1205_fu_1438_p2[0:0] == 1'b1) ? GDarrayDecoded_q0 : lhs_fu_1394_p6);

assign lhs_3_fu_1508_p3 = ((icmp_ln1210_fu_1502_p2[0:0] == 1'b1) ? GDarrayDecoded_q0 : lhs_2_reg_2192);

assign lhs_4_fu_1551_p3 = ((icmp_ln1215_fu_1545_p2[0:0] == 1'b1) ? GDarrayDecoded_q0 : lhs_3_reg_2203);

assign mantissa_fu_1090_p4 = {{{{1'd1}, {tmp_24_reg_2044}}}, {1'd0}};

assign new_z_i_index_d1 = ((isNeg_fu_1112_p3[0:0] == 1'b1) ? zext_ln662_fu_1165_p1 : tmp_12_fu_1169_p4);

assign or_ln1157_fu_1052_p2 = (icmp_ln1157_fu_1040_p2 | icmp_ln1157_1_fu_1046_p2);

assign or_ln1164_fu_1215_p2 = (tmp_14_fu_1205_p4 | 12'd1);

assign or_ln1268_fu_1663_p2 = (12'd1 | add_ln1268_fu_1657_p2);

assign r_V_1_fu_1151_p2 = zext_ln68_fu_1099_p1 << sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_1141_p1;

assign r_V_fu_1145_p2 = zext_ln68_fu_1099_p1 >> sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_1141_p1;

assign ret_4_fu_1475_p2 = ($signed(sext_ln215_4_fu_1472_p1) - $signed(sext_ln1183_reg_2127));

assign ret_5_fu_1518_p2 = ($signed(sext_ln215_5_fu_1515_p1) - $signed(sext_ln1183_reg_2127));

assign ret_6_fu_1561_p2 = ($signed(sext_ln215_6_fu_1558_p1) - $signed(sext_ln1183_reg_2127));

assign ret_7_fu_1692_p2 = ($signed(sext_ln215_7_fu_1685_p1) - $signed(sext_ln215_8_fu_1688_p1));

assign ret_8_fu_1705_p2 = ($signed(sext_ln215_9_fu_1698_p1) - $signed(sext_ln215_10_fu_1701_p1));

assign ret_fu_1411_p2 = ($signed(sext_ln215_fu_1407_p1) - $signed(sext_ln1183_reg_2127));

assign select_ln1146_fu_947_p3 = ((icmp_ln1146_fu_941_p2[0:0] == 1'b1) ? sext_ln1146_fu_937_p1 : grp_fu_790_p2);

assign select_ln1151_fu_993_p3 = ((icmp_ln1151_fu_981_p2[0:0] == 1'b1) ? new_z_i_index_q1 : add_ln1151_1_fu_987_p2);

assign select_ln1220_fu_1590_p3 = ((tmp_19_reg_2225[0:0] == 1'b1) ? new_z_i_atTop_V_3_fu_228 : lhs_4_reg_2209);

assign select_ln1274_fu_1717_p3 = ((icmp_ln878_fu_1711_p2[0:0] == 1'b1) ? ret_8_fu_1705_p2 : ret_7_fu_1692_p2);

assign select_ln180_1_fu_1331_p3 = ((tmp_20_fu_1323_p3[0:0] == 1'b1) ? sub_ln180_1_fu_1317_p2 : sub_ln1185_fu_1312_p2);

assign select_ln180_2_fu_1494_p3 = ((tmp_17_fu_1486_p3[0:0] == 1'b1) ? sub_ln180_2_fu_1480_p2 : ret_4_fu_1475_p2);

assign select_ln180_3_fu_1537_p3 = ((tmp_18_fu_1529_p3[0:0] == 1'b1) ? sub_ln180_3_fu_1523_p2 : ret_5_fu_1518_p2);

assign select_ln180_fu_1430_p3 = ((tmp_16_fu_1422_p3[0:0] == 1'b1) ? sub_ln180_fu_1416_p2 : ret_fu_1411_p2);

assign sext_ln1130_fu_892_p1 = $signed(add_ln1128_fu_886_p2);

assign sext_ln1146_fu_937_p1 = $signed(empty_76_reg_576);

assign sext_ln1183_fu_1276_p0 = z_top_min_read;

assign sext_ln1183_fu_1276_p1 = sext_ln1183_fu_1276_p0;

assign sext_ln1185_1_fu_1339_p1 = $signed(select_ln180_1_fu_1331_p3);

assign sext_ln1185_fu_1309_p1 = $signed(tmp_8_reg_2150);

assign sext_ln1311_fu_1125_p1 = $signed(sub_ln1311_fu_1120_p2);

assign sext_ln215_10_fu_1701_p1 = $signed(patches_parameters_q0);

assign sext_ln215_4_fu_1472_p1 = lhs_2_reg_2192;

assign sext_ln215_5_fu_1515_p1 = lhs_3_reg_2203;

assign sext_ln215_6_fu_1558_p1 = lhs_4_reg_2209;

assign sext_ln215_7_fu_1685_p1 = $signed(original_c);

assign sext_ln215_8_fu_1688_p1 = $signed(patches_parameters_q1);

assign sext_ln215_9_fu_1698_p1 = $signed(original_d);

assign sext_ln215_fu_1407_p1 = lhs_fu_1394_p6;

assign sext_ln534_1_fu_1725_p1 = $signed(select_ln1274_fu_1717_p3);

assign sext_ln534_fu_1566_p1 = $signed(ret_6_reg_2215);

assign sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_1141_p1 = $unsigned(sh_prom_i_i_i_i_i_cast_cast_cast_fu_1137_p1);

assign sh_prom_i_i_i_i_i_cast_cast_cast_fu_1137_p1 = $signed(ush_fu_1129_p3);

assign sub_ln1185_fu_1312_p2 = ($signed(sext_ln1185_fu_1309_p1) - $signed(sext_ln1183_reg_2127));

assign sub_ln1268_fu_1651_p2 = (tmp_22_cast_fu_1633_p3 - zext_ln1268_fu_1647_p1);

assign sub_ln1311_fu_1120_p2 = (8'd127 - tmp_23_reg_2038);

assign sub_ln180_1_fu_1317_p2 = (33'd0 - sub_ln1185_fu_1312_p2);

assign sub_ln180_2_fu_1480_p2 = (33'd0 - ret_4_fu_1475_p2);

assign sub_ln180_3_fu_1523_p2 = (33'd0 - ret_5_fu_1518_p2);

assign sub_ln180_fu_1416_p2 = (33'd0 - ret_fu_1411_p2);

assign thirdLastPatchIdx_fu_1732_p2 = ($signed(reg_808) + $signed(8'd253));

assign tmp_12_fu_1169_p4 = {{r_V_1_fu_1151_p2[31:24]}};

assign tmp_13_fu_1157_p3 = r_V_fu_1145_p2[32'd24];

assign tmp_14_fu_1205_p4 = {{{i_7_reg_607}, {new_z_i_index_q1}}, {1'd0}};

assign tmp_15_fu_1221_p3 = {{52'd0}, {or_ln1164_fu_1215_p2}};

assign tmp_16_fu_1422_p3 = ret_fu_1411_p2[32'd32];

assign tmp_17_fu_1486_p3 = ret_4_fu_1475_p2[32'd32];

assign tmp_18_fu_1529_p3 = ret_5_fu_1518_p2[32'd32];

assign tmp_1_fu_1026_p4 = {{bitcast_ln1157_fu_1023_p1[30:23]}};

assign tmp_20_fu_1323_p3 = sub_ln1185_fu_1312_p2[32'd32];

assign tmp_21_cast_fu_1375_p3 = {{trunc_ln1207_fu_1372_p1}, {1'd0}};

assign tmp_21_fu_1640_p3 = {{lastPatchIdx_reg_2251}, {3'd0}};

assign tmp_22_cast_fu_1633_p3 = {{trunc_ln1268_reg_2259}, {7'd0}};

assign tmp_22_fu_1617_p4 = {{n_patches_i[7:2]}};

assign tmp_24_fu_1086_p1 = data_V_fu_1068_p3[22:0];

assign tmp_8_fu_1295_p5 = i_9_reg_630[1:0];

assign tmp_fu_859_p1 = white_space_height_read;

assign tmp_fu_859_p3 = tmp_fu_859_p1[32'd63];

assign trunc_ln1151_fu_977_p1 = GDn_points_q0[7:0];

assign trunc_ln1157_fu_1036_p1 = bitcast_ln1157_fu_1023_p1[22:0];

assign trunc_ln1172_fu_1247_p1 = ap_phi_mux_i_8_phi_fu_623_p4[1:0];

assign trunc_ln1175_cast_fu_1242_p1 = ap_phi_mux_i_8_phi_fu_623_p4;

assign trunc_ln1192_fu_1368_p1 = layerWithSmallestShift_reg_653[1:0];

assign trunc_ln1207_fu_1372_p1 = select_ln1146_reg_1979[10:0];

assign trunc_ln1268_fu_1613_p1 = lastPatchIdx_fu_1607_p2[4:0];

assign trunc_ln312_fu_1064_p1 = bitcast_ln1157_fu_1023_p1[30:0];

assign trunc_ln534_fu_1291_p1 = i_9_reg_630[1:0];

assign ush_fu_1129_p3 = ((isNeg_fu_1112_p3[0:0] == 1'b1) ? sext_ln1311_fu_1125_p1 : add_ln341_fu_1106_p2);

assign zext_ln1104_fu_813_p1 = grp_get_index_from_z_fu_746_ap_return;

assign zext_ln1108_fu_823_p1 = i_reg_502;

assign zext_ln1140_fu_877_p1 = add_ln1138_fu_871_p2;

assign zext_ln1151_fu_973_p1 = new_z_i_index_q1;

assign zext_ln1185_fu_1349_p1 = trunc_ln534_reg_2145;

assign zext_ln1207_fu_1389_p1 = add_ln1207_fu_1383_p2;

assign zext_ln1212_fu_1449_p1 = add_ln1212_fu_1444_p2;

assign zext_ln1217_fu_1467_p1 = add_ln1217_fu_1462_p2;

assign zext_ln1256_fu_1602_p1 = add_ln1236_fu_1596_p2;

assign zext_ln1268_1_fu_1669_p1 = or_ln1268_fu_1663_p2;

assign zext_ln1268_fu_1647_p1 = tmp_21_fu_1640_p3;

assign zext_ln1269_fu_1680_p1 = add_ln1269_fu_1674_p2;

assign zext_ln1293_fu_1729_p1 = lastPatchIdx_reg_2251;

assign zext_ln341_fu_1103_p1 = tmp_23_reg_2038;

assign zext_ln662_fu_1165_p1 = tmp_13_fu_1157_p3;

assign zext_ln68_fu_1099_p1 = mantissa_fu_1090_p4;

always @ (posedge ap_clk) begin
    zext_ln1104_reg_1858[8] <= 1'b0;
    zext_ln1108_reg_1870[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_2_cast_reg_1902[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln1140_reg_1921[9] <= 1'b0;
    i_4_cast_reg_1945[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_3_cast_reg_1969[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_7_cast_reg_2058[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_7_cast_reg_2058_pp5_iter1_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    tmp_21_cast_reg_2170[0] <= 1'b0;
    zext_ln1256_reg_2241[8] <= 1'b0;
    zext_ln1293_reg_2283[8] <= 1'b0;
end

endmodule //MPSQ_solveComplmentaryPatch
