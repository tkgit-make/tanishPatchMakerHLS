// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MPSQ_areWedgeSuperPointsEqual (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        wsp1_2_address0,
        wsp1_2_ce0,
        wsp1_2_q0,
        wsp1_2_address1,
        wsp1_2_ce1,
        wsp1_2_q1,
        wsp1,
        wsp11,
        wsp2,
        wsp23,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] wsp1_2_address0;
output   wsp1_2_ce0;
input  [63:0] wsp1_2_q0;
output  [11:0] wsp1_2_address1;
output   wsp1_2_ce1;
input  [63:0] wsp1_2_q1;
input  [7:0] wsp1;
input  [2:0] wsp11;
input  [7:0] wsp2;
input  [2:0] wsp23;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] wsp1_2_address0;
reg wsp1_2_ce0;
reg[11:0] wsp1_2_address1;
reg wsp1_2_ce1;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
wire    ap_block_state8_pp0_stage1_iter3;
wire    ap_block_state10_pp0_stage1_iter4;
wire    ap_block_state12_pp0_stage1_iter5;
wire    ap_block_state14_pp0_stage1_iter6;
wire    ap_block_state16_pp0_stage1_iter7;
wire    ap_block_state18_pp0_stage1_iter8;
wire    ap_block_pp0_stage1_11001;
reg   [2:0] wsp23_read_reg_530;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_state11_pp0_stage0_iter5;
wire    ap_block_state13_pp0_stage0_iter6;
wire    ap_block_state15_pp0_stage0_iter7;
wire    ap_block_state17_pp0_stage0_iter8;
wire    ap_block_state19_pp0_stage0_iter9;
wire    ap_block_pp0_stage0_11001;
reg   [7:0] wsp2_read_reg_535;
reg   [2:0] wsp11_read_reg_541;
reg   [7:0] wsp1_read_reg_546;
wire   [0:0] grp_fu_150_p2;
reg   [0:0] icmp_ln870_reg_562;
reg   [0:0] icmp_ln870_reg_562_pp0_iter1_reg;
reg   [0:0] icmp_ln870_reg_562_pp0_iter2_reg;
reg   [0:0] icmp_ln870_reg_562_pp0_iter3_reg;
reg   [0:0] icmp_ln870_reg_562_pp0_iter4_reg;
reg   [0:0] icmp_ln870_reg_562_pp0_iter5_reg;
reg   [0:0] icmp_ln870_reg_562_pp0_iter6_reg;
reg   [0:0] icmp_ln870_reg_562_pp0_iter7_reg;
reg   [0:0] icmp_ln870_reg_562_pp0_iter8_reg;
wire   [17:0] add_ln870_fu_290_p2;
reg   [17:0] add_ln870_reg_566;
reg   [17:0] add_ln870_reg_566_pp0_iter1_reg;
reg   [17:0] add_ln870_reg_566_pp0_iter2_reg;
reg   [17:0] add_ln870_reg_566_pp0_iter3_reg;
reg   [17:0] add_ln870_reg_566_pp0_iter4_reg;
reg   [17:0] add_ln870_reg_566_pp0_iter5_reg;
wire   [17:0] add_ln870_1_fu_355_p2;
reg   [17:0] add_ln870_1_reg_576;
reg   [17:0] add_ln870_1_reg_576_pp0_iter2_reg;
reg   [17:0] add_ln870_1_reg_576_pp0_iter3_reg;
reg   [17:0] add_ln870_1_reg_576_pp0_iter4_reg;
reg   [17:0] add_ln870_1_reg_576_pp0_iter5_reg;
reg   [17:0] add_ln870_1_reg_576_pp0_iter6_reg;
wire   [7:0] grp_fu_306_p2;
reg   [7:0] urem_ln870_reg_596;
wire   [7:0] add_ln870_9_fu_430_p2;
reg   [7:0] add_ln870_9_reg_601;
wire   [7:0] grp_fu_371_p2;
reg   [7:0] urem_ln870_1_reg_606;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_empty_phi_fu_143_p4;
reg   [0:0] ap_phi_reg_pp0_iter9_empty_reg_139;
wire   [0:0] ap_phi_reg_pp0_iter0_empty_reg_139;
reg   [0:0] ap_phi_reg_pp0_iter1_empty_reg_139;
reg   [0:0] ap_phi_reg_pp0_iter2_empty_reg_139;
reg   [0:0] ap_phi_reg_pp0_iter3_empty_reg_139;
reg   [0:0] ap_phi_reg_pp0_iter4_empty_reg_139;
reg   [0:0] ap_phi_reg_pp0_iter5_empty_reg_139;
reg   [0:0] ap_phi_reg_pp0_iter6_empty_reg_139;
reg   [0:0] ap_phi_reg_pp0_iter7_empty_reg_139;
reg   [0:0] ap_phi_reg_pp0_iter8_empty_reg_139;
wire   [63:0] zext_ln870_10_fu_197_p1;
wire   [63:0] zext_ln870_13_fu_242_p1;
wire   [63:0] zext_ln870_15_fu_449_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln870_17_fu_509_p1;
wire   [9:0] tmp_fu_165_p3;
wire   [10:0] zext_ln870_5_fu_173_p1;
wire   [10:0] zext_ln870_4_fu_161_p1;
wire   [10:0] add_ln870_4_fu_177_p2;
wire   [10:0] wsp23_cast_fu_157_p1;
wire   [10:0] add_ln870_5_fu_183_p2;
wire   [14:0] tmp_45_fu_189_p3;
wire   [9:0] tmp_s_fu_210_p3;
wire   [10:0] zext_ln870_12_fu_218_p1;
wire   [10:0] zext_ln870_11_fu_206_p1;
wire   [10:0] add_ln870_6_fu_222_p2;
wire   [10:0] wsp11_cast_fu_202_p1;
wire   [10:0] add_ln870_7_fu_228_p2;
wire   [14:0] tmp_46_fu_234_p3;
wire   [16:0] shl_ln870_2_fu_247_p3;
wire   [14:0] shl_ln870_3_fu_258_p3;
wire   [9:0] shl_ln_fu_269_p3;
wire   [15:0] zext_ln870_1_fu_265_p1;
wire   [15:0] zext_ln870_2_fu_276_p1;
wire   [15:0] add_ln870_2_fu_280_p2;
wire   [17:0] zext_ln870_3_fu_286_p1;
wire   [17:0] zext_ln870_fu_254_p1;
wire   [10:0] grp_fu_306_p0;
wire   [3:0] grp_fu_306_p1;
wire   [16:0] shl_ln870_4_fu_312_p3;
wire   [14:0] shl_ln870_5_fu_323_p3;
wire   [9:0] shl_ln870_1_fu_334_p3;
wire   [15:0] zext_ln870_7_fu_330_p1;
wire   [15:0] zext_ln870_8_fu_341_p1;
wire   [15:0] add_ln870_3_fu_345_p2;
wire   [17:0] zext_ln870_9_fu_351_p1;
wire   [17:0] zext_ln870_6_fu_319_p1;
wire   [10:0] grp_fu_371_p0;
wire   [3:0] grp_fu_371_p1;
wire   [17:0] or_ln870_fu_377_p2;
wire   [17:0] or_ln870_1_fu_386_p2;
wire   [36:0] grp_fu_514_p2;
wire   [5:0] tmp_47_fu_404_p4;
wire   [7:0] tmp_103_cast_fu_413_p3;
wire   [7:0] udiv_ln_cast_fu_395_p4;
wire   [7:0] add_ln870_8_fu_421_p2;
wire   [7:0] trunc_ln870_fu_427_p1;
wire   [11:0] tmp_105_cast_fu_436_p3;
wire   [11:0] or_ln870_2_fu_443_p2;
wire   [36:0] grp_fu_522_p2;
wire   [5:0] tmp_48_fu_463_p4;
wire   [7:0] tmp_107_cast_fu_472_p3;
wire   [7:0] udiv_ln870_1_cast_fu_454_p4;
wire   [7:0] add_ln870_10_fu_480_p2;
wire   [7:0] trunc_ln870_2_fu_486_p1;
wire   [7:0] add_ln870_11_fu_489_p2;
wire   [11:0] tmp_109_cast_fu_495_p3;
wire   [11:0] or_ln870_3_fu_503_p2;
wire   [17:0] grp_fu_514_p0;
wire   [19:0] grp_fu_514_p1;
wire   [17:0] grp_fu_522_p0;
wire   [19:0] grp_fu_522_p1;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_0to8;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0_1to9;
wire    ap_enable_pp0;
wire   [36:0] grp_fu_514_p00;
wire   [36:0] grp_fu_522_p00;
reg    ap_condition_80;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
end

MPSQ_urem_11ns_4ns_8_15_1 #(
    .ID( 1 ),
    .NUM_STAGE( 15 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
urem_11ns_4ns_8_15_1_U68(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_306_p0),
    .din1(grp_fu_306_p1),
    .ce(1'b1),
    .dout(grp_fu_306_p2)
);

MPSQ_urem_11ns_4ns_8_15_1 #(
    .ID( 1 ),
    .NUM_STAGE( 15 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
urem_11ns_4ns_8_15_1_U69(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_371_p0),
    .din1(grp_fu_371_p1),
    .ce(1'b1),
    .dout(grp_fu_371_p2)
);

MPSQ_mul_mul_18ns_20ns_37_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 37 ))
mul_mul_18ns_20ns_37_4_1_U70(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_514_p0),
    .din1(grp_fu_514_p1),
    .ce(1'b1),
    .dout(grp_fu_514_p2)
);

MPSQ_mul_mul_18ns_20ns_37_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 37 ))
mul_mul_18ns_20ns_37_4_1_U71(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_522_p0),
    .din1(grp_fu_522_p1),
    .ce(1'b1),
    .dout(grp_fu_522_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end else if (((ap_enable_reg_pp0_iter8 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter9 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_80)) begin
        if ((grp_fu_150_p2 == 1'd0)) begin
            ap_phi_reg_pp0_iter1_empty_reg_139 <= 1'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_empty_reg_139 <= ap_phi_reg_pp0_iter0_empty_reg_139;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln870_reg_562 == 1'd1))) begin
        add_ln870_1_reg_576[17 : 7] <= add_ln870_1_fu_355_p2[17 : 7];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln870_1_reg_576_pp0_iter2_reg[17 : 7] <= add_ln870_1_reg_576[17 : 7];
        add_ln870_1_reg_576_pp0_iter3_reg[17 : 7] <= add_ln870_1_reg_576_pp0_iter2_reg[17 : 7];
        add_ln870_1_reg_576_pp0_iter4_reg[17 : 7] <= add_ln870_1_reg_576_pp0_iter3_reg[17 : 7];
        add_ln870_1_reg_576_pp0_iter5_reg[17 : 7] <= add_ln870_1_reg_576_pp0_iter4_reg[17 : 7];
        add_ln870_1_reg_576_pp0_iter6_reg[17 : 7] <= add_ln870_1_reg_576_pp0_iter5_reg[17 : 7];
        wsp11_read_reg_541 <= wsp11;
        wsp1_read_reg_546 <= wsp1;
        wsp23_read_reg_530 <= wsp23;
        wsp2_read_reg_535 <= wsp2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln870_reg_562_pp0_iter7_reg == 1'd1))) begin
        add_ln870_9_reg_601 <= add_ln870_9_fu_430_p2;
        urem_ln870_1_reg_606 <= grp_fu_371_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (grp_fu_150_p2 == 1'd1))) begin
        add_ln870_reg_566[17 : 7] <= add_ln870_fu_290_p2[17 : 7];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln870_reg_566_pp0_iter1_reg[17 : 7] <= add_ln870_reg_566[17 : 7];
        add_ln870_reg_566_pp0_iter2_reg[17 : 7] <= add_ln870_reg_566_pp0_iter1_reg[17 : 7];
        add_ln870_reg_566_pp0_iter3_reg[17 : 7] <= add_ln870_reg_566_pp0_iter2_reg[17 : 7];
        add_ln870_reg_566_pp0_iter4_reg[17 : 7] <= add_ln870_reg_566_pp0_iter3_reg[17 : 7];
        add_ln870_reg_566_pp0_iter5_reg[17 : 7] <= add_ln870_reg_566_pp0_iter4_reg[17 : 7];
        icmp_ln870_reg_562_pp0_iter1_reg <= icmp_ln870_reg_562;
        icmp_ln870_reg_562_pp0_iter2_reg <= icmp_ln870_reg_562_pp0_iter1_reg;
        icmp_ln870_reg_562_pp0_iter3_reg <= icmp_ln870_reg_562_pp0_iter2_reg;
        icmp_ln870_reg_562_pp0_iter4_reg <= icmp_ln870_reg_562_pp0_iter3_reg;
        icmp_ln870_reg_562_pp0_iter5_reg <= icmp_ln870_reg_562_pp0_iter4_reg;
        icmp_ln870_reg_562_pp0_iter6_reg <= icmp_ln870_reg_562_pp0_iter5_reg;
        icmp_ln870_reg_562_pp0_iter7_reg <= icmp_ln870_reg_562_pp0_iter6_reg;
        icmp_ln870_reg_562_pp0_iter8_reg <= icmp_ln870_reg_562_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter2_empty_reg_139 <= ap_phi_reg_pp0_iter1_empty_reg_139;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter3_empty_reg_139 <= ap_phi_reg_pp0_iter2_empty_reg_139;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter4_empty_reg_139 <= ap_phi_reg_pp0_iter3_empty_reg_139;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter5_empty_reg_139 <= ap_phi_reg_pp0_iter4_empty_reg_139;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter6_empty_reg_139 <= ap_phi_reg_pp0_iter5_empty_reg_139;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter7_empty_reg_139 <= ap_phi_reg_pp0_iter6_empty_reg_139;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter8_empty_reg_139 <= ap_phi_reg_pp0_iter7_empty_reg_139;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter9_empty_reg_139 <= ap_phi_reg_pp0_iter8_empty_reg_139;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        icmp_ln870_reg_562 <= grp_fu_150_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln870_reg_562_pp0_iter6_reg == 1'd1))) begin
        urem_ln870_reg_596 <= grp_fu_306_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to8 = 1'b1;
    end else begin
        ap_idle_pp0_0to8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to9 = 1'b1;
    end else begin
        ap_idle_pp0_1to9 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln870_reg_562_pp0_iter8_reg == 1'd1)) begin
        ap_phi_mux_empty_phi_fu_143_p4 = grp_fu_150_p2;
    end else begin
        ap_phi_mux_empty_phi_fu_143_p4 = ap_phi_reg_pp0_iter9_empty_reg_139;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to8 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        wsp1_2_address0 = zext_ln870_17_fu_509_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        wsp1_2_address0 = zext_ln870_10_fu_197_p1;
    end else begin
        wsp1_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        wsp1_2_address1 = zext_ln870_15_fu_449_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        wsp1_2_address1 = zext_ln870_13_fu_242_p1;
    end else begin
        wsp1_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        wsp1_2_ce0 = 1'b1;
    end else begin
        wsp1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        wsp1_2_ce1 = 1'b1;
    end else begin
        wsp1_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to9 == 1'b1)) & (ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln870_10_fu_480_p2 = (tmp_107_cast_fu_472_p3 + udiv_ln870_1_cast_fu_454_p4);

assign add_ln870_11_fu_489_p2 = (add_ln870_10_fu_480_p2 + trunc_ln870_2_fu_486_p1);

assign add_ln870_1_fu_355_p2 = (zext_ln870_9_fu_351_p1 + zext_ln870_6_fu_319_p1);

assign add_ln870_2_fu_280_p2 = (zext_ln870_1_fu_265_p1 + zext_ln870_2_fu_276_p1);

assign add_ln870_3_fu_345_p2 = (zext_ln870_7_fu_330_p1 + zext_ln870_8_fu_341_p1);

assign add_ln870_4_fu_177_p2 = (zext_ln870_5_fu_173_p1 + zext_ln870_4_fu_161_p1);

assign add_ln870_5_fu_183_p2 = (add_ln870_4_fu_177_p2 + wsp23_cast_fu_157_p1);

assign add_ln870_6_fu_222_p2 = (zext_ln870_12_fu_218_p1 + zext_ln870_11_fu_206_p1);

assign add_ln870_7_fu_228_p2 = (add_ln870_6_fu_222_p2 + wsp11_cast_fu_202_p1);

assign add_ln870_8_fu_421_p2 = (tmp_103_cast_fu_413_p3 + udiv_ln_cast_fu_395_p4);

assign add_ln870_9_fu_430_p2 = (add_ln870_8_fu_421_p2 + trunc_ln870_fu_427_p1);

assign add_ln870_fu_290_p2 = (zext_ln870_3_fu_286_p1 + zext_ln870_fu_254_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_80 = ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_empty_reg_139 = 'bx;

assign ap_return = ap_phi_mux_empty_phi_fu_143_p4;

assign grp_fu_150_p2 = ((wsp1_2_q1 == wsp1_2_q0) ? 1'b1 : 1'b0);

assign grp_fu_306_p0 = {{add_ln870_fu_290_p2[17:7]}};

assign grp_fu_306_p1 = 11'd5;

assign grp_fu_371_p0 = {{add_ln870_1_fu_355_p2[17:7]}};

assign grp_fu_371_p1 = 11'd5;

assign grp_fu_514_p0 = grp_fu_514_p00;

assign grp_fu_514_p00 = or_ln870_fu_377_p2;

assign grp_fu_514_p1 = 37'd419431;

assign grp_fu_522_p0 = grp_fu_522_p00;

assign grp_fu_522_p00 = or_ln870_1_fu_386_p2;

assign grp_fu_522_p1 = 37'd419431;

assign or_ln870_1_fu_386_p2 = (18'd120 | add_ln870_1_reg_576_pp0_iter6_reg);

assign or_ln870_2_fu_443_p2 = (tmp_105_cast_fu_436_p3 | 12'd15);

assign or_ln870_3_fu_503_p2 = (tmp_109_cast_fu_495_p3 | 12'd15);

assign or_ln870_fu_377_p2 = (18'd120 | add_ln870_reg_566_pp0_iter5_reg);

assign shl_ln870_1_fu_334_p3 = {{wsp23_read_reg_530}, {7'd0}};

assign shl_ln870_2_fu_247_p3 = {{wsp1_read_reg_546}, {9'd0}};

assign shl_ln870_3_fu_258_p3 = {{wsp1_read_reg_546}, {7'd0}};

assign shl_ln870_4_fu_312_p3 = {{wsp2_read_reg_535}, {9'd0}};

assign shl_ln870_5_fu_323_p3 = {{wsp2_read_reg_535}, {7'd0}};

assign shl_ln_fu_269_p3 = {{wsp11_read_reg_541}, {7'd0}};

assign tmp_103_cast_fu_413_p3 = {{tmp_47_fu_404_p4}, {2'd0}};

assign tmp_105_cast_fu_436_p3 = {{add_ln870_9_reg_601}, {4'd0}};

assign tmp_107_cast_fu_472_p3 = {{tmp_48_fu_463_p4}, {2'd0}};

assign tmp_109_cast_fu_495_p3 = {{add_ln870_11_fu_489_p2}, {4'd0}};

assign tmp_45_fu_189_p3 = {{add_ln870_5_fu_183_p2}, {4'd0}};

assign tmp_46_fu_234_p3 = {{add_ln870_7_fu_228_p2}, {4'd0}};

assign tmp_47_fu_404_p4 = {{grp_fu_514_p2[33:28]}};

assign tmp_48_fu_463_p4 = {{grp_fu_522_p2[33:28]}};

assign tmp_fu_165_p3 = {{wsp2}, {2'd0}};

assign tmp_s_fu_210_p3 = {{wsp1}, {2'd0}};

assign trunc_ln870_2_fu_486_p1 = urem_ln870_1_reg_606[7:0];

assign trunc_ln870_fu_427_p1 = urem_ln870_reg_596[7:0];

assign udiv_ln870_1_cast_fu_454_p4 = {{grp_fu_522_p2[35:28]}};

assign udiv_ln_cast_fu_395_p4 = {{grp_fu_514_p2[35:28]}};

assign wsp11_cast_fu_202_p1 = wsp11;

assign wsp23_cast_fu_157_p1 = wsp23;

assign zext_ln870_10_fu_197_p1 = tmp_45_fu_189_p3;

assign zext_ln870_11_fu_206_p1 = wsp1;

assign zext_ln870_12_fu_218_p1 = tmp_s_fu_210_p3;

assign zext_ln870_13_fu_242_p1 = tmp_46_fu_234_p3;

assign zext_ln870_15_fu_449_p1 = or_ln870_2_fu_443_p2;

assign zext_ln870_17_fu_509_p1 = or_ln870_3_fu_503_p2;

assign zext_ln870_1_fu_265_p1 = shl_ln870_3_fu_258_p3;

assign zext_ln870_2_fu_276_p1 = shl_ln_fu_269_p3;

assign zext_ln870_3_fu_286_p1 = add_ln870_2_fu_280_p2;

assign zext_ln870_4_fu_161_p1 = wsp2;

assign zext_ln870_5_fu_173_p1 = tmp_fu_165_p3;

assign zext_ln870_6_fu_319_p1 = shl_ln870_4_fu_312_p3;

assign zext_ln870_7_fu_330_p1 = shl_ln870_5_fu_323_p3;

assign zext_ln870_8_fu_341_p1 = shl_ln870_1_fu_334_p3;

assign zext_ln870_9_fu_351_p1 = add_ln870_3_fu_345_p2;

assign zext_ln870_fu_254_p1 = shl_ln870_2_fu_247_p3;

always @ (posedge ap_clk) begin
    add_ln870_reg_566[6:0] <= 7'b0000000;
    add_ln870_reg_566_pp0_iter1_reg[6:0] <= 7'b0000000;
    add_ln870_reg_566_pp0_iter2_reg[6:0] <= 7'b0000000;
    add_ln870_reg_566_pp0_iter3_reg[6:0] <= 7'b0000000;
    add_ln870_reg_566_pp0_iter4_reg[6:0] <= 7'b0000000;
    add_ln870_reg_566_pp0_iter5_reg[6:0] <= 7'b0000000;
    add_ln870_1_reg_576[6:0] <= 7'b0000000;
    add_ln870_1_reg_576_pp0_iter2_reg[6:0] <= 7'b0000000;
    add_ln870_1_reg_576_pp0_iter3_reg[6:0] <= 7'b0000000;
    add_ln870_1_reg_576_pp0_iter4_reg[6:0] <= 7'b0000000;
    add_ln870_1_reg_576_pp0_iter5_reg[6:0] <= 7'b0000000;
    add_ln870_1_reg_576_pp0_iter6_reg[6:0] <= 7'b0000000;
end

endmodule //MPSQ_areWedgeSuperPointsEqual
