// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MPSQ_makeSuperPoint_alignedToLine11 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        GDn_points_address0,
        GDn_points_ce0,
        GDn_points_q0,
        i,
        z_top,
        apexZ0,
        original_ppl,
        leftRight,
        init_patch_address0,
        init_patch_ce0,
        init_patch_we0,
        init_patch_d0,
        GDarrayDecoded_address0,
        GDarrayDecoded_ce0,
        GDarrayDecoded_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_pp0_stage0 = 12'd4;
parameter    ap_ST_fsm_state5 = 12'd8;
parameter    ap_ST_fsm_state6 = 12'd16;
parameter    ap_ST_fsm_state7 = 12'd32;
parameter    ap_ST_fsm_state8 = 12'd64;
parameter    ap_ST_fsm_state9 = 12'd128;
parameter    ap_ST_fsm_state10 = 12'd256;
parameter    ap_ST_fsm_state11 = 12'd512;
parameter    ap_ST_fsm_pp1_stage0 = 12'd1024;
parameter    ap_ST_fsm_state15 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] GDn_points_address0;
output   GDn_points_ce0;
input  [31:0] GDn_points_q0;
input  [2:0] i;
input  [31:0] z_top;
input  [31:0] apexZ0;
input  [31:0] original_ppl;
input  [0:0] leftRight;
output  [7:0] init_patch_address0;
output   init_patch_ce0;
output   init_patch_we0;
output  [31:0] init_patch_d0;
output  [11:0] GDarrayDecoded_address0;
output   GDarrayDecoded_ce0;
input  [31:0] GDarrayDecoded_q0;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg GDn_points_ce0;
reg init_patch_ce0;
reg init_patch_we0;
reg[11:0] GDarrayDecoded_address0;
reg GDarrayDecoded_ce0;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    radiiDivisionList_ce0;
wire   [34:0] radiiDivisionList_q0;
reg   [30:0] row_list_size_reg_227;
reg   [5:0] indvar_flatten_reg_251;
reg   [4:0] j_1_reg_262;
reg   [1:0] z_reg_273;
wire   [0:0] leftRight_read_read_fu_130_p2;
wire    ap_CS_fsm_state2;
wire   [10:0] empty_fu_307_p1;
reg   [10:0] empty_reg_776;
reg   [5:0] radiiDivisionList_addr_reg_781;
wire   [7:0] zext_ln1455_fu_353_p1;
reg   [7:0] zext_ln1455_reg_786;
wire   [10:0] tmp_25_fu_357_p3;
reg   [10:0] tmp_25_reg_791;
reg   [31:0] GDn_points_load_reg_797;
wire   [0:0] icmp_ln1453_fu_364_p2;
reg   [0:0] icmp_ln1453_reg_802;
wire   [30:0] trunc_ln1453_fu_370_p1;
reg   [30:0] trunc_ln1453_reg_806;
wire   [30:0] add_ln1455_fu_374_p2;
reg   [30:0] add_ln1455_reg_811;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln1453_1_fu_380_p2;
reg   [0:0] icmp_ln1453_1_reg_816;
wire   [32:0] ret_16_fu_424_p2;
reg  signed [32:0] ret_16_reg_825;
wire    ap_CS_fsm_state6;
reg   [34:0] rhs_reg_830;
reg   [35:0] trunc_ln_reg_835;
wire    ap_CS_fsm_state7;
wire   [36:0] projectionToRow_fu_458_p2;
reg   [36:0] projectionToRow_reg_840;
wire    ap_CS_fsm_state8;
reg   [31:0] start_index_reg_845;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln1486_1_fu_473_p2;
reg   [0:0] icmp_ln1486_1_reg_855;
wire   [0:0] icmp_ln1542_fu_479_p2;
reg   [0:0] icmp_ln1542_reg_860;
wire   [0:0] icmp_ln1537_fu_491_p2;
reg   [0:0] icmp_ln1537_reg_865;
wire    ap_CS_fsm_state10;
wire   [31:0] start_index_2_fu_496_p2;
reg   [31:0] start_index_2_reg_870;
wire   [10:0] temp_start_fu_624_p3;
reg   [10:0] temp_start_reg_875;
wire    ap_CS_fsm_state11;
wire   [5:0] add_ln1598_2_fu_631_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state12_pp1_stage0_iter0;
wire    ap_block_state13_pp1_stage0_iter1;
wire    ap_block_state14_pp1_stage0_iter2;
wire    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln1598_fu_637_p2;
reg   [0:0] icmp_ln1598_reg_885;
reg   [0:0] icmp_ln1598_reg_885_pp1_iter1_reg;
wire   [1:0] select_ln1598_fu_655_p3;
reg   [1:0] select_ln1598_reg_889;
reg   [1:0] select_ln1598_reg_889_pp1_iter1_reg;
wire   [4:0] select_ln1598_1_fu_663_p3;
reg   [4:0] select_ln1598_1_reg_895;
reg   [4:0] select_ln1598_1_reg_895_pp1_iter1_reg;
wire   [1:0] add_ln1604_fu_671_p2;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter1;
wire    grp_mSP_findLRBounds_fu_284_ap_ready;
wire    grp_mSP_findLRBounds_fu_284_ap_done;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state12;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg   [7:0] row_list_V_address0;
reg    row_list_V_ce0;
reg    row_list_V_we0;
wire   [31:0] row_list_V_q0;
wire    grp_mSP_findLRBounds_fu_284_ap_start;
wire    grp_mSP_findLRBounds_fu_284_ap_idle;
wire   [7:0] grp_mSP_findLRBounds_fu_284_row_list_address0;
wire    grp_mSP_findLRBounds_fu_284_row_list_ce0;
wire   [31:0] grp_mSP_findLRBounds_fu_284_ap_return_0;
wire   [31:0] grp_mSP_findLRBounds_fu_284_ap_return_1;
wire    grp_mSP_findStartIndex_fu_294_ap_start;
wire    grp_mSP_findStartIndex_fu_294_ap_done;
wire    grp_mSP_findStartIndex_fu_294_ap_idle;
wire    grp_mSP_findStartIndex_fu_294_ap_ready;
wire   [7:0] grp_mSP_findStartIndex_fu_294_row_list_address0;
wire    grp_mSP_findStartIndex_fu_294_row_list_ce0;
wire   [31:0] grp_mSP_findStartIndex_fu_294_ap_return_0;
wire   [63:0] grp_mSP_findStartIndex_fu_294_ap_return_1;
reg   [30:0] ap_phi_mux_row_list_size_phi_fu_231_p4;
wire    ap_block_pp0_stage0;
reg   [31:0] row_list_size_0_lcssa_reg_239;
wire    ap_CS_fsm_state5;
reg   [4:0] ap_phi_mux_j_1_phi_fu_266_p4;
wire    ap_block_pp1_stage0;
reg    grp_mSP_findLRBounds_fu_284_ap_start_reg;
reg    grp_mSP_findStartIndex_fu_294_ap_start_reg;
wire   [63:0] idxprom_fu_302_p1;
wire   [63:0] zext_ln1458_1_fu_341_p1;
wire   [63:0] zext_ln1455_1_fu_408_p1;
wire   [63:0] row_list_size_cast_fu_413_p1;
wire   [63:0] zext_ln1609_4_fu_707_p1;
wire   [63:0] zext_ln1609_3_fu_735_p1;
wire   [3:0] tmp_s_fu_318_p3;
wire   [5:0] tmp_fu_311_p3;
wire   [5:0] zext_ln1458_fu_325_p1;
wire   [5:0] sub_ln1458_fu_329_p2;
wire   [5:0] add_ln1458_fu_335_p2;
wire   [6:0] tmp_24_fu_346_p3;
wire   [10:0] trunc_ln1455_fu_385_p1;
wire   [10:0] add_ln1455_1_fu_389_p2;
wire   [11:0] tmp_39_cast_fu_394_p3;
wire   [11:0] or_ln1455_fu_402_p2;
wire  signed [31:0] sext_ln215_24_fu_421_p0;
wire  signed [32:0] sext_ln215_fu_418_p1;
wire  signed [32:0] sext_ln215_24_fu_421_p1;
wire   [34:0] ret_fu_436_p0;
wire   [67:0] ret_fu_436_p2;
wire  signed [31:0] sext_ln534_2_fu_455_p0;
wire  signed [36:0] sext_ln534_fu_452_p1;
wire  signed [36:0] sext_ln534_2_fu_455_p1;
wire   [31:0] add_ln1537_fu_485_p2;
wire   [0:0] icmp_ln1486_fu_509_p2;
wire   [0:0] and_ln1486_fu_514_p2;
wire   [31:0] start_index_1_fu_519_p2;
wire   [31:0] select_ln1486_fu_524_p3;
wire   [10:0] trunc_ln1491_1_fu_540_p1;
wire   [31:0] add_ln1491_fu_535_p2;
wire   [31:0] add_ln1491_1_fu_544_p2;
wire   [10:0] add_ln1491_2_fu_550_p2;
wire   [0:0] icmp_ln1491_fu_556_p2;
wire   [10:0] sub_ln1510_fu_562_p2;
wire   [10:0] trunc_ln1491_fu_531_p1;
wire   [0:0] and_ln1537_fu_575_p2;
wire   [31:0] select_ln1537_fu_579_p3;
wire   [31:0] sub_ln1552_fu_585_p2;
wire   [31:0] add_ln1552_fu_594_p2;
wire   [10:0] trunc_ln1552_fu_590_p1;
wire   [0:0] icmp_ln1552_fu_600_p2;
wire   [10:0] trunc_ln1573_fu_606_p1;
wire   [10:0] add_ln1573_fu_610_p2;
wire   [10:0] select_ln1491_fu_567_p3;
wire   [10:0] select_ln1573_fu_616_p3;
wire   [0:0] icmp_ln1604_fu_649_p2;
wire   [4:0] add_ln1598_fu_643_p2;
wire   [10:0] zext_ln1598_fu_677_p1;
wire   [10:0] add_ln1598_1_fu_680_p2;
wire   [10:0] add_ln1609_1_fu_685_p2;
wire   [11:0] tmp_43_cast_fu_690_p3;
wire   [11:0] zext_ln1609_1_fu_698_p1;
wire   [11:0] add_ln1609_3_fu_701_p2;
wire   [7:0] zext_ln1609_fu_712_p1;
wire   [7:0] add_ln1609_fu_715_p2;
wire   [7:0] shl_ln1598_fu_720_p2;
wire   [7:0] zext_ln1609_2_fu_726_p1;
wire   [7:0] add_ln1609_2_fu_729_p2;
wire    ap_CS_fsm_state15;
reg   [11:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire   [67:0] ret_fu_436_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 grp_mSP_findLRBounds_fu_284_ap_start_reg = 1'b0;
#0 grp_mSP_findStartIndex_fu_294_ap_start_reg = 1'b0;
end

MPSQ_straightLineProjectorFromLayerIJtoK_radiiDivisionList #(
    .DataWidth( 35 ),
    .AddressRange( 36 ),
    .AddressWidth( 6 ))
radiiDivisionList_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(radiiDivisionList_addr_reg_781),
    .ce0(radiiDivisionList_ce0),
    .q0(radiiDivisionList_q0)
);

MPSQ_makeSuperPoint_alignedToLine11_row_list_V #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
row_list_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(row_list_V_address0),
    .ce0(row_list_V_ce0),
    .we0(row_list_V_we0),
    .d0(GDarrayDecoded_q0),
    .q0(row_list_V_q0)
);

MPSQ_mSP_findLRBounds grp_mSP_findLRBounds_fu_284(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mSP_findLRBounds_fu_284_ap_start),
    .ap_done(grp_mSP_findLRBounds_fu_284_ap_done),
    .ap_idle(grp_mSP_findLRBounds_fu_284_ap_idle),
    .ap_ready(grp_mSP_findLRBounds_fu_284_ap_ready),
    .i(i),
    .row_list_address0(grp_mSP_findLRBounds_fu_284_row_list_address0),
    .row_list_ce0(grp_mSP_findLRBounds_fu_284_row_list_ce0),
    .row_list_q0(row_list_V_q0),
    .row_list_size(row_list_size_0_lcssa_reg_239),
    .ap_return_0(grp_mSP_findLRBounds_fu_284_ap_return_0),
    .ap_return_1(grp_mSP_findLRBounds_fu_284_ap_return_1)
);

MPSQ_mSP_findStartIndex grp_mSP_findStartIndex_fu_294(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mSP_findStartIndex_fu_294_ap_start),
    .ap_done(grp_mSP_findStartIndex_fu_294_ap_done),
    .ap_idle(grp_mSP_findStartIndex_fu_294_ap_idle),
    .ap_ready(grp_mSP_findStartIndex_fu_294_ap_ready),
    .row_list_address0(grp_mSP_findStartIndex_fu_294_row_list_address0),
    .row_list_ce0(grp_mSP_findStartIndex_fu_294_row_list_ce0),
    .row_list_q0(row_list_V_q0),
    .row_list_size(row_list_size_0_lcssa_reg_239),
    .projectionToRow(projectionToRow_reg_840),
    .ap_return_0(grp_mSP_findStartIndex_fu_294_ap_return_0),
    .ap_return_1(grp_mSP_findStartIndex_fu_294_ap_return_1)
);

MPSQ_mul_35ns_33s_68_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 35 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 68 ))
mul_35ns_33s_68_1_1_U23(
    .din0(ret_fu_436_p0),
    .din1(ret_16_reg_825),
    .dout(ret_fu_436_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln1453_fu_364_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((icmp_ln1453_fu_364_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state12) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((grp_mSP_findLRBounds_fu_284_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state12)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state12);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if (((grp_mSP_findLRBounds_fu_284_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mSP_findLRBounds_fu_284_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            grp_mSP_findLRBounds_fu_284_ap_start_reg <= 1'b1;
        end else if ((grp_mSP_findLRBounds_fu_284_ap_ready == 1'b1)) begin
            grp_mSP_findLRBounds_fu_284_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mSP_findStartIndex_fu_294_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_mSP_findStartIndex_fu_294_ap_start_reg <= 1'b1;
        end else if ((grp_mSP_findStartIndex_fu_294_ap_ready == 1'b1)) begin
            grp_mSP_findStartIndex_fu_294_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1598_fu_637_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar_flatten_reg_251 <= add_ln1598_2_fu_631_p2;
    end else if (((grp_mSP_findLRBounds_fu_284_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        indvar_flatten_reg_251 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1598_reg_885 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        j_1_reg_262 <= select_ln1598_1_reg_895;
    end else if (((grp_mSP_findLRBounds_fu_284_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        j_1_reg_262 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1453_reg_802 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        row_list_size_0_lcssa_reg_239 <= GDn_points_load_reg_797;
    end else if (((icmp_ln1453_fu_364_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        row_list_size_0_lcssa_reg_239 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1453_fu_364_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        row_list_size_reg_227 <= 31'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1453_1_reg_816 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        row_list_size_reg_227 <= add_ln1455_reg_811;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1598_fu_637_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        z_reg_273 <= add_ln1604_fu_671_p2;
    end else if (((grp_mSP_findLRBounds_fu_284_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        z_reg_273 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        GDn_points_load_reg_797 <= GDn_points_q0;
        empty_reg_776 <= empty_fu_307_p1;
        icmp_ln1453_reg_802 <= icmp_ln1453_fu_364_p2;
        radiiDivisionList_addr_reg_781[5 : 1] <= zext_ln1458_1_fu_341_p1[5 : 1];
        tmp_25_reg_791[10 : 8] <= tmp_25_fu_357_p3[10 : 8];
        zext_ln1455_reg_786[6 : 4] <= zext_ln1455_fu_353_p1[6 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln1455_reg_811 <= add_ln1455_fu_374_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln1453_1_reg_816 <= icmp_ln1453_1_fu_380_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((leftRight_read_read_fu_130_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        icmp_ln1486_1_reg_855 <= icmp_ln1486_1_fu_473_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((leftRight_read_read_fu_130_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        icmp_ln1537_reg_865 <= icmp_ln1537_fu_491_p2;
        start_index_2_reg_870 <= start_index_2_fu_496_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((leftRight_read_read_fu_130_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        icmp_ln1542_reg_860 <= icmp_ln1542_fu_479_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln1598_reg_885 <= icmp_ln1598_fu_637_p2;
        icmp_ln1598_reg_885_pp1_iter1_reg <= icmp_ln1598_reg_885;
        select_ln1598_1_reg_895_pp1_iter1_reg <= select_ln1598_1_reg_895;
        select_ln1598_reg_889_pp1_iter1_reg <= select_ln1598_reg_889;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        projectionToRow_reg_840 <= projectionToRow_fu_458_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ret_16_reg_825 <= ret_16_fu_424_p2;
        rhs_reg_830 <= radiiDivisionList_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1598_fu_637_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        select_ln1598_1_reg_895 <= select_ln1598_1_fu_663_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1598_fu_637_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        select_ln1598_reg_889 <= select_ln1598_fu_655_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        start_index_reg_845 <= grp_mSP_findStartIndex_fu_294_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        temp_start_reg_875 <= temp_start_fu_624_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1453_fu_364_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        trunc_ln1453_reg_806 <= trunc_ln1453_fu_370_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        trunc_ln_reg_835 <= {{ret_fu_436_p2[67:32]}};
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        GDarrayDecoded_address0 = zext_ln1609_4_fu_707_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        GDarrayDecoded_address0 = zext_ln1455_1_fu_408_p1;
    end else begin
        GDarrayDecoded_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        GDarrayDecoded_ce0 = 1'b1;
    end else begin
        GDarrayDecoded_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        GDn_points_ce0 = 1'b1;
    end else begin
        GDn_points_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1453_1_fu_380_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1598_fu_637_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1598_reg_885 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_j_1_phi_fu_266_p4 = select_ln1598_1_reg_895;
    end else begin
        ap_phi_mux_j_1_phi_fu_266_p4 = j_1_reg_262;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1453_1_reg_816 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_row_list_size_phi_fu_231_p4 = add_ln1455_reg_811;
    end else begin
        ap_phi_mux_row_list_size_phi_fu_231_p4 = row_list_size_reg_227;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        init_patch_ce0 = 1'b1;
    end else begin
        init_patch_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln1598_reg_885_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        init_patch_we0 = 1'b1;
    end else begin
        init_patch_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        radiiDivisionList_ce0 = 1'b1;
    end else begin
        radiiDivisionList_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        row_list_V_address0 = row_list_size_cast_fu_413_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        row_list_V_address0 = grp_mSP_findStartIndex_fu_294_row_list_address0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        row_list_V_address0 = grp_mSP_findLRBounds_fu_284_row_list_address0;
    end else begin
        row_list_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        row_list_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        row_list_V_ce0 = grp_mSP_findStartIndex_fu_294_row_list_ce0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        row_list_V_ce0 = grp_mSP_findLRBounds_fu_284_row_list_ce0;
    end else begin
        row_list_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1453_1_reg_816 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        row_list_V_we0 = 1'b1;
    end else begin
        row_list_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln1453_fu_364_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln1453_1_fu_380_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln1453_1_fu_380_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((grp_mSP_findStartIndex_fu_294_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((grp_mSP_findLRBounds_fu_284_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln1598_fu_637_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln1598_fu_637_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign GDn_points_address0 = idxprom_fu_302_p1;

assign add_ln1455_1_fu_389_p2 = (tmp_25_reg_791 + trunc_ln1455_fu_385_p1);

assign add_ln1455_fu_374_p2 = (ap_phi_mux_row_list_size_phi_fu_231_p4 + 31'd1);

assign add_ln1458_fu_335_p2 = (sub_ln1458_fu_329_p2 + 6'd4);

assign add_ln1491_1_fu_544_p2 = (grp_mSP_findLRBounds_fu_284_ap_return_1 + 32'd1);

assign add_ln1491_2_fu_550_p2 = (trunc_ln1491_1_fu_540_p1 + 11'd1);

assign add_ln1491_fu_535_p2 = (select_ln1486_fu_524_p3 + original_ppl);

assign add_ln1537_fu_485_p2 = ($signed(row_list_size_0_lcssa_reg_239) + $signed(32'd4294967295));

assign add_ln1552_fu_594_p2 = (sub_ln1552_fu_585_p2 + 32'd1);

assign add_ln1573_fu_610_p2 = (trunc_ln1552_fu_590_p1 + 11'd1);

assign add_ln1598_1_fu_680_p2 = (zext_ln1598_fu_677_p1 + temp_start_reg_875);

assign add_ln1598_2_fu_631_p2 = (indvar_flatten_reg_251 + 6'd1);

assign add_ln1598_fu_643_p2 = (ap_phi_mux_j_1_phi_fu_266_p4 + 5'd1);

assign add_ln1604_fu_671_p2 = (select_ln1598_fu_655_p3 + 2'd1);

assign add_ln1609_1_fu_685_p2 = (tmp_25_reg_791 + add_ln1598_1_fu_680_p2);

assign add_ln1609_2_fu_729_p2 = (shl_ln1598_fu_720_p2 + zext_ln1609_2_fu_726_p1);

assign add_ln1609_3_fu_701_p2 = (tmp_43_cast_fu_690_p3 + zext_ln1609_1_fu_698_p1);

assign add_ln1609_fu_715_p2 = (zext_ln1455_reg_786 + zext_ln1609_fu_712_p1);

assign and_ln1486_fu_514_p2 = (icmp_ln1486_fu_509_p2 & icmp_ln1486_1_reg_855);

assign and_ln1537_fu_575_p2 = (icmp_ln1542_reg_860 & icmp_ln1537_reg_865);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_return = original_ppl;

assign empty_fu_307_p1 = original_ppl[10:0];

assign grp_mSP_findLRBounds_fu_284_ap_start = grp_mSP_findLRBounds_fu_284_ap_start_reg;

assign grp_mSP_findStartIndex_fu_294_ap_start = grp_mSP_findStartIndex_fu_294_ap_start_reg;

assign icmp_ln1453_1_fu_380_p2 = ((ap_phi_mux_row_list_size_phi_fu_231_p4 == trunc_ln1453_reg_806) ? 1'b1 : 1'b0);

assign icmp_ln1453_fu_364_p2 = (($signed(GDn_points_q0) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1486_1_fu_473_p2 = (($signed(grp_mSP_findStartIndex_fu_294_ap_return_1) > $signed(64'd10)) ? 1'b1 : 1'b0);

assign icmp_ln1486_fu_509_p2 = ((start_index_reg_845 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1491_fu_556_p2 = (($signed(add_ln1491_fu_535_p2) > $signed(add_ln1491_1_fu_544_p2)) ? 1'b1 : 1'b0);

assign icmp_ln1537_fu_491_p2 = ((start_index_reg_845 != add_ln1537_fu_485_p2) ? 1'b1 : 1'b0);

assign icmp_ln1542_fu_479_p2 = (($signed(grp_mSP_findStartIndex_fu_294_ap_return_1) < $signed(64'd18446744073709551606)) ? 1'b1 : 1'b0);

assign icmp_ln1552_fu_600_p2 = (($signed(add_ln1552_fu_594_p2) < $signed(grp_mSP_findLRBounds_fu_284_ap_return_0)) ? 1'b1 : 1'b0);

assign icmp_ln1598_fu_637_p2 = ((indvar_flatten_reg_251 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln1604_fu_649_p2 = ((z_reg_273 == 2'd2) ? 1'b1 : 1'b0);

assign idxprom_fu_302_p1 = i;

assign init_patch_address0 = zext_ln1609_3_fu_735_p1;

assign init_patch_d0 = GDarrayDecoded_q0;

assign leftRight_read_read_fu_130_p2 = leftRight;

assign or_ln1455_fu_402_p2 = (tmp_39_cast_fu_394_p3 | 12'd1);

assign projectionToRow_fu_458_p2 = ($signed(sext_ln534_fu_452_p1) + $signed(sext_ln534_2_fu_455_p1));

assign ret_16_fu_424_p2 = ($signed(sext_ln215_fu_418_p1) - $signed(sext_ln215_24_fu_421_p1));

assign ret_fu_436_p0 = ret_fu_436_p00;

assign ret_fu_436_p00 = rhs_reg_830;

assign row_list_size_cast_fu_413_p1 = row_list_size_reg_227;

assign select_ln1486_fu_524_p3 = ((and_ln1486_fu_514_p2[0:0] == 1'b1) ? start_index_1_fu_519_p2 : start_index_reg_845);

assign select_ln1491_fu_567_p3 = ((icmp_ln1491_fu_556_p2[0:0] == 1'b1) ? sub_ln1510_fu_562_p2 : trunc_ln1491_fu_531_p1);

assign select_ln1537_fu_579_p3 = ((and_ln1537_fu_575_p2[0:0] == 1'b1) ? start_index_2_reg_870 : start_index_reg_845);

assign select_ln1573_fu_616_p3 = ((icmp_ln1552_fu_600_p2[0:0] == 1'b1) ? trunc_ln1573_fu_606_p1 : add_ln1573_fu_610_p2);

assign select_ln1598_1_fu_663_p3 = ((icmp_ln1604_fu_649_p2[0:0] == 1'b1) ? add_ln1598_fu_643_p2 : ap_phi_mux_j_1_phi_fu_266_p4);

assign select_ln1598_fu_655_p3 = ((icmp_ln1604_fu_649_p2[0:0] == 1'b1) ? 2'd0 : z_reg_273);

assign sext_ln215_24_fu_421_p0 = apexZ0;

assign sext_ln215_24_fu_421_p1 = sext_ln215_24_fu_421_p0;

assign sext_ln215_fu_418_p1 = $signed(z_top);

assign sext_ln534_2_fu_455_p0 = apexZ0;

assign sext_ln534_2_fu_455_p1 = sext_ln534_2_fu_455_p0;

assign sext_ln534_fu_452_p1 = $signed(trunc_ln_reg_835);

assign shl_ln1598_fu_720_p2 = add_ln1609_fu_715_p2 << 8'd1;

assign start_index_1_fu_519_p2 = ($signed(start_index_reg_845) + $signed(32'd4294967295));

assign start_index_2_fu_496_p2 = (start_index_reg_845 + 32'd1);

assign sub_ln1458_fu_329_p2 = (tmp_fu_311_p3 - zext_ln1458_fu_325_p1);

assign sub_ln1510_fu_562_p2 = (add_ln1491_2_fu_550_p2 - empty_reg_776);

assign sub_ln1552_fu_585_p2 = (select_ln1537_fu_579_p3 - original_ppl);

assign temp_start_fu_624_p3 = ((leftRight[0:0] == 1'b1) ? select_ln1491_fu_567_p3 : select_ln1573_fu_616_p3);

assign tmp_24_fu_346_p3 = {{i}, {4'd0}};

assign tmp_25_fu_357_p3 = {{i}, {8'd0}};

assign tmp_39_cast_fu_394_p3 = {{add_ln1455_1_fu_389_p2}, {1'd0}};

assign tmp_43_cast_fu_690_p3 = {{add_ln1609_1_fu_685_p2}, {1'd0}};

assign tmp_fu_311_p3 = {{i}, {3'd0}};

assign tmp_s_fu_318_p3 = {{i}, {1'd0}};

assign trunc_ln1453_fu_370_p1 = GDn_points_q0[30:0];

assign trunc_ln1455_fu_385_p1 = ap_phi_mux_row_list_size_phi_fu_231_p4[10:0];

assign trunc_ln1491_1_fu_540_p1 = grp_mSP_findLRBounds_fu_284_ap_return_1[10:0];

assign trunc_ln1491_fu_531_p1 = select_ln1486_fu_524_p3[10:0];

assign trunc_ln1552_fu_590_p1 = sub_ln1552_fu_585_p2[10:0];

assign trunc_ln1573_fu_606_p1 = grp_mSP_findLRBounds_fu_284_ap_return_0[10:0];

assign zext_ln1455_1_fu_408_p1 = or_ln1455_fu_402_p2;

assign zext_ln1455_fu_353_p1 = tmp_24_fu_346_p3;

assign zext_ln1458_1_fu_341_p1 = add_ln1458_fu_335_p2;

assign zext_ln1458_fu_325_p1 = tmp_s_fu_318_p3;

assign zext_ln1598_fu_677_p1 = select_ln1598_1_reg_895;

assign zext_ln1609_1_fu_698_p1 = select_ln1598_reg_889;

assign zext_ln1609_2_fu_726_p1 = select_ln1598_reg_889_pp1_iter1_reg;

assign zext_ln1609_3_fu_735_p1 = add_ln1609_2_fu_729_p2;

assign zext_ln1609_4_fu_707_p1 = add_ln1609_3_fu_701_p2;

assign zext_ln1609_fu_712_p1 = select_ln1598_1_reg_895_pp1_iter1_reg;

always @ (posedge ap_clk) begin
    radiiDivisionList_addr_reg_781[0] <= 1'b0;
    zext_ln1455_reg_786[3:0] <= 4'b0000;
    zext_ln1455_reg_786[7] <= 1'b0;
    tmp_25_reg_791[7:0] <= 8'b00000000;
end

endmodule //MPSQ_makeSuperPoint_alignedToLine11
