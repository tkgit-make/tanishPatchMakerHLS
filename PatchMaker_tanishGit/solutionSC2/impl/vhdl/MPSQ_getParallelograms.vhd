-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity MPSQ_getParallelograms is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    wp_superpoints_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    wp_superpoints_ce0 : OUT STD_LOGIC;
    wp_superpoints_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    wp_superpoints_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    wp_superpoints_ce1 : OUT STD_LOGIC;
    wp_superpoints_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    wp_parameters_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    wp_parameters_ce0 : OUT STD_LOGIC;
    wp_parameters_we0 : OUT STD_LOGIC;
    wp_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    wp_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    wp_parameters_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    wp_parameters_ce1 : OUT STD_LOGIC;
    wp_parameters_we1 : OUT STD_LOGIC;
    wp_parameters_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    wp_parameters_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of MPSQ_getParallelograms is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_1F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011111";
    constant ap_const_lv64_6C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001101100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_FEB04E1C : STD_LOGIC_VECTOR (31 downto 0) := "11111110101100000100111000011100";
    constant ap_const_lv32_14FB1E4 : STD_LOGIC_VECTOR (31 downto 0) := "00000001010011111011000111100100";
    constant ap_const_lv26_15EF424 : STD_LOGIC_VECTOR (25 downto 0) := "01010111101111010000100100";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv56_0 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_1F : STD_LOGIC_VECTOR (7 downto 0) := "00011111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv30_1 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv7_5 : STD_LOGIC_VECTOR (6 downto 0) := "0000101";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv7_4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal wp_parameters_addr_reg_596 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal sext_ln46_fu_309_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln46_reg_602 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln43_fu_321_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln43_reg_609 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln64_fu_369_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln64_reg_629 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal wp_superpoints_load_2_reg_638 : STD_LOGIC_VECTOR (31 downto 0);
    signal wp_superpoints_load_3_reg_644 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_202_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal a_V_reg_650 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_straightLineProjectorFromLayerIJtoK_fu_215_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal b_V_reg_655 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_228_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal c_V_reg_660 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_241_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal d_V_reg_665 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln70_fu_388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln70_reg_670 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln72_fu_418_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln72_reg_674 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln73_fu_452_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln73_reg_679 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal sub_ln75_fu_482_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln75_reg_685 : STD_LOGIC_VECTOR (6 downto 0);
    signal wp_parameters_load_15_reg_691 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal add_ln77_fu_538_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln77_reg_696 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_202_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_202_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_202_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_202_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_215_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_215_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_215_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_215_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_228_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_228_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_228_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_228_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_241_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_241_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_241_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_241_ap_ready : STD_LOGIC;
    signal i_reg_190 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_straightLineProjectorFromLayerIJtoK_fu_202_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_NS_fsm_state5 : STD_LOGIC;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_straightLineProjectorFromLayerIJtoK_fu_215_ap_start_reg : STD_LOGIC := '0';
    signal grp_straightLineProjectorFromLayerIJtoK_fu_228_ap_start_reg : STD_LOGIC := '0';
    signal grp_straightLineProjectorFromLayerIJtoK_fu_241_ap_start_reg : STD_LOGIC := '0';
    signal tmp_s_fu_339_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_fu_354_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln72_fu_424_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln73_fu_493_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln74_fu_503_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln75_fu_549_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal zext_ln76_fu_559_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_fu_564_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_fu_76 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln691_fu_568_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln878_fu_259_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal z1_min_V_fu_265_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln878_14_fu_277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal z1_max_V_fu_283_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln886_fu_295_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln44_fu_291_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal z1_max_V_1_fu_301_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln43_fu_273_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal z1_min_V_1_fu_313_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_fu_325_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln61_fu_333_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln62_fu_348_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_41_fu_378_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal trunc_ln72_fu_394_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln72_1_fu_406_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_72_cast_fu_398_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_73_cast_fu_410_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln73_fu_428_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln73_1_fu_440_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_74_cast_fu_432_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_75_cast_fu_444_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln75_fu_458_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln75_1_fu_470_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_76_cast_fu_462_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_77_cast_fu_474_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln73_fu_488_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln74_fu_498_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln77_fu_508_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln77_1_fu_520_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_78_cast_fu_512_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_79_cast_fu_524_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln77_fu_532_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln75_fu_544_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln76_fu_554_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln59_fu_363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component MPSQ_straightLineProjectorFromLayerIJtoK IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        z_i : IN STD_LOGIC_VECTOR (31 downto 0);
        z_j : IN STD_LOGIC_VECTOR (31 downto 0);
        i : IN STD_LOGIC_VECTOR (2 downto 0);
        j : IN STD_LOGIC_VECTOR (2 downto 0);
        k : IN STD_LOGIC_VECTOR (2 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_straightLineProjectorFromLayerIJtoK_fu_202 : component MPSQ_straightLineProjectorFromLayerIJtoK
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_straightLineProjectorFromLayerIJtoK_fu_202_ap_start,
        ap_done => grp_straightLineProjectorFromLayerIJtoK_fu_202_ap_done,
        ap_idle => grp_straightLineProjectorFromLayerIJtoK_fu_202_ap_idle,
        ap_ready => grp_straightLineProjectorFromLayerIJtoK_fu_202_ap_ready,
        ap_ce => ap_const_logic_1,
        z_i => sext_ln43_reg_609,
        z_j => wp_superpoints_load_3_reg_644,
        i => ap_const_lv3_1,
        j => add_ln64_reg_629,
        k => ap_const_lv3_5,
        ap_return => grp_straightLineProjectorFromLayerIJtoK_fu_202_ap_return);

    grp_straightLineProjectorFromLayerIJtoK_fu_215 : component MPSQ_straightLineProjectorFromLayerIJtoK
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_straightLineProjectorFromLayerIJtoK_fu_215_ap_start,
        ap_done => grp_straightLineProjectorFromLayerIJtoK_fu_215_ap_done,
        ap_idle => grp_straightLineProjectorFromLayerIJtoK_fu_215_ap_idle,
        ap_ready => grp_straightLineProjectorFromLayerIJtoK_fu_215_ap_ready,
        ap_ce => ap_const_logic_1,
        z_i => sext_ln46_reg_602,
        z_j => wp_superpoints_load_3_reg_644,
        i => ap_const_lv3_1,
        j => add_ln64_reg_629,
        k => ap_const_lv3_5,
        ap_return => grp_straightLineProjectorFromLayerIJtoK_fu_215_ap_return);

    grp_straightLineProjectorFromLayerIJtoK_fu_228 : component MPSQ_straightLineProjectorFromLayerIJtoK
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_straightLineProjectorFromLayerIJtoK_fu_228_ap_start,
        ap_done => grp_straightLineProjectorFromLayerIJtoK_fu_228_ap_done,
        ap_idle => grp_straightLineProjectorFromLayerIJtoK_fu_228_ap_idle,
        ap_ready => grp_straightLineProjectorFromLayerIJtoK_fu_228_ap_ready,
        ap_ce => ap_const_logic_1,
        z_i => sext_ln43_reg_609,
        z_j => wp_superpoints_load_2_reg_638,
        i => ap_const_lv3_1,
        j => add_ln64_reg_629,
        k => ap_const_lv3_5,
        ap_return => grp_straightLineProjectorFromLayerIJtoK_fu_228_ap_return);

    grp_straightLineProjectorFromLayerIJtoK_fu_241 : component MPSQ_straightLineProjectorFromLayerIJtoK
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_straightLineProjectorFromLayerIJtoK_fu_241_ap_start,
        ap_done => grp_straightLineProjectorFromLayerIJtoK_fu_241_ap_done,
        ap_idle => grp_straightLineProjectorFromLayerIJtoK_fu_241_ap_idle,
        ap_ready => grp_straightLineProjectorFromLayerIJtoK_fu_241_ap_ready,
        ap_ce => ap_const_logic_1,
        z_i => sext_ln46_reg_602,
        z_j => wp_superpoints_load_2_reg_638,
        i => ap_const_lv3_1,
        j => add_ln64_reg_629,
        k => ap_const_lv3_5,
        ap_return => grp_straightLineProjectorFromLayerIJtoK_fu_241_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_202_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_straightLineProjectorFromLayerIJtoK_fu_202_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_logic_1 = ap_NS_fsm_state5))) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_202_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_straightLineProjectorFromLayerIJtoK_fu_202_ap_ready = ap_const_logic_1)) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_202_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_215_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_straightLineProjectorFromLayerIJtoK_fu_215_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_logic_1 = ap_NS_fsm_state5))) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_215_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_straightLineProjectorFromLayerIJtoK_fu_215_ap_ready = ap_const_logic_1)) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_215_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_228_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_straightLineProjectorFromLayerIJtoK_fu_228_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_logic_1 = ap_NS_fsm_state5))) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_228_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_straightLineProjectorFromLayerIJtoK_fu_228_ap_ready = ap_const_logic_1)) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_228_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_241_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_straightLineProjectorFromLayerIJtoK_fu_241_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_logic_1 = ap_NS_fsm_state5))) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_241_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_straightLineProjectorFromLayerIJtoK_fu_241_ap_ready = ap_const_logic_1)) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_241_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    empty_fu_76_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                empty_fu_76 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln70_reg_670 = ap_const_lv1_1))) then 
                empty_fu_76 <= add_ln691_fu_568_p2;
            end if; 
        end if;
    end process;

    i_reg_190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                i_reg_190 <= add_ln64_reg_629;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                i_reg_190 <= ap_const_lv3_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                a_V_reg_650 <= grp_straightLineProjectorFromLayerIJtoK_fu_202_ap_return;
                b_V_reg_655 <= grp_straightLineProjectorFromLayerIJtoK_fu_215_ap_return;
                c_V_reg_660 <= grp_straightLineProjectorFromLayerIJtoK_fu_228_ap_return;
                d_V_reg_665 <= grp_straightLineProjectorFromLayerIJtoK_fu_241_ap_return;
                icmp_ln70_reg_670 <= icmp_ln70_fu_388_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln64_reg_629 <= add_ln64_fu_369_p2;
                wp_superpoints_load_2_reg_638 <= wp_superpoints_q1;
                wp_superpoints_load_3_reg_644 <= wp_superpoints_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                    add_ln77_reg_696(6 downto 1) <= add_ln77_fu_538_p2(6 downto 1);
                wp_parameters_load_15_reg_691 <= wp_parameters_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                sext_ln43_reg_609 <= sext_ln43_fu_321_p1;
                sext_ln46_reg_602 <= sext_ln46_fu_309_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln70_fu_388_p2 = ap_const_lv1_1))) then
                    sub_ln72_reg_674(6 downto 1) <= sub_ln72_fu_418_p2(6 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                    sub_ln73_reg_679(6 downto 1) <= sub_ln73_fu_452_p2(6 downto 1);
                    sub_ln75_reg_685(6 downto 1) <= sub_ln75_fu_482_p2(6 downto 1);
            end if;
        end if;
    end process;
    sub_ln72_reg_674(0) <= '0';
    sub_ln73_reg_679(0) <= '0';
    sub_ln75_reg_685(0) <= '0';
    add_ln77_reg_696(0) <= '1';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state8, icmp_ln70_fu_388_p2, icmp_ln59_fu_363_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln59_fu_363_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln70_fu_388_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    add_ln64_fu_369_p2 <= std_logic_vector(unsigned(i_reg_190) + unsigned(ap_const_lv3_1));
    add_ln691_fu_568_p2 <= std_logic_vector(unsigned(wp_parameters_load_15_reg_691) + unsigned(ap_const_lv32_1));
    add_ln74_fu_498_p2 <= std_logic_vector(unsigned(sub_ln73_reg_679) + unsigned(ap_const_lv7_2));
    add_ln75_fu_544_p2 <= std_logic_vector(unsigned(sub_ln75_reg_685) + unsigned(ap_const_lv7_3));
    add_ln76_fu_554_p2 <= std_logic_vector(unsigned(sub_ln75_reg_685) + unsigned(ap_const_lv7_4));
    add_ln77_fu_538_p2 <= std_logic_vector(unsigned(sub_ln77_fu_532_p2) + unsigned(ap_const_lv7_5));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_NS_fsm_state5 <= ap_NS_fsm(4);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3, icmp_ln59_fu_363_p2)
    begin
        if ((((icmp_ln59_fu_363_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state3, icmp_ln59_fu_363_p2)
    begin
        if (((icmp_ln59_fu_363_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_straightLineProjectorFromLayerIJtoK_fu_202_ap_start <= grp_straightLineProjectorFromLayerIJtoK_fu_202_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_215_ap_start <= grp_straightLineProjectorFromLayerIJtoK_fu_215_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_228_ap_start <= grp_straightLineProjectorFromLayerIJtoK_fu_228_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_241_ap_start <= grp_straightLineProjectorFromLayerIJtoK_fu_241_ap_start_reg;
    icmp_ln59_fu_363_p2 <= "1" when (i_reg_190 = ap_const_lv3_5) else "0";
    icmp_ln70_fu_388_p2 <= "1" when (signed(tmp_41_fu_378_p4) < signed(ap_const_lv30_1)) else "0";
    icmp_ln878_14_fu_277_p2 <= "1" when (signed(wp_superpoints_q0) < signed(ap_const_lv32_14FB1E4)) else "0";
    icmp_ln878_fu_259_p2 <= "1" when (signed(wp_superpoints_q1) < signed(ap_const_lv32_FEB04E1C)) else "0";
    icmp_ln886_fu_295_p2 <= "1" when (signed(z1_min_V_fu_265_p3) > signed(z1_max_V_fu_283_p3)) else "0";
    or_ln61_fu_333_p2 <= (tmp_fu_325_p3 or ap_const_lv8_1);
    or_ln62_fu_348_p2 <= (tmp_fu_325_p3 or ap_const_lv8_1F);
    or_ln73_fu_488_p2 <= (sub_ln73_reg_679 or ap_const_lv7_1);
        sext_ln43_fu_321_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(z1_min_V_1_fu_313_p3),32));

        sext_ln46_fu_309_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(z1_max_V_1_fu_301_p3),32));

    sub_ln72_fu_418_p2 <= std_logic_vector(unsigned(tmp_72_cast_fu_398_p3) - unsigned(tmp_73_cast_fu_410_p3));
    sub_ln73_fu_452_p2 <= std_logic_vector(unsigned(tmp_74_cast_fu_432_p3) - unsigned(tmp_75_cast_fu_444_p3));
    sub_ln75_fu_482_p2 <= std_logic_vector(unsigned(tmp_76_cast_fu_462_p3) - unsigned(tmp_77_cast_fu_474_p3));
    sub_ln77_fu_532_p2 <= std_logic_vector(unsigned(tmp_78_cast_fu_512_p3) - unsigned(tmp_79_cast_fu_524_p3));
    tmp_28_fu_354_p3 <= (ap_const_lv56_0 & or_ln62_fu_348_p2);
    tmp_41_fu_378_p4 <= empty_fu_76(31 downto 2);
    tmp_72_cast_fu_398_p3 <= (trunc_ln72_fu_394_p1 & ap_const_lv3_0);
    tmp_73_cast_fu_410_p3 <= (trunc_ln72_1_fu_406_p1 & ap_const_lv1_0);
    tmp_74_cast_fu_432_p3 <= (trunc_ln73_fu_428_p1 & ap_const_lv3_0);
    tmp_75_cast_fu_444_p3 <= (trunc_ln73_1_fu_440_p1 & ap_const_lv1_0);
    tmp_76_cast_fu_462_p3 <= (trunc_ln75_fu_458_p1 & ap_const_lv3_0);
    tmp_77_cast_fu_474_p3 <= (trunc_ln75_1_fu_470_p1 & ap_const_lv1_0);
    tmp_78_cast_fu_512_p3 <= (trunc_ln77_fu_508_p1 & ap_const_lv3_0);
    tmp_79_cast_fu_524_p3 <= (trunc_ln77_1_fu_520_p1 & ap_const_lv1_0);
    tmp_fu_325_p3 <= (i_reg_190 & ap_const_lv5_0);
    tmp_s_fu_339_p3 <= (ap_const_lv56_0 & or_ln61_fu_333_p2);
    trunc_ln43_fu_273_p1 <= z1_min_V_fu_265_p3(26 - 1 downto 0);
    trunc_ln44_fu_291_p1 <= z1_max_V_fu_283_p3(26 - 1 downto 0);
    trunc_ln72_1_fu_406_p1 <= empty_fu_76(6 - 1 downto 0);
    trunc_ln72_fu_394_p1 <= empty_fu_76(4 - 1 downto 0);
    trunc_ln73_1_fu_440_p1 <= wp_parameters_q1(6 - 1 downto 0);
    trunc_ln73_fu_428_p1 <= wp_parameters_q1(4 - 1 downto 0);
    trunc_ln75_1_fu_470_p1 <= wp_parameters_q0(6 - 1 downto 0);
    trunc_ln75_fu_458_p1 <= wp_parameters_q0(4 - 1 downto 0);
    trunc_ln77_1_fu_520_p1 <= wp_parameters_q0(6 - 1 downto 0);
    trunc_ln77_fu_508_p1 <= wp_parameters_q0(4 - 1 downto 0);
    wp_parameters_addr_reg_596 <= ap_const_lv64_6C(7 - 1 downto 0);

    wp_parameters_address0_assign_proc : process(wp_parameters_addr_reg_596, ap_CS_fsm_state2, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state12, zext_ln73_fu_493_p1, zext_ln75_fu_549_p1, ap_CS_fsm_state11, zext_ln77_fu_564_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            wp_parameters_address0 <= zext_ln77_fu_564_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            wp_parameters_address0 <= zext_ln75_fu_549_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            wp_parameters_address0 <= zext_ln73_fu_493_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            wp_parameters_address0 <= wp_parameters_addr_reg_596;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            wp_parameters_address0 <= ap_const_lv64_6C(7 - 1 downto 0);
        else 
            wp_parameters_address0 <= "XXXXXXX";
        end if; 
    end process;


    wp_parameters_address1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state12, zext_ln72_fu_424_p1, zext_ln74_fu_503_p1, ap_CS_fsm_state11, zext_ln76_fu_559_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            wp_parameters_address1 <= zext_ln76_fu_559_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            wp_parameters_address1 <= zext_ln74_fu_503_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            wp_parameters_address1 <= zext_ln72_fu_424_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            wp_parameters_address1 <= ap_const_lv64_6C(7 - 1 downto 0);
        else 
            wp_parameters_address1 <= "XXXXXXX";
        end if; 
    end process;


    wp_parameters_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            wp_parameters_ce0 <= ap_const_logic_1;
        else 
            wp_parameters_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    wp_parameters_ce1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            wp_parameters_ce1 <= ap_const_logic_1;
        else 
            wp_parameters_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    wp_parameters_d0_assign_proc : process(ap_CS_fsm_state2, sext_ln46_reg_602, b_V_reg_655, d_V_reg_665, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            wp_parameters_d0 <= sext_ln46_reg_602;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            wp_parameters_d0 <= d_V_reg_665;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            wp_parameters_d0 <= b_V_reg_655;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            wp_parameters_d0 <= ap_const_lv32_0;
        else 
            wp_parameters_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    wp_parameters_d1_assign_proc : process(sext_ln43_reg_609, a_V_reg_650, c_V_reg_660, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state11, add_ln691_fu_568_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            wp_parameters_d1 <= add_ln691_fu_568_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            wp_parameters_d1 <= sext_ln43_reg_609;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            wp_parameters_d1 <= c_V_reg_660;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            wp_parameters_d1 <= a_V_reg_650;
        else 
            wp_parameters_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    wp_parameters_we0_assign_proc : process(ap_CS_fsm_state2, icmp_ln70_reg_670, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln70_reg_670 = ap_const_lv1_1)))) then 
            wp_parameters_we0 <= ap_const_logic_1;
        else 
            wp_parameters_we0 <= ap_const_logic_0;
        end if; 
    end process;


    wp_parameters_we1_assign_proc : process(icmp_ln70_reg_670, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln70_reg_670 = ap_const_lv1_1)))) then 
            wp_parameters_we1 <= ap_const_logic_1;
        else 
            wp_parameters_we1 <= ap_const_logic_0;
        end if; 
    end process;


    wp_superpoints_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, tmp_28_fu_354_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            wp_superpoints_address0 <= tmp_28_fu_354_p3(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            wp_superpoints_address0 <= ap_const_lv64_1F(8 - 1 downto 0);
        else 
            wp_superpoints_address0 <= "XXXXXXXX";
        end if; 
    end process;


    wp_superpoints_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, tmp_s_fu_339_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            wp_superpoints_address1 <= tmp_s_fu_339_p3(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            wp_superpoints_address1 <= ap_const_lv64_1(8 - 1 downto 0);
        else 
            wp_superpoints_address1 <= "XXXXXXXX";
        end if; 
    end process;


    wp_superpoints_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            wp_superpoints_ce0 <= ap_const_logic_1;
        else 
            wp_superpoints_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    wp_superpoints_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            wp_superpoints_ce1 <= ap_const_logic_1;
        else 
            wp_superpoints_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    z1_max_V_1_fu_301_p3 <= 
        ap_const_lv26_15EF424 when (icmp_ln886_fu_295_p2(0) = '1') else 
        trunc_ln44_fu_291_p1;
    z1_max_V_fu_283_p3 <= 
        wp_superpoints_q0 when (icmp_ln878_14_fu_277_p2(0) = '1') else 
        ap_const_lv32_14FB1E4;
    z1_min_V_1_fu_313_p3 <= 
        ap_const_lv26_15EF424 when (icmp_ln886_fu_295_p2(0) = '1') else 
        trunc_ln43_fu_273_p1;
    z1_min_V_fu_265_p3 <= 
        ap_const_lv32_FEB04E1C when (icmp_ln878_fu_259_p2(0) = '1') else 
        wp_superpoints_q1;
    zext_ln72_fu_424_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln72_reg_674),64));
    zext_ln73_fu_493_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln73_fu_488_p2),64));
    zext_ln74_fu_503_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln74_fu_498_p2),64));
    zext_ln75_fu_549_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln75_fu_544_p2),64));
    zext_ln76_fu_559_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln76_fu_554_p2),64));
    zext_ln77_fu_564_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln77_reg_696),64));
end behav;
