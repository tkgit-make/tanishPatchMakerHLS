-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity MPSQ_solveNextPatchPair is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    n_patches_i : IN STD_LOGIC_VECTOR (7 downto 0);
    n_patches_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    n_patches_o_ap_vld : OUT STD_LOGIC;
    GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    GDn_points_ce0 : OUT STD_LOGIC;
    GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    patches_superpoints_ce0 : OUT STD_LOGIC;
    patches_superpoints_we0 : OUT STD_LOGIC;
    patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    patches_superpoints_ce1 : OUT STD_LOGIC;
    patches_superpoints_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
    ppl : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (31 downto 0);
    z_top_max_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read7 : IN STD_LOGIC_VECTOR (31 downto 0);
    GDarrayDecoded_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    GDarrayDecoded_ce0 : OUT STD_LOGIC;
    GDarrayDecoded_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    patches_parameters_ce0 : OUT STD_LOGIC;
    patches_parameters_we0 : OUT STD_LOGIC;
    patches_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    patches_parameters_ce1 : OUT STD_LOGIC;
    patches_parameters_we1 : OUT STD_LOGIC;
    patches_parameters_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    patches_parameters_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of MPSQ_solveNextPatchPair is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (79 downto 0) := "00000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (79 downto 0) := "00000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (79 downto 0) := "00000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (79 downto 0) := "00000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (79 downto 0) := "00000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (79 downto 0) := "00000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (79 downto 0) := "00001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (79 downto 0) := "00010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (79 downto 0) := "00100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (79 downto 0) := "01000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (79 downto 0) := "10000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv64_FFFFFFFFFFF0BDC0 : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111100001011110111000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_C4747840 : STD_LOGIC_VECTOR (31 downto 0) := "11000100011101000111100001000000";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv12_3D : STD_LOGIC_VECTOR (11 downto 0) := "000000111101";
    constant ap_const_lv12_43 : STD_LOGIC_VECTOR (11 downto 0) := "000001000011";
    constant ap_const_lv12_3C : STD_LOGIC_VECTOR (11 downto 0) := "000000111100";
    constant ap_const_lv12_31 : STD_LOGIC_VECTOR (11 downto 0) := "000000110001";
    constant ap_const_lv12_54 : STD_LOGIC_VECTOR (11 downto 0) := "000001010100";
    constant ap_const_lv12_48 : STD_LOGIC_VECTOR (11 downto 0) := "000001001000";
    constant ap_const_lv12_5A : STD_LOGIC_VECTOR (11 downto 0) := "000001011010";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_FD : STD_LOGIC_VECTOR (7 downto 0) := "11111101";
    constant ap_const_lv32_FD050F1C : STD_LOGIC_VECTOR (31 downto 0) := "11111101000001010000111100011100";
    constant ap_const_lv32_E4E1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000111001001110000111000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv11_5 : STD_LOGIC_VECTOR (10 downto 0) := "00000000101";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv18_200 : STD_LOGIC_VECTOR (17 downto 0) := "000000001000000000";
    constant ap_const_lv32_FD050F80 : STD_LOGIC_VECTOR (31 downto 0) := "11111101000001010000111110000000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv12_30 : STD_LOGIC_VECTOR (11 downto 0) := "000000110000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv12_37 : STD_LOGIC_VECTOR (11 downto 0) := "000000110111";
    constant ap_const_lv37_66667 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000001100110011001100111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_fu_645_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_651 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal reg_657 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal reg_664 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makePatch_alignedToLine_fu_573_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ppl_assign4_reg_1341 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal nPatchesAtOriginal_reg_1347 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln767_fu_672_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln767_reg_1354 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln767_fu_695_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln767_reg_1359 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal add_ln722_fu_723_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln722_reg_1388 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_729_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_reg_1393 : STD_LOGIC_VECTOR (14 downto 0);
    signal patches_parameters_addr_2_reg_1398 : STD_LOGIC_VECTOR (11 downto 0);
    signal patches_parameters_addr_3_reg_1403 : STD_LOGIC_VECTOR (11 downto 0);
    signal patches_parameters_addr_4_reg_1408 : STD_LOGIC_VECTOR (11 downto 0);
    signal patches_parameters_addr_5_reg_1413 : STD_LOGIC_VECTOR (11 downto 0);
    signal patches_parameters_addr_6_reg_1418 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln787_fu_787_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln787_reg_1423 : STD_LOGIC_VECTOR (0 downto 0);
    signal thirdLastPatchIndex_fu_792_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal thirdLastPatchIndex_reg_1427 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln792_fu_803_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln792_reg_1435 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal patches_parameters_load_reg_1443 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal icmp_ln886_fu_809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_reg_1448 : STD_LOGIC_VECTOR (0 downto 0);
    signal squarePatch_alternate2_fu_814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal squarePatch_alternate2_reg_1453 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal icmp_ln807_fu_820_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln807_reg_1458 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln816_1_fu_859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln816_1_reg_1463 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal add_ln818_fu_880_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln818_reg_1467 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln819_fu_902_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln819_reg_1478 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal trunc_ln69_fu_965_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln69_reg_1493 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal or_ln819_fu_969_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln819_reg_1500 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_1514 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal select_ln828_fu_1061_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal ppl_assign_s_reg_1530 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal lastPatchIndex_1_fu_1073_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal lastPatchIndex_1_reg_1536 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal white_space_height_fu_1165_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal white_space_height_reg_1553 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal sext_ln534_fu_1173_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal grp_getSolveNextPatchPairWhileCondition_fu_627_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1563 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal empty_71_fu_1184_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln871_fu_1218_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln871_reg_1611 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal grp_straightLineProjectorFromLayerIJtoK_fu_613_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ref_tmp1_reg_1626 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal grp_makeThirdPatch_fu_513_ap_start : STD_LOGIC;
    signal grp_makeThirdPatch_fu_513_ap_done : STD_LOGIC;
    signal grp_makeThirdPatch_fu_513_ap_idle : STD_LOGIC;
    signal grp_makeThirdPatch_fu_513_ap_ready : STD_LOGIC;
    signal grp_makeThirdPatch_fu_513_n_patches_o : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_makeThirdPatch_fu_513_n_patches_o_ap_vld : STD_LOGIC;
    signal grp_makeThirdPatch_fu_513_GDn_points_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_makeThirdPatch_fu_513_GDn_points_ce0 : STD_LOGIC;
    signal grp_makeThirdPatch_fu_513_patches_superpoints_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_makeThirdPatch_fu_513_patches_superpoints_ce0 : STD_LOGIC;
    signal grp_makeThirdPatch_fu_513_patches_superpoints_we0 : STD_LOGIC;
    signal grp_makeThirdPatch_fu_513_patches_superpoints_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_makeThirdPatch_fu_513_patches_superpoints_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_makeThirdPatch_fu_513_patches_superpoints_ce1 : STD_LOGIC;
    signal grp_makeThirdPatch_fu_513_GDarrayDecoded_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_makeThirdPatch_fu_513_GDarrayDecoded_ce0 : STD_LOGIC;
    signal grp_makeThirdPatch_fu_513_patches_parameters_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_makeThirdPatch_fu_513_patches_parameters_ce0 : STD_LOGIC;
    signal grp_makeThirdPatch_fu_513_patches_parameters_we0 : STD_LOGIC;
    signal grp_makeThirdPatch_fu_513_patches_parameters_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeThirdPatch_fu_513_patches_parameters_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_makeThirdPatch_fu_513_patches_parameters_ce1 : STD_LOGIC;
    signal grp_makeThirdPatch_fu_513_patches_parameters_we1 : STD_LOGIC;
    signal grp_makeThirdPatch_fu_513_patches_parameters_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_din2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_din3 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_din4 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_din5 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_dout0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_ce : STD_LOGIC;
    signal grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_start : STD_LOGIC;
    signal grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_ready : STD_LOGIC;
    signal grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_done : STD_LOGIC;
    signal grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_idle : STD_LOGIC;
    signal grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_din2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_din3 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_din4 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_din5 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_dout0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_ce : STD_LOGIC;
    signal grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_start : STD_LOGIC;
    signal grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_ready : STD_LOGIC;
    signal grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_done : STD_LOGIC;
    signal grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_idle : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_540_ap_start : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_540_ap_done : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_540_ap_idle : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_540_ap_ready : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_540_n_patches_o : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_solveComplmentaryPatch_fu_540_n_patches_o_ap_vld : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_540_GDn_points_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_solveComplmentaryPatch_fu_540_GDn_points_ce0 : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_540_patches_superpoints_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_solveComplmentaryPatch_fu_540_patches_superpoints_ce0 : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_540_patches_superpoints_we0 : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_540_patches_superpoints_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_solveComplmentaryPatch_fu_540_patches_superpoints_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_solveComplmentaryPatch_fu_540_patches_superpoints_ce1 : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_540_GDarrayDecoded_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_solveComplmentaryPatch_fu_540_GDarrayDecoded_ce0 : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_540_patches_parameters_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_solveComplmentaryPatch_fu_540_patches_parameters_ce0 : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_540_patches_parameters_we0 : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_540_patches_parameters_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solveComplmentaryPatch_fu_540_patches_parameters_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_solveComplmentaryPatch_fu_540_patches_parameters_ce1 : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_540_ap_return_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_solveComplmentaryPatch_fu_540_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_solveComplmentaryPatch_fu_540_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solveComplmentaryPatch_fu_540_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solveComplmentaryPatch_fu_540_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solveComplmentaryPatch_fu_540_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solveComplmentaryPatch_fu_540_ap_return_6 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_solveComplmentaryPatch_fu_540_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din3 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din4 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din5 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_dout0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_ce : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_start : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_ready : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_done : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_idle : STD_LOGIC;
    signal grp_solveComplmentaryPatch_fu_540_grp_fu_1631_p_din0 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_solveComplmentaryPatch_fu_540_grp_fu_1631_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_solveComplmentaryPatch_fu_540_grp_fu_1631_p_dout0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_solveComplmentaryPatch_fu_540_grp_fu_1631_p_ce : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_573_ap_start : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_573_ap_done : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_573_ap_idle : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_573_ap_ready : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_573_n_patches_o : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_makePatch_alignedToLine_fu_573_n_patches_o_ap_vld : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_573_GDn_points_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_makePatch_alignedToLine_fu_573_GDn_points_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_573_patches_superpoints_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_makePatch_alignedToLine_fu_573_patches_superpoints_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_573_patches_superpoints_we0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_573_patches_superpoints_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_makePatch_alignedToLine_fu_573_apexZ0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makePatch_alignedToLine_fu_573_z_top : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makePatch_alignedToLine_fu_573_p_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makePatch_alignedToLine_fu_573_leftRight : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_makePatch_alignedToLine_fu_573_GDarrayDecoded_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_makePatch_alignedToLine_fu_573_GDarrayDecoded_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_573_patches_parameters_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_makePatch_alignedToLine_fu_573_patches_parameters_ce0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_573_patches_parameters_we0 : STD_LOGIC;
    signal grp_makePatch_alignedToLine_fu_573_patches_parameters_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_areWedgeSuperPointsEqual_fu_601_ap_start : STD_LOGIC;
    signal grp_areWedgeSuperPointsEqual_fu_601_ap_done : STD_LOGIC;
    signal grp_areWedgeSuperPointsEqual_fu_601_ap_idle : STD_LOGIC;
    signal grp_areWedgeSuperPointsEqual_fu_601_ap_ready : STD_LOGIC;
    signal grp_areWedgeSuperPointsEqual_fu_601_wsp1_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_areWedgeSuperPointsEqual_fu_601_wsp1_2_ce0 : STD_LOGIC;
    signal grp_areWedgeSuperPointsEqual_fu_601_wsp1_2_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_areWedgeSuperPointsEqual_fu_601_wsp1_2_ce1 : STD_LOGIC;
    signal grp_areWedgeSuperPointsEqual_fu_601_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_613_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_613_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_613_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_613_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_613_ap_ce : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_613_z_i : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_613_z_j : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_613_i : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_613_j : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_613_k : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_getSolveNextPatchPairWhileCondition_fu_627_ap_start : STD_LOGIC;
    signal grp_getSolveNextPatchPairWhileCondition_fu_627_ap_done : STD_LOGIC;
    signal grp_getSolveNextPatchPairWhileCondition_fu_627_ap_idle : STD_LOGIC;
    signal grp_getSolveNextPatchPairWhileCondition_fu_627_ap_ready : STD_LOGIC;
    signal grp_getSolveNextPatchPairWhileCondition_fu_627_GDn_points_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_getSolveNextPatchPairWhileCondition_fu_627_GDn_points_ce0 : STD_LOGIC;
    signal grp_getSolveNextPatchPairWhileCondition_fu_627_patches_parameters_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_getSolveNextPatchPairWhileCondition_fu_627_patches_parameters_ce0 : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1635_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1635_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1635_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1635_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1635_ap_ce : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1635_z_i : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1635_z_j : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1635_i : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1635_j : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1635_k : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1635_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1644_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1644_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1644_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1644_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1644_ap_ce : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1644_z_i : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1644_z_j : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1644_i : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1644_j : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1644_k : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1644_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_317 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal repeat_original_ph_reg_329 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln792_fu_797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal repeat_original_reg_343 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal agg_tmp118_0_reg_356 : STD_LOGIC_VECTOR (31 downto 0);
    signal lastPatchIndex_0_reg_366 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln861_fu_1212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal white_space_height_0_reg_376 : STD_LOGIC_VECTOR (63 downto 0);
    signal previous_white_space_height_0_reg_386 : STD_LOGIC_VECTOR (63 downto 0);
    signal current_z_top_index_0_reg_398 : STD_LOGIC_VECTOR (31 downto 0);
    signal counter_0_reg_410 : STD_LOGIC_VECTOR (31 downto 0);
    signal counterUpshift_0_reg_422 : STD_LOGIC_VECTOR (31 downto 0);
    signal previous_z_top_min_V_0_reg_434 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_top_min_0_reg_446 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_top_min_2_ph_reg_457 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal ppl_assign_0_reg_468 : STD_LOGIC_VECTOR (31 downto 0);
    signal complementary_apexZ0_0_reg_478 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_top_min_2_reg_488 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_madeComplementaryPatch_phi_fu_504_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal madeComplementaryPatch_reg_499 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_makeThirdPatch_fu_513_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state80 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal grp_solveComplmentaryPatch_fu_540_ap_start_reg : STD_LOGIC := '0';
    signal grp_makePatch_alignedToLine_fu_573_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal grp_areWedgeSuperPointsEqual_fu_601_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (79 downto 0);
    signal ap_NS_fsm_state8 : STD_LOGIC;
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal grp_straightLineProjectorFromLayerIJtoK_fu_613_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm_state29 : STD_LOGIC;
    signal ap_NS_fsm_state76 : STD_LOGIC;
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal grp_getSolveNextPatchPairWhileCondition_fu_627_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal zext_ln767_2_fu_707_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln768_fu_718_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln767_1_fu_742_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln886_fu_752_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln534_fu_762_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln534_1_fu_772_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln534_2_fu_782_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln818_6_fu_960_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln828_4_fu_1046_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln845_1_fu_1115_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln846_fu_1126_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln871_2_fu_1264_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln871_1_fu_1253_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_fu_683_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_cast_fu_676_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln767_fu_691_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln767_1_fu_701_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln768_fu_712_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln767_fu_737_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln886_fu_747_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln534_fu_757_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln534_1_fu_767_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln534_2_fu_777_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal and_ln886_fu_826_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notChoppedPatch_fu_830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln816_fu_847_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln816_fu_835_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln816_fu_853_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_1_fu_841_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln_fu_865_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln818_fu_873_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln818_1_fu_877_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_896_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_896_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1309_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_2_fu_911_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_3_fu_924_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln818_4_fu_932_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln818_3_fu_920_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_896_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln818_1_fu_936_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln818_5_fu_942_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln818_2_fu_946_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_5_fu_952_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln828_fu_974_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_993_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_993_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1316_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_7_fu_1011_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln828_2_fu_1018_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln828_1_fu_1008_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_993_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln828_1_fu_1022_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln828_3_fu_1028_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln828_2_fu_1032_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_8_fu_1038_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln69_1_fu_1051_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln878_fu_1055_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln835_fu_1069_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_9_fu_1086_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_fu_1079_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln845_fu_1093_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln845_fu_1097_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln845_fu_1103_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln845_fu_1109_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln846_fu_1120_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln215_1_fu_1135_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_fu_1131_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_1_fu_1135_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_3_fu_1149_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_2_fu_1145_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln215_3_fu_1149_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_fu_1139_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_1_fu_1153_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln878_1_fu_1159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_1229_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_16_cast_fu_1222_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln871_fu_1237_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln871_fu_1241_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln871_fu_1247_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln871_1_fu_1258_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1309_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1309_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1316_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1316_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_896_ap_start : STD_LOGIC;
    signal grp_fu_896_ap_done : STD_LOGIC;
    signal grp_fu_993_ap_start : STD_LOGIC;
    signal grp_fu_993_ap_done : STD_LOGIC;
    signal grp_fu_1631_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1631_p0 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_1631_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1631_ce : STD_LOGIC;
    signal ap_block_state80_on_subcall_done : BOOLEAN;
    signal grp_fu_1309_p00 : STD_LOGIC_VECTOR (36 downto 0);
    signal grp_fu_1316_p00 : STD_LOGIC_VECTOR (36 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component MPSQ_makeThirdPatch IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        n_patches_i : IN STD_LOGIC_VECTOR (7 downto 0);
        n_patches_o : OUT STD_LOGIC_VECTOR (7 downto 0);
        n_patches_o_ap_vld : OUT STD_LOGIC;
        GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        GDn_points_ce0 : OUT STD_LOGIC;
        GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_superpoints_ce0 : OUT STD_LOGIC;
        patches_superpoints_we0 : OUT STD_LOGIC;
        patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_superpoints_ce1 : OUT STD_LOGIC;
        patches_superpoints_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        lastPatchIndex : IN STD_LOGIC_VECTOR (7 downto 0);
        z_top_min : IN STD_LOGIC_VECTOR (31 downto 0);
        z_top_max : IN STD_LOGIC_VECTOR (31 downto 0);
        complementary_apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
        apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ppl : IN STD_LOGIC_VECTOR (31 downto 0);
        GDarrayDecoded_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        GDarrayDecoded_ce0 : OUT STD_LOGIC;
        GDarrayDecoded_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_parameters_ce0 : OUT STD_LOGIC;
        patches_parameters_we0 : OUT STD_LOGIC;
        patches_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_parameters_ce1 : OUT STD_LOGIC;
        patches_parameters_we1 : OUT STD_LOGIC;
        patches_parameters_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_din2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_din3 : OUT STD_LOGIC_VECTOR (2 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_din4 : OUT STD_LOGIC_VECTOR (2 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_din5 : OUT STD_LOGIC_VECTOR (2 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_ce : OUT STD_LOGIC;
        grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_start : OUT STD_LOGIC;
        grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_ready : IN STD_LOGIC;
        grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_done : IN STD_LOGIC;
        grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_idle : IN STD_LOGIC;
        grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_din2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_din3 : OUT STD_LOGIC_VECTOR (2 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_din4 : OUT STD_LOGIC_VECTOR (2 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_din5 : OUT STD_LOGIC_VECTOR (2 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_ce : OUT STD_LOGIC;
        grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_start : OUT STD_LOGIC;
        grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_ready : IN STD_LOGIC;
        grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_done : IN STD_LOGIC;
        grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_idle : IN STD_LOGIC );
    end component;


    component MPSQ_solveComplmentaryPatch IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        n_patches_i : IN STD_LOGIC_VECTOR (7 downto 0);
        n_patches_o : OUT STD_LOGIC_VECTOR (7 downto 0);
        n_patches_o_ap_vld : OUT STD_LOGIC;
        GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        GDn_points_ce0 : OUT STD_LOGIC;
        GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_superpoints_ce0 : OUT STD_LOGIC;
        patches_superpoints_we0 : OUT STD_LOGIC;
        patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_superpoints_ce1 : OUT STD_LOGIC;
        patches_superpoints_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ppl : IN STD_LOGIC_VECTOR (31 downto 0);
        nPatchesAtOriginal : IN STD_LOGIC_VECTOR (7 downto 0);
        previous_z_top_min_read : IN STD_LOGIC_VECTOR (31 downto 0);
        complementary_apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
        white_space_height_read : IN STD_LOGIC_VECTOR (63 downto 0);
        original_c : IN STD_LOGIC_VECTOR (31 downto 0);
        original_d : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read12 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read13 : IN STD_LOGIC_VECTOR (31 downto 0);
        z_top_min_read : IN STD_LOGIC_VECTOR (31 downto 0);
        GDarrayDecoded_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        GDarrayDecoded_ce0 : OUT STD_LOGIC;
        GDarrayDecoded_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_parameters_ce0 : OUT STD_LOGIC;
        patches_parameters_we0 : OUT STD_LOGIC;
        patches_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_parameters_ce1 : OUT STD_LOGIC;
        patches_parameters_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din3 : OUT STD_LOGIC_VECTOR (2 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din4 : OUT STD_LOGIC_VECTOR (2 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din5 : OUT STD_LOGIC_VECTOR (2 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_ce : OUT STD_LOGIC;
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_start : OUT STD_LOGIC;
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_ready : IN STD_LOGIC;
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_done : IN STD_LOGIC;
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_idle : IN STD_LOGIC;
        grp_fu_1631_p_din0 : OUT STD_LOGIC_VECTOR (32 downto 0);
        grp_fu_1631_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1631_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1631_p_ce : OUT STD_LOGIC );
    end component;


    component MPSQ_makePatch_alignedToLine IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        n_patches_i : IN STD_LOGIC_VECTOR (7 downto 0);
        n_patches_o : OUT STD_LOGIC_VECTOR (7 downto 0);
        n_patches_o_ap_vld : OUT STD_LOGIC;
        GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        GDn_points_ce0 : OUT STD_LOGIC;
        GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_superpoints_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_superpoints_ce0 : OUT STD_LOGIC;
        patches_superpoints_we0 : OUT STD_LOGIC;
        patches_superpoints_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        apexZ0 : IN STD_LOGIC_VECTOR (31 downto 0);
        z_top : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        leftRight : IN STD_LOGIC_VECTOR (0 downto 0);
        GDarrayDecoded_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        GDarrayDecoded_ce0 : OUT STD_LOGIC;
        GDarrayDecoded_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_parameters_ce0 : OUT STD_LOGIC;
        patches_parameters_we0 : OUT STD_LOGIC;
        patches_parameters_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MPSQ_areWedgeSuperPointsEqual IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        wsp1_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        wsp1_2_ce0 : OUT STD_LOGIC;
        wsp1_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        wsp1_2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        wsp1_2_ce1 : OUT STD_LOGIC;
        wsp1_2_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        wsp1 : IN STD_LOGIC_VECTOR (7 downto 0);
        wsp11 : IN STD_LOGIC_VECTOR (2 downto 0);
        wsp2 : IN STD_LOGIC_VECTOR (7 downto 0);
        wsp23 : IN STD_LOGIC_VECTOR (2 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component MPSQ_straightLineProjectorFromLayerIJtoK IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        z_i : IN STD_LOGIC_VECTOR (31 downto 0);
        z_j : IN STD_LOGIC_VECTOR (31 downto 0);
        i : IN STD_LOGIC_VECTOR (2 downto 0);
        j : IN STD_LOGIC_VECTOR (2 downto 0);
        k : IN STD_LOGIC_VECTOR (2 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MPSQ_getSolveNextPatchPairWhileCondition IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        GDn_points_ce0 : OUT STD_LOGIC;
        GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        lastPatchIndex : IN STD_LOGIC_VECTOR (4 downto 0);
        repeat_original : IN STD_LOGIC_VECTOR (0 downto 0);
        white_space_height : IN STD_LOGIC_VECTOR (63 downto 0);
        previous_white_space_height : IN STD_LOGIC_VECTOR (63 downto 0);
        current_z_top_index : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_parameters_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        patches_parameters_ce0 : OUT STD_LOGIC;
        patches_parameters_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component MPSQ_urem_11ns_4ns_11_15_seq_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component MPSQ_mul_mul_18ns_20ns_37_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (19 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (36 downto 0) );
    end component;


    component MPSQ_mul_33s_64s_64_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (32 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    grp_makeThirdPatch_fu_513 : component MPSQ_makeThirdPatch
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_makeThirdPatch_fu_513_ap_start,
        ap_done => grp_makeThirdPatch_fu_513_ap_done,
        ap_idle => grp_makeThirdPatch_fu_513_ap_idle,
        ap_ready => grp_makeThirdPatch_fu_513_ap_ready,
        n_patches_i => n_patches_i,
        n_patches_o => grp_makeThirdPatch_fu_513_n_patches_o,
        n_patches_o_ap_vld => grp_makeThirdPatch_fu_513_n_patches_o_ap_vld,
        GDn_points_address0 => grp_makeThirdPatch_fu_513_GDn_points_address0,
        GDn_points_ce0 => grp_makeThirdPatch_fu_513_GDn_points_ce0,
        GDn_points_q0 => GDn_points_q0,
        patches_superpoints_address0 => grp_makeThirdPatch_fu_513_patches_superpoints_address0,
        patches_superpoints_ce0 => grp_makeThirdPatch_fu_513_patches_superpoints_ce0,
        patches_superpoints_we0 => grp_makeThirdPatch_fu_513_patches_superpoints_we0,
        patches_superpoints_d0 => grp_makeThirdPatch_fu_513_patches_superpoints_d0,
        patches_superpoints_q0 => patches_superpoints_q0,
        patches_superpoints_address1 => grp_makeThirdPatch_fu_513_patches_superpoints_address1,
        patches_superpoints_ce1 => grp_makeThirdPatch_fu_513_patches_superpoints_ce1,
        patches_superpoints_q1 => patches_superpoints_q1,
        lastPatchIndex => reg_651,
        z_top_min => z_top_min_2_reg_488,
        z_top_max => z_top_max_read,
        complementary_apexZ0 => complementary_apexZ0_0_reg_478,
        apexZ0 => apexZ0,
        ppl => ppl_assign_0_reg_468,
        GDarrayDecoded_address0 => grp_makeThirdPatch_fu_513_GDarrayDecoded_address0,
        GDarrayDecoded_ce0 => grp_makeThirdPatch_fu_513_GDarrayDecoded_ce0,
        GDarrayDecoded_q0 => GDarrayDecoded_q0,
        patches_parameters_address0 => grp_makeThirdPatch_fu_513_patches_parameters_address0,
        patches_parameters_ce0 => grp_makeThirdPatch_fu_513_patches_parameters_ce0,
        patches_parameters_we0 => grp_makeThirdPatch_fu_513_patches_parameters_we0,
        patches_parameters_d0 => grp_makeThirdPatch_fu_513_patches_parameters_d0,
        patches_parameters_q0 => patches_parameters_q0,
        patches_parameters_address1 => grp_makeThirdPatch_fu_513_patches_parameters_address1,
        patches_parameters_ce1 => grp_makeThirdPatch_fu_513_patches_parameters_ce1,
        patches_parameters_we1 => grp_makeThirdPatch_fu_513_patches_parameters_we1,
        patches_parameters_d1 => grp_makeThirdPatch_fu_513_patches_parameters_d1,
        patches_parameters_q1 => patches_parameters_q1,
        grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_din1 => grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_din1,
        grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_din2 => grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_din2,
        grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_din3 => grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_din3,
        grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_din4 => grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_din4,
        grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_din5 => grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_din5,
        grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_dout0 => grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_dout0,
        grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_ce => grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_ce,
        grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_start => grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_start,
        grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_ready => grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_ready,
        grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_done => grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_done,
        grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_idle => grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_idle,
        grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_din1 => grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_din1,
        grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_din2 => grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_din2,
        grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_din3 => grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_din3,
        grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_din4 => grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_din4,
        grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_din5 => grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_din5,
        grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_dout0 => grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_dout0,
        grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_ce => grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_ce,
        grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_start => grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_start,
        grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_ready => grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_ready,
        grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_done => grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_done,
        grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_idle => grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_idle);

    grp_solveComplmentaryPatch_fu_540 : component MPSQ_solveComplmentaryPatch
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_solveComplmentaryPatch_fu_540_ap_start,
        ap_done => grp_solveComplmentaryPatch_fu_540_ap_done,
        ap_idle => grp_solveComplmentaryPatch_fu_540_ap_idle,
        ap_ready => grp_solveComplmentaryPatch_fu_540_ap_ready,
        n_patches_i => n_patches_i,
        n_patches_o => grp_solveComplmentaryPatch_fu_540_n_patches_o,
        n_patches_o_ap_vld => grp_solveComplmentaryPatch_fu_540_n_patches_o_ap_vld,
        GDn_points_address0 => grp_solveComplmentaryPatch_fu_540_GDn_points_address0,
        GDn_points_ce0 => grp_solveComplmentaryPatch_fu_540_GDn_points_ce0,
        GDn_points_q0 => GDn_points_q0,
        patches_superpoints_address0 => grp_solveComplmentaryPatch_fu_540_patches_superpoints_address0,
        patches_superpoints_ce0 => grp_solveComplmentaryPatch_fu_540_patches_superpoints_ce0,
        patches_superpoints_we0 => grp_solveComplmentaryPatch_fu_540_patches_superpoints_we0,
        patches_superpoints_d0 => grp_solveComplmentaryPatch_fu_540_patches_superpoints_d0,
        patches_superpoints_q0 => patches_superpoints_q0,
        patches_superpoints_address1 => grp_solveComplmentaryPatch_fu_540_patches_superpoints_address1,
        patches_superpoints_ce1 => grp_solveComplmentaryPatch_fu_540_patches_superpoints_ce1,
        patches_superpoints_q1 => patches_superpoints_q1,
        ppl => ppl_assign_s_reg_1530,
        nPatchesAtOriginal => nPatchesAtOriginal_reg_1347,
        previous_z_top_min_read => previous_z_top_min_V_0_reg_434,
        complementary_apexZ0 => trunc_ln69_reg_1493,
        white_space_height_read => white_space_height_0_reg_376,
        original_c => reg_657,
        original_d => reg_664,
        p_read12 => counter_0_reg_410,
        p_read13 => counterUpshift_0_reg_422,
        z_top_min_read => z_top_min_0_reg_446,
        GDarrayDecoded_address0 => grp_solveComplmentaryPatch_fu_540_GDarrayDecoded_address0,
        GDarrayDecoded_ce0 => grp_solveComplmentaryPatch_fu_540_GDarrayDecoded_ce0,
        GDarrayDecoded_q0 => GDarrayDecoded_q0,
        patches_parameters_address0 => grp_solveComplmentaryPatch_fu_540_patches_parameters_address0,
        patches_parameters_ce0 => grp_solveComplmentaryPatch_fu_540_patches_parameters_ce0,
        patches_parameters_we0 => grp_solveComplmentaryPatch_fu_540_patches_parameters_we0,
        patches_parameters_d0 => grp_solveComplmentaryPatch_fu_540_patches_parameters_d0,
        patches_parameters_q0 => patches_parameters_q0,
        patches_parameters_address1 => grp_solveComplmentaryPatch_fu_540_patches_parameters_address1,
        patches_parameters_ce1 => grp_solveComplmentaryPatch_fu_540_patches_parameters_ce1,
        patches_parameters_q1 => patches_parameters_q1,
        ap_return_0 => grp_solveComplmentaryPatch_fu_540_ap_return_0,
        ap_return_1 => grp_solveComplmentaryPatch_fu_540_ap_return_1,
        ap_return_2 => grp_solveComplmentaryPatch_fu_540_ap_return_2,
        ap_return_3 => grp_solveComplmentaryPatch_fu_540_ap_return_3,
        ap_return_4 => grp_solveComplmentaryPatch_fu_540_ap_return_4,
        ap_return_5 => grp_solveComplmentaryPatch_fu_540_ap_return_5,
        ap_return_6 => grp_solveComplmentaryPatch_fu_540_ap_return_6,
        ap_return_7 => grp_solveComplmentaryPatch_fu_540_ap_return_7,
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din1 => grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din1,
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din2 => grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din2,
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din3 => grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din3,
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din4 => grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din4,
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din5 => grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din5,
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_dout0 => grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_dout0,
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_ce => grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_ce,
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_start => grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_start,
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_ready => grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_ready,
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_done => grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_done,
        grp_straightLineProjectorFromLayerIJtoK_fu_613_p_idle => grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_idle,
        grp_fu_1631_p_din0 => grp_solveComplmentaryPatch_fu_540_grp_fu_1631_p_din0,
        grp_fu_1631_p_din1 => grp_solveComplmentaryPatch_fu_540_grp_fu_1631_p_din1,
        grp_fu_1631_p_dout0 => grp_solveComplmentaryPatch_fu_540_grp_fu_1631_p_dout0,
        grp_fu_1631_p_ce => grp_solveComplmentaryPatch_fu_540_grp_fu_1631_p_ce);

    grp_makePatch_alignedToLine_fu_573 : component MPSQ_makePatch_alignedToLine
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_makePatch_alignedToLine_fu_573_ap_start,
        ap_done => grp_makePatch_alignedToLine_fu_573_ap_done,
        ap_idle => grp_makePatch_alignedToLine_fu_573_ap_idle,
        ap_ready => grp_makePatch_alignedToLine_fu_573_ap_ready,
        n_patches_i => n_patches_i,
        n_patches_o => grp_makePatch_alignedToLine_fu_573_n_patches_o,
        n_patches_o_ap_vld => grp_makePatch_alignedToLine_fu_573_n_patches_o_ap_vld,
        GDn_points_address0 => grp_makePatch_alignedToLine_fu_573_GDn_points_address0,
        GDn_points_ce0 => grp_makePatch_alignedToLine_fu_573_GDn_points_ce0,
        GDn_points_q0 => GDn_points_q0,
        patches_superpoints_address0 => grp_makePatch_alignedToLine_fu_573_patches_superpoints_address0,
        patches_superpoints_ce0 => grp_makePatch_alignedToLine_fu_573_patches_superpoints_ce0,
        patches_superpoints_we0 => grp_makePatch_alignedToLine_fu_573_patches_superpoints_we0,
        patches_superpoints_d0 => grp_makePatch_alignedToLine_fu_573_patches_superpoints_d0,
        patches_superpoints_q0 => patches_superpoints_q0,
        apexZ0 => grp_makePatch_alignedToLine_fu_573_apexZ0,
        z_top => grp_makePatch_alignedToLine_fu_573_z_top,
        p_read => grp_makePatch_alignedToLine_fu_573_p_read,
        leftRight => grp_makePatch_alignedToLine_fu_573_leftRight,
        GDarrayDecoded_address0 => grp_makePatch_alignedToLine_fu_573_GDarrayDecoded_address0,
        GDarrayDecoded_ce0 => grp_makePatch_alignedToLine_fu_573_GDarrayDecoded_ce0,
        GDarrayDecoded_q0 => GDarrayDecoded_q0,
        patches_parameters_address0 => grp_makePatch_alignedToLine_fu_573_patches_parameters_address0,
        patches_parameters_ce0 => grp_makePatch_alignedToLine_fu_573_patches_parameters_ce0,
        patches_parameters_we0 => grp_makePatch_alignedToLine_fu_573_patches_parameters_we0,
        patches_parameters_d0 => grp_makePatch_alignedToLine_fu_573_patches_parameters_d0,
        patches_parameters_q0 => patches_parameters_q0,
        ap_return => grp_makePatch_alignedToLine_fu_573_ap_return);

    grp_areWedgeSuperPointsEqual_fu_601 : component MPSQ_areWedgeSuperPointsEqual
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_areWedgeSuperPointsEqual_fu_601_ap_start,
        ap_done => grp_areWedgeSuperPointsEqual_fu_601_ap_done,
        ap_idle => grp_areWedgeSuperPointsEqual_fu_601_ap_idle,
        ap_ready => grp_areWedgeSuperPointsEqual_fu_601_ap_ready,
        wsp1_2_address0 => grp_areWedgeSuperPointsEqual_fu_601_wsp1_2_address0,
        wsp1_2_ce0 => grp_areWedgeSuperPointsEqual_fu_601_wsp1_2_ce0,
        wsp1_2_q0 => patches_superpoints_q0,
        wsp1_2_address1 => grp_areWedgeSuperPointsEqual_fu_601_wsp1_2_address1,
        wsp1_2_ce1 => grp_areWedgeSuperPointsEqual_fu_601_wsp1_2_ce1,
        wsp1_2_q1 => patches_superpoints_q1,
        wsp1 => reg_651,
        wsp11 => i_reg_317,
        wsp2 => thirdLastPatchIndex_reg_1427,
        wsp23 => i_reg_317,
        ap_return => grp_areWedgeSuperPointsEqual_fu_601_ap_return);

    grp_straightLineProjectorFromLayerIJtoK_fu_613 : component MPSQ_straightLineProjectorFromLayerIJtoK
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_straightLineProjectorFromLayerIJtoK_fu_613_ap_start,
        ap_done => grp_straightLineProjectorFromLayerIJtoK_fu_613_ap_done,
        ap_idle => grp_straightLineProjectorFromLayerIJtoK_fu_613_ap_idle,
        ap_ready => grp_straightLineProjectorFromLayerIJtoK_fu_613_ap_ready,
        ap_ce => grp_straightLineProjectorFromLayerIJtoK_fu_613_ap_ce,
        z_i => grp_straightLineProjectorFromLayerIJtoK_fu_613_z_i,
        z_j => grp_straightLineProjectorFromLayerIJtoK_fu_613_z_j,
        i => grp_straightLineProjectorFromLayerIJtoK_fu_613_i,
        j => grp_straightLineProjectorFromLayerIJtoK_fu_613_j,
        k => grp_straightLineProjectorFromLayerIJtoK_fu_613_k,
        ap_return => grp_straightLineProjectorFromLayerIJtoK_fu_613_ap_return);

    grp_getSolveNextPatchPairWhileCondition_fu_627 : component MPSQ_getSolveNextPatchPairWhileCondition
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_getSolveNextPatchPairWhileCondition_fu_627_ap_start,
        ap_done => grp_getSolveNextPatchPairWhileCondition_fu_627_ap_done,
        ap_idle => grp_getSolveNextPatchPairWhileCondition_fu_627_ap_idle,
        ap_ready => grp_getSolveNextPatchPairWhileCondition_fu_627_ap_ready,
        GDn_points_address0 => grp_getSolveNextPatchPairWhileCondition_fu_627_GDn_points_address0,
        GDn_points_ce0 => grp_getSolveNextPatchPairWhileCondition_fu_627_GDn_points_ce0,
        GDn_points_q0 => GDn_points_q0,
        lastPatchIndex => lastPatchIndex_0_reg_366,
        repeat_original => repeat_original_reg_343,
        white_space_height => white_space_height_0_reg_376,
        previous_white_space_height => previous_white_space_height_0_reg_386,
        current_z_top_index => current_z_top_index_0_reg_398,
        patches_parameters_address0 => grp_getSolveNextPatchPairWhileCondition_fu_627_patches_parameters_address0,
        patches_parameters_ce0 => grp_getSolveNextPatchPairWhileCondition_fu_627_patches_parameters_ce0,
        patches_parameters_q0 => patches_parameters_q0,
        ap_return => grp_getSolveNextPatchPairWhileCondition_fu_627_ap_return);

    grp_straightLineProjectorFromLayerIJtoK_fu_1635 : component MPSQ_straightLineProjectorFromLayerIJtoK
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_straightLineProjectorFromLayerIJtoK_fu_1635_ap_start,
        ap_done => grp_straightLineProjectorFromLayerIJtoK_fu_1635_ap_done,
        ap_idle => grp_straightLineProjectorFromLayerIJtoK_fu_1635_ap_idle,
        ap_ready => grp_straightLineProjectorFromLayerIJtoK_fu_1635_ap_ready,
        ap_ce => grp_straightLineProjectorFromLayerIJtoK_fu_1635_ap_ce,
        z_i => grp_straightLineProjectorFromLayerIJtoK_fu_1635_z_i,
        z_j => grp_straightLineProjectorFromLayerIJtoK_fu_1635_z_j,
        i => grp_straightLineProjectorFromLayerIJtoK_fu_1635_i,
        j => grp_straightLineProjectorFromLayerIJtoK_fu_1635_j,
        k => grp_straightLineProjectorFromLayerIJtoK_fu_1635_k,
        ap_return => grp_straightLineProjectorFromLayerIJtoK_fu_1635_ap_return);

    grp_straightLineProjectorFromLayerIJtoK_fu_1644 : component MPSQ_straightLineProjectorFromLayerIJtoK
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_straightLineProjectorFromLayerIJtoK_fu_1644_ap_start,
        ap_done => grp_straightLineProjectorFromLayerIJtoK_fu_1644_ap_done,
        ap_idle => grp_straightLineProjectorFromLayerIJtoK_fu_1644_ap_idle,
        ap_ready => grp_straightLineProjectorFromLayerIJtoK_fu_1644_ap_ready,
        ap_ce => grp_straightLineProjectorFromLayerIJtoK_fu_1644_ap_ce,
        z_i => grp_straightLineProjectorFromLayerIJtoK_fu_1644_z_i,
        z_j => grp_straightLineProjectorFromLayerIJtoK_fu_1644_z_j,
        i => grp_straightLineProjectorFromLayerIJtoK_fu_1644_i,
        j => grp_straightLineProjectorFromLayerIJtoK_fu_1644_j,
        k => grp_straightLineProjectorFromLayerIJtoK_fu_1644_k,
        ap_return => grp_straightLineProjectorFromLayerIJtoK_fu_1644_ap_return);

    urem_11ns_4ns_11_15_seq_1_U146 : component MPSQ_urem_11ns_4ns_11_15_seq_1
    generic map (
        ID => 1,
        NUM_STAGE => 15,
        din0_WIDTH => 11,
        din1_WIDTH => 4,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_896_ap_start,
        done => grp_fu_896_ap_done,
        din0 => grp_fu_896_p0,
        din1 => grp_fu_896_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_896_p2);

    urem_11ns_4ns_11_15_seq_1_U147 : component MPSQ_urem_11ns_4ns_11_15_seq_1
    generic map (
        ID => 1,
        NUM_STAGE => 15,
        din0_WIDTH => 11,
        din1_WIDTH => 4,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_993_ap_start,
        done => grp_fu_993_ap_done,
        din0 => grp_fu_993_p0,
        din1 => grp_fu_993_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_993_p2);

    mul_mul_18ns_20ns_37_4_1_U148 : component MPSQ_mul_mul_18ns_20ns_37_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 18,
        din1_WIDTH => 20,
        dout_WIDTH => 37)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1309_p0,
        din1 => grp_fu_1309_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1309_p2);

    mul_mul_18ns_20ns_37_4_1_U149 : component MPSQ_mul_mul_18ns_20ns_37_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 18,
        din1_WIDTH => 20,
        dout_WIDTH => 37)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1316_p0,
        din1 => grp_fu_1316_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1316_p2);

    mul_33s_64s_64_2_1_U150 : component MPSQ_mul_33s_64s_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 33,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1631_p0,
        din1 => grp_fu_1631_p1,
        ce => grp_fu_1631_ce,
        dout => grp_fu_1631_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_areWedgeSuperPointsEqual_fu_601_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_areWedgeSuperPointsEqual_fu_601_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state8) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    grp_areWedgeSuperPointsEqual_fu_601_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_areWedgeSuperPointsEqual_fu_601_ap_ready = ap_const_logic_1)) then 
                    grp_areWedgeSuperPointsEqual_fu_601_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_getSolveNextPatchPairWhileCondition_fu_627_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_getSolveNextPatchPairWhileCondition_fu_627_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                    grp_getSolveNextPatchPairWhileCondition_fu_627_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_getSolveNextPatchPairWhileCondition_fu_627_ap_ready = ap_const_logic_1)) then 
                    grp_getSolveNextPatchPairWhileCondition_fu_627_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_makePatch_alignedToLine_fu_573_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_makePatch_alignedToLine_fu_573_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state63) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                    grp_makePatch_alignedToLine_fu_573_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_makePatch_alignedToLine_fu_573_ap_ready = ap_const_logic_1)) then 
                    grp_makePatch_alignedToLine_fu_573_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_makeThirdPatch_fu_513_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_makeThirdPatch_fu_513_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_phi_mux_madeComplementaryPatch_phi_fu_504_p4 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state79))) then 
                    grp_makeThirdPatch_fu_513_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_makeThirdPatch_fu_513_ap_ready = ap_const_logic_1)) then 
                    grp_makeThirdPatch_fu_513_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_solveComplmentaryPatch_fu_540_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_solveComplmentaryPatch_fu_540_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_s_reg_1563 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                    grp_solveComplmentaryPatch_fu_540_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_solveComplmentaryPatch_fu_540_ap_ready = ap_const_logic_1)) then 
                    grp_solveComplmentaryPatch_fu_540_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_613_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_straightLineProjectorFromLayerIJtoK_fu_613_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_NS_fsm_state76) and (ap_const_logic_1 = ap_CS_fsm_state75)) or ((ap_const_logic_1 = ap_NS_fsm_state29) and (ap_const_logic_1 = ap_CS_fsm_state28)))) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_613_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_straightLineProjectorFromLayerIJtoK_fu_613_ap_ready = ap_const_logic_1)) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_613_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    agg_tmp118_0_reg_356_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln819_fu_969_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state47))) then 
                agg_tmp118_0_reg_356 <= reg_664;
            elsif (((or_ln819_reg_1500 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state62))) then 
                agg_tmp118_0_reg_356 <= select_ln828_fu_1061_p3;
            end if; 
        end if;
    end process;

    complementary_apexZ0_0_reg_478_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln816_1_reg_1463) and (ap_const_logic_1 = ap_CS_fsm_state73))) then 
                complementary_apexZ0_0_reg_478 <= trunc_ln69_reg_1493;
            elsif (((ap_const_lv1_0 = and_ln816_1_fu_859_p2) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
                complementary_apexZ0_0_reg_478 <= p_read7;
            end if; 
        end if;
    end process;

    counterUpshift_0_reg_422_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln861_fu_1212_p2 = ap_const_lv1_0) and (grp_solveComplmentaryPatch_fu_540_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                counterUpshift_0_reg_422 <= grp_solveComplmentaryPatch_fu_540_ap_return_4;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
                counterUpshift_0_reg_422 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    counter_0_reg_410_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln861_fu_1212_p2 = ap_const_lv1_0) and (grp_solveComplmentaryPatch_fu_540_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                counter_0_reg_410 <= grp_solveComplmentaryPatch_fu_540_ap_return_3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
                counter_0_reg_410 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    current_z_top_index_0_reg_398_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln861_fu_1212_p2 = ap_const_lv1_0) and (grp_solveComplmentaryPatch_fu_540_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                current_z_top_index_0_reg_398 <= grp_solveComplmentaryPatch_fu_540_ap_return_2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
                current_z_top_index_0_reg_398 <= ap_const_lv32_FFFFFFFF;
            end if; 
        end if;
    end process;

    i_reg_317_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_areWedgeSuperPointsEqual_fu_601_ap_return = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                i_reg_317 <= add_ln792_reg_1435;
            elsif (((icmp_ln787_fu_787_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                i_reg_317 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    lastPatchIndex_0_reg_366_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln861_fu_1212_p2 = ap_const_lv1_0) and (grp_solveComplmentaryPatch_fu_540_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                lastPatchIndex_0_reg_366 <= empty_71_fu_1184_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
                lastPatchIndex_0_reg_366 <= lastPatchIndex_1_reg_1536;
            end if; 
        end if;
    end process;

    madeComplementaryPatch_reg_499_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln816_1_reg_1463) and (ap_const_logic_1 = ap_CS_fsm_state73))) then 
                madeComplementaryPatch_reg_499 <= ap_const_lv1_1;
            elsif (((ap_const_lv1_0 = and_ln816_1_fu_859_p2) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
                madeComplementaryPatch_reg_499 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    ppl_assign_0_reg_468_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln816_1_reg_1463) and (ap_const_logic_1 = ap_CS_fsm_state73))) then 
                ppl_assign_0_reg_468 <= ppl_assign_s_reg_1530;
            elsif (((ap_const_lv1_0 = and_ln816_1_fu_859_p2) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
                ppl_assign_0_reg_468 <= ppl_assign4_reg_1341;
            end if; 
        end if;
    end process;

    previous_white_space_height_0_reg_386_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln861_fu_1212_p2 = ap_const_lv1_0) and (grp_solveComplmentaryPatch_fu_540_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                previous_white_space_height_0_reg_386 <= grp_solveComplmentaryPatch_fu_540_ap_return_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
                previous_white_space_height_0_reg_386 <= ap_const_lv64_FFFFFFFFFFF0BDC0;
            end if; 
        end if;
    end process;

    previous_z_top_min_V_0_reg_434_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln861_fu_1212_p2 = ap_const_lv1_0) and (grp_solveComplmentaryPatch_fu_540_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                previous_z_top_min_V_0_reg_434 <= grp_solveComplmentaryPatch_fu_540_ap_return_5;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
                previous_z_top_min_V_0_reg_434 <= ap_const_lv32_C4747840;
            end if; 
        end if;
    end process;

    reg_657_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
                reg_657 <= patches_parameters_q0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                reg_657 <= patches_parameters_q1;
            end if; 
        end if;
    end process;

    reg_664_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
                reg_664 <= patches_parameters_q1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                reg_664 <= patches_parameters_q0;
            end if; 
        end if;
    end process;

    repeat_original_ph_reg_329_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_areWedgeSuperPointsEqual_fu_601_ap_return = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                repeat_original_ph_reg_329 <= ap_const_lv1_0;
            elsif (((icmp_ln792_fu_797_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                repeat_original_ph_reg_329 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    repeat_original_reg_343_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln787_reg_1423 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                repeat_original_reg_343 <= repeat_original_ph_reg_329;
            elsif (((icmp_ln787_fu_787_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                repeat_original_reg_343 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    white_space_height_0_reg_376_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln861_fu_1212_p2 = ap_const_lv1_0) and (grp_solveComplmentaryPatch_fu_540_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                white_space_height_0_reg_376 <= grp_solveComplmentaryPatch_fu_540_ap_return_6;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
                white_space_height_0_reg_376 <= sext_ln534_fu_1173_p1;
            end if; 
        end if;
    end process;

    z_top_min_0_reg_446_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln861_fu_1212_p2 = ap_const_lv1_0) and (grp_solveComplmentaryPatch_fu_540_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                z_top_min_0_reg_446 <= grp_solveComplmentaryPatch_fu_540_ap_return_7;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
                z_top_min_0_reg_446 <= agg_tmp118_0_reg_356;
            end if; 
        end if;
    end process;

    z_top_min_2_ph_reg_457_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln861_fu_1212_p2 = ap_const_lv1_1) and (grp_solveComplmentaryPatch_fu_540_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                z_top_min_2_ph_reg_457 <= grp_solveComplmentaryPatch_fu_540_ap_return_7;
            elsif (((tmp_s_reg_1563 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                z_top_min_2_ph_reg_457 <= z_top_min_0_reg_446;
            end if; 
        end if;
    end process;

    z_top_min_2_reg_488_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln816_1_reg_1463) and (ap_const_logic_1 = ap_CS_fsm_state73))) then 
                z_top_min_2_reg_488 <= z_top_min_2_ph_reg_457;
            elsif (((ap_const_lv1_0 = and_ln816_1_fu_859_p2) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
                z_top_min_2_reg_488 <= p_read4;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                add_ln722_reg_1388 <= add_ln722_fu_723_p2;
                icmp_ln787_reg_1423 <= icmp_ln787_fu_787_p2;
                    patches_parameters_addr_2_reg_1398(11 downto 3) <= zext_ln767_1_fu_742_p1(12 - 1 downto 0)(11 downto 3);
                    patches_parameters_addr_3_reg_1403(11 downto 3) <= zext_ln886_fu_752_p1(12 - 1 downto 0)(11 downto 3);
                    patches_parameters_addr_4_reg_1408(11 downto 3) <= zext_ln534_fu_762_p1(12 - 1 downto 0)(11 downto 3);
                    patches_parameters_addr_5_reg_1413(11 downto 3) <= zext_ln534_1_fu_772_p1(12 - 1 downto 0)(11 downto 3);
                    patches_parameters_addr_6_reg_1418(11 downto 3) <= zext_ln534_2_fu_782_p1(12 - 1 downto 0)(11 downto 3);
                    tmp_reg_1393(14 downto 7) <= tmp_fu_729_p3(14 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                add_ln792_reg_1435 <= add_ln792_fu_803_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln816_1_fu_859_p2) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                    add_ln818_reg_1467(17 downto 7) <= add_ln818_fu_880_p2(17 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then
                and_ln816_1_reg_1463 <= and_ln816_1_fu_859_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                icmp_ln807_reg_1458 <= icmp_ln807_fu_820_p2;
                squarePatch_alternate2_reg_1453 <= squarePatch_alternate2_fu_814_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                icmp_ln819_reg_1478 <= icmp_ln819_fu_902_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then
                icmp_ln886_reg_1448 <= icmp_ln886_fu_809_p2;
                patches_parameters_load_reg_1443 <= patches_parameters_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state65)) then
                lastPatchIndex_1_reg_1536 <= lastPatchIndex_1_fu_1073_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                nPatchesAtOriginal_reg_1347 <= n_patches_i;
                trunc_ln767_reg_1354 <= trunc_ln767_fu_672_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state47)) then
                or_ln819_reg_1500 <= or_ln819_fu_969_p2;
                trunc_ln69_reg_1493 <= trunc_ln69_fu_965_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                ppl_assign4_reg_1341 <= grp_makePatch_alignedToLine_fu_573_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state64)) then
                ppl_assign_s_reg_1530 <= grp_makePatch_alignedToLine_fu_573_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state79)) then
                ref_tmp1_reg_1626 <= grp_straightLineProjectorFromLayerIJtoK_fu_613_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state3))) then
                reg_651 <= grp_fu_645_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                    sub_ln767_reg_1359(11 downto 3) <= sub_ln767_fu_695_p2(11 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln787_fu_787_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                thirdLastPatchIndex_reg_1427 <= thirdLastPatchIndex_fu_792_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state50)) then
                tmp_6_reg_1514 <= grp_fu_1316_p2(36 downto 28);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state70)) then
                tmp_s_reg_1563 <= grp_getSolveNextPatchPairWhileCondition_fu_627_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state73)) then
                trunc_ln871_reg_1611 <= trunc_ln871_fu_1218_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then
                white_space_height_reg_1553 <= white_space_height_fu_1165_p3;
            end if;
        end if;
    end process;
    sub_ln767_reg_1359(2 downto 0) <= "000";
    tmp_reg_1393(6 downto 0) <= "0000000";
    patches_parameters_addr_2_reg_1398(2 downto 0) <= "100";
    patches_parameters_addr_3_reg_1403(2 downto 0) <= "001";
    patches_parameters_addr_4_reg_1408(2 downto 0) <= "100";
    patches_parameters_addr_5_reg_1413(2 downto 0) <= "000";
    patches_parameters_addr_6_reg_1418(2 downto 0) <= "010";
    add_ln818_reg_1467(6 downto 0) <= "0000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state5, ap_CS_fsm_state2, icmp_ln787_fu_787_p2, ap_CS_fsm_state6, and_ln816_1_fu_859_p2, ap_CS_fsm_state32, ap_CS_fsm_state47, or_ln819_fu_969_p2, ap_CS_fsm_state64, tmp_s_reg_1563, ap_CS_fsm_state70, ap_CS_fsm_state72, grp_solveComplmentaryPatch_fu_540_ap_done, grp_makePatch_alignedToLine_fu_573_ap_done, grp_areWedgeSuperPointsEqual_fu_601_ap_return, grp_getSolveNextPatchPairWhileCondition_fu_627_ap_done, ap_CS_fsm_state26, icmp_ln792_fu_797_p2, icmp_ln861_fu_1212_p2, ap_CS_fsm_state71, ap_CS_fsm_state80, ap_block_state80_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_makePatch_alignedToLine_fu_573_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((icmp_ln787_fu_787_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln792_fu_797_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                if (((grp_areWedgeSuperPointsEqual_fu_601_ap_return = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                if (((ap_const_lv1_0 = and_ln816_1_fu_859_p2) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                    ap_NS_fsm <= ap_ST_fsm_state73;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                if (((or_ln819_fu_969_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state47))) then
                    ap_NS_fsm <= ap_ST_fsm_state62;
                else
                    ap_NS_fsm <= ap_ST_fsm_state48;
                end if;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                if (((grp_makePatch_alignedToLine_fu_573_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state64))) then
                    ap_NS_fsm <= ap_ST_fsm_state65;
                else
                    ap_NS_fsm <= ap_ST_fsm_state64;
                end if;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                if (((grp_getSolveNextPatchPairWhileCondition_fu_627_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state70))) then
                    ap_NS_fsm <= ap_ST_fsm_state71;
                else
                    ap_NS_fsm <= ap_ST_fsm_state70;
                end if;
            when ap_ST_fsm_state71 => 
                if (((tmp_s_reg_1563 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then
                    ap_NS_fsm <= ap_ST_fsm_state73;
                else
                    ap_NS_fsm <= ap_ST_fsm_state72;
                end if;
            when ap_ST_fsm_state72 => 
                if (((icmp_ln861_fu_1212_p2 = ap_const_lv1_0) and (grp_solveComplmentaryPatch_fu_540_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state72))) then
                    ap_NS_fsm <= ap_ST_fsm_state69;
                elsif (((icmp_ln861_fu_1212_p2 = ap_const_lv1_1) and (grp_solveComplmentaryPatch_fu_540_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state72))) then
                    ap_NS_fsm <= ap_ST_fsm_state73;
                else
                    ap_NS_fsm <= ap_ST_fsm_state72;
                end if;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state80) and (ap_const_boolean_0 = ap_block_state80_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state80;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    GDarrayDecoded_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state64, ap_CS_fsm_state72, grp_makeThirdPatch_fu_513_GDarrayDecoded_address0, grp_solveComplmentaryPatch_fu_540_GDarrayDecoded_address0, grp_makePatch_alignedToLine_fu_573_GDarrayDecoded_address0, madeComplementaryPatch_reg_499, ap_CS_fsm_state80)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            GDarrayDecoded_address0 <= grp_makePatch_alignedToLine_fu_573_GDarrayDecoded_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            GDarrayDecoded_address0 <= grp_solveComplmentaryPatch_fu_540_GDarrayDecoded_address0;
        elsif (((madeComplementaryPatch_reg_499 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
            GDarrayDecoded_address0 <= grp_makeThirdPatch_fu_513_GDarrayDecoded_address0;
        else 
            GDarrayDecoded_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    GDarrayDecoded_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state64, ap_CS_fsm_state72, grp_makeThirdPatch_fu_513_GDarrayDecoded_ce0, grp_solveComplmentaryPatch_fu_540_GDarrayDecoded_ce0, grp_makePatch_alignedToLine_fu_573_GDarrayDecoded_ce0, madeComplementaryPatch_reg_499, ap_CS_fsm_state80)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            GDarrayDecoded_ce0 <= grp_makePatch_alignedToLine_fu_573_GDarrayDecoded_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            GDarrayDecoded_ce0 <= grp_solveComplmentaryPatch_fu_540_GDarrayDecoded_ce0;
        elsif (((madeComplementaryPatch_reg_499 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
            GDarrayDecoded_ce0 <= grp_makeThirdPatch_fu_513_GDarrayDecoded_ce0;
        else 
            GDarrayDecoded_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    GDn_points_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state64, ap_CS_fsm_state70, ap_CS_fsm_state72, grp_makeThirdPatch_fu_513_GDn_points_address0, grp_solveComplmentaryPatch_fu_540_GDn_points_address0, grp_makePatch_alignedToLine_fu_573_GDn_points_address0, grp_getSolveNextPatchPairWhileCondition_fu_627_GDn_points_address0, madeComplementaryPatch_reg_499, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            GDn_points_address0 <= grp_getSolveNextPatchPairWhileCondition_fu_627_GDn_points_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            GDn_points_address0 <= grp_makePatch_alignedToLine_fu_573_GDn_points_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            GDn_points_address0 <= grp_solveComplmentaryPatch_fu_540_GDn_points_address0;
        elsif (((madeComplementaryPatch_reg_499 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
            GDn_points_address0 <= grp_makeThirdPatch_fu_513_GDn_points_address0;
        else 
            GDn_points_address0 <= "XXX";
        end if; 
    end process;


    GDn_points_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state64, ap_CS_fsm_state70, ap_CS_fsm_state72, grp_makeThirdPatch_fu_513_GDn_points_ce0, grp_solveComplmentaryPatch_fu_540_GDn_points_ce0, grp_makePatch_alignedToLine_fu_573_GDn_points_ce0, grp_getSolveNextPatchPairWhileCondition_fu_627_GDn_points_ce0, madeComplementaryPatch_reg_499, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            GDn_points_ce0 <= grp_getSolveNextPatchPairWhileCondition_fu_627_GDn_points_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            GDn_points_ce0 <= grp_makePatch_alignedToLine_fu_573_GDn_points_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            GDn_points_ce0 <= grp_solveComplmentaryPatch_fu_540_GDn_points_ce0;
        elsif (((madeComplementaryPatch_reg_499 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
            GDn_points_ce0 <= grp_makeThirdPatch_fu_513_GDn_points_ce0;
        else 
            GDn_points_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln534_1_fu_767_p2 <= std_logic_vector(unsigned(sub_ln767_reg_1359) + unsigned(ap_const_lv12_48));
    add_ln534_2_fu_777_p2 <= std_logic_vector(unsigned(sub_ln767_reg_1359) + unsigned(ap_const_lv12_5A));
    add_ln534_fu_757_p2 <= std_logic_vector(unsigned(sub_ln767_reg_1359) + unsigned(ap_const_lv12_54));
    add_ln722_fu_723_p2 <= std_logic_vector(unsigned(p_read1) + unsigned(ap_const_lv32_1));
    add_ln767_1_fu_701_p2 <= std_logic_vector(unsigned(sub_ln767_fu_695_p2) + unsigned(ap_const_lv12_3D));
    add_ln767_fu_737_p2 <= std_logic_vector(unsigned(sub_ln767_reg_1359) + unsigned(ap_const_lv12_3C));
    add_ln768_fu_712_p2 <= std_logic_vector(unsigned(sub_ln767_fu_695_p2) + unsigned(ap_const_lv12_43));
    add_ln792_fu_803_p2 <= std_logic_vector(unsigned(i_reg_317) + unsigned(ap_const_lv3_1));
    add_ln818_1_fu_936_p2 <= std_logic_vector(unsigned(zext_ln818_4_fu_932_p1) + unsigned(zext_ln818_3_fu_920_p1));
    add_ln818_2_fu_946_p2 <= std_logic_vector(unsigned(add_ln818_1_fu_936_p2) + unsigned(zext_ln818_5_fu_942_p1));
    add_ln818_fu_880_p2 <= std_logic_vector(unsigned(zext_ln818_fu_873_p1) + unsigned(zext_ln818_1_fu_877_p1));
    add_ln828_1_fu_1022_p2 <= std_logic_vector(unsigned(zext_ln828_2_fu_1018_p1) + unsigned(zext_ln828_1_fu_1008_p1));
    add_ln828_2_fu_1032_p2 <= std_logic_vector(unsigned(add_ln828_1_fu_1022_p2) + unsigned(zext_ln828_3_fu_1028_p1));
    add_ln828_fu_974_p2 <= std_logic_vector(unsigned(add_ln818_reg_1467) + unsigned(ap_const_lv18_200));
    add_ln845_fu_1103_p2 <= std_logic_vector(unsigned(sub_ln845_fu_1097_p2) + unsigned(ap_const_lv12_30));
    add_ln846_fu_1120_p2 <= std_logic_vector(unsigned(sub_ln845_fu_1097_p2) + unsigned(ap_const_lv12_37));
    add_ln871_1_fu_1258_p2 <= std_logic_vector(unsigned(sub_ln871_fu_1241_p2) + unsigned(ap_const_lv12_3D));
    add_ln871_fu_1247_p2 <= std_logic_vector(unsigned(sub_ln871_fu_1241_p2) + unsigned(ap_const_lv12_3C));
    add_ln886_fu_747_p2 <= std_logic_vector(unsigned(sub_ln767_reg_1359) + unsigned(ap_const_lv12_31));
    and_ln816_1_fu_859_p2 <= (icmp_ln886_1_fu_841_p2 and and_ln816_fu_853_p2);
    and_ln816_fu_853_p2 <= (xor_ln816_fu_835_p2 and icmp_ln816_fu_847_p2);
    and_ln886_fu_826_p2 <= (squarePatch_alternate2_reg_1453 and icmp_ln886_reg_1448);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state65 <= ap_CS_fsm(64);
    ap_CS_fsm_state66 <= ap_CS_fsm(65);
    ap_CS_fsm_state67 <= ap_CS_fsm(66);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state73 <= ap_CS_fsm(72);
    ap_CS_fsm_state74 <= ap_CS_fsm(73);
    ap_CS_fsm_state75 <= ap_CS_fsm(74);
    ap_CS_fsm_state76 <= ap_CS_fsm(75);
    ap_CS_fsm_state79 <= ap_CS_fsm(78);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state80 <= ap_CS_fsm(79);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_NS_fsm_state29 <= ap_NS_fsm(28);
    ap_NS_fsm_state76 <= ap_NS_fsm(75);
    ap_NS_fsm_state8 <= ap_NS_fsm(7);

    ap_block_state80_on_subcall_done_assign_proc : process(grp_makeThirdPatch_fu_513_ap_done, madeComplementaryPatch_reg_499)
    begin
                ap_block_state80_on_subcall_done <= ((madeComplementaryPatch_reg_499 = ap_const_lv1_1) and (grp_makeThirdPatch_fu_513_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state80, ap_block_state80_on_subcall_done)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state80) and (ap_const_boolean_0 = ap_block_state80_on_subcall_done)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_madeComplementaryPatch_phi_fu_504_p4 <= madeComplementaryPatch_reg_499;

    ap_ready_assign_proc : process(ap_CS_fsm_state80, ap_block_state80_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state80) and (ap_const_boolean_0 = ap_block_state80_on_subcall_done))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= reg_664;
    ap_return_1 <= add_ln722_reg_1388;
    ap_return_2 <= reg_657;
    ap_return_3 <= ref_tmp1_reg_1626;
    ap_return_4 <= complementary_apexZ0_0_reg_478;
    ap_return_5 <= reg_657;
    ap_return_6 <= z_top_min_2_reg_488;
    empty_71_fu_1184_p1 <= grp_solveComplmentaryPatch_fu_540_ap_return_1(5 - 1 downto 0);
    grp_areWedgeSuperPointsEqual_fu_601_ap_start <= grp_areWedgeSuperPointsEqual_fu_601_ap_start_reg;
    grp_fu_1309_p0 <= grp_fu_1309_p00(18 - 1 downto 0);
    grp_fu_1309_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln818_reg_1467),37));
    grp_fu_1309_p1 <= ap_const_lv37_66667(20 - 1 downto 0);
    grp_fu_1316_p0 <= grp_fu_1316_p00(18 - 1 downto 0);
    grp_fu_1316_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln828_fu_974_p2),37));
    grp_fu_1316_p1 <= ap_const_lv37_66667(20 - 1 downto 0);

    grp_fu_1631_ce_assign_proc : process(ap_CS_fsm_state72, grp_solveComplmentaryPatch_fu_540_grp_fu_1631_p_ce, ap_CS_fsm_state71)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            grp_fu_1631_ce <= grp_solveComplmentaryPatch_fu_540_grp_fu_1631_p_ce;
        else 
            grp_fu_1631_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_1631_p0 <= grp_solveComplmentaryPatch_fu_540_grp_fu_1631_p_din0;
    grp_fu_1631_p1 <= grp_solveComplmentaryPatch_fu_540_grp_fu_1631_p_din1;
    grp_fu_645_p2 <= std_logic_vector(unsigned(n_patches_i) + unsigned(ap_const_lv8_FF));

    grp_fu_896_ap_start_assign_proc : process(and_ln816_1_fu_859_p2, ap_CS_fsm_state32)
    begin
        if (((ap_const_lv1_1 = and_ln816_1_fu_859_p2) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            grp_fu_896_ap_start <= ap_const_logic_1;
        else 
            grp_fu_896_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_896_p0 <= add_ln818_fu_880_p2(17 downto 7);
    grp_fu_896_p1 <= ap_const_lv11_5(4 - 1 downto 0);

    grp_fu_993_ap_start_assign_proc : process(ap_CS_fsm_state47, or_ln819_fu_969_p2)
    begin
        if (((or_ln819_fu_969_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state47))) then 
            grp_fu_993_ap_start <= ap_const_logic_1;
        else 
            grp_fu_993_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_993_p0 <= add_ln828_fu_974_p2(17 downto 7);
    grp_fu_993_p1 <= ap_const_lv11_5(4 - 1 downto 0);
    grp_getSolveNextPatchPairWhileCondition_fu_627_ap_start <= grp_getSolveNextPatchPairWhileCondition_fu_627_ap_start_reg;
    grp_makePatch_alignedToLine_fu_573_ap_start <= grp_makePatch_alignedToLine_fu_573_ap_start_reg;

    grp_makePatch_alignedToLine_fu_573_apexZ0_assign_proc : process(apexZ0, ap_CS_fsm_state2, trunc_ln69_reg_1493, ap_CS_fsm_state64)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            grp_makePatch_alignedToLine_fu_573_apexZ0 <= trunc_ln69_reg_1493;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_makePatch_alignedToLine_fu_573_apexZ0 <= apexZ0;
        else 
            grp_makePatch_alignedToLine_fu_573_apexZ0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_makePatch_alignedToLine_fu_573_leftRight_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state64)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            grp_makePatch_alignedToLine_fu_573_leftRight <= ap_const_lv1_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_makePatch_alignedToLine_fu_573_leftRight <= ap_const_lv1_0;
        else 
            grp_makePatch_alignedToLine_fu_573_leftRight <= "X";
        end if; 
    end process;


    grp_makePatch_alignedToLine_fu_573_p_read_assign_proc : process(ppl, ppl_assign4_reg_1341, ap_CS_fsm_state2, ap_CS_fsm_state64)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            grp_makePatch_alignedToLine_fu_573_p_read <= ppl_assign4_reg_1341;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_makePatch_alignedToLine_fu_573_p_read <= ppl;
        else 
            grp_makePatch_alignedToLine_fu_573_p_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_makePatch_alignedToLine_fu_573_z_top_assign_proc : process(z_top_max_read, ap_CS_fsm_state2, ap_CS_fsm_state64, agg_tmp118_0_reg_356)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            grp_makePatch_alignedToLine_fu_573_z_top <= agg_tmp118_0_reg_356;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_makePatch_alignedToLine_fu_573_z_top <= z_top_max_read;
        else 
            grp_makePatch_alignedToLine_fu_573_z_top <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_makeThirdPatch_fu_513_ap_start <= grp_makeThirdPatch_fu_513_ap_start_reg;
    grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_done <= grp_straightLineProjectorFromLayerIJtoK_fu_1635_ap_done;
    grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_dout0 <= grp_straightLineProjectorFromLayerIJtoK_fu_1635_ap_return;
    grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_idle <= grp_straightLineProjectorFromLayerIJtoK_fu_1635_ap_idle;
    grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_ready <= grp_straightLineProjectorFromLayerIJtoK_fu_1635_ap_ready;
    grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_done <= grp_straightLineProjectorFromLayerIJtoK_fu_1644_ap_done;
    grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_dout0 <= grp_straightLineProjectorFromLayerIJtoK_fu_1644_ap_return;
    grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_idle <= grp_straightLineProjectorFromLayerIJtoK_fu_1644_ap_idle;
    grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_ready <= grp_straightLineProjectorFromLayerIJtoK_fu_1644_ap_ready;
    grp_solveComplmentaryPatch_fu_540_ap_start <= grp_solveComplmentaryPatch_fu_540_ap_start_reg;
    grp_solveComplmentaryPatch_fu_540_grp_fu_1631_p_dout0 <= grp_fu_1631_p2;
    grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_done <= grp_straightLineProjectorFromLayerIJtoK_fu_613_ap_done;
    grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_dout0 <= grp_straightLineProjectorFromLayerIJtoK_fu_613_ap_return;
    grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_idle <= grp_straightLineProjectorFromLayerIJtoK_fu_613_ap_idle;
    grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_ready <= grp_straightLineProjectorFromLayerIJtoK_fu_613_ap_ready;

    grp_straightLineProjectorFromLayerIJtoK_fu_1635_ap_ce_assign_proc : process(ap_CS_fsm_state79, grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_ce, ap_CS_fsm_state80)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state79))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_1635_ap_ce <= grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_ce;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_1635_ap_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_1635_ap_start_assign_proc : process(ap_CS_fsm_state79, grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_start, ap_CS_fsm_state80)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state79))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_1635_ap_start <= grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_start;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_1635_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_straightLineProjectorFromLayerIJtoK_fu_1635_i <= grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_din3;
    grp_straightLineProjectorFromLayerIJtoK_fu_1635_j <= grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_din4;
    grp_straightLineProjectorFromLayerIJtoK_fu_1635_k <= grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_din5;
    grp_straightLineProjectorFromLayerIJtoK_fu_1635_z_i <= grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_din1;
    grp_straightLineProjectorFromLayerIJtoK_fu_1635_z_j <= grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1635_p_din2;

    grp_straightLineProjectorFromLayerIJtoK_fu_1644_ap_ce_assign_proc : process(ap_CS_fsm_state79, grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_ce, ap_CS_fsm_state80)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state79))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_1644_ap_ce <= grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_ce;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_1644_ap_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_1644_ap_start_assign_proc : process(ap_CS_fsm_state79, grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_start, ap_CS_fsm_state80)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state79))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_1644_ap_start <= grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_start;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_1644_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_straightLineProjectorFromLayerIJtoK_fu_1644_i <= grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_din3;
    grp_straightLineProjectorFromLayerIJtoK_fu_1644_j <= grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_din4;
    grp_straightLineProjectorFromLayerIJtoK_fu_1644_k <= grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_din5;
    grp_straightLineProjectorFromLayerIJtoK_fu_1644_z_i <= grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_din1;
    grp_straightLineProjectorFromLayerIJtoK_fu_1644_z_j <= grp_makeThirdPatch_fu_513_grp_straightLineProjectorFromLayerIJtoK_fu_1644_p_din2;

    grp_straightLineProjectorFromLayerIJtoK_fu_613_ap_ce_assign_proc : process(ap_CS_fsm_state72, grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_ce, ap_CS_fsm_state71)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_613_ap_ce <= grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_ce;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_613_ap_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_613_ap_start_assign_proc : process(ap_CS_fsm_state72, grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_start, ap_CS_fsm_state71, grp_straightLineProjectorFromLayerIJtoK_fu_613_ap_start_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_613_ap_start <= grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_start;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_613_ap_start <= grp_straightLineProjectorFromLayerIJtoK_fu_613_ap_start_reg;
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_613_i_assign_proc : process(ap_CS_fsm_state29, ap_CS_fsm_state72, grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din3, ap_CS_fsm_state71, ap_CS_fsm_state76)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_613_i <= grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_613_i <= ap_const_lv3_5;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_613_i <= ap_const_lv3_5;
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_613_j_assign_proc : process(ap_CS_fsm_state29, ap_CS_fsm_state72, grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din4, ap_CS_fsm_state71, ap_CS_fsm_state76)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_613_j <= grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din4;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_613_j <= ap_const_lv3_1;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_613_j <= ap_const_lv3_1;
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_613_k_assign_proc : process(ap_CS_fsm_state29, ap_CS_fsm_state72, grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din5, ap_CS_fsm_state71, ap_CS_fsm_state76)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_613_k <= grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din5;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_613_k <= ap_const_lv3_0;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_613_k <= ap_const_lv3_0;
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_613_z_i_assign_proc : process(reg_657, ap_CS_fsm_state29, ap_CS_fsm_state72, grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din1, ap_CS_fsm_state71, ap_CS_fsm_state76)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_613_z_i <= grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_613_z_i <= reg_657;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_613_z_i <= reg_657;
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_613_z_j_assign_proc : process(reg_664, patches_parameters_load_reg_1443, ap_CS_fsm_state29, ap_CS_fsm_state72, grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din2, ap_CS_fsm_state71, ap_CS_fsm_state76)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_613_z_j <= grp_solveComplmentaryPatch_fu_540_grp_straightLineProjectorFromLayerIJtoK_fu_613_p_din2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_613_z_j <= reg_664;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_straightLineProjectorFromLayerIJtoK_fu_613_z_j <= patches_parameters_load_reg_1443;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_613_z_j <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln787_fu_787_p2 <= "1" when (unsigned(nPatchesAtOriginal_reg_1347) > unsigned(ap_const_lv8_2)) else "0";
    icmp_ln792_fu_797_p2 <= "1" when (unsigned(i_reg_317) < unsigned(ap_const_lv3_5)) else "0";
    icmp_ln807_fu_820_p2 <= "0" when (patches_parameters_q1 = ap_const_lv32_0) else "1";
    icmp_ln816_fu_847_p2 <= "1" when (signed(grp_straightLineProjectorFromLayerIJtoK_fu_613_ap_return) < signed(ap_const_lv32_E4E1C0)) else "0";
    icmp_ln819_fu_902_p2 <= "1" when (patches_parameters_q0 = ap_const_lv32_0) else "0";
    icmp_ln861_fu_1212_p2 <= "1" when (signed(grp_solveComplmentaryPatch_fu_540_ap_return_3) > signed(ap_const_lv32_19)) else "0";
    icmp_ln878_1_fu_1159_p2 <= "1" when (signed(ret_fu_1139_p2) < signed(ret_1_fu_1153_p2)) else "0";
    icmp_ln878_fu_1055_p2 <= "1" when (signed(trunc_ln69_1_fu_1051_p1) > signed(ap_const_lv32_FD050F80)) else "0";
    icmp_ln886_1_fu_841_p2 <= "1" when (signed(reg_657) > signed(ap_const_lv32_FD050F1C)) else "0";
    icmp_ln886_fu_809_p2 <= "1" when (signed(patches_parameters_q0) > signed(z_top_max_read)) else "0";
    lastPatchIndex_1_fu_1073_p2 <= std_logic_vector(unsigned(trunc_ln835_fu_1069_p1) + unsigned(ap_const_lv5_1F));

    n_patches_o_assign_proc : process(n_patches_i, ap_CS_fsm_state2, ap_CS_fsm_state64, ap_CS_fsm_state72, grp_makeThirdPatch_fu_513_n_patches_o, grp_makeThirdPatch_fu_513_n_patches_o_ap_vld, grp_solveComplmentaryPatch_fu_540_n_patches_o, grp_solveComplmentaryPatch_fu_540_n_patches_o_ap_vld, grp_makePatch_alignedToLine_fu_573_n_patches_o, grp_makePatch_alignedToLine_fu_573_n_patches_o_ap_vld, madeComplementaryPatch_reg_499, ap_CS_fsm_state80)
    begin
        if ((((grp_makePatch_alignedToLine_fu_573_n_patches_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state64)) or ((grp_makePatch_alignedToLine_fu_573_n_patches_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            n_patches_o <= grp_makePatch_alignedToLine_fu_573_n_patches_o;
        elsif (((grp_solveComplmentaryPatch_fu_540_n_patches_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            n_patches_o <= grp_solveComplmentaryPatch_fu_540_n_patches_o;
        elsif (((madeComplementaryPatch_reg_499 = ap_const_lv1_1) and (grp_makeThirdPatch_fu_513_n_patches_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
            n_patches_o <= grp_makeThirdPatch_fu_513_n_patches_o;
        else 
            n_patches_o <= n_patches_i;
        end if; 
    end process;


    n_patches_o_ap_vld_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state64, ap_CS_fsm_state72, grp_makeThirdPatch_fu_513_n_patches_o_ap_vld, grp_solveComplmentaryPatch_fu_540_n_patches_o_ap_vld, grp_makePatch_alignedToLine_fu_573_n_patches_o_ap_vld, madeComplementaryPatch_reg_499, ap_CS_fsm_state80)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            n_patches_o_ap_vld <= grp_makePatch_alignedToLine_fu_573_n_patches_o_ap_vld;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            n_patches_o_ap_vld <= grp_solveComplmentaryPatch_fu_540_n_patches_o_ap_vld;
        elsif (((madeComplementaryPatch_reg_499 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
            n_patches_o_ap_vld <= grp_makeThirdPatch_fu_513_n_patches_o_ap_vld;
        else 
            n_patches_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    notChoppedPatch_fu_830_p2 <= (icmp_ln807_reg_1458 or and_ln886_fu_826_p2);
    or_ln819_fu_969_p2 <= (repeat_original_reg_343 or icmp_ln819_reg_1478);
    or_ln845_fu_1109_p2 <= (ap_const_lv12_1 or add_ln845_fu_1103_p2);

    patches_parameters_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, patches_parameters_addr_3_reg_1403, patches_parameters_addr_5_reg_1413, patches_parameters_addr_6_reg_1418, ap_CS_fsm_state28, ap_CS_fsm_state32, ap_CS_fsm_state64, ap_CS_fsm_state66, ap_CS_fsm_state70, ap_CS_fsm_state72, ap_CS_fsm_state74, grp_makeThirdPatch_fu_513_patches_parameters_address0, grp_solveComplmentaryPatch_fu_540_patches_parameters_address0, grp_makePatch_alignedToLine_fu_573_patches_parameters_address0, grp_getSolveNextPatchPairWhileCondition_fu_627_patches_parameters_address0, ap_CS_fsm_state27, madeComplementaryPatch_reg_499, ap_CS_fsm_state80, zext_ln768_fu_718_p1, zext_ln845_1_fu_1115_p1, zext_ln871_2_fu_1264_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            patches_parameters_address0 <= zext_ln871_2_fu_1264_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            patches_parameters_address0 <= zext_ln845_1_fu_1115_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            patches_parameters_address0 <= patches_parameters_addr_6_reg_1418;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            patches_parameters_address0 <= patches_parameters_addr_5_reg_1413;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            patches_parameters_address0 <= patches_parameters_addr_3_reg_1403;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            patches_parameters_address0 <= zext_ln768_fu_718_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            patches_parameters_address0 <= grp_getSolveNextPatchPairWhileCondition_fu_627_patches_parameters_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_address0 <= grp_makePatch_alignedToLine_fu_573_patches_parameters_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            patches_parameters_address0 <= grp_solveComplmentaryPatch_fu_540_patches_parameters_address0;
        elsif (((madeComplementaryPatch_reg_499 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
            patches_parameters_address0 <= grp_makeThirdPatch_fu_513_patches_parameters_address0;
        else 
            patches_parameters_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    patches_parameters_address1_assign_proc : process(ap_CS_fsm_state4, patches_parameters_addr_2_reg_1398, patches_parameters_addr_4_reg_1408, ap_CS_fsm_state28, ap_CS_fsm_state66, ap_CS_fsm_state72, ap_CS_fsm_state74, grp_makeThirdPatch_fu_513_patches_parameters_address1, grp_solveComplmentaryPatch_fu_540_patches_parameters_address1, ap_CS_fsm_state27, madeComplementaryPatch_reg_499, ap_CS_fsm_state80, zext_ln767_2_fu_707_p1, zext_ln846_fu_1126_p1, zext_ln871_1_fu_1253_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            patches_parameters_address1 <= zext_ln871_1_fu_1253_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            patches_parameters_address1 <= zext_ln846_fu_1126_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            patches_parameters_address1 <= patches_parameters_addr_4_reg_1408;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            patches_parameters_address1 <= patches_parameters_addr_2_reg_1398;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            patches_parameters_address1 <= zext_ln767_2_fu_707_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            patches_parameters_address1 <= grp_solveComplmentaryPatch_fu_540_patches_parameters_address1;
        elsif (((madeComplementaryPatch_reg_499 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
            patches_parameters_address1 <= grp_makeThirdPatch_fu_513_patches_parameters_address1;
        else 
            patches_parameters_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    patches_parameters_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state28, ap_CS_fsm_state32, ap_CS_fsm_state64, ap_CS_fsm_state66, ap_CS_fsm_state70, ap_CS_fsm_state72, ap_CS_fsm_state74, grp_makeThirdPatch_fu_513_patches_parameters_ce0, grp_solveComplmentaryPatch_fu_540_patches_parameters_ce0, grp_makePatch_alignedToLine_fu_573_patches_parameters_ce0, grp_getSolveNextPatchPairWhileCondition_fu_627_patches_parameters_ce0, ap_CS_fsm_state27, madeComplementaryPatch_reg_499, ap_CS_fsm_state80)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            patches_parameters_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            patches_parameters_ce0 <= grp_getSolveNextPatchPairWhileCondition_fu_627_patches_parameters_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_ce0 <= grp_makePatch_alignedToLine_fu_573_patches_parameters_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            patches_parameters_ce0 <= grp_solveComplmentaryPatch_fu_540_patches_parameters_ce0;
        elsif (((madeComplementaryPatch_reg_499 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
            patches_parameters_ce0 <= grp_makeThirdPatch_fu_513_patches_parameters_ce0;
        else 
            patches_parameters_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    patches_parameters_ce1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state28, ap_CS_fsm_state66, ap_CS_fsm_state72, ap_CS_fsm_state74, grp_makeThirdPatch_fu_513_patches_parameters_ce1, grp_solveComplmentaryPatch_fu_540_patches_parameters_ce1, ap_CS_fsm_state27, madeComplementaryPatch_reg_499, ap_CS_fsm_state80)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            patches_parameters_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            patches_parameters_ce1 <= grp_solveComplmentaryPatch_fu_540_patches_parameters_ce1;
        elsif (((madeComplementaryPatch_reg_499 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
            patches_parameters_ce1 <= grp_makeThirdPatch_fu_513_patches_parameters_ce1;
        else 
            patches_parameters_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    patches_parameters_d0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state64, ap_CS_fsm_state72, grp_makeThirdPatch_fu_513_patches_parameters_d0, grp_solveComplmentaryPatch_fu_540_patches_parameters_d0, grp_makePatch_alignedToLine_fu_573_patches_parameters_d0, madeComplementaryPatch_reg_499, ap_CS_fsm_state80)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_d0 <= grp_makePatch_alignedToLine_fu_573_patches_parameters_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            patches_parameters_d0 <= grp_solveComplmentaryPatch_fu_540_patches_parameters_d0;
        elsif (((madeComplementaryPatch_reg_499 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
            patches_parameters_d0 <= grp_makeThirdPatch_fu_513_patches_parameters_d0;
        else 
            patches_parameters_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    patches_parameters_d1 <= grp_makeThirdPatch_fu_513_patches_parameters_d1;

    patches_parameters_we0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state64, ap_CS_fsm_state72, grp_makeThirdPatch_fu_513_patches_parameters_we0, grp_solveComplmentaryPatch_fu_540_patches_parameters_we0, grp_makePatch_alignedToLine_fu_573_patches_parameters_we0, madeComplementaryPatch_reg_499, ap_CS_fsm_state80)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_parameters_we0 <= grp_makePatch_alignedToLine_fu_573_patches_parameters_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            patches_parameters_we0 <= grp_solveComplmentaryPatch_fu_540_patches_parameters_we0;
        elsif (((madeComplementaryPatch_reg_499 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
            patches_parameters_we0 <= grp_makeThirdPatch_fu_513_patches_parameters_we0;
        else 
            patches_parameters_we0 <= ap_const_logic_0;
        end if; 
    end process;


    patches_parameters_we1_assign_proc : process(grp_makeThirdPatch_fu_513_patches_parameters_we1, madeComplementaryPatch_reg_499, ap_CS_fsm_state80)
    begin
        if (((madeComplementaryPatch_reg_499 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
            patches_parameters_we1 <= grp_makeThirdPatch_fu_513_patches_parameters_we1;
        else 
            patches_parameters_we1 <= ap_const_logic_0;
        end if; 
    end process;


    patches_superpoints_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state46, ap_CS_fsm_state61, ap_CS_fsm_state64, ap_CS_fsm_state72, grp_makeThirdPatch_fu_513_patches_superpoints_address0, grp_solveComplmentaryPatch_fu_540_patches_superpoints_address0, grp_makePatch_alignedToLine_fu_573_patches_superpoints_address0, grp_areWedgeSuperPointsEqual_fu_601_wsp1_2_address0, ap_CS_fsm_state26, madeComplementaryPatch_reg_499, ap_CS_fsm_state80, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state25, zext_ln818_6_fu_960_p1, zext_ln828_4_fu_1046_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            patches_superpoints_address0 <= zext_ln828_4_fu_1046_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            patches_superpoints_address0 <= zext_ln818_6_fu_960_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            patches_superpoints_address0 <= grp_areWedgeSuperPointsEqual_fu_601_wsp1_2_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_superpoints_address0 <= grp_makePatch_alignedToLine_fu_573_patches_superpoints_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            patches_superpoints_address0 <= grp_solveComplmentaryPatch_fu_540_patches_superpoints_address0;
        elsif (((madeComplementaryPatch_reg_499 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
            patches_superpoints_address0 <= grp_makeThirdPatch_fu_513_patches_superpoints_address0;
        else 
            patches_superpoints_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    patches_superpoints_address1_assign_proc : process(ap_CS_fsm_state72, grp_makeThirdPatch_fu_513_patches_superpoints_address1, grp_solveComplmentaryPatch_fu_540_patches_superpoints_address1, grp_areWedgeSuperPointsEqual_fu_601_wsp1_2_address1, ap_CS_fsm_state26, madeComplementaryPatch_reg_499, ap_CS_fsm_state80, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            patches_superpoints_address1 <= grp_areWedgeSuperPointsEqual_fu_601_wsp1_2_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            patches_superpoints_address1 <= grp_solveComplmentaryPatch_fu_540_patches_superpoints_address1;
        elsif (((madeComplementaryPatch_reg_499 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
            patches_superpoints_address1 <= grp_makeThirdPatch_fu_513_patches_superpoints_address1;
        else 
            patches_superpoints_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    patches_superpoints_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state46, ap_CS_fsm_state61, ap_CS_fsm_state64, ap_CS_fsm_state72, grp_makeThirdPatch_fu_513_patches_superpoints_ce0, grp_solveComplmentaryPatch_fu_540_patches_superpoints_ce0, grp_makePatch_alignedToLine_fu_573_patches_superpoints_ce0, grp_areWedgeSuperPointsEqual_fu_601_wsp1_2_ce0, ap_CS_fsm_state26, madeComplementaryPatch_reg_499, ap_CS_fsm_state80, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            patches_superpoints_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            patches_superpoints_ce0 <= grp_areWedgeSuperPointsEqual_fu_601_wsp1_2_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_superpoints_ce0 <= grp_makePatch_alignedToLine_fu_573_patches_superpoints_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            patches_superpoints_ce0 <= grp_solveComplmentaryPatch_fu_540_patches_superpoints_ce0;
        elsif (((madeComplementaryPatch_reg_499 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
            patches_superpoints_ce0 <= grp_makeThirdPatch_fu_513_patches_superpoints_ce0;
        else 
            patches_superpoints_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    patches_superpoints_ce1_assign_proc : process(ap_CS_fsm_state72, grp_makeThirdPatch_fu_513_patches_superpoints_ce1, grp_solveComplmentaryPatch_fu_540_patches_superpoints_ce1, grp_areWedgeSuperPointsEqual_fu_601_wsp1_2_ce1, ap_CS_fsm_state26, madeComplementaryPatch_reg_499, ap_CS_fsm_state80, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            patches_superpoints_ce1 <= grp_areWedgeSuperPointsEqual_fu_601_wsp1_2_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            patches_superpoints_ce1 <= grp_solveComplmentaryPatch_fu_540_patches_superpoints_ce1;
        elsif (((madeComplementaryPatch_reg_499 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
            patches_superpoints_ce1 <= grp_makeThirdPatch_fu_513_patches_superpoints_ce1;
        else 
            patches_superpoints_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    patches_superpoints_d0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state64, ap_CS_fsm_state72, grp_makeThirdPatch_fu_513_patches_superpoints_d0, grp_solveComplmentaryPatch_fu_540_patches_superpoints_d0, grp_makePatch_alignedToLine_fu_573_patches_superpoints_d0, madeComplementaryPatch_reg_499, ap_CS_fsm_state80)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_superpoints_d0 <= grp_makePatch_alignedToLine_fu_573_patches_superpoints_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            patches_superpoints_d0 <= grp_solveComplmentaryPatch_fu_540_patches_superpoints_d0;
        elsif (((madeComplementaryPatch_reg_499 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
            patches_superpoints_d0 <= grp_makeThirdPatch_fu_513_patches_superpoints_d0;
        else 
            patches_superpoints_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    patches_superpoints_we0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state64, ap_CS_fsm_state72, grp_makeThirdPatch_fu_513_patches_superpoints_we0, grp_solveComplmentaryPatch_fu_540_patches_superpoints_we0, grp_makePatch_alignedToLine_fu_573_patches_superpoints_we0, madeComplementaryPatch_reg_499, ap_CS_fsm_state80)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            patches_superpoints_we0 <= grp_makePatch_alignedToLine_fu_573_patches_superpoints_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            patches_superpoints_we0 <= grp_solveComplmentaryPatch_fu_540_patches_superpoints_we0;
        elsif (((madeComplementaryPatch_reg_499 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
            patches_superpoints_we0 <= grp_makeThirdPatch_fu_513_patches_superpoints_we0;
        else 
            patches_superpoints_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ret_1_fu_1153_p2 <= std_logic_vector(signed(sext_ln215_2_fu_1145_p1) - signed(sext_ln215_3_fu_1149_p1));
    ret_fu_1139_p2 <= std_logic_vector(signed(sext_ln215_fu_1131_p1) - signed(sext_ln215_1_fu_1135_p1));
    select_ln828_fu_1061_p3 <= 
        trunc_ln69_1_fu_1051_p1 when (icmp_ln878_fu_1055_p2(0) = '1') else 
        ap_const_lv32_FD050F80;
    sext_ln215_1_fu_1135_p0 <= patches_parameters_q0;
        sext_ln215_1_fu_1135_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln215_1_fu_1135_p0),33));

        sext_ln215_2_fu_1145_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_664),33));

    sext_ln215_3_fu_1149_p0 <= patches_parameters_q1;
        sext_ln215_3_fu_1149_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln215_3_fu_1149_p0),33));

        sext_ln215_fu_1131_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_657),33));

        sext_ln534_fu_1173_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(white_space_height_reg_1553),64));

    shl_ln_fu_865_p3 <= (reg_651 & ap_const_lv9_0);
    squarePatch_alternate2_fu_814_p2 <= "0" when (patches_parameters_q0 = ap_const_lv32_0) else "1";
    sub_ln767_fu_695_p2 <= std_logic_vector(unsigned(tmp_cast_fu_676_p3) - unsigned(zext_ln767_fu_691_p1));
    sub_ln845_fu_1097_p2 <= std_logic_vector(unsigned(tmp_1_fu_1079_p3) - unsigned(zext_ln845_fu_1093_p1));
    sub_ln871_fu_1241_p2 <= std_logic_vector(unsigned(tmp_16_cast_fu_1222_p3) - unsigned(zext_ln871_fu_1237_p1));
    thirdLastPatchIndex_fu_792_p2 <= std_logic_vector(unsigned(nPatchesAtOriginal_reg_1347) + unsigned(ap_const_lv8_FD));
    tmp_10_fu_1229_p3 <= (reg_651 & ap_const_lv3_0);
    tmp_16_cast_fu_1222_p3 <= (trunc_ln871_reg_1611 & ap_const_lv7_0);
    tmp_1_fu_1079_p3 <= (lastPatchIndex_1_reg_1536 & ap_const_lv7_0);
    tmp_2_fu_911_p4 <= grp_fu_1309_p2(36 downto 28);
    tmp_3_fu_924_p3 <= (tmp_2_fu_911_p4 & ap_const_lv2_0);
    tmp_4_fu_683_p3 <= (reg_651 & ap_const_lv3_0);
    tmp_5_fu_952_p3 <= (add_ln818_2_fu_946_p2 & ap_const_lv4_0);
    tmp_7_fu_1011_p3 <= (tmp_6_reg_1514 & ap_const_lv2_0);
    tmp_8_fu_1038_p3 <= (add_ln828_2_fu_1032_p2 & ap_const_lv4_0);
    tmp_9_fu_1086_p3 <= (lastPatchIndex_1_reg_1536 & ap_const_lv3_0);
    tmp_cast_fu_676_p3 <= (trunc_ln767_reg_1354 & ap_const_lv7_0);
    tmp_fu_729_p3 <= (reg_651 & ap_const_lv7_0);
    trunc_ln69_1_fu_1051_p1 <= patches_superpoints_q0(32 - 1 downto 0);
    trunc_ln69_fu_965_p1 <= patches_superpoints_q0(32 - 1 downto 0);
    trunc_ln767_fu_672_p1 <= grp_fu_645_p2(5 - 1 downto 0);
    trunc_ln835_fu_1069_p1 <= n_patches_i(5 - 1 downto 0);
    trunc_ln871_fu_1218_p1 <= grp_fu_645_p2(5 - 1 downto 0);
    white_space_height_fu_1165_p3 <= 
        ret_1_fu_1153_p2 when (icmp_ln878_1_fu_1159_p2(0) = '1') else 
        ret_fu_1139_p2;
    xor_ln816_fu_835_p2 <= (notChoppedPatch_fu_830_p2 xor ap_const_lv1_1);
    zext_ln534_1_fu_772_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln534_1_fu_767_p2),64));
    zext_ln534_2_fu_782_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln534_2_fu_777_p2),64));
    zext_ln534_fu_762_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln534_fu_757_p2),64));
    zext_ln767_1_fu_742_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln767_fu_737_p2),64));
    zext_ln767_2_fu_707_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln767_1_fu_701_p2),64));
    zext_ln767_fu_691_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_683_p3),12));
    zext_ln768_fu_718_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln768_fu_712_p2),64));
    zext_ln818_1_fu_877_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_1393),18));
    zext_ln818_3_fu_920_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_911_p4),21));
    zext_ln818_4_fu_932_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_924_p3),21));
    zext_ln818_5_fu_942_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_896_p2),21));
    zext_ln818_6_fu_960_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_952_p3),64));
    zext_ln818_fu_873_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_865_p3),18));
    zext_ln828_1_fu_1008_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_reg_1514),21));
    zext_ln828_2_fu_1018_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_1011_p3),21));
    zext_ln828_3_fu_1028_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_993_p2),21));
    zext_ln828_4_fu_1046_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_1038_p3),64));
    zext_ln845_1_fu_1115_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln845_fu_1109_p2),64));
    zext_ln845_fu_1093_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_1086_p3),12));
    zext_ln846_fu_1126_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln846_fu_1120_p2),64));
    zext_ln871_1_fu_1253_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln871_fu_1247_p2),64));
    zext_ln871_2_fu_1264_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln871_1_fu_1258_p2),64));
    zext_ln871_fu_1237_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_1229_p3),12));
    zext_ln886_fu_752_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln886_fu_747_p2),64));
end behav;
