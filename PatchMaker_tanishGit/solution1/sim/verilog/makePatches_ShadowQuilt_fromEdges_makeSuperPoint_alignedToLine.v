// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        GDarray_address0,
        GDarray_ce0,
        GDarray_q0,
        GDn_points_address0,
        GDn_points_ce0,
        GDn_points_q0,
        i,
        z_top,
        apexZ0,
        original_ppl,
        leftRight_offset,
        init_patch_address0,
        init_patch_ce0,
        init_patch_we0,
        init_patch_d0,
        init_patch_q0,
        init_patch_address1,
        init_patch_ce1,
        init_patch_we1,
        init_patch_d1,
        init_patch_q1,
        init_patch1_address0,
        init_patch1_ce0,
        init_patch1_we0,
        init_patch1_d0,
        init_patch1_q0,
        init_patch1_address1,
        init_patch1_ce1,
        init_patch1_we1,
        init_patch1_d1,
        init_patch1_q1,
        init_patch2_address0,
        init_patch2_ce0,
        init_patch2_we0,
        init_patch2_d0,
        init_patch2_q0,
        init_patch2_address1,
        init_patch2_ce1,
        init_patch2_we1,
        init_patch2_d1,
        init_patch2_q1,
        init_patch3_address0,
        init_patch3_ce0,
        init_patch3_we0,
        init_patch3_d0,
        init_patch3_q0,
        init_patch3_address1,
        init_patch3_ce1,
        init_patch3_we1,
        init_patch3_d1,
        init_patch3_q1,
        init_patch4_address0,
        init_patch4_ce0,
        init_patch4_we0,
        init_patch4_d0,
        init_patch4_q0,
        init_patch4_address1,
        init_patch4_ce1,
        init_patch4_we1,
        init_patch4_d1,
        init_patch4_q1,
        p_read1,
        temp_address0,
        temp_ce0,
        temp_we0,
        temp_d0,
        temp_q0,
        temp_address1,
        temp_ce1,
        temp_q1,
        ap_return_0,
        ap_return_1
);

parameter    ap_ST_fsm_state1 = 39'd1;
parameter    ap_ST_fsm_state2 = 39'd2;
parameter    ap_ST_fsm_pp0_stage0 = 39'd4;
parameter    ap_ST_fsm_state6 = 39'd8;
parameter    ap_ST_fsm_state7 = 39'd16;
parameter    ap_ST_fsm_state8 = 39'd32;
parameter    ap_ST_fsm_state9 = 39'd64;
parameter    ap_ST_fsm_state10 = 39'd128;
parameter    ap_ST_fsm_state11 = 39'd256;
parameter    ap_ST_fsm_state12 = 39'd512;
parameter    ap_ST_fsm_state13 = 39'd1024;
parameter    ap_ST_fsm_state14 = 39'd2048;
parameter    ap_ST_fsm_state15 = 39'd4096;
parameter    ap_ST_fsm_state16 = 39'd8192;
parameter    ap_ST_fsm_state17 = 39'd16384;
parameter    ap_ST_fsm_state18 = 39'd32768;
parameter    ap_ST_fsm_state19 = 39'd65536;
parameter    ap_ST_fsm_pp1_stage0 = 39'd131072;
parameter    ap_ST_fsm_pp1_stage1 = 39'd262144;
parameter    ap_ST_fsm_pp1_stage2 = 39'd524288;
parameter    ap_ST_fsm_state25 = 39'd1048576;
parameter    ap_ST_fsm_state26 = 39'd2097152;
parameter    ap_ST_fsm_pp2_stage0 = 39'd4194304;
parameter    ap_ST_fsm_state31 = 39'd8388608;
parameter    ap_ST_fsm_state32 = 39'd16777216;
parameter    ap_ST_fsm_pp3_stage0 = 39'd33554432;
parameter    ap_ST_fsm_state36 = 39'd67108864;
parameter    ap_ST_fsm_pp4_stage0 = 39'd134217728;
parameter    ap_ST_fsm_state40 = 39'd268435456;
parameter    ap_ST_fsm_pp5_stage0 = 39'd536870912;
parameter    ap_ST_fsm_state44 = 39'd1073741824;
parameter    ap_ST_fsm_state45 = 39'd2147483648;
parameter    ap_ST_fsm_pp6_stage0 = 39'd4294967296;
parameter    ap_ST_fsm_state49 = 39'd8589934592;
parameter    ap_ST_fsm_state50 = 39'd17179869184;
parameter    ap_ST_fsm_state51 = 39'd34359738368;
parameter    ap_ST_fsm_state52 = 39'd68719476736;
parameter    ap_ST_fsm_state53 = 39'd137438953472;
parameter    ap_ST_fsm_state54 = 39'd274877906944;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] GDarray_address0;
output   GDarray_ce0;
input  [191:0] GDarray_q0;
output  [2:0] GDn_points_address0;
output   GDn_points_ce0;
input  [31:0] GDn_points_q0;
input  [2:0] i;
input  [63:0] z_top;
input  [63:0] apexZ0;
input  [31:0] original_ppl;
input  [0:0] leftRight_offset;
output  [7:0] init_patch_address0;
output   init_patch_ce0;
output   init_patch_we0;
output  [63:0] init_patch_d0;
input  [63:0] init_patch_q0;
output  [7:0] init_patch_address1;
output   init_patch_ce1;
output   init_patch_we1;
output  [63:0] init_patch_d1;
input  [63:0] init_patch_q1;
output  [7:0] init_patch1_address0;
output   init_patch1_ce0;
output   init_patch1_we0;
output  [63:0] init_patch1_d0;
input  [63:0] init_patch1_q0;
output  [7:0] init_patch1_address1;
output   init_patch1_ce1;
output   init_patch1_we1;
output  [63:0] init_patch1_d1;
input  [63:0] init_patch1_q1;
output  [7:0] init_patch2_address0;
output   init_patch2_ce0;
output   init_patch2_we0;
output  [63:0] init_patch2_d0;
input  [63:0] init_patch2_q0;
output  [7:0] init_patch2_address1;
output   init_patch2_ce1;
output   init_patch2_we1;
output  [63:0] init_patch2_d1;
input  [63:0] init_patch2_q1;
output  [7:0] init_patch3_address0;
output   init_patch3_ce0;
output   init_patch3_we0;
output  [63:0] init_patch3_d0;
input  [63:0] init_patch3_q0;
output  [7:0] init_patch3_address1;
output   init_patch3_ce1;
output   init_patch3_we1;
output  [63:0] init_patch3_d1;
input  [63:0] init_patch3_q1;
output  [7:0] init_patch4_address0;
output   init_patch4_ce0;
output   init_patch4_we0;
output  [63:0] init_patch4_d0;
input  [63:0] init_patch4_q0;
output  [7:0] init_patch4_address1;
output   init_patch4_ce1;
output   init_patch4_we1;
output  [63:0] init_patch4_d1;
input  [63:0] init_patch4_q1;
input  [31:0] p_read1;
output  [9:0] temp_address0;
output   temp_ce0;
output   temp_we0;
output  [63:0] temp_d0;
input  [63:0] temp_q0;
output  [9:0] temp_address1;
output   temp_ce1;
input  [63:0] temp_q1;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[10:0] GDarray_address0;
reg GDarray_ce0;
reg GDn_points_ce0;
reg[7:0] init_patch_address0;
reg init_patch_ce0;
reg init_patch_we0;
reg[63:0] init_patch_d0;
reg[7:0] init_patch_address1;
reg init_patch_ce1;
reg init_patch_we1;
reg[63:0] init_patch_d1;
reg[7:0] init_patch1_address0;
reg init_patch1_ce0;
reg init_patch1_we0;
reg[63:0] init_patch1_d0;
reg[7:0] init_patch1_address1;
reg init_patch1_ce1;
reg init_patch1_we1;
reg[63:0] init_patch1_d1;
reg[7:0] init_patch2_address0;
reg init_patch2_ce0;
reg init_patch2_we0;
reg[63:0] init_patch2_d0;
reg[7:0] init_patch2_address1;
reg init_patch2_ce1;
reg init_patch2_we1;
reg[63:0] init_patch2_d1;
reg[7:0] init_patch3_address0;
reg init_patch3_ce0;
reg init_patch3_we0;
reg[63:0] init_patch3_d0;
reg[7:0] init_patch3_address1;
reg init_patch3_ce1;
reg init_patch3_we1;
reg[63:0] init_patch3_d1;
reg[7:0] init_patch4_address0;
reg init_patch4_ce0;
reg init_patch4_we0;
reg[63:0] init_patch4_d0;
reg[7:0] init_patch4_address1;
reg init_patch4_ce1;
reg init_patch4_we1;
reg[63:0] init_patch4_d1;
reg[9:0] temp_address0;
reg temp_ce0;
reg temp_we0;
reg[63:0] temp_d0;
reg[9:0] temp_address1;
reg temp_ce1;

(* fsm_encoding = "none" *) reg   [38:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] radii_address0;
reg    radii_ce0;
wire   [24:0] radii_q0;
wire   [2:0] trapezoid_edges_address0;
reg    trapezoid_edges_ce0;
wire   [25:0] trapezoid_edges_q0;
reg   [30:0] row_list_size_reg_818;
reg   [30:0] row_list_size_reg_818_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] start_index_reg_842;
reg   [63:0] start_value_reg_854;
reg   [31:0] j_1_reg_866;
reg   [31:0] j_1_reg_866_pp1_iter1_reg;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state20_pp1_stage0_iter0;
wire    ap_block_state23_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
reg   [63:0] p_x_assign_7_reg_878;
reg  signed [31:0] j_9_reg_890;
reg  signed [31:0] right_bound_reg_902;
reg   [31:0] j_2_reg_914;
reg   [31:0] j_2_reg_914_pp2_iter1_reg;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state27_pp2_stage0_iter0;
wire    ap_block_state28_pp2_stage0_iter1;
wire    ap_block_state29_pp2_stage0_iter2;
wire    ap_block_state30_pp2_stage0_iter3;
wire    ap_block_pp2_stage0_11001;
reg   [31:0] j_2_reg_914_pp2_iter2_reg;
reg   [63:0] rbVal_reg_926;
reg   [63:0] lbVal_reg_938;
reg   [65:0] indvar_flatten23_reg_950;
reg   [63:0] temp_size_3_reg_961;
reg   [63:0] j_8_reg_972;
reg   [1:0] z_3_reg_981;
reg   [32:0] indvar_flatten15_reg_1019;
reg   [30:0] temp_size_2_reg_1030;
reg   [32:0] j_7_reg_1041;
reg   [1:0] z_2_reg_1050;
reg   [32:0] indvar_flatten7_reg_1061;
reg   [30:0] temp_size_1_reg_1072;
reg   [32:0] j_6_reg_1083;
reg   [1:0] z_1_reg_1092;
reg   [65:0] indvar_flatten_reg_1103;
reg   [63:0] temp_size_reg_1114;
reg   [63:0] j_5_reg_1125;
reg   [1:0] z_reg_1134;
wire   [63:0] zext_ln1141_fu_1194_p1;
reg   [63:0] zext_ln1141_reg_3683;
wire    ap_CS_fsm_state2;
wire   [0:0] leftRight_offset_read_read_fu_284_p2;
reg   [24:0] y_reg_3813;
reg   [31:0] GDn_points_load_reg_3818;
wire   [0:0] icmp_ln1145_fu_1200_p2;
reg   [0:0] icmp_ln1145_reg_3823;
wire   [30:0] trunc_ln54_fu_1206_p1;
reg   [30:0] trunc_ln54_reg_3827;
wire  signed [37:0] sext_ln1145_fu_1244_p1;
reg  signed [37:0] sext_ln1145_reg_3832;
wire   [30:0] add_ln1147_1_fu_1248_p2;
reg   [30:0] add_ln1147_1_reg_3837;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln1145_1_fu_1254_p2;
reg   [0:0] icmp_ln1145_1_reg_3842;
reg   [0:0] icmp_ln1145_1_reg_3842_pp0_iter1_reg;
wire   [37:0] add_ln54_fu_1293_p2;
reg   [37:0] add_ln54_reg_3846;
wire   [63:0] add_ln1147_fu_1362_p2;
reg   [63:0] add_ln1147_reg_3856;
wire    ap_CS_fsm_state6;
wire   [31:0] grp_fu_1169_p1;
reg   [31:0] conv9_reg_3871;
wire    ap_CS_fsm_state7;
wire   [31:0] grp_fu_1172_p1;
reg   [31:0] conv_reg_3876;
wire   [31:0] grp_fu_1175_p1;
reg   [31:0] conv6_reg_3881;
wire   [31:0] grp_fu_1164_p2;
reg   [31:0] div_reg_3886;
wire    ap_CS_fsm_state13;
wire   [31:0] grp_fu_1160_p2;
reg   [31:0] mul_reg_3891;
wire    ap_CS_fsm_state15;
wire   [31:0] grp_fu_1156_p2;
reg   [31:0] dc_reg_3896;
wire    ap_CS_fsm_state18;
wire   [63:0] result_V_fu_1541_p3;
reg   [63:0] result_V_reg_3901;
wire    ap_CS_fsm_state19;
wire   [31:0] add_ln1275_fu_1549_p2;
reg   [31:0] add_ln1275_reg_3906;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln1275_fu_1555_p2;
reg   [0:0] icmp_ln1275_reg_3911;
reg   [0:0] icmp_ln1275_reg_3911_pp1_iter1_reg;
wire   [63:0] sub_ln1277_fu_1566_p2;
reg   [63:0] sub_ln1277_reg_3920;
wire    ap_CS_fsm_pp1_stage1;
wire    ap_block_state21_pp1_stage1_iter0;
wire    ap_block_state24_pp1_stage1_iter1;
wire    ap_block_pp1_stage1_11001;
wire   [63:0] grp_fu_1182_p1;
reg   [63:0] dc_9_reg_3927;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_state22_pp1_stage2_iter0;
wire    ap_block_pp1_stage2_11001;
wire   [0:0] icmp_ln1277_fu_1641_p2;
reg   [0:0] icmp_ln1277_reg_3942;
wire   [0:0] icmp_ln1277_1_fu_1647_p2;
reg   [0:0] icmp_ln1277_1_reg_3947;
wire   [0:0] icmp_ln1277_2_fu_1653_p2;
reg   [0:0] icmp_ln1277_2_reg_3952;
wire   [0:0] icmp_ln1277_3_fu_1659_p2;
reg   [0:0] icmp_ln1277_3_reg_3957;
wire   [31:0] select_ln1277_fu_1685_p3;
reg    ap_enable_reg_pp1_iter1;
wire   [63:0] select_ln1277_1_fu_1693_p3;
wire   [63:0] select_ln1277_2_fu_1700_p3;
wire    ap_CS_fsm_state25;
wire   [63:0] zext_ln1254_fu_1707_p1;
reg   [63:0] zext_ln1254_reg_3982;
wire    ap_CS_fsm_state26;
wire   [31:0] add_ln1254_fu_1711_p2;
reg   [31:0] add_ln1254_reg_3988;
reg    ap_enable_reg_pp2_iter0;
wire   [0:0] icmp_ln1254_fu_1717_p2;
reg   [0:0] icmp_ln1254_reg_3993;
reg   [0:0] icmp_ln1254_reg_3993_pp2_iter1_reg;
reg   [0:0] icmp_ln1254_reg_3993_pp2_iter2_reg;
wire   [63:0] add_ln1256_fu_1728_p2;
reg   [10:0] tmp_138_reg_4012;
wire   [51:0] tmp_139_fu_1754_p1;
reg   [51:0] tmp_139_reg_4018;
reg   [10:0] tmp_140_reg_4023;
wire   [51:0] tmp_141_fu_1772_p1;
reg   [51:0] tmp_141_reg_4029;
wire   [31:0] select_ln1256_fu_1879_p3;
reg    ap_enable_reg_pp2_iter3;
wire   [63:0] lbVal_2_fu_1887_p3;
wire   [31:0] select_ln1262_fu_1998_p3;
wire   [63:0] p_Result_11_fu_2006_p3;
wire  signed [31:0] select_ln1205_fu_2044_p3;
reg  signed [31:0] select_ln1205_reg_4054;
wire    ap_CS_fsm_state31;
wire   [0:0] icmp_ln1220_fu_2063_p2;
reg   [0:0] icmp_ln1220_reg_4060;
wire   [0:0] icmp_ln1234_fu_2069_p2;
reg   [0:0] icmp_ln1234_reg_4064;
wire   [0:0] grp_fu_1189_p2;
wire  signed [32:0] sext_ln1222_fu_2075_p1;
wire   [16:0] sub_ln54_8_fu_2104_p2;
reg   [16:0] sub_ln54_8_reg_4077;
wire   [32:0] sub_ln1222_fu_2122_p2;
reg   [32:0] sub_ln1222_reg_4082;
wire   [0:0] icmp_ln1179_fu_2171_p2;
reg   [0:0] icmp_ln1179_reg_4087;
wire  signed [32:0] sext_ln1193_fu_2177_p1;
wire   [16:0] sub_ln54_7_fu_2206_p2;
reg   [16:0] sub_ln54_7_reg_4100;
wire   [32:0] sub_ln1193_fu_2224_p2;
reg   [32:0] sub_ln1193_reg_4105;
wire  signed [31:0] j_3_fu_2230_p2;
reg  signed [31:0] j_3_reg_4110;
wire   [0:0] icmp_ln1181_fu_2235_p2;
reg   [0:0] icmp_ln1181_reg_4117;
wire  signed [63:0] sext_ln1234_fu_2251_p1;
wire    ap_CS_fsm_state32;
wire   [33:0] sub_ln1234_fu_2276_p2;
reg   [33:0] sub_ln1234_reg_4126;
wire   [16:0] sub_ln54_9_fu_2318_p2;
reg   [16:0] sub_ln54_9_reg_4131;
wire   [65:0] mul_ln1234_fu_2332_p2;
reg   [65:0] mul_ln1234_reg_4136;
wire   [65:0] add_ln1234_3_fu_2338_p2;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state33_pp3_stage0_iter0;
wire    ap_block_state34_pp3_stage0_iter1;
wire    ap_block_state35_pp3_stage0_iter2;
wire    ap_block_pp3_stage0_11001;
wire   [0:0] icmp_ln1234_2_fu_2362_p2;
reg   [0:0] icmp_ln1234_2_reg_4146;
reg   [0:0] icmp_ln1234_2_reg_4146_pp3_iter1_reg;
wire   [63:0] select_ln1234_1_fu_2419_p3;
reg   [63:0] select_ln1234_1_reg_4150;
wire   [63:0] select_ln1234_2_fu_2449_p3;
wire   [9:0] add_ln1238_1_fu_2461_p2;
reg   [9:0] add_ln1238_1_reg_4160;
reg   [9:0] add_ln1238_1_reg_4160_pp3_iter1_reg;
wire   [63:0] add_ln54_7_fu_2490_p2;
reg   [63:0] add_ln54_7_reg_4165;
wire   [1:0] add_ln1236_fu_2496_p2;
wire   [63:0] add_ln1238_fu_2562_p2;
reg   [63:0] add_ln1238_reg_4181;
wire   [31:0] add_ln1245_fu_2601_p2;
reg   [31:0] add_ln1245_reg_4186;
wire    ap_CS_fsm_state36;
wire   [2:0] trunc_ln5_fu_2615_p1;
reg   [2:0] trunc_ln5_reg_4191;
wire   [32:0] add_ln1222_1_fu_2618_p2;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter0;
wire    ap_block_state37_pp4_stage0_iter0;
wire    ap_block_state38_pp4_stage0_iter1;
wire    ap_block_state39_pp4_stage0_iter2;
wire    ap_block_pp4_stage0_11001;
wire   [0:0] icmp_ln1222_1_fu_2654_p2;
reg   [0:0] icmp_ln1222_1_reg_4202;
reg   [0:0] icmp_ln1222_1_reg_4202_pp4_iter1_reg;
wire   [30:0] select_ln1222_1_fu_2685_p3;
reg   [30:0] select_ln1222_1_reg_4206;
wire   [32:0] select_ln1222_3_fu_2753_p3;
wire   [9:0] add_ln1226_1_fu_2765_p2;
reg   [9:0] add_ln1226_1_reg_4216;
reg   [9:0] add_ln1226_1_reg_4216_pp4_iter1_reg;
wire   [38:0] add_ln54_6_fu_2794_p2;
reg   [38:0] add_ln54_6_reg_4221;
wire   [1:0] add_ln1224_fu_2800_p2;
wire   [63:0] add_ln1226_fu_2870_p2;
reg   [63:0] add_ln1226_reg_4236;
wire   [32:0] add_ln1193_1_fu_2902_p2;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter0;
wire    ap_block_state41_pp5_stage0_iter0;
wire    ap_block_state42_pp5_stage0_iter1;
wire    ap_block_state43_pp5_stage0_iter2;
wire    ap_block_pp5_stage0_11001;
wire   [0:0] icmp_ln1193_1_fu_2938_p2;
reg   [0:0] icmp_ln1193_1_reg_4246;
reg   [0:0] icmp_ln1193_1_reg_4246_pp5_iter1_reg;
wire   [30:0] select_ln1193_1_fu_2969_p3;
reg   [30:0] select_ln1193_1_reg_4250;
wire   [32:0] select_ln1193_3_fu_3037_p3;
wire   [9:0] add_ln1197_1_fu_3049_p2;
reg   [9:0] add_ln1197_1_reg_4260;
reg   [9:0] add_ln1197_1_reg_4260_pp5_iter1_reg;
wire   [38:0] add_ln54_5_fu_3078_p2;
reg   [38:0] add_ln54_5_reg_4265;
wire   [1:0] add_ln1195_fu_3084_p2;
wire   [63:0] add_ln1197_fu_3154_p2;
reg   [63:0] add_ln1197_reg_4280;
wire  signed [63:0] sext_ln1181_fu_3186_p1;
wire    ap_CS_fsm_state45;
wire   [33:0] sub_ln1181_fu_3209_p2;
reg   [33:0] sub_ln1181_reg_4290;
wire   [16:0] sub_ln54_6_fu_3251_p2;
reg   [16:0] sub_ln54_6_reg_4295;
wire   [65:0] mul_ln1181_fu_3265_p2;
reg   [65:0] mul_ln1181_reg_4300;
wire   [65:0] add_ln1181_2_fu_3271_p2;
wire    ap_CS_fsm_pp6_stage0;
reg    ap_enable_reg_pp6_iter0;
wire    ap_block_state46_pp6_stage0_iter0;
wire    ap_block_state47_pp6_stage0_iter1;
wire    ap_block_state48_pp6_stage0_iter2;
wire    ap_block_pp6_stage0_11001;
wire   [0:0] icmp_ln1181_2_fu_3295_p2;
reg   [0:0] icmp_ln1181_2_reg_4310;
reg   [0:0] icmp_ln1181_2_reg_4310_pp6_iter1_reg;
wire   [63:0] select_ln1181_1_fu_3352_p3;
reg   [63:0] select_ln1181_1_reg_4314;
wire   [63:0] select_ln1181_2_fu_3382_p3;
wire   [9:0] add_ln1185_1_fu_3394_p2;
reg   [9:0] add_ln1185_1_reg_4324;
reg   [9:0] add_ln1185_1_reg_4324_pp6_iter1_reg;
wire   [63:0] add_ln54_4_fu_3423_p2;
reg   [63:0] add_ln54_4_reg_4329;
wire   [1:0] add_ln1183_fu_3429_p2;
wire   [63:0] add_ln1185_fu_3495_p2;
reg   [63:0] add_ln1185_reg_4345;
wire   [7:0] add_ln13_fu_3526_p2;
reg   [7:0] add_ln13_reg_4350;
wire    ap_CS_fsm_state50;
wire   [0:0] icmp_ln13_fu_3536_p2;
reg   [0:0] icmp_ln13_reg_4355;
wire   [9:0] sub_ln17_fu_3554_p2;
reg   [9:0] sub_ln17_reg_4359;
wire   [7:0] trunc_ln17_fu_3570_p1;
reg   [7:0] trunc_ln17_reg_4364;
reg   [7:0] init_patch_addr_3_reg_4379;
reg   [7:0] init_patch_addr_4_reg_4384;
reg   [7:0] init_patch1_addr_3_reg_4389;
reg   [7:0] init_patch1_addr_4_reg_4394;
reg   [7:0] init_patch2_addr_3_reg_4399;
reg   [7:0] init_patch2_addr_4_reg_4404;
reg   [7:0] init_patch3_addr_3_reg_4409;
reg   [7:0] init_patch3_addr_4_reg_4414;
reg   [7:0] init_patch4_addr_3_reg_4419;
reg   [7:0] init_patch4_addr_4_reg_4424;
wire    ap_CS_fsm_state51;
reg   [7:0] init_patch_addr_5_reg_4434;
reg   [7:0] init_patch1_addr_5_reg_4439;
reg   [7:0] init_patch2_addr_5_reg_4444;
reg   [7:0] init_patch3_addr_5_reg_4449;
reg   [7:0] init_patch4_addr_5_reg_4454;
wire   [63:0] tmp_116_fu_3605_p7;
reg   [63:0] tmp_116_reg_4459;
wire   [63:0] tmp_117_fu_3620_p7;
reg   [63:0] tmp_117_reg_4464;
reg   [63:0] temp_load_2_reg_4469;
wire    ap_CS_fsm_state52;
wire   [0:0] icmp_ln22_fu_3649_p2;
reg   [0:0] icmp_ln22_reg_4483;
wire   [0:0] icmp_ln24_fu_3654_p2;
reg   [0:0] icmp_ln24_reg_4487;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state20;
wire    ap_block_pp1_stage2_subdone;
wire    ap_block_pp1_stage1_subdone;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state27;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter2;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state33;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter2;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state37;
reg    ap_enable_reg_pp4_iter1;
reg    ap_enable_reg_pp4_iter2;
wire    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state41;
reg    ap_enable_reg_pp5_iter1;
reg    ap_enable_reg_pp5_iter2;
wire    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state46;
reg    ap_enable_reg_pp6_iter1;
reg    ap_enable_reg_pp6_iter2;
reg   [7:0] row_list_address0;
reg    row_list_ce0;
reg    row_list_we0;
wire   [63:0] row_list_d0;
wire   [63:0] row_list_q0;
reg   [30:0] ap_phi_mux_row_list_size_phi_fu_822_p4;
wire    ap_block_pp0_stage0;
reg   [31:0] row_list_size_assign_reg_830;
reg   [31:0] ap_phi_mux_j_1_phi_fu_870_p4;
wire    ap_block_pp1_stage0;
reg   [31:0] ap_phi_mux_j_2_phi_fu_918_p4;
wire    ap_block_pp2_stage0;
reg   [63:0] ap_phi_mux_temp_size_3_phi_fu_965_p4;
wire    ap_block_pp3_stage0;
wire   [31:0] trunc_ln1245_fu_2597_p1;
reg  signed [31:0] ap_phi_mux_temp_size_4_phi_fu_996_p16;
reg  signed [31:0] temp_size_4_reg_992;
wire   [31:0] trunc_ln1245_1_fu_2593_p1;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state44;
reg   [30:0] ap_phi_mux_temp_size_2_phi_fu_1034_p4;
wire    ap_block_pp4_stage0;
reg   [30:0] ap_phi_mux_temp_size_1_phi_fu_1076_p4;
wire    ap_block_pp5_stage0;
reg   [63:0] ap_phi_mux_temp_size_phi_fu_1118_p4;
wire    ap_block_pp6_stage0;
reg   [7:0] i_10_reg_1145;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state49;
wire   [63:0] zext_ln1147_3_fu_1321_p1;
wire   [63:0] row_list_size_cast9_fu_1368_p1;
wire   [63:0] trunc_ln1279_cast_fu_1561_p1;
wire   [63:0] trunc_ln1258_cast_fu_1723_p1;
wire   [63:0] zext_ln1238_5_fu_2521_p1;
wire   [63:0] zext_ln1238_3_fu_2567_p1;
wire   [63:0] zext_ln1226_5_fu_2829_p1;
wire   [63:0] zext_ln1226_2_fu_2876_p1;
wire   [63:0] zext_ln1197_5_fu_3113_p1;
wire   [63:0] zext_ln1197_2_fu_3160_p1;
wire   [63:0] zext_ln1185_5_fu_3454_p1;
wire   [63:0] zext_ln1185_3_fu_3500_p1;
wire   [63:0] zext_ln17_1_fu_3560_p1;
wire   [63:0] zext_ln17_2_fu_3580_p1;
wire   [63:0] zext_ln17_3_fu_3595_p1;
wire   [63:0] zext_ln20_fu_3640_p1;
wire   [63:0] trunc_ln1238_2_fu_2588_p1;
wire   [63:0] trunc_ln1226_2_fu_2897_p1;
wire   [63:0] trunc_ln1197_2_fu_3181_p1;
wire   [63:0] trunc_ln1185_2_fu_3521_p1;
wire  signed [63:0] sext_ln5_fu_2606_p1;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state8;
wire   [63:0] grp_fu_1169_p0;
wire   [63:0] grp_fu_1172_p0;
wire   [63:0] grp_fu_1178_p0;
wire   [63:0] grp_fu_1178_p1;
reg   [63:0] grp_fu_1182_p0;
wire    ap_block_pp1_stage1;
wire    ap_block_pp1_stage2;
wire   [63:0] grp_fu_1186_p0;
wire   [15:0] shl_ln54_s_fu_1210_p3;
wire   [13:0] shl_ln54_1_fu_1221_p3;
wire   [16:0] zext_ln54_fu_1217_p1;
wire   [16:0] zext_ln54_2_fu_1228_p1;
wire   [16:0] sub_ln54_fu_1232_p2;
wire   [16:0] or_ln54_fu_1238_p2;
wire   [35:0] shl_ln54_2_fu_1259_p3;
wire   [33:0] shl_ln54_3_fu_1271_p3;
wire   [36:0] zext_ln54_3_fu_1267_p1;
wire   [36:0] zext_ln54_4_fu_1279_p1;
wire   [36:0] sub_ln54_5_fu_1283_p2;
wire  signed [37:0] sext_ln54_fu_1289_p1;
wire  signed [63:0] sext_ln1147_fu_1298_p1;
wire   [63:0] mul_ln1147_fu_1305_p0;
wire   [65:0] mul_ln1147_fu_1305_p1;
wire   [128:0] mul_ln1147_fu_1305_p2;
wire   [59:0] tmp_118_fu_1311_p4;
wire   [58:0] tmp_106_fu_1326_p4;
wire   [62:0] shl_ln1147_2_fu_1344_p3;
wire   [63:0] zext_ln1147_1_fu_1352_p1;
wire   [63:0] shl_ln1147_1_fu_1336_p3;
wire   [63:0] sub_ln1147_fu_1356_p2;
wire   [66:0] shl_ln_fu_1373_p3;
wire   [191:0] zext_ln1147_2_fu_1380_p1;
wire   [191:0] lshr_ln1147_fu_1384_p2;
wire   [24:0] add_ln1151_fu_1400_p2;
wire   [31:0] data_V_fu_1410_p1;
wire   [22:0] tmp_137_fu_1431_p1;
wire   [24:0] mantissa_fu_1435_p4;
wire   [7:0] tmp_136_fu_1421_p4;
wire   [8:0] zext_ln341_fu_1449_p1;
wire   [8:0] add_ln341_fu_1453_p2;
wire   [7:0] sub_ln1311_fu_1467_p2;
wire   [0:0] isNeg_fu_1459_p3;
wire  signed [8:0] sext_ln1311_fu_1473_p1;
wire   [8:0] ush_fu_1477_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i_cast_cast_cast_fu_1485_p1;
wire   [110:0] zext_ln15_fu_1445_p1;
wire   [110:0] sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_1489_p1;
wire   [110:0] r_V_fu_1493_p2;
wire   [0:0] tmp_123_fu_1505_p3;
wire   [110:0] r_V_9_fu_1499_p2;
wire   [63:0] zext_ln662_fu_1513_p1;
wire   [63:0] tmp_110_fu_1517_p4;
wire   [63:0] val_fu_1527_p3;
wire   [0:0] p_Result_s_fu_1413_p3;
wire   [63:0] result_V_15_fu_1535_p2;
wire   [63:0] data_V_10_fu_1572_p1;
wire   [62:0] trunc_ln368_fu_1575_p1;
wire   [63:0] p_Result_9_fu_1583_p3;
wire   [63:0] data_V_11_fu_1596_p1;
wire   [62:0] trunc_ln368_1_fu_1600_p1;
wire   [63:0] p_Result_10_fu_1608_p3;
wire   [10:0] tmp_107_fu_1621_p4;
wire   [51:0] trunc_ln1277_fu_1579_p1;
wire   [10:0] tmp_108_fu_1631_p4;
wire   [51:0] trunc_ln1277_1_fu_1604_p1;
wire   [0:0] or_ln1277_fu_1665_p2;
wire   [0:0] or_ln1277_1_fu_1669_p2;
wire   [0:0] and_ln1277_fu_1673_p2;
wire   [0:0] grp_fu_1178_p2;
wire   [0:0] and_ln1277_1_fu_1679_p2;
wire   [63:0] data_V_12_fu_1740_p1;
wire   [63:0] grp_fu_1186_p1;
wire   [63:0] data_V_13_fu_1758_p1;
wire   [53:0] mantissa_4_fu_1776_p4;
wire   [11:0] zext_ln510_fu_1789_p1;
wire   [11:0] add_ln510_fu_1792_p2;
wire   [10:0] sub_ln1311_4_fu_1806_p2;
wire   [0:0] isNeg_4_fu_1798_p3;
wire  signed [11:0] sext_ln1311_4_fu_1811_p1;
wire   [11:0] ush_4_fu_1815_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i_i_cast_cast_cast_fu_1823_p1;
wire   [168:0] zext_ln15_4_fu_1785_p1;
wire   [168:0] sh_prom_i_i_i_i_i_i_cast_cast_cast_cast_fu_1827_p1;
wire   [168:0] r_V_10_fu_1831_p2;
wire   [0:0] tmp_127_fu_1843_p3;
wire   [168:0] r_V_11_fu_1837_p2;
wire   [63:0] zext_ln662_4_fu_1851_p1;
wire   [63:0] tmp_119_fu_1855_p4;
wire   [63:0] val_4_fu_1865_p3;
wire   [0:0] icmp_ln1256_fu_1873_p2;
wire   [53:0] mantissa_5_fu_1895_p4;
wire   [11:0] zext_ln510_1_fu_1908_p1;
wire   [11:0] add_ln510_1_fu_1911_p2;
wire   [10:0] sub_ln1311_5_fu_1925_p2;
wire   [0:0] isNeg_5_fu_1917_p3;
wire  signed [11:0] sext_ln1311_5_fu_1930_p1;
wire   [11:0] ush_5_fu_1934_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i59_i_cast_cast_cast_fu_1942_p1;
wire   [168:0] zext_ln15_5_fu_1904_p1;
wire   [168:0] sh_prom_i_i_i_i_i59_i_cast_cast_cast_cast_fu_1946_p1;
wire   [168:0] r_V_12_fu_1950_p2;
wire   [0:0] tmp_131_fu_1962_p3;
wire   [168:0] r_V_13_fu_1956_p2;
wire   [63:0] zext_ln662_5_fu_1970_p1;
wire   [63:0] tmp_121_fu_1974_p4;
wire   [63:0] val_5_fu_1984_p3;
wire   [0:0] icmp_ln1262_fu_1992_p2;
wire   [31:0] add_ln1205_fu_2014_p2;
wire   [0:0] icmp_ln1205_fu_2020_p2;
wire   [0:0] icmp_ln1210_fu_2026_p2;
wire   [0:0] and_ln1205_fu_2032_p2;
wire   [31:0] start_index_2_fu_2038_p2;
wire   [31:0] sub_ln1220_fu_2052_p2;
wire   [31:0] j_10_fu_2057_p2;
wire   [15:0] shl_ln54_8_fu_2082_p3;
wire   [13:0] shl_ln54_9_fu_2093_p3;
wire   [16:0] zext_ln54_9_fu_2089_p1;
wire   [16:0] zext_ln54_10_fu_2100_p1;
wire   [30:0] trunc_ln1222_fu_2079_p1;
wire   [32:0] p_shl_fu_2114_p3;
wire   [32:0] zext_ln1222_fu_2110_p1;
wire   [0:0] icmp_ln1174_fu_2128_p2;
wire   [0:0] icmp_ln1174_1_fu_2134_p2;
wire   [0:0] and_ln1174_fu_2140_p2;
wire   [31:0] start_index_1_fu_2146_p2;
wire  signed [31:0] j_4_fu_2152_p3;
wire   [31:0] add_ln1179_fu_2160_p2;
wire   [31:0] add_ln1179_1_fu_2165_p2;
wire   [15:0] shl_ln54_6_fu_2184_p3;
wire   [13:0] shl_ln54_7_fu_2195_p3;
wire   [16:0] zext_ln54_7_fu_2191_p1;
wire   [16:0] zext_ln54_8_fu_2202_p1;
wire   [30:0] trunc_ln1193_fu_2181_p1;
wire   [32:0] p_shl6_fu_2216_p3;
wire   [32:0] zext_ln1193_fu_2212_p1;
wire   [31:0] sub_ln1234_1_fu_2241_p2;
wire  signed [31:0] add_ln1234_fu_2246_p2;
wire  signed [32:0] sext_ln1234_3_fu_2263_p1;
wire  signed [32:0] add_ln1234_1_fu_2266_p2;
wire  signed [33:0] sext_ln1234_4_fu_2272_p1;
wire  signed [33:0] sext_ln1234_2_fu_2259_p1;
wire  signed [32:0] sext_ln1234_1_fu_2255_p1;
wire   [0:0] icmp_ln1234_1_fu_2282_p2;
wire   [15:0] shl_ln54_10_fu_2296_p3;
wire   [13:0] shl_ln54_11_fu_2307_p3;
wire   [16:0] zext_ln54_11_fu_2303_p1;
wire   [16:0] zext_ln54_12_fu_2314_p1;
wire   [33:0] select_ln1234_fu_2288_p3;
wire  signed [63:0] sext_ln1234_5_fu_2324_p1;
wire   [63:0] mul_ln1234_fu_2332_p0;
wire   [2:0] mul_ln1234_fu_2332_p1;
wire   [63:0] shl_ln54_17_fu_2344_p2;
wire   [63:0] shl_ln54_18_fu_2350_p2;
wire   [0:0] icmp_ln1236_fu_2379_p2;
wire   [63:0] add_ln1234_2_fu_2373_p2;
wire   [63:0] shl_ln54_21_fu_2393_p2;
wire   [63:0] shl_ln54_22_fu_2399_p2;
wire   [63:0] sub_ln54_17_fu_2405_p2;
wire   [63:0] sub_ln54_13_fu_2356_p2;
wire   [63:0] add_ln1240_fu_2367_p2;
wire   [7:0] trunc_ln1238_1_fu_2431_p1;
wire   [9:0] p_shl16_cast_fu_2435_p3;
wire   [9:0] trunc_ln1238_fu_2427_p1;
wire   [1:0] select_ln1170_2_fu_2385_p3;
wire   [9:0] sub_ln1238_1_fu_2443_p2;
wire   [9:0] zext_ln1238_fu_2457_p1;
wire   [11:0] tmp_115_fu_2467_p4;
wire   [16:0] tmp3_fu_2476_p4;
wire  signed [63:0] sext_ln54_18_fu_2486_p1;
wire   [63:0] select_ln1170_3_fu_2411_p3;
wire   [63:0] mul_ln1238_fu_2505_p0;
wire   [65:0] mul_ln1238_fu_2505_p1;
wire   [128:0] mul_ln1238_fu_2505_p2;
wire   [59:0] tmp_135_fu_2511_p4;
wire   [58:0] tmp_126_fu_2526_p4;
wire   [62:0] shl_ln1238_2_fu_2544_p3;
wire   [63:0] zext_ln1238_1_fu_2552_p1;
wire   [63:0] shl_ln1238_1_fu_2536_p3;
wire   [63:0] sub_ln1238_fu_2556_p2;
wire   [66:0] shl_ln8_fu_2571_p3;
wire   [191:0] zext_ln1238_2_fu_2578_p1;
wire   [191:0] lshr_ln1238_fu_2582_p2;
wire   [37:0] shl_ln54_15_fu_2624_p3;
wire   [35:0] shl_ln54_16_fu_2636_p3;
wire  signed [38:0] sext_ln54_11_fu_2632_p1;
wire  signed [38:0] sext_ln54_12_fu_2644_p1;
wire   [0:0] icmp_ln1224_fu_2671_p2;
wire   [30:0] add_ln1228_fu_2659_p2;
wire   [7:0] trunc_ln1226_1_fu_2697_p1;
wire   [9:0] tmp_151_cast_fu_2701_p3;
wire   [9:0] trunc_ln1226_fu_2693_p1;
wire   [32:0] add_ln1222_fu_2665_p2;
wire   [37:0] shl_ln54_26_mid1_fu_2715_p3;
wire   [35:0] shl_ln54_27_mid1_fu_2727_p3;
wire  signed [38:0] sext_ln54_19_fu_2723_p1;
wire  signed [38:0] sext_ln54_20_fu_2735_p1;
wire   [38:0] sub_ln54_16_fu_2739_p2;
wire   [38:0] sub_ln54_12_fu_2648_p2;
wire   [1:0] select_ln1222_fu_2677_p3;
wire   [9:0] sub_ln1226_1_fu_2709_p2;
wire   [9:0] zext_ln1226_fu_2761_p1;
wire   [11:0] tmp_114_fu_2771_p4;
wire   [16:0] tmp2_fu_2780_p4;
wire  signed [38:0] sext_ln54_17_fu_2790_p1;
wire   [38:0] select_ln1222_2_fu_2745_p3;
wire  signed [63:0] sext_ln1226_fu_2806_p1;
wire   [63:0] mul_ln1226_fu_2813_p0;
wire   [65:0] mul_ln1226_fu_2813_p1;
wire   [128:0] mul_ln1226_fu_2813_p2;
wire   [59:0] tmp_134_fu_2819_p4;
wire   [58:0] tmp_125_fu_2834_p4;
wire   [62:0] shl_ln1226_2_fu_2852_p3;
wire   [63:0] zext_ln1226_1_fu_2860_p1;
wire   [63:0] shl_ln1226_1_fu_2844_p3;
wire   [63:0] sub_ln1226_fu_2864_p2;
wire   [66:0] shl_ln7_fu_2880_p3;
wire   [191:0] zext_ln1226_3_fu_2887_p1;
wire   [191:0] lshr_ln1226_fu_2891_p2;
wire   [37:0] shl_ln54_13_fu_2908_p3;
wire   [35:0] shl_ln54_14_fu_2920_p3;
wire  signed [38:0] sext_ln54_9_fu_2916_p1;
wire  signed [38:0] sext_ln54_10_fu_2928_p1;
wire   [0:0] icmp_ln1195_fu_2955_p2;
wire   [30:0] add_ln1199_fu_2943_p2;
wire   [7:0] trunc_ln1197_1_fu_2981_p1;
wire   [9:0] tmp_148_cast_fu_2985_p3;
wire   [9:0] trunc_ln1197_fu_2977_p1;
wire   [32:0] add_ln1193_fu_2949_p2;
wire   [37:0] shl_ln54_24_mid1_fu_2999_p3;
wire   [35:0] shl_ln54_25_mid1_fu_3011_p3;
wire  signed [38:0] sext_ln54_14_fu_3007_p1;
wire  signed [38:0] sext_ln54_15_fu_3019_p1;
wire   [38:0] sub_ln54_15_fu_3023_p2;
wire   [38:0] sub_ln54_11_fu_2932_p2;
wire   [1:0] select_ln1193_fu_2961_p3;
wire   [9:0] sub_ln1197_1_fu_2993_p2;
wire   [9:0] zext_ln1197_fu_3045_p1;
wire   [11:0] tmp_113_fu_3055_p4;
wire   [16:0] tmp1_fu_3064_p4;
wire  signed [38:0] sext_ln54_16_fu_3074_p1;
wire   [38:0] select_ln1193_2_fu_3029_p3;
wire  signed [63:0] sext_ln1197_fu_3090_p1;
wire   [63:0] mul_ln1197_fu_3097_p0;
wire   [65:0] mul_ln1197_fu_3097_p1;
wire   [128:0] mul_ln1197_fu_3097_p2;
wire   [59:0] tmp_133_fu_3103_p4;
wire   [58:0] tmp_124_fu_3118_p4;
wire   [62:0] shl_ln1197_2_fu_3136_p3;
wire   [63:0] zext_ln1197_1_fu_3144_p1;
wire   [63:0] shl_ln1197_1_fu_3128_p3;
wire   [63:0] sub_ln1197_fu_3148_p2;
wire   [66:0] shl_ln6_fu_3164_p3;
wire   [191:0] zext_ln1197_3_fu_3171_p1;
wire   [191:0] lshr_ln1197_fu_3175_p2;
wire  signed [32:0] sext_ln1181_3_fu_3195_p1;
wire  signed [32:0] add_ln1181_fu_3199_p2;
wire  signed [33:0] sext_ln1181_4_fu_3205_p1;
wire  signed [33:0] sext_ln1181_2_fu_3192_p1;
wire  signed [32:0] sext_ln1181_1_fu_3189_p1;
wire   [0:0] icmp_ln1181_1_fu_3215_p2;
wire   [15:0] shl_ln54_4_fu_3229_p3;
wire   [13:0] shl_ln54_5_fu_3240_p3;
wire   [16:0] zext_ln54_5_fu_3236_p1;
wire   [16:0] zext_ln54_6_fu_3247_p1;
wire   [33:0] select_ln1181_fu_3221_p3;
wire  signed [63:0] sext_ln1181_5_fu_3257_p1;
wire   [63:0] mul_ln1181_fu_3265_p0;
wire   [2:0] mul_ln1181_fu_3265_p1;
wire   [63:0] shl_ln54_fu_3277_p2;
wire   [63:0] shl_ln54_12_fu_3283_p2;
wire   [0:0] icmp_ln1183_fu_3312_p2;
wire   [63:0] add_ln1181_1_fu_3306_p2;
wire   [63:0] shl_ln54_19_fu_3326_p2;
wire   [63:0] shl_ln54_20_fu_3332_p2;
wire   [63:0] sub_ln54_14_fu_3338_p2;
wire   [63:0] sub_ln54_10_fu_3289_p2;
wire   [63:0] add_ln1187_fu_3300_p2;
wire   [7:0] trunc_ln1185_1_fu_3364_p1;
wire   [9:0] p_shl_cast_fu_3368_p3;
wire   [9:0] trunc_ln1185_fu_3360_p1;
wire   [1:0] select_ln1170_fu_3318_p3;
wire   [9:0] sub_ln1185_1_fu_3376_p2;
wire   [9:0] zext_ln1185_fu_3390_p1;
wire   [11:0] tmp_112_fu_3400_p4;
wire   [16:0] tmp_fu_3409_p4;
wire  signed [63:0] sext_ln54_13_fu_3419_p1;
wire   [63:0] select_ln1170_1_fu_3344_p3;
wire   [63:0] mul_ln1185_fu_3438_p0;
wire   [65:0] mul_ln1185_fu_3438_p1;
wire   [128:0] mul_ln1185_fu_3438_p2;
wire   [59:0] tmp_132_fu_3444_p4;
wire   [58:0] tmp_122_fu_3459_p4;
wire   [62:0] shl_ln1185_2_fu_3477_p3;
wire   [63:0] zext_ln1185_1_fu_3485_p1;
wire   [63:0] shl_ln1185_1_fu_3469_p3;
wire   [63:0] sub_ln1185_fu_3489_p2;
wire   [66:0] shl_ln5_fu_3504_p3;
wire   [191:0] zext_ln1185_2_fu_3511_p1;
wire   [191:0] lshr_ln1185_fu_3515_p2;
wire   [31:0] i_10_cast_fu_3532_p1;
wire   [9:0] tmp_128_fu_3546_p3;
wire   [9:0] zext_ln17_fu_3542_p1;
wire   [9:0] add_ln17_fu_3574_p2;
wire   [9:0] add_ln17_1_fu_3590_p2;
wire   [7:0] add_ln20_fu_3635_p2;
wire    ap_CS_fsm_state54;
wire    ap_block_pp1_stage0_00001;
reg   [38:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
wire   [128:0] mul_ln1147_fu_1305_p00;
wire   [65:0] mul_ln1181_fu_3265_p00;
wire   [128:0] mul_ln1185_fu_3438_p00;
wire   [128:0] mul_ln1197_fu_3097_p00;
wire   [128:0] mul_ln1226_fu_2813_p00;
wire   [65:0] mul_ln1234_fu_2332_p00;
wire   [128:0] mul_ln1238_fu_2505_p00;
reg    ap_condition_1046;
reg    ap_condition_1052;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 39'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
end

makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine_radii #(
    .DataWidth( 25 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
radii_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(radii_address0),
    .ce0(radii_ce0),
    .q0(radii_q0)
);

makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine_trapezoid_edges #(
    .DataWidth( 26 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
trapezoid_edges_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(trapezoid_edges_address0),
    .ce0(trapezoid_edges_ce0),
    .q0(trapezoid_edges_q0)
);

makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine_row_list #(
    .DataWidth( 64 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
row_list_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(row_list_address0),
    .ce0(row_list_ce0),
    .we0(row_list_we0),
    .d0(row_list_d0),
    .q0(row_list_q0)
);

makePatches_ShadowQuilt_fromEdges_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_reg_3891),
    .din1(conv6_reg_3881),
    .ce(1'b1),
    .dout(grp_fu_1156_p2)
);

makePatches_ShadowQuilt_fromEdges_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv9_reg_3871),
    .din1(div_reg_3886),
    .ce(1'b1),
    .dout(grp_fu_1160_p2)
);

makePatches_ShadowQuilt_fromEdges_fdiv_32ns_32ns_32_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_6_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_reg_3876),
    .din1(32'd1268291200),
    .ce(1'b1),
    .dout(grp_fu_1164_p2)
);

makePatches_ShadowQuilt_fromEdges_sitofp_64ns_32_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
sitofp_64ns_32_2_no_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1169_p0),
    .ce(1'b1),
    .dout(grp_fu_1169_p1)
);

makePatches_ShadowQuilt_fromEdges_sitofp_64ns_32_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
sitofp_64ns_32_2_no_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1172_p0),
    .ce(1'b1),
    .dout(grp_fu_1172_p1)
);

makePatches_ShadowQuilt_fromEdges_sitofp_64ns_32_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
sitofp_64ns_32_2_no_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(apexZ0),
    .ce(1'b1),
    .dout(grp_fu_1175_p1)
);

makePatches_ShadowQuilt_fromEdges_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1178_p0),
    .din1(grp_fu_1178_p1),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1178_p2)
);

makePatches_ShadowQuilt_fromEdges_sitodp_64ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sitodp_64ns_64_2_no_dsp_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1182_p0),
    .ce(1'b1),
    .dout(grp_fu_1182_p1)
);

makePatches_ShadowQuilt_fromEdges_sitodp_64ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sitodp_64ns_64_2_no_dsp_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1186_p0),
    .ce(1'b1),
    .dout(grp_fu_1186_p1)
);

makePatches_ShadowQuilt_fromEdges_mul_64ns_66ns_129_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 129 ))
mul_64ns_66ns_129_1_1_U10(
    .din0(mul_ln1147_fu_1305_p0),
    .din1(mul_ln1147_fu_1305_p1),
    .dout(mul_ln1147_fu_1305_p2)
);

makePatches_ShadowQuilt_fromEdges_mul_64ns_3ns_66_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 66 ))
mul_64ns_3ns_66_1_1_U11(
    .din0(mul_ln1234_fu_2332_p0),
    .din1(mul_ln1234_fu_2332_p1),
    .dout(mul_ln1234_fu_2332_p2)
);

makePatches_ShadowQuilt_fromEdges_mul_64ns_66ns_129_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 129 ))
mul_64ns_66ns_129_1_1_U12(
    .din0(mul_ln1238_fu_2505_p0),
    .din1(mul_ln1238_fu_2505_p1),
    .dout(mul_ln1238_fu_2505_p2)
);

makePatches_ShadowQuilt_fromEdges_mul_64ns_66ns_129_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 129 ))
mul_64ns_66ns_129_1_1_U13(
    .din0(mul_ln1226_fu_2813_p0),
    .din1(mul_ln1226_fu_2813_p1),
    .dout(mul_ln1226_fu_2813_p2)
);

makePatches_ShadowQuilt_fromEdges_mul_64ns_66ns_129_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 129 ))
mul_64ns_66ns_129_1_1_U14(
    .din0(mul_ln1197_fu_3097_p0),
    .din1(mul_ln1197_fu_3097_p1),
    .dout(mul_ln1197_fu_3097_p2)
);

makePatches_ShadowQuilt_fromEdges_mul_64ns_3ns_66_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 66 ))
mul_64ns_3ns_66_1_1_U15(
    .din0(mul_ln1181_fu_3265_p0),
    .din1(mul_ln1181_fu_3265_p1),
    .dout(mul_ln1181_fu_3265_p2)
);

makePatches_ShadowQuilt_fromEdges_mul_64ns_66ns_129_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 129 ))
mul_64ns_66ns_129_1_1_U16(
    .din0(mul_ln1185_fu_3438_p0),
    .din1(mul_ln1185_fu_3438_p1),
    .dout(mul_ln1185_fu_3438_p2)
);

makePatches_ShadowQuilt_fromEdges_mux_53_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 64 ))
mux_53_64_1_1_U17(
    .din0(init_patch_q0),
    .din1(init_patch1_q0),
    .din2(init_patch2_q0),
    .din3(init_patch3_q0),
    .din4(init_patch4_q0),
    .din5(trunc_ln5_reg_4191),
    .dout(tmp_116_fu_3605_p7)
);

makePatches_ShadowQuilt_fromEdges_mux_53_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 64 ))
mux_53_64_1_1_U18(
    .din0(init_patch_q1),
    .din1(init_patch1_q1),
    .din2(init_patch2_q1),
    .din3(init_patch3_q1),
    .din4(init_patch4_q1),
    .din5(trunc_ln5_reg_4191),
    .dout(tmp_117_fu_3620_p7)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln1145_fu_1200_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((icmp_ln1145_fu_1200_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state20) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state19)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp1_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_subdone)) | ((1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2_subdone)))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state19)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state27) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state26)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state27)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state27);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end else if ((1'b1 == ap_CS_fsm_state26)) begin
            ap_enable_reg_pp2_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp3_exit_iter0_state33) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state32)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state33)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state33);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if ((1'b1 == ap_CS_fsm_state32)) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp4_exit_iter0_state37) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if (((grp_fu_1189_p2 == 1'd1) & (icmp_ln1220_fu_2063_p2 == 1'd1) & (leftRight_offset_read_read_fu_284_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp4_exit_iter0_state37)) begin
                ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state37);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end else if (((grp_fu_1189_p2 == 1'd1) & (icmp_ln1220_fu_2063_p2 == 1'd1) & (leftRight_offset_read_read_fu_284_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
            ap_enable_reg_pp4_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp5_exit_iter0_state41) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if (((icmp_ln1179_fu_2171_p2 == 1'd0) & (grp_fu_1189_p2 == 1'd1) & (leftRight_offset_read_read_fu_284_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter0_state41)) begin
                ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state41);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end else if (((icmp_ln1179_fu_2171_p2 == 1'd0) & (grp_fu_1189_p2 == 1'd1) & (leftRight_offset_read_read_fu_284_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
            ap_enable_reg_pp5_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp6_exit_iter0_state46) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state45)) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp6_exit_iter0_state46)) begin
                ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state46);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end else if ((1'b1 == ap_CS_fsm_state45)) begin
            ap_enable_reg_pp6_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        i_10_reg_1145 <= 8'd0;
    end else if (((icmp_ln13_reg_4355 == 1'd0) & (1'b1 == ap_CS_fsm_state53))) begin
        i_10_reg_1145 <= add_ln13_reg_4350;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1222_1_fu_2654_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        indvar_flatten15_reg_1019 <= add_ln1222_1_fu_2618_p2;
    end else if (((grp_fu_1189_p2 == 1'd1) & (icmp_ln1220_fu_2063_p2 == 1'd1) & (leftRight_offset_read_read_fu_284_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        indvar_flatten15_reg_1019 <= 33'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1234_2_fu_2362_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        indvar_flatten23_reg_950 <= add_ln1234_3_fu_2338_p2;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        indvar_flatten23_reg_950 <= 66'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1193_1_fu_2938_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        indvar_flatten7_reg_1061 <= add_ln1193_1_fu_2902_p2;
    end else if (((icmp_ln1179_fu_2171_p2 == 1'd0) & (grp_fu_1189_p2 == 1'd1) & (leftRight_offset_read_read_fu_284_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        indvar_flatten7_reg_1061 <= 33'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1181_2_fu_3295_p2 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        indvar_flatten_reg_1103 <= add_ln1181_2_fu_3271_p2;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        indvar_flatten_reg_1103 <= 66'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1275_reg_3911 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        j_1_reg_866 <= add_ln1275_reg_3906;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        j_1_reg_866 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln1254_reg_3993 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        j_2_reg_914 <= add_ln1254_reg_3988;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        j_2_reg_914 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1181_2_fu_3295_p2 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        j_5_reg_1125 <= select_ln1181_2_fu_3382_p3;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        j_5_reg_1125 <= sext_ln1181_fu_3186_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1193_1_fu_2938_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        j_6_reg_1083 <= select_ln1193_3_fu_3037_p3;
    end else if (((icmp_ln1179_fu_2171_p2 == 1'd0) & (grp_fu_1189_p2 == 1'd1) & (leftRight_offset_read_read_fu_284_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        j_6_reg_1083 <= sext_ln1193_fu_2177_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1222_1_fu_2654_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        j_7_reg_1041 <= select_ln1222_3_fu_2753_p3;
    end else if (((grp_fu_1189_p2 == 1'd1) & (icmp_ln1220_fu_2063_p2 == 1'd1) & (leftRight_offset_read_read_fu_284_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        j_7_reg_1041 <= sext_ln1222_fu_2075_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1234_2_fu_2362_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        j_8_reg_972 <= select_ln1234_2_fu_2449_p3;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        j_8_reg_972 <= sext_ln1234_fu_2251_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln1254_reg_3993_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        j_9_reg_890 <= select_ln1256_fu_1879_p3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        j_9_reg_890 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln1254_reg_3993_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        lbVal_reg_938 <= lbVal_2_fu_1887_p3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        lbVal_reg_938 <= 64'd9223372036854775807;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1275_reg_3911_pp1_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        p_x_assign_7_reg_878 <= select_ln1277_2_fu_1700_p3;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        p_x_assign_7_reg_878 <= 64'd9223372036854775807;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln1254_reg_3993_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        rbVal_reg_926 <= p_Result_11_fu_2006_p3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        rbVal_reg_926 <= 64'd9223372036854775807;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln1254_reg_3993_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        right_bound_reg_902 <= select_ln1262_fu_1998_p3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        right_bound_reg_902 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1145_reg_3823 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        row_list_size_assign_reg_830 <= GDn_points_load_reg_3818;
    end else if (((icmp_ln1145_fu_1200_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        row_list_size_assign_reg_830 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1145_fu_1200_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        row_list_size_reg_818 <= 31'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1145_1_reg_3842 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        row_list_size_reg_818 <= add_ln1147_1_reg_3837;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1275_reg_3911_pp1_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        start_index_reg_842 <= select_ln1277_fu_1685_p3;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        start_index_reg_842 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1275_reg_3911_pp1_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        start_value_reg_854 <= select_ln1277_1_fu_1693_p3;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        start_value_reg_854 <= 64'd9223372036854775807;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln1193_1_reg_4246 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        temp_size_1_reg_1072 <= select_ln1193_1_reg_4250;
    end else if (((icmp_ln1179_fu_2171_p2 == 1'd0) & (grp_fu_1189_p2 == 1'd1) & (leftRight_offset_read_read_fu_284_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        temp_size_1_reg_1072 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln1222_1_reg_4202 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        temp_size_2_reg_1030 <= select_ln1222_1_reg_4206;
    end else if (((grp_fu_1189_p2 == 1'd1) & (icmp_ln1220_fu_2063_p2 == 1'd1) & (leftRight_offset_read_read_fu_284_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        temp_size_2_reg_1030 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln1234_2_reg_4146 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        temp_size_3_reg_961 <= select_ln1234_1_reg_4150;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        temp_size_3_reg_961 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state40))) begin
        temp_size_4_reg_992 <= original_ppl;
    end else if ((((icmp_ln1179_fu_2171_p2 == 1'd0) & (grp_fu_1189_p2 == 1'd0) & (leftRight_offset_read_read_fu_284_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31)) | ((icmp_ln1234_fu_2069_p2 == 1'd1) & (icmp_ln1220_fu_2063_p2 == 1'd0) & (leftRight_offset_read_read_fu_284_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31)) | ((grp_fu_1189_p2 == 1'd0) & (icmp_ln1220_fu_2063_p2 == 1'd1) & (leftRight_offset_read_read_fu_284_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31)) | ((icmp_ln1181_fu_2235_p2 == 1'd1) & (icmp_ln1179_fu_2171_p2 == 1'd1) & (leftRight_offset_read_read_fu_284_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31)))) begin
        temp_size_4_reg_992 <= 32'd0;
    end else if (((icmp_ln1234_reg_4064 == 1'd0) & (icmp_ln1220_reg_4060 == 1'd0) & (leftRight_offset_read_read_fu_284_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
        temp_size_4_reg_992 <= trunc_ln1245_1_fu_2593_p1;
    end else if (((icmp_ln1181_reg_4117 == 1'd0) & (icmp_ln1179_reg_4087 == 1'd1) & (leftRight_offset_read_read_fu_284_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
        temp_size_4_reg_992 <= trunc_ln1245_fu_2597_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b1) & (icmp_ln1181_2_reg_4310 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        temp_size_reg_1114 <= select_ln1181_1_reg_4314;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        temp_size_reg_1114 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1193_1_fu_2938_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        z_1_reg_1092 <= add_ln1195_fu_3084_p2;
    end else if (((icmp_ln1179_fu_2171_p2 == 1'd0) & (grp_fu_1189_p2 == 1'd1) & (leftRight_offset_read_read_fu_284_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        z_1_reg_1092 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1222_1_fu_2654_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        z_2_reg_1050 <= add_ln1224_fu_2800_p2;
    end else if (((grp_fu_1189_p2 == 1'd1) & (icmp_ln1220_fu_2063_p2 == 1'd1) & (leftRight_offset_read_read_fu_284_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        z_2_reg_1050 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1234_2_fu_2362_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        z_3_reg_981 <= add_ln1236_fu_2496_p2;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        z_3_reg_981 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1181_2_fu_3295_p2 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        z_reg_1134 <= add_ln1183_fu_3429_p2;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        z_reg_1134 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        GDn_points_load_reg_3818 <= GDn_points_q0;
        icmp_ln1145_reg_3823 <= icmp_ln1145_fu_1200_p2;
        y_reg_3813 <= radii_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln1147_1_reg_3837 <= add_ln1147_1_fu_1248_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1145_1_reg_3842 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln1147_reg_3856[63 : 3] <= add_ln1147_fu_1362_p2[63 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1181_2_fu_3295_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        add_ln1185_1_reg_4324 <= add_ln1185_1_fu_3394_p2;
        add_ln54_4_reg_4329[63 : 3] <= add_ln54_4_fu_3423_p2[63 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        add_ln1185_1_reg_4324_pp6_iter1_reg <= add_ln1185_1_reg_4324;
        icmp_ln1181_2_reg_4310 <= icmp_ln1181_2_fu_3295_p2;
        icmp_ln1181_2_reg_4310_pp6_iter1_reg <= icmp_ln1181_2_reg_4310;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1181_2_reg_4310 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        add_ln1185_reg_4345[63 : 3] <= add_ln1185_fu_3495_p2[63 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1193_1_fu_2938_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        add_ln1197_1_reg_4260 <= add_ln1197_1_fu_3049_p2;
        add_ln54_5_reg_4265[38 : 3] <= add_ln54_5_fu_3078_p2[38 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        add_ln1197_1_reg_4260_pp5_iter1_reg <= add_ln1197_1_reg_4260;
        icmp_ln1193_1_reg_4246 <= icmp_ln1193_1_fu_2938_p2;
        icmp_ln1193_1_reg_4246_pp5_iter1_reg <= icmp_ln1193_1_reg_4246;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1193_1_reg_4246 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        add_ln1197_reg_4280[63 : 3] <= add_ln1197_fu_3154_p2[63 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1222_1_fu_2654_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        add_ln1226_1_reg_4216 <= add_ln1226_1_fu_2765_p2;
        add_ln54_6_reg_4221[38 : 3] <= add_ln54_6_fu_2794_p2[38 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        add_ln1226_1_reg_4216_pp4_iter1_reg <= add_ln1226_1_reg_4216;
        icmp_ln1222_1_reg_4202 <= icmp_ln1222_1_fu_2654_p2;
        icmp_ln1222_1_reg_4202_pp4_iter1_reg <= icmp_ln1222_1_reg_4202;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1222_1_reg_4202 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        add_ln1226_reg_4236[63 : 3] <= add_ln1226_fu_2870_p2[63 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1234_2_fu_2362_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        add_ln1238_1_reg_4160 <= add_ln1238_1_fu_2461_p2;
        add_ln54_7_reg_4165[63 : 3] <= add_ln54_7_fu_2490_p2[63 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        add_ln1238_1_reg_4160_pp3_iter1_reg <= add_ln1238_1_reg_4160;
        icmp_ln1234_2_reg_4146 <= icmp_ln1234_2_fu_2362_p2;
        icmp_ln1234_2_reg_4146_pp3_iter1_reg <= icmp_ln1234_2_reg_4146;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1234_2_reg_4146 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        add_ln1238_reg_4181[63 : 3] <= add_ln1238_fu_2562_p2[63 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        add_ln1245_reg_4186 <= add_ln1245_fu_2601_p2;
        trunc_ln5_reg_4191 <= trunc_ln5_fu_2615_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        add_ln1254_reg_3988 <= add_ln1254_fu_1711_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        add_ln1275_reg_3906 <= add_ln1275_fu_1549_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        add_ln13_reg_4350 <= add_ln13_fu_3526_p2;
        icmp_ln13_reg_4355 <= icmp_ln13_fu_3536_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1145_1_fu_1254_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln54_reg_3846[37 : 3] <= add_ln54_fu_1293_p2[37 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        conv6_reg_3881 <= grp_fu_1175_p1;
        conv9_reg_3871 <= grp_fu_1169_p1;
        conv_reg_3876 <= grp_fu_1172_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1275_reg_3911 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2_11001))) begin
        dc_9_reg_3927 <= grp_fu_1182_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        dc_reg_3896 <= grp_fu_1156_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        div_reg_3886 <= grp_fu_1164_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln1145_1_reg_3842 <= icmp_ln1145_1_fu_1254_p2;
        icmp_ln1145_1_reg_3842_pp0_iter1_reg <= icmp_ln1145_1_reg_3842;
        row_list_size_reg_818_pp0_iter1_reg <= row_list_size_reg_818;
    end
end

always @ (posedge ap_clk) begin
    if (((leftRight_offset_read_read_fu_284_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        icmp_ln1179_reg_4087 <= icmp_ln1179_fu_2171_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1179_fu_2171_p2 == 1'd1) & (leftRight_offset_read_read_fu_284_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        icmp_ln1181_reg_4117 <= icmp_ln1181_fu_2235_p2;
        j_3_reg_4110 <= j_3_fu_2230_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((leftRight_offset_read_read_fu_284_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        icmp_ln1220_reg_4060 <= icmp_ln1220_fu_2063_p2;
        select_ln1205_reg_4054 <= select_ln1205_fu_2044_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1220_fu_2063_p2 == 1'd0) & (leftRight_offset_read_read_fu_284_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        icmp_ln1234_reg_4064 <= icmp_ln1234_fu_2069_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln1254_reg_3993 <= icmp_ln1254_fu_1717_p2;
        icmp_ln1254_reg_3993_pp2_iter1_reg <= icmp_ln1254_reg_3993;
        j_2_reg_914_pp2_iter1_reg <= j_2_reg_914;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        icmp_ln1254_reg_3993_pp2_iter2_reg <= icmp_ln1254_reg_3993_pp2_iter1_reg;
        j_2_reg_914_pp2_iter2_reg <= j_2_reg_914_pp2_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln1275_reg_3911 <= icmp_ln1275_fu_1555_p2;
        icmp_ln1275_reg_3911_pp1_iter1_reg <= icmp_ln1275_reg_3911;
        j_1_reg_866_pp1_iter1_reg <= j_1_reg_866;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1275_reg_3911 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln1277_1_reg_3947 <= icmp_ln1277_1_fu_1647_p2;
        icmp_ln1277_2_reg_3952 <= icmp_ln1277_2_fu_1653_p2;
        icmp_ln1277_3_reg_3957 <= icmp_ln1277_3_fu_1659_p2;
        icmp_ln1277_reg_3942 <= icmp_ln1277_fu_1641_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        icmp_ln22_reg_4483 <= icmp_ln22_fu_3649_p2;
        icmp_ln24_reg_4487 <= icmp_ln24_fu_3654_p2;
        temp_load_2_reg_4469 <= temp_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_fu_3536_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state50))) begin
        init_patch1_addr_3_reg_4389 <= zext_ln17_1_fu_3560_p1;
        init_patch1_addr_4_reg_4394 <= zext_ln17_2_fu_3580_p1;
        init_patch2_addr_3_reg_4399 <= zext_ln17_1_fu_3560_p1;
        init_patch2_addr_4_reg_4404 <= zext_ln17_2_fu_3580_p1;
        init_patch3_addr_3_reg_4409 <= zext_ln17_1_fu_3560_p1;
        init_patch3_addr_4_reg_4414 <= zext_ln17_2_fu_3580_p1;
        init_patch4_addr_3_reg_4419 <= zext_ln17_1_fu_3560_p1;
        init_patch4_addr_4_reg_4424 <= zext_ln17_2_fu_3580_p1;
        init_patch_addr_3_reg_4379 <= zext_ln17_1_fu_3560_p1;
        init_patch_addr_4_reg_4384 <= zext_ln17_2_fu_3580_p1;
        sub_ln17_reg_4359 <= sub_ln17_fu_3554_p2;
        trunc_ln17_reg_4364 <= trunc_ln17_fu_3570_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        init_patch1_addr_5_reg_4439 <= zext_ln17_3_fu_3595_p1;
        init_patch2_addr_5_reg_4444 <= zext_ln17_3_fu_3595_p1;
        init_patch3_addr_5_reg_4449 <= zext_ln17_3_fu_3595_p1;
        init_patch4_addr_5_reg_4454 <= zext_ln17_3_fu_3595_p1;
        init_patch_addr_5_reg_4434 <= zext_ln17_3_fu_3595_p1;
        tmp_116_reg_4459 <= tmp_116_fu_3605_p7;
        tmp_117_reg_4464 <= tmp_117_fu_3620_p7;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        mul_ln1181_reg_4300 <= mul_ln1181_fu_3265_p2;
        sub_ln1181_reg_4290 <= sub_ln1181_fu_3209_p2;
        sub_ln54_6_reg_4295[16 : 11] <= sub_ln54_6_fu_3251_p2[16 : 11];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        mul_ln1234_reg_4136 <= mul_ln1234_fu_2332_p2;
        sub_ln1234_reg_4126 <= sub_ln1234_fu_2276_p2;
        sub_ln54_9_reg_4131[16 : 11] <= sub_ln54_9_fu_2318_p2[16 : 11];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        mul_reg_3891 <= grp_fu_1160_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        result_V_reg_3901 <= result_V_fu_1541_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1181_2_fu_3295_p2 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        select_ln1181_1_reg_4314 <= select_ln1181_1_fu_3352_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1193_1_fu_2938_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        select_ln1193_1_reg_4250 <= select_ln1193_1_fu_2969_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1222_1_fu_2654_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        select_ln1222_1_reg_4206 <= select_ln1222_1_fu_2685_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1234_2_fu_2362_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        select_ln1234_1_reg_4150 <= select_ln1234_1_fu_2419_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1145_fu_1200_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        sext_ln1145_reg_3832[37 : 11] <= sext_ln1145_fu_1244_p1[37 : 11];
        trunc_ln54_reg_3827 <= trunc_ln54_fu_1206_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1179_fu_2171_p2 == 1'd0) & (grp_fu_1189_p2 == 1'd1) & (leftRight_offset_read_read_fu_284_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        sub_ln1193_reg_4105 <= sub_ln1193_fu_2224_p2;
        sub_ln54_7_reg_4100[16 : 11] <= sub_ln54_7_fu_2206_p2[16 : 11];
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_1189_p2 == 1'd1) & (icmp_ln1220_fu_2063_p2 == 1'd1) & (leftRight_offset_read_read_fu_284_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        sub_ln1222_reg_4082 <= sub_ln1222_fu_2122_p2;
        sub_ln54_8_reg_4077[16 : 11] <= sub_ln54_8_fu_2104_p2[16 : 11];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1275_reg_3911 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        sub_ln1277_reg_3920 <= sub_ln1277_fu_1566_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1254_reg_3993_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        tmp_138_reg_4012 <= {{data_V_12_fu_1740_p1[62:52]}};
        tmp_139_reg_4018 <= tmp_139_fu_1754_p1;
        tmp_140_reg_4023 <= {{data_V_13_fu_1758_p1[62:52]}};
        tmp_141_reg_4029 <= tmp_141_fu_1772_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        zext_ln1141_reg_3683[2 : 0] <= zext_ln1141_fu_1194_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        zext_ln1254_reg_3982[25 : 0] <= zext_ln1254_fu_1707_p1[25 : 0];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0))) begin
        GDarray_address0 = zext_ln1185_5_fu_3454_p1;
    end else if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        GDarray_address0 = zext_ln1197_5_fu_3113_p1;
    end else if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        GDarray_address0 = zext_ln1226_5_fu_2829_p1;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        GDarray_address0 = zext_ln1238_5_fu_2521_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        GDarray_address0 = zext_ln1147_3_fu_1321_p1;
    end else begin
        GDarray_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001)) | ((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)) | ((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        GDarray_ce0 = 1'b1;
    end else begin
        GDarray_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        GDn_points_ce0 = 1'b1;
    end else begin
        GDn_points_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1145_1_fu_1254_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1275_fu_1555_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state20 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state20 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1254_fu_1717_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state27 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state27 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1234_2_fu_2362_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state33 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state33 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1222_1_fu_2654_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state37 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state37 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1193_1_fu_2938_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state41 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state41 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1181_2_fu_3295_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state46 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state46 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter2 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1275_reg_3911 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_j_1_phi_fu_870_p4 = add_ln1275_reg_3906;
    end else begin
        ap_phi_mux_j_1_phi_fu_870_p4 = j_1_reg_866;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln1254_reg_3993 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_j_2_phi_fu_918_p4 = add_ln1254_reg_3988;
    end else begin
        ap_phi_mux_j_2_phi_fu_918_p4 = j_2_reg_914;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1145_1_reg_3842 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_row_list_size_phi_fu_822_p4 = add_ln1147_1_reg_3837;
    end else begin
        ap_phi_mux_row_list_size_phi_fu_822_p4 = row_list_size_reg_818;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln1193_1_reg_4246 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        ap_phi_mux_temp_size_1_phi_fu_1076_p4 = select_ln1193_1_reg_4250;
    end else begin
        ap_phi_mux_temp_size_1_phi_fu_1076_p4 = temp_size_1_reg_1072;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln1222_1_reg_4202 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        ap_phi_mux_temp_size_2_phi_fu_1034_p4 = select_ln1222_1_reg_4206;
    end else begin
        ap_phi_mux_temp_size_2_phi_fu_1034_p4 = temp_size_2_reg_1030;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln1234_2_reg_4146 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_temp_size_3_phi_fu_965_p4 = select_ln1234_1_reg_4150;
    end else begin
        ap_phi_mux_temp_size_3_phi_fu_965_p4 = temp_size_3_reg_961;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        if ((1'b1 == ap_condition_1052)) begin
            ap_phi_mux_temp_size_4_phi_fu_996_p16 = trunc_ln1245_1_fu_2593_p1;
        end else if ((1'b1 == ap_condition_1046)) begin
            ap_phi_mux_temp_size_4_phi_fu_996_p16 = trunc_ln1245_fu_2597_p1;
        end else begin
            ap_phi_mux_temp_size_4_phi_fu_996_p16 = temp_size_4_reg_992;
        end
    end else begin
        ap_phi_mux_temp_size_4_phi_fu_996_p16 = temp_size_4_reg_992;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b1) & (icmp_ln1181_2_reg_4310 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0))) begin
        ap_phi_mux_temp_size_phi_fu_1118_p4 = select_ln1181_1_reg_4314;
    end else begin
        ap_phi_mux_temp_size_phi_fu_1118_p4 = temp_size_reg_1114;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_fu_1182_p0 = add_ln1256_fu_1728_p2;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2))) begin
        grp_fu_1182_p0 = p_x_assign_7_reg_878;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
        grp_fu_1182_p0 = sub_ln1277_fu_1566_p2;
    end else begin
        grp_fu_1182_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        init_patch1_address0 = init_patch1_addr_5_reg_4439;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        init_patch1_address0 = init_patch1_addr_3_reg_4389;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        init_patch1_address0 = 64'd102;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state53))) begin
        init_patch1_address0 = 64'd99;
    end else begin
        init_patch1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        init_patch1_address1 = zext_ln20_fu_3640_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        init_patch1_address1 = init_patch1_addr_4_reg_4394;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state53))) begin
        init_patch1_address1 = 64'd102;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        init_patch1_address1 = 64'd96;
    end else begin
        init_patch1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state53))) begin
        init_patch1_ce0 = 1'b1;
    end else begin
        init_patch1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state53))) begin
        init_patch1_ce1 = 1'b1;
    end else begin
        init_patch1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        init_patch1_d0 = temp_load_2_reg_4469;
    end else if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51))) begin
        init_patch1_d0 = temp_q1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        init_patch1_d0 = 64'd9223372036854775808;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        init_patch1_d0 = 64'd9223372036854775807;
    end else begin
        init_patch1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        init_patch1_d1 = temp_load_2_reg_4469;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        init_patch1_d1 = temp_q1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        init_patch1_d1 = temp_q0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        init_patch1_d1 = sext_ln5_fu_2606_p1;
    end else begin
        init_patch1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln5_reg_4191 == 3'd1) & (1'b1 == ap_CS_fsm_state52)) | ((trunc_ln5_reg_4191 == 3'd1) & (1'b1 == ap_CS_fsm_state51)) | ((trunc_ln5_reg_4191 == 3'd1) & (1'b1 == ap_CS_fsm_state49)) | ((trunc_ln5_fu_2615_p1 == 3'd1) & (1'b1 == ap_CS_fsm_state36)) | ((icmp_ln22_reg_4483 == 1'd1) & (icmp_ln13_reg_4355 == 1'd0) & (trunc_ln5_reg_4191 == 3'd1) & (1'b1 == ap_CS_fsm_state53)))) begin
        init_patch1_we0 = 1'b1;
    end else begin
        init_patch1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((trunc_ln5_reg_4191 == 3'd1) & (1'b1 == ap_CS_fsm_state52)) | ((trunc_ln5_reg_4191 == 3'd1) & (1'b1 == ap_CS_fsm_state51)) | ((trunc_ln5_fu_2615_p1 == 3'd1) & (1'b1 == ap_CS_fsm_state36)) | ((icmp_ln24_reg_4487 == 1'd1) & (icmp_ln13_reg_4355 == 1'd0) & (trunc_ln5_reg_4191 == 3'd1) & (1'b1 == ap_CS_fsm_state53)))) begin
        init_patch1_we1 = 1'b1;
    end else begin
        init_patch1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        init_patch2_address0 = init_patch2_addr_5_reg_4444;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        init_patch2_address0 = init_patch2_addr_3_reg_4399;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        init_patch2_address0 = 64'd102;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state53))) begin
        init_patch2_address0 = 64'd99;
    end else begin
        init_patch2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        init_patch2_address1 = zext_ln20_fu_3640_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        init_patch2_address1 = init_patch2_addr_4_reg_4404;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state53))) begin
        init_patch2_address1 = 64'd102;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        init_patch2_address1 = 64'd96;
    end else begin
        init_patch2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state53))) begin
        init_patch2_ce0 = 1'b1;
    end else begin
        init_patch2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state53))) begin
        init_patch2_ce1 = 1'b1;
    end else begin
        init_patch2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        init_patch2_d0 = temp_load_2_reg_4469;
    end else if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51))) begin
        init_patch2_d0 = temp_q1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        init_patch2_d0 = 64'd9223372036854775808;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        init_patch2_d0 = 64'd9223372036854775807;
    end else begin
        init_patch2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        init_patch2_d1 = temp_load_2_reg_4469;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        init_patch2_d1 = temp_q1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        init_patch2_d1 = temp_q0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        init_patch2_d1 = sext_ln5_fu_2606_p1;
    end else begin
        init_patch2_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln5_reg_4191 == 3'd2) & (1'b1 == ap_CS_fsm_state52)) | ((trunc_ln5_reg_4191 == 3'd2) & (1'b1 == ap_CS_fsm_state51)) | ((trunc_ln5_reg_4191 == 3'd2) & (1'b1 == ap_CS_fsm_state49)) | ((trunc_ln5_fu_2615_p1 == 3'd2) & (1'b1 == ap_CS_fsm_state36)) | ((icmp_ln22_reg_4483 == 1'd1) & (icmp_ln13_reg_4355 == 1'd0) & (trunc_ln5_reg_4191 == 3'd2) & (1'b1 == ap_CS_fsm_state53)))) begin
        init_patch2_we0 = 1'b1;
    end else begin
        init_patch2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((trunc_ln5_reg_4191 == 3'd2) & (1'b1 == ap_CS_fsm_state52)) | ((trunc_ln5_reg_4191 == 3'd2) & (1'b1 == ap_CS_fsm_state51)) | ((trunc_ln5_fu_2615_p1 == 3'd2) & (1'b1 == ap_CS_fsm_state36)) | ((icmp_ln24_reg_4487 == 1'd1) & (icmp_ln13_reg_4355 == 1'd0) & (trunc_ln5_reg_4191 == 3'd2) & (1'b1 == ap_CS_fsm_state53)))) begin
        init_patch2_we1 = 1'b1;
    end else begin
        init_patch2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        init_patch3_address0 = init_patch3_addr_5_reg_4449;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        init_patch3_address0 = init_patch3_addr_3_reg_4409;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        init_patch3_address0 = 64'd102;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state53))) begin
        init_patch3_address0 = 64'd99;
    end else begin
        init_patch3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        init_patch3_address1 = zext_ln20_fu_3640_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        init_patch3_address1 = init_patch3_addr_4_reg_4414;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state53))) begin
        init_patch3_address1 = 64'd102;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        init_patch3_address1 = 64'd96;
    end else begin
        init_patch3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state53))) begin
        init_patch3_ce0 = 1'b1;
    end else begin
        init_patch3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state53))) begin
        init_patch3_ce1 = 1'b1;
    end else begin
        init_patch3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        init_patch3_d0 = temp_load_2_reg_4469;
    end else if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51))) begin
        init_patch3_d0 = temp_q1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        init_patch3_d0 = 64'd9223372036854775808;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        init_patch3_d0 = 64'd9223372036854775807;
    end else begin
        init_patch3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        init_patch3_d1 = temp_load_2_reg_4469;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        init_patch3_d1 = temp_q1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        init_patch3_d1 = temp_q0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        init_patch3_d1 = sext_ln5_fu_2606_p1;
    end else begin
        init_patch3_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln22_reg_4483 == 1'd1) & (icmp_ln13_reg_4355 == 1'd0) & (trunc_ln5_reg_4191 == 3'd3) & (1'b1 == ap_CS_fsm_state53)) | ((trunc_ln5_reg_4191 == 3'd3) & (1'b1 == ap_CS_fsm_state52)) | ((trunc_ln5_reg_4191 == 3'd3) & (1'b1 == ap_CS_fsm_state51)) | ((trunc_ln5_reg_4191 == 3'd3) & (1'b1 == ap_CS_fsm_state49)) | ((trunc_ln5_fu_2615_p1 == 3'd3) & (1'b1 == ap_CS_fsm_state36)))) begin
        init_patch3_we0 = 1'b1;
    end else begin
        init_patch3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln24_reg_4487 == 1'd1) & (icmp_ln13_reg_4355 == 1'd0) & (trunc_ln5_reg_4191 == 3'd3) & (1'b1 == ap_CS_fsm_state53)) | ((trunc_ln5_reg_4191 == 3'd3) & (1'b1 == ap_CS_fsm_state52)) | ((trunc_ln5_reg_4191 == 3'd3) & (1'b1 == ap_CS_fsm_state51)) | ((trunc_ln5_fu_2615_p1 == 3'd3) & (1'b1 == ap_CS_fsm_state36)))) begin
        init_patch3_we1 = 1'b1;
    end else begin
        init_patch3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        init_patch4_address0 = init_patch4_addr_5_reg_4454;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        init_patch4_address0 = init_patch4_addr_3_reg_4419;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        init_patch4_address0 = 64'd102;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state53))) begin
        init_patch4_address0 = 64'd99;
    end else begin
        init_patch4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        init_patch4_address1 = zext_ln20_fu_3640_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        init_patch4_address1 = init_patch4_addr_4_reg_4424;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state53))) begin
        init_patch4_address1 = 64'd102;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        init_patch4_address1 = 64'd96;
    end else begin
        init_patch4_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state53))) begin
        init_patch4_ce0 = 1'b1;
    end else begin
        init_patch4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state53))) begin
        init_patch4_ce1 = 1'b1;
    end else begin
        init_patch4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        init_patch4_d0 = temp_load_2_reg_4469;
    end else if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51))) begin
        init_patch4_d0 = temp_q1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        init_patch4_d0 = 64'd9223372036854775808;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        init_patch4_d0 = 64'd9223372036854775807;
    end else begin
        init_patch4_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        init_patch4_d1 = temp_load_2_reg_4469;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        init_patch4_d1 = temp_q1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        init_patch4_d1 = temp_q0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        init_patch4_d1 = sext_ln5_fu_2606_p1;
    end else begin
        init_patch4_d1 = 'bx;
    end
end

always @ (*) begin
    if (((~(trunc_ln5_reg_4191 == 3'd0) & ~(trunc_ln5_reg_4191 == 3'd1) & ~(trunc_ln5_reg_4191 == 3'd2) & ~(trunc_ln5_reg_4191 == 3'd3) & (1'b1 == ap_CS_fsm_state52)) | (~(trunc_ln5_reg_4191 == 3'd0) & ~(trunc_ln5_reg_4191 == 3'd1) & ~(trunc_ln5_reg_4191 == 3'd2) & ~(trunc_ln5_reg_4191 == 3'd3) & (1'b1 == ap_CS_fsm_state51)) | (~(trunc_ln5_reg_4191 == 3'd0) & ~(trunc_ln5_reg_4191 == 3'd1) & ~(trunc_ln5_reg_4191 == 3'd2) & ~(trunc_ln5_reg_4191 == 3'd3) & (icmp_ln22_reg_4483 == 1'd1) & (icmp_ln13_reg_4355 == 1'd0) & (1'b1 == ap_CS_fsm_state53)) | (~(trunc_ln5_reg_4191 == 3'd0) & ~(trunc_ln5_reg_4191 == 3'd1) & ~(trunc_ln5_reg_4191 == 3'd2) & ~(trunc_ln5_reg_4191 == 3'd3) & (1'b1 == ap_CS_fsm_state49)) | (~(trunc_ln5_fu_2615_p1 == 3'd0) & ~(trunc_ln5_fu_2615_p1 == 3'd1) & ~(trunc_ln5_fu_2615_p1 == 3'd2) & ~(trunc_ln5_fu_2615_p1 == 3'd3) & (1'b1 == ap_CS_fsm_state36)))) begin
        init_patch4_we0 = 1'b1;
    end else begin
        init_patch4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(trunc_ln5_reg_4191 == 3'd0) & ~(trunc_ln5_reg_4191 == 3'd1) & ~(trunc_ln5_reg_4191 == 3'd2) & ~(trunc_ln5_reg_4191 == 3'd3) & (1'b1 == ap_CS_fsm_state52)) | (~(trunc_ln5_reg_4191 == 3'd0) & ~(trunc_ln5_reg_4191 == 3'd1) & ~(trunc_ln5_reg_4191 == 3'd2) & ~(trunc_ln5_reg_4191 == 3'd3) & (1'b1 == ap_CS_fsm_state51)) | (~(trunc_ln5_reg_4191 == 3'd0) & ~(trunc_ln5_reg_4191 == 3'd1) & ~(trunc_ln5_reg_4191 == 3'd2) & ~(trunc_ln5_reg_4191 == 3'd3) & (icmp_ln24_reg_4487 == 1'd1) & (icmp_ln13_reg_4355 == 1'd0) & (1'b1 == ap_CS_fsm_state53)) | (~(trunc_ln5_fu_2615_p1 == 3'd0) & ~(trunc_ln5_fu_2615_p1 == 3'd1) & ~(trunc_ln5_fu_2615_p1 == 3'd2) & ~(trunc_ln5_fu_2615_p1 == 3'd3) & (1'b1 == ap_CS_fsm_state36)))) begin
        init_patch4_we1 = 1'b1;
    end else begin
        init_patch4_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        init_patch_address0 = init_patch_addr_5_reg_4434;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        init_patch_address0 = init_patch_addr_3_reg_4379;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        init_patch_address0 = 64'd102;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state53))) begin
        init_patch_address0 = 64'd99;
    end else begin
        init_patch_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        init_patch_address1 = zext_ln20_fu_3640_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        init_patch_address1 = init_patch_addr_4_reg_4384;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state53))) begin
        init_patch_address1 = 64'd102;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        init_patch_address1 = 64'd96;
    end else begin
        init_patch_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state53))) begin
        init_patch_ce0 = 1'b1;
    end else begin
        init_patch_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state53))) begin
        init_patch_ce1 = 1'b1;
    end else begin
        init_patch_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        init_patch_d0 = temp_load_2_reg_4469;
    end else if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51))) begin
        init_patch_d0 = temp_q1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        init_patch_d0 = 64'd9223372036854775808;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        init_patch_d0 = 64'd9223372036854775807;
    end else begin
        init_patch_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        init_patch_d1 = temp_load_2_reg_4469;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        init_patch_d1 = temp_q1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        init_patch_d1 = temp_q0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        init_patch_d1 = sext_ln5_fu_2606_p1;
    end else begin
        init_patch_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln5_reg_4191 == 3'd0) & (1'b1 == ap_CS_fsm_state52)) | ((trunc_ln5_reg_4191 == 3'd0) & (1'b1 == ap_CS_fsm_state51)) | ((trunc_ln5_reg_4191 == 3'd0) & (1'b1 == ap_CS_fsm_state49)) | ((trunc_ln5_fu_2615_p1 == 3'd0) & (1'b1 == ap_CS_fsm_state36)) | ((icmp_ln22_reg_4483 == 1'd1) & (icmp_ln13_reg_4355 == 1'd0) & (trunc_ln5_reg_4191 == 3'd0) & (1'b1 == ap_CS_fsm_state53)))) begin
        init_patch_we0 = 1'b1;
    end else begin
        init_patch_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((trunc_ln5_reg_4191 == 3'd0) & (1'b1 == ap_CS_fsm_state52)) | ((trunc_ln5_reg_4191 == 3'd0) & (1'b1 == ap_CS_fsm_state51)) | ((trunc_ln5_fu_2615_p1 == 3'd0) & (1'b1 == ap_CS_fsm_state36)) | ((icmp_ln24_reg_4487 == 1'd1) & (icmp_ln13_reg_4355 == 1'd0) & (trunc_ln5_reg_4191 == 3'd0) & (1'b1 == ap_CS_fsm_state53)))) begin
        init_patch_we1 = 1'b1;
    end else begin
        init_patch_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        radii_ce0 = 1'b1;
    end else begin
        radii_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        row_list_address0 = trunc_ln1258_cast_fu_1723_p1;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        row_list_address0 = trunc_ln1279_cast_fu_1561_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        row_list_address0 = row_list_size_cast9_fu_1368_p1;
    end else begin
        row_list_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        row_list_ce0 = 1'b1;
    end else begin
        row_list_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1145_1_reg_3842_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        row_list_we0 = 1'b1;
    end else begin
        row_list_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        temp_address0 = zext_ln17_2_fu_3580_p1;
    end else if (((ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        temp_address0 = zext_ln1185_3_fu_3500_p1;
    end else if (((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        temp_address0 = zext_ln1197_2_fu_3160_p1;
    end else if (((ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        temp_address0 = zext_ln1226_2_fu_2876_p1;
    end else if (((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        temp_address0 = zext_ln1238_3_fu_2567_p1;
    end else begin
        temp_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        temp_address1 = zext_ln17_3_fu_3595_p1;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        temp_address1 = zext_ln17_1_fu_3560_p1;
    end else begin
        temp_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) | ((ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)) | ((ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        temp_ce0 = 1'b1;
    end else begin
        temp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50))) begin
        temp_ce1 = 1'b1;
    end else begin
        temp_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        temp_d0 = trunc_ln1185_2_fu_3521_p1;
    end else if (((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        temp_d0 = trunc_ln1197_2_fu_3181_p1;
    end else if (((ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        temp_d0 = trunc_ln1226_2_fu_2897_p1;
    end else if (((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        temp_d0 = trunc_ln1238_2_fu_2588_p1;
    end else begin
        temp_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter2 == 1'b1) & (icmp_ln1181_2_reg_4310_pp6_iter1_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001)) | ((ap_enable_reg_pp5_iter2 == 1'b1) & (icmp_ln1193_1_reg_4246_pp5_iter1_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001)) | ((ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln1222_1_reg_4202_pp4_iter1_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001)) | ((ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln1234_2_reg_4146_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        temp_we0 = 1'b1;
    end else begin
        temp_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        trapezoid_edges_ce0 = 1'b1;
    end else begin
        trapezoid_edges_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln1145_fu_1200_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln1145_1_fu_1254_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln1145_1_fu_1254_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln1275_fu_1555_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln1275_fu_1555_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_subdone)) & (1'b0 == ap_block_pp1_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((1'b0 == ap_block_pp1_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln1254_fu_1717_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) & ~((ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) | ((ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln1254_fu_1717_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state31 : begin
            if (((icmp_ln1181_fu_2235_p2 == 1'd0) & (icmp_ln1179_fu_2171_p2 == 1'd1) & (leftRight_offset_read_read_fu_284_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else if (((icmp_ln1179_fu_2171_p2 == 1'd0) & (grp_fu_1189_p2 == 1'd1) & (leftRight_offset_read_read_fu_284_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if (((grp_fu_1189_p2 == 1'd1) & (icmp_ln1220_fu_2063_p2 == 1'd1) & (leftRight_offset_read_read_fu_284_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((1'b1 == ap_CS_fsm_state31) & (((((icmp_ln1179_fu_2171_p2 == 1'd0) & (grp_fu_1189_p2 == 1'd0) & (leftRight_offset_read_read_fu_284_p2 == 1'd1)) | ((icmp_ln1181_fu_2235_p2 == 1'd1) & (icmp_ln1179_fu_2171_p2 == 1'd1) & (leftRight_offset_read_read_fu_284_p2 == 1'd1))) | ((grp_fu_1189_p2 == 1'd0) & (icmp_ln1220_fu_2063_p2 == 1'd1) & (leftRight_offset_read_read_fu_284_p2 == 1'd0))) | ((icmp_ln1234_fu_2069_p2 == 1'd1) & (icmp_ln1220_fu_2063_p2 == 1'd0) & (leftRight_offset_read_read_fu_284_p2 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (icmp_ln1234_2_fu_2362_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)) & ~((ap_enable_reg_pp3_iter2 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter1 == 1'b0) & (icmp_ln1234_2_fu_2362_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)) | ((ap_enable_reg_pp3_iter2 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((ap_enable_reg_pp4_iter1 == 1'b0) & (icmp_ln1222_1_fu_2654_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone)) & ~((ap_enable_reg_pp4_iter2 == 1'b1) & (ap_enable_reg_pp4_iter1 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if ((((ap_enable_reg_pp4_iter1 == 1'b0) & (icmp_ln1222_1_fu_2654_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone)) | ((ap_enable_reg_pp4_iter2 == 1'b1) & (ap_enable_reg_pp4_iter1 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((ap_enable_reg_pp5_iter1 == 1'b0) & (icmp_ln1193_1_fu_2938_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)) & ~((ap_enable_reg_pp5_iter2 == 1'b1) & (ap_enable_reg_pp5_iter1 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((ap_enable_reg_pp5_iter1 == 1'b0) & (icmp_ln1193_1_fu_2938_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)) | ((ap_enable_reg_pp5_iter2 == 1'b1) & (ap_enable_reg_pp5_iter1 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_pp6_stage0;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((ap_enable_reg_pp6_iter1 == 1'b0) & (icmp_ln1181_2_fu_3295_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)) & ~((ap_enable_reg_pp6_iter2 == 1'b1) & (ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((ap_enable_reg_pp6_iter1 == 1'b0) & (icmp_ln1181_2_fu_3295_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)) | ((ap_enable_reg_pp6_iter2 == 1'b1) & (ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            if (((icmp_ln13_fu_3536_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state50))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign GDn_points_address0 = zext_ln1141_fu_1194_p1;

assign add_ln1147_1_fu_1248_p2 = (ap_phi_mux_row_list_size_phi_fu_822_p4 + 31'd1);

assign add_ln1147_fu_1362_p2 = ($signed(sub_ln1147_fu_1356_p2) + $signed(sext_ln1147_fu_1298_p1));

assign add_ln1151_fu_1400_p2 = ($signed(y_reg_3813) + $signed(25'd28554432));

assign add_ln1179_1_fu_2165_p2 = ($signed(right_bound_reg_902) + $signed(32'd1));

assign add_ln1179_fu_2160_p2 = ($signed(j_4_fu_2152_p3) + $signed(original_ppl));

assign add_ln1181_1_fu_3306_p2 = (j_5_reg_1125 + 64'd1);

assign add_ln1181_2_fu_3271_p2 = (indvar_flatten_reg_1103 + 66'd1);

assign add_ln1181_fu_3199_p2 = ($signed(sext_ln1181_3_fu_3195_p1) + $signed(33'd1));

assign add_ln1183_fu_3429_p2 = (select_ln1170_fu_3318_p3 + 2'd1);

assign add_ln1185_1_fu_3394_p2 = (sub_ln1185_1_fu_3376_p2 + zext_ln1185_fu_3390_p1);

assign add_ln1185_fu_3495_p2 = (sub_ln1185_fu_3489_p2 + add_ln54_4_reg_4329);

assign add_ln1187_fu_3300_p2 = (ap_phi_mux_temp_size_phi_fu_1118_p4 + 64'd1);

assign add_ln1193_1_fu_2902_p2 = (indvar_flatten7_reg_1061 + 33'd1);

assign add_ln1193_fu_2949_p2 = (j_6_reg_1083 + 33'd1);

assign add_ln1195_fu_3084_p2 = (select_ln1193_fu_2961_p3 + 2'd1);

assign add_ln1197_1_fu_3049_p2 = (sub_ln1197_1_fu_2993_p2 + zext_ln1197_fu_3045_p1);

assign add_ln1197_fu_3154_p2 = ($signed(sub_ln1197_fu_3148_p2) + $signed(sext_ln1197_fu_3090_p1));

assign add_ln1199_fu_2943_p2 = (ap_phi_mux_temp_size_1_phi_fu_1076_p4 + 31'd1);

assign add_ln1205_fu_2014_p2 = ($signed(row_list_size_assign_reg_830) + $signed(32'd4294967295));

assign add_ln1222_1_fu_2618_p2 = (indvar_flatten15_reg_1019 + 33'd1);

assign add_ln1222_fu_2665_p2 = (j_7_reg_1041 + 33'd1);

assign add_ln1224_fu_2800_p2 = (select_ln1222_fu_2677_p3 + 2'd1);

assign add_ln1226_1_fu_2765_p2 = (sub_ln1226_1_fu_2709_p2 + zext_ln1226_fu_2761_p1);

assign add_ln1226_fu_2870_p2 = ($signed(sub_ln1226_fu_2864_p2) + $signed(sext_ln1226_fu_2806_p1));

assign add_ln1228_fu_2659_p2 = (ap_phi_mux_temp_size_2_phi_fu_1034_p4 + 31'd1);

assign add_ln1234_1_fu_2266_p2 = ($signed(sext_ln1234_3_fu_2263_p1) + $signed(33'd1));

assign add_ln1234_2_fu_2373_p2 = (j_8_reg_972 + 64'd1);

assign add_ln1234_3_fu_2338_p2 = (indvar_flatten23_reg_950 + 66'd1);

assign add_ln1234_fu_2246_p2 = ($signed(sub_ln1234_1_fu_2241_p2) + $signed(select_ln1205_reg_4054));

assign add_ln1236_fu_2496_p2 = (select_ln1170_2_fu_2385_p3 + 2'd1);

assign add_ln1238_1_fu_2461_p2 = (sub_ln1238_1_fu_2443_p2 + zext_ln1238_fu_2457_p1);

assign add_ln1238_fu_2562_p2 = (sub_ln1238_fu_2556_p2 + add_ln54_7_reg_4165);

assign add_ln1240_fu_2367_p2 = (ap_phi_mux_temp_size_3_phi_fu_965_p4 + 64'd1);

assign add_ln1245_fu_2601_p2 = (p_read1 + 32'd1);

assign add_ln1254_fu_1711_p2 = (ap_phi_mux_j_2_phi_fu_918_p4 + 32'd1);

assign add_ln1256_fu_1728_p2 = (row_list_q0 + zext_ln1254_reg_3982);

assign add_ln1275_fu_1549_p2 = (ap_phi_mux_j_1_phi_fu_870_p4 + 32'd1);

assign add_ln13_fu_3526_p2 = (i_10_reg_1145 + 8'd1);

assign add_ln17_1_fu_3590_p2 = (sub_ln17_reg_4359 + 10'd2);

assign add_ln17_fu_3574_p2 = (sub_ln17_fu_3554_p2 + 10'd1);

assign add_ln20_fu_3635_p2 = (trunc_ln17_reg_4364 + 8'd48);

assign add_ln341_fu_1453_p2 = ($signed(zext_ln341_fu_1449_p1) + $signed(9'd385));

assign add_ln510_1_fu_1911_p2 = ($signed(zext_ln510_1_fu_1908_p1) + $signed(12'd3073));

assign add_ln510_fu_1792_p2 = ($signed(zext_ln510_fu_1789_p1) + $signed(12'd3073));

assign add_ln54_4_fu_3423_p2 = ($signed(sext_ln54_13_fu_3419_p1) + $signed(select_ln1170_1_fu_3344_p3));

assign add_ln54_5_fu_3078_p2 = ($signed(sext_ln54_16_fu_3074_p1) + $signed(select_ln1193_2_fu_3029_p3));

assign add_ln54_6_fu_2794_p2 = ($signed(sext_ln54_17_fu_2790_p1) + $signed(select_ln1222_2_fu_2745_p3));

assign add_ln54_7_fu_2490_p2 = ($signed(sext_ln54_18_fu_2486_p1) + $signed(select_ln1170_3_fu_2411_p3));

assign add_ln54_fu_1293_p2 = ($signed(sext_ln54_fu_1289_p1) + $signed(sext_ln1145_reg_3832));

assign and_ln1174_fu_2140_p2 = (icmp_ln1174_fu_2128_p2 & icmp_ln1174_1_fu_2134_p2);

assign and_ln1205_fu_2032_p2 = (icmp_ln1210_fu_2026_p2 & icmp_ln1205_fu_2020_p2);

assign and_ln1277_1_fu_1679_p2 = (grp_fu_1178_p2 & and_ln1277_fu_1673_p2);

assign and_ln1277_fu_1673_p2 = (or_ln1277_fu_1665_p2 & or_ln1277_1_fu_1669_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1046 = ((icmp_ln1181_reg_4117 == 1'd0) & (icmp_ln1179_reg_4087 == 1'd1) & (leftRight_offset_read_read_fu_284_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_1052 = ((icmp_ln1234_reg_4064 == 1'd0) & (icmp_ln1220_reg_4060 == 1'd0) & (leftRight_offset_read_read_fu_284_p2 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_return_0 = original_ppl;

assign ap_return_1 = add_ln1245_reg_4186;

assign data_V_10_fu_1572_p1 = dc_9_reg_3927;

assign data_V_11_fu_1596_p1 = grp_fu_1182_p1;

assign data_V_12_fu_1740_p1 = grp_fu_1182_p1;

assign data_V_13_fu_1758_p1 = grp_fu_1186_p1;

assign data_V_fu_1410_p1 = dc_reg_3896;

assign grp_fu_1169_p0 = (z_top - apexZ0);

assign grp_fu_1172_p0 = add_ln1151_fu_1400_p2;

assign grp_fu_1178_p0 = p_Result_9_fu_1583_p3;

assign grp_fu_1178_p1 = p_Result_10_fu_1608_p3;

assign grp_fu_1186_p0 = (row_list_q0 - zext_ln1254_reg_3982);

assign grp_fu_1189_p2 = (($signed(original_ppl) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign i_10_cast_fu_3532_p1 = i_10_reg_1145;

assign icmp_ln1145_1_fu_1254_p2 = ((ap_phi_mux_row_list_size_phi_fu_822_p4 == trunc_ln54_reg_3827) ? 1'b1 : 1'b0);

assign icmp_ln1145_fu_1200_p2 = (($signed(GDn_points_q0) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1174_1_fu_2134_p2 = (($signed(start_value_reg_854) > $signed(64'd10)) ? 1'b1 : 1'b0);

assign icmp_ln1174_fu_2128_p2 = ((start_index_reg_842 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1179_fu_2171_p2 = (($signed(add_ln1179_fu_2160_p2) > $signed(add_ln1179_1_fu_2165_p2)) ? 1'b1 : 1'b0);

assign icmp_ln1181_1_fu_3215_p2 = ((add_ln1181_fu_3199_p2 != sext_ln1181_1_fu_3189_p1) ? 1'b1 : 1'b0);

assign icmp_ln1181_2_fu_3295_p2 = ((indvar_flatten_reg_1103 == mul_ln1181_reg_4300) ? 1'b1 : 1'b0);

assign icmp_ln1181_fu_2235_p2 = (($signed(j_3_fu_2230_p2) > $signed(right_bound_reg_902)) ? 1'b1 : 1'b0);

assign icmp_ln1183_fu_3312_p2 = ((z_reg_1134 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln1193_1_fu_2938_p2 = ((indvar_flatten7_reg_1061 == sub_ln1193_reg_4105) ? 1'b1 : 1'b0);

assign icmp_ln1195_fu_2955_p2 = ((z_1_reg_1092 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln1205_fu_2020_p2 = ((start_index_reg_842 != add_ln1205_fu_2014_p2) ? 1'b1 : 1'b0);

assign icmp_ln1210_fu_2026_p2 = (($signed(start_value_reg_854) < $signed(64'd18446744073709551606)) ? 1'b1 : 1'b0);

assign icmp_ln1220_fu_2063_p2 = (($signed(j_10_fu_2057_p2) < $signed(j_9_reg_890)) ? 1'b1 : 1'b0);

assign icmp_ln1222_1_fu_2654_p2 = ((indvar_flatten15_reg_1019 == sub_ln1222_reg_4082) ? 1'b1 : 1'b0);

assign icmp_ln1224_fu_2671_p2 = ((z_2_reg_1050 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln1234_1_fu_2282_p2 = ((add_ln1234_1_fu_2266_p2 != sext_ln1234_1_fu_2255_p1) ? 1'b1 : 1'b0);

assign icmp_ln1234_2_fu_2362_p2 = ((indvar_flatten23_reg_950 == mul_ln1234_reg_4136) ? 1'b1 : 1'b0);

assign icmp_ln1234_fu_2069_p2 = (($signed(j_10_fu_2057_p2) > $signed(select_ln1205_fu_2044_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1236_fu_2379_p2 = ((z_3_reg_981 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln1254_fu_1717_p2 = ((ap_phi_mux_j_2_phi_fu_918_p4 == row_list_size_assign_reg_830) ? 1'b1 : 1'b0);

assign icmp_ln1256_fu_1873_p2 = (($signed(val_4_fu_1865_p3) < $signed(lbVal_reg_938)) ? 1'b1 : 1'b0);

assign icmp_ln1262_fu_1992_p2 = (($signed(val_5_fu_1984_p3) < $signed(rbVal_reg_926)) ? 1'b1 : 1'b0);

assign icmp_ln1275_fu_1555_p2 = ((ap_phi_mux_j_1_phi_fu_870_p4 == row_list_size_assign_reg_830) ? 1'b1 : 1'b0);

assign icmp_ln1277_1_fu_1647_p2 = ((trunc_ln1277_fu_1579_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln1277_2_fu_1653_p2 = ((tmp_108_fu_1631_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln1277_3_fu_1659_p2 = ((trunc_ln1277_1_fu_1604_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln1277_fu_1641_p2 = ((tmp_107_fu_1621_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln13_fu_3536_p2 = ((i_10_cast_fu_3532_p1 == temp_size_4_reg_992) ? 1'b1 : 1'b0);

assign icmp_ln22_fu_3649_p2 = (($signed(temp_q1) < $signed(tmp_116_reg_4459)) ? 1'b1 : 1'b0);

assign icmp_ln24_fu_3654_p2 = (($signed(temp_q1) > $signed(tmp_117_reg_4464)) ? 1'b1 : 1'b0);

assign isNeg_4_fu_1798_p3 = add_ln510_fu_1792_p2[32'd11];

assign isNeg_5_fu_1917_p3 = add_ln510_1_fu_1911_p2[32'd11];

assign isNeg_fu_1459_p3 = add_ln341_fu_1453_p2[32'd8];

assign j_10_fu_2057_p2 = (sub_ln1220_fu_2052_p2 + 32'd1);

assign j_3_fu_2230_p2 = (add_ln1179_1_fu_2165_p2 - original_ppl);

assign j_4_fu_2152_p3 = ((and_ln1174_fu_2140_p2[0:0] == 1'b1) ? start_index_1_fu_2146_p2 : start_index_reg_842);

assign lbVal_2_fu_1887_p3 = ((icmp_ln1256_fu_1873_p2[0:0] == 1'b1) ? val_4_fu_1865_p3 : lbVal_reg_938);

assign leftRight_offset_read_read_fu_284_p2 = leftRight_offset;

assign lshr_ln1147_fu_1384_p2 = GDarray_q0 >> zext_ln1147_2_fu_1380_p1;

assign lshr_ln1185_fu_3515_p2 = GDarray_q0 >> zext_ln1185_2_fu_3511_p1;

assign lshr_ln1197_fu_3175_p2 = GDarray_q0 >> zext_ln1197_3_fu_3171_p1;

assign lshr_ln1226_fu_2891_p2 = GDarray_q0 >> zext_ln1226_3_fu_2887_p1;

assign lshr_ln1238_fu_2582_p2 = GDarray_q0 >> zext_ln1238_2_fu_2578_p1;

assign mantissa_4_fu_1776_p4 = {{{{1'd1}, {tmp_139_reg_4018}}}, {1'd0}};

assign mantissa_5_fu_1895_p4 = {{{{1'd1}, {tmp_141_reg_4029}}}, {1'd0}};

assign mantissa_fu_1435_p4 = {{{{1'd1}, {tmp_137_fu_1431_p1}}}, {1'd0}};

assign mul_ln1147_fu_1305_p0 = mul_ln1147_fu_1305_p00;

assign mul_ln1147_fu_1305_p00 = $unsigned(sext_ln1147_fu_1298_p1);

assign mul_ln1147_fu_1305_p1 = 129'd24595658764946068822;

assign mul_ln1181_fu_3265_p0 = mul_ln1181_fu_3265_p00;

assign mul_ln1181_fu_3265_p00 = $unsigned(sext_ln1181_5_fu_3257_p1);

assign mul_ln1181_fu_3265_p1 = 66'd3;

assign mul_ln1185_fu_3438_p0 = mul_ln1185_fu_3438_p00;

assign mul_ln1185_fu_3438_p00 = add_ln54_4_reg_4329;

assign mul_ln1185_fu_3438_p1 = 129'd24595658764946068822;

assign mul_ln1197_fu_3097_p0 = mul_ln1197_fu_3097_p00;

assign mul_ln1197_fu_3097_p00 = $unsigned(sext_ln1197_fu_3090_p1);

assign mul_ln1197_fu_3097_p1 = 129'd24595658764946068822;

assign mul_ln1226_fu_2813_p0 = mul_ln1226_fu_2813_p00;

assign mul_ln1226_fu_2813_p00 = $unsigned(sext_ln1226_fu_2806_p1);

assign mul_ln1226_fu_2813_p1 = 129'd24595658764946068822;

assign mul_ln1234_fu_2332_p0 = mul_ln1234_fu_2332_p00;

assign mul_ln1234_fu_2332_p00 = $unsigned(sext_ln1234_5_fu_2324_p1);

assign mul_ln1234_fu_2332_p1 = 66'd3;

assign mul_ln1238_fu_2505_p0 = mul_ln1238_fu_2505_p00;

assign mul_ln1238_fu_2505_p00 = add_ln54_7_reg_4165;

assign mul_ln1238_fu_2505_p1 = 129'd24595658764946068822;

assign or_ln1277_1_fu_1669_p2 = (icmp_ln1277_3_reg_3957 | icmp_ln1277_2_reg_3952);

assign or_ln1277_fu_1665_p2 = (icmp_ln1277_reg_3942 | icmp_ln1277_1_reg_3947);

assign or_ln54_fu_1238_p2 = (sub_ln54_fu_1232_p2 | 17'd16);

assign p_Result_10_fu_1608_p3 = {{1'd0}, {trunc_ln368_1_fu_1600_p1}};

assign p_Result_11_fu_2006_p3 = ((icmp_ln1262_fu_1992_p2[0:0] == 1'b1) ? val_5_fu_1984_p3 : rbVal_reg_926);

assign p_Result_9_fu_1583_p3 = {{1'd0}, {trunc_ln368_fu_1575_p1}};

assign p_Result_s_fu_1413_p3 = data_V_fu_1410_p1[32'd31];

assign p_shl16_cast_fu_2435_p3 = {{trunc_ln1238_1_fu_2431_p1}, {2'd0}};

assign p_shl6_fu_2216_p3 = {{trunc_ln1193_fu_2181_p1}, {2'd0}};

assign p_shl_cast_fu_3368_p3 = {{trunc_ln1185_1_fu_3364_p1}, {2'd0}};

assign p_shl_fu_2114_p3 = {{trunc_ln1222_fu_2079_p1}, {2'd0}};

assign r_V_10_fu_1831_p2 = zext_ln15_4_fu_1785_p1 >> sh_prom_i_i_i_i_i_i_cast_cast_cast_cast_fu_1827_p1;

assign r_V_11_fu_1837_p2 = zext_ln15_4_fu_1785_p1 << sh_prom_i_i_i_i_i_i_cast_cast_cast_cast_fu_1827_p1;

assign r_V_12_fu_1950_p2 = zext_ln15_5_fu_1904_p1 >> sh_prom_i_i_i_i_i59_i_cast_cast_cast_cast_fu_1946_p1;

assign r_V_13_fu_1956_p2 = zext_ln15_5_fu_1904_p1 << sh_prom_i_i_i_i_i59_i_cast_cast_cast_cast_fu_1946_p1;

assign r_V_9_fu_1499_p2 = zext_ln15_fu_1445_p1 << sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_1489_p1;

assign r_V_fu_1493_p2 = zext_ln15_fu_1445_p1 >> sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_1489_p1;

assign radii_address0 = zext_ln1141_fu_1194_p1;

assign result_V_15_fu_1535_p2 = (64'd0 - val_fu_1527_p3);

assign result_V_fu_1541_p3 = ((p_Result_s_fu_1413_p3[0:0] == 1'b1) ? result_V_15_fu_1535_p2 : val_fu_1527_p3);

assign row_list_d0 = lshr_ln1147_fu_1384_p2[63:0];

assign row_list_size_cast9_fu_1368_p1 = row_list_size_reg_818_pp0_iter1_reg;

assign select_ln1170_1_fu_3344_p3 = ((icmp_ln1183_fu_3312_p2[0:0] == 1'b1) ? sub_ln54_14_fu_3338_p2 : sub_ln54_10_fu_3289_p2);

assign select_ln1170_2_fu_2385_p3 = ((icmp_ln1236_fu_2379_p2[0:0] == 1'b1) ? 2'd0 : z_3_reg_981);

assign select_ln1170_3_fu_2411_p3 = ((icmp_ln1236_fu_2379_p2[0:0] == 1'b1) ? sub_ln54_17_fu_2405_p2 : sub_ln54_13_fu_2356_p2);

assign select_ln1170_fu_3318_p3 = ((icmp_ln1183_fu_3312_p2[0:0] == 1'b1) ? 2'd0 : z_reg_1134);

assign select_ln1181_1_fu_3352_p3 = ((icmp_ln1183_fu_3312_p2[0:0] == 1'b1) ? add_ln1187_fu_3300_p2 : ap_phi_mux_temp_size_phi_fu_1118_p4);

assign select_ln1181_2_fu_3382_p3 = ((icmp_ln1183_fu_3312_p2[0:0] == 1'b1) ? add_ln1181_1_fu_3306_p2 : j_5_reg_1125);

assign select_ln1181_fu_3221_p3 = ((icmp_ln1181_1_fu_3215_p2[0:0] == 1'b1) ? sub_ln1181_fu_3209_p2 : 34'd1);

assign select_ln1193_1_fu_2969_p3 = ((icmp_ln1195_fu_2955_p2[0:0] == 1'b1) ? add_ln1199_fu_2943_p2 : ap_phi_mux_temp_size_1_phi_fu_1076_p4);

assign select_ln1193_2_fu_3029_p3 = ((icmp_ln1195_fu_2955_p2[0:0] == 1'b1) ? sub_ln54_15_fu_3023_p2 : sub_ln54_11_fu_2932_p2);

assign select_ln1193_3_fu_3037_p3 = ((icmp_ln1195_fu_2955_p2[0:0] == 1'b1) ? add_ln1193_fu_2949_p2 : j_6_reg_1083);

assign select_ln1193_fu_2961_p3 = ((icmp_ln1195_fu_2955_p2[0:0] == 1'b1) ? 2'd0 : z_1_reg_1092);

assign select_ln1205_fu_2044_p3 = ((and_ln1205_fu_2032_p2[0:0] == 1'b1) ? start_index_2_fu_2038_p2 : start_index_reg_842);

assign select_ln1222_1_fu_2685_p3 = ((icmp_ln1224_fu_2671_p2[0:0] == 1'b1) ? add_ln1228_fu_2659_p2 : ap_phi_mux_temp_size_2_phi_fu_1034_p4);

assign select_ln1222_2_fu_2745_p3 = ((icmp_ln1224_fu_2671_p2[0:0] == 1'b1) ? sub_ln54_16_fu_2739_p2 : sub_ln54_12_fu_2648_p2);

assign select_ln1222_3_fu_2753_p3 = ((icmp_ln1224_fu_2671_p2[0:0] == 1'b1) ? add_ln1222_fu_2665_p2 : j_7_reg_1041);

assign select_ln1222_fu_2677_p3 = ((icmp_ln1224_fu_2671_p2[0:0] == 1'b1) ? 2'd0 : z_2_reg_1050);

assign select_ln1234_1_fu_2419_p3 = ((icmp_ln1236_fu_2379_p2[0:0] == 1'b1) ? add_ln1240_fu_2367_p2 : ap_phi_mux_temp_size_3_phi_fu_965_p4);

assign select_ln1234_2_fu_2449_p3 = ((icmp_ln1236_fu_2379_p2[0:0] == 1'b1) ? add_ln1234_2_fu_2373_p2 : j_8_reg_972);

assign select_ln1234_fu_2288_p3 = ((icmp_ln1234_1_fu_2282_p2[0:0] == 1'b1) ? sub_ln1234_fu_2276_p2 : 34'd1);

assign select_ln1256_fu_1879_p3 = ((icmp_ln1256_fu_1873_p2[0:0] == 1'b1) ? j_2_reg_914_pp2_iter2_reg : j_9_reg_890);

assign select_ln1262_fu_1998_p3 = ((icmp_ln1262_fu_1992_p2[0:0] == 1'b1) ? j_2_reg_914_pp2_iter2_reg : right_bound_reg_902);

assign select_ln1277_1_fu_1693_p3 = ((and_ln1277_1_fu_1679_p2[0:0] == 1'b1) ? sub_ln1277_reg_3920 : start_value_reg_854);

assign select_ln1277_2_fu_1700_p3 = ((and_ln1277_1_fu_1679_p2[0:0] == 1'b1) ? sub_ln1277_reg_3920 : p_x_assign_7_reg_878);

assign select_ln1277_fu_1685_p3 = ((and_ln1277_1_fu_1679_p2[0:0] == 1'b1) ? j_1_reg_866_pp1_iter1_reg : start_index_reg_842);

assign sext_ln1145_fu_1244_p1 = $signed(or_ln54_fu_1238_p2);

assign sext_ln1147_fu_1298_p1 = $signed(add_ln54_reg_3846);

assign sext_ln1181_1_fu_3189_p1 = j_3_reg_4110;

assign sext_ln1181_2_fu_3192_p1 = j_3_reg_4110;

assign sext_ln1181_3_fu_3195_p1 = right_bound_reg_902;

assign sext_ln1181_4_fu_3205_p1 = add_ln1181_fu_3199_p2;

assign sext_ln1181_5_fu_3257_p1 = $signed(select_ln1181_fu_3221_p3);

assign sext_ln1181_fu_3186_p1 = j_3_reg_4110;

assign sext_ln1193_fu_2177_p1 = j_4_fu_2152_p3;

assign sext_ln1197_fu_3090_p1 = $signed(add_ln54_5_reg_4265);

assign sext_ln1222_fu_2075_p1 = j_9_reg_890;

assign sext_ln1226_fu_2806_p1 = $signed(add_ln54_6_reg_4221);

assign sext_ln1234_1_fu_2255_p1 = add_ln1234_fu_2246_p2;

assign sext_ln1234_2_fu_2259_p1 = add_ln1234_fu_2246_p2;

assign sext_ln1234_3_fu_2263_p1 = select_ln1205_reg_4054;

assign sext_ln1234_4_fu_2272_p1 = add_ln1234_1_fu_2266_p2;

assign sext_ln1234_5_fu_2324_p1 = $signed(select_ln1234_fu_2288_p3);

assign sext_ln1234_fu_2251_p1 = add_ln1234_fu_2246_p2;

assign sext_ln1311_4_fu_1811_p1 = $signed(sub_ln1311_4_fu_1806_p2);

assign sext_ln1311_5_fu_1930_p1 = $signed(sub_ln1311_5_fu_1925_p2);

assign sext_ln1311_fu_1473_p1 = $signed(sub_ln1311_fu_1467_p2);

assign sext_ln54_10_fu_2928_p1 = $signed(shl_ln54_14_fu_2920_p3);

assign sext_ln54_11_fu_2632_p1 = $signed(shl_ln54_15_fu_2624_p3);

assign sext_ln54_12_fu_2644_p1 = $signed(shl_ln54_16_fu_2636_p3);

assign sext_ln54_13_fu_3419_p1 = $signed(tmp_fu_3409_p4);

assign sext_ln54_14_fu_3007_p1 = $signed(shl_ln54_24_mid1_fu_2999_p3);

assign sext_ln54_15_fu_3019_p1 = $signed(shl_ln54_25_mid1_fu_3011_p3);

assign sext_ln54_16_fu_3074_p1 = $signed(tmp1_fu_3064_p4);

assign sext_ln54_17_fu_2790_p1 = $signed(tmp2_fu_2780_p4);

assign sext_ln54_18_fu_2486_p1 = $signed(tmp3_fu_2476_p4);

assign sext_ln54_19_fu_2723_p1 = $signed(shl_ln54_26_mid1_fu_2715_p3);

assign sext_ln54_20_fu_2735_p1 = $signed(shl_ln54_27_mid1_fu_2727_p3);

assign sext_ln54_9_fu_2916_p1 = $signed(shl_ln54_13_fu_2908_p3);

assign sext_ln54_fu_1289_p1 = $signed(sub_ln54_5_fu_1283_p2);

assign sext_ln5_fu_2606_p1 = ap_phi_mux_temp_size_4_phi_fu_996_p16;

assign sh_prom_i_i_i_i_i59_i_cast_cast_cast_cast_fu_1946_p1 = $unsigned(sh_prom_i_i_i_i_i59_i_cast_cast_cast_fu_1942_p1);

assign sh_prom_i_i_i_i_i59_i_cast_cast_cast_fu_1942_p1 = $signed(ush_5_fu_1934_p3);

assign sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_1489_p1 = $unsigned(sh_prom_i_i_i_i_i_cast_cast_cast_fu_1485_p1);

assign sh_prom_i_i_i_i_i_cast_cast_cast_fu_1485_p1 = $signed(ush_fu_1477_p3);

assign sh_prom_i_i_i_i_i_i_cast_cast_cast_cast_fu_1827_p1 = $unsigned(sh_prom_i_i_i_i_i_i_cast_cast_cast_fu_1823_p1);

assign sh_prom_i_i_i_i_i_i_cast_cast_cast_fu_1823_p1 = $signed(ush_4_fu_1815_p3);

assign shl_ln1147_1_fu_1336_p3 = {{tmp_106_fu_1326_p4}, {5'd0}};

assign shl_ln1147_2_fu_1344_p3 = {{tmp_118_fu_1311_p4}, {3'd0}};

assign shl_ln1185_1_fu_3469_p3 = {{tmp_122_fu_3459_p4}, {5'd0}};

assign shl_ln1185_2_fu_3477_p3 = {{tmp_132_fu_3444_p4}, {3'd0}};

assign shl_ln1197_1_fu_3128_p3 = {{tmp_124_fu_3118_p4}, {5'd0}};

assign shl_ln1197_2_fu_3136_p3 = {{tmp_133_fu_3103_p4}, {3'd0}};

assign shl_ln1226_1_fu_2844_p3 = {{tmp_125_fu_2834_p4}, {5'd0}};

assign shl_ln1226_2_fu_2852_p3 = {{tmp_134_fu_2819_p4}, {3'd0}};

assign shl_ln1238_1_fu_2536_p3 = {{tmp_126_fu_2526_p4}, {5'd0}};

assign shl_ln1238_2_fu_2544_p3 = {{tmp_135_fu_2511_p4}, {3'd0}};

assign shl_ln54_10_fu_2296_p3 = {{i}, {13'd0}};

assign shl_ln54_11_fu_2307_p3 = {{i}, {11'd0}};

assign shl_ln54_12_fu_3283_p2 = j_5_reg_1125 << 64'd3;

assign shl_ln54_13_fu_2908_p3 = {{j_6_reg_1083}, {5'd0}};

assign shl_ln54_14_fu_2920_p3 = {{j_6_reg_1083}, {3'd0}};

assign shl_ln54_15_fu_2624_p3 = {{j_7_reg_1041}, {5'd0}};

assign shl_ln54_16_fu_2636_p3 = {{j_7_reg_1041}, {3'd0}};

assign shl_ln54_17_fu_2344_p2 = j_8_reg_972 << 64'd5;

assign shl_ln54_18_fu_2350_p2 = j_8_reg_972 << 64'd3;

assign shl_ln54_19_fu_3326_p2 = add_ln1181_1_fu_3306_p2 << 64'd5;

assign shl_ln54_1_fu_1221_p3 = {{i}, {11'd0}};

assign shl_ln54_20_fu_3332_p2 = add_ln1181_1_fu_3306_p2 << 64'd3;

assign shl_ln54_21_fu_2393_p2 = add_ln1234_2_fu_2373_p2 << 64'd5;

assign shl_ln54_22_fu_2399_p2 = add_ln1234_2_fu_2373_p2 << 64'd3;

assign shl_ln54_24_mid1_fu_2999_p3 = {{add_ln1193_fu_2949_p2}, {5'd0}};

assign shl_ln54_25_mid1_fu_3011_p3 = {{add_ln1193_fu_2949_p2}, {3'd0}};

assign shl_ln54_26_mid1_fu_2715_p3 = {{add_ln1222_fu_2665_p2}, {5'd0}};

assign shl_ln54_27_mid1_fu_2727_p3 = {{add_ln1222_fu_2665_p2}, {3'd0}};

assign shl_ln54_2_fu_1259_p3 = {{ap_phi_mux_row_list_size_phi_fu_822_p4}, {5'd0}};

assign shl_ln54_3_fu_1271_p3 = {{ap_phi_mux_row_list_size_phi_fu_822_p4}, {3'd0}};

assign shl_ln54_4_fu_3229_p3 = {{i}, {13'd0}};

assign shl_ln54_5_fu_3240_p3 = {{i}, {11'd0}};

assign shl_ln54_6_fu_2184_p3 = {{i}, {13'd0}};

assign shl_ln54_7_fu_2195_p3 = {{i}, {11'd0}};

assign shl_ln54_8_fu_2082_p3 = {{i}, {13'd0}};

assign shl_ln54_9_fu_2093_p3 = {{i}, {11'd0}};

assign shl_ln54_fu_3277_p2 = j_5_reg_1125 << 64'd5;

assign shl_ln54_s_fu_1210_p3 = {{i}, {13'd0}};

assign shl_ln5_fu_3504_p3 = {{add_ln1185_reg_4345}, {3'd0}};

assign shl_ln6_fu_3164_p3 = {{add_ln1197_reg_4280}, {3'd0}};

assign shl_ln7_fu_2880_p3 = {{add_ln1226_reg_4236}, {3'd0}};

assign shl_ln8_fu_2571_p3 = {{add_ln1238_reg_4181}, {3'd0}};

assign shl_ln_fu_1373_p3 = {{add_ln1147_reg_3856}, {3'd0}};

assign start_index_1_fu_2146_p2 = ($signed(start_index_reg_842) + $signed(32'd4294967295));

assign start_index_2_fu_2038_p2 = (start_index_reg_842 + 32'd1);

assign sub_ln1147_fu_1356_p2 = (zext_ln1147_1_fu_1352_p1 - shl_ln1147_1_fu_1336_p3);

assign sub_ln1181_fu_3209_p2 = ($signed(sext_ln1181_4_fu_3205_p1) - $signed(sext_ln1181_2_fu_3192_p1));

assign sub_ln1185_1_fu_3376_p2 = (p_shl_cast_fu_3368_p3 - trunc_ln1185_fu_3360_p1);

assign sub_ln1185_fu_3489_p2 = (zext_ln1185_1_fu_3485_p1 - shl_ln1185_1_fu_3469_p3);

assign sub_ln1193_fu_2224_p2 = (p_shl6_fu_2216_p3 - zext_ln1193_fu_2212_p1);

assign sub_ln1197_1_fu_2993_p2 = (tmp_148_cast_fu_2985_p3 - trunc_ln1197_fu_2977_p1);

assign sub_ln1197_fu_3148_p2 = (zext_ln1197_1_fu_3144_p1 - shl_ln1197_1_fu_3128_p3);

assign sub_ln1220_fu_2052_p2 = ($signed(select_ln1205_fu_2044_p3) - $signed(original_ppl));

assign sub_ln1222_fu_2122_p2 = (p_shl_fu_2114_p3 - zext_ln1222_fu_2110_p1);

assign sub_ln1226_1_fu_2709_p2 = (tmp_151_cast_fu_2701_p3 - trunc_ln1226_fu_2693_p1);

assign sub_ln1226_fu_2864_p2 = (zext_ln1226_1_fu_2860_p1 - shl_ln1226_1_fu_2844_p3);

assign sub_ln1234_1_fu_2241_p2 = (32'd1 - original_ppl);

assign sub_ln1234_fu_2276_p2 = ($signed(sext_ln1234_4_fu_2272_p1) - $signed(sext_ln1234_2_fu_2259_p1));

assign sub_ln1238_1_fu_2443_p2 = (p_shl16_cast_fu_2435_p3 - trunc_ln1238_fu_2427_p1);

assign sub_ln1238_fu_2556_p2 = (zext_ln1238_1_fu_2552_p1 - shl_ln1238_1_fu_2536_p3);

assign sub_ln1277_fu_1566_p2 = (row_list_q0 - result_V_reg_3901);

assign sub_ln1311_4_fu_1806_p2 = (11'd1023 - tmp_138_reg_4012);

assign sub_ln1311_5_fu_1925_p2 = (11'd1023 - tmp_140_reg_4023);

assign sub_ln1311_fu_1467_p2 = (8'd127 - tmp_136_fu_1421_p4);

assign sub_ln17_fu_3554_p2 = (tmp_128_fu_3546_p3 - zext_ln17_fu_3542_p1);

assign sub_ln54_10_fu_3289_p2 = (shl_ln54_fu_3277_p2 - shl_ln54_12_fu_3283_p2);

assign sub_ln54_11_fu_2932_p2 = ($signed(sext_ln54_9_fu_2916_p1) - $signed(sext_ln54_10_fu_2928_p1));

assign sub_ln54_12_fu_2648_p2 = ($signed(sext_ln54_11_fu_2632_p1) - $signed(sext_ln54_12_fu_2644_p1));

assign sub_ln54_13_fu_2356_p2 = (shl_ln54_17_fu_2344_p2 - shl_ln54_18_fu_2350_p2);

assign sub_ln54_14_fu_3338_p2 = (shl_ln54_19_fu_3326_p2 - shl_ln54_20_fu_3332_p2);

assign sub_ln54_15_fu_3023_p2 = ($signed(sext_ln54_14_fu_3007_p1) - $signed(sext_ln54_15_fu_3019_p1));

assign sub_ln54_16_fu_2739_p2 = ($signed(sext_ln54_19_fu_2723_p1) - $signed(sext_ln54_20_fu_2735_p1));

assign sub_ln54_17_fu_2405_p2 = (shl_ln54_21_fu_2393_p2 - shl_ln54_22_fu_2399_p2);

assign sub_ln54_5_fu_1283_p2 = (zext_ln54_3_fu_1267_p1 - zext_ln54_4_fu_1279_p1);

assign sub_ln54_6_fu_3251_p2 = (zext_ln54_5_fu_3236_p1 - zext_ln54_6_fu_3247_p1);

assign sub_ln54_7_fu_2206_p2 = (zext_ln54_7_fu_2191_p1 - zext_ln54_8_fu_2202_p1);

assign sub_ln54_8_fu_2104_p2 = (zext_ln54_9_fu_2089_p1 - zext_ln54_10_fu_2100_p1);

assign sub_ln54_9_fu_2318_p2 = (zext_ln54_11_fu_2303_p1 - zext_ln54_12_fu_2314_p1);

assign sub_ln54_fu_1232_p2 = (zext_ln54_fu_1217_p1 - zext_ln54_2_fu_1228_p1);

assign tmp1_fu_3064_p4 = {{{tmp_113_fu_3055_p4}, {select_ln1193_fu_2961_p3}}, {3'd0}};

assign tmp2_fu_2780_p4 = {{{tmp_114_fu_2771_p4}, {select_ln1222_fu_2677_p3}}, {3'd0}};

assign tmp3_fu_2476_p4 = {{{tmp_115_fu_2467_p4}, {select_ln1170_2_fu_2385_p3}}, {3'd0}};

assign tmp_106_fu_1326_p4 = {{mul_ln1147_fu_1305_p2[127:69]}};

assign tmp_107_fu_1621_p4 = {{data_V_10_fu_1572_p1[62:52]}};

assign tmp_108_fu_1631_p4 = {{data_V_11_fu_1596_p1[62:52]}};

assign tmp_110_fu_1517_p4 = {{r_V_9_fu_1499_p2[87:24]}};

assign tmp_112_fu_3400_p4 = {{sub_ln54_6_reg_4295[16:5]}};

assign tmp_113_fu_3055_p4 = {{sub_ln54_7_reg_4100[16:5]}};

assign tmp_114_fu_2771_p4 = {{sub_ln54_8_reg_4077[16:5]}};

assign tmp_115_fu_2467_p4 = {{sub_ln54_9_reg_4131[16:5]}};

assign tmp_118_fu_1311_p4 = {{mul_ln1147_fu_1305_p2[128:69]}};

assign tmp_119_fu_1855_p4 = {{r_V_11_fu_1837_p2[116:53]}};

assign tmp_121_fu_1974_p4 = {{r_V_13_fu_1956_p2[116:53]}};

assign tmp_122_fu_3459_p4 = {{mul_ln1185_fu_3438_p2[127:69]}};

assign tmp_123_fu_1505_p3 = r_V_fu_1493_p2[32'd24];

assign tmp_124_fu_3118_p4 = {{mul_ln1197_fu_3097_p2[127:69]}};

assign tmp_125_fu_2834_p4 = {{mul_ln1226_fu_2813_p2[127:69]}};

assign tmp_126_fu_2526_p4 = {{mul_ln1238_fu_2505_p2[127:69]}};

assign tmp_127_fu_1843_p3 = r_V_10_fu_1831_p2[32'd53];

assign tmp_128_fu_3546_p3 = {{i_10_reg_1145}, {2'd0}};

assign tmp_131_fu_1962_p3 = r_V_12_fu_1950_p2[32'd53];

assign tmp_132_fu_3444_p4 = {{mul_ln1185_fu_3438_p2[128:69]}};

assign tmp_133_fu_3103_p4 = {{mul_ln1197_fu_3097_p2[128:69]}};

assign tmp_134_fu_2819_p4 = {{mul_ln1226_fu_2813_p2[128:69]}};

assign tmp_135_fu_2511_p4 = {{mul_ln1238_fu_2505_p2[128:69]}};

assign tmp_136_fu_1421_p4 = {{data_V_fu_1410_p1[30:23]}};

assign tmp_137_fu_1431_p1 = data_V_fu_1410_p1[22:0];

assign tmp_139_fu_1754_p1 = data_V_12_fu_1740_p1[51:0];

assign tmp_141_fu_1772_p1 = data_V_13_fu_1758_p1[51:0];

assign tmp_148_cast_fu_2985_p3 = {{trunc_ln1197_1_fu_2981_p1}, {2'd0}};

assign tmp_151_cast_fu_2701_p3 = {{trunc_ln1226_1_fu_2697_p1}, {2'd0}};

assign tmp_fu_3409_p4 = {{{tmp_112_fu_3400_p4}, {select_ln1170_fu_3318_p3}}, {3'd0}};

assign trapezoid_edges_address0 = zext_ln1141_reg_3683;

assign trunc_ln1185_1_fu_3364_p1 = select_ln1181_1_fu_3352_p3[7:0];

assign trunc_ln1185_2_fu_3521_p1 = lshr_ln1185_fu_3515_p2[63:0];

assign trunc_ln1185_fu_3360_p1 = select_ln1181_1_fu_3352_p3[9:0];

assign trunc_ln1193_fu_2181_p1 = original_ppl[30:0];

assign trunc_ln1197_1_fu_2981_p1 = select_ln1193_1_fu_2969_p3[7:0];

assign trunc_ln1197_2_fu_3181_p1 = lshr_ln1197_fu_3175_p2[63:0];

assign trunc_ln1197_fu_2977_p1 = select_ln1193_1_fu_2969_p3[9:0];

assign trunc_ln1222_fu_2079_p1 = original_ppl[30:0];

assign trunc_ln1226_1_fu_2697_p1 = select_ln1222_1_fu_2685_p3[7:0];

assign trunc_ln1226_2_fu_2897_p1 = lshr_ln1226_fu_2891_p2[63:0];

assign trunc_ln1226_fu_2693_p1 = select_ln1222_1_fu_2685_p3[9:0];

assign trunc_ln1238_1_fu_2431_p1 = select_ln1234_1_fu_2419_p3[7:0];

assign trunc_ln1238_2_fu_2588_p1 = lshr_ln1238_fu_2582_p2[63:0];

assign trunc_ln1238_fu_2427_p1 = select_ln1234_1_fu_2419_p3[9:0];

assign trunc_ln1245_1_fu_2593_p1 = sub_ln1234_reg_4126[31:0];

assign trunc_ln1245_fu_2597_p1 = sub_ln1181_reg_4290[31:0];

assign trunc_ln1258_cast_fu_1723_p1 = ap_phi_mux_j_2_phi_fu_918_p4;

assign trunc_ln1277_1_fu_1604_p1 = data_V_11_fu_1596_p1[51:0];

assign trunc_ln1277_fu_1579_p1 = data_V_10_fu_1572_p1[51:0];

assign trunc_ln1279_cast_fu_1561_p1 = ap_phi_mux_j_1_phi_fu_870_p4;

assign trunc_ln17_fu_3570_p1 = sub_ln17_fu_3554_p2[7:0];

assign trunc_ln368_1_fu_1600_p1 = data_V_11_fu_1596_p1[62:0];

assign trunc_ln368_fu_1575_p1 = data_V_10_fu_1572_p1[62:0];

assign trunc_ln54_fu_1206_p1 = GDn_points_q0[30:0];

assign trunc_ln5_fu_2615_p1 = p_read1[2:0];

assign ush_4_fu_1815_p3 = ((isNeg_4_fu_1798_p3[0:0] == 1'b1) ? sext_ln1311_4_fu_1811_p1 : add_ln510_fu_1792_p2);

assign ush_5_fu_1934_p3 = ((isNeg_5_fu_1917_p3[0:0] == 1'b1) ? sext_ln1311_5_fu_1930_p1 : add_ln510_1_fu_1911_p2);

assign ush_fu_1477_p3 = ((isNeg_fu_1459_p3[0:0] == 1'b1) ? sext_ln1311_fu_1473_p1 : add_ln341_fu_1453_p2);

assign val_4_fu_1865_p3 = ((isNeg_4_fu_1798_p3[0:0] == 1'b1) ? zext_ln662_4_fu_1851_p1 : tmp_119_fu_1855_p4);

assign val_5_fu_1984_p3 = ((isNeg_5_fu_1917_p3[0:0] == 1'b1) ? zext_ln662_5_fu_1970_p1 : tmp_121_fu_1974_p4);

assign val_fu_1527_p3 = ((isNeg_fu_1459_p3[0:0] == 1'b1) ? zext_ln662_fu_1513_p1 : tmp_110_fu_1517_p4);

assign zext_ln1141_fu_1194_p1 = i;

assign zext_ln1147_1_fu_1352_p1 = shl_ln1147_2_fu_1344_p3;

assign zext_ln1147_2_fu_1380_p1 = shl_ln_fu_1373_p3;

assign zext_ln1147_3_fu_1321_p1 = tmp_118_fu_1311_p4;

assign zext_ln1185_1_fu_3485_p1 = shl_ln1185_2_fu_3477_p3;

assign zext_ln1185_2_fu_3511_p1 = shl_ln5_fu_3504_p3;

assign zext_ln1185_3_fu_3500_p1 = add_ln1185_1_reg_4324_pp6_iter1_reg;

assign zext_ln1185_5_fu_3454_p1 = tmp_132_fu_3444_p4;

assign zext_ln1185_fu_3390_p1 = select_ln1170_fu_3318_p3;

assign zext_ln1193_fu_2212_p1 = trunc_ln1193_fu_2181_p1;

assign zext_ln1197_1_fu_3144_p1 = shl_ln1197_2_fu_3136_p3;

assign zext_ln1197_2_fu_3160_p1 = add_ln1197_1_reg_4260_pp5_iter1_reg;

assign zext_ln1197_3_fu_3171_p1 = shl_ln6_fu_3164_p3;

assign zext_ln1197_5_fu_3113_p1 = tmp_133_fu_3103_p4;

assign zext_ln1197_fu_3045_p1 = select_ln1193_fu_2961_p3;

assign zext_ln1222_fu_2110_p1 = trunc_ln1222_fu_2079_p1;

assign zext_ln1226_1_fu_2860_p1 = shl_ln1226_2_fu_2852_p3;

assign zext_ln1226_2_fu_2876_p1 = add_ln1226_1_reg_4216_pp4_iter1_reg;

assign zext_ln1226_3_fu_2887_p1 = shl_ln7_fu_2880_p3;

assign zext_ln1226_5_fu_2829_p1 = tmp_134_fu_2819_p4;

assign zext_ln1226_fu_2761_p1 = select_ln1222_fu_2677_p3;

assign zext_ln1238_1_fu_2552_p1 = shl_ln1238_2_fu_2544_p3;

assign zext_ln1238_2_fu_2578_p1 = shl_ln8_fu_2571_p3;

assign zext_ln1238_3_fu_2567_p1 = add_ln1238_1_reg_4160_pp3_iter1_reg;

assign zext_ln1238_5_fu_2521_p1 = tmp_135_fu_2511_p4;

assign zext_ln1238_fu_2457_p1 = select_ln1170_2_fu_2385_p3;

assign zext_ln1254_fu_1707_p1 = trapezoid_edges_q0;

assign zext_ln15_4_fu_1785_p1 = mantissa_4_fu_1776_p4;

assign zext_ln15_5_fu_1904_p1 = mantissa_5_fu_1895_p4;

assign zext_ln15_fu_1445_p1 = mantissa_fu_1435_p4;

assign zext_ln17_1_fu_3560_p1 = sub_ln17_fu_3554_p2;

assign zext_ln17_2_fu_3580_p1 = add_ln17_fu_3574_p2;

assign zext_ln17_3_fu_3595_p1 = add_ln17_1_fu_3590_p2;

assign zext_ln17_fu_3542_p1 = i_10_reg_1145;

assign zext_ln20_fu_3640_p1 = add_ln20_fu_3635_p2;

assign zext_ln341_fu_1449_p1 = tmp_136_fu_1421_p4;

assign zext_ln510_1_fu_1908_p1 = tmp_140_reg_4023;

assign zext_ln510_fu_1789_p1 = tmp_138_reg_4012;

assign zext_ln54_10_fu_2100_p1 = shl_ln54_9_fu_2093_p3;

assign zext_ln54_11_fu_2303_p1 = shl_ln54_10_fu_2296_p3;

assign zext_ln54_12_fu_2314_p1 = shl_ln54_11_fu_2307_p3;

assign zext_ln54_2_fu_1228_p1 = shl_ln54_1_fu_1221_p3;

assign zext_ln54_3_fu_1267_p1 = shl_ln54_2_fu_1259_p3;

assign zext_ln54_4_fu_1279_p1 = shl_ln54_3_fu_1271_p3;

assign zext_ln54_5_fu_3236_p1 = shl_ln54_4_fu_3229_p3;

assign zext_ln54_6_fu_3247_p1 = shl_ln54_5_fu_3240_p3;

assign zext_ln54_7_fu_2191_p1 = shl_ln54_6_fu_2184_p3;

assign zext_ln54_8_fu_2202_p1 = shl_ln54_7_fu_2195_p3;

assign zext_ln54_9_fu_2089_p1 = shl_ln54_8_fu_2082_p3;

assign zext_ln54_fu_1217_p1 = shl_ln54_s_fu_1210_p3;

assign zext_ln662_4_fu_1851_p1 = tmp_127_fu_1843_p3;

assign zext_ln662_5_fu_1970_p1 = tmp_131_fu_1962_p3;

assign zext_ln662_fu_1513_p1 = tmp_123_fu_1505_p3;

always @ (posedge ap_clk) begin
    zext_ln1141_reg_3683[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    sext_ln1145_reg_3832[10:0] <= 11'b00000010000;
    add_ln54_reg_3846[2:0] <= 3'b000;
    add_ln1147_reg_3856[2:0] <= 3'b000;
    zext_ln1254_reg_3982[63:26] <= 38'b00000000000000000000000000000000000000;
    sub_ln54_8_reg_4077[10:0] <= 11'b00000000000;
    sub_ln54_7_reg_4100[10:0] <= 11'b00000000000;
    sub_ln54_9_reg_4131[10:0] <= 11'b00000000000;
    add_ln54_7_reg_4165[2:0] <= 3'b000;
    add_ln1238_reg_4181[2:0] <= 3'b000;
    add_ln54_6_reg_4221[2:0] <= 3'b000;
    add_ln1226_reg_4236[2:0] <= 3'b000;
    add_ln54_5_reg_4265[2:0] <= 3'b000;
    add_ln1197_reg_4280[2:0] <= 3'b000;
    sub_ln54_6_reg_4295[10:0] <= 11'b00000000000;
    add_ln54_4_reg_4329[2:0] <= 3'b000;
    add_ln1185_reg_4345[2:0] <= 3'b000;
end

endmodule //makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine
