-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity makePatches_ShadowQuilt_fromEdges_get_acceptanceCorners is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    wp_parameters_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    wp_parameters_ce0 : OUT STD_LOGIC;
    wp_parameters_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    wp_parameters_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    wp_parameters_ce1 : OUT STD_LOGIC;
    wp_parameters_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    wp_parameters2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    wp_parameters2_ce0 : OUT STD_LOGIC;
    wp_parameters2_we0 : OUT STD_LOGIC;
    wp_parameters2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    wp_parameters2_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    wp_parameters2_ce1 : OUT STD_LOGIC;
    wp_parameters2_we1 : OUT STD_LOGIC;
    wp_parameters2_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    wp_parameters3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    wp_parameters3_ce0 : OUT STD_LOGIC;
    wp_parameters3_we0 : OUT STD_LOGIC;
    wp_parameters3_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    wp_parameters3_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    wp_parameters3_ce1 : OUT STD_LOGIC;
    wp_parameters3_we1 : OUT STD_LOGIC;
    wp_parameters3_d1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    wp_parameters4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    wp_parameters4_ce0 : OUT STD_LOGIC;
    wp_parameters4_q0 : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of makePatches_ShadowQuilt_fromEdges_get_acceptanceCorners is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000100";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000001000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (12 downto 0) := "0000000010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (12 downto 0) := "0000000100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (12 downto 0) := "0000001000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (12 downto 0) := "0000010000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (12 downto 0) := "0000100000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (12 downto 0) := "0001000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (12 downto 0) := "0010000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (12 downto 0) := "0100000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_8000000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_7FFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "0111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_12 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010010";
    constant ap_const_lv64_13 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010011";
    constant ap_const_lv64_14 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010100";
    constant ap_const_lv64_15 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010101";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i_reg_293 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_corner_max_reg_304 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_corner_min_reg_317 : STD_LOGIC_VECTOR (63 downto 0);
    signal b_corner_min_reg_330 : STD_LOGIC_VECTOR (63 downto 0);
    signal c_corner_max_reg_344 : STD_LOGIC_VECTOR (63 downto 0);
    signal wp_parameters3_addr_reg_543 : STD_LOGIC_VECTOR (4 downto 0);
    signal wp_parameters3_addr_1_reg_548 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal wp_parameters3_addr_3_reg_635 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_fu_370_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_reg_641 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln225_fu_374_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln225_reg_646 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln225_fu_380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln225_reg_651 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln227_fu_409_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln227_reg_655 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state4_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal a_corner_min_1_fu_457_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_corner_min_1_reg_681 : STD_LOGIC_VECTOR (63 downto 0);
    signal b_corner_min_2_fu_471_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal b_corner_min_2_reg_686 : STD_LOGIC_VECTOR (63 downto 0);
    signal c_corner_max_1_fu_485_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal d_corner_max_2_fu_499_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal wp_parameters_load_reg_701 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal wp_parameters_load_1_reg_706 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln278_fu_531_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln278_reg_723 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal icmp_ln285_fu_537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln285_reg_727 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_phi_mux_i_phi_fu_297_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_empty_106_phi_fu_360_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_106_reg_357 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln227_fu_415_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln231_fu_426_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln235_fu_436_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln239_fu_446_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal icmp_ln256_fu_507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal icmp_ln261_fu_513_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal icmp_ln266_fu_519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln271_fu_525_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal trunc_ln227_fu_385_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln227_1_fu_397_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_cast_fu_389_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_225_cast_fu_401_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln231_fu_420_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln235_fu_431_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln239_fu_441_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln227_fu_451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln231_fu_465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln239_fu_493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    a_corner_min_reg_317_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln225_reg_651 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                a_corner_min_reg_317 <= a_corner_min_1_reg_681;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                a_corner_min_reg_317 <= ap_const_lv64_7FFFFFFFFFFFFFFF;
            end if; 
        end if;
    end process;

    b_corner_min_reg_330_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln225_reg_651 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                b_corner_min_reg_330 <= b_corner_min_2_reg_686;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                b_corner_min_reg_330 <= ap_const_lv64_7FFFFFFFFFFFFFFF;
            end if; 
        end if;
    end process;

    c_corner_max_reg_344_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln225_reg_651 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                c_corner_max_reg_344 <= c_corner_max_1_fu_485_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                c_corner_max_reg_344 <= ap_const_lv64_8000000000000000;
            end if; 
        end if;
    end process;

    d_corner_max_reg_304_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln225_reg_651 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                d_corner_max_reg_304 <= d_corner_max_2_fu_499_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                d_corner_max_reg_304 <= ap_const_lv64_8000000000000000;
            end if; 
        end if;
    end process;

    empty_106_reg_357_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln278_fu_531_p2 = ap_const_lv1_0))) then 
                empty_106_reg_357 <= c_corner_max_reg_344;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln278_reg_723 = ap_const_lv1_1))) then 
                empty_106_reg_357 <= b_corner_min_reg_330;
            end if; 
        end if;
    end process;

    i_reg_293_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln225_reg_651 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                i_reg_293 <= add_ln225_reg_646;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                i_reg_293 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln225_reg_651 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                a_corner_min_1_reg_681 <= a_corner_min_1_fu_457_p3;
                b_corner_min_2_reg_686 <= b_corner_min_2_fu_471_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                add_ln225_reg_646 <= add_ln225_fu_374_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                empty_reg_641 <= empty_fu_370_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln225_reg_651 <= icmp_ln225_fu_380_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                icmp_ln278_reg_723 <= icmp_ln278_fu_531_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                icmp_ln285_reg_727 <= icmp_ln285_fu_537_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln225_fu_380_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    sub_ln227_reg_655(4 downto 1) <= sub_ln227_fu_409_p2(4 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                wp_parameters_load_1_reg_706 <= wp_parameters_q0;
                wp_parameters_load_reg_701 <= wp_parameters_q1;
            end if;
        end if;
    end process;
    sub_ln227_reg_655(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, icmp_ln225_fu_380_p2, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln225_fu_380_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((icmp_ln225_fu_380_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXX";
        end case;
    end process;
    a_corner_min_1_fu_457_p3 <= 
        wp_parameters_q1 when (icmp_ln227_fu_451_p2(0) = '1') else 
        a_corner_min_reg_317;
    add_ln225_fu_374_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_phi_fu_297_p4) + unsigned(ap_const_lv32_1));
    add_ln235_fu_431_p2 <= std_logic_vector(unsigned(sub_ln227_reg_655) + unsigned(ap_const_lv5_2));
    add_ln239_fu_441_p2 <= std_logic_vector(unsigned(sub_ln227_reg_655) + unsigned(ap_const_lv5_3));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(8);
    ap_CS_fsm_state11 <= ap_CS_fsm(9);
    ap_CS_fsm_state12 <= ap_CS_fsm(10);
    ap_CS_fsm_state13 <= ap_CS_fsm(11);
    ap_CS_fsm_state14 <= ap_CS_fsm(12);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state6 <= ap_CS_fsm(4);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
    ap_CS_fsm_state8 <= ap_CS_fsm(6);
    ap_CS_fsm_state9 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln225_fu_380_p2)
    begin
        if ((icmp_ln225_fu_380_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_empty_106_phi_fu_360_p4_assign_proc : process(b_corner_min_reg_330, icmp_ln278_reg_723, ap_CS_fsm_state13, empty_106_reg_357)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln278_reg_723 = ap_const_lv1_1))) then 
            ap_phi_mux_empty_106_phi_fu_360_p4 <= b_corner_min_reg_330;
        else 
            ap_phi_mux_empty_106_phi_fu_360_p4 <= empty_106_reg_357;
        end if; 
    end process;


    ap_phi_mux_i_phi_fu_297_p4_assign_proc : process(i_reg_293, add_ln225_reg_646, ap_CS_fsm_pp0_stage0, icmp_ln225_reg_651, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln225_reg_651 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_i_phi_fu_297_p4 <= add_ln225_reg_646;
        else 
            ap_phi_mux_i_phi_fu_297_p4 <= i_reg_293;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    b_corner_min_2_fu_471_p3 <= 
        wp_parameters_q0 when (icmp_ln231_fu_465_p2(0) = '1') else 
        b_corner_min_reg_330;
    c_corner_max_1_fu_485_p3 <= 
        wp_parameters_q1 when (icmp_ln235_fu_479_p2(0) = '1') else 
        c_corner_max_reg_344;
    d_corner_max_2_fu_499_p3 <= 
        wp_parameters_q0 when (icmp_ln239_fu_493_p2(0) = '1') else 
        d_corner_max_reg_304;
    empty_fu_370_p1 <= wp_parameters4_q0(32 - 1 downto 0);
    icmp_ln225_fu_380_p2 <= "1" when (ap_phi_mux_i_phi_fu_297_p4 = empty_reg_641) else "0";
    icmp_ln227_fu_451_p2 <= "1" when (signed(wp_parameters_q1) < signed(a_corner_min_reg_317)) else "0";
    icmp_ln231_fu_465_p2 <= "1" when (signed(wp_parameters_q0) < signed(b_corner_min_reg_330)) else "0";
    icmp_ln235_fu_479_p2 <= "1" when (signed(wp_parameters_q1) > signed(c_corner_max_reg_344)) else "0";
    icmp_ln239_fu_493_p2 <= "1" when (signed(wp_parameters_q0) > signed(d_corner_max_reg_304)) else "0";
    icmp_ln256_fu_507_p2 <= "1" when (a_corner_min_reg_317 = wp_parameters_q0) else "0";
    icmp_ln261_fu_513_p2 <= "1" when (b_corner_min_reg_330 = wp_parameters_q1) else "0";
    icmp_ln266_fu_519_p2 <= "1" when (c_corner_max_reg_344 = wp_parameters_q0) else "0";
    icmp_ln271_fu_525_p2 <= "1" when (d_corner_max_reg_304 = wp_parameters_q1) else "0";
    icmp_ln278_fu_531_p2 <= "1" when (signed(c_corner_max_reg_344) > signed(a_corner_min_reg_317)) else "0";
    icmp_ln285_fu_537_p2 <= "1" when (signed(b_corner_min_reg_330) < signed(d_corner_max_reg_304)) else "0";
    or_ln231_fu_420_p2 <= (sub_ln227_fu_409_p2 or ap_const_lv5_1);
    sub_ln227_fu_409_p2 <= std_logic_vector(unsigned(tmp_cast_fu_389_p3) - unsigned(tmp_225_cast_fu_401_p3));
    tmp_225_cast_fu_401_p3 <= (trunc_ln227_1_fu_397_p1 & ap_const_lv1_0);
    tmp_cast_fu_389_p3 <= (trunc_ln227_fu_385_p1 & ap_const_lv3_0);
    trunc_ln227_1_fu_397_p1 <= ap_phi_mux_i_phi_fu_297_p4(4 - 1 downto 0);
    trunc_ln227_fu_385_p1 <= ap_phi_mux_i_phi_fu_297_p4(2 - 1 downto 0);

    wp_parameters2_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state9, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            wp_parameters2_address0 <= ap_const_lv64_1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            wp_parameters2_address0 <= ap_const_lv64_12(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            wp_parameters2_address0 <= ap_const_lv64_6(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            wp_parameters2_address0 <= ap_const_lv64_13(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            wp_parameters2_address0 <= ap_const_lv64_7(5 - 1 downto 0);
        else 
            wp_parameters2_address0 <= "XXXXX";
        end if; 
    end process;


    wp_parameters2_address1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state9, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            wp_parameters2_address1 <= ap_const_lv64_7(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            wp_parameters2_address1 <= ap_const_lv64_C(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            wp_parameters2_address1 <= ap_const_lv64_0(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            wp_parameters2_address1 <= ap_const_lv64_D(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            wp_parameters2_address1 <= ap_const_lv64_1(5 - 1 downto 0);
        else 
            wp_parameters2_address1 <= "XXXXX";
        end if; 
    end process;


    wp_parameters2_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state9, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            wp_parameters2_ce0 <= ap_const_logic_1;
        else 
            wp_parameters2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    wp_parameters2_ce1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state9, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            wp_parameters2_ce1 <= ap_const_logic_1;
        else 
            wp_parameters2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    wp_parameters2_d0_assign_proc : process(wp_parameters_q0, d_corner_max_reg_304, b_corner_min_reg_330, ap_CS_fsm_state8, wp_parameters_load_1_reg_706, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_phi_mux_empty_106_phi_fu_360_p4, ap_CS_fsm_state9, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            wp_parameters2_d0 <= ap_phi_mux_empty_106_phi_fu_360_p4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            wp_parameters2_d0 <= wp_parameters_load_1_reg_706;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            wp_parameters2_d0 <= wp_parameters_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            wp_parameters2_d0 <= d_corner_max_reg_304;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            wp_parameters2_d0 <= b_corner_min_reg_330;
        else 
            wp_parameters2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    wp_parameters2_d1_assign_proc : process(wp_parameters_q1, a_corner_min_reg_317, b_corner_min_reg_330, c_corner_max_reg_344, wp_parameters_load_reg_701, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_phi_mux_empty_106_phi_fu_360_p4, ap_CS_fsm_state9, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            wp_parameters2_d1 <= ap_phi_mux_empty_106_phi_fu_360_p4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            wp_parameters2_d1 <= b_corner_min_reg_330;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            wp_parameters2_d1 <= wp_parameters_load_reg_701;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            wp_parameters2_d1 <= wp_parameters_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            wp_parameters2_d1 <= c_corner_max_reg_344;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            wp_parameters2_d1 <= a_corner_min_reg_317;
        else 
            wp_parameters2_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    wp_parameters2_we0_assign_proc : process(ap_CS_fsm_state8, icmp_ln278_fu_531_p2, ap_CS_fsm_state12, icmp_ln285_fu_537_p2, ap_CS_fsm_state13, ap_CS_fsm_state9, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((icmp_ln285_fu_537_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln278_fu_531_p2 = ap_const_lv1_1)))) then 
            wp_parameters2_we0 <= ap_const_logic_1;
        else 
            wp_parameters2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    wp_parameters2_we1_assign_proc : process(ap_CS_fsm_state8, icmp_ln278_fu_531_p2, ap_CS_fsm_state12, icmp_ln285_fu_537_p2, ap_CS_fsm_state13, ap_CS_fsm_state9, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((icmp_ln285_fu_537_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln278_fu_531_p2 = ap_const_lv1_1)))) then 
            wp_parameters2_we1 <= ap_const_logic_1;
        else 
            wp_parameters2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    wp_parameters3_addr_1_reg_548 <= ap_const_lv64_6(5 - 1 downto 0);
    wp_parameters3_addr_3_reg_635 <= ap_const_lv64_12(5 - 1 downto 0);
    wp_parameters3_addr_reg_543 <= ap_const_lv64_C(5 - 1 downto 0);

    wp_parameters3_address0_assign_proc : process(ap_CS_fsm_state1, wp_parameters3_addr_1_reg_548, ap_CS_fsm_state2, wp_parameters3_addr_3_reg_635, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            wp_parameters3_address0 <= wp_parameters3_addr_3_reg_635;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            wp_parameters3_address0 <= ap_const_lv64_0(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            wp_parameters3_address0 <= wp_parameters3_addr_1_reg_548;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            wp_parameters3_address0 <= ap_const_lv64_12(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            wp_parameters3_address0 <= ap_const_lv64_6(5 - 1 downto 0);
        else 
            wp_parameters3_address0 <= "XXXXX";
        end if; 
    end process;


    wp_parameters3_address1_assign_proc : process(ap_CS_fsm_state1, wp_parameters3_addr_reg_543, ap_CS_fsm_state2, ap_CS_fsm_state12, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            wp_parameters3_address1 <= ap_const_lv64_12(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            wp_parameters3_address1 <= wp_parameters3_addr_reg_543;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            wp_parameters3_address1 <= ap_const_lv64_0(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            wp_parameters3_address1 <= ap_const_lv64_C(5 - 1 downto 0);
        else 
            wp_parameters3_address1 <= "XXXXX";
        end if; 
    end process;


    wp_parameters3_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            wp_parameters3_ce0 <= ap_const_logic_1;
        else 
            wp_parameters3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    wp_parameters3_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state12, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            wp_parameters3_ce1 <= ap_const_logic_1;
        else 
            wp_parameters3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    wp_parameters3_d0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            wp_parameters3_d0 <= ap_const_lv1_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            wp_parameters3_d0 <= ap_const_lv1_1;
        else 
            wp_parameters3_d0 <= "X";
        end if; 
    end process;


    wp_parameters3_d1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state12, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            wp_parameters3_d1 <= ap_const_lv1_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wp_parameters3_d1 <= ap_const_lv1_1;
        else 
            wp_parameters3_d1 <= "X";
        end if; 
    end process;


    wp_parameters3_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln278_reg_723, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state9, icmp_ln256_fu_507_p2, ap_CS_fsm_state10, icmp_ln261_fu_513_p2, ap_CS_fsm_state11, icmp_ln266_fu_519_p2, icmp_ln271_fu_525_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((icmp_ln271_fu_525_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((icmp_ln266_fu_519_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((icmp_ln261_fu_513_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln256_fu_507_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln278_reg_723 = ap_const_lv1_1)))) then 
            wp_parameters3_we0 <= ap_const_logic_1;
        else 
            wp_parameters3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    wp_parameters3_we1_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state12, icmp_ln285_reg_727, ap_CS_fsm_state9, icmp_ln256_fu_507_p2, ap_CS_fsm_state10, icmp_ln261_fu_513_p2, ap_CS_fsm_state11, icmp_ln266_fu_519_p2, icmp_ln271_fu_525_p2, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((icmp_ln285_reg_727 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((icmp_ln271_fu_525_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((icmp_ln266_fu_519_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((icmp_ln261_fu_513_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln256_fu_507_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then 
            wp_parameters3_we1 <= ap_const_logic_1;
        else 
            wp_parameters3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    wp_parameters4_address0 <= ap_const_lv64_C(5 - 1 downto 0);

    wp_parameters4_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            wp_parameters4_ce0 <= ap_const_logic_1;
        else 
            wp_parameters4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    wp_parameters_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_state8, ap_block_pp0_stage0, zext_ln231_fu_426_p1, ap_block_pp0_stage1, zext_ln239_fu_446_p1, ap_CS_fsm_state10, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            wp_parameters_address0 <= ap_const_lv64_14(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            wp_parameters_address0 <= ap_const_lv64_12(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            wp_parameters_address0 <= ap_const_lv64_5(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            wp_parameters_address0 <= zext_ln239_fu_446_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            wp_parameters_address0 <= zext_ln231_fu_426_p1(5 - 1 downto 0);
        else 
            wp_parameters_address0 <= "XXXXX";
        end if; 
    end process;


    wp_parameters_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, zext_ln227_fu_415_p1, zext_ln235_fu_436_p1, ap_block_pp0_stage1, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            wp_parameters_address1 <= ap_const_lv64_15(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            wp_parameters_address1 <= ap_const_lv64_13(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            wp_parameters_address1 <= ap_const_lv64_4(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            wp_parameters_address1 <= zext_ln235_fu_436_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            wp_parameters_address1 <= zext_ln227_fu_415_p1(5 - 1 downto 0);
        else 
            wp_parameters_address1 <= "XXXXX";
        end if; 
    end process;


    wp_parameters_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            wp_parameters_ce0 <= ap_const_logic_1;
        else 
            wp_parameters_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    wp_parameters_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            wp_parameters_ce1 <= ap_const_logic_1;
        else 
            wp_parameters_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln227_fu_415_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln227_fu_409_p2),64));
    zext_ln231_fu_426_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln231_fu_420_p2),64));
    zext_ln235_fu_436_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln235_fu_431_p2),64));
    zext_ln239_fu_446_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln239_fu_441_p2),64));
end behav;
