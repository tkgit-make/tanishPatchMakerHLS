-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    n_patches_i : IN STD_LOGIC_VECTOR (31 downto 0);
    n_patches_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    n_patches_o_ap_vld : OUT STD_LOGIC;
    GDarray_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    GDarray_ce0 : OUT STD_LOGIC;
    GDarray_q0 : IN STD_LOGIC_VECTOR (191 downto 0);
    GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    GDn_points_ce0 : OUT STD_LOGIC;
    GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    patches_superpoints_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_superpoints_0_ce0 : OUT STD_LOGIC;
    patches_superpoints_0_we0 : OUT STD_LOGIC;
    patches_superpoints_0_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_0_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_superpoints_1_ce0 : OUT STD_LOGIC;
    patches_superpoints_1_we0 : OUT STD_LOGIC;
    patches_superpoints_1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_superpoints_2_ce0 : OUT STD_LOGIC;
    patches_superpoints_2_we0 : OUT STD_LOGIC;
    patches_superpoints_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_superpoints_3_ce0 : OUT STD_LOGIC;
    patches_superpoints_3_we0 : OUT STD_LOGIC;
    patches_superpoints_3_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_3_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_superpoints_4_ce0 : OUT STD_LOGIC;
    patches_superpoints_4_we0 : OUT STD_LOGIC;
    patches_superpoints_4_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_4_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_superpoints_5_ce0 : OUT STD_LOGIC;
    patches_superpoints_5_we0 : OUT STD_LOGIC;
    patches_superpoints_5_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_5_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_superpoints_6_ce0 : OUT STD_LOGIC;
    patches_superpoints_6_we0 : OUT STD_LOGIC;
    patches_superpoints_6_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_6_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_superpoints_7_ce0 : OUT STD_LOGIC;
    patches_superpoints_7_we0 : OUT STD_LOGIC;
    patches_superpoints_7_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_7_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_8_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_superpoints_8_ce0 : OUT STD_LOGIC;
    patches_superpoints_8_we0 : OUT STD_LOGIC;
    patches_superpoints_8_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_8_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_9_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_superpoints_9_ce0 : OUT STD_LOGIC;
    patches_superpoints_9_we0 : OUT STD_LOGIC;
    patches_superpoints_9_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_9_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_10_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_superpoints_10_ce0 : OUT STD_LOGIC;
    patches_superpoints_10_we0 : OUT STD_LOGIC;
    patches_superpoints_10_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_10_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_superpoints_11_ce0 : OUT STD_LOGIC;
    patches_superpoints_11_we0 : OUT STD_LOGIC;
    patches_superpoints_11_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_11_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_12_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_superpoints_12_ce0 : OUT STD_LOGIC;
    patches_superpoints_12_we0 : OUT STD_LOGIC;
    patches_superpoints_12_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_12_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_13_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_superpoints_13_ce0 : OUT STD_LOGIC;
    patches_superpoints_13_we0 : OUT STD_LOGIC;
    patches_superpoints_13_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_13_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_14_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_superpoints_14_ce0 : OUT STD_LOGIC;
    patches_superpoints_14_we0 : OUT STD_LOGIC;
    patches_superpoints_14_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_14_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_15_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_superpoints_15_ce0 : OUT STD_LOGIC;
    patches_superpoints_15_we0 : OUT STD_LOGIC;
    patches_superpoints_15_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_15_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_16_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_superpoints_16_ce0 : OUT STD_LOGIC;
    patches_superpoints_16_we0 : OUT STD_LOGIC;
    patches_superpoints_16_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_16_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_17_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_superpoints_17_ce0 : OUT STD_LOGIC;
    patches_superpoints_17_we0 : OUT STD_LOGIC;
    patches_superpoints_17_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_17_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_18_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_superpoints_18_ce0 : OUT STD_LOGIC;
    patches_superpoints_18_we0 : OUT STD_LOGIC;
    patches_superpoints_18_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_18_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_19_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_superpoints_19_ce0 : OUT STD_LOGIC;
    patches_superpoints_19_we0 : OUT STD_LOGIC;
    patches_superpoints_19_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_19_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_20_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_superpoints_20_ce0 : OUT STD_LOGIC;
    patches_superpoints_20_we0 : OUT STD_LOGIC;
    patches_superpoints_20_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_20_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_21_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_superpoints_21_ce0 : OUT STD_LOGIC;
    patches_superpoints_21_we0 : OUT STD_LOGIC;
    patches_superpoints_21_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_21_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_22_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_superpoints_22_ce0 : OUT STD_LOGIC;
    patches_superpoints_22_we0 : OUT STD_LOGIC;
    patches_superpoints_22_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_22_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_23_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_superpoints_23_ce0 : OUT STD_LOGIC;
    patches_superpoints_23_we0 : OUT STD_LOGIC;
    patches_superpoints_23_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_23_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_24_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_superpoints_24_ce0 : OUT STD_LOGIC;
    patches_superpoints_24_we0 : OUT STD_LOGIC;
    patches_superpoints_24_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_24_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_25_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_superpoints_25_ce0 : OUT STD_LOGIC;
    patches_superpoints_25_we0 : OUT STD_LOGIC;
    patches_superpoints_25_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_25_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_26_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_superpoints_26_ce0 : OUT STD_LOGIC;
    patches_superpoints_26_we0 : OUT STD_LOGIC;
    patches_superpoints_26_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_26_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_27_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_superpoints_27_ce0 : OUT STD_LOGIC;
    patches_superpoints_27_we0 : OUT STD_LOGIC;
    patches_superpoints_27_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_27_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_28_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_superpoints_28_ce0 : OUT STD_LOGIC;
    patches_superpoints_28_we0 : OUT STD_LOGIC;
    patches_superpoints_28_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_28_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_29_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_superpoints_29_ce0 : OUT STD_LOGIC;
    patches_superpoints_29_we0 : OUT STD_LOGIC;
    patches_superpoints_29_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_29_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_30_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_superpoints_30_ce0 : OUT STD_LOGIC;
    patches_superpoints_30_we0 : OUT STD_LOGIC;
    patches_superpoints_30_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_30_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_31_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_superpoints_31_ce0 : OUT STD_LOGIC;
    patches_superpoints_31_we0 : OUT STD_LOGIC;
    patches_superpoints_31_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_superpoints_31_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    patches_parameters_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_parameters_0_ce0 : OUT STD_LOGIC;
    patches_parameters_0_we0 : OUT STD_LOGIC;
    patches_parameters_0_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_parameters_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_parameters_1_ce0 : OUT STD_LOGIC;
    patches_parameters_1_we0 : OUT STD_LOGIC;
    patches_parameters_1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_parameters_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_parameters_2_ce0 : OUT STD_LOGIC;
    patches_parameters_2_we0 : OUT STD_LOGIC;
    patches_parameters_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_parameters_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_parameters_3_ce0 : OUT STD_LOGIC;
    patches_parameters_3_we0 : OUT STD_LOGIC;
    patches_parameters_3_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_parameters_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    patches_parameters_4_ce0 : OUT STD_LOGIC;
    patches_parameters_4_we0 : OUT STD_LOGIC;
    patches_parameters_4_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    patches_parameters_4_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    apexZ0 : IN STD_LOGIC_VECTOR (63 downto 0);
    z_top : IN STD_LOGIC_VECTOR (63 downto 0);
    p_read : IN STD_LOGIC_VECTOR (31 downto 0);
    leftRight : IN STD_LOGIC_VECTOR (0 downto 0);
    temp_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    temp_ce0 : OUT STD_LOGIC;
    temp_we0 : OUT STD_LOGIC;
    temp_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    temp_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    temp_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    temp_ce1 : OUT STD_LOGIC;
    temp_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    NPpatches_parameters_229_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    NPpatches_parameters_229_ce0 : OUT STD_LOGIC;
    NPpatches_parameters_229_we0 : OUT STD_LOGIC;
    NPpatches_parameters_229_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    NPpatches_parameters_229_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    NPpatches_parameters_229_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    NPpatches_parameters_229_ce1 : OUT STD_LOGIC;
    NPpatches_parameters_229_we1 : OUT STD_LOGIC;
    NPpatches_parameters_229_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    NPpatches_parameters_330_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    NPpatches_parameters_330_ce0 : OUT STD_LOGIC;
    NPpatches_parameters_330_we0 : OUT STD_LOGIC;
    NPpatches_parameters_330_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    NPpatches_parameters_330_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    NPpatches_parameters_330_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    NPpatches_parameters_330_ce1 : OUT STD_LOGIC;
    NPpatches_parameters_330_we1 : OUT STD_LOGIC;
    NPpatches_parameters_330_d1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000100000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (18 downto 0) := "0000000010000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (18 downto 0) := "0000000100000000000";
    constant ap_ST_fsm_pp4_stage0 : STD_LOGIC_VECTOR (18 downto 0) := "0000001000000000000";
    constant ap_ST_fsm_pp4_stage1 : STD_LOGIC_VECTOR (18 downto 0) := "0000010000000000000";
    constant ap_ST_fsm_pp4_stage2 : STD_LOGIC_VECTOR (18 downto 0) := "0000100000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (18 downto 0) := "0001000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (18 downto 0) := "0010000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (18 downto 0) := "0100000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (18 downto 0) := "1000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv72_0 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv64_63 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001100011";
    constant ap_const_lv64_66 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001100110";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_2D0 : STD_LOGIC_VECTOR (9 downto 0) := "1011010000";
    constant ap_const_lv8_90 : STD_LOGIC_VECTOR (7 downto 0) := "10010000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv7_30 : STD_LOGIC_VECTOR (6 downto 0) := "0110000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv7_78 : STD_LOGIC_VECTOR (6 downto 0) := "1111000";
    constant ap_const_lv6_18 : STD_LOGIC_VECTOR (5 downto 0) := "011000";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv72_90 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000000000000000000000000010010000";
    constant ap_const_lv72_1 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_FFFFFFFFFEB04E1C : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111110101100000100111000011100";
    constant ap_const_lv64_14FB1E4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000001010011111011000111100100";
    constant ap_const_lv26_15EF424 : STD_LOGIC_VECTOR (25 downto 0) := "01010111101111010000100100";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv30_1 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000001";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal NPpatches_parameters_128_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten151_reg_1006 : STD_LOGIC_VECTOR (71 downto 0);
    signal i_16_reg_1017 : STD_LOGIC_VECTOR (63 downto 0);
    signal indvar_flatten127_reg_1028 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_4_reg_1039 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten113_reg_1050 : STD_LOGIC_VECTOR (6 downto 0);
    signal b_8_reg_1061 : STD_LOGIC_VECTOR (4 downto 0);
    signal c_8_reg_1072 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_20_reg_1083 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln1077_2_fu_1254_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal select_ln1077_2_fu_1316_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln1077_fu_1260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1079_3_fu_1344_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln1081_3_fu_1408_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1083_fu_1467_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln1081_4_fu_1479_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln1079_4_fu_1493_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_17_fu_1501_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_17_reg_2603 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln1098_fu_1507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal add_ln1105_2_fu_1521_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal select_ln1105_2_fu_1583_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln1105_fu_1527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1107_3_fu_1611_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln1109_3_fu_1675_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1111_fu_1734_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln1109_4_fu_1746_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln1107_4_fu_1760_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1120_2_fu_1768_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal select_ln1120_2_fu_1818_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln1120_fu_1774_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1122_3_fu_1846_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln1124_fu_1900_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln1122_4_fu_1912_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1133_fu_1920_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1133_reg_2688 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal mul_ln1133_fu_1928_p2 : STD_LOGIC_VECTOR (71 downto 0);
    signal mul_ln1133_reg_2693 : STD_LOGIC_VECTOR (71 downto 0);
    signal add_ln93_fu_1934_p2 : STD_LOGIC_VECTOR (71 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal ap_block_state10_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state11_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal icmp_ln93_fu_1940_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln93_reg_2703 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln93_2_fu_1965_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln93_2_reg_2707 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln93_fu_1973_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln93_reg_2712 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln96_3_fu_2027_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln96_3_reg_2717 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln98_3_fu_2091_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln98_3_reg_2722 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_superpoints_0_addr_6_reg_2752 : STD_LOGIC_VECTOR (7 downto 0);
    signal NPpatches_superpoints_1_addr_2_reg_2757 : STD_LOGIC_VECTOR (7 downto 0);
    signal NPpatches_superpoints_2_addr_2_reg_2762 : STD_LOGIC_VECTOR (7 downto 0);
    signal NPpatches_superpoints_3_addr_2_reg_2767 : STD_LOGIC_VECTOR (7 downto 0);
    signal NPpatches_superpoints_4_addr_2_reg_2772 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln100_fu_2155_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln98_4_fu_2167_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln96_4_fu_2181_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal NPpatches_superpoints_0_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal NPpatches_superpoints_0_load_reg_2799 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal NPpatches_superpoints_0_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal NPpatches_superpoints_0_load_2_reg_2804 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln44_fu_2264_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln44_reg_2809 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln42_fu_2276_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln42_reg_2815 : STD_LOGIC_VECTOR (63 downto 0);
    signal NPpatches_superpoints_1_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal NPpatches_superpoints_1_load_reg_2821 : STD_LOGIC_VECTOR (63 downto 0);
    signal NPpatches_superpoints_2_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal NPpatches_superpoints_2_load_reg_2826 : STD_LOGIC_VECTOR (63 downto 0);
    signal NPpatches_superpoints_3_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal NPpatches_superpoints_3_load_reg_2831 : STD_LOGIC_VECTOR (63 downto 0);
    signal NPpatches_superpoints_4_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal NPpatches_superpoints_4_load_reg_2836 : STD_LOGIC_VECTOR (63 downto 0);
    signal NPpatches_superpoints_1_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal NPpatches_superpoints_1_load_2_reg_2841 : STD_LOGIC_VECTOR (63 downto 0);
    signal NPpatches_superpoints_2_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal NPpatches_superpoints_2_load_2_reg_2846 : STD_LOGIC_VECTOR (63 downto 0);
    signal NPpatches_superpoints_3_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal NPpatches_superpoints_3_load_2_reg_2851 : STD_LOGIC_VECTOR (63 downto 0);
    signal NPpatches_superpoints_4_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal NPpatches_superpoints_4_load_2_reg_2856 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln57_fu_2284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln57_reg_2861 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage0 : signal is "none";
    signal ap_block_state14_pp4_stage0_iter0 : BOOLEAN;
    signal ap_block_state17_pp4_stage0_iter1 : BOOLEAN;
    signal ap_block_state20_pp4_stage0_iter2 : BOOLEAN;
    signal ap_block_state23_pp4_stage0_iter3 : BOOLEAN;
    signal ap_block_state26_pp4_stage0_iter4 : BOOLEAN;
    signal ap_block_pp4_stage0_11001 : BOOLEAN;
    signal icmp_ln57_reg_2861_pp4_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln57_reg_2861_pp4_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln57_reg_2861_pp4_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln57_reg_2861_pp4_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln61_fu_2293_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln61_reg_2865 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln70_fu_2307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln70_reg_2871 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln70_reg_2871_pp4_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln70_reg_2871_pp4_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln70_reg_2871_pp4_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln70_reg_2871_pp4_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln72_fu_2337_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln72_reg_2875 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln72_reg_2875_pp4_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln72_reg_2875_pp4_iter2_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln72_reg_2875_pp4_iter3_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal j_fu_2343_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal j_reg_2880 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_pp4_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage1 : signal is "none";
    signal ap_enable_reg_pp4_iter0 : STD_LOGIC := '0';
    signal ap_block_state15_pp4_stage1_iter0 : BOOLEAN;
    signal ap_block_state18_pp4_stage1_iter1 : BOOLEAN;
    signal ap_block_state21_pp4_stage1_iter2 : BOOLEAN;
    signal ap_block_state24_pp4_stage1_iter3 : BOOLEAN;
    signal ap_block_state27_pp4_stage1_iter4 : BOOLEAN;
    signal ap_block_pp4_stage1_11001 : BOOLEAN;
    signal zext_ln64_fu_2361_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln64_reg_2885 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln73_fu_2391_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln73_reg_2891 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln73_reg_2891_pp4_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln73_reg_2891_pp4_iter2_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln73_reg_2891_pp4_iter3_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln73_reg_2891_pp4_iter4_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1216_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal c_7_reg_2898 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp4_iter4 : STD_LOGIC := '0';
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1230_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal d_5_reg_2903 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state10 : STD_LOGIC;
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_block_pp4_stage0_subdone : BOOLEAN;
    signal ap_condition_pp4_exit_iter0_state14 : STD_LOGIC;
    signal ap_enable_reg_pp4_iter1 : STD_LOGIC := '0';
    signal ap_block_state16_pp4_stage2_iter0 : BOOLEAN;
    signal ap_block_state19_pp4_stage2_iter1 : BOOLEAN;
    signal ap_block_state22_pp4_stage2_iter2 : BOOLEAN;
    signal ap_block_state25_pp4_stage2_iter3 : BOOLEAN;
    signal ap_block_state28_pp4_stage2_iter4 : BOOLEAN;
    signal ap_block_pp4_stage2_subdone : BOOLEAN;
    signal ap_CS_fsm_pp4_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage2 : signal is "none";
    signal ap_enable_reg_pp4_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp4_iter3 : STD_LOGIC := '0';
    signal init_patch_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal init_patch_0_ce0 : STD_LOGIC;
    signal init_patch_0_we0 : STD_LOGIC;
    signal init_patch_0_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal init_patch_0_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal init_patch_0_ce1 : STD_LOGIC;
    signal init_patch_0_we1 : STD_LOGIC;
    signal init_patch_0_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal init_patch_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal init_patch_1_ce0 : STD_LOGIC;
    signal init_patch_1_we0 : STD_LOGIC;
    signal init_patch_1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal init_patch_1_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal init_patch_1_ce1 : STD_LOGIC;
    signal init_patch_1_we1 : STD_LOGIC;
    signal init_patch_1_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal init_patch_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal init_patch_2_ce0 : STD_LOGIC;
    signal init_patch_2_we0 : STD_LOGIC;
    signal init_patch_2_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal init_patch_2_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal init_patch_2_ce1 : STD_LOGIC;
    signal init_patch_2_we1 : STD_LOGIC;
    signal init_patch_2_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal init_patch_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal init_patch_3_ce0 : STD_LOGIC;
    signal init_patch_3_we0 : STD_LOGIC;
    signal init_patch_3_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal init_patch_3_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal init_patch_3_ce1 : STD_LOGIC;
    signal init_patch_3_we1 : STD_LOGIC;
    signal init_patch_3_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal init_patch_4_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal init_patch_4_ce0 : STD_LOGIC;
    signal init_patch_4_we0 : STD_LOGIC;
    signal init_patch_4_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal init_patch_4_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal init_patch_4_ce1 : STD_LOGIC;
    signal init_patch_4_we1 : STD_LOGIC;
    signal init_patch_4_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal NPpatches_superpoints_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal NPpatches_superpoints_0_ce0 : STD_LOGIC;
    signal NPpatches_superpoints_0_we0 : STD_LOGIC;
    signal NPpatches_superpoints_0_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal NPpatches_superpoints_0_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal NPpatches_superpoints_0_ce1 : STD_LOGIC;
    signal NPpatches_superpoints_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal NPpatches_superpoints_1_ce0 : STD_LOGIC;
    signal NPpatches_superpoints_1_we0 : STD_LOGIC;
    signal NPpatches_superpoints_1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal NPpatches_superpoints_1_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal NPpatches_superpoints_1_ce1 : STD_LOGIC;
    signal NPpatches_superpoints_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal NPpatches_superpoints_2_ce0 : STD_LOGIC;
    signal NPpatches_superpoints_2_we0 : STD_LOGIC;
    signal NPpatches_superpoints_2_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal NPpatches_superpoints_2_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal NPpatches_superpoints_2_ce1 : STD_LOGIC;
    signal NPpatches_superpoints_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal NPpatches_superpoints_3_ce0 : STD_LOGIC;
    signal NPpatches_superpoints_3_we0 : STD_LOGIC;
    signal NPpatches_superpoints_3_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal NPpatches_superpoints_3_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal NPpatches_superpoints_3_ce1 : STD_LOGIC;
    signal NPpatches_superpoints_4_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal NPpatches_superpoints_4_ce0 : STD_LOGIC;
    signal NPpatches_superpoints_4_we0 : STD_LOGIC;
    signal NPpatches_superpoints_4_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal NPpatches_superpoints_4_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal NPpatches_superpoints_4_ce1 : STD_LOGIC;
    signal NPpatches_parameters_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_parameters_0_ce0 : STD_LOGIC;
    signal NPpatches_parameters_0_we0 : STD_LOGIC;
    signal NPpatches_parameters_0_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal NPpatches_parameters_0_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal NPpatches_parameters_0_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_parameters_0_ce1 : STD_LOGIC;
    signal NPpatches_parameters_0_we1 : STD_LOGIC;
    signal NPpatches_parameters_0_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal NPpatches_parameters_0_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal NPpatches_parameters_4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_parameters_4_ce0 : STD_LOGIC;
    signal NPpatches_parameters_4_we0 : STD_LOGIC;
    signal NPpatches_parameters_4_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal NPpatches_parameters_4_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal NPpatches_parameters_4_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal NPpatches_parameters_4_ce1 : STD_LOGIC;
    signal NPpatches_parameters_4_we1 : STD_LOGIC;
    signal NPpatches_parameters_4_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal NPpatches_parameters_4_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_makeSuperPoint_alignedToLine_fu_1095_ap_start : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine_fu_1095_ap_done : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine_fu_1095_ap_idle : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine_fu_1095_ap_ready : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine_fu_1095_GDarray_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_makeSuperPoint_alignedToLine_fu_1095_GDarray_ce0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine_fu_1095_GDn_points_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_makeSuperPoint_alignedToLine_fu_1095_GDn_points_ce0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch_ce0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch_we0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch_ce1 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch_we1 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch1_ce0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch1_we0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch1_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch1_ce1 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch1_we1 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch1_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch2_ce0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch2_we0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch2_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch2_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch2_ce1 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch2_we1 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch2_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch3_ce0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch3_we0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch3_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch3_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch3_ce1 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch3_we1 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch3_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch4_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch4_ce0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch4_we0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch4_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch4_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch4_ce1 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch4_we1 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine_fu_1095_init_patch4_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_makeSuperPoint_alignedToLine_fu_1095_temp_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_makeSuperPoint_alignedToLine_fu_1095_temp_ce0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine_fu_1095_temp_we0 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine_fu_1095_temp_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_makeSuperPoint_alignedToLine_fu_1095_temp_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_makeSuperPoint_alignedToLine_fu_1095_temp_ce1 : STD_LOGIC;
    signal grp_makeSuperPoint_alignedToLine_fu_1095_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_makeSuperPoint_alignedToLine_fu_1095_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_add_patch_111_fu_1122_ap_start : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_ap_done : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_ap_idle : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_ap_ready : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_n_patches : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_add_patch_111_fu_1122_n_patches_ap_vld : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_0_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_0_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_0_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_1_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_1_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_2_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_2_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_2_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_3_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_3_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_3_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_4_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_4_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_4_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_5_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_5_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_5_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_6_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_6_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_6_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_7_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_7_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_7_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_8_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_8_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_8_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_8_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_9_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_9_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_9_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_9_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_10_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_10_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_10_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_10_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_11_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_11_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_11_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_11_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_12_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_12_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_12_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_12_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_13_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_13_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_13_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_13_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_14_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_14_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_14_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_14_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_15_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_15_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_15_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_15_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_16_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_16_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_16_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_16_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_17_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_17_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_17_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_17_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_18_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_18_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_18_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_18_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_19_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_19_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_19_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_19_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_20_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_20_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_20_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_20_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_21_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_21_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_21_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_21_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_22_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_22_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_22_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_22_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_23_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_23_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_23_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_23_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_24_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_24_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_24_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_24_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_25_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_25_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_25_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_25_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_26_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_26_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_26_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_26_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_27_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_27_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_27_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_27_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_28_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_28_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_28_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_28_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_29_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_29_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_29_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_29_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_30_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_30_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_30_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_30_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_31_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_superpoints_31_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_31_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_superpoints_31_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_parameters_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_parameters_0_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_parameters_0_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_parameters_0_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_parameters_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_parameters_1_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_parameters_1_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_parameters_1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_parameters_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_parameters_2_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_parameters_2_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_parameters_2_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_parameters_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_parameters_3_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_parameters_3_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_parameters_3_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_patches_parameters_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_add_patch_111_fu_1122_patches_parameters_4_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_parameters_4_we0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_patches_parameters_4_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_add_patch_111_fu_1122_wp_superpoints_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_add_patch_111_fu_1122_wp_superpoints_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_wp_superpoints_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_add_patch_111_fu_1122_wp_superpoints_ce1 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_wp_superpoints1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_add_patch_111_fu_1122_wp_superpoints1_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_wp_superpoints1_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_add_patch_111_fu_1122_wp_superpoints1_ce1 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_wp_superpoints2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_add_patch_111_fu_1122_wp_superpoints2_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_wp_superpoints2_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_add_patch_111_fu_1122_wp_superpoints2_ce1 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_wp_superpoints3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_add_patch_111_fu_1122_wp_superpoints3_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_wp_superpoints3_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_add_patch_111_fu_1122_wp_superpoints3_ce1 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_wp_superpoints4_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_add_patch_111_fu_1122_wp_superpoints4_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_wp_superpoints4_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_add_patch_111_fu_1122_wp_superpoints4_ce1 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_wp_parameters_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch_111_fu_1122_wp_parameters_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_wp_parameters5_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch_111_fu_1122_wp_parameters5_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_wp_parameters6_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch_111_fu_1122_wp_parameters6_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_wp_parameters7_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch_111_fu_1122_wp_parameters7_ce0 : STD_LOGIC;
    signal grp_add_patch_111_fu_1122_wp_parameters8_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_add_patch_111_fu_1122_wp_parameters8_ce0 : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1216_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1216_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1216_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1216_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1216_z_j : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1216_j : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1230_ap_start : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1230_ap_done : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1230_ap_idle : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1230_ap_ready : STD_LOGIC;
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1230_z_j : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1230_j : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_get_acceptanceCorners_fu_1244_ap_start : STD_LOGIC;
    signal grp_get_acceptanceCorners_fu_1244_ap_done : STD_LOGIC;
    signal grp_get_acceptanceCorners_fu_1244_ap_idle : STD_LOGIC;
    signal grp_get_acceptanceCorners_fu_1244_ap_ready : STD_LOGIC;
    signal grp_get_acceptanceCorners_fu_1244_wp_parameters_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_get_acceptanceCorners_fu_1244_wp_parameters_ce0 : STD_LOGIC;
    signal grp_get_acceptanceCorners_fu_1244_wp_parameters_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_get_acceptanceCorners_fu_1244_wp_parameters_ce1 : STD_LOGIC;
    signal grp_get_acceptanceCorners_fu_1244_wp_parameters2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_get_acceptanceCorners_fu_1244_wp_parameters2_ce0 : STD_LOGIC;
    signal grp_get_acceptanceCorners_fu_1244_wp_parameters2_we0 : STD_LOGIC;
    signal grp_get_acceptanceCorners_fu_1244_wp_parameters2_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_get_acceptanceCorners_fu_1244_wp_parameters2_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_get_acceptanceCorners_fu_1244_wp_parameters2_ce1 : STD_LOGIC;
    signal grp_get_acceptanceCorners_fu_1244_wp_parameters2_we1 : STD_LOGIC;
    signal grp_get_acceptanceCorners_fu_1244_wp_parameters2_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_get_acceptanceCorners_fu_1244_wp_parameters3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_get_acceptanceCorners_fu_1244_wp_parameters3_ce0 : STD_LOGIC;
    signal grp_get_acceptanceCorners_fu_1244_wp_parameters3_we0 : STD_LOGIC;
    signal grp_get_acceptanceCorners_fu_1244_wp_parameters3_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_get_acceptanceCorners_fu_1244_wp_parameters3_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_get_acceptanceCorners_fu_1244_wp_parameters3_ce1 : STD_LOGIC;
    signal grp_get_acceptanceCorners_fu_1244_wp_parameters3_we1 : STD_LOGIC;
    signal grp_get_acceptanceCorners_fu_1244_wp_parameters3_d1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_get_acceptanceCorners_fu_1244_wp_parameters4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_get_acceptanceCorners_fu_1244_wp_parameters4_ce0 : STD_LOGIC;
    signal indvar_flatten37_reg_763 : STD_LOGIC_VECTOR (9 downto 0);
    signal a_reg_774 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten13_reg_785 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_reg_796 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten_reg_807 : STD_LOGIC_VECTOR (6 downto 0);
    signal c_reg_818 : STD_LOGIC_VECTOR (4 downto 0);
    signal d_reg_829 : STD_LOGIC_VECTOR (1 downto 0);
    signal superpoint_count_assign_reg_840 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ppl_0_reg_852 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_862 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten83_reg_874 : STD_LOGIC_VECTOR (9 downto 0);
    signal b_5_reg_885 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten59_reg_896 : STD_LOGIC_VECTOR (7 downto 0);
    signal c_5_reg_907 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten45_reg_918 : STD_LOGIC_VECTOR (6 downto 0);
    signal d_4_reg_929 : STD_LOGIC_VECTOR (4 downto 0);
    signal e_reg_940 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten105_reg_951 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal b_6_reg_962 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten91_reg_973 : STD_LOGIC_VECTOR (5 downto 0);
    signal c_6_reg_984 : STD_LOGIC_VECTOR (2 downto 0);
    signal d_6_reg_995 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_i_16_phi_fu_1021_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal ap_phi_mux_a_4_phi_fu_1043_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_b_8_phi_fu_1065_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_i_20_phi_fu_1087_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_block_pp4_stage0 : BOOLEAN;
    signal grp_makeSuperPoint_alignedToLine_fu_1095_ap_start_reg : STD_LOGIC := '0';
    signal grp_add_patch_111_fu_1122_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1216_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp4_stage1 : BOOLEAN;
    signal ap_block_pp4_stage2 : BOOLEAN;
    signal z_j_max_fu_2349_p7 : STD_LOGIC_VECTOR (63 downto 0);
    signal z_j_min_fu_2431_p7 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_straightLineProjectorFromLayerIJtoK_fu_1230_ap_start_reg : STD_LOGIC := '0';
    signal grp_get_acceptanceCorners_fu_1244_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal zext_ln1085_4_fu_1458_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1113_4_fu_1725_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1126_4_fu_1894_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln102_4_fu_2141_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln76_fu_2403_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_fu_2414_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln72_fu_2443_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln73_2_fu_2452_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln74_fu_2462_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln75_fu_2472_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_101_fu_334 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln79_fu_2419_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal tmp_fu_2189_p7 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp4_stage2_11001 : BOOLEAN;
    signal icmp_ln1079_fu_1272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1083_fu_1292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1077_fu_1286_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1081_fu_1304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1077_fu_1266_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln1077_fu_1278_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln1077_2_fu_1310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1079_fu_1330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1079_fu_1324_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_149_fu_1352_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln1079_fu_1364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1077_fu_1298_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1079_2_fu_1370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1079_fu_1336_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln1079_fu_1376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1081_fu_1388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1081_2_fu_1394_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1081_fu_1382_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln1081_fu_1360_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal zext_ln1085_fu_1416_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln1085_fu_1420_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln1085_2_fu_1430_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl_cast_fu_1434_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1085_fu_1426_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1081_fu_1400_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln1085_fu_1442_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1085_3_fu_1448_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1085_2_fu_1452_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1081_2_fu_1473_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1079_2_fu_1487_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1107_fu_1539_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1111_fu_1559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1105_fu_1553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1109_fu_1571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1105_fu_1533_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln1105_fu_1545_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln1105_2_fu_1577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1107_fu_1597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1107_fu_1591_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_150_fu_1619_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln1107_fu_1631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1105_fu_1565_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1107_2_fu_1637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1107_fu_1603_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln1107_fu_1643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1109_fu_1655_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1109_2_fu_1661_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1109_fu_1649_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln1109_fu_1627_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal zext_ln1113_fu_1683_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln1113_fu_1687_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln1113_2_fu_1697_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl5_cast_fu_1701_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1113_fu_1693_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1109_fu_1667_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln1113_fu_1709_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1113_3_fu_1715_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1113_2_fu_1719_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1109_2_fu_1740_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1107_2_fu_1754_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1122_fu_1786_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1124_fu_1806_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1120_fu_1800_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1120_fu_1780_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln1120_fu_1792_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln1120_fu_1812_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1122_fu_1832_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1122_fu_1826_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln1126_fu_1854_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_151_fu_1866_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl6_cast_fu_1858_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln1126_fu_1874_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln1122_fu_1838_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln1126_fu_1878_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln1126_3_fu_1884_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1126_fu_1888_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1122_2_fu_1906_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln1133_fu_1928_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln1133_fu_1928_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln96_fu_1951_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_19_fu_1945_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln100_fu_1983_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln93_fu_1977_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln98_fu_1995_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln93_fu_1957_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln93_2_fu_2001_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln96_fu_2013_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln96_fu_2007_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_152_fu_2035_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln96_fu_2047_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln93_fu_1989_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln96_2_fu_2053_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln96_fu_2019_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln96_fu_2059_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln98_fu_2071_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln98_2_fu_2077_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln98_fu_2065_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln98_fu_2043_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal zext_ln102_fu_2099_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln102_fu_2103_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln102_2_fu_2113_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl8_cast_fu_2117_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln102_fu_2109_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln98_fu_2083_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln102_fu_2125_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln102_3_fu_2131_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln102_2_fu_2135_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln98_2_fu_2161_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln96_2_fu_2175_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln41_fu_2214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal z1_min_fu_2220_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln42_fu_2232_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal z1_max_fu_2238_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln44_fu_2250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln41_fu_2228_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal z1_min_2_fu_2256_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln42_fu_2246_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal z1_max_2_fu_2268_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal i_17_cast_fu_2280_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_153_fu_2297_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal trunc_ln72_fu_2313_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln72_2_fu_2325_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_194_cast_fu_2317_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_196_cast_fu_2329_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln73_fu_2367_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_130_fu_2379_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_2371_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln73_fu_2387_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln76_fu_2397_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln77_fu_2408_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln73_fu_2447_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln74_fu_2457_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln75_fu_2467_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_block_pp4_stage1_subdone : BOOLEAN;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal ap_idle_pp4 : STD_LOGIC;
    signal ap_enable_pp4 : STD_LOGIC;
    signal mul_ln1133_fu_1928_p00 : STD_LOGIC_VECTOR (71 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        GDarray_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        GDarray_ce0 : OUT STD_LOGIC;
        GDarray_q0 : IN STD_LOGIC_VECTOR (191 downto 0);
        GDn_points_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        GDn_points_ce0 : OUT STD_LOGIC;
        GDn_points_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        i : IN STD_LOGIC_VECTOR (2 downto 0);
        z_top : IN STD_LOGIC_VECTOR (63 downto 0);
        apexZ0 : IN STD_LOGIC_VECTOR (63 downto 0);
        original_ppl : IN STD_LOGIC_VECTOR (31 downto 0);
        leftRight_offset : IN STD_LOGIC_VECTOR (0 downto 0);
        init_patch_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        init_patch_ce0 : OUT STD_LOGIC;
        init_patch_we0 : OUT STD_LOGIC;
        init_patch_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        init_patch_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        init_patch_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        init_patch_ce1 : OUT STD_LOGIC;
        init_patch_we1 : OUT STD_LOGIC;
        init_patch_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        init_patch_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        init_patch1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        init_patch1_ce0 : OUT STD_LOGIC;
        init_patch1_we0 : OUT STD_LOGIC;
        init_patch1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        init_patch1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        init_patch1_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        init_patch1_ce1 : OUT STD_LOGIC;
        init_patch1_we1 : OUT STD_LOGIC;
        init_patch1_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        init_patch1_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        init_patch2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        init_patch2_ce0 : OUT STD_LOGIC;
        init_patch2_we0 : OUT STD_LOGIC;
        init_patch2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        init_patch2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        init_patch2_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        init_patch2_ce1 : OUT STD_LOGIC;
        init_patch2_we1 : OUT STD_LOGIC;
        init_patch2_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        init_patch2_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        init_patch3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        init_patch3_ce0 : OUT STD_LOGIC;
        init_patch3_we0 : OUT STD_LOGIC;
        init_patch3_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        init_patch3_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        init_patch3_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        init_patch3_ce1 : OUT STD_LOGIC;
        init_patch3_we1 : OUT STD_LOGIC;
        init_patch3_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        init_patch3_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        init_patch4_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        init_patch4_ce0 : OUT STD_LOGIC;
        init_patch4_we0 : OUT STD_LOGIC;
        init_patch4_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        init_patch4_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        init_patch4_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        init_patch4_ce1 : OUT STD_LOGIC;
        init_patch4_we1 : OUT STD_LOGIC;
        init_patch4_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        init_patch4_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
        temp_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        temp_ce0 : OUT STD_LOGIC;
        temp_we0 : OUT STD_LOGIC;
        temp_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        temp_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        temp_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        temp_ce1 : OUT STD_LOGIC;
        temp_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_add_patch_111 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        n_patches : OUT STD_LOGIC_VECTOR (31 downto 0);
        n_patches_ap_vld : OUT STD_LOGIC;
        n_patches_read : IN STD_LOGIC_VECTOR (31 downto 0);
        patches_superpoints_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_superpoints_0_ce0 : OUT STD_LOGIC;
        patches_superpoints_0_we0 : OUT STD_LOGIC;
        patches_superpoints_0_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_0_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_superpoints_1_ce0 : OUT STD_LOGIC;
        patches_superpoints_1_we0 : OUT STD_LOGIC;
        patches_superpoints_1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_superpoints_2_ce0 : OUT STD_LOGIC;
        patches_superpoints_2_we0 : OUT STD_LOGIC;
        patches_superpoints_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_superpoints_3_ce0 : OUT STD_LOGIC;
        patches_superpoints_3_we0 : OUT STD_LOGIC;
        patches_superpoints_3_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_3_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_superpoints_4_ce0 : OUT STD_LOGIC;
        patches_superpoints_4_we0 : OUT STD_LOGIC;
        patches_superpoints_4_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_4_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_superpoints_5_ce0 : OUT STD_LOGIC;
        patches_superpoints_5_we0 : OUT STD_LOGIC;
        patches_superpoints_5_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_5_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_superpoints_6_ce0 : OUT STD_LOGIC;
        patches_superpoints_6_we0 : OUT STD_LOGIC;
        patches_superpoints_6_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_6_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_superpoints_7_ce0 : OUT STD_LOGIC;
        patches_superpoints_7_we0 : OUT STD_LOGIC;
        patches_superpoints_7_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_7_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_8_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_superpoints_8_ce0 : OUT STD_LOGIC;
        patches_superpoints_8_we0 : OUT STD_LOGIC;
        patches_superpoints_8_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_8_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_9_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_superpoints_9_ce0 : OUT STD_LOGIC;
        patches_superpoints_9_we0 : OUT STD_LOGIC;
        patches_superpoints_9_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_9_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_10_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_superpoints_10_ce0 : OUT STD_LOGIC;
        patches_superpoints_10_we0 : OUT STD_LOGIC;
        patches_superpoints_10_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_10_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_superpoints_11_ce0 : OUT STD_LOGIC;
        patches_superpoints_11_we0 : OUT STD_LOGIC;
        patches_superpoints_11_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_11_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_12_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_superpoints_12_ce0 : OUT STD_LOGIC;
        patches_superpoints_12_we0 : OUT STD_LOGIC;
        patches_superpoints_12_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_12_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_13_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_superpoints_13_ce0 : OUT STD_LOGIC;
        patches_superpoints_13_we0 : OUT STD_LOGIC;
        patches_superpoints_13_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_13_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_14_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_superpoints_14_ce0 : OUT STD_LOGIC;
        patches_superpoints_14_we0 : OUT STD_LOGIC;
        patches_superpoints_14_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_14_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_15_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_superpoints_15_ce0 : OUT STD_LOGIC;
        patches_superpoints_15_we0 : OUT STD_LOGIC;
        patches_superpoints_15_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_15_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_16_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_superpoints_16_ce0 : OUT STD_LOGIC;
        patches_superpoints_16_we0 : OUT STD_LOGIC;
        patches_superpoints_16_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_16_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_17_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_superpoints_17_ce0 : OUT STD_LOGIC;
        patches_superpoints_17_we0 : OUT STD_LOGIC;
        patches_superpoints_17_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_17_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_18_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_superpoints_18_ce0 : OUT STD_LOGIC;
        patches_superpoints_18_we0 : OUT STD_LOGIC;
        patches_superpoints_18_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_18_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_19_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_superpoints_19_ce0 : OUT STD_LOGIC;
        patches_superpoints_19_we0 : OUT STD_LOGIC;
        patches_superpoints_19_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_19_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_20_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_superpoints_20_ce0 : OUT STD_LOGIC;
        patches_superpoints_20_we0 : OUT STD_LOGIC;
        patches_superpoints_20_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_20_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_21_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_superpoints_21_ce0 : OUT STD_LOGIC;
        patches_superpoints_21_we0 : OUT STD_LOGIC;
        patches_superpoints_21_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_21_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_22_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_superpoints_22_ce0 : OUT STD_LOGIC;
        patches_superpoints_22_we0 : OUT STD_LOGIC;
        patches_superpoints_22_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_22_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_23_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_superpoints_23_ce0 : OUT STD_LOGIC;
        patches_superpoints_23_we0 : OUT STD_LOGIC;
        patches_superpoints_23_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_23_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_24_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_superpoints_24_ce0 : OUT STD_LOGIC;
        patches_superpoints_24_we0 : OUT STD_LOGIC;
        patches_superpoints_24_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_24_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_25_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_superpoints_25_ce0 : OUT STD_LOGIC;
        patches_superpoints_25_we0 : OUT STD_LOGIC;
        patches_superpoints_25_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_25_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_26_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_superpoints_26_ce0 : OUT STD_LOGIC;
        patches_superpoints_26_we0 : OUT STD_LOGIC;
        patches_superpoints_26_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_26_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_27_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_superpoints_27_ce0 : OUT STD_LOGIC;
        patches_superpoints_27_we0 : OUT STD_LOGIC;
        patches_superpoints_27_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_27_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_28_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_superpoints_28_ce0 : OUT STD_LOGIC;
        patches_superpoints_28_we0 : OUT STD_LOGIC;
        patches_superpoints_28_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_28_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_29_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_superpoints_29_ce0 : OUT STD_LOGIC;
        patches_superpoints_29_we0 : OUT STD_LOGIC;
        patches_superpoints_29_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_29_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_30_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_superpoints_30_ce0 : OUT STD_LOGIC;
        patches_superpoints_30_we0 : OUT STD_LOGIC;
        patches_superpoints_30_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_30_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_31_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_superpoints_31_ce0 : OUT STD_LOGIC;
        patches_superpoints_31_we0 : OUT STD_LOGIC;
        patches_superpoints_31_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_superpoints_31_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        patches_parameters_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_parameters_0_ce0 : OUT STD_LOGIC;
        patches_parameters_0_we0 : OUT STD_LOGIC;
        patches_parameters_0_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_parameters_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_parameters_1_ce0 : OUT STD_LOGIC;
        patches_parameters_1_we0 : OUT STD_LOGIC;
        patches_parameters_1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_parameters_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_parameters_2_ce0 : OUT STD_LOGIC;
        patches_parameters_2_we0 : OUT STD_LOGIC;
        patches_parameters_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_parameters_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_parameters_3_ce0 : OUT STD_LOGIC;
        patches_parameters_3_we0 : OUT STD_LOGIC;
        patches_parameters_3_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_parameters_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        patches_parameters_4_ce0 : OUT STD_LOGIC;
        patches_parameters_4_we0 : OUT STD_LOGIC;
        patches_parameters_4_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        patches_parameters_4_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        wp_superpoints_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        wp_superpoints_ce0 : OUT STD_LOGIC;
        wp_superpoints_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        wp_superpoints_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        wp_superpoints_ce1 : OUT STD_LOGIC;
        wp_superpoints_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        wp_superpoints1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        wp_superpoints1_ce0 : OUT STD_LOGIC;
        wp_superpoints1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        wp_superpoints1_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        wp_superpoints1_ce1 : OUT STD_LOGIC;
        wp_superpoints1_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        wp_superpoints2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        wp_superpoints2_ce0 : OUT STD_LOGIC;
        wp_superpoints2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        wp_superpoints2_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        wp_superpoints2_ce1 : OUT STD_LOGIC;
        wp_superpoints2_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        wp_superpoints3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        wp_superpoints3_ce0 : OUT STD_LOGIC;
        wp_superpoints3_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        wp_superpoints3_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        wp_superpoints3_ce1 : OUT STD_LOGIC;
        wp_superpoints3_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        wp_superpoints4_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        wp_superpoints4_ce0 : OUT STD_LOGIC;
        wp_superpoints4_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        wp_superpoints4_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        wp_superpoints4_ce1 : OUT STD_LOGIC;
        wp_superpoints4_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        wp_parameters_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters_ce0 : OUT STD_LOGIC;
        wp_parameters_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        wp_parameters5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters5_ce0 : OUT STD_LOGIC;
        wp_parameters5_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        wp_parameters6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters6_ce0 : OUT STD_LOGIC;
        wp_parameters6_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        wp_parameters7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters7_ce0 : OUT STD_LOGIC;
        wp_parameters7_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        wp_parameters8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters8_ce0 : OUT STD_LOGIC;
        wp_parameters8_q0 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_straightLineProjectorFromLayerIJtoK IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        z_i : IN STD_LOGIC_VECTOR (63 downto 0);
        z_j : IN STD_LOGIC_VECTOR (63 downto 0);
        i : IN STD_LOGIC_VECTOR (2 downto 0);
        j : IN STD_LOGIC_VECTOR (31 downto 0);
        k : IN STD_LOGIC_VECTOR (2 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_get_acceptanceCorners IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        wp_parameters_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters_ce0 : OUT STD_LOGIC;
        wp_parameters_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        wp_parameters_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters_ce1 : OUT STD_LOGIC;
        wp_parameters_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        wp_parameters2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters2_ce0 : OUT STD_LOGIC;
        wp_parameters2_we0 : OUT STD_LOGIC;
        wp_parameters2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        wp_parameters2_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters2_ce1 : OUT STD_LOGIC;
        wp_parameters2_we1 : OUT STD_LOGIC;
        wp_parameters2_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        wp_parameters3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters3_ce0 : OUT STD_LOGIC;
        wp_parameters3_we0 : OUT STD_LOGIC;
        wp_parameters3_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        wp_parameters3_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters3_ce1 : OUT STD_LOGIC;
        wp_parameters3_we1 : OUT STD_LOGIC;
        wp_parameters3_d1 : OUT STD_LOGIC_VECTOR (0 downto 0);
        wp_parameters4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        wp_parameters4_ce0 : OUT STD_LOGIC;
        wp_parameters4_q0 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_mul_64ns_9ns_72_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (71 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_mux_53_64_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        din2 : IN STD_LOGIC_VECTOR (63 downto 0);
        din3 : IN STD_LOGIC_VECTOR (63 downto 0);
        din4 : IN STD_LOGIC_VECTOR (63 downto 0);
        din5 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_1_NPpatches_parameters_128 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_init_patch_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_superpoints_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_parameters_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    NPpatches_parameters_128_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_1_NPpatches_parameters_128
    generic map (
        DataWidth => 1,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_add_patch_111_fu_1122_wp_parameters5_address0,
        ce0 => grp_add_patch_111_fu_1122_wp_parameters5_ce0,
        q0 => NPpatches_parameters_128_q0);

    init_patch_0_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_init_patch_0
    generic map (
        DataWidth => 64,
        AddressRange => 144,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => init_patch_0_address0,
        ce0 => init_patch_0_ce0,
        we0 => init_patch_0_we0,
        d0 => init_patch_0_d0,
        q0 => init_patch_0_q0,
        address1 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch_address1,
        ce1 => init_patch_0_ce1,
        we1 => init_patch_0_we1,
        d1 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch_d1,
        q1 => init_patch_0_q1);

    init_patch_1_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_init_patch_0
    generic map (
        DataWidth => 64,
        AddressRange => 144,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => init_patch_1_address0,
        ce0 => init_patch_1_ce0,
        we0 => init_patch_1_we0,
        d0 => init_patch_1_d0,
        q0 => init_patch_1_q0,
        address1 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch1_address1,
        ce1 => init_patch_1_ce1,
        we1 => init_patch_1_we1,
        d1 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch1_d1,
        q1 => init_patch_1_q1);

    init_patch_2_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_init_patch_0
    generic map (
        DataWidth => 64,
        AddressRange => 144,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => init_patch_2_address0,
        ce0 => init_patch_2_ce0,
        we0 => init_patch_2_we0,
        d0 => init_patch_2_d0,
        q0 => init_patch_2_q0,
        address1 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch2_address1,
        ce1 => init_patch_2_ce1,
        we1 => init_patch_2_we1,
        d1 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch2_d1,
        q1 => init_patch_2_q1);

    init_patch_3_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_init_patch_0
    generic map (
        DataWidth => 64,
        AddressRange => 144,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => init_patch_3_address0,
        ce0 => init_patch_3_ce0,
        we0 => init_patch_3_we0,
        d0 => init_patch_3_d0,
        q0 => init_patch_3_q0,
        address1 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch3_address1,
        ce1 => init_patch_3_ce1,
        we1 => init_patch_3_we1,
        d1 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch3_d1,
        q1 => init_patch_3_q1);

    init_patch_4_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_init_patch_0
    generic map (
        DataWidth => 64,
        AddressRange => 144,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => init_patch_4_address0,
        ce0 => init_patch_4_ce0,
        we0 => init_patch_4_we0,
        d0 => init_patch_4_d0,
        q0 => init_patch_4_q0,
        address1 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch4_address1,
        ce1 => init_patch_4_ce1,
        we1 => init_patch_4_we1,
        d1 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch4_d1,
        q1 => init_patch_4_q1);

    NPpatches_superpoints_0_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_superpoints_0
    generic map (
        DataWidth => 64,
        AddressRange => 144,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => NPpatches_superpoints_0_address0,
        ce0 => NPpatches_superpoints_0_ce0,
        we0 => NPpatches_superpoints_0_we0,
        d0 => NPpatches_superpoints_0_d0,
        q0 => NPpatches_superpoints_0_q0,
        address1 => NPpatches_superpoints_0_address1,
        ce1 => NPpatches_superpoints_0_ce1,
        q1 => NPpatches_superpoints_0_q1);

    NPpatches_superpoints_1_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_superpoints_0
    generic map (
        DataWidth => 64,
        AddressRange => 144,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => NPpatches_superpoints_1_address0,
        ce0 => NPpatches_superpoints_1_ce0,
        we0 => NPpatches_superpoints_1_we0,
        d0 => NPpatches_superpoints_1_d0,
        q0 => NPpatches_superpoints_1_q0,
        address1 => NPpatches_superpoints_1_address1,
        ce1 => NPpatches_superpoints_1_ce1,
        q1 => NPpatches_superpoints_1_q1);

    NPpatches_superpoints_2_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_superpoints_0
    generic map (
        DataWidth => 64,
        AddressRange => 144,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => NPpatches_superpoints_2_address0,
        ce0 => NPpatches_superpoints_2_ce0,
        we0 => NPpatches_superpoints_2_we0,
        d0 => NPpatches_superpoints_2_d0,
        q0 => NPpatches_superpoints_2_q0,
        address1 => NPpatches_superpoints_2_address1,
        ce1 => NPpatches_superpoints_2_ce1,
        q1 => NPpatches_superpoints_2_q1);

    NPpatches_superpoints_3_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_superpoints_0
    generic map (
        DataWidth => 64,
        AddressRange => 144,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => NPpatches_superpoints_3_address0,
        ce0 => NPpatches_superpoints_3_ce0,
        we0 => NPpatches_superpoints_3_we0,
        d0 => NPpatches_superpoints_3_d0,
        q0 => NPpatches_superpoints_3_q0,
        address1 => NPpatches_superpoints_3_address1,
        ce1 => NPpatches_superpoints_3_ce1,
        q1 => NPpatches_superpoints_3_q1);

    NPpatches_superpoints_4_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_superpoints_0
    generic map (
        DataWidth => 64,
        AddressRange => 144,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => NPpatches_superpoints_4_address0,
        ce0 => NPpatches_superpoints_4_ce0,
        we0 => NPpatches_superpoints_4_we0,
        d0 => NPpatches_superpoints_4_d0,
        q0 => NPpatches_superpoints_4_q0,
        address1 => NPpatches_superpoints_4_address1,
        ce1 => NPpatches_superpoints_4_ce1,
        q1 => NPpatches_superpoints_4_q1);

    NPpatches_parameters_0_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_parameters_0
    generic map (
        DataWidth => 64,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => NPpatches_parameters_0_address0,
        ce0 => NPpatches_parameters_0_ce0,
        we0 => NPpatches_parameters_0_we0,
        d0 => NPpatches_parameters_0_d0,
        q0 => NPpatches_parameters_0_q0,
        address1 => NPpatches_parameters_0_address1,
        ce1 => NPpatches_parameters_0_ce1,
        we1 => NPpatches_parameters_0_we1,
        d1 => NPpatches_parameters_0_d1,
        q1 => NPpatches_parameters_0_q1);

    NPpatches_parameters_4_U : component makePatches_ShadowQuilt_fromEdges_makePatch_alignedToLine_NPpatches_parameters_0
    generic map (
        DataWidth => 64,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => NPpatches_parameters_4_address0,
        ce0 => NPpatches_parameters_4_ce0,
        we0 => NPpatches_parameters_4_we0,
        d0 => NPpatches_parameters_4_d0,
        q0 => NPpatches_parameters_4_q0,
        address1 => NPpatches_parameters_4_address1,
        ce1 => NPpatches_parameters_4_ce1,
        we1 => NPpatches_parameters_4_we1,
        d1 => NPpatches_parameters_4_d1,
        q1 => NPpatches_parameters_4_q1);

    grp_makeSuperPoint_alignedToLine_fu_1095 : component makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_makeSuperPoint_alignedToLine_fu_1095_ap_start,
        ap_done => grp_makeSuperPoint_alignedToLine_fu_1095_ap_done,
        ap_idle => grp_makeSuperPoint_alignedToLine_fu_1095_ap_idle,
        ap_ready => grp_makeSuperPoint_alignedToLine_fu_1095_ap_ready,
        GDarray_address0 => grp_makeSuperPoint_alignedToLine_fu_1095_GDarray_address0,
        GDarray_ce0 => grp_makeSuperPoint_alignedToLine_fu_1095_GDarray_ce0,
        GDarray_q0 => GDarray_q0,
        GDn_points_address0 => grp_makeSuperPoint_alignedToLine_fu_1095_GDn_points_address0,
        GDn_points_ce0 => grp_makeSuperPoint_alignedToLine_fu_1095_GDn_points_ce0,
        GDn_points_q0 => GDn_points_q0,
        i => i_reg_862,
        z_top => z_top,
        apexZ0 => apexZ0,
        original_ppl => p_read,
        leftRight_offset => leftRight,
        init_patch_address0 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch_address0,
        init_patch_ce0 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch_ce0,
        init_patch_we0 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch_we0,
        init_patch_d0 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch_d0,
        init_patch_q0 => init_patch_0_q0,
        init_patch_address1 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch_address1,
        init_patch_ce1 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch_ce1,
        init_patch_we1 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch_we1,
        init_patch_d1 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch_d1,
        init_patch_q1 => init_patch_0_q1,
        init_patch1_address0 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch1_address0,
        init_patch1_ce0 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch1_ce0,
        init_patch1_we0 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch1_we0,
        init_patch1_d0 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch1_d0,
        init_patch1_q0 => init_patch_1_q0,
        init_patch1_address1 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch1_address1,
        init_patch1_ce1 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch1_ce1,
        init_patch1_we1 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch1_we1,
        init_patch1_d1 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch1_d1,
        init_patch1_q1 => init_patch_1_q1,
        init_patch2_address0 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch2_address0,
        init_patch2_ce0 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch2_ce0,
        init_patch2_we0 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch2_we0,
        init_patch2_d0 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch2_d0,
        init_patch2_q0 => init_patch_2_q0,
        init_patch2_address1 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch2_address1,
        init_patch2_ce1 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch2_ce1,
        init_patch2_we1 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch2_we1,
        init_patch2_d1 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch2_d1,
        init_patch2_q1 => init_patch_2_q1,
        init_patch3_address0 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch3_address0,
        init_patch3_ce0 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch3_ce0,
        init_patch3_we0 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch3_we0,
        init_patch3_d0 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch3_d0,
        init_patch3_q0 => init_patch_3_q0,
        init_patch3_address1 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch3_address1,
        init_patch3_ce1 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch3_ce1,
        init_patch3_we1 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch3_we1,
        init_patch3_d1 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch3_d1,
        init_patch3_q1 => init_patch_3_q1,
        init_patch4_address0 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch4_address0,
        init_patch4_ce0 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch4_ce0,
        init_patch4_we0 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch4_we0,
        init_patch4_d0 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch4_d0,
        init_patch4_q0 => init_patch_4_q0,
        init_patch4_address1 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch4_address1,
        init_patch4_ce1 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch4_ce1,
        init_patch4_we1 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch4_we1,
        init_patch4_d1 => grp_makeSuperPoint_alignedToLine_fu_1095_init_patch4_d1,
        init_patch4_q1 => init_patch_4_q1,
        p_read1 => superpoint_count_assign_reg_840,
        temp_address0 => grp_makeSuperPoint_alignedToLine_fu_1095_temp_address0,
        temp_ce0 => grp_makeSuperPoint_alignedToLine_fu_1095_temp_ce0,
        temp_we0 => grp_makeSuperPoint_alignedToLine_fu_1095_temp_we0,
        temp_d0 => grp_makeSuperPoint_alignedToLine_fu_1095_temp_d0,
        temp_q0 => temp_q0,
        temp_address1 => grp_makeSuperPoint_alignedToLine_fu_1095_temp_address1,
        temp_ce1 => grp_makeSuperPoint_alignedToLine_fu_1095_temp_ce1,
        temp_q1 => temp_q1,
        ap_return_0 => grp_makeSuperPoint_alignedToLine_fu_1095_ap_return_0,
        ap_return_1 => grp_makeSuperPoint_alignedToLine_fu_1095_ap_return_1);

    grp_add_patch_111_fu_1122 : component makePatches_ShadowQuilt_fromEdges_add_patch_111
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_add_patch_111_fu_1122_ap_start,
        ap_done => grp_add_patch_111_fu_1122_ap_done,
        ap_idle => grp_add_patch_111_fu_1122_ap_idle,
        ap_ready => grp_add_patch_111_fu_1122_ap_ready,
        n_patches => grp_add_patch_111_fu_1122_n_patches,
        n_patches_ap_vld => grp_add_patch_111_fu_1122_n_patches_ap_vld,
        n_patches_read => n_patches_i,
        patches_superpoints_0_address0 => grp_add_patch_111_fu_1122_patches_superpoints_0_address0,
        patches_superpoints_0_ce0 => grp_add_patch_111_fu_1122_patches_superpoints_0_ce0,
        patches_superpoints_0_we0 => grp_add_patch_111_fu_1122_patches_superpoints_0_we0,
        patches_superpoints_0_d0 => grp_add_patch_111_fu_1122_patches_superpoints_0_d0,
        patches_superpoints_0_q0 => patches_superpoints_0_q0,
        patches_superpoints_1_address0 => grp_add_patch_111_fu_1122_patches_superpoints_1_address0,
        patches_superpoints_1_ce0 => grp_add_patch_111_fu_1122_patches_superpoints_1_ce0,
        patches_superpoints_1_we0 => grp_add_patch_111_fu_1122_patches_superpoints_1_we0,
        patches_superpoints_1_d0 => grp_add_patch_111_fu_1122_patches_superpoints_1_d0,
        patches_superpoints_1_q0 => patches_superpoints_1_q0,
        patches_superpoints_2_address0 => grp_add_patch_111_fu_1122_patches_superpoints_2_address0,
        patches_superpoints_2_ce0 => grp_add_patch_111_fu_1122_patches_superpoints_2_ce0,
        patches_superpoints_2_we0 => grp_add_patch_111_fu_1122_patches_superpoints_2_we0,
        patches_superpoints_2_d0 => grp_add_patch_111_fu_1122_patches_superpoints_2_d0,
        patches_superpoints_2_q0 => patches_superpoints_2_q0,
        patches_superpoints_3_address0 => grp_add_patch_111_fu_1122_patches_superpoints_3_address0,
        patches_superpoints_3_ce0 => grp_add_patch_111_fu_1122_patches_superpoints_3_ce0,
        patches_superpoints_3_we0 => grp_add_patch_111_fu_1122_patches_superpoints_3_we0,
        patches_superpoints_3_d0 => grp_add_patch_111_fu_1122_patches_superpoints_3_d0,
        patches_superpoints_3_q0 => patches_superpoints_3_q0,
        patches_superpoints_4_address0 => grp_add_patch_111_fu_1122_patches_superpoints_4_address0,
        patches_superpoints_4_ce0 => grp_add_patch_111_fu_1122_patches_superpoints_4_ce0,
        patches_superpoints_4_we0 => grp_add_patch_111_fu_1122_patches_superpoints_4_we0,
        patches_superpoints_4_d0 => grp_add_patch_111_fu_1122_patches_superpoints_4_d0,
        patches_superpoints_4_q0 => patches_superpoints_4_q0,
        patches_superpoints_5_address0 => grp_add_patch_111_fu_1122_patches_superpoints_5_address0,
        patches_superpoints_5_ce0 => grp_add_patch_111_fu_1122_patches_superpoints_5_ce0,
        patches_superpoints_5_we0 => grp_add_patch_111_fu_1122_patches_superpoints_5_we0,
        patches_superpoints_5_d0 => grp_add_patch_111_fu_1122_patches_superpoints_5_d0,
        patches_superpoints_5_q0 => patches_superpoints_5_q0,
        patches_superpoints_6_address0 => grp_add_patch_111_fu_1122_patches_superpoints_6_address0,
        patches_superpoints_6_ce0 => grp_add_patch_111_fu_1122_patches_superpoints_6_ce0,
        patches_superpoints_6_we0 => grp_add_patch_111_fu_1122_patches_superpoints_6_we0,
        patches_superpoints_6_d0 => grp_add_patch_111_fu_1122_patches_superpoints_6_d0,
        patches_superpoints_6_q0 => patches_superpoints_6_q0,
        patches_superpoints_7_address0 => grp_add_patch_111_fu_1122_patches_superpoints_7_address0,
        patches_superpoints_7_ce0 => grp_add_patch_111_fu_1122_patches_superpoints_7_ce0,
        patches_superpoints_7_we0 => grp_add_patch_111_fu_1122_patches_superpoints_7_we0,
        patches_superpoints_7_d0 => grp_add_patch_111_fu_1122_patches_superpoints_7_d0,
        patches_superpoints_7_q0 => patches_superpoints_7_q0,
        patches_superpoints_8_address0 => grp_add_patch_111_fu_1122_patches_superpoints_8_address0,
        patches_superpoints_8_ce0 => grp_add_patch_111_fu_1122_patches_superpoints_8_ce0,
        patches_superpoints_8_we0 => grp_add_patch_111_fu_1122_patches_superpoints_8_we0,
        patches_superpoints_8_d0 => grp_add_patch_111_fu_1122_patches_superpoints_8_d0,
        patches_superpoints_8_q0 => patches_superpoints_8_q0,
        patches_superpoints_9_address0 => grp_add_patch_111_fu_1122_patches_superpoints_9_address0,
        patches_superpoints_9_ce0 => grp_add_patch_111_fu_1122_patches_superpoints_9_ce0,
        patches_superpoints_9_we0 => grp_add_patch_111_fu_1122_patches_superpoints_9_we0,
        patches_superpoints_9_d0 => grp_add_patch_111_fu_1122_patches_superpoints_9_d0,
        patches_superpoints_9_q0 => patches_superpoints_9_q0,
        patches_superpoints_10_address0 => grp_add_patch_111_fu_1122_patches_superpoints_10_address0,
        patches_superpoints_10_ce0 => grp_add_patch_111_fu_1122_patches_superpoints_10_ce0,
        patches_superpoints_10_we0 => grp_add_patch_111_fu_1122_patches_superpoints_10_we0,
        patches_superpoints_10_d0 => grp_add_patch_111_fu_1122_patches_superpoints_10_d0,
        patches_superpoints_10_q0 => patches_superpoints_10_q0,
        patches_superpoints_11_address0 => grp_add_patch_111_fu_1122_patches_superpoints_11_address0,
        patches_superpoints_11_ce0 => grp_add_patch_111_fu_1122_patches_superpoints_11_ce0,
        patches_superpoints_11_we0 => grp_add_patch_111_fu_1122_patches_superpoints_11_we0,
        patches_superpoints_11_d0 => grp_add_patch_111_fu_1122_patches_superpoints_11_d0,
        patches_superpoints_11_q0 => patches_superpoints_11_q0,
        patches_superpoints_12_address0 => grp_add_patch_111_fu_1122_patches_superpoints_12_address0,
        patches_superpoints_12_ce0 => grp_add_patch_111_fu_1122_patches_superpoints_12_ce0,
        patches_superpoints_12_we0 => grp_add_patch_111_fu_1122_patches_superpoints_12_we0,
        patches_superpoints_12_d0 => grp_add_patch_111_fu_1122_patches_superpoints_12_d0,
        patches_superpoints_12_q0 => patches_superpoints_12_q0,
        patches_superpoints_13_address0 => grp_add_patch_111_fu_1122_patches_superpoints_13_address0,
        patches_superpoints_13_ce0 => grp_add_patch_111_fu_1122_patches_superpoints_13_ce0,
        patches_superpoints_13_we0 => grp_add_patch_111_fu_1122_patches_superpoints_13_we0,
        patches_superpoints_13_d0 => grp_add_patch_111_fu_1122_patches_superpoints_13_d0,
        patches_superpoints_13_q0 => patches_superpoints_13_q0,
        patches_superpoints_14_address0 => grp_add_patch_111_fu_1122_patches_superpoints_14_address0,
        patches_superpoints_14_ce0 => grp_add_patch_111_fu_1122_patches_superpoints_14_ce0,
        patches_superpoints_14_we0 => grp_add_patch_111_fu_1122_patches_superpoints_14_we0,
        patches_superpoints_14_d0 => grp_add_patch_111_fu_1122_patches_superpoints_14_d0,
        patches_superpoints_14_q0 => patches_superpoints_14_q0,
        patches_superpoints_15_address0 => grp_add_patch_111_fu_1122_patches_superpoints_15_address0,
        patches_superpoints_15_ce0 => grp_add_patch_111_fu_1122_patches_superpoints_15_ce0,
        patches_superpoints_15_we0 => grp_add_patch_111_fu_1122_patches_superpoints_15_we0,
        patches_superpoints_15_d0 => grp_add_patch_111_fu_1122_patches_superpoints_15_d0,
        patches_superpoints_15_q0 => patches_superpoints_15_q0,
        patches_superpoints_16_address0 => grp_add_patch_111_fu_1122_patches_superpoints_16_address0,
        patches_superpoints_16_ce0 => grp_add_patch_111_fu_1122_patches_superpoints_16_ce0,
        patches_superpoints_16_we0 => grp_add_patch_111_fu_1122_patches_superpoints_16_we0,
        patches_superpoints_16_d0 => grp_add_patch_111_fu_1122_patches_superpoints_16_d0,
        patches_superpoints_16_q0 => patches_superpoints_16_q0,
        patches_superpoints_17_address0 => grp_add_patch_111_fu_1122_patches_superpoints_17_address0,
        patches_superpoints_17_ce0 => grp_add_patch_111_fu_1122_patches_superpoints_17_ce0,
        patches_superpoints_17_we0 => grp_add_patch_111_fu_1122_patches_superpoints_17_we0,
        patches_superpoints_17_d0 => grp_add_patch_111_fu_1122_patches_superpoints_17_d0,
        patches_superpoints_17_q0 => patches_superpoints_17_q0,
        patches_superpoints_18_address0 => grp_add_patch_111_fu_1122_patches_superpoints_18_address0,
        patches_superpoints_18_ce0 => grp_add_patch_111_fu_1122_patches_superpoints_18_ce0,
        patches_superpoints_18_we0 => grp_add_patch_111_fu_1122_patches_superpoints_18_we0,
        patches_superpoints_18_d0 => grp_add_patch_111_fu_1122_patches_superpoints_18_d0,
        patches_superpoints_18_q0 => patches_superpoints_18_q0,
        patches_superpoints_19_address0 => grp_add_patch_111_fu_1122_patches_superpoints_19_address0,
        patches_superpoints_19_ce0 => grp_add_patch_111_fu_1122_patches_superpoints_19_ce0,
        patches_superpoints_19_we0 => grp_add_patch_111_fu_1122_patches_superpoints_19_we0,
        patches_superpoints_19_d0 => grp_add_patch_111_fu_1122_patches_superpoints_19_d0,
        patches_superpoints_19_q0 => patches_superpoints_19_q0,
        patches_superpoints_20_address0 => grp_add_patch_111_fu_1122_patches_superpoints_20_address0,
        patches_superpoints_20_ce0 => grp_add_patch_111_fu_1122_patches_superpoints_20_ce0,
        patches_superpoints_20_we0 => grp_add_patch_111_fu_1122_patches_superpoints_20_we0,
        patches_superpoints_20_d0 => grp_add_patch_111_fu_1122_patches_superpoints_20_d0,
        patches_superpoints_20_q0 => patches_superpoints_20_q0,
        patches_superpoints_21_address0 => grp_add_patch_111_fu_1122_patches_superpoints_21_address0,
        patches_superpoints_21_ce0 => grp_add_patch_111_fu_1122_patches_superpoints_21_ce0,
        patches_superpoints_21_we0 => grp_add_patch_111_fu_1122_patches_superpoints_21_we0,
        patches_superpoints_21_d0 => grp_add_patch_111_fu_1122_patches_superpoints_21_d0,
        patches_superpoints_21_q0 => patches_superpoints_21_q0,
        patches_superpoints_22_address0 => grp_add_patch_111_fu_1122_patches_superpoints_22_address0,
        patches_superpoints_22_ce0 => grp_add_patch_111_fu_1122_patches_superpoints_22_ce0,
        patches_superpoints_22_we0 => grp_add_patch_111_fu_1122_patches_superpoints_22_we0,
        patches_superpoints_22_d0 => grp_add_patch_111_fu_1122_patches_superpoints_22_d0,
        patches_superpoints_22_q0 => patches_superpoints_22_q0,
        patches_superpoints_23_address0 => grp_add_patch_111_fu_1122_patches_superpoints_23_address0,
        patches_superpoints_23_ce0 => grp_add_patch_111_fu_1122_patches_superpoints_23_ce0,
        patches_superpoints_23_we0 => grp_add_patch_111_fu_1122_patches_superpoints_23_we0,
        patches_superpoints_23_d0 => grp_add_patch_111_fu_1122_patches_superpoints_23_d0,
        patches_superpoints_23_q0 => patches_superpoints_23_q0,
        patches_superpoints_24_address0 => grp_add_patch_111_fu_1122_patches_superpoints_24_address0,
        patches_superpoints_24_ce0 => grp_add_patch_111_fu_1122_patches_superpoints_24_ce0,
        patches_superpoints_24_we0 => grp_add_patch_111_fu_1122_patches_superpoints_24_we0,
        patches_superpoints_24_d0 => grp_add_patch_111_fu_1122_patches_superpoints_24_d0,
        patches_superpoints_24_q0 => patches_superpoints_24_q0,
        patches_superpoints_25_address0 => grp_add_patch_111_fu_1122_patches_superpoints_25_address0,
        patches_superpoints_25_ce0 => grp_add_patch_111_fu_1122_patches_superpoints_25_ce0,
        patches_superpoints_25_we0 => grp_add_patch_111_fu_1122_patches_superpoints_25_we0,
        patches_superpoints_25_d0 => grp_add_patch_111_fu_1122_patches_superpoints_25_d0,
        patches_superpoints_25_q0 => patches_superpoints_25_q0,
        patches_superpoints_26_address0 => grp_add_patch_111_fu_1122_patches_superpoints_26_address0,
        patches_superpoints_26_ce0 => grp_add_patch_111_fu_1122_patches_superpoints_26_ce0,
        patches_superpoints_26_we0 => grp_add_patch_111_fu_1122_patches_superpoints_26_we0,
        patches_superpoints_26_d0 => grp_add_patch_111_fu_1122_patches_superpoints_26_d0,
        patches_superpoints_26_q0 => patches_superpoints_26_q0,
        patches_superpoints_27_address0 => grp_add_patch_111_fu_1122_patches_superpoints_27_address0,
        patches_superpoints_27_ce0 => grp_add_patch_111_fu_1122_patches_superpoints_27_ce0,
        patches_superpoints_27_we0 => grp_add_patch_111_fu_1122_patches_superpoints_27_we0,
        patches_superpoints_27_d0 => grp_add_patch_111_fu_1122_patches_superpoints_27_d0,
        patches_superpoints_27_q0 => patches_superpoints_27_q0,
        patches_superpoints_28_address0 => grp_add_patch_111_fu_1122_patches_superpoints_28_address0,
        patches_superpoints_28_ce0 => grp_add_patch_111_fu_1122_patches_superpoints_28_ce0,
        patches_superpoints_28_we0 => grp_add_patch_111_fu_1122_patches_superpoints_28_we0,
        patches_superpoints_28_d0 => grp_add_patch_111_fu_1122_patches_superpoints_28_d0,
        patches_superpoints_28_q0 => patches_superpoints_28_q0,
        patches_superpoints_29_address0 => grp_add_patch_111_fu_1122_patches_superpoints_29_address0,
        patches_superpoints_29_ce0 => grp_add_patch_111_fu_1122_patches_superpoints_29_ce0,
        patches_superpoints_29_we0 => grp_add_patch_111_fu_1122_patches_superpoints_29_we0,
        patches_superpoints_29_d0 => grp_add_patch_111_fu_1122_patches_superpoints_29_d0,
        patches_superpoints_29_q0 => patches_superpoints_29_q0,
        patches_superpoints_30_address0 => grp_add_patch_111_fu_1122_patches_superpoints_30_address0,
        patches_superpoints_30_ce0 => grp_add_patch_111_fu_1122_patches_superpoints_30_ce0,
        patches_superpoints_30_we0 => grp_add_patch_111_fu_1122_patches_superpoints_30_we0,
        patches_superpoints_30_d0 => grp_add_patch_111_fu_1122_patches_superpoints_30_d0,
        patches_superpoints_30_q0 => patches_superpoints_30_q0,
        patches_superpoints_31_address0 => grp_add_patch_111_fu_1122_patches_superpoints_31_address0,
        patches_superpoints_31_ce0 => grp_add_patch_111_fu_1122_patches_superpoints_31_ce0,
        patches_superpoints_31_we0 => grp_add_patch_111_fu_1122_patches_superpoints_31_we0,
        patches_superpoints_31_d0 => grp_add_patch_111_fu_1122_patches_superpoints_31_d0,
        patches_superpoints_31_q0 => patches_superpoints_31_q0,
        patches_parameters_0_address0 => grp_add_patch_111_fu_1122_patches_parameters_0_address0,
        patches_parameters_0_ce0 => grp_add_patch_111_fu_1122_patches_parameters_0_ce0,
        patches_parameters_0_we0 => grp_add_patch_111_fu_1122_patches_parameters_0_we0,
        patches_parameters_0_d0 => grp_add_patch_111_fu_1122_patches_parameters_0_d0,
        patches_parameters_1_address0 => grp_add_patch_111_fu_1122_patches_parameters_1_address0,
        patches_parameters_1_ce0 => grp_add_patch_111_fu_1122_patches_parameters_1_ce0,
        patches_parameters_1_we0 => grp_add_patch_111_fu_1122_patches_parameters_1_we0,
        patches_parameters_1_d0 => grp_add_patch_111_fu_1122_patches_parameters_1_d0,
        patches_parameters_2_address0 => grp_add_patch_111_fu_1122_patches_parameters_2_address0,
        patches_parameters_2_ce0 => grp_add_patch_111_fu_1122_patches_parameters_2_ce0,
        patches_parameters_2_we0 => grp_add_patch_111_fu_1122_patches_parameters_2_we0,
        patches_parameters_2_d0 => grp_add_patch_111_fu_1122_patches_parameters_2_d0,
        patches_parameters_3_address0 => grp_add_patch_111_fu_1122_patches_parameters_3_address0,
        patches_parameters_3_ce0 => grp_add_patch_111_fu_1122_patches_parameters_3_ce0,
        patches_parameters_3_we0 => grp_add_patch_111_fu_1122_patches_parameters_3_we0,
        patches_parameters_3_d0 => grp_add_patch_111_fu_1122_patches_parameters_3_d0,
        patches_parameters_4_address0 => grp_add_patch_111_fu_1122_patches_parameters_4_address0,
        patches_parameters_4_ce0 => grp_add_patch_111_fu_1122_patches_parameters_4_ce0,
        patches_parameters_4_we0 => grp_add_patch_111_fu_1122_patches_parameters_4_we0,
        patches_parameters_4_d0 => grp_add_patch_111_fu_1122_patches_parameters_4_d0,
        patches_parameters_4_q0 => patches_parameters_4_q0,
        wp_superpoints_address0 => grp_add_patch_111_fu_1122_wp_superpoints_address0,
        wp_superpoints_ce0 => grp_add_patch_111_fu_1122_wp_superpoints_ce0,
        wp_superpoints_q0 => NPpatches_superpoints_0_q0,
        wp_superpoints_address1 => grp_add_patch_111_fu_1122_wp_superpoints_address1,
        wp_superpoints_ce1 => grp_add_patch_111_fu_1122_wp_superpoints_ce1,
        wp_superpoints_q1 => NPpatches_superpoints_0_q1,
        wp_superpoints1_address0 => grp_add_patch_111_fu_1122_wp_superpoints1_address0,
        wp_superpoints1_ce0 => grp_add_patch_111_fu_1122_wp_superpoints1_ce0,
        wp_superpoints1_q0 => NPpatches_superpoints_1_q0,
        wp_superpoints1_address1 => grp_add_patch_111_fu_1122_wp_superpoints1_address1,
        wp_superpoints1_ce1 => grp_add_patch_111_fu_1122_wp_superpoints1_ce1,
        wp_superpoints1_q1 => NPpatches_superpoints_1_q1,
        wp_superpoints2_address0 => grp_add_patch_111_fu_1122_wp_superpoints2_address0,
        wp_superpoints2_ce0 => grp_add_patch_111_fu_1122_wp_superpoints2_ce0,
        wp_superpoints2_q0 => NPpatches_superpoints_2_q0,
        wp_superpoints2_address1 => grp_add_patch_111_fu_1122_wp_superpoints2_address1,
        wp_superpoints2_ce1 => grp_add_patch_111_fu_1122_wp_superpoints2_ce1,
        wp_superpoints2_q1 => NPpatches_superpoints_2_q1,
        wp_superpoints3_address0 => grp_add_patch_111_fu_1122_wp_superpoints3_address0,
        wp_superpoints3_ce0 => grp_add_patch_111_fu_1122_wp_superpoints3_ce0,
        wp_superpoints3_q0 => NPpatches_superpoints_3_q0,
        wp_superpoints3_address1 => grp_add_patch_111_fu_1122_wp_superpoints3_address1,
        wp_superpoints3_ce1 => grp_add_patch_111_fu_1122_wp_superpoints3_ce1,
        wp_superpoints3_q1 => NPpatches_superpoints_3_q1,
        wp_superpoints4_address0 => grp_add_patch_111_fu_1122_wp_superpoints4_address0,
        wp_superpoints4_ce0 => grp_add_patch_111_fu_1122_wp_superpoints4_ce0,
        wp_superpoints4_q0 => NPpatches_superpoints_4_q0,
        wp_superpoints4_address1 => grp_add_patch_111_fu_1122_wp_superpoints4_address1,
        wp_superpoints4_ce1 => grp_add_patch_111_fu_1122_wp_superpoints4_ce1,
        wp_superpoints4_q1 => NPpatches_superpoints_4_q1,
        wp_parameters_address0 => grp_add_patch_111_fu_1122_wp_parameters_address0,
        wp_parameters_ce0 => grp_add_patch_111_fu_1122_wp_parameters_ce0,
        wp_parameters_q0 => NPpatches_parameters_0_q0,
        wp_parameters5_address0 => grp_add_patch_111_fu_1122_wp_parameters5_address0,
        wp_parameters5_ce0 => grp_add_patch_111_fu_1122_wp_parameters5_ce0,
        wp_parameters5_q0 => NPpatches_parameters_128_q0,
        wp_parameters6_address0 => grp_add_patch_111_fu_1122_wp_parameters6_address0,
        wp_parameters6_ce0 => grp_add_patch_111_fu_1122_wp_parameters6_ce0,
        wp_parameters6_q0 => NPpatches_parameters_229_q0,
        wp_parameters7_address0 => grp_add_patch_111_fu_1122_wp_parameters7_address0,
        wp_parameters7_ce0 => grp_add_patch_111_fu_1122_wp_parameters7_ce0,
        wp_parameters7_q0 => NPpatches_parameters_330_q0,
        wp_parameters8_address0 => grp_add_patch_111_fu_1122_wp_parameters8_address0,
        wp_parameters8_ce0 => grp_add_patch_111_fu_1122_wp_parameters8_ce0,
        wp_parameters8_q0 => NPpatches_parameters_4_q0);

    grp_straightLineProjectorFromLayerIJtoK_fu_1216 : component makePatches_ShadowQuilt_fromEdges_straightLineProjectorFromLayerIJtoK
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_straightLineProjectorFromLayerIJtoK_fu_1216_ap_start,
        ap_done => grp_straightLineProjectorFromLayerIJtoK_fu_1216_ap_done,
        ap_idle => grp_straightLineProjectorFromLayerIJtoK_fu_1216_ap_idle,
        ap_ready => grp_straightLineProjectorFromLayerIJtoK_fu_1216_ap_ready,
        ap_ce => ap_const_logic_1,
        z_i => sext_ln44_reg_2809,
        z_j => grp_straightLineProjectorFromLayerIJtoK_fu_1216_z_j,
        i => ap_const_lv3_1,
        j => grp_straightLineProjectorFromLayerIJtoK_fu_1216_j,
        k => ap_const_lv3_5,
        ap_return => grp_straightLineProjectorFromLayerIJtoK_fu_1216_ap_return);

    grp_straightLineProjectorFromLayerIJtoK_fu_1230 : component makePatches_ShadowQuilt_fromEdges_straightLineProjectorFromLayerIJtoK
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_straightLineProjectorFromLayerIJtoK_fu_1230_ap_start,
        ap_done => grp_straightLineProjectorFromLayerIJtoK_fu_1230_ap_done,
        ap_idle => grp_straightLineProjectorFromLayerIJtoK_fu_1230_ap_idle,
        ap_ready => grp_straightLineProjectorFromLayerIJtoK_fu_1230_ap_ready,
        ap_ce => ap_const_logic_1,
        z_i => sext_ln42_reg_2815,
        z_j => grp_straightLineProjectorFromLayerIJtoK_fu_1230_z_j,
        i => ap_const_lv3_1,
        j => grp_straightLineProjectorFromLayerIJtoK_fu_1230_j,
        k => ap_const_lv3_5,
        ap_return => grp_straightLineProjectorFromLayerIJtoK_fu_1230_ap_return);

    grp_get_acceptanceCorners_fu_1244 : component makePatches_ShadowQuilt_fromEdges_get_acceptanceCorners
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_get_acceptanceCorners_fu_1244_ap_start,
        ap_done => grp_get_acceptanceCorners_fu_1244_ap_done,
        ap_idle => grp_get_acceptanceCorners_fu_1244_ap_idle,
        ap_ready => grp_get_acceptanceCorners_fu_1244_ap_ready,
        wp_parameters_address0 => grp_get_acceptanceCorners_fu_1244_wp_parameters_address0,
        wp_parameters_ce0 => grp_get_acceptanceCorners_fu_1244_wp_parameters_ce0,
        wp_parameters_q0 => NPpatches_parameters_0_q0,
        wp_parameters_address1 => grp_get_acceptanceCorners_fu_1244_wp_parameters_address1,
        wp_parameters_ce1 => grp_get_acceptanceCorners_fu_1244_wp_parameters_ce1,
        wp_parameters_q1 => NPpatches_parameters_0_q1,
        wp_parameters2_address0 => grp_get_acceptanceCorners_fu_1244_wp_parameters2_address0,
        wp_parameters2_ce0 => grp_get_acceptanceCorners_fu_1244_wp_parameters2_ce0,
        wp_parameters2_we0 => grp_get_acceptanceCorners_fu_1244_wp_parameters2_we0,
        wp_parameters2_d0 => grp_get_acceptanceCorners_fu_1244_wp_parameters2_d0,
        wp_parameters2_address1 => grp_get_acceptanceCorners_fu_1244_wp_parameters2_address1,
        wp_parameters2_ce1 => grp_get_acceptanceCorners_fu_1244_wp_parameters2_ce1,
        wp_parameters2_we1 => grp_get_acceptanceCorners_fu_1244_wp_parameters2_we1,
        wp_parameters2_d1 => grp_get_acceptanceCorners_fu_1244_wp_parameters2_d1,
        wp_parameters3_address0 => grp_get_acceptanceCorners_fu_1244_wp_parameters3_address0,
        wp_parameters3_ce0 => grp_get_acceptanceCorners_fu_1244_wp_parameters3_ce0,
        wp_parameters3_we0 => grp_get_acceptanceCorners_fu_1244_wp_parameters3_we0,
        wp_parameters3_d0 => grp_get_acceptanceCorners_fu_1244_wp_parameters3_d0,
        wp_parameters3_address1 => grp_get_acceptanceCorners_fu_1244_wp_parameters3_address1,
        wp_parameters3_ce1 => grp_get_acceptanceCorners_fu_1244_wp_parameters3_ce1,
        wp_parameters3_we1 => grp_get_acceptanceCorners_fu_1244_wp_parameters3_we1,
        wp_parameters3_d1 => grp_get_acceptanceCorners_fu_1244_wp_parameters3_d1,
        wp_parameters4_address0 => grp_get_acceptanceCorners_fu_1244_wp_parameters4_address0,
        wp_parameters4_ce0 => grp_get_acceptanceCorners_fu_1244_wp_parameters4_ce0,
        wp_parameters4_q0 => NPpatches_parameters_4_q0);

    mul_64ns_9ns_72_1_1_U238 : component makePatches_ShadowQuilt_fromEdges_mul_64ns_9ns_72_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 9,
        dout_WIDTH => 72)
    port map (
        din0 => mul_ln1133_fu_1928_p0,
        din1 => mul_ln1133_fu_1928_p1,
        dout => mul_ln1133_fu_1928_p2);

    mux_53_64_1_1_U239 : component makePatches_ShadowQuilt_fromEdges_mux_53_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        din2_WIDTH => 64,
        din3_WIDTH => 64,
        din4_WIDTH => 64,
        din5_WIDTH => 3,
        dout_WIDTH => 64)
    port map (
        din0 => init_patch_0_q0,
        din1 => init_patch_1_q0,
        din2 => init_patch_2_q0,
        din3 => init_patch_3_q0,
        din4 => init_patch_4_q0,
        din5 => trunc_ln93_reg_2712,
        dout => tmp_fu_2189_p7);

    mux_53_64_1_1_U240 : component makePatches_ShadowQuilt_fromEdges_mux_53_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        din2_WIDTH => 64,
        din3_WIDTH => 64,
        din4_WIDTH => 64,
        din5_WIDTH => 3,
        dout_WIDTH => 64)
    port map (
        din0 => NPpatches_superpoints_0_load_2_reg_2804,
        din1 => NPpatches_superpoints_1_load_2_reg_2841,
        din2 => NPpatches_superpoints_2_load_2_reg_2846,
        din3 => NPpatches_superpoints_3_load_2_reg_2851,
        din4 => NPpatches_superpoints_4_load_2_reg_2856,
        din5 => trunc_ln61_reg_2865,
        dout => z_j_max_fu_2349_p7);

    mux_53_64_1_1_U241 : component makePatches_ShadowQuilt_fromEdges_mux_53_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        din2_WIDTH => 64,
        din3_WIDTH => 64,
        din4_WIDTH => 64,
        din5_WIDTH => 3,
        dout_WIDTH => 64)
    port map (
        din0 => NPpatches_superpoints_0_load_reg_2799,
        din1 => NPpatches_superpoints_1_load_reg_2821,
        din2 => NPpatches_superpoints_2_load_reg_2826,
        din3 => NPpatches_superpoints_3_load_reg_2831,
        din4 => NPpatches_superpoints_4_load_reg_2836,
        din5 => trunc_ln61_reg_2865,
        dout => z_j_min_fu_2431_p7);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state10) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state10))) then 
                    ap_enable_reg_pp3_iter1 <= (ap_const_logic_1 xor ap_condition_pp3_exit_iter0_state10);
                elsif ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp4_exit_iter0_state14) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp4_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2))) then 
                    ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp4_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2))) then 
                    ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp4_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2))) then 
                    ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp4_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2))) then 
                    ap_enable_reg_pp4_iter4 <= ap_enable_reg_pp4_iter3;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    ap_enable_reg_pp4_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_add_patch_111_fu_1122_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_add_patch_111_fu_1122_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                    grp_add_patch_111_fu_1122_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_add_patch_111_fu_1122_ap_ready = ap_const_logic_1)) then 
                    grp_add_patch_111_fu_1122_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_get_acceptanceCorners_fu_1244_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_get_acceptanceCorners_fu_1244_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
                    grp_get_acceptanceCorners_fu_1244_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_get_acceptanceCorners_fu_1244_ap_ready = ap_const_logic_1)) then 
                    grp_get_acceptanceCorners_fu_1244_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_makeSuperPoint_alignedToLine_fu_1095_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_makeSuperPoint_alignedToLine_fu_1095_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln1098_fu_1507_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    grp_makeSuperPoint_alignedToLine_fu_1095_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_makeSuperPoint_alignedToLine_fu_1095_ap_ready = ap_const_logic_1)) then 
                    grp_makeSuperPoint_alignedToLine_fu_1095_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_1216_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_straightLineProjectorFromLayerIJtoK_fu_1216_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (icmp_ln57_reg_2861 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1)) or ((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (icmp_ln57_fu_2284_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)))) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_1216_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_straightLineProjectorFromLayerIJtoK_fu_1216_ap_ready = ap_const_logic_1)) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_1216_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_1230_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_straightLineProjectorFromLayerIJtoK_fu_1230_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (icmp_ln57_reg_2861 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1)) or ((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (icmp_ln57_fu_2284_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)))) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_1230_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_straightLineProjectorFromLayerIJtoK_fu_1230_ap_ready = ap_const_logic_1)) then 
                    grp_straightLineProjectorFromLayerIJtoK_fu_1230_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    a_4_reg_1039_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln93_reg_2703 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                a_4_reg_1039 <= select_ln96_3_reg_2717;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                a_4_reg_1039 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    a_reg_774_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1077_fu_1260_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                a_reg_774 <= select_ln1077_2_fu_1316_p3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                a_reg_774 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    b_5_reg_885_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1098_fu_1507_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                b_5_reg_885 <= ap_const_lv3_0;
            elsif (((icmp_ln1105_fu_1527_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                b_5_reg_885 <= select_ln1105_2_fu_1583_p3;
            end if; 
        end if;
    end process;

    b_6_reg_962_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                b_6_reg_962 <= ap_const_lv3_0;
            elsif (((icmp_ln1120_fu_1774_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                b_6_reg_962 <= select_ln1120_2_fu_1818_p3;
            end if; 
        end if;
    end process;

    b_8_reg_1061_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln93_reg_2703 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                b_8_reg_1061 <= select_ln98_3_reg_2722;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                b_8_reg_1061 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    b_reg_796_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1077_fu_1260_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                b_reg_796 <= select_ln1079_3_fu_1344_p3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                b_reg_796 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    c_5_reg_907_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1098_fu_1507_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                c_5_reg_907 <= ap_const_lv2_0;
            elsif (((icmp_ln1105_fu_1527_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                c_5_reg_907 <= select_ln1107_3_fu_1611_p3;
            end if; 
        end if;
    end process;

    c_6_reg_984_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                c_6_reg_984 <= ap_const_lv3_0;
            elsif (((icmp_ln1120_fu_1774_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                c_6_reg_984 <= select_ln1122_3_fu_1846_p3;
            end if; 
        end if;
    end process;

    c_8_reg_1072_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln93_fu_1940_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                c_8_reg_1072 <= add_ln100_fu_2155_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                c_8_reg_1072 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    c_reg_818_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1077_fu_1260_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                c_reg_818 <= select_ln1081_3_fu_1408_p3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                c_reg_818 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    d_4_reg_929_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1098_fu_1507_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                d_4_reg_929 <= ap_const_lv5_0;
            elsif (((icmp_ln1105_fu_1527_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                d_4_reg_929 <= select_ln1109_3_fu_1675_p3;
            end if; 
        end if;
    end process;

    d_6_reg_995_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                d_6_reg_995 <= ap_const_lv3_0;
            elsif (((icmp_ln1120_fu_1774_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                d_6_reg_995 <= add_ln1124_fu_1900_p2;
            end if; 
        end if;
    end process;

    d_reg_829_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1077_fu_1260_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                d_reg_829 <= add_ln1083_fu_1467_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                d_reg_829 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    e_reg_940_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1098_fu_1507_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                e_reg_940 <= ap_const_lv2_0;
            elsif (((icmp_ln1105_fu_1527_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                e_reg_940 <= add_ln1111_fu_1734_p2;
            end if; 
        end if;
    end process;

    empty_101_fu_334_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                empty_101_fu_334 <= ap_const_lv64_0;
            elsif (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (icmp_ln70_reg_2871 = ap_const_lv1_1) and (icmp_ln57_reg_2861 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1))) then 
                empty_101_fu_334 <= add_ln79_fu_2419_p2;
            end if; 
        end if;
    end process;

    i_16_reg_1017_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln93_reg_2703 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                i_16_reg_1017 <= select_ln93_2_reg_2707;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                i_16_reg_1017 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    i_20_reg_1083_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                i_20_reg_1083 <= ap_const_lv31_1;
            elsif (((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (icmp_ln57_reg_2861 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
                i_20_reg_1083 <= j_reg_2880;
            end if; 
        end if;
    end process;

    i_reg_862_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                i_reg_862 <= ap_const_lv3_0;
            elsif (((grp_makeSuperPoint_alignedToLine_fu_1095_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                i_reg_862 <= i_17_reg_2603;
            end if; 
        end if;
    end process;

    indvar_flatten105_reg_951_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                indvar_flatten105_reg_951 <= ap_const_lv7_0;
            elsif (((icmp_ln1120_fu_1774_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                indvar_flatten105_reg_951 <= add_ln1120_2_fu_1768_p2;
            end if; 
        end if;
    end process;

    indvar_flatten113_reg_1050_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln93_fu_1940_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                indvar_flatten113_reg_1050 <= select_ln98_4_fu_2167_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                indvar_flatten113_reg_1050 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    indvar_flatten127_reg_1028_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln93_fu_1940_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                indvar_flatten127_reg_1028 <= select_ln96_4_fu_2181_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                indvar_flatten127_reg_1028 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    indvar_flatten13_reg_785_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1077_fu_1260_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                indvar_flatten13_reg_785 <= select_ln1079_4_fu_1493_p3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten13_reg_785 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    indvar_flatten151_reg_1006_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln93_fu_1940_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                indvar_flatten151_reg_1006 <= add_ln93_fu_1934_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                indvar_flatten151_reg_1006 <= ap_const_lv72_0;
            end if; 
        end if;
    end process;

    indvar_flatten37_reg_763_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1077_fu_1260_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                indvar_flatten37_reg_763 <= add_ln1077_2_fu_1254_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten37_reg_763 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    indvar_flatten45_reg_918_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1098_fu_1507_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                indvar_flatten45_reg_918 <= ap_const_lv7_0;
            elsif (((icmp_ln1105_fu_1527_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                indvar_flatten45_reg_918 <= select_ln1109_4_fu_1746_p3;
            end if; 
        end if;
    end process;

    indvar_flatten59_reg_896_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1098_fu_1507_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                indvar_flatten59_reg_896 <= ap_const_lv8_0;
            elsif (((icmp_ln1105_fu_1527_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                indvar_flatten59_reg_896 <= select_ln1107_4_fu_1760_p3;
            end if; 
        end if;
    end process;

    indvar_flatten83_reg_874_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1098_fu_1507_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                indvar_flatten83_reg_874 <= ap_const_lv10_0;
            elsif (((icmp_ln1105_fu_1527_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                indvar_flatten83_reg_874 <= add_ln1105_2_fu_1521_p2;
            end if; 
        end if;
    end process;

    indvar_flatten91_reg_973_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                indvar_flatten91_reg_973 <= ap_const_lv6_0;
            elsif (((icmp_ln1120_fu_1774_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                indvar_flatten91_reg_973 <= select_ln1122_4_fu_1912_p3;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_807_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1077_fu_1260_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                indvar_flatten_reg_807 <= select_ln1081_4_fu_1479_p3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_807 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    ppl_0_reg_852_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                ppl_0_reg_852 <= p_read;
            elsif (((grp_makeSuperPoint_alignedToLine_fu_1095_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                ppl_0_reg_852 <= grp_makeSuperPoint_alignedToLine_fu_1095_ap_return_0;
            end if; 
        end if;
    end process;

    superpoint_count_assign_reg_840_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                superpoint_count_assign_reg_840 <= ap_const_lv32_0;
            elsif (((grp_makeSuperPoint_alignedToLine_fu_1095_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                superpoint_count_assign_reg_840 <= grp_makeSuperPoint_alignedToLine_fu_1095_ap_return_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln93_fu_1940_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                NPpatches_superpoints_0_addr_6_reg_2752 <= zext_ln102_4_fu_2141_p1(8 - 1 downto 0);
                NPpatches_superpoints_1_addr_2_reg_2757 <= zext_ln102_4_fu_2141_p1(8 - 1 downto 0);
                NPpatches_superpoints_2_addr_2_reg_2762 <= zext_ln102_4_fu_2141_p1(8 - 1 downto 0);
                NPpatches_superpoints_3_addr_2_reg_2767 <= zext_ln102_4_fu_2141_p1(8 - 1 downto 0);
                NPpatches_superpoints_4_addr_2_reg_2772 <= zext_ln102_4_fu_2141_p1(8 - 1 downto 0);
                trunc_ln93_reg_2712 <= trunc_ln93_fu_1973_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                NPpatches_superpoints_0_load_2_reg_2804 <= NPpatches_superpoints_0_q0;
                NPpatches_superpoints_0_load_reg_2799 <= NPpatches_superpoints_0_q1;
                NPpatches_superpoints_1_load_2_reg_2841 <= NPpatches_superpoints_1_q0;
                NPpatches_superpoints_1_load_reg_2821 <= NPpatches_superpoints_1_q1;
                NPpatches_superpoints_2_load_2_reg_2846 <= NPpatches_superpoints_2_q0;
                NPpatches_superpoints_2_load_reg_2826 <= NPpatches_superpoints_2_q1;
                NPpatches_superpoints_3_load_2_reg_2851 <= NPpatches_superpoints_3_q0;
                NPpatches_superpoints_3_load_reg_2831 <= NPpatches_superpoints_3_q1;
                NPpatches_superpoints_4_load_2_reg_2856 <= NPpatches_superpoints_4_q0;
                NPpatches_superpoints_4_load_reg_2836 <= NPpatches_superpoints_4_q1;
                sext_ln42_reg_2815 <= sext_ln42_fu_2276_p1;
                sext_ln44_reg_2809 <= sext_ln44_fu_2264_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp4_iter4 = ap_const_logic_1) and (icmp_ln57_reg_2861_pp4_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1))) then
                c_7_reg_2898 <= grp_straightLineProjectorFromLayerIJtoK_fu_1216_ap_return;
                d_5_reg_2903 <= grp_straightLineProjectorFromLayerIJtoK_fu_1230_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                i_17_reg_2603 <= i_17_fu_1501_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then
                icmp_ln57_reg_2861 <= icmp_ln57_fu_2284_p2;
                icmp_ln57_reg_2861_pp4_iter1_reg <= icmp_ln57_reg_2861;
                icmp_ln57_reg_2861_pp4_iter2_reg <= icmp_ln57_reg_2861_pp4_iter1_reg;
                icmp_ln57_reg_2861_pp4_iter3_reg <= icmp_ln57_reg_2861_pp4_iter2_reg;
                icmp_ln57_reg_2861_pp4_iter4_reg <= icmp_ln57_reg_2861_pp4_iter3_reg;
                icmp_ln70_reg_2871_pp4_iter1_reg <= icmp_ln70_reg_2871;
                icmp_ln70_reg_2871_pp4_iter2_reg <= icmp_ln70_reg_2871_pp4_iter1_reg;
                icmp_ln70_reg_2871_pp4_iter3_reg <= icmp_ln70_reg_2871_pp4_iter2_reg;
                icmp_ln70_reg_2871_pp4_iter4_reg <= icmp_ln70_reg_2871_pp4_iter3_reg;
                    sub_ln72_reg_2875_pp4_iter1_reg(4 downto 1) <= sub_ln72_reg_2875(4 downto 1);
                    sub_ln72_reg_2875_pp4_iter2_reg(4 downto 1) <= sub_ln72_reg_2875_pp4_iter1_reg(4 downto 1);
                    sub_ln72_reg_2875_pp4_iter3_reg(4 downto 1) <= sub_ln72_reg_2875_pp4_iter2_reg(4 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln57_fu_2284_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then
                icmp_ln70_reg_2871 <= icmp_ln70_fu_2307_p2;
                trunc_ln61_reg_2865 <= trunc_ln61_fu_2293_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                icmp_ln93_reg_2703 <= icmp_ln93_fu_1940_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (icmp_ln57_reg_2861 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1))) then
                j_reg_2880 <= j_fu_2343_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                mul_ln1133_reg_2693 <= mul_ln1133_fu_1928_p2;
                sext_ln1133_reg_2688 <= sext_ln1133_fu_1920_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln93_fu_1940_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                select_ln93_2_reg_2707 <= select_ln93_2_fu_1965_p3;
                select_ln96_3_reg_2717 <= select_ln96_3_fu_2027_p3;
                select_ln98_3_reg_2722 <= select_ln98_3_fu_2091_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln70_fu_2307_p2 = ap_const_lv1_1) and (icmp_ln57_fu_2284_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then
                    sub_ln72_reg_2875(4 downto 1) <= sub_ln72_fu_2337_p2(4 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln70_reg_2871 = ap_const_lv1_1) and (icmp_ln57_reg_2861 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1))) then
                    sub_ln73_reg_2891(4 downto 1) <= sub_ln73_fu_2391_p2(4 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1))) then
                    sub_ln73_reg_2891_pp4_iter1_reg(4 downto 1) <= sub_ln73_reg_2891(4 downto 1);
                    sub_ln73_reg_2891_pp4_iter2_reg(4 downto 1) <= sub_ln73_reg_2891_pp4_iter1_reg(4 downto 1);
                    sub_ln73_reg_2891_pp4_iter3_reg(4 downto 1) <= sub_ln73_reg_2891_pp4_iter2_reg(4 downto 1);
                    sub_ln73_reg_2891_pp4_iter4_reg(4 downto 1) <= sub_ln73_reg_2891_pp4_iter3_reg(4 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln57_reg_2861 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1))) then
                    zext_ln64_reg_2885(30 downto 0) <= zext_ln64_fu_2361_p1(30 downto 0);
            end if;
        end if;
    end process;
    sub_ln72_reg_2875(0) <= '0';
    sub_ln72_reg_2875_pp4_iter1_reg(0) <= '0';
    sub_ln72_reg_2875_pp4_iter2_reg(0) <= '0';
    sub_ln72_reg_2875_pp4_iter3_reg(0) <= '0';
    zext_ln64_reg_2885(31) <= '0';
    sub_ln73_reg_2891(0) <= '0';
    sub_ln73_reg_2891_pp4_iter1_reg(0) <= '0';
    sub_ln73_reg_2891_pp4_iter2_reg(0) <= '0';
    sub_ln73_reg_2891_pp4_iter3_reg(0) <= '0';
    sub_ln73_reg_2891_pp4_iter4_reg(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln1077_fu_1260_p2, ap_CS_fsm_state4, icmp_ln1098_fu_1507_p2, ap_CS_fsm_state5, ap_CS_fsm_state6, icmp_ln1105_fu_1527_p2, ap_CS_fsm_state8, icmp_ln1120_fu_1774_p2, ap_enable_reg_pp3_iter0, icmp_ln93_fu_1940_p2, icmp_ln57_fu_2284_p2, ap_enable_reg_pp4_iter0, ap_enable_reg_pp4_iter4, ap_CS_fsm_state30, ap_block_pp3_stage0_subdone, ap_block_pp4_stage0_subdone, ap_enable_reg_pp4_iter1, ap_block_pp4_stage2_subdone, ap_CS_fsm_pp4_stage2, ap_enable_reg_pp4_iter3, grp_makeSuperPoint_alignedToLine_fu_1095_ap_done, grp_add_patch_111_fu_1122_ap_done, grp_get_acceptanceCorners_fu_1244_ap_done, ap_CS_fsm_state32, ap_block_pp4_stage1_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln1077_fu_1260_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((icmp_ln1098_fu_1507_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((grp_makeSuperPoint_alignedToLine_fu_1095_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln1105_fu_1527_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((icmp_ln1120_fu_1774_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
            when ap_ST_fsm_pp3_stage0 => 
                if (not(((icmp_ln93_fu_1940_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif (((icmp_ln93_fu_1940_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
            when ap_ST_fsm_pp4_stage0 => 
                if ((not(((ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (icmp_ln57_fu_2284_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage1;
                elsif (((ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (icmp_ln57_fu_2284_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                end if;
            when ap_ST_fsm_pp4_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp4_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage1;
                end if;
            when ap_ST_fsm_pp4_stage2 => 
                if ((not(((ap_enable_reg_pp4_iter3 = ap_const_logic_0) and (ap_enable_reg_pp4_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2))) and (ap_const_boolean_0 = ap_block_pp4_stage2_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                elsif (((ap_enable_reg_pp4_iter3 = ap_const_logic_0) and (ap_enable_reg_pp4_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage2;
                end if;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state30) and (grp_get_acceptanceCorners_fu_1244_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                if (((grp_add_patch_111_fu_1122_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    GDarray_address0 <= grp_makeSuperPoint_alignedToLine_fu_1095_GDarray_address0;
    GDarray_ce0 <= grp_makeSuperPoint_alignedToLine_fu_1095_GDarray_ce0;
    GDn_points_address0 <= grp_makeSuperPoint_alignedToLine_fu_1095_GDn_points_address0;
    GDn_points_ce0 <= grp_makeSuperPoint_alignedToLine_fu_1095_GDn_points_ce0;

    NPpatches_parameters_0_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp4_stage1, ap_enable_reg_pp4_iter0, ap_enable_reg_pp4_iter4, ap_CS_fsm_state30, ap_CS_fsm_pp4_stage2, grp_add_patch_111_fu_1122_wp_parameters_address0, grp_get_acceptanceCorners_fu_1244_wp_parameters_address0, ap_block_pp4_stage0, ap_CS_fsm_state32, ap_block_pp4_stage1, ap_block_pp4_stage2, zext_ln1126_4_fu_1894_p1, zext_ln76_fu_2403_p1, zext_ln73_2_fu_2452_p1, zext_ln74_fu_2462_p1)
    begin
        if (((ap_enable_reg_pp4_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2))) then 
            NPpatches_parameters_0_address0 <= zext_ln74_fu_2462_p1(5 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
            NPpatches_parameters_0_address0 <= zext_ln73_2_fu_2452_p1(5 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1))) then 
            NPpatches_parameters_0_address0 <= zext_ln76_fu_2403_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            NPpatches_parameters_0_address0 <= zext_ln1126_4_fu_1894_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            NPpatches_parameters_0_address0 <= grp_get_acceptanceCorners_fu_1244_wp_parameters_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            NPpatches_parameters_0_address0 <= grp_add_patch_111_fu_1122_wp_parameters_address0;
        else 
            NPpatches_parameters_0_address0 <= "XXXXX";
        end if; 
    end process;


    NPpatches_parameters_0_address1_assign_proc : process(ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp4_stage1, ap_enable_reg_pp4_iter0, ap_enable_reg_pp4_iter4, ap_CS_fsm_state30, ap_CS_fsm_pp4_stage2, grp_get_acceptanceCorners_fu_1244_wp_parameters_address1, ap_block_pp4_stage0, ap_block_pp4_stage1, ap_block_pp4_stage2, zext_ln77_fu_2414_p1, zext_ln72_fu_2443_p1, zext_ln75_fu_2472_p1)
    begin
        if (((ap_enable_reg_pp4_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2))) then 
            NPpatches_parameters_0_address1 <= zext_ln75_fu_2472_p1(5 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
            NPpatches_parameters_0_address1 <= zext_ln72_fu_2443_p1(5 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1))) then 
            NPpatches_parameters_0_address1 <= zext_ln77_fu_2414_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            NPpatches_parameters_0_address1 <= grp_get_acceptanceCorners_fu_1244_wp_parameters_address1;
        else 
            NPpatches_parameters_0_address1 <= "XXXXX";
        end if; 
    end process;


    NPpatches_parameters_0_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_CS_fsm_pp4_stage1, ap_enable_reg_pp4_iter0, ap_block_pp4_stage1_11001, ap_enable_reg_pp4_iter4, ap_CS_fsm_state30, ap_CS_fsm_pp4_stage2, grp_add_patch_111_fu_1122_wp_parameters_ce0, grp_get_acceptanceCorners_fu_1244_wp_parameters_ce0, ap_CS_fsm_state32, ap_block_pp4_stage2_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_enable_reg_pp4_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)) or ((ap_enable_reg_pp4_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2)) or ((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1)))) then 
            NPpatches_parameters_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            NPpatches_parameters_0_ce0 <= grp_get_acceptanceCorners_fu_1244_wp_parameters_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            NPpatches_parameters_0_ce0 <= grp_add_patch_111_fu_1122_wp_parameters_ce0;
        else 
            NPpatches_parameters_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_0_ce1_assign_proc : process(ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_CS_fsm_pp4_stage1, ap_enable_reg_pp4_iter0, ap_block_pp4_stage1_11001, ap_enable_reg_pp4_iter4, ap_CS_fsm_state30, ap_CS_fsm_pp4_stage2, grp_get_acceptanceCorners_fu_1244_wp_parameters_ce1, ap_block_pp4_stage2_11001)
    begin
        if ((((ap_enable_reg_pp4_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)) or ((ap_enable_reg_pp4_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2)) or ((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1)))) then 
            NPpatches_parameters_0_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            NPpatches_parameters_0_ce1 <= grp_get_acceptanceCorners_fu_1244_wp_parameters_ce1;
        else 
            NPpatches_parameters_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_0_d0_assign_proc : process(ap_CS_fsm_state8, sext_ln44_reg_2809, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp4_stage1, ap_enable_reg_pp4_iter0, c_7_reg_2898, ap_enable_reg_pp4_iter4, grp_straightLineProjectorFromLayerIJtoK_fu_1230_ap_return, ap_CS_fsm_pp4_stage2, ap_block_pp4_stage0, ap_block_pp4_stage1, ap_block_pp4_stage2)
    begin
        if (((ap_enable_reg_pp4_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2))) then 
            NPpatches_parameters_0_d0 <= c_7_reg_2898;
        elsif (((ap_enable_reg_pp4_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
            NPpatches_parameters_0_d0 <= grp_straightLineProjectorFromLayerIJtoK_fu_1230_ap_return;
        elsif (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1))) then 
            NPpatches_parameters_0_d0 <= sext_ln44_reg_2809;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            NPpatches_parameters_0_d0 <= ap_const_lv64_0;
        else 
            NPpatches_parameters_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    NPpatches_parameters_0_d1_assign_proc : process(sext_ln42_reg_2815, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp4_stage1, ap_enable_reg_pp4_iter0, grp_straightLineProjectorFromLayerIJtoK_fu_1216_ap_return, ap_enable_reg_pp4_iter4, d_5_reg_2903, ap_CS_fsm_pp4_stage2, ap_block_pp4_stage0, ap_block_pp4_stage1, ap_block_pp4_stage2)
    begin
        if (((ap_enable_reg_pp4_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2))) then 
            NPpatches_parameters_0_d1 <= d_5_reg_2903;
        elsif (((ap_enable_reg_pp4_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
            NPpatches_parameters_0_d1 <= grp_straightLineProjectorFromLayerIJtoK_fu_1216_ap_return;
        elsif (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1))) then 
            NPpatches_parameters_0_d1 <= sext_ln42_reg_2815;
        else 
            NPpatches_parameters_0_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    NPpatches_parameters_0_we0_assign_proc : process(ap_CS_fsm_state8, select_ln1120_2_fu_1818_p3, icmp_ln1120_fu_1774_p2, icmp_ln57_reg_2861, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, icmp_ln70_reg_2871, icmp_ln70_reg_2871_pp4_iter3_reg, icmp_ln70_reg_2871_pp4_iter4_reg, ap_CS_fsm_pp4_stage1, ap_enable_reg_pp4_iter0, ap_block_pp4_stage1_11001, ap_enable_reg_pp4_iter4, ap_CS_fsm_pp4_stage2, ap_block_pp4_stage2_11001)
    begin
        if ((((ap_enable_reg_pp4_iter4 = ap_const_logic_1) and (icmp_ln70_reg_2871_pp4_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2)) or ((ap_enable_reg_pp4_iter4 = ap_const_logic_1) and (icmp_ln70_reg_2871_pp4_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)) or ((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (icmp_ln70_reg_2871 = ap_const_lv1_1) and (icmp_ln57_reg_2861 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1)) or ((icmp_ln1120_fu_1774_p2 = ap_const_lv1_0) and (select_ln1120_2_fu_1818_p3 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            NPpatches_parameters_0_we0 <= ap_const_logic_1;
        else 
            NPpatches_parameters_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_0_we1_assign_proc : process(icmp_ln57_reg_2861, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, icmp_ln70_reg_2871, icmp_ln70_reg_2871_pp4_iter3_reg, icmp_ln70_reg_2871_pp4_iter4_reg, ap_CS_fsm_pp4_stage1, ap_enable_reg_pp4_iter0, ap_block_pp4_stage1_11001, ap_enable_reg_pp4_iter4, ap_CS_fsm_pp4_stage2, ap_block_pp4_stage2_11001)
    begin
        if ((((ap_enable_reg_pp4_iter4 = ap_const_logic_1) and (icmp_ln70_reg_2871_pp4_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2)) or ((ap_enable_reg_pp4_iter4 = ap_const_logic_1) and (icmp_ln70_reg_2871_pp4_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)) or ((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (icmp_ln70_reg_2871 = ap_const_lv1_1) and (icmp_ln57_reg_2861 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1)))) then 
            NPpatches_parameters_0_we1 <= ap_const_logic_1;
        else 
            NPpatches_parameters_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_229_address0_assign_proc : process(ap_CS_fsm_state30, grp_add_patch_111_fu_1122_wp_parameters6_address0, grp_get_acceptanceCorners_fu_1244_wp_parameters2_address0, ap_CS_fsm_state32)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            NPpatches_parameters_229_address0 <= grp_get_acceptanceCorners_fu_1244_wp_parameters2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            NPpatches_parameters_229_address0 <= grp_add_patch_111_fu_1122_wp_parameters6_address0;
        else 
            NPpatches_parameters_229_address0 <= "XXXXX";
        end if; 
    end process;

    NPpatches_parameters_229_address1 <= grp_get_acceptanceCorners_fu_1244_wp_parameters2_address1;

    NPpatches_parameters_229_ce0_assign_proc : process(ap_CS_fsm_state30, grp_add_patch_111_fu_1122_wp_parameters6_ce0, grp_get_acceptanceCorners_fu_1244_wp_parameters2_ce0, ap_CS_fsm_state32)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            NPpatches_parameters_229_ce0 <= grp_get_acceptanceCorners_fu_1244_wp_parameters2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            NPpatches_parameters_229_ce0 <= grp_add_patch_111_fu_1122_wp_parameters6_ce0;
        else 
            NPpatches_parameters_229_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_229_ce1_assign_proc : process(ap_CS_fsm_state30, grp_get_acceptanceCorners_fu_1244_wp_parameters2_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            NPpatches_parameters_229_ce1 <= grp_get_acceptanceCorners_fu_1244_wp_parameters2_ce1;
        else 
            NPpatches_parameters_229_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    NPpatches_parameters_229_d0 <= grp_get_acceptanceCorners_fu_1244_wp_parameters2_d0;
    NPpatches_parameters_229_d1 <= grp_get_acceptanceCorners_fu_1244_wp_parameters2_d1;

    NPpatches_parameters_229_we0_assign_proc : process(ap_CS_fsm_state30, grp_get_acceptanceCorners_fu_1244_wp_parameters2_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            NPpatches_parameters_229_we0 <= grp_get_acceptanceCorners_fu_1244_wp_parameters2_we0;
        else 
            NPpatches_parameters_229_we0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_229_we1_assign_proc : process(ap_CS_fsm_state30, grp_get_acceptanceCorners_fu_1244_wp_parameters2_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            NPpatches_parameters_229_we1 <= grp_get_acceptanceCorners_fu_1244_wp_parameters2_we1;
        else 
            NPpatches_parameters_229_we1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_330_address0_assign_proc : process(ap_CS_fsm_state30, grp_add_patch_111_fu_1122_wp_parameters7_address0, grp_get_acceptanceCorners_fu_1244_wp_parameters3_address0, ap_CS_fsm_state32)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            NPpatches_parameters_330_address0 <= grp_get_acceptanceCorners_fu_1244_wp_parameters3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            NPpatches_parameters_330_address0 <= grp_add_patch_111_fu_1122_wp_parameters7_address0;
        else 
            NPpatches_parameters_330_address0 <= "XXXXX";
        end if; 
    end process;

    NPpatches_parameters_330_address1 <= grp_get_acceptanceCorners_fu_1244_wp_parameters3_address1;

    NPpatches_parameters_330_ce0_assign_proc : process(ap_CS_fsm_state30, grp_add_patch_111_fu_1122_wp_parameters7_ce0, grp_get_acceptanceCorners_fu_1244_wp_parameters3_ce0, ap_CS_fsm_state32)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            NPpatches_parameters_330_ce0 <= grp_get_acceptanceCorners_fu_1244_wp_parameters3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            NPpatches_parameters_330_ce0 <= grp_add_patch_111_fu_1122_wp_parameters7_ce0;
        else 
            NPpatches_parameters_330_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_330_ce1_assign_proc : process(ap_CS_fsm_state30, grp_get_acceptanceCorners_fu_1244_wp_parameters3_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            NPpatches_parameters_330_ce1 <= grp_get_acceptanceCorners_fu_1244_wp_parameters3_ce1;
        else 
            NPpatches_parameters_330_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    NPpatches_parameters_330_d0 <= grp_get_acceptanceCorners_fu_1244_wp_parameters3_d0;
    NPpatches_parameters_330_d1 <= grp_get_acceptanceCorners_fu_1244_wp_parameters3_d1;

    NPpatches_parameters_330_we0_assign_proc : process(ap_CS_fsm_state30, grp_get_acceptanceCorners_fu_1244_wp_parameters3_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            NPpatches_parameters_330_we0 <= grp_get_acceptanceCorners_fu_1244_wp_parameters3_we0;
        else 
            NPpatches_parameters_330_we0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_330_we1_assign_proc : process(ap_CS_fsm_state30, grp_get_acceptanceCorners_fu_1244_wp_parameters3_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            NPpatches_parameters_330_we1 <= grp_get_acceptanceCorners_fu_1244_wp_parameters3_we1;
        else 
            NPpatches_parameters_330_we1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_4_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state30, grp_add_patch_111_fu_1122_wp_parameters8_address0, grp_get_acceptanceCorners_fu_1244_wp_parameters4_address0, ap_CS_fsm_state32, zext_ln1126_4_fu_1894_p1, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_parameters_4_address0 <= ap_const_lv64_C(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            NPpatches_parameters_4_address0 <= ap_const_lv64_0(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            NPpatches_parameters_4_address0 <= zext_ln1126_4_fu_1894_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            NPpatches_parameters_4_address0 <= grp_get_acceptanceCorners_fu_1244_wp_parameters4_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            NPpatches_parameters_4_address0 <= grp_add_patch_111_fu_1122_wp_parameters8_address0;
        else 
            NPpatches_parameters_4_address0 <= "XXXXX";
        end if; 
    end process;


    NPpatches_parameters_4_address1_assign_proc : process(ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp4_stage1, ap_enable_reg_pp4_iter0, ap_block_pp4_stage0, ap_block_pp4_stage1, ap_CS_fsm_state12)
    begin
        if ((((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1)) or ((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)))) then 
            NPpatches_parameters_4_address1 <= ap_const_lv64_C(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_parameters_4_address1 <= ap_const_lv64_6(5 - 1 downto 0);
        else 
            NPpatches_parameters_4_address1 <= "XXXXX";
        end if; 
    end process;


    NPpatches_parameters_4_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state30, grp_add_patch_111_fu_1122_wp_parameters8_ce0, grp_get_acceptanceCorners_fu_1244_wp_parameters4_ce0, ap_CS_fsm_state32, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            NPpatches_parameters_4_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            NPpatches_parameters_4_ce0 <= grp_get_acceptanceCorners_fu_1244_wp_parameters4_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            NPpatches_parameters_4_ce0 <= grp_add_patch_111_fu_1122_wp_parameters8_ce0;
        else 
            NPpatches_parameters_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_4_ce1_assign_proc : process(ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_CS_fsm_pp4_stage1, ap_enable_reg_pp4_iter0, ap_block_pp4_stage1_11001, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1)) or ((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)))) then 
            NPpatches_parameters_4_ce1 <= ap_const_logic_1;
        else 
            NPpatches_parameters_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_4_d0_assign_proc : process(apexZ0, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            NPpatches_parameters_4_d0 <= apexZ0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            NPpatches_parameters_4_d0 <= ap_const_lv64_0;
        else 
            NPpatches_parameters_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    NPpatches_parameters_4_d1_assign_proc : process(sext_ln1133_reg_2688, ap_CS_fsm_pp4_stage1, ap_enable_reg_pp4_iter0, ap_block_pp4_stage1, add_ln79_fu_2419_p2, ap_CS_fsm_state12)
    begin
        if (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1))) then 
            NPpatches_parameters_4_d1 <= add_ln79_fu_2419_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_parameters_4_d1 <= sext_ln1133_reg_2688;
        else 
            NPpatches_parameters_4_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    NPpatches_parameters_4_we0_assign_proc : process(ap_CS_fsm_state8, select_ln1120_2_fu_1818_p3, icmp_ln1120_fu_1774_p2, ap_CS_fsm_state9, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state12) or (not((select_ln1120_2_fu_1818_p3 = ap_const_lv3_3)) and not((select_ln1120_2_fu_1818_p3 = ap_const_lv3_2)) and not((select_ln1120_2_fu_1818_p3 = ap_const_lv3_1)) and not((select_ln1120_2_fu_1818_p3 = ap_const_lv3_0)) and (icmp_ln1120_fu_1774_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            NPpatches_parameters_4_we0 <= ap_const_logic_1;
        else 
            NPpatches_parameters_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_parameters_4_we1_assign_proc : process(icmp_ln57_reg_2861, icmp_ln70_reg_2871, ap_CS_fsm_pp4_stage1, ap_enable_reg_pp4_iter0, ap_block_pp4_stage1_11001, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (icmp_ln70_reg_2871 = ap_const_lv1_1) and (icmp_ln57_reg_2861 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1)))) then 
            NPpatches_parameters_4_we1 <= ap_const_logic_1;
        else 
            NPpatches_parameters_4_we1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_0_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_pp3_stage0, NPpatches_superpoints_0_addr_6_reg_2752, ap_enable_reg_pp3_iter1, grp_add_patch_111_fu_1122_wp_superpoints_address0, ap_block_pp3_stage0, ap_CS_fsm_state32, zext_ln1113_4_fu_1725_p1, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_0_address0 <= ap_const_lv64_66(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            NPpatches_superpoints_0_address0 <= NPpatches_superpoints_0_addr_6_reg_2752;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            NPpatches_superpoints_0_address0 <= zext_ln1113_4_fu_1725_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            NPpatches_superpoints_0_address0 <= grp_add_patch_111_fu_1122_wp_superpoints_address0;
        else 
            NPpatches_superpoints_0_address0 <= "XXXXXXXX";
        end if; 
    end process;


    NPpatches_superpoints_0_address1_assign_proc : process(grp_add_patch_111_fu_1122_wp_superpoints_address1, ap_CS_fsm_state32, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_0_address1 <= ap_const_lv64_63(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            NPpatches_superpoints_0_address1 <= grp_add_patch_111_fu_1122_wp_superpoints_address1;
        else 
            NPpatches_superpoints_0_address1 <= "XXXXXXXX";
        end if; 
    end process;


    NPpatches_superpoints_0_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter1, grp_add_patch_111_fu_1122_wp_superpoints_ce0, ap_CS_fsm_state32, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            NPpatches_superpoints_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            NPpatches_superpoints_0_ce0 <= grp_add_patch_111_fu_1122_wp_superpoints_ce0;
        else 
            NPpatches_superpoints_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_0_ce1_assign_proc : process(grp_add_patch_111_fu_1122_wp_superpoints_ce1, ap_CS_fsm_state32, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_0_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            NPpatches_superpoints_0_ce1 <= grp_add_patch_111_fu_1122_wp_superpoints_ce1;
        else 
            NPpatches_superpoints_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_0_d0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, tmp_fu_2189_p7)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            NPpatches_superpoints_0_d0 <= tmp_fu_2189_p7;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            NPpatches_superpoints_0_d0 <= ap_const_lv64_0;
        else 
            NPpatches_superpoints_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    NPpatches_superpoints_0_we0_assign_proc : process(ap_CS_fsm_state6, select_ln1105_2_fu_1583_p3, icmp_ln1105_fu_1527_p2, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, trunc_ln93_reg_2712, ap_enable_reg_pp3_iter1)
    begin
        if ((((icmp_ln1105_fu_1527_p2 = ap_const_lv1_0) and (select_ln1105_2_fu_1583_p3 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (trunc_ln93_reg_2712 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            NPpatches_superpoints_0_we0 <= ap_const_logic_1;
        else 
            NPpatches_superpoints_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_1_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_pp3_stage0, NPpatches_superpoints_1_addr_2_reg_2757, ap_enable_reg_pp3_iter1, grp_add_patch_111_fu_1122_wp_superpoints1_address0, ap_block_pp3_stage0, ap_CS_fsm_state32, zext_ln1113_4_fu_1725_p1, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_1_address0 <= ap_const_lv64_66(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            NPpatches_superpoints_1_address0 <= NPpatches_superpoints_1_addr_2_reg_2757;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            NPpatches_superpoints_1_address0 <= zext_ln1113_4_fu_1725_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            NPpatches_superpoints_1_address0 <= grp_add_patch_111_fu_1122_wp_superpoints1_address0;
        else 
            NPpatches_superpoints_1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    NPpatches_superpoints_1_address1_assign_proc : process(grp_add_patch_111_fu_1122_wp_superpoints1_address1, ap_CS_fsm_state32, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_1_address1 <= ap_const_lv64_63(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            NPpatches_superpoints_1_address1 <= grp_add_patch_111_fu_1122_wp_superpoints1_address1;
        else 
            NPpatches_superpoints_1_address1 <= "XXXXXXXX";
        end if; 
    end process;


    NPpatches_superpoints_1_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter1, grp_add_patch_111_fu_1122_wp_superpoints1_ce0, ap_CS_fsm_state32, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            NPpatches_superpoints_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            NPpatches_superpoints_1_ce0 <= grp_add_patch_111_fu_1122_wp_superpoints1_ce0;
        else 
            NPpatches_superpoints_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_1_ce1_assign_proc : process(grp_add_patch_111_fu_1122_wp_superpoints1_ce1, ap_CS_fsm_state32, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_1_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            NPpatches_superpoints_1_ce1 <= grp_add_patch_111_fu_1122_wp_superpoints1_ce1;
        else 
            NPpatches_superpoints_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_1_d0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, tmp_fu_2189_p7)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            NPpatches_superpoints_1_d0 <= tmp_fu_2189_p7;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            NPpatches_superpoints_1_d0 <= ap_const_lv64_0;
        else 
            NPpatches_superpoints_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    NPpatches_superpoints_1_we0_assign_proc : process(ap_CS_fsm_state6, select_ln1105_2_fu_1583_p3, icmp_ln1105_fu_1527_p2, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, trunc_ln93_reg_2712, ap_enable_reg_pp3_iter1)
    begin
        if ((((icmp_ln1105_fu_1527_p2 = ap_const_lv1_0) and (select_ln1105_2_fu_1583_p3 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (trunc_ln93_reg_2712 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            NPpatches_superpoints_1_we0 <= ap_const_logic_1;
        else 
            NPpatches_superpoints_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_2_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_pp3_stage0, NPpatches_superpoints_2_addr_2_reg_2762, ap_enable_reg_pp3_iter1, grp_add_patch_111_fu_1122_wp_superpoints2_address0, ap_block_pp3_stage0, ap_CS_fsm_state32, zext_ln1113_4_fu_1725_p1, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_2_address0 <= ap_const_lv64_66(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            NPpatches_superpoints_2_address0 <= NPpatches_superpoints_2_addr_2_reg_2762;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            NPpatches_superpoints_2_address0 <= zext_ln1113_4_fu_1725_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            NPpatches_superpoints_2_address0 <= grp_add_patch_111_fu_1122_wp_superpoints2_address0;
        else 
            NPpatches_superpoints_2_address0 <= "XXXXXXXX";
        end if; 
    end process;


    NPpatches_superpoints_2_address1_assign_proc : process(grp_add_patch_111_fu_1122_wp_superpoints2_address1, ap_CS_fsm_state32, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_2_address1 <= ap_const_lv64_63(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            NPpatches_superpoints_2_address1 <= grp_add_patch_111_fu_1122_wp_superpoints2_address1;
        else 
            NPpatches_superpoints_2_address1 <= "XXXXXXXX";
        end if; 
    end process;


    NPpatches_superpoints_2_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter1, grp_add_patch_111_fu_1122_wp_superpoints2_ce0, ap_CS_fsm_state32, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            NPpatches_superpoints_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            NPpatches_superpoints_2_ce0 <= grp_add_patch_111_fu_1122_wp_superpoints2_ce0;
        else 
            NPpatches_superpoints_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_2_ce1_assign_proc : process(grp_add_patch_111_fu_1122_wp_superpoints2_ce1, ap_CS_fsm_state32, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_2_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            NPpatches_superpoints_2_ce1 <= grp_add_patch_111_fu_1122_wp_superpoints2_ce1;
        else 
            NPpatches_superpoints_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_2_d0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, tmp_fu_2189_p7)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            NPpatches_superpoints_2_d0 <= tmp_fu_2189_p7;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            NPpatches_superpoints_2_d0 <= ap_const_lv64_0;
        else 
            NPpatches_superpoints_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    NPpatches_superpoints_2_we0_assign_proc : process(ap_CS_fsm_state6, select_ln1105_2_fu_1583_p3, icmp_ln1105_fu_1527_p2, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, trunc_ln93_reg_2712, ap_enable_reg_pp3_iter1)
    begin
        if ((((icmp_ln1105_fu_1527_p2 = ap_const_lv1_0) and (select_ln1105_2_fu_1583_p3 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (trunc_ln93_reg_2712 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            NPpatches_superpoints_2_we0 <= ap_const_logic_1;
        else 
            NPpatches_superpoints_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_3_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_pp3_stage0, NPpatches_superpoints_3_addr_2_reg_2767, ap_enable_reg_pp3_iter1, grp_add_patch_111_fu_1122_wp_superpoints3_address0, ap_block_pp3_stage0, ap_CS_fsm_state32, zext_ln1113_4_fu_1725_p1, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_3_address0 <= ap_const_lv64_66(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            NPpatches_superpoints_3_address0 <= NPpatches_superpoints_3_addr_2_reg_2767;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            NPpatches_superpoints_3_address0 <= zext_ln1113_4_fu_1725_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            NPpatches_superpoints_3_address0 <= grp_add_patch_111_fu_1122_wp_superpoints3_address0;
        else 
            NPpatches_superpoints_3_address0 <= "XXXXXXXX";
        end if; 
    end process;


    NPpatches_superpoints_3_address1_assign_proc : process(grp_add_patch_111_fu_1122_wp_superpoints3_address1, ap_CS_fsm_state32, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_3_address1 <= ap_const_lv64_63(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            NPpatches_superpoints_3_address1 <= grp_add_patch_111_fu_1122_wp_superpoints3_address1;
        else 
            NPpatches_superpoints_3_address1 <= "XXXXXXXX";
        end if; 
    end process;


    NPpatches_superpoints_3_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter1, grp_add_patch_111_fu_1122_wp_superpoints3_ce0, ap_CS_fsm_state32, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            NPpatches_superpoints_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            NPpatches_superpoints_3_ce0 <= grp_add_patch_111_fu_1122_wp_superpoints3_ce0;
        else 
            NPpatches_superpoints_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_3_ce1_assign_proc : process(grp_add_patch_111_fu_1122_wp_superpoints3_ce1, ap_CS_fsm_state32, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_3_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            NPpatches_superpoints_3_ce1 <= grp_add_patch_111_fu_1122_wp_superpoints3_ce1;
        else 
            NPpatches_superpoints_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_3_d0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, tmp_fu_2189_p7)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            NPpatches_superpoints_3_d0 <= tmp_fu_2189_p7;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            NPpatches_superpoints_3_d0 <= ap_const_lv64_0;
        else 
            NPpatches_superpoints_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    NPpatches_superpoints_3_we0_assign_proc : process(ap_CS_fsm_state6, select_ln1105_2_fu_1583_p3, icmp_ln1105_fu_1527_p2, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, trunc_ln93_reg_2712, ap_enable_reg_pp3_iter1)
    begin
        if ((((icmp_ln1105_fu_1527_p2 = ap_const_lv1_0) and (select_ln1105_2_fu_1583_p3 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (trunc_ln93_reg_2712 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            NPpatches_superpoints_3_we0 <= ap_const_logic_1;
        else 
            NPpatches_superpoints_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_4_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_pp3_stage0, NPpatches_superpoints_4_addr_2_reg_2772, ap_enable_reg_pp3_iter1, grp_add_patch_111_fu_1122_wp_superpoints4_address0, ap_block_pp3_stage0, ap_CS_fsm_state32, zext_ln1113_4_fu_1725_p1, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_4_address0 <= ap_const_lv64_66(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            NPpatches_superpoints_4_address0 <= NPpatches_superpoints_4_addr_2_reg_2772;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            NPpatches_superpoints_4_address0 <= zext_ln1113_4_fu_1725_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            NPpatches_superpoints_4_address0 <= grp_add_patch_111_fu_1122_wp_superpoints4_address0;
        else 
            NPpatches_superpoints_4_address0 <= "XXXXXXXX";
        end if; 
    end process;


    NPpatches_superpoints_4_address1_assign_proc : process(grp_add_patch_111_fu_1122_wp_superpoints4_address1, ap_CS_fsm_state32, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_4_address1 <= ap_const_lv64_63(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            NPpatches_superpoints_4_address1 <= grp_add_patch_111_fu_1122_wp_superpoints4_address1;
        else 
            NPpatches_superpoints_4_address1 <= "XXXXXXXX";
        end if; 
    end process;


    NPpatches_superpoints_4_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter1, grp_add_patch_111_fu_1122_wp_superpoints4_ce0, ap_CS_fsm_state32, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            NPpatches_superpoints_4_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            NPpatches_superpoints_4_ce0 <= grp_add_patch_111_fu_1122_wp_superpoints4_ce0;
        else 
            NPpatches_superpoints_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_4_ce1_assign_proc : process(grp_add_patch_111_fu_1122_wp_superpoints4_ce1, ap_CS_fsm_state32, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            NPpatches_superpoints_4_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            NPpatches_superpoints_4_ce1 <= grp_add_patch_111_fu_1122_wp_superpoints4_ce1;
        else 
            NPpatches_superpoints_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    NPpatches_superpoints_4_d0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, tmp_fu_2189_p7)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            NPpatches_superpoints_4_d0 <= tmp_fu_2189_p7;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            NPpatches_superpoints_4_d0 <= ap_const_lv64_0;
        else 
            NPpatches_superpoints_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    NPpatches_superpoints_4_we0_assign_proc : process(ap_CS_fsm_state6, select_ln1105_2_fu_1583_p3, icmp_ln1105_fu_1527_p2, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, trunc_ln93_reg_2712, ap_enable_reg_pp3_iter1)
    begin
        if (((not((trunc_ln93_reg_2712 = ap_const_lv3_0)) and not((trunc_ln93_reg_2712 = ap_const_lv3_1)) and not((trunc_ln93_reg_2712 = ap_const_lv3_2)) and not((trunc_ln93_reg_2712 = ap_const_lv3_3)) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or (not((select_ln1105_2_fu_1583_p3 = ap_const_lv3_0)) and not((select_ln1105_2_fu_1583_p3 = ap_const_lv3_1)) and not((select_ln1105_2_fu_1583_p3 = ap_const_lv3_2)) and not((select_ln1105_2_fu_1583_p3 = ap_const_lv3_3)) and (icmp_ln1105_fu_1527_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            NPpatches_superpoints_4_we0 <= ap_const_logic_1;
        else 
            NPpatches_superpoints_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln100_fu_2155_p2 <= std_logic_vector(unsigned(select_ln98_fu_2083_p3) + unsigned(ap_const_lv2_1));
    add_ln102_2_fu_2135_p2 <= std_logic_vector(unsigned(sub_ln102_fu_2125_p2) + unsigned(zext_ln102_3_fu_2131_p1));
    add_ln102_fu_2103_p2 <= std_logic_vector(unsigned(zext_ln98_fu_2043_p1) + unsigned(zext_ln102_fu_2099_p1));
    add_ln1077_2_fu_1254_p2 <= std_logic_vector(unsigned(indvar_flatten37_reg_763) + unsigned(ap_const_lv10_1));
    add_ln1077_fu_1266_p2 <= std_logic_vector(unsigned(a_reg_774) + unsigned(ap_const_lv3_1));
    add_ln1079_2_fu_1487_p2 <= std_logic_vector(unsigned(indvar_flatten13_reg_785) + unsigned(ap_const_lv8_1));
    add_ln1079_fu_1324_p2 <= std_logic_vector(unsigned(select_ln1077_fu_1278_p3) + unsigned(ap_const_lv2_1));
    add_ln1081_2_fu_1473_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_807) + unsigned(ap_const_lv7_1));
    add_ln1081_fu_1382_p2 <= std_logic_vector(unsigned(select_ln1079_fu_1336_p3) + unsigned(ap_const_lv5_1));
    add_ln1083_fu_1467_p2 <= std_logic_vector(unsigned(select_ln1081_fu_1400_p3) + unsigned(ap_const_lv2_1));
    add_ln1085_2_fu_1452_p2 <= std_logic_vector(unsigned(sub_ln1085_fu_1442_p2) + unsigned(zext_ln1085_3_fu_1448_p1));
    add_ln1085_fu_1420_p2 <= std_logic_vector(unsigned(zext_ln1081_fu_1360_p1) + unsigned(zext_ln1085_fu_1416_p1));
    add_ln1105_2_fu_1521_p2 <= std_logic_vector(unsigned(indvar_flatten83_reg_874) + unsigned(ap_const_lv10_1));
    add_ln1105_fu_1533_p2 <= std_logic_vector(unsigned(b_5_reg_885) + unsigned(ap_const_lv3_1));
    add_ln1107_2_fu_1754_p2 <= std_logic_vector(unsigned(indvar_flatten59_reg_896) + unsigned(ap_const_lv8_1));
    add_ln1107_fu_1591_p2 <= std_logic_vector(unsigned(select_ln1105_fu_1545_p3) + unsigned(ap_const_lv2_1));
    add_ln1109_2_fu_1740_p2 <= std_logic_vector(unsigned(indvar_flatten45_reg_918) + unsigned(ap_const_lv7_1));
    add_ln1109_fu_1649_p2 <= std_logic_vector(unsigned(select_ln1107_fu_1603_p3) + unsigned(ap_const_lv5_1));
    add_ln1111_fu_1734_p2 <= std_logic_vector(unsigned(select_ln1109_fu_1667_p3) + unsigned(ap_const_lv2_1));
    add_ln1113_2_fu_1719_p2 <= std_logic_vector(unsigned(sub_ln1113_fu_1709_p2) + unsigned(zext_ln1113_3_fu_1715_p1));
    add_ln1113_fu_1687_p2 <= std_logic_vector(unsigned(zext_ln1109_fu_1627_p1) + unsigned(zext_ln1113_fu_1683_p1));
    add_ln1120_2_fu_1768_p2 <= std_logic_vector(unsigned(indvar_flatten105_reg_951) + unsigned(ap_const_lv7_1));
    add_ln1120_fu_1780_p2 <= std_logic_vector(unsigned(b_6_reg_962) + unsigned(ap_const_lv3_1));
    add_ln1122_2_fu_1906_p2 <= std_logic_vector(unsigned(indvar_flatten91_reg_973) + unsigned(ap_const_lv6_1));
    add_ln1122_fu_1826_p2 <= std_logic_vector(unsigned(select_ln1120_fu_1792_p3) + unsigned(ap_const_lv3_1));
    add_ln1124_fu_1900_p2 <= std_logic_vector(unsigned(select_ln1122_fu_1838_p3) + unsigned(ap_const_lv3_1));
    add_ln1126_fu_1888_p2 <= std_logic_vector(unsigned(sub_ln1126_fu_1878_p2) + unsigned(zext_ln1126_3_fu_1884_p1));
    add_ln74_fu_2457_p2 <= std_logic_vector(unsigned(sub_ln73_reg_2891_pp4_iter4_reg) + unsigned(ap_const_lv5_2));
    add_ln75_fu_2467_p2 <= std_logic_vector(unsigned(sub_ln73_reg_2891_pp4_iter4_reg) + unsigned(ap_const_lv5_3));
    add_ln76_fu_2397_p2 <= std_logic_vector(unsigned(sub_ln73_fu_2391_p2) + unsigned(ap_const_lv5_4));
    add_ln77_fu_2408_p2 <= std_logic_vector(unsigned(sub_ln73_fu_2391_p2) + unsigned(ap_const_lv5_5));
    add_ln79_fu_2419_p2 <= std_logic_vector(unsigned(NPpatches_parameters_4_q1) + unsigned(ap_const_lv64_1));
    add_ln93_fu_1934_p2 <= std_logic_vector(unsigned(indvar_flatten151_reg_1006) + unsigned(ap_const_lv72_1));
    add_ln96_2_fu_2175_p2 <= std_logic_vector(unsigned(indvar_flatten127_reg_1028) + unsigned(ap_const_lv8_1));
    add_ln96_fu_2007_p2 <= std_logic_vector(unsigned(select_ln93_fu_1957_p3) + unsigned(ap_const_lv2_1));
    add_ln98_2_fu_2161_p2 <= std_logic_vector(unsigned(indvar_flatten113_reg_1050) + unsigned(ap_const_lv7_1));
    add_ln98_fu_2065_p2 <= std_logic_vector(unsigned(select_ln96_fu_2019_p3) + unsigned(ap_const_lv5_1));
    and_ln1077_2_fu_1310_p2 <= (xor_ln1077_fu_1286_p2 and icmp_ln1081_fu_1304_p2);
    and_ln1077_fu_1298_p2 <= (xor_ln1077_fu_1286_p2 and icmp_ln1083_fu_1292_p2);
    and_ln1079_fu_1376_p2 <= (or_ln1079_2_fu_1370_p2 and and_ln1077_fu_1298_p2);
    and_ln1105_2_fu_1577_p2 <= (xor_ln1105_fu_1553_p2 and icmp_ln1109_fu_1571_p2);
    and_ln1105_fu_1565_p2 <= (xor_ln1105_fu_1553_p2 and icmp_ln1111_fu_1559_p2);
    and_ln1107_fu_1643_p2 <= (or_ln1107_2_fu_1637_p2 and and_ln1105_fu_1565_p2);
    and_ln1120_fu_1812_p2 <= (xor_ln1120_fu_1800_p2 and icmp_ln1124_fu_1806_p2);
    and_ln93_2_fu_2001_p2 <= (xor_ln93_fu_1977_p2 and icmp_ln98_fu_1995_p2);
    and_ln93_fu_1989_p2 <= (xor_ln93_fu_1977_p2 and icmp_ln100_fu_1983_p2);
    and_ln96_fu_2059_p2 <= (or_ln96_2_fu_2053_p2 and and_ln93_fu_1989_p2);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(9);
    ap_CS_fsm_pp4_stage0 <= ap_CS_fsm(12);
    ap_CS_fsm_pp4_stage1 <= ap_CS_fsm(13);
    ap_CS_fsm_pp4_stage2 <= ap_CS_fsm(14);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(10);
    ap_CS_fsm_state13 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state29 <= ap_CS_fsm(15);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(16);
    ap_CS_fsm_state31 <= ap_CS_fsm(17);
    ap_CS_fsm_state32 <= ap_CS_fsm(18);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp3_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp4_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp4_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp4_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp4_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp4_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp4_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp4_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp4_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp4_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp4_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp4_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp4_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp4_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp4_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp4_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp3_exit_iter0_state10_assign_proc : process(icmp_ln93_fu_1940_p2)
    begin
        if ((icmp_ln93_fu_1940_p2 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state10 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp4_exit_iter0_state14_assign_proc : process(icmp_ln57_fu_2284_p2)
    begin
        if ((icmp_ln57_fu_2284_p2 = ap_const_lv1_0)) then 
            ap_condition_pp4_exit_iter0_state14 <= ap_const_logic_1;
        else 
            ap_condition_pp4_exit_iter0_state14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_add_patch_111_fu_1122_ap_done, ap_CS_fsm_state32)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((grp_add_patch_111_fu_1122_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state32)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);
    ap_enable_pp4 <= (ap_idle_pp4 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp4_assign_proc : process(ap_enable_reg_pp4_iter0, ap_enable_reg_pp4_iter4, ap_enable_reg_pp4_iter1, ap_enable_reg_pp4_iter2, ap_enable_reg_pp4_iter3)
    begin
        if (((ap_enable_reg_pp4_iter3 = ap_const_logic_0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_enable_reg_pp4_iter4 = ap_const_logic_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_0))) then 
            ap_idle_pp4 <= ap_const_logic_1;
        else 
            ap_idle_pp4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_a_4_phi_fu_1043_p4_assign_proc : process(a_4_reg_1039, ap_CS_fsm_pp3_stage0, icmp_ln93_reg_2703, select_ln96_3_reg_2717, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln93_reg_2703 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            ap_phi_mux_a_4_phi_fu_1043_p4 <= select_ln96_3_reg_2717;
        else 
            ap_phi_mux_a_4_phi_fu_1043_p4 <= a_4_reg_1039;
        end if; 
    end process;


    ap_phi_mux_b_8_phi_fu_1065_p4_assign_proc : process(b_8_reg_1061, ap_CS_fsm_pp3_stage0, icmp_ln93_reg_2703, select_ln98_3_reg_2722, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln93_reg_2703 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            ap_phi_mux_b_8_phi_fu_1065_p4 <= select_ln98_3_reg_2722;
        else 
            ap_phi_mux_b_8_phi_fu_1065_p4 <= b_8_reg_1061;
        end if; 
    end process;


    ap_phi_mux_i_16_phi_fu_1021_p4_assign_proc : process(i_16_reg_1017, ap_CS_fsm_pp3_stage0, icmp_ln93_reg_2703, select_ln93_2_reg_2707, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln93_reg_2703 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            ap_phi_mux_i_16_phi_fu_1021_p4 <= select_ln93_2_reg_2707;
        else 
            ap_phi_mux_i_16_phi_fu_1021_p4 <= i_16_reg_1017;
        end if; 
    end process;


    ap_phi_mux_i_20_phi_fu_1087_p4_assign_proc : process(i_20_reg_1083, icmp_ln57_reg_2861, ap_CS_fsm_pp4_stage0, j_reg_2880, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0)
    begin
        if (((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (icmp_ln57_reg_2861 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
            ap_phi_mux_i_20_phi_fu_1087_p4 <= j_reg_2880;
        else 
            ap_phi_mux_i_20_phi_fu_1087_p4 <= i_20_reg_1083;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_add_patch_111_fu_1122_ap_done, ap_CS_fsm_state32)
    begin
        if (((grp_add_patch_111_fu_1122_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= ppl_0_reg_852;
    grp_add_patch_111_fu_1122_ap_start <= grp_add_patch_111_fu_1122_ap_start_reg;
    grp_get_acceptanceCorners_fu_1244_ap_start <= grp_get_acceptanceCorners_fu_1244_ap_start_reg;
    grp_makeSuperPoint_alignedToLine_fu_1095_ap_start <= grp_makeSuperPoint_alignedToLine_fu_1095_ap_start_reg;
    grp_straightLineProjectorFromLayerIJtoK_fu_1216_ap_start <= grp_straightLineProjectorFromLayerIJtoK_fu_1216_ap_start_reg;

    grp_straightLineProjectorFromLayerIJtoK_fu_1216_j_assign_proc : process(icmp_ln57_reg_2861, ap_CS_fsm_pp4_stage1, ap_enable_reg_pp4_iter0, zext_ln64_fu_2361_p1, zext_ln64_reg_2885, ap_CS_fsm_pp4_stage2, ap_block_pp4_stage1, ap_block_pp4_stage2)
    begin
        if (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (icmp_ln57_reg_2861 = ap_const_lv1_1))) then
            if (((ap_const_boolean_0 = ap_block_pp4_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2))) then 
                grp_straightLineProjectorFromLayerIJtoK_fu_1216_j <= zext_ln64_reg_2885;
            elsif (((ap_const_boolean_0 = ap_block_pp4_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1))) then 
                grp_straightLineProjectorFromLayerIJtoK_fu_1216_j <= zext_ln64_fu_2361_p1;
            else 
                grp_straightLineProjectorFromLayerIJtoK_fu_1216_j <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_1216_j <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_1216_z_j_assign_proc : process(icmp_ln57_reg_2861, ap_CS_fsm_pp4_stage1, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp4_stage2, ap_block_pp4_stage1, ap_block_pp4_stage2, z_j_max_fu_2349_p7, z_j_min_fu_2431_p7)
    begin
        if (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (icmp_ln57_reg_2861 = ap_const_lv1_1))) then
            if (((ap_const_boolean_0 = ap_block_pp4_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2))) then 
                grp_straightLineProjectorFromLayerIJtoK_fu_1216_z_j <= z_j_min_fu_2431_p7;
            elsif (((ap_const_boolean_0 = ap_block_pp4_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1))) then 
                grp_straightLineProjectorFromLayerIJtoK_fu_1216_z_j <= z_j_max_fu_2349_p7;
            else 
                grp_straightLineProjectorFromLayerIJtoK_fu_1216_z_j <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_1216_z_j <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_straightLineProjectorFromLayerIJtoK_fu_1230_ap_start <= grp_straightLineProjectorFromLayerIJtoK_fu_1230_ap_start_reg;

    grp_straightLineProjectorFromLayerIJtoK_fu_1230_j_assign_proc : process(icmp_ln57_reg_2861, ap_CS_fsm_pp4_stage1, ap_enable_reg_pp4_iter0, zext_ln64_fu_2361_p1, zext_ln64_reg_2885, ap_CS_fsm_pp4_stage2, ap_block_pp4_stage1, ap_block_pp4_stage2)
    begin
        if (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (icmp_ln57_reg_2861 = ap_const_lv1_1))) then
            if (((ap_const_boolean_0 = ap_block_pp4_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2))) then 
                grp_straightLineProjectorFromLayerIJtoK_fu_1230_j <= zext_ln64_reg_2885;
            elsif (((ap_const_boolean_0 = ap_block_pp4_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1))) then 
                grp_straightLineProjectorFromLayerIJtoK_fu_1230_j <= zext_ln64_fu_2361_p1;
            else 
                grp_straightLineProjectorFromLayerIJtoK_fu_1230_j <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_1230_j <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_straightLineProjectorFromLayerIJtoK_fu_1230_z_j_assign_proc : process(icmp_ln57_reg_2861, ap_CS_fsm_pp4_stage1, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp4_stage2, ap_block_pp4_stage1, ap_block_pp4_stage2, z_j_max_fu_2349_p7, z_j_min_fu_2431_p7)
    begin
        if (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (icmp_ln57_reg_2861 = ap_const_lv1_1))) then
            if (((ap_const_boolean_0 = ap_block_pp4_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2))) then 
                grp_straightLineProjectorFromLayerIJtoK_fu_1230_z_j <= z_j_min_fu_2431_p7;
            elsif (((ap_const_boolean_0 = ap_block_pp4_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1))) then 
                grp_straightLineProjectorFromLayerIJtoK_fu_1230_z_j <= z_j_max_fu_2349_p7;
            else 
                grp_straightLineProjectorFromLayerIJtoK_fu_1230_z_j <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_straightLineProjectorFromLayerIJtoK_fu_1230_z_j <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_17_cast_fu_2280_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_i_20_phi_fu_1087_p4),32));
    i_17_fu_1501_p2 <= std_logic_vector(unsigned(i_reg_862) + unsigned(ap_const_lv3_1));
    i_19_fu_1945_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_16_phi_fu_1021_p4) + unsigned(ap_const_lv64_1));
    icmp_ln100_fu_1983_p2 <= "1" when (c_8_reg_1072 = ap_const_lv2_3) else "0";
    icmp_ln1077_fu_1260_p2 <= "1" when (indvar_flatten37_reg_763 = ap_const_lv10_2D0) else "0";
    icmp_ln1079_fu_1272_p2 <= "1" when (indvar_flatten13_reg_785 = ap_const_lv8_90) else "0";
    icmp_ln1081_fu_1304_p2 <= "1" when (indvar_flatten_reg_807 = ap_const_lv7_30) else "0";
    icmp_ln1083_fu_1292_p2 <= "1" when (d_reg_829 = ap_const_lv2_3) else "0";
    icmp_ln1098_fu_1507_p2 <= "1" when (i_reg_862 = ap_const_lv3_5) else "0";
    icmp_ln1105_fu_1527_p2 <= "1" when (indvar_flatten83_reg_874 = ap_const_lv10_2D0) else "0";
    icmp_ln1107_fu_1539_p2 <= "1" when (indvar_flatten59_reg_896 = ap_const_lv8_90) else "0";
    icmp_ln1109_fu_1571_p2 <= "1" when (indvar_flatten45_reg_918 = ap_const_lv7_30) else "0";
    icmp_ln1111_fu_1559_p2 <= "1" when (e_reg_940 = ap_const_lv2_3) else "0";
    icmp_ln1120_fu_1774_p2 <= "1" when (indvar_flatten105_reg_951 = ap_const_lv7_78) else "0";
    icmp_ln1122_fu_1786_p2 <= "1" when (indvar_flatten91_reg_973 = ap_const_lv6_18) else "0";
    icmp_ln1124_fu_1806_p2 <= "1" when (d_6_reg_995 = ap_const_lv3_6) else "0";
    icmp_ln41_fu_2214_p2 <= "1" when (signed(NPpatches_superpoints_0_q1) < signed(ap_const_lv64_FFFFFFFFFEB04E1C)) else "0";
    icmp_ln42_fu_2232_p2 <= "1" when (signed(NPpatches_superpoints_0_q0) < signed(ap_const_lv64_14FB1E4)) else "0";
    icmp_ln44_fu_2250_p2 <= "1" when (signed(z1_min_fu_2220_p3) > signed(z1_max_fu_2238_p3)) else "0";
    icmp_ln57_fu_2284_p2 <= "1" when (signed(i_17_cast_fu_2280_p1) < signed(superpoint_count_assign_reg_840)) else "0";
    icmp_ln70_fu_2307_p2 <= "1" when (signed(tmp_153_fu_2297_p4) < signed(ap_const_lv30_1)) else "0";
    icmp_ln93_fu_1940_p2 <= "1" when (indvar_flatten151_reg_1006 = mul_ln1133_reg_2693) else "0";
    icmp_ln96_fu_1951_p2 <= "1" when (indvar_flatten127_reg_1028 = ap_const_lv8_90) else "0";
    icmp_ln98_fu_1995_p2 <= "1" when (indvar_flatten113_reg_1050 = ap_const_lv7_30) else "0";

    init_patch_0_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, grp_makeSuperPoint_alignedToLine_fu_1095_init_patch_address0, ap_block_pp3_stage0, zext_ln1085_4_fu_1458_p1, zext_ln102_4_fu_2141_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            init_patch_0_address0 <= zext_ln102_4_fu_2141_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            init_patch_0_address0 <= zext_ln1085_4_fu_1458_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_0_address0 <= grp_makeSuperPoint_alignedToLine_fu_1095_init_patch_address0;
        else 
            init_patch_0_address0 <= "XXXXXXXX";
        end if; 
    end process;


    init_patch_0_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_block_pp3_stage0_11001, grp_makeSuperPoint_alignedToLine_fu_1095_init_patch_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            init_patch_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_0_ce0 <= grp_makeSuperPoint_alignedToLine_fu_1095_init_patch_ce0;
        else 
            init_patch_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_0_ce1_assign_proc : process(ap_CS_fsm_state5, grp_makeSuperPoint_alignedToLine_fu_1095_init_patch_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_0_ce1 <= grp_makeSuperPoint_alignedToLine_fu_1095_init_patch_ce1;
        else 
            init_patch_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_0_d0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, grp_makeSuperPoint_alignedToLine_fu_1095_init_patch_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            init_patch_0_d0 <= ap_const_lv64_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_0_d0 <= grp_makeSuperPoint_alignedToLine_fu_1095_init_patch_d0;
        else 
            init_patch_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_0_we0_assign_proc : process(ap_CS_fsm_state2, select_ln1077_2_fu_1316_p3, icmp_ln1077_fu_1260_p2, ap_CS_fsm_state5, grp_makeSuperPoint_alignedToLine_fu_1095_init_patch_we0)
    begin
        if (((icmp_ln1077_fu_1260_p2 = ap_const_lv1_0) and (select_ln1077_2_fu_1316_p3 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            init_patch_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_0_we0 <= grp_makeSuperPoint_alignedToLine_fu_1095_init_patch_we0;
        else 
            init_patch_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_0_we1_assign_proc : process(ap_CS_fsm_state5, grp_makeSuperPoint_alignedToLine_fu_1095_init_patch_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_0_we1 <= grp_makeSuperPoint_alignedToLine_fu_1095_init_patch_we1;
        else 
            init_patch_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_1_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, grp_makeSuperPoint_alignedToLine_fu_1095_init_patch1_address0, ap_block_pp3_stage0, zext_ln1085_4_fu_1458_p1, zext_ln102_4_fu_2141_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            init_patch_1_address0 <= zext_ln102_4_fu_2141_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            init_patch_1_address0 <= zext_ln1085_4_fu_1458_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_1_address0 <= grp_makeSuperPoint_alignedToLine_fu_1095_init_patch1_address0;
        else 
            init_patch_1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    init_patch_1_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_block_pp3_stage0_11001, grp_makeSuperPoint_alignedToLine_fu_1095_init_patch1_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            init_patch_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_1_ce0 <= grp_makeSuperPoint_alignedToLine_fu_1095_init_patch1_ce0;
        else 
            init_patch_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_1_ce1_assign_proc : process(ap_CS_fsm_state5, grp_makeSuperPoint_alignedToLine_fu_1095_init_patch1_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_1_ce1 <= grp_makeSuperPoint_alignedToLine_fu_1095_init_patch1_ce1;
        else 
            init_patch_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_1_d0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, grp_makeSuperPoint_alignedToLine_fu_1095_init_patch1_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            init_patch_1_d0 <= ap_const_lv64_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_1_d0 <= grp_makeSuperPoint_alignedToLine_fu_1095_init_patch1_d0;
        else 
            init_patch_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_1_we0_assign_proc : process(ap_CS_fsm_state2, select_ln1077_2_fu_1316_p3, icmp_ln1077_fu_1260_p2, ap_CS_fsm_state5, grp_makeSuperPoint_alignedToLine_fu_1095_init_patch1_we0)
    begin
        if (((icmp_ln1077_fu_1260_p2 = ap_const_lv1_0) and (select_ln1077_2_fu_1316_p3 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            init_patch_1_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_1_we0 <= grp_makeSuperPoint_alignedToLine_fu_1095_init_patch1_we0;
        else 
            init_patch_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_1_we1_assign_proc : process(ap_CS_fsm_state5, grp_makeSuperPoint_alignedToLine_fu_1095_init_patch1_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_1_we1 <= grp_makeSuperPoint_alignedToLine_fu_1095_init_patch1_we1;
        else 
            init_patch_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_2_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, grp_makeSuperPoint_alignedToLine_fu_1095_init_patch2_address0, ap_block_pp3_stage0, zext_ln1085_4_fu_1458_p1, zext_ln102_4_fu_2141_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            init_patch_2_address0 <= zext_ln102_4_fu_2141_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            init_patch_2_address0 <= zext_ln1085_4_fu_1458_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_2_address0 <= grp_makeSuperPoint_alignedToLine_fu_1095_init_patch2_address0;
        else 
            init_patch_2_address0 <= "XXXXXXXX";
        end if; 
    end process;


    init_patch_2_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_block_pp3_stage0_11001, grp_makeSuperPoint_alignedToLine_fu_1095_init_patch2_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            init_patch_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_2_ce0 <= grp_makeSuperPoint_alignedToLine_fu_1095_init_patch2_ce0;
        else 
            init_patch_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_2_ce1_assign_proc : process(ap_CS_fsm_state5, grp_makeSuperPoint_alignedToLine_fu_1095_init_patch2_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_2_ce1 <= grp_makeSuperPoint_alignedToLine_fu_1095_init_patch2_ce1;
        else 
            init_patch_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_2_d0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, grp_makeSuperPoint_alignedToLine_fu_1095_init_patch2_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            init_patch_2_d0 <= ap_const_lv64_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_2_d0 <= grp_makeSuperPoint_alignedToLine_fu_1095_init_patch2_d0;
        else 
            init_patch_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_2_we0_assign_proc : process(ap_CS_fsm_state2, select_ln1077_2_fu_1316_p3, icmp_ln1077_fu_1260_p2, ap_CS_fsm_state5, grp_makeSuperPoint_alignedToLine_fu_1095_init_patch2_we0)
    begin
        if (((icmp_ln1077_fu_1260_p2 = ap_const_lv1_0) and (select_ln1077_2_fu_1316_p3 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            init_patch_2_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_2_we0 <= grp_makeSuperPoint_alignedToLine_fu_1095_init_patch2_we0;
        else 
            init_patch_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_2_we1_assign_proc : process(ap_CS_fsm_state5, grp_makeSuperPoint_alignedToLine_fu_1095_init_patch2_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_2_we1 <= grp_makeSuperPoint_alignedToLine_fu_1095_init_patch2_we1;
        else 
            init_patch_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_3_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, grp_makeSuperPoint_alignedToLine_fu_1095_init_patch3_address0, ap_block_pp3_stage0, zext_ln1085_4_fu_1458_p1, zext_ln102_4_fu_2141_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            init_patch_3_address0 <= zext_ln102_4_fu_2141_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            init_patch_3_address0 <= zext_ln1085_4_fu_1458_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_3_address0 <= grp_makeSuperPoint_alignedToLine_fu_1095_init_patch3_address0;
        else 
            init_patch_3_address0 <= "XXXXXXXX";
        end if; 
    end process;


    init_patch_3_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_block_pp3_stage0_11001, grp_makeSuperPoint_alignedToLine_fu_1095_init_patch3_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            init_patch_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_3_ce0 <= grp_makeSuperPoint_alignedToLine_fu_1095_init_patch3_ce0;
        else 
            init_patch_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_3_ce1_assign_proc : process(ap_CS_fsm_state5, grp_makeSuperPoint_alignedToLine_fu_1095_init_patch3_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_3_ce1 <= grp_makeSuperPoint_alignedToLine_fu_1095_init_patch3_ce1;
        else 
            init_patch_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_3_d0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, grp_makeSuperPoint_alignedToLine_fu_1095_init_patch3_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            init_patch_3_d0 <= ap_const_lv64_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_3_d0 <= grp_makeSuperPoint_alignedToLine_fu_1095_init_patch3_d0;
        else 
            init_patch_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_3_we0_assign_proc : process(ap_CS_fsm_state2, select_ln1077_2_fu_1316_p3, icmp_ln1077_fu_1260_p2, ap_CS_fsm_state5, grp_makeSuperPoint_alignedToLine_fu_1095_init_patch3_we0)
    begin
        if (((icmp_ln1077_fu_1260_p2 = ap_const_lv1_0) and (select_ln1077_2_fu_1316_p3 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            init_patch_3_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_3_we0 <= grp_makeSuperPoint_alignedToLine_fu_1095_init_patch3_we0;
        else 
            init_patch_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_3_we1_assign_proc : process(ap_CS_fsm_state5, grp_makeSuperPoint_alignedToLine_fu_1095_init_patch3_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_3_we1 <= grp_makeSuperPoint_alignedToLine_fu_1095_init_patch3_we1;
        else 
            init_patch_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_4_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, grp_makeSuperPoint_alignedToLine_fu_1095_init_patch4_address0, ap_block_pp3_stage0, zext_ln1085_4_fu_1458_p1, zext_ln102_4_fu_2141_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            init_patch_4_address0 <= zext_ln102_4_fu_2141_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            init_patch_4_address0 <= zext_ln1085_4_fu_1458_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_4_address0 <= grp_makeSuperPoint_alignedToLine_fu_1095_init_patch4_address0;
        else 
            init_patch_4_address0 <= "XXXXXXXX";
        end if; 
    end process;


    init_patch_4_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_block_pp3_stage0_11001, grp_makeSuperPoint_alignedToLine_fu_1095_init_patch4_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            init_patch_4_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_4_ce0 <= grp_makeSuperPoint_alignedToLine_fu_1095_init_patch4_ce0;
        else 
            init_patch_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_4_ce1_assign_proc : process(ap_CS_fsm_state5, grp_makeSuperPoint_alignedToLine_fu_1095_init_patch4_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_4_ce1 <= grp_makeSuperPoint_alignedToLine_fu_1095_init_patch4_ce1;
        else 
            init_patch_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_4_d0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, grp_makeSuperPoint_alignedToLine_fu_1095_init_patch4_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            init_patch_4_d0 <= ap_const_lv64_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_4_d0 <= grp_makeSuperPoint_alignedToLine_fu_1095_init_patch4_d0;
        else 
            init_patch_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    init_patch_4_we0_assign_proc : process(ap_CS_fsm_state2, select_ln1077_2_fu_1316_p3, icmp_ln1077_fu_1260_p2, ap_CS_fsm_state5, grp_makeSuperPoint_alignedToLine_fu_1095_init_patch4_we0)
    begin
        if ((not((select_ln1077_2_fu_1316_p3 = ap_const_lv3_0)) and not((select_ln1077_2_fu_1316_p3 = ap_const_lv3_1)) and not((select_ln1077_2_fu_1316_p3 = ap_const_lv3_2)) and not((select_ln1077_2_fu_1316_p3 = ap_const_lv3_3)) and (icmp_ln1077_fu_1260_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            init_patch_4_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_4_we0 <= grp_makeSuperPoint_alignedToLine_fu_1095_init_patch4_we0;
        else 
            init_patch_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    init_patch_4_we1_assign_proc : process(ap_CS_fsm_state5, grp_makeSuperPoint_alignedToLine_fu_1095_init_patch4_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            init_patch_4_we1 <= grp_makeSuperPoint_alignedToLine_fu_1095_init_patch4_we1;
        else 
            init_patch_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    j_fu_2343_p2 <= std_logic_vector(unsigned(i_20_reg_1083) + unsigned(ap_const_lv31_1));
    mul_ln1133_fu_1928_p0 <= mul_ln1133_fu_1928_p00(64 - 1 downto 0);
    mul_ln1133_fu_1928_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1133_fu_1920_p1),72));
    mul_ln1133_fu_1928_p1 <= ap_const_lv72_90(9 - 1 downto 0);

    n_patches_o_assign_proc : process(n_patches_i, grp_add_patch_111_fu_1122_n_patches, grp_add_patch_111_fu_1122_n_patches_ap_vld, ap_CS_fsm_state32)
    begin
        if (((grp_add_patch_111_fu_1122_n_patches_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            n_patches_o <= grp_add_patch_111_fu_1122_n_patches;
        else 
            n_patches_o <= n_patches_i;
        end if; 
    end process;


    n_patches_o_ap_vld_assign_proc : process(grp_add_patch_111_fu_1122_n_patches_ap_vld, ap_CS_fsm_state32)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            n_patches_o_ap_vld <= grp_add_patch_111_fu_1122_n_patches_ap_vld;
        else 
            n_patches_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    or_ln1079_2_fu_1370_p2 <= (xor_ln1079_fu_1364_p2 or icmp_ln1079_fu_1272_p2);
    or_ln1079_fu_1330_p2 <= (icmp_ln1079_fu_1272_p2 or and_ln1077_2_fu_1310_p2);
    or_ln1081_2_fu_1394_p2 <= (or_ln1081_fu_1388_p2 or icmp_ln1079_fu_1272_p2);
    or_ln1081_fu_1388_p2 <= (and_ln1079_fu_1376_p2 or and_ln1077_2_fu_1310_p2);
    or_ln1107_2_fu_1637_p2 <= (xor_ln1107_fu_1631_p2 or icmp_ln1107_fu_1539_p2);
    or_ln1107_fu_1597_p2 <= (icmp_ln1107_fu_1539_p2 or and_ln1105_2_fu_1577_p2);
    or_ln1109_2_fu_1661_p2 <= (or_ln1109_fu_1655_p2 or icmp_ln1107_fu_1539_p2);
    or_ln1109_fu_1655_p2 <= (and_ln1107_fu_1643_p2 or and_ln1105_2_fu_1577_p2);
    or_ln1122_fu_1832_p2 <= (icmp_ln1122_fu_1786_p2 or and_ln1120_fu_1812_p2);
    or_ln73_fu_2447_p2 <= (sub_ln73_reg_2891_pp4_iter3_reg or ap_const_lv5_1);
    or_ln96_2_fu_2053_p2 <= (xor_ln96_fu_2047_p2 or icmp_ln96_fu_1951_p2);
    or_ln96_fu_2013_p2 <= (icmp_ln96_fu_1951_p2 or and_ln93_2_fu_2001_p2);
    or_ln98_2_fu_2077_p2 <= (or_ln98_fu_2071_p2 or icmp_ln96_fu_1951_p2);
    or_ln98_fu_2071_p2 <= (and_ln96_fu_2059_p2 or and_ln93_2_fu_2001_p2);
    p_shl5_cast_fu_1701_p3 <= (trunc_ln1113_2_fu_1697_p1 & ap_const_lv2_0);
    p_shl6_cast_fu_1858_p3 <= (trunc_ln1126_fu_1854_p1 & ap_const_lv3_0);
    p_shl8_cast_fu_2117_p3 <= (trunc_ln102_2_fu_2113_p1 & ap_const_lv2_0);
    p_shl_cast_fu_1434_p3 <= (trunc_ln1085_2_fu_1430_p1 & ap_const_lv2_0);
    patches_parameters_0_address0 <= grp_add_patch_111_fu_1122_patches_parameters_0_address0;
    patches_parameters_0_ce0 <= grp_add_patch_111_fu_1122_patches_parameters_0_ce0;
    patches_parameters_0_d0 <= grp_add_patch_111_fu_1122_patches_parameters_0_d0;
    patches_parameters_0_we0 <= grp_add_patch_111_fu_1122_patches_parameters_0_we0;
    patches_parameters_1_address0 <= grp_add_patch_111_fu_1122_patches_parameters_1_address0;
    patches_parameters_1_ce0 <= grp_add_patch_111_fu_1122_patches_parameters_1_ce0;
    patches_parameters_1_d0 <= grp_add_patch_111_fu_1122_patches_parameters_1_d0;
    patches_parameters_1_we0 <= grp_add_patch_111_fu_1122_patches_parameters_1_we0;
    patches_parameters_2_address0 <= grp_add_patch_111_fu_1122_patches_parameters_2_address0;
    patches_parameters_2_ce0 <= grp_add_patch_111_fu_1122_patches_parameters_2_ce0;
    patches_parameters_2_d0 <= grp_add_patch_111_fu_1122_patches_parameters_2_d0;
    patches_parameters_2_we0 <= grp_add_patch_111_fu_1122_patches_parameters_2_we0;
    patches_parameters_3_address0 <= grp_add_patch_111_fu_1122_patches_parameters_3_address0;
    patches_parameters_3_ce0 <= grp_add_patch_111_fu_1122_patches_parameters_3_ce0;
    patches_parameters_3_d0 <= grp_add_patch_111_fu_1122_patches_parameters_3_d0;
    patches_parameters_3_we0 <= grp_add_patch_111_fu_1122_patches_parameters_3_we0;
    patches_parameters_4_address0 <= grp_add_patch_111_fu_1122_patches_parameters_4_address0;
    patches_parameters_4_ce0 <= grp_add_patch_111_fu_1122_patches_parameters_4_ce0;
    patches_parameters_4_d0 <= grp_add_patch_111_fu_1122_patches_parameters_4_d0;
    patches_parameters_4_we0 <= grp_add_patch_111_fu_1122_patches_parameters_4_we0;
    patches_superpoints_0_address0 <= grp_add_patch_111_fu_1122_patches_superpoints_0_address0;
    patches_superpoints_0_ce0 <= grp_add_patch_111_fu_1122_patches_superpoints_0_ce0;
    patches_superpoints_0_d0 <= grp_add_patch_111_fu_1122_patches_superpoints_0_d0;
    patches_superpoints_0_we0 <= grp_add_patch_111_fu_1122_patches_superpoints_0_we0;
    patches_superpoints_10_address0 <= grp_add_patch_111_fu_1122_patches_superpoints_10_address0;
    patches_superpoints_10_ce0 <= grp_add_patch_111_fu_1122_patches_superpoints_10_ce0;
    patches_superpoints_10_d0 <= grp_add_patch_111_fu_1122_patches_superpoints_10_d0;
    patches_superpoints_10_we0 <= grp_add_patch_111_fu_1122_patches_superpoints_10_we0;
    patches_superpoints_11_address0 <= grp_add_patch_111_fu_1122_patches_superpoints_11_address0;
    patches_superpoints_11_ce0 <= grp_add_patch_111_fu_1122_patches_superpoints_11_ce0;
    patches_superpoints_11_d0 <= grp_add_patch_111_fu_1122_patches_superpoints_11_d0;
    patches_superpoints_11_we0 <= grp_add_patch_111_fu_1122_patches_superpoints_11_we0;
    patches_superpoints_12_address0 <= grp_add_patch_111_fu_1122_patches_superpoints_12_address0;
    patches_superpoints_12_ce0 <= grp_add_patch_111_fu_1122_patches_superpoints_12_ce0;
    patches_superpoints_12_d0 <= grp_add_patch_111_fu_1122_patches_superpoints_12_d0;
    patches_superpoints_12_we0 <= grp_add_patch_111_fu_1122_patches_superpoints_12_we0;
    patches_superpoints_13_address0 <= grp_add_patch_111_fu_1122_patches_superpoints_13_address0;
    patches_superpoints_13_ce0 <= grp_add_patch_111_fu_1122_patches_superpoints_13_ce0;
    patches_superpoints_13_d0 <= grp_add_patch_111_fu_1122_patches_superpoints_13_d0;
    patches_superpoints_13_we0 <= grp_add_patch_111_fu_1122_patches_superpoints_13_we0;
    patches_superpoints_14_address0 <= grp_add_patch_111_fu_1122_patches_superpoints_14_address0;
    patches_superpoints_14_ce0 <= grp_add_patch_111_fu_1122_patches_superpoints_14_ce0;
    patches_superpoints_14_d0 <= grp_add_patch_111_fu_1122_patches_superpoints_14_d0;
    patches_superpoints_14_we0 <= grp_add_patch_111_fu_1122_patches_superpoints_14_we0;
    patches_superpoints_15_address0 <= grp_add_patch_111_fu_1122_patches_superpoints_15_address0;
    patches_superpoints_15_ce0 <= grp_add_patch_111_fu_1122_patches_superpoints_15_ce0;
    patches_superpoints_15_d0 <= grp_add_patch_111_fu_1122_patches_superpoints_15_d0;
    patches_superpoints_15_we0 <= grp_add_patch_111_fu_1122_patches_superpoints_15_we0;
    patches_superpoints_16_address0 <= grp_add_patch_111_fu_1122_patches_superpoints_16_address0;
    patches_superpoints_16_ce0 <= grp_add_patch_111_fu_1122_patches_superpoints_16_ce0;
    patches_superpoints_16_d0 <= grp_add_patch_111_fu_1122_patches_superpoints_16_d0;
    patches_superpoints_16_we0 <= grp_add_patch_111_fu_1122_patches_superpoints_16_we0;
    patches_superpoints_17_address0 <= grp_add_patch_111_fu_1122_patches_superpoints_17_address0;
    patches_superpoints_17_ce0 <= grp_add_patch_111_fu_1122_patches_superpoints_17_ce0;
    patches_superpoints_17_d0 <= grp_add_patch_111_fu_1122_patches_superpoints_17_d0;
    patches_superpoints_17_we0 <= grp_add_patch_111_fu_1122_patches_superpoints_17_we0;
    patches_superpoints_18_address0 <= grp_add_patch_111_fu_1122_patches_superpoints_18_address0;
    patches_superpoints_18_ce0 <= grp_add_patch_111_fu_1122_patches_superpoints_18_ce0;
    patches_superpoints_18_d0 <= grp_add_patch_111_fu_1122_patches_superpoints_18_d0;
    patches_superpoints_18_we0 <= grp_add_patch_111_fu_1122_patches_superpoints_18_we0;
    patches_superpoints_19_address0 <= grp_add_patch_111_fu_1122_patches_superpoints_19_address0;
    patches_superpoints_19_ce0 <= grp_add_patch_111_fu_1122_patches_superpoints_19_ce0;
    patches_superpoints_19_d0 <= grp_add_patch_111_fu_1122_patches_superpoints_19_d0;
    patches_superpoints_19_we0 <= grp_add_patch_111_fu_1122_patches_superpoints_19_we0;
    patches_superpoints_1_address0 <= grp_add_patch_111_fu_1122_patches_superpoints_1_address0;
    patches_superpoints_1_ce0 <= grp_add_patch_111_fu_1122_patches_superpoints_1_ce0;
    patches_superpoints_1_d0 <= grp_add_patch_111_fu_1122_patches_superpoints_1_d0;
    patches_superpoints_1_we0 <= grp_add_patch_111_fu_1122_patches_superpoints_1_we0;
    patches_superpoints_20_address0 <= grp_add_patch_111_fu_1122_patches_superpoints_20_address0;
    patches_superpoints_20_ce0 <= grp_add_patch_111_fu_1122_patches_superpoints_20_ce0;
    patches_superpoints_20_d0 <= grp_add_patch_111_fu_1122_patches_superpoints_20_d0;
    patches_superpoints_20_we0 <= grp_add_patch_111_fu_1122_patches_superpoints_20_we0;
    patches_superpoints_21_address0 <= grp_add_patch_111_fu_1122_patches_superpoints_21_address0;
    patches_superpoints_21_ce0 <= grp_add_patch_111_fu_1122_patches_superpoints_21_ce0;
    patches_superpoints_21_d0 <= grp_add_patch_111_fu_1122_patches_superpoints_21_d0;
    patches_superpoints_21_we0 <= grp_add_patch_111_fu_1122_patches_superpoints_21_we0;
    patches_superpoints_22_address0 <= grp_add_patch_111_fu_1122_patches_superpoints_22_address0;
    patches_superpoints_22_ce0 <= grp_add_patch_111_fu_1122_patches_superpoints_22_ce0;
    patches_superpoints_22_d0 <= grp_add_patch_111_fu_1122_patches_superpoints_22_d0;
    patches_superpoints_22_we0 <= grp_add_patch_111_fu_1122_patches_superpoints_22_we0;
    patches_superpoints_23_address0 <= grp_add_patch_111_fu_1122_patches_superpoints_23_address0;
    patches_superpoints_23_ce0 <= grp_add_patch_111_fu_1122_patches_superpoints_23_ce0;
    patches_superpoints_23_d0 <= grp_add_patch_111_fu_1122_patches_superpoints_23_d0;
    patches_superpoints_23_we0 <= grp_add_patch_111_fu_1122_patches_superpoints_23_we0;
    patches_superpoints_24_address0 <= grp_add_patch_111_fu_1122_patches_superpoints_24_address0;
    patches_superpoints_24_ce0 <= grp_add_patch_111_fu_1122_patches_superpoints_24_ce0;
    patches_superpoints_24_d0 <= grp_add_patch_111_fu_1122_patches_superpoints_24_d0;
    patches_superpoints_24_we0 <= grp_add_patch_111_fu_1122_patches_superpoints_24_we0;
    patches_superpoints_25_address0 <= grp_add_patch_111_fu_1122_patches_superpoints_25_address0;
    patches_superpoints_25_ce0 <= grp_add_patch_111_fu_1122_patches_superpoints_25_ce0;
    patches_superpoints_25_d0 <= grp_add_patch_111_fu_1122_patches_superpoints_25_d0;
    patches_superpoints_25_we0 <= grp_add_patch_111_fu_1122_patches_superpoints_25_we0;
    patches_superpoints_26_address0 <= grp_add_patch_111_fu_1122_patches_superpoints_26_address0;
    patches_superpoints_26_ce0 <= grp_add_patch_111_fu_1122_patches_superpoints_26_ce0;
    patches_superpoints_26_d0 <= grp_add_patch_111_fu_1122_patches_superpoints_26_d0;
    patches_superpoints_26_we0 <= grp_add_patch_111_fu_1122_patches_superpoints_26_we0;
    patches_superpoints_27_address0 <= grp_add_patch_111_fu_1122_patches_superpoints_27_address0;
    patches_superpoints_27_ce0 <= grp_add_patch_111_fu_1122_patches_superpoints_27_ce0;
    patches_superpoints_27_d0 <= grp_add_patch_111_fu_1122_patches_superpoints_27_d0;
    patches_superpoints_27_we0 <= grp_add_patch_111_fu_1122_patches_superpoints_27_we0;
    patches_superpoints_28_address0 <= grp_add_patch_111_fu_1122_patches_superpoints_28_address0;
    patches_superpoints_28_ce0 <= grp_add_patch_111_fu_1122_patches_superpoints_28_ce0;
    patches_superpoints_28_d0 <= grp_add_patch_111_fu_1122_patches_superpoints_28_d0;
    patches_superpoints_28_we0 <= grp_add_patch_111_fu_1122_patches_superpoints_28_we0;
    patches_superpoints_29_address0 <= grp_add_patch_111_fu_1122_patches_superpoints_29_address0;
    patches_superpoints_29_ce0 <= grp_add_patch_111_fu_1122_patches_superpoints_29_ce0;
    patches_superpoints_29_d0 <= grp_add_patch_111_fu_1122_patches_superpoints_29_d0;
    patches_superpoints_29_we0 <= grp_add_patch_111_fu_1122_patches_superpoints_29_we0;
    patches_superpoints_2_address0 <= grp_add_patch_111_fu_1122_patches_superpoints_2_address0;
    patches_superpoints_2_ce0 <= grp_add_patch_111_fu_1122_patches_superpoints_2_ce0;
    patches_superpoints_2_d0 <= grp_add_patch_111_fu_1122_patches_superpoints_2_d0;
    patches_superpoints_2_we0 <= grp_add_patch_111_fu_1122_patches_superpoints_2_we0;
    patches_superpoints_30_address0 <= grp_add_patch_111_fu_1122_patches_superpoints_30_address0;
    patches_superpoints_30_ce0 <= grp_add_patch_111_fu_1122_patches_superpoints_30_ce0;
    patches_superpoints_30_d0 <= grp_add_patch_111_fu_1122_patches_superpoints_30_d0;
    patches_superpoints_30_we0 <= grp_add_patch_111_fu_1122_patches_superpoints_30_we0;
    patches_superpoints_31_address0 <= grp_add_patch_111_fu_1122_patches_superpoints_31_address0;
    patches_superpoints_31_ce0 <= grp_add_patch_111_fu_1122_patches_superpoints_31_ce0;
    patches_superpoints_31_d0 <= grp_add_patch_111_fu_1122_patches_superpoints_31_d0;
    patches_superpoints_31_we0 <= grp_add_patch_111_fu_1122_patches_superpoints_31_we0;
    patches_superpoints_3_address0 <= grp_add_patch_111_fu_1122_patches_superpoints_3_address0;
    patches_superpoints_3_ce0 <= grp_add_patch_111_fu_1122_patches_superpoints_3_ce0;
    patches_superpoints_3_d0 <= grp_add_patch_111_fu_1122_patches_superpoints_3_d0;
    patches_superpoints_3_we0 <= grp_add_patch_111_fu_1122_patches_superpoints_3_we0;
    patches_superpoints_4_address0 <= grp_add_patch_111_fu_1122_patches_superpoints_4_address0;
    patches_superpoints_4_ce0 <= grp_add_patch_111_fu_1122_patches_superpoints_4_ce0;
    patches_superpoints_4_d0 <= grp_add_patch_111_fu_1122_patches_superpoints_4_d0;
    patches_superpoints_4_we0 <= grp_add_patch_111_fu_1122_patches_superpoints_4_we0;
    patches_superpoints_5_address0 <= grp_add_patch_111_fu_1122_patches_superpoints_5_address0;
    patches_superpoints_5_ce0 <= grp_add_patch_111_fu_1122_patches_superpoints_5_ce0;
    patches_superpoints_5_d0 <= grp_add_patch_111_fu_1122_patches_superpoints_5_d0;
    patches_superpoints_5_we0 <= grp_add_patch_111_fu_1122_patches_superpoints_5_we0;
    patches_superpoints_6_address0 <= grp_add_patch_111_fu_1122_patches_superpoints_6_address0;
    patches_superpoints_6_ce0 <= grp_add_patch_111_fu_1122_patches_superpoints_6_ce0;
    patches_superpoints_6_d0 <= grp_add_patch_111_fu_1122_patches_superpoints_6_d0;
    patches_superpoints_6_we0 <= grp_add_patch_111_fu_1122_patches_superpoints_6_we0;
    patches_superpoints_7_address0 <= grp_add_patch_111_fu_1122_patches_superpoints_7_address0;
    patches_superpoints_7_ce0 <= grp_add_patch_111_fu_1122_patches_superpoints_7_ce0;
    patches_superpoints_7_d0 <= grp_add_patch_111_fu_1122_patches_superpoints_7_d0;
    patches_superpoints_7_we0 <= grp_add_patch_111_fu_1122_patches_superpoints_7_we0;
    patches_superpoints_8_address0 <= grp_add_patch_111_fu_1122_patches_superpoints_8_address0;
    patches_superpoints_8_ce0 <= grp_add_patch_111_fu_1122_patches_superpoints_8_ce0;
    patches_superpoints_8_d0 <= grp_add_patch_111_fu_1122_patches_superpoints_8_d0;
    patches_superpoints_8_we0 <= grp_add_patch_111_fu_1122_patches_superpoints_8_we0;
    patches_superpoints_9_address0 <= grp_add_patch_111_fu_1122_patches_superpoints_9_address0;
    patches_superpoints_9_ce0 <= grp_add_patch_111_fu_1122_patches_superpoints_9_ce0;
    patches_superpoints_9_d0 <= grp_add_patch_111_fu_1122_patches_superpoints_9_d0;
    patches_superpoints_9_we0 <= grp_add_patch_111_fu_1122_patches_superpoints_9_we0;
    select_ln1077_2_fu_1316_p3 <= 
        add_ln1077_fu_1266_p2 when (icmp_ln1079_fu_1272_p2(0) = '1') else 
        a_reg_774;
    select_ln1077_fu_1278_p3 <= 
        ap_const_lv2_0 when (icmp_ln1079_fu_1272_p2(0) = '1') else 
        b_reg_796;
    select_ln1079_3_fu_1344_p3 <= 
        add_ln1079_fu_1324_p2 when (and_ln1077_2_fu_1310_p2(0) = '1') else 
        select_ln1077_fu_1278_p3;
    select_ln1079_4_fu_1493_p3 <= 
        ap_const_lv8_1 when (icmp_ln1079_fu_1272_p2(0) = '1') else 
        add_ln1079_2_fu_1487_p2;
    select_ln1079_fu_1336_p3 <= 
        ap_const_lv5_0 when (or_ln1079_fu_1330_p2(0) = '1') else 
        c_reg_818;
    select_ln1081_3_fu_1408_p3 <= 
        add_ln1081_fu_1382_p2 when (and_ln1079_fu_1376_p2(0) = '1') else 
        select_ln1079_fu_1336_p3;
    select_ln1081_4_fu_1479_p3 <= 
        ap_const_lv7_1 when (or_ln1079_fu_1330_p2(0) = '1') else 
        add_ln1081_2_fu_1473_p2;
    select_ln1081_fu_1400_p3 <= 
        ap_const_lv2_0 when (or_ln1081_2_fu_1394_p2(0) = '1') else 
        d_reg_829;
    select_ln1105_2_fu_1583_p3 <= 
        add_ln1105_fu_1533_p2 when (icmp_ln1107_fu_1539_p2(0) = '1') else 
        b_5_reg_885;
    select_ln1105_fu_1545_p3 <= 
        ap_const_lv2_0 when (icmp_ln1107_fu_1539_p2(0) = '1') else 
        c_5_reg_907;
    select_ln1107_3_fu_1611_p3 <= 
        add_ln1107_fu_1591_p2 when (and_ln1105_2_fu_1577_p2(0) = '1') else 
        select_ln1105_fu_1545_p3;
    select_ln1107_4_fu_1760_p3 <= 
        ap_const_lv8_1 when (icmp_ln1107_fu_1539_p2(0) = '1') else 
        add_ln1107_2_fu_1754_p2;
    select_ln1107_fu_1603_p3 <= 
        ap_const_lv5_0 when (or_ln1107_fu_1597_p2(0) = '1') else 
        d_4_reg_929;
    select_ln1109_3_fu_1675_p3 <= 
        add_ln1109_fu_1649_p2 when (and_ln1107_fu_1643_p2(0) = '1') else 
        select_ln1107_fu_1603_p3;
    select_ln1109_4_fu_1746_p3 <= 
        ap_const_lv7_1 when (or_ln1107_fu_1597_p2(0) = '1') else 
        add_ln1109_2_fu_1740_p2;
    select_ln1109_fu_1667_p3 <= 
        ap_const_lv2_0 when (or_ln1109_2_fu_1661_p2(0) = '1') else 
        e_reg_940;
    select_ln1120_2_fu_1818_p3 <= 
        add_ln1120_fu_1780_p2 when (icmp_ln1122_fu_1786_p2(0) = '1') else 
        b_6_reg_962;
    select_ln1120_fu_1792_p3 <= 
        ap_const_lv3_0 when (icmp_ln1122_fu_1786_p2(0) = '1') else 
        c_6_reg_984;
    select_ln1122_3_fu_1846_p3 <= 
        add_ln1122_fu_1826_p2 when (and_ln1120_fu_1812_p2(0) = '1') else 
        select_ln1120_fu_1792_p3;
    select_ln1122_4_fu_1912_p3 <= 
        ap_const_lv6_1 when (icmp_ln1122_fu_1786_p2(0) = '1') else 
        add_ln1122_2_fu_1906_p2;
    select_ln1122_fu_1838_p3 <= 
        ap_const_lv3_0 when (or_ln1122_fu_1832_p2(0) = '1') else 
        d_6_reg_995;
    select_ln93_2_fu_1965_p3 <= 
        i_19_fu_1945_p2 when (icmp_ln96_fu_1951_p2(0) = '1') else 
        ap_phi_mux_i_16_phi_fu_1021_p4;
    select_ln93_fu_1957_p3 <= 
        ap_const_lv2_0 when (icmp_ln96_fu_1951_p2(0) = '1') else 
        ap_phi_mux_a_4_phi_fu_1043_p4;
    select_ln96_3_fu_2027_p3 <= 
        add_ln96_fu_2007_p2 when (and_ln93_2_fu_2001_p2(0) = '1') else 
        select_ln93_fu_1957_p3;
    select_ln96_4_fu_2181_p3 <= 
        ap_const_lv8_1 when (icmp_ln96_fu_1951_p2(0) = '1') else 
        add_ln96_2_fu_2175_p2;
    select_ln96_fu_2019_p3 <= 
        ap_const_lv5_0 when (or_ln96_fu_2013_p2(0) = '1') else 
        ap_phi_mux_b_8_phi_fu_1065_p4;
    select_ln98_3_fu_2091_p3 <= 
        add_ln98_fu_2065_p2 when (and_ln96_fu_2059_p2(0) = '1') else 
        select_ln96_fu_2019_p3;
    select_ln98_4_fu_2167_p3 <= 
        ap_const_lv7_1 when (or_ln96_fu_2013_p2(0) = '1') else 
        add_ln98_2_fu_2161_p2;
    select_ln98_fu_2083_p3 <= 
        ap_const_lv2_0 when (or_ln98_2_fu_2077_p2(0) = '1') else 
        c_8_reg_1072;
        sext_ln1133_fu_1920_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(superpoint_count_assign_reg_840),64));

        sext_ln42_fu_2276_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(z1_max_2_fu_2268_p3),64));

        sext_ln44_fu_2264_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(z1_min_2_fu_2256_p3),64));

    sub_ln102_fu_2125_p2 <= std_logic_vector(unsigned(p_shl8_cast_fu_2117_p3) - unsigned(trunc_ln102_fu_2109_p1));
    sub_ln1085_fu_1442_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_1434_p3) - unsigned(trunc_ln1085_fu_1426_p1));
    sub_ln1113_fu_1709_p2 <= std_logic_vector(unsigned(p_shl5_cast_fu_1701_p3) - unsigned(trunc_ln1113_fu_1693_p1));
    sub_ln1126_fu_1878_p2 <= std_logic_vector(unsigned(p_shl6_cast_fu_1858_p3) - unsigned(zext_ln1126_fu_1874_p1));
    sub_ln72_fu_2337_p2 <= std_logic_vector(unsigned(tmp_194_cast_fu_2317_p3) - unsigned(tmp_196_cast_fu_2329_p3));
    sub_ln73_fu_2391_p2 <= std_logic_vector(unsigned(tmp_s_fu_2371_p3) - unsigned(zext_ln73_fu_2387_p1));
    temp_address0 <= grp_makeSuperPoint_alignedToLine_fu_1095_temp_address0;
    temp_address1 <= grp_makeSuperPoint_alignedToLine_fu_1095_temp_address1;
    temp_ce0 <= grp_makeSuperPoint_alignedToLine_fu_1095_temp_ce0;
    temp_ce1 <= grp_makeSuperPoint_alignedToLine_fu_1095_temp_ce1;
    temp_d0 <= grp_makeSuperPoint_alignedToLine_fu_1095_temp_d0;
    temp_we0 <= grp_makeSuperPoint_alignedToLine_fu_1095_temp_we0;
    tmp_130_fu_2379_p3 <= (trunc_ln73_fu_2367_p1 & ap_const_lv1_0);
    tmp_149_fu_1352_p3 <= (select_ln1079_3_fu_1344_p3 & ap_const_lv4_0);
    tmp_150_fu_1619_p3 <= (select_ln1107_3_fu_1611_p3 & ap_const_lv4_0);
    tmp_151_fu_1866_p3 <= (select_ln1122_3_fu_1846_p3 & ap_const_lv1_0);
    tmp_152_fu_2035_p3 <= (select_ln96_3_fu_2027_p3 & ap_const_lv4_0);
    tmp_153_fu_2297_p4 <= empty_101_fu_334(31 downto 2);
    tmp_194_cast_fu_2317_p3 <= (trunc_ln72_fu_2313_p1 & ap_const_lv3_0);
    tmp_196_cast_fu_2329_p3 <= (trunc_ln72_2_fu_2325_p1 & ap_const_lv1_0);
    tmp_s_fu_2371_p3 <= (trunc_ln73_fu_2367_p1 & ap_const_lv3_0);
    trunc_ln102_2_fu_2113_p1 <= add_ln102_fu_2103_p2(6 - 1 downto 0);
    trunc_ln102_fu_2109_p1 <= add_ln102_fu_2103_p2(8 - 1 downto 0);
    trunc_ln1085_2_fu_1430_p1 <= add_ln1085_fu_1420_p2(6 - 1 downto 0);
    trunc_ln1085_fu_1426_p1 <= add_ln1085_fu_1420_p2(8 - 1 downto 0);
    trunc_ln1113_2_fu_1697_p1 <= add_ln1113_fu_1687_p2(6 - 1 downto 0);
    trunc_ln1113_fu_1693_p1 <= add_ln1113_fu_1687_p2(8 - 1 downto 0);
    trunc_ln1126_fu_1854_p1 <= select_ln1122_3_fu_1846_p3(2 - 1 downto 0);
    trunc_ln41_fu_2228_p1 <= z1_min_fu_2220_p3(26 - 1 downto 0);
    trunc_ln42_fu_2246_p1 <= z1_max_fu_2238_p3(26 - 1 downto 0);
    trunc_ln61_fu_2293_p1 <= ap_phi_mux_i_20_phi_fu_1087_p4(3 - 1 downto 0);
    trunc_ln72_2_fu_2325_p1 <= empty_101_fu_334(4 - 1 downto 0);
    trunc_ln72_fu_2313_p1 <= empty_101_fu_334(2 - 1 downto 0);
    trunc_ln73_fu_2367_p1 <= NPpatches_parameters_4_q1(2 - 1 downto 0);
    trunc_ln93_fu_1973_p1 <= select_ln93_2_fu_1965_p3(3 - 1 downto 0);
    xor_ln1077_fu_1286_p2 <= (icmp_ln1079_fu_1272_p2 xor ap_const_lv1_1);
    xor_ln1079_fu_1364_p2 <= (icmp_ln1081_fu_1304_p2 xor ap_const_lv1_1);
    xor_ln1105_fu_1553_p2 <= (icmp_ln1107_fu_1539_p2 xor ap_const_lv1_1);
    xor_ln1107_fu_1631_p2 <= (icmp_ln1109_fu_1571_p2 xor ap_const_lv1_1);
    xor_ln1120_fu_1800_p2 <= (icmp_ln1122_fu_1786_p2 xor ap_const_lv1_1);
    xor_ln93_fu_1977_p2 <= (icmp_ln96_fu_1951_p2 xor ap_const_lv1_1);
    xor_ln96_fu_2047_p2 <= (icmp_ln98_fu_1995_p2 xor ap_const_lv1_1);
    z1_max_2_fu_2268_p3 <= 
        ap_const_lv26_15EF424 when (icmp_ln44_fu_2250_p2(0) = '1') else 
        trunc_ln42_fu_2246_p1;
    z1_max_fu_2238_p3 <= 
        NPpatches_superpoints_0_q0 when (icmp_ln42_fu_2232_p2(0) = '1') else 
        ap_const_lv64_14FB1E4;
    z1_min_2_fu_2256_p3 <= 
        ap_const_lv26_15EF424 when (icmp_ln44_fu_2250_p2(0) = '1') else 
        trunc_ln41_fu_2228_p1;
    z1_min_fu_2220_p3 <= 
        ap_const_lv64_FFFFFFFFFEB04E1C when (icmp_ln41_fu_2214_p2(0) = '1') else 
        NPpatches_superpoints_0_q1;
    zext_ln102_3_fu_2131_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln98_fu_2083_p3),8));
    zext_ln102_4_fu_2141_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln102_2_fu_2135_p2),64));
    zext_ln102_fu_2099_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln98_3_fu_2091_p3),62));
    zext_ln1081_fu_1360_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_149_fu_1352_p3),62));
    zext_ln1085_3_fu_1448_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1081_fu_1400_p3),8));
    zext_ln1085_4_fu_1458_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1085_2_fu_1452_p2),64));
    zext_ln1085_fu_1416_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1081_3_fu_1408_p3),62));
    zext_ln1109_fu_1627_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_150_fu_1619_p3),62));
    zext_ln1113_3_fu_1715_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1109_fu_1667_p3),8));
    zext_ln1113_4_fu_1725_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1113_2_fu_1719_p2),64));
    zext_ln1113_fu_1683_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1109_3_fu_1675_p3),62));
    zext_ln1126_3_fu_1884_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1122_fu_1838_p3),5));
    zext_ln1126_4_fu_1894_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1126_fu_1888_p2),64));
    zext_ln1126_fu_1874_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_151_fu_1866_p3),5));
    zext_ln64_fu_2361_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_fu_2343_p2),32));
    zext_ln72_fu_2443_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln72_reg_2875_pp4_iter3_reg),64));
    zext_ln73_2_fu_2452_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln73_fu_2447_p2),64));
    zext_ln73_fu_2387_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_130_fu_2379_p3),5));
    zext_ln74_fu_2462_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln74_fu_2457_p2),64));
    zext_ln75_fu_2472_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln75_fu_2467_p2),64));
    zext_ln76_fu_2403_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln76_fu_2397_p2),64));
    zext_ln77_fu_2414_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln77_fu_2408_p2),64));
    zext_ln98_fu_2043_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_152_fu_2035_p3),62));
end behav;
