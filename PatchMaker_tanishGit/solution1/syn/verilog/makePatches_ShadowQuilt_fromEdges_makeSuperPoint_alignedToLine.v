// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        GDarray_address0,
        GDarray_ce0,
        GDarray_q0,
        GDn_points_address0,
        GDn_points_ce0,
        GDn_points_q0,
        i,
        z_top,
        apexZ0,
        original_ppl,
        leftRight_offset,
        init_patch_address0,
        init_patch_ce0,
        init_patch_we0,
        init_patch_d0,
        init_patch1_address0,
        init_patch1_ce0,
        init_patch1_we0,
        init_patch1_d0,
        init_patch2_address0,
        init_patch2_ce0,
        init_patch2_we0,
        init_patch2_d0,
        init_patch3_address0,
        init_patch3_ce0,
        init_patch3_we0,
        init_patch3_d0,
        init_patch4_address0,
        init_patch4_ce0,
        init_patch4_we0,
        init_patch4_d0,
        p_read1,
        temp_address0,
        temp_ce0,
        temp_we0,
        temp_d0,
        temp_q0,
        ap_return_0,
        ap_return_1
);

parameter    ap_ST_fsm_state1 = 35'd1;
parameter    ap_ST_fsm_state2 = 35'd2;
parameter    ap_ST_fsm_pp0_stage0 = 35'd4;
parameter    ap_ST_fsm_state6 = 35'd8;
parameter    ap_ST_fsm_state7 = 35'd16;
parameter    ap_ST_fsm_state8 = 35'd32;
parameter    ap_ST_fsm_state9 = 35'd64;
parameter    ap_ST_fsm_state10 = 35'd128;
parameter    ap_ST_fsm_state11 = 35'd256;
parameter    ap_ST_fsm_state12 = 35'd512;
parameter    ap_ST_fsm_state13 = 35'd1024;
parameter    ap_ST_fsm_state14 = 35'd2048;
parameter    ap_ST_fsm_state15 = 35'd4096;
parameter    ap_ST_fsm_state16 = 35'd8192;
parameter    ap_ST_fsm_state17 = 35'd16384;
parameter    ap_ST_fsm_state18 = 35'd32768;
parameter    ap_ST_fsm_state19 = 35'd65536;
parameter    ap_ST_fsm_pp1_stage0 = 35'd131072;
parameter    ap_ST_fsm_pp1_stage1 = 35'd262144;
parameter    ap_ST_fsm_pp1_stage2 = 35'd524288;
parameter    ap_ST_fsm_state25 = 35'd1048576;
parameter    ap_ST_fsm_state26 = 35'd2097152;
parameter    ap_ST_fsm_pp2_stage0 = 35'd4194304;
parameter    ap_ST_fsm_state31 = 35'd8388608;
parameter    ap_ST_fsm_state32 = 35'd16777216;
parameter    ap_ST_fsm_pp3_stage0 = 35'd33554432;
parameter    ap_ST_fsm_state36 = 35'd67108864;
parameter    ap_ST_fsm_pp4_stage0 = 35'd134217728;
parameter    ap_ST_fsm_state40 = 35'd268435456;
parameter    ap_ST_fsm_pp5_stage0 = 35'd536870912;
parameter    ap_ST_fsm_state44 = 35'd1073741824;
parameter    ap_ST_fsm_state45 = 35'd2147483648;
parameter    ap_ST_fsm_pp6_stage0 = 35'd4294967296;
parameter    ap_ST_fsm_pp7_stage0 = 35'd8589934592;
parameter    ap_ST_fsm_state51 = 35'd17179869184;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] GDarray_address0;
output   GDarray_ce0;
input  [191:0] GDarray_q0;
output  [2:0] GDn_points_address0;
output   GDn_points_ce0;
input  [31:0] GDn_points_q0;
input  [2:0] i;
input  [63:0] z_top;
input  [63:0] apexZ0;
input  [31:0] original_ppl;
input  [0:0] leftRight_offset;
output  [5:0] init_patch_address0;
output   init_patch_ce0;
output   init_patch_we0;
output  [63:0] init_patch_d0;
output  [5:0] init_patch1_address0;
output   init_patch1_ce0;
output   init_patch1_we0;
output  [63:0] init_patch1_d0;
output  [5:0] init_patch2_address0;
output   init_patch2_ce0;
output   init_patch2_we0;
output  [63:0] init_patch2_d0;
output  [5:0] init_patch3_address0;
output   init_patch3_ce0;
output   init_patch3_we0;
output  [63:0] init_patch3_d0;
output  [5:0] init_patch4_address0;
output   init_patch4_ce0;
output   init_patch4_we0;
output  [63:0] init_patch4_d0;
input  [31:0] p_read1;
output  [9:0] temp_address0;
output   temp_ce0;
output   temp_we0;
output  [63:0] temp_d0;
input  [63:0] temp_q0;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[10:0] GDarray_address0;
reg GDarray_ce0;
reg GDn_points_ce0;
reg init_patch_ce0;
reg init_patch_we0;
reg init_patch1_ce0;
reg init_patch1_we0;
reg init_patch2_ce0;
reg init_patch2_we0;
reg init_patch3_ce0;
reg init_patch3_we0;
reg init_patch4_ce0;
reg init_patch4_we0;
reg[9:0] temp_address0;
reg temp_ce0;
reg temp_we0;
reg[63:0] temp_d0;

(* fsm_encoding = "none" *) reg   [34:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] radii_address0;
reg    radii_ce0;
wire   [24:0] radii_q0;
wire   [2:0] trapezoid_edges_address0;
reg    trapezoid_edges_ce0;
wire   [25:0] trapezoid_edges_q0;
reg   [30:0] row_list_size_reg_522;
reg   [30:0] row_list_size_reg_522_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] start_index_reg_546;
reg   [63:0] start_value_reg_558;
reg   [31:0] j_1_reg_570;
reg   [31:0] j_1_reg_570_pp1_iter1_reg;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state20_pp1_stage0_iter0;
wire    ap_block_state23_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
reg   [63:0] p_x_assign_7_reg_582;
reg  signed [31:0] j_9_reg_594;
reg  signed [31:0] right_bound_reg_606;
reg   [31:0] j_2_reg_618;
reg   [31:0] j_2_reg_618_pp2_iter1_reg;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state27_pp2_stage0_iter0;
wire    ap_block_state28_pp2_stage0_iter1;
wire    ap_block_state29_pp2_stage0_iter2;
wire    ap_block_state30_pp2_stage0_iter3;
wire    ap_block_pp2_stage0_11001;
reg   [31:0] j_2_reg_618_pp2_iter2_reg;
reg   [63:0] rbVal_reg_630;
reg   [63:0] lbVal_reg_642;
reg   [65:0] indvar_flatten23_reg_654;
reg   [63:0] temp_size_3_reg_665;
reg   [63:0] j_8_reg_676;
reg   [1:0] z_4_reg_685;
reg   [32:0] indvar_flatten15_reg_696;
reg   [30:0] temp_size_2_reg_707;
reg   [32:0] j_7_reg_718;
reg   [1:0] z_3_reg_727;
reg   [32:0] indvar_flatten7_reg_738;
reg   [30:0] temp_size_1_reg_749;
reg   [32:0] j_6_reg_760;
reg   [1:0] z_2_reg_769;
reg   [65:0] indvar_flatten_reg_780;
reg   [63:0] temp_size_reg_791;
reg   [63:0] j_5_reg_802;
reg   [1:0] z_1_reg_811;
reg   [5:0] indvar_flatten31_reg_822;
reg   [4:0] i_10_reg_833;
reg   [1:0] z_reg_844;
wire   [63:0] zext_ln1111_fu_893_p1;
reg   [63:0] zext_ln1111_reg_3324;
wire    ap_CS_fsm_state2;
wire   [0:0] leftRight_offset_read_read_fu_278_p2;
reg   [24:0] y_reg_3372;
reg   [31:0] GDn_points_load_reg_3377;
wire   [0:0] icmp_ln1115_fu_899_p2;
reg   [0:0] icmp_ln1115_reg_3382;
wire   [30:0] trunc_ln54_fu_905_p1;
reg   [30:0] trunc_ln54_reg_3386;
wire  signed [37:0] sext_ln1115_fu_943_p1;
reg  signed [37:0] sext_ln1115_reg_3391;
wire   [30:0] add_ln1117_1_fu_947_p2;
reg   [30:0] add_ln1117_1_reg_3396;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln1115_1_fu_953_p2;
reg   [0:0] icmp_ln1115_1_reg_3401;
reg   [0:0] icmp_ln1115_1_reg_3401_pp0_iter1_reg;
wire   [37:0] add_ln54_fu_992_p2;
reg   [37:0] add_ln54_reg_3405;
wire   [63:0] add_ln1117_fu_1061_p2;
reg   [63:0] add_ln1117_reg_3415;
wire    ap_CS_fsm_state6;
wire   [31:0] grp_fu_868_p1;
reg   [31:0] conv9_reg_3430;
wire    ap_CS_fsm_state7;
wire   [31:0] grp_fu_871_p1;
reg   [31:0] conv_reg_3435;
wire   [31:0] grp_fu_874_p1;
reg   [31:0] conv6_reg_3440;
wire   [31:0] grp_fu_863_p2;
reg   [31:0] div_reg_3445;
wire    ap_CS_fsm_state13;
wire   [31:0] grp_fu_859_p2;
reg   [31:0] mul_reg_3450;
wire    ap_CS_fsm_state15;
wire   [31:0] grp_fu_855_p2;
reg   [31:0] dc_reg_3455;
wire    ap_CS_fsm_state18;
wire   [63:0] result_V_fu_1240_p3;
reg   [63:0] result_V_reg_3460;
wire    ap_CS_fsm_state19;
wire   [31:0] add_ln1245_fu_1248_p2;
reg   [31:0] add_ln1245_reg_3465;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln1245_fu_1254_p2;
reg   [0:0] icmp_ln1245_reg_3470;
reg   [0:0] icmp_ln1245_reg_3470_pp1_iter1_reg;
wire   [63:0] sub_ln1247_fu_1265_p2;
reg   [63:0] sub_ln1247_reg_3479;
wire    ap_CS_fsm_pp1_stage1;
wire    ap_block_state21_pp1_stage1_iter0;
wire    ap_block_state24_pp1_stage1_iter1;
wire    ap_block_pp1_stage1_11001;
wire   [63:0] grp_fu_881_p1;
reg   [63:0] dc_9_reg_3486;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_state22_pp1_stage2_iter0;
wire    ap_block_pp1_stage2_11001;
wire   [0:0] icmp_ln1247_fu_1340_p2;
reg   [0:0] icmp_ln1247_reg_3501;
wire   [0:0] icmp_ln1247_1_fu_1346_p2;
reg   [0:0] icmp_ln1247_1_reg_3506;
wire   [0:0] icmp_ln1247_2_fu_1352_p2;
reg   [0:0] icmp_ln1247_2_reg_3511;
wire   [0:0] icmp_ln1247_3_fu_1358_p2;
reg   [0:0] icmp_ln1247_3_reg_3516;
wire   [31:0] select_ln1247_fu_1384_p3;
reg    ap_enable_reg_pp1_iter1;
wire   [63:0] select_ln1247_1_fu_1392_p3;
wire   [63:0] select_ln1247_2_fu_1399_p3;
wire    ap_CS_fsm_state25;
wire   [63:0] zext_ln1224_fu_1406_p1;
reg   [63:0] zext_ln1224_reg_3541;
wire    ap_CS_fsm_state26;
wire   [31:0] add_ln1224_fu_1410_p2;
reg   [31:0] add_ln1224_reg_3547;
reg    ap_enable_reg_pp2_iter0;
wire   [0:0] icmp_ln1224_fu_1416_p2;
reg   [0:0] icmp_ln1224_reg_3552;
reg   [0:0] icmp_ln1224_reg_3552_pp2_iter1_reg;
reg   [0:0] icmp_ln1224_reg_3552_pp2_iter2_reg;
wire   [63:0] add_ln1226_fu_1427_p2;
reg   [10:0] tmp_164_reg_3571;
wire   [51:0] tmp_165_fu_1453_p1;
reg   [51:0] tmp_165_reg_3577;
reg   [10:0] tmp_166_reg_3582;
wire   [51:0] tmp_167_fu_1471_p1;
reg   [51:0] tmp_167_reg_3588;
wire   [31:0] select_ln1226_fu_1578_p3;
reg    ap_enable_reg_pp2_iter3;
wire   [63:0] lbVal_2_fu_1586_p3;
wire   [31:0] select_ln1232_fu_1697_p3;
wire   [63:0] p_Result_11_fu_1705_p3;
wire  signed [31:0] select_ln1175_fu_1743_p3;
reg  signed [31:0] select_ln1175_reg_3613;
wire    ap_CS_fsm_state31;
wire   [0:0] icmp_ln1190_fu_1762_p2;
wire   [0:0] icmp_ln1204_fu_1768_p2;
wire   [0:0] grp_fu_888_p2;
wire  signed [32:0] sext_ln1192_fu_1774_p1;
wire   [16:0] sub_ln54_8_fu_1803_p2;
reg   [16:0] sub_ln54_8_reg_3636;
wire   [32:0] sub_ln1192_fu_1821_p2;
reg   [32:0] sub_ln1192_reg_3641;
wire   [0:0] icmp_ln1149_fu_1870_p2;
wire  signed [32:0] sext_ln1163_fu_1876_p1;
wire   [16:0] sub_ln54_7_fu_1905_p2;
reg   [16:0] sub_ln54_7_reg_3659;
wire   [32:0] sub_ln1163_fu_1923_p2;
reg   [32:0] sub_ln1163_reg_3664;
wire  signed [31:0] j_3_fu_1929_p2;
reg  signed [31:0] j_3_reg_3669;
wire   [0:0] icmp_ln1151_fu_1934_p2;
wire  signed [63:0] sext_ln1204_fu_1950_p1;
wire    ap_CS_fsm_state32;
wire   [16:0] sub_ln54_9_fu_2017_p2;
reg   [16:0] sub_ln54_9_reg_3685;
wire   [65:0] mul_ln1204_fu_2031_p2;
reg   [65:0] mul_ln1204_reg_3690;
wire   [65:0] add_ln1204_3_fu_2037_p2;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state33_pp3_stage0_iter0;
wire    ap_block_state34_pp3_stage0_iter1;
wire    ap_block_state35_pp3_stage0_iter2;
wire    ap_block_pp3_stage0_11001;
wire   [0:0] icmp_ln1204_2_fu_2061_p2;
reg   [0:0] icmp_ln1204_2_reg_3700;
reg   [0:0] icmp_ln1204_2_reg_3700_pp3_iter1_reg;
wire   [63:0] select_ln1204_1_fu_2118_p3;
reg   [63:0] select_ln1204_1_reg_3704;
wire   [63:0] select_ln1204_2_fu_2148_p3;
wire   [9:0] add_ln1208_1_fu_2160_p2;
reg   [9:0] add_ln1208_1_reg_3714;
reg   [9:0] add_ln1208_1_reg_3714_pp3_iter1_reg;
wire   [63:0] add_ln54_7_fu_2189_p2;
reg   [63:0] add_ln54_7_reg_3719;
wire   [1:0] add_ln1206_fu_2195_p2;
wire   [63:0] add_ln1208_fu_2261_p2;
reg   [63:0] add_ln1208_reg_3735;
wire   [31:0] add_ln1215_fu_2292_p2;
reg   [31:0] add_ln1215_reg_3740;
wire    ap_CS_fsm_state36;
wire   [2:0] trunc_ln13_fu_2297_p1;
reg   [2:0] trunc_ln13_reg_3745;
wire   [32:0] add_ln1192_1_fu_2300_p2;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter0;
wire    ap_block_state37_pp4_stage0_iter0;
wire    ap_block_state38_pp4_stage0_iter1;
wire    ap_block_state39_pp4_stage0_iter2;
wire    ap_block_pp4_stage0_11001;
wire   [0:0] icmp_ln1192_1_fu_2336_p2;
reg   [0:0] icmp_ln1192_1_reg_3754;
reg   [0:0] icmp_ln1192_1_reg_3754_pp4_iter1_reg;
wire   [30:0] select_ln1192_1_fu_2367_p3;
reg   [30:0] select_ln1192_1_reg_3758;
wire   [32:0] select_ln1192_3_fu_2435_p3;
wire   [9:0] add_ln1196_1_fu_2447_p2;
reg   [9:0] add_ln1196_1_reg_3768;
reg   [9:0] add_ln1196_1_reg_3768_pp4_iter1_reg;
wire   [38:0] add_ln54_6_fu_2476_p2;
reg   [38:0] add_ln54_6_reg_3773;
wire   [1:0] add_ln1194_fu_2482_p2;
wire   [63:0] add_ln1196_fu_2552_p2;
reg   [63:0] add_ln1196_reg_3788;
wire   [32:0] add_ln1163_1_fu_2584_p2;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter0;
wire    ap_block_state41_pp5_stage0_iter0;
wire    ap_block_state42_pp5_stage0_iter1;
wire    ap_block_state43_pp5_stage0_iter2;
wire    ap_block_pp5_stage0_11001;
wire   [0:0] icmp_ln1163_1_fu_2620_p2;
reg   [0:0] icmp_ln1163_1_reg_3798;
reg   [0:0] icmp_ln1163_1_reg_3798_pp5_iter1_reg;
wire   [30:0] select_ln1163_1_fu_2651_p3;
reg   [30:0] select_ln1163_1_reg_3802;
wire   [32:0] select_ln1163_3_fu_2719_p3;
wire   [9:0] add_ln1167_1_fu_2731_p2;
reg   [9:0] add_ln1167_1_reg_3812;
reg   [9:0] add_ln1167_1_reg_3812_pp5_iter1_reg;
wire   [38:0] add_ln54_5_fu_2760_p2;
reg   [38:0] add_ln54_5_reg_3817;
wire   [1:0] add_ln1165_fu_2766_p2;
wire   [63:0] add_ln1167_fu_2836_p2;
reg   [63:0] add_ln1167_reg_3832;
wire  signed [63:0] sext_ln1151_fu_2868_p1;
wire    ap_CS_fsm_state45;
wire   [16:0] sub_ln54_6_fu_2933_p2;
reg   [16:0] sub_ln54_6_reg_3842;
wire   [65:0] mul_ln1151_fu_2947_p2;
reg   [65:0] mul_ln1151_reg_3847;
wire   [65:0] add_ln1151_2_fu_2953_p2;
wire    ap_CS_fsm_pp6_stage0;
reg    ap_enable_reg_pp6_iter0;
wire    ap_block_state46_pp6_stage0_iter0;
wire    ap_block_state47_pp6_stage0_iter1;
wire    ap_block_state48_pp6_stage0_iter2;
wire    ap_block_pp6_stage0_11001;
wire   [0:0] icmp_ln1151_2_fu_2977_p2;
reg   [0:0] icmp_ln1151_2_reg_3857;
reg   [0:0] icmp_ln1151_2_reg_3857_pp6_iter1_reg;
wire   [63:0] select_ln1151_1_fu_3034_p3;
reg   [63:0] select_ln1151_1_reg_3861;
wire   [63:0] select_ln1151_2_fu_3064_p3;
wire   [9:0] add_ln1155_1_fu_3076_p2;
reg   [9:0] add_ln1155_1_reg_3871;
reg   [9:0] add_ln1155_1_reg_3871_pp6_iter1_reg;
wire   [63:0] add_ln54_4_fu_3105_p2;
reg   [63:0] add_ln54_4_reg_3876;
wire   [1:0] add_ln1153_fu_3111_p2;
wire   [63:0] add_ln1155_fu_3177_p2;
reg   [63:0] add_ln1155_reg_3892;
wire   [5:0] add_ln9_1_fu_3208_p2;
wire    ap_CS_fsm_pp7_stage0;
reg    ap_enable_reg_pp7_iter0;
wire    ap_block_state49_pp7_stage0_iter0;
wire    ap_block_state50_pp7_stage0_iter1;
wire    ap_block_pp7_stage0_11001;
wire   [0:0] icmp_ln9_fu_3214_p2;
reg   [0:0] icmp_ln9_reg_3902;
wire   [4:0] select_ln9_1_fu_3240_p3;
reg   [4:0] select_ln9_1_reg_3906;
reg   [5:0] init_patch_addr_reg_3916;
reg   [5:0] init_patch1_addr_reg_3921;
reg   [5:0] init_patch2_addr_reg_3926;
reg   [5:0] init_patch3_addr_reg_3931;
reg   [5:0] init_patch4_addr_reg_3936;
wire   [1:0] add_ln11_fu_3294_p2;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state20;
wire    ap_block_pp1_stage2_subdone;
wire    ap_block_pp1_stage1_subdone;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state27;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter2;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state33;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter2;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state37;
reg    ap_enable_reg_pp4_iter1;
reg    ap_enable_reg_pp4_iter2;
wire    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state41;
reg    ap_enable_reg_pp5_iter1;
reg    ap_enable_reg_pp5_iter2;
wire    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state46;
reg    ap_enable_reg_pp6_iter1;
reg    ap_enable_reg_pp6_iter2;
wire    ap_block_pp7_stage0_subdone;
reg    ap_condition_pp7_exit_iter0_state49;
reg    ap_enable_reg_pp7_iter1;
reg   [7:0] row_list_address0;
reg    row_list_ce0;
reg    row_list_we0;
wire   [63:0] row_list_d0;
wire   [63:0] row_list_q0;
reg   [30:0] ap_phi_mux_row_list_size_phi_fu_526_p4;
wire    ap_block_pp0_stage0;
reg   [31:0] row_list_size_assign_reg_534;
reg   [31:0] ap_phi_mux_j_1_phi_fu_574_p4;
wire    ap_block_pp1_stage0;
reg   [31:0] ap_phi_mux_j_2_phi_fu_622_p4;
wire    ap_block_pp2_stage0;
reg   [63:0] ap_phi_mux_temp_size_3_phi_fu_669_p4;
wire    ap_block_pp3_stage0;
reg   [30:0] ap_phi_mux_temp_size_2_phi_fu_711_p4;
wire    ap_block_pp4_stage0;
reg   [30:0] ap_phi_mux_temp_size_1_phi_fu_753_p4;
wire    ap_block_pp5_stage0;
reg   [63:0] ap_phi_mux_temp_size_phi_fu_795_p4;
wire    ap_block_pp6_stage0;
reg   [4:0] ap_phi_mux_i_10_phi_fu_837_p4;
wire    ap_block_pp7_stage0;
wire   [63:0] zext_ln1117_3_fu_1020_p1;
wire   [63:0] row_list_size_cast9_fu_1067_p1;
wire   [63:0] trunc_ln1249_cast_fu_1260_p1;
wire   [63:0] trunc_ln1228_cast_fu_1422_p1;
wire   [63:0] zext_ln1208_5_fu_2220_p1;
wire   [63:0] zext_ln1208_3_fu_2266_p1;
wire   [63:0] zext_ln1196_5_fu_2511_p1;
wire   [63:0] zext_ln1196_2_fu_2558_p1;
wire   [63:0] zext_ln1167_5_fu_2795_p1;
wire   [63:0] zext_ln1167_2_fu_2842_p1;
wire   [63:0] zext_ln1155_5_fu_3136_p1;
wire   [63:0] zext_ln1155_3_fu_3182_p1;
wire  signed [63:0] sext_ln13_fu_3284_p1;
wire   [63:0] trunc_ln1208_2_fu_2287_p1;
wire   [63:0] trunc_ln1196_2_fu_2579_p1;
wire   [63:0] trunc_ln1167_2_fu_2863_p1;
wire   [63:0] trunc_ln1155_2_fu_3203_p1;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state8;
wire   [63:0] grp_fu_868_p0;
wire   [63:0] grp_fu_871_p0;
wire   [63:0] grp_fu_877_p0;
wire   [63:0] grp_fu_877_p1;
reg   [63:0] grp_fu_881_p0;
wire    ap_block_pp1_stage1;
wire    ap_block_pp1_stage2;
wire   [63:0] grp_fu_885_p0;
wire   [15:0] shl_ln54_s_fu_909_p3;
wire   [13:0] shl_ln54_1_fu_920_p3;
wire   [16:0] zext_ln54_fu_916_p1;
wire   [16:0] zext_ln54_2_fu_927_p1;
wire   [16:0] sub_ln54_fu_931_p2;
wire   [16:0] or_ln54_fu_937_p2;
wire   [35:0] shl_ln54_2_fu_958_p3;
wire   [33:0] shl_ln54_3_fu_970_p3;
wire   [36:0] zext_ln54_3_fu_966_p1;
wire   [36:0] zext_ln54_4_fu_978_p1;
wire   [36:0] sub_ln54_5_fu_982_p2;
wire  signed [37:0] sext_ln54_fu_988_p1;
wire  signed [63:0] sext_ln1117_fu_997_p1;
wire   [63:0] mul_ln1117_fu_1004_p0;
wire   [65:0] mul_ln1117_fu_1004_p1;
wire   [128:0] mul_ln1117_fu_1004_p2;
wire   [59:0] tmp_fu_1010_p4;
wire   [58:0] tmp_40_fu_1025_p4;
wire   [62:0] shl_ln1117_2_fu_1043_p3;
wire   [63:0] zext_ln1117_1_fu_1051_p1;
wire   [63:0] shl_ln1117_1_fu_1035_p3;
wire   [63:0] sub_ln1117_fu_1055_p2;
wire   [66:0] shl_ln_fu_1072_p3;
wire   [191:0] zext_ln1117_2_fu_1079_p1;
wire   [191:0] lshr_ln1117_fu_1083_p2;
wire   [24:0] add_ln1121_fu_1099_p2;
wire   [31:0] data_V_fu_1109_p1;
wire   [22:0] tmp_163_fu_1130_p1;
wire   [24:0] mantissa_fu_1134_p4;
wire   [7:0] tmp_162_fu_1120_p4;
wire   [8:0] zext_ln341_fu_1148_p1;
wire   [8:0] add_ln341_fu_1152_p2;
wire   [7:0] sub_ln1311_fu_1166_p2;
wire   [0:0] isNeg_fu_1158_p3;
wire  signed [8:0] sext_ln1311_fu_1172_p1;
wire   [8:0] ush_fu_1176_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i_cast_cast_cast_fu_1184_p1;
wire   [110:0] zext_ln15_fu_1144_p1;
wire   [110:0] sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_1188_p1;
wire   [110:0] r_V_fu_1192_p2;
wire   [0:0] tmp_149_fu_1204_p3;
wire   [110:0] r_V_9_fu_1198_p2;
wire   [63:0] zext_ln662_fu_1212_p1;
wire   [63:0] tmp_46_fu_1216_p4;
wire   [63:0] val_fu_1226_p3;
wire   [0:0] p_Result_s_fu_1112_p3;
wire   [63:0] result_V_15_fu_1234_p2;
wire   [63:0] data_V_10_fu_1271_p1;
wire   [62:0] trunc_ln368_fu_1274_p1;
wire   [63:0] p_Result_9_fu_1282_p3;
wire   [63:0] data_V_11_fu_1295_p1;
wire   [62:0] trunc_ln368_1_fu_1299_p1;
wire   [63:0] p_Result_10_fu_1307_p3;
wire   [10:0] tmp_s_fu_1320_p4;
wire   [51:0] trunc_ln1247_fu_1278_p1;
wire   [10:0] tmp_124_fu_1330_p4;
wire   [51:0] trunc_ln1247_1_fu_1303_p1;
wire   [0:0] or_ln1247_fu_1364_p2;
wire   [0:0] or_ln1247_1_fu_1368_p2;
wire   [0:0] and_ln1247_fu_1372_p2;
wire   [0:0] grp_fu_877_p2;
wire   [0:0] and_ln1247_1_fu_1378_p2;
wire   [63:0] data_V_12_fu_1439_p1;
wire   [63:0] grp_fu_885_p1;
wire   [63:0] data_V_13_fu_1457_p1;
wire   [53:0] mantissa_4_fu_1475_p4;
wire   [11:0] zext_ln510_fu_1488_p1;
wire   [11:0] add_ln510_fu_1491_p2;
wire   [10:0] sub_ln1311_4_fu_1505_p2;
wire   [0:0] isNeg_4_fu_1497_p3;
wire  signed [11:0] sext_ln1311_4_fu_1510_p1;
wire   [11:0] ush_4_fu_1514_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i_i_cast_cast_cast_fu_1522_p1;
wire   [168:0] zext_ln15_4_fu_1484_p1;
wire   [168:0] sh_prom_i_i_i_i_i_i_cast_cast_cast_cast_fu_1526_p1;
wire   [168:0] r_V_10_fu_1530_p2;
wire   [0:0] tmp_153_fu_1542_p3;
wire   [168:0] r_V_11_fu_1536_p2;
wire   [63:0] zext_ln662_4_fu_1550_p1;
wire   [63:0] tmp_51_fu_1554_p4;
wire   [63:0] val_4_fu_1564_p3;
wire   [0:0] icmp_ln1226_fu_1572_p2;
wire   [53:0] mantissa_5_fu_1594_p4;
wire   [11:0] zext_ln510_1_fu_1607_p1;
wire   [11:0] add_ln510_1_fu_1610_p2;
wire   [10:0] sub_ln1311_5_fu_1624_p2;
wire   [0:0] isNeg_5_fu_1616_p3;
wire  signed [11:0] sext_ln1311_5_fu_1629_p1;
wire   [11:0] ush_5_fu_1633_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i59_i_cast_cast_cast_fu_1641_p1;
wire   [168:0] zext_ln15_5_fu_1603_p1;
wire   [168:0] sh_prom_i_i_i_i_i59_i_cast_cast_cast_cast_fu_1645_p1;
wire   [168:0] r_V_12_fu_1649_p2;
wire   [0:0] tmp_157_fu_1661_p3;
wire   [168:0] r_V_13_fu_1655_p2;
wire   [63:0] zext_ln662_5_fu_1669_p1;
wire   [63:0] tmp_56_fu_1673_p4;
wire   [63:0] val_5_fu_1683_p3;
wire   [0:0] icmp_ln1232_fu_1691_p2;
wire   [31:0] add_ln1175_fu_1713_p2;
wire   [0:0] icmp_ln1175_fu_1719_p2;
wire   [0:0] icmp_ln1180_fu_1725_p2;
wire   [0:0] and_ln1175_fu_1731_p2;
wire   [31:0] start_index_2_fu_1737_p2;
wire   [31:0] sub_ln1190_fu_1751_p2;
wire   [31:0] j_10_fu_1756_p2;
wire   [15:0] shl_ln54_8_fu_1781_p3;
wire   [13:0] shl_ln54_9_fu_1792_p3;
wire   [16:0] zext_ln54_9_fu_1788_p1;
wire   [16:0] zext_ln54_10_fu_1799_p1;
wire   [30:0] trunc_ln1192_fu_1778_p1;
wire   [32:0] p_shl1_fu_1813_p3;
wire   [32:0] zext_ln1192_fu_1809_p1;
wire   [0:0] icmp_ln1144_fu_1827_p2;
wire   [0:0] icmp_ln1144_1_fu_1833_p2;
wire   [0:0] and_ln1144_fu_1839_p2;
wire   [31:0] start_index_1_fu_1845_p2;
wire  signed [31:0] j_4_fu_1851_p3;
wire   [31:0] add_ln1149_fu_1859_p2;
wire   [31:0] add_ln1149_1_fu_1864_p2;
wire   [15:0] shl_ln54_6_fu_1883_p3;
wire   [13:0] shl_ln54_7_fu_1894_p3;
wire   [16:0] zext_ln54_7_fu_1890_p1;
wire   [16:0] zext_ln54_8_fu_1901_p1;
wire   [30:0] trunc_ln1163_fu_1880_p1;
wire   [32:0] p_shl7_fu_1915_p3;
wire   [32:0] zext_ln1163_fu_1911_p1;
wire   [31:0] sub_ln1204_1_fu_1940_p2;
wire  signed [31:0] add_ln1204_fu_1945_p2;
wire  signed [32:0] sext_ln1204_3_fu_1962_p1;
wire  signed [32:0] add_ln1204_1_fu_1965_p2;
wire  signed [33:0] sext_ln1204_4_fu_1971_p1;
wire  signed [33:0] sext_ln1204_2_fu_1958_p1;
wire  signed [32:0] sext_ln1204_1_fu_1954_p1;
wire   [0:0] icmp_ln1204_1_fu_1981_p2;
wire   [33:0] sub_ln1204_fu_1975_p2;
wire   [15:0] shl_ln54_10_fu_1995_p3;
wire   [13:0] shl_ln54_11_fu_2006_p3;
wire   [16:0] zext_ln54_11_fu_2002_p1;
wire   [16:0] zext_ln54_12_fu_2013_p1;
wire   [33:0] select_ln1204_fu_1987_p3;
wire  signed [63:0] sext_ln1204_5_fu_2023_p1;
wire   [63:0] mul_ln1204_fu_2031_p0;
wire   [2:0] mul_ln1204_fu_2031_p1;
wire   [63:0] shl_ln54_17_fu_2043_p2;
wire   [63:0] shl_ln54_18_fu_2049_p2;
wire   [0:0] icmp_ln1206_fu_2078_p2;
wire   [63:0] add_ln1204_2_fu_2072_p2;
wire   [63:0] shl_ln54_21_fu_2092_p2;
wire   [63:0] shl_ln54_22_fu_2098_p2;
wire   [63:0] sub_ln54_17_fu_2104_p2;
wire   [63:0] sub_ln54_13_fu_2055_p2;
wire   [63:0] add_ln1210_fu_2066_p2;
wire   [7:0] trunc_ln1208_1_fu_2130_p1;
wire   [9:0] p_shl2_cast_fu_2134_p3;
wire   [9:0] trunc_ln1208_fu_2126_p1;
wire   [1:0] select_ln1140_2_fu_2084_p3;
wire   [9:0] sub_ln1208_1_fu_2142_p2;
wire   [9:0] zext_ln1208_fu_2156_p1;
wire   [11:0] tmp_129_fu_2166_p4;
wire   [16:0] tmp4_fu_2175_p4;
wire  signed [63:0] sext_ln54_18_fu_2185_p1;
wire   [63:0] select_ln1140_3_fu_2110_p3;
wire   [63:0] mul_ln1208_fu_2204_p0;
wire   [65:0] mul_ln1208_fu_2204_p1;
wire   [128:0] mul_ln1208_fu_2204_p2;
wire   [59:0] tmp_161_fu_2210_p4;
wire   [58:0] tmp_77_fu_2225_p4;
wire   [62:0] shl_ln1208_2_fu_2243_p3;
wire   [63:0] zext_ln1208_1_fu_2251_p1;
wire   [63:0] shl_ln1208_1_fu_2235_p3;
wire   [63:0] sub_ln1208_fu_2255_p2;
wire   [66:0] shl_ln8_fu_2270_p3;
wire   [191:0] zext_ln1208_2_fu_2277_p1;
wire   [191:0] lshr_ln1208_fu_2281_p2;
wire   [37:0] shl_ln54_15_fu_2306_p3;
wire   [35:0] shl_ln54_16_fu_2318_p3;
wire  signed [38:0] sext_ln54_11_fu_2314_p1;
wire  signed [38:0] sext_ln54_12_fu_2326_p1;
wire   [0:0] icmp_ln1194_fu_2353_p2;
wire   [30:0] add_ln1198_fu_2341_p2;
wire   [7:0] trunc_ln1196_1_fu_2379_p1;
wire   [9:0] tmp_71_cast_fu_2383_p3;
wire   [9:0] trunc_ln1196_fu_2375_p1;
wire   [32:0] add_ln1192_fu_2347_p2;
wire   [37:0] shl_ln54_26_mid1_fu_2397_p3;
wire   [35:0] shl_ln54_27_mid1_fu_2409_p3;
wire  signed [38:0] sext_ln54_19_fu_2405_p1;
wire  signed [38:0] sext_ln54_20_fu_2417_p1;
wire   [38:0] sub_ln54_16_fu_2421_p2;
wire   [38:0] sub_ln54_12_fu_2330_p2;
wire   [1:0] select_ln1192_fu_2359_p3;
wire   [9:0] sub_ln1196_1_fu_2391_p2;
wire   [9:0] zext_ln1196_fu_2443_p1;
wire   [11:0] tmp_128_fu_2453_p4;
wire   [16:0] tmp3_fu_2462_p4;
wire  signed [38:0] sext_ln54_17_fu_2472_p1;
wire   [38:0] select_ln1192_2_fu_2427_p3;
wire  signed [63:0] sext_ln1196_fu_2488_p1;
wire   [63:0] mul_ln1196_fu_2495_p0;
wire   [65:0] mul_ln1196_fu_2495_p1;
wire   [128:0] mul_ln1196_fu_2495_p2;
wire   [59:0] tmp_160_fu_2501_p4;
wire   [58:0] tmp_72_fu_2516_p4;
wire   [62:0] shl_ln1196_2_fu_2534_p3;
wire   [63:0] zext_ln1196_1_fu_2542_p1;
wire   [63:0] shl_ln1196_1_fu_2526_p3;
wire   [63:0] sub_ln1196_fu_2546_p2;
wire   [66:0] shl_ln7_fu_2562_p3;
wire   [191:0] zext_ln1196_3_fu_2569_p1;
wire   [191:0] lshr_ln1196_fu_2573_p2;
wire   [37:0] shl_ln54_13_fu_2590_p3;
wire   [35:0] shl_ln54_14_fu_2602_p3;
wire  signed [38:0] sext_ln54_9_fu_2598_p1;
wire  signed [38:0] sext_ln54_10_fu_2610_p1;
wire   [0:0] icmp_ln1165_fu_2637_p2;
wire   [30:0] add_ln1169_fu_2625_p2;
wire   [7:0] trunc_ln1167_1_fu_2663_p1;
wire   [9:0] tmp_68_cast_fu_2667_p3;
wire   [9:0] trunc_ln1167_fu_2659_p1;
wire   [32:0] add_ln1163_fu_2631_p2;
wire   [37:0] shl_ln54_24_mid1_fu_2681_p3;
wire   [35:0] shl_ln54_25_mid1_fu_2693_p3;
wire  signed [38:0] sext_ln54_14_fu_2689_p1;
wire  signed [38:0] sext_ln54_15_fu_2701_p1;
wire   [38:0] sub_ln54_15_fu_2705_p2;
wire   [38:0] sub_ln54_11_fu_2614_p2;
wire   [1:0] select_ln1163_fu_2643_p3;
wire   [9:0] sub_ln1167_1_fu_2675_p2;
wire   [9:0] zext_ln1167_fu_2727_p1;
wire   [11:0] tmp_127_fu_2737_p4;
wire   [16:0] tmp2_fu_2746_p4;
wire  signed [38:0] sext_ln54_16_fu_2756_p1;
wire   [38:0] select_ln1163_2_fu_2711_p3;
wire  signed [63:0] sext_ln1167_fu_2772_p1;
wire   [63:0] mul_ln1167_fu_2779_p0;
wire   [65:0] mul_ln1167_fu_2779_p1;
wire   [128:0] mul_ln1167_fu_2779_p2;
wire   [59:0] tmp_159_fu_2785_p4;
wire   [58:0] tmp_69_fu_2800_p4;
wire   [62:0] shl_ln1167_2_fu_2818_p3;
wire   [63:0] zext_ln1167_1_fu_2826_p1;
wire   [63:0] shl_ln1167_1_fu_2810_p3;
wire   [63:0] sub_ln1167_fu_2830_p2;
wire   [66:0] shl_ln6_fu_2846_p3;
wire   [191:0] zext_ln1167_3_fu_2853_p1;
wire   [191:0] lshr_ln1167_fu_2857_p2;
wire  signed [32:0] sext_ln1151_3_fu_2877_p1;
wire  signed [32:0] add_ln1151_fu_2881_p2;
wire  signed [33:0] sext_ln1151_4_fu_2887_p1;
wire  signed [33:0] sext_ln1151_2_fu_2874_p1;
wire  signed [32:0] sext_ln1151_1_fu_2871_p1;
wire   [0:0] icmp_ln1151_1_fu_2897_p2;
wire   [33:0] sub_ln1151_fu_2891_p2;
wire   [15:0] shl_ln54_4_fu_2911_p3;
wire   [13:0] shl_ln54_5_fu_2922_p3;
wire   [16:0] zext_ln54_5_fu_2918_p1;
wire   [16:0] zext_ln54_6_fu_2929_p1;
wire   [33:0] select_ln1151_fu_2903_p3;
wire  signed [63:0] sext_ln1151_5_fu_2939_p1;
wire   [63:0] mul_ln1151_fu_2947_p0;
wire   [2:0] mul_ln1151_fu_2947_p1;
wire   [63:0] shl_ln54_fu_2959_p2;
wire   [63:0] shl_ln54_12_fu_2965_p2;
wire   [0:0] icmp_ln1153_fu_2994_p2;
wire   [63:0] add_ln1151_1_fu_2988_p2;
wire   [63:0] shl_ln54_19_fu_3008_p2;
wire   [63:0] shl_ln54_20_fu_3014_p2;
wire   [63:0] sub_ln54_14_fu_3020_p2;
wire   [63:0] sub_ln54_10_fu_2971_p2;
wire   [63:0] add_ln1157_fu_2982_p2;
wire   [7:0] trunc_ln1155_1_fu_3046_p1;
wire   [9:0] p_shl_cast_fu_3050_p3;
wire   [9:0] trunc_ln1155_fu_3042_p1;
wire   [1:0] select_ln1140_fu_3000_p3;
wire   [9:0] sub_ln1155_1_fu_3058_p2;
wire   [9:0] zext_ln1155_fu_3072_p1;
wire   [11:0] tmp_126_fu_3082_p4;
wire   [16:0] tmp1_fu_3091_p4;
wire  signed [63:0] sext_ln54_13_fu_3101_p1;
wire   [63:0] select_ln1140_1_fu_3026_p3;
wire   [63:0] mul_ln1155_fu_3120_p0;
wire   [65:0] mul_ln1155_fu_3120_p1;
wire   [128:0] mul_ln1155_fu_3120_p2;
wire   [59:0] tmp_158_fu_3126_p4;
wire   [58:0] tmp_66_fu_3141_p4;
wire   [62:0] shl_ln1155_2_fu_3159_p3;
wire   [63:0] zext_ln1155_1_fu_3167_p1;
wire   [63:0] shl_ln1155_1_fu_3151_p3;
wire   [63:0] sub_ln1155_fu_3171_p2;
wire   [66:0] shl_ln5_fu_3186_p3;
wire   [191:0] zext_ln1155_2_fu_3193_p1;
wire   [191:0] lshr_ln1155_fu_3197_p2;
wire   [0:0] icmp_ln11_fu_3226_p2;
wire   [4:0] add_ln9_fu_3220_p2;
wire   [6:0] tmp_79_fu_3252_p3;
wire   [7:0] zext_ln13_1_fu_3260_p1;
wire   [7:0] zext_ln13_fu_3248_p1;
wire   [7:0] sub_ln13_fu_3264_p2;
wire   [1:0] select_ln9_fu_3232_p3;
wire  signed [8:0] sub_ln13_cast_fu_3270_p1;
wire   [8:0] zext_ln13_2_fu_3274_p1;
wire   [8:0] add_ln13_fu_3278_p2;
wire    ap_CS_fsm_state51;
wire    ap_block_pp1_stage0_00001;
reg   [34:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
wire   [128:0] mul_ln1117_fu_1004_p00;
wire   [65:0] mul_ln1151_fu_2947_p00;
wire   [128:0] mul_ln1155_fu_3120_p00;
wire   [128:0] mul_ln1167_fu_2779_p00;
wire   [128:0] mul_ln1196_fu_2495_p00;
wire   [65:0] mul_ln1204_fu_2031_p00;
wire   [128:0] mul_ln1208_fu_2204_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 35'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
end

makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine_radii #(
    .DataWidth( 25 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
radii_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(radii_address0),
    .ce0(radii_ce0),
    .q0(radii_q0)
);

makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine_trapezoid_edges #(
    .DataWidth( 26 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
trapezoid_edges_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(trapezoid_edges_address0),
    .ce0(trapezoid_edges_ce0),
    .q0(trapezoid_edges_q0)
);

makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine_row_list #(
    .DataWidth( 64 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
row_list_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(row_list_address0),
    .ce0(row_list_ce0),
    .we0(row_list_we0),
    .d0(row_list_d0),
    .q0(row_list_q0)
);

makePatches_ShadowQuilt_fromEdges_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_reg_3450),
    .din1(conv6_reg_3440),
    .ce(1'b1),
    .dout(grp_fu_855_p2)
);

makePatches_ShadowQuilt_fromEdges_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv9_reg_3430),
    .din1(div_reg_3445),
    .ce(1'b1),
    .dout(grp_fu_859_p2)
);

makePatches_ShadowQuilt_fromEdges_fdiv_32ns_32ns_32_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_6_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_reg_3435),
    .din1(32'd1268291200),
    .ce(1'b1),
    .dout(grp_fu_863_p2)
);

makePatches_ShadowQuilt_fromEdges_sitofp_64ns_32_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
sitofp_64ns_32_2_no_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_868_p0),
    .ce(1'b1),
    .dout(grp_fu_868_p1)
);

makePatches_ShadowQuilt_fromEdges_sitofp_64ns_32_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
sitofp_64ns_32_2_no_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_871_p0),
    .ce(1'b1),
    .dout(grp_fu_871_p1)
);

makePatches_ShadowQuilt_fromEdges_sitofp_64ns_32_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
sitofp_64ns_32_2_no_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(apexZ0),
    .ce(1'b1),
    .dout(grp_fu_874_p1)
);

makePatches_ShadowQuilt_fromEdges_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_877_p0),
    .din1(grp_fu_877_p1),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_877_p2)
);

makePatches_ShadowQuilt_fromEdges_sitodp_64ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sitodp_64ns_64_2_no_dsp_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_881_p0),
    .ce(1'b1),
    .dout(grp_fu_881_p1)
);

makePatches_ShadowQuilt_fromEdges_sitodp_64ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sitodp_64ns_64_2_no_dsp_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_885_p0),
    .ce(1'b1),
    .dout(grp_fu_885_p1)
);

makePatches_ShadowQuilt_fromEdges_mul_64ns_66ns_129_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 129 ))
mul_64ns_66ns_129_1_1_U10(
    .din0(mul_ln1117_fu_1004_p0),
    .din1(mul_ln1117_fu_1004_p1),
    .dout(mul_ln1117_fu_1004_p2)
);

makePatches_ShadowQuilt_fromEdges_mul_64ns_3ns_66_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 66 ))
mul_64ns_3ns_66_1_1_U11(
    .din0(mul_ln1204_fu_2031_p0),
    .din1(mul_ln1204_fu_2031_p1),
    .dout(mul_ln1204_fu_2031_p2)
);

makePatches_ShadowQuilt_fromEdges_mul_64ns_66ns_129_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 129 ))
mul_64ns_66ns_129_1_1_U12(
    .din0(mul_ln1208_fu_2204_p0),
    .din1(mul_ln1208_fu_2204_p1),
    .dout(mul_ln1208_fu_2204_p2)
);

makePatches_ShadowQuilt_fromEdges_mul_64ns_66ns_129_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 129 ))
mul_64ns_66ns_129_1_1_U13(
    .din0(mul_ln1196_fu_2495_p0),
    .din1(mul_ln1196_fu_2495_p1),
    .dout(mul_ln1196_fu_2495_p2)
);

makePatches_ShadowQuilt_fromEdges_mul_64ns_66ns_129_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 129 ))
mul_64ns_66ns_129_1_1_U14(
    .din0(mul_ln1167_fu_2779_p0),
    .din1(mul_ln1167_fu_2779_p1),
    .dout(mul_ln1167_fu_2779_p2)
);

makePatches_ShadowQuilt_fromEdges_mul_64ns_3ns_66_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 66 ))
mul_64ns_3ns_66_1_1_U15(
    .din0(mul_ln1151_fu_2947_p0),
    .din1(mul_ln1151_fu_2947_p1),
    .dout(mul_ln1151_fu_2947_p2)
);

makePatches_ShadowQuilt_fromEdges_mul_64ns_66ns_129_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 129 ))
mul_64ns_66ns_129_1_1_U16(
    .din0(mul_ln1155_fu_3120_p0),
    .din1(mul_ln1155_fu_3120_p1),
    .dout(mul_ln1155_fu_3120_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln1115_fu_899_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((icmp_ln1115_fu_899_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state20) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state19)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp1_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_subdone)) | ((1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2_subdone)))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state19)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state27) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state26)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state27)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state27);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end else if ((1'b1 == ap_CS_fsm_state26)) begin
            ap_enable_reg_pp2_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp3_exit_iter0_state33) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state32)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state33)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state33);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if ((1'b1 == ap_CS_fsm_state32)) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp4_exit_iter0_state37) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if (((grp_fu_888_p2 == 1'd1) & (icmp_ln1190_fu_1762_p2 == 1'd1) & (leftRight_offset_read_read_fu_278_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp4_exit_iter0_state37)) begin
                ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state37);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end else if (((grp_fu_888_p2 == 1'd1) & (icmp_ln1190_fu_1762_p2 == 1'd1) & (leftRight_offset_read_read_fu_278_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
            ap_enable_reg_pp4_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp5_exit_iter0_state41) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if (((icmp_ln1149_fu_1870_p2 == 1'd0) & (grp_fu_888_p2 == 1'd1) & (leftRight_offset_read_read_fu_278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter0_state41)) begin
                ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state41);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end else if (((icmp_ln1149_fu_1870_p2 == 1'd0) & (grp_fu_888_p2 == 1'd1) & (leftRight_offset_read_read_fu_278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
            ap_enable_reg_pp5_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp6_exit_iter0_state46) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state45)) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp6_exit_iter0_state46)) begin
                ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state46);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end else if ((1'b1 == ap_CS_fsm_state45)) begin
            ap_enable_reg_pp6_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp7_exit_iter0_state49) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state36)) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp7_exit_iter0_state49) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
            ap_enable_reg_pp7_iter1 <= (1'b1 ^ ap_condition_pp7_exit_iter0_state49);
        end else if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
        end else if ((1'b1 == ap_CS_fsm_state36)) begin
            ap_enable_reg_pp7_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b1) & (icmp_ln9_reg_3902 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        i_10_reg_833 <= select_ln9_1_reg_3906;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        i_10_reg_833 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1192_1_fu_2336_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        indvar_flatten15_reg_696 <= add_ln1192_1_fu_2300_p2;
    end else if (((grp_fu_888_p2 == 1'd1) & (icmp_ln1190_fu_1762_p2 == 1'd1) & (leftRight_offset_read_read_fu_278_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        indvar_flatten15_reg_696 <= 33'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1204_2_fu_2061_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        indvar_flatten23_reg_654 <= add_ln1204_3_fu_2037_p2;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        indvar_flatten23_reg_654 <= 66'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_3214_p2 == 1'd0) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        indvar_flatten31_reg_822 <= add_ln9_1_fu_3208_p2;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        indvar_flatten31_reg_822 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1163_1_fu_2620_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        indvar_flatten7_reg_738 <= add_ln1163_1_fu_2584_p2;
    end else if (((icmp_ln1149_fu_1870_p2 == 1'd0) & (grp_fu_888_p2 == 1'd1) & (leftRight_offset_read_read_fu_278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        indvar_flatten7_reg_738 <= 33'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1151_2_fu_2977_p2 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        indvar_flatten_reg_780 <= add_ln1151_2_fu_2953_p2;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        indvar_flatten_reg_780 <= 66'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1245_reg_3470 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        j_1_reg_570 <= add_ln1245_reg_3465;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        j_1_reg_570 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln1224_reg_3552 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        j_2_reg_618 <= add_ln1224_reg_3547;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        j_2_reg_618 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1151_2_fu_2977_p2 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        j_5_reg_802 <= select_ln1151_2_fu_3064_p3;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        j_5_reg_802 <= sext_ln1151_fu_2868_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1163_1_fu_2620_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        j_6_reg_760 <= select_ln1163_3_fu_2719_p3;
    end else if (((icmp_ln1149_fu_1870_p2 == 1'd0) & (grp_fu_888_p2 == 1'd1) & (leftRight_offset_read_read_fu_278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        j_6_reg_760 <= sext_ln1163_fu_1876_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1192_1_fu_2336_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        j_7_reg_718 <= select_ln1192_3_fu_2435_p3;
    end else if (((grp_fu_888_p2 == 1'd1) & (icmp_ln1190_fu_1762_p2 == 1'd1) & (leftRight_offset_read_read_fu_278_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        j_7_reg_718 <= sext_ln1192_fu_1774_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1204_2_fu_2061_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        j_8_reg_676 <= select_ln1204_2_fu_2148_p3;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        j_8_reg_676 <= sext_ln1204_fu_1950_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln1224_reg_3552_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        j_9_reg_594 <= select_ln1226_fu_1578_p3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        j_9_reg_594 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln1224_reg_3552_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        lbVal_reg_642 <= lbVal_2_fu_1586_p3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        lbVal_reg_642 <= 64'd9223372036854775807;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1245_reg_3470_pp1_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        p_x_assign_7_reg_582 <= select_ln1247_2_fu_1399_p3;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        p_x_assign_7_reg_582 <= 64'd9223372036854775807;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln1224_reg_3552_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        rbVal_reg_630 <= p_Result_11_fu_1705_p3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        rbVal_reg_630 <= 64'd9223372036854775807;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln1224_reg_3552_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        right_bound_reg_606 <= select_ln1232_fu_1697_p3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        right_bound_reg_606 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1115_reg_3382 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        row_list_size_assign_reg_534 <= GDn_points_load_reg_3377;
    end else if (((icmp_ln1115_fu_899_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        row_list_size_assign_reg_534 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1115_fu_899_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        row_list_size_reg_522 <= 31'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1115_1_reg_3401 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        row_list_size_reg_522 <= add_ln1117_1_reg_3396;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1245_reg_3470_pp1_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        start_index_reg_546 <= select_ln1247_fu_1384_p3;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        start_index_reg_546 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1245_reg_3470_pp1_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        start_value_reg_558 <= select_ln1247_1_fu_1392_p3;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        start_value_reg_558 <= 64'd9223372036854775807;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln1163_1_reg_3798 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        temp_size_1_reg_749 <= select_ln1163_1_reg_3802;
    end else if (((icmp_ln1149_fu_1870_p2 == 1'd0) & (grp_fu_888_p2 == 1'd1) & (leftRight_offset_read_read_fu_278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        temp_size_1_reg_749 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln1192_1_reg_3754 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        temp_size_2_reg_707 <= select_ln1192_1_reg_3758;
    end else if (((grp_fu_888_p2 == 1'd1) & (icmp_ln1190_fu_1762_p2 == 1'd1) & (leftRight_offset_read_read_fu_278_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        temp_size_2_reg_707 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln1204_2_reg_3700 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        temp_size_3_reg_665 <= select_ln1204_1_reg_3704;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        temp_size_3_reg_665 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b1) & (icmp_ln1151_2_reg_3857 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        temp_size_reg_791 <= select_ln1151_1_reg_3861;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        temp_size_reg_791 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1151_2_fu_2977_p2 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        z_1_reg_811 <= add_ln1153_fu_3111_p2;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        z_1_reg_811 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1163_1_fu_2620_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        z_2_reg_769 <= add_ln1165_fu_2766_p2;
    end else if (((icmp_ln1149_fu_1870_p2 == 1'd0) & (grp_fu_888_p2 == 1'd1) & (leftRight_offset_read_read_fu_278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        z_2_reg_769 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1192_1_fu_2336_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        z_3_reg_727 <= add_ln1194_fu_2482_p2;
    end else if (((grp_fu_888_p2 == 1'd1) & (icmp_ln1190_fu_1762_p2 == 1'd1) & (leftRight_offset_read_read_fu_278_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        z_3_reg_727 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1204_2_fu_2061_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        z_4_reg_685 <= add_ln1206_fu_2195_p2;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        z_4_reg_685 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_3214_p2 == 1'd0) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        z_reg_844 <= add_ln11_fu_3294_p2;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        z_reg_844 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        GDn_points_load_reg_3377 <= GDn_points_q0;
        icmp_ln1115_reg_3382 <= icmp_ln1115_fu_899_p2;
        y_reg_3372 <= radii_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln1117_1_reg_3396 <= add_ln1117_1_fu_947_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1115_1_reg_3401 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln1117_reg_3415[63 : 3] <= add_ln1117_fu_1061_p2[63 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1151_2_fu_2977_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        add_ln1155_1_reg_3871 <= add_ln1155_1_fu_3076_p2;
        add_ln54_4_reg_3876[63 : 3] <= add_ln54_4_fu_3105_p2[63 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        add_ln1155_1_reg_3871_pp6_iter1_reg <= add_ln1155_1_reg_3871;
        icmp_ln1151_2_reg_3857 <= icmp_ln1151_2_fu_2977_p2;
        icmp_ln1151_2_reg_3857_pp6_iter1_reg <= icmp_ln1151_2_reg_3857;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1151_2_reg_3857 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        add_ln1155_reg_3892[63 : 3] <= add_ln1155_fu_3177_p2[63 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1163_1_fu_2620_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        add_ln1167_1_reg_3812 <= add_ln1167_1_fu_2731_p2;
        add_ln54_5_reg_3817[38 : 3] <= add_ln54_5_fu_2760_p2[38 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        add_ln1167_1_reg_3812_pp5_iter1_reg <= add_ln1167_1_reg_3812;
        icmp_ln1163_1_reg_3798 <= icmp_ln1163_1_fu_2620_p2;
        icmp_ln1163_1_reg_3798_pp5_iter1_reg <= icmp_ln1163_1_reg_3798;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1163_1_reg_3798 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        add_ln1167_reg_3832[63 : 3] <= add_ln1167_fu_2836_p2[63 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1192_1_fu_2336_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        add_ln1196_1_reg_3768 <= add_ln1196_1_fu_2447_p2;
        add_ln54_6_reg_3773[38 : 3] <= add_ln54_6_fu_2476_p2[38 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        add_ln1196_1_reg_3768_pp4_iter1_reg <= add_ln1196_1_reg_3768;
        icmp_ln1192_1_reg_3754 <= icmp_ln1192_1_fu_2336_p2;
        icmp_ln1192_1_reg_3754_pp4_iter1_reg <= icmp_ln1192_1_reg_3754;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1192_1_reg_3754 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        add_ln1196_reg_3788[63 : 3] <= add_ln1196_fu_2552_p2[63 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1204_2_fu_2061_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        add_ln1208_1_reg_3714 <= add_ln1208_1_fu_2160_p2;
        add_ln54_7_reg_3719[63 : 3] <= add_ln54_7_fu_2189_p2[63 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        add_ln1208_1_reg_3714_pp3_iter1_reg <= add_ln1208_1_reg_3714;
        icmp_ln1204_2_reg_3700 <= icmp_ln1204_2_fu_2061_p2;
        icmp_ln1204_2_reg_3700_pp3_iter1_reg <= icmp_ln1204_2_reg_3700;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1204_2_reg_3700 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        add_ln1208_reg_3735[63 : 3] <= add_ln1208_fu_2261_p2[63 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        add_ln1215_reg_3740 <= add_ln1215_fu_2292_p2;
        trunc_ln13_reg_3745 <= trunc_ln13_fu_2297_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        add_ln1224_reg_3547 <= add_ln1224_fu_1410_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        add_ln1245_reg_3465 <= add_ln1245_fu_1248_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1115_1_fu_953_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln54_reg_3405[37 : 3] <= add_ln54_fu_992_p2[37 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        conv6_reg_3440 <= grp_fu_874_p1;
        conv9_reg_3430 <= grp_fu_868_p1;
        conv_reg_3435 <= grp_fu_871_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1245_reg_3470 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2_11001))) begin
        dc_9_reg_3486 <= grp_fu_881_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        dc_reg_3455 <= grp_fu_855_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        div_reg_3445 <= grp_fu_863_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln1115_1_reg_3401 <= icmp_ln1115_1_fu_953_p2;
        icmp_ln1115_1_reg_3401_pp0_iter1_reg <= icmp_ln1115_1_reg_3401;
        row_list_size_reg_522_pp0_iter1_reg <= row_list_size_reg_522;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln1224_reg_3552 <= icmp_ln1224_fu_1416_p2;
        icmp_ln1224_reg_3552_pp2_iter1_reg <= icmp_ln1224_reg_3552;
        j_2_reg_618_pp2_iter1_reg <= j_2_reg_618;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        icmp_ln1224_reg_3552_pp2_iter2_reg <= icmp_ln1224_reg_3552_pp2_iter1_reg;
        j_2_reg_618_pp2_iter2_reg <= j_2_reg_618_pp2_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln1245_reg_3470 <= icmp_ln1245_fu_1254_p2;
        icmp_ln1245_reg_3470_pp1_iter1_reg <= icmp_ln1245_reg_3470;
        j_1_reg_570_pp1_iter1_reg <= j_1_reg_570;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1245_reg_3470 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln1247_1_reg_3506 <= icmp_ln1247_1_fu_1346_p2;
        icmp_ln1247_2_reg_3511 <= icmp_ln1247_2_fu_1352_p2;
        icmp_ln1247_3_reg_3516 <= icmp_ln1247_3_fu_1358_p2;
        icmp_ln1247_reg_3501 <= icmp_ln1247_fu_1340_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        icmp_ln9_reg_3902 <= icmp_ln9_fu_3214_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_3214_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        init_patch1_addr_reg_3921 <= sext_ln13_fu_3284_p1;
        init_patch2_addr_reg_3926 <= sext_ln13_fu_3284_p1;
        init_patch3_addr_reg_3931 <= sext_ln13_fu_3284_p1;
        init_patch4_addr_reg_3936 <= sext_ln13_fu_3284_p1;
        init_patch_addr_reg_3916 <= sext_ln13_fu_3284_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1149_fu_1870_p2 == 1'd1) & (leftRight_offset_read_read_fu_278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        j_3_reg_3669 <= j_3_fu_1929_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        mul_ln1151_reg_3847 <= mul_ln1151_fu_2947_p2;
        sub_ln54_6_reg_3842[16 : 11] <= sub_ln54_6_fu_2933_p2[16 : 11];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        mul_ln1204_reg_3690 <= mul_ln1204_fu_2031_p2;
        sub_ln54_9_reg_3685[16 : 11] <= sub_ln54_9_fu_2017_p2[16 : 11];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        mul_reg_3450 <= grp_fu_859_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        result_V_reg_3460 <= result_V_fu_1240_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1151_2_fu_2977_p2 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        select_ln1151_1_reg_3861 <= select_ln1151_1_fu_3034_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1163_1_fu_2620_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        select_ln1163_1_reg_3802 <= select_ln1163_1_fu_2651_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((leftRight_offset_read_read_fu_278_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        select_ln1175_reg_3613 <= select_ln1175_fu_1743_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1192_1_fu_2336_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        select_ln1192_1_reg_3758 <= select_ln1192_1_fu_2367_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1204_2_fu_2061_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        select_ln1204_1_reg_3704 <= select_ln1204_1_fu_2118_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_3214_p2 == 1'd0) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        select_ln9_1_reg_3906 <= select_ln9_1_fu_3240_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1115_fu_899_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        sext_ln1115_reg_3391[37 : 11] <= sext_ln1115_fu_943_p1[37 : 11];
        trunc_ln54_reg_3386 <= trunc_ln54_fu_905_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1149_fu_1870_p2 == 1'd0) & (grp_fu_888_p2 == 1'd1) & (leftRight_offset_read_read_fu_278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        sub_ln1163_reg_3664 <= sub_ln1163_fu_1923_p2;
        sub_ln54_7_reg_3659[16 : 11] <= sub_ln54_7_fu_1905_p2[16 : 11];
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_888_p2 == 1'd1) & (icmp_ln1190_fu_1762_p2 == 1'd1) & (leftRight_offset_read_read_fu_278_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        sub_ln1192_reg_3641 <= sub_ln1192_fu_1821_p2;
        sub_ln54_8_reg_3636[16 : 11] <= sub_ln54_8_fu_1803_p2[16 : 11];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1245_reg_3470 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        sub_ln1247_reg_3479 <= sub_ln1247_fu_1265_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1224_reg_3552_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        tmp_164_reg_3571 <= {{data_V_12_fu_1439_p1[62:52]}};
        tmp_165_reg_3577 <= tmp_165_fu_1453_p1;
        tmp_166_reg_3582 <= {{data_V_13_fu_1457_p1[62:52]}};
        tmp_167_reg_3588 <= tmp_167_fu_1471_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        zext_ln1111_reg_3324[2 : 0] <= zext_ln1111_fu_893_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        zext_ln1224_reg_3541[25 : 0] <= zext_ln1224_fu_1406_p1[25 : 0];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0))) begin
        GDarray_address0 = zext_ln1155_5_fu_3136_p1;
    end else if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        GDarray_address0 = zext_ln1167_5_fu_2795_p1;
    end else if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        GDarray_address0 = zext_ln1196_5_fu_2511_p1;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        GDarray_address0 = zext_ln1208_5_fu_2220_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        GDarray_address0 = zext_ln1117_3_fu_1020_p1;
    end else begin
        GDarray_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001)) | ((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)) | ((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        GDarray_ce0 = 1'b1;
    end else begin
        GDarray_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        GDn_points_ce0 = 1'b1;
    end else begin
        GDn_points_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1115_1_fu_953_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1245_fu_1254_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state20 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state20 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1224_fu_1416_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state27 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state27 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1204_2_fu_2061_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state33 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state33 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1192_1_fu_2336_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state37 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state37 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1163_1_fu_2620_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state41 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state41 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1151_2_fu_2977_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state46 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state46 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln9_fu_3214_p2 == 1'd1)) begin
        ap_condition_pp7_exit_iter0_state49 = 1'b1;
    end else begin
        ap_condition_pp7_exit_iter0_state49 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state51) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter2 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b1) & (icmp_ln9_reg_3902 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0))) begin
        ap_phi_mux_i_10_phi_fu_837_p4 = select_ln9_1_reg_3906;
    end else begin
        ap_phi_mux_i_10_phi_fu_837_p4 = i_10_reg_833;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln1245_reg_3470 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_j_1_phi_fu_574_p4 = add_ln1245_reg_3465;
    end else begin
        ap_phi_mux_j_1_phi_fu_574_p4 = j_1_reg_570;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln1224_reg_3552 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_j_2_phi_fu_622_p4 = add_ln1224_reg_3547;
    end else begin
        ap_phi_mux_j_2_phi_fu_622_p4 = j_2_reg_618;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1115_1_reg_3401 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_row_list_size_phi_fu_526_p4 = add_ln1117_1_reg_3396;
    end else begin
        ap_phi_mux_row_list_size_phi_fu_526_p4 = row_list_size_reg_522;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln1163_1_reg_3798 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        ap_phi_mux_temp_size_1_phi_fu_753_p4 = select_ln1163_1_reg_3802;
    end else begin
        ap_phi_mux_temp_size_1_phi_fu_753_p4 = temp_size_1_reg_749;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln1192_1_reg_3754 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        ap_phi_mux_temp_size_2_phi_fu_711_p4 = select_ln1192_1_reg_3758;
    end else begin
        ap_phi_mux_temp_size_2_phi_fu_711_p4 = temp_size_2_reg_707;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln1204_2_reg_3700 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_temp_size_3_phi_fu_669_p4 = select_ln1204_1_reg_3704;
    end else begin
        ap_phi_mux_temp_size_3_phi_fu_669_p4 = temp_size_3_reg_665;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b1) & (icmp_ln1151_2_reg_3857 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0))) begin
        ap_phi_mux_temp_size_phi_fu_795_p4 = select_ln1151_1_reg_3861;
    end else begin
        ap_phi_mux_temp_size_phi_fu_795_p4 = temp_size_reg_791;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_fu_881_p0 = add_ln1226_fu_1427_p2;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2))) begin
        grp_fu_881_p0 = p_x_assign_7_reg_582;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
        grp_fu_881_p0 = sub_ln1247_fu_1265_p2;
    end else begin
        grp_fu_881_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        init_patch1_ce0 = 1'b1;
    end else begin
        init_patch1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b1) & (trunc_ln13_reg_3745 == 3'd1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        init_patch1_we0 = 1'b1;
    end else begin
        init_patch1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        init_patch2_ce0 = 1'b1;
    end else begin
        init_patch2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b1) & (trunc_ln13_reg_3745 == 3'd2) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        init_patch2_we0 = 1'b1;
    end else begin
        init_patch2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        init_patch3_ce0 = 1'b1;
    end else begin
        init_patch3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b1) & (trunc_ln13_reg_3745 == 3'd3) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        init_patch3_we0 = 1'b1;
    end else begin
        init_patch3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        init_patch4_ce0 = 1'b1;
    end else begin
        init_patch4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln13_reg_3745 == 3'd0) & ~(trunc_ln13_reg_3745 == 3'd1) & ~(trunc_ln13_reg_3745 == 3'd2) & ~(trunc_ln13_reg_3745 == 3'd3) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        init_patch4_we0 = 1'b1;
    end else begin
        init_patch4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        init_patch_ce0 = 1'b1;
    end else begin
        init_patch_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b1) & (trunc_ln13_reg_3745 == 3'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        init_patch_we0 = 1'b1;
    end else begin
        init_patch_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        radii_ce0 = 1'b1;
    end else begin
        radii_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        row_list_address0 = trunc_ln1228_cast_fu_1422_p1;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        row_list_address0 = trunc_ln1249_cast_fu_1260_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        row_list_address0 = row_list_size_cast9_fu_1067_p1;
    end else begin
        row_list_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        row_list_ce0 = 1'b1;
    end else begin
        row_list_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1115_1_reg_3401_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        row_list_we0 = 1'b1;
    end else begin
        row_list_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0))) begin
        temp_address0 = sext_ln13_fu_3284_p1;
    end else if (((ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        temp_address0 = zext_ln1155_3_fu_3182_p1;
    end else if (((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        temp_address0 = zext_ln1167_2_fu_2842_p1;
    end else if (((ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        temp_address0 = zext_ln1196_2_fu_2558_p1;
    end else if (((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        temp_address0 = zext_ln1208_3_fu_2266_p1;
    end else begin
        temp_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001)) | ((ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)) | ((ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001)) | ((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        temp_ce0 = 1'b1;
    end else begin
        temp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        temp_d0 = trunc_ln1155_2_fu_3203_p1;
    end else if (((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        temp_d0 = trunc_ln1167_2_fu_2863_p1;
    end else if (((ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        temp_d0 = trunc_ln1196_2_fu_2579_p1;
    end else if (((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        temp_d0 = trunc_ln1208_2_fu_2287_p1;
    end else begin
        temp_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter2 == 1'b1) & (icmp_ln1151_2_reg_3857_pp6_iter1_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001)) | ((ap_enable_reg_pp5_iter2 == 1'b1) & (icmp_ln1163_1_reg_3798_pp5_iter1_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001)) | ((ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln1192_1_reg_3754_pp4_iter1_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001)) | ((ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln1204_2_reg_3700_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        temp_we0 = 1'b1;
    end else begin
        temp_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        trapezoid_edges_ce0 = 1'b1;
    end else begin
        trapezoid_edges_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln1115_fu_899_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln1115_1_fu_953_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln1115_1_fu_953_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln1245_fu_1254_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln1245_fu_1254_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_subdone)) & (1'b0 == ap_block_pp1_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((1'b0 == ap_block_pp1_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln1224_fu_1416_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) & ~((ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) | ((ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln1224_fu_1416_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state31 : begin
            if (((icmp_ln1151_fu_1934_p2 == 1'd0) & (icmp_ln1149_fu_1870_p2 == 1'd1) & (leftRight_offset_read_read_fu_278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else if (((icmp_ln1149_fu_1870_p2 == 1'd0) & (grp_fu_888_p2 == 1'd1) & (leftRight_offset_read_read_fu_278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if (((grp_fu_888_p2 == 1'd1) & (icmp_ln1190_fu_1762_p2 == 1'd1) & (leftRight_offset_read_read_fu_278_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((1'b1 == ap_CS_fsm_state31) & (((((icmp_ln1149_fu_1870_p2 == 1'd0) & (grp_fu_888_p2 == 1'd0) & (leftRight_offset_read_read_fu_278_p2 == 1'd1)) | ((icmp_ln1151_fu_1934_p2 == 1'd1) & (icmp_ln1149_fu_1870_p2 == 1'd1) & (leftRight_offset_read_read_fu_278_p2 == 1'd1))) | ((grp_fu_888_p2 == 1'd0) & (icmp_ln1190_fu_1762_p2 == 1'd1) & (leftRight_offset_read_read_fu_278_p2 == 1'd0))) | ((icmp_ln1204_fu_1768_p2 == 1'd1) & (icmp_ln1190_fu_1762_p2 == 1'd0) & (leftRight_offset_read_read_fu_278_p2 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (icmp_ln1204_2_fu_2061_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)) & ~((ap_enable_reg_pp3_iter2 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter1 == 1'b0) & (icmp_ln1204_2_fu_2061_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)) | ((ap_enable_reg_pp3_iter2 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_pp7_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((ap_enable_reg_pp4_iter1 == 1'b0) & (icmp_ln1192_1_fu_2336_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone)) & ~((ap_enable_reg_pp4_iter2 == 1'b1) & (ap_enable_reg_pp4_iter1 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if ((((ap_enable_reg_pp4_iter1 == 1'b0) & (icmp_ln1192_1_fu_2336_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone)) | ((ap_enable_reg_pp4_iter2 == 1'b1) & (ap_enable_reg_pp4_iter1 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((ap_enable_reg_pp5_iter1 == 1'b0) & (icmp_ln1163_1_fu_2620_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)) & ~((ap_enable_reg_pp5_iter2 == 1'b1) & (ap_enable_reg_pp5_iter1 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((ap_enable_reg_pp5_iter1 == 1'b0) & (icmp_ln1163_1_fu_2620_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)) | ((ap_enable_reg_pp5_iter2 == 1'b1) & (ap_enable_reg_pp5_iter1 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_pp6_stage0;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((ap_enable_reg_pp6_iter1 == 1'b0) & (icmp_ln1151_2_fu_2977_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)) & ~((ap_enable_reg_pp6_iter2 == 1'b1) & (ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((ap_enable_reg_pp6_iter1 == 1'b0) & (icmp_ln1151_2_fu_2977_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)) | ((ap_enable_reg_pp6_iter2 == 1'b1) & (ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_pp7_stage0 : begin
            if (~((icmp_ln9_fu_3214_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if (((icmp_ln9_fu_3214_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign GDn_points_address0 = zext_ln1111_fu_893_p1;

assign add_ln1117_1_fu_947_p2 = (ap_phi_mux_row_list_size_phi_fu_526_p4 + 31'd1);

assign add_ln1117_fu_1061_p2 = ($signed(sub_ln1117_fu_1055_p2) + $signed(sext_ln1117_fu_997_p1));

assign add_ln1121_fu_1099_p2 = ($signed(y_reg_3372) + $signed(25'd28554432));

assign add_ln1149_1_fu_1864_p2 = ($signed(right_bound_reg_606) + $signed(32'd1));

assign add_ln1149_fu_1859_p2 = ($signed(j_4_fu_1851_p3) + $signed(original_ppl));

assign add_ln1151_1_fu_2988_p2 = (j_5_reg_802 + 64'd1);

assign add_ln1151_2_fu_2953_p2 = (indvar_flatten_reg_780 + 66'd1);

assign add_ln1151_fu_2881_p2 = ($signed(sext_ln1151_3_fu_2877_p1) + $signed(33'd1));

assign add_ln1153_fu_3111_p2 = (select_ln1140_fu_3000_p3 + 2'd1);

assign add_ln1155_1_fu_3076_p2 = (sub_ln1155_1_fu_3058_p2 + zext_ln1155_fu_3072_p1);

assign add_ln1155_fu_3177_p2 = (sub_ln1155_fu_3171_p2 + add_ln54_4_reg_3876);

assign add_ln1157_fu_2982_p2 = (ap_phi_mux_temp_size_phi_fu_795_p4 + 64'd1);

assign add_ln1163_1_fu_2584_p2 = (indvar_flatten7_reg_738 + 33'd1);

assign add_ln1163_fu_2631_p2 = (j_6_reg_760 + 33'd1);

assign add_ln1165_fu_2766_p2 = (select_ln1163_fu_2643_p3 + 2'd1);

assign add_ln1167_1_fu_2731_p2 = (sub_ln1167_1_fu_2675_p2 + zext_ln1167_fu_2727_p1);

assign add_ln1167_fu_2836_p2 = ($signed(sub_ln1167_fu_2830_p2) + $signed(sext_ln1167_fu_2772_p1));

assign add_ln1169_fu_2625_p2 = (ap_phi_mux_temp_size_1_phi_fu_753_p4 + 31'd1);

assign add_ln1175_fu_1713_p2 = ($signed(row_list_size_assign_reg_534) + $signed(32'd4294967295));

assign add_ln1192_1_fu_2300_p2 = (indvar_flatten15_reg_696 + 33'd1);

assign add_ln1192_fu_2347_p2 = (j_7_reg_718 + 33'd1);

assign add_ln1194_fu_2482_p2 = (select_ln1192_fu_2359_p3 + 2'd1);

assign add_ln1196_1_fu_2447_p2 = (sub_ln1196_1_fu_2391_p2 + zext_ln1196_fu_2443_p1);

assign add_ln1196_fu_2552_p2 = ($signed(sub_ln1196_fu_2546_p2) + $signed(sext_ln1196_fu_2488_p1));

assign add_ln1198_fu_2341_p2 = (ap_phi_mux_temp_size_2_phi_fu_711_p4 + 31'd1);

assign add_ln11_fu_3294_p2 = (select_ln9_fu_3232_p3 + 2'd1);

assign add_ln1204_1_fu_1965_p2 = ($signed(sext_ln1204_3_fu_1962_p1) + $signed(33'd1));

assign add_ln1204_2_fu_2072_p2 = (j_8_reg_676 + 64'd1);

assign add_ln1204_3_fu_2037_p2 = (indvar_flatten23_reg_654 + 66'd1);

assign add_ln1204_fu_1945_p2 = ($signed(sub_ln1204_1_fu_1940_p2) + $signed(select_ln1175_reg_3613));

assign add_ln1206_fu_2195_p2 = (select_ln1140_2_fu_2084_p3 + 2'd1);

assign add_ln1208_1_fu_2160_p2 = (sub_ln1208_1_fu_2142_p2 + zext_ln1208_fu_2156_p1);

assign add_ln1208_fu_2261_p2 = (sub_ln1208_fu_2255_p2 + add_ln54_7_reg_3719);

assign add_ln1210_fu_2066_p2 = (ap_phi_mux_temp_size_3_phi_fu_669_p4 + 64'd1);

assign add_ln1215_fu_2292_p2 = (p_read1 + 32'd1);

assign add_ln1224_fu_1410_p2 = (ap_phi_mux_j_2_phi_fu_622_p4 + 32'd1);

assign add_ln1226_fu_1427_p2 = (row_list_q0 + zext_ln1224_reg_3541);

assign add_ln1245_fu_1248_p2 = (ap_phi_mux_j_1_phi_fu_574_p4 + 32'd1);

assign add_ln13_fu_3278_p2 = ($signed(sub_ln13_cast_fu_3270_p1) + $signed(zext_ln13_2_fu_3274_p1));

assign add_ln341_fu_1152_p2 = ($signed(zext_ln341_fu_1148_p1) + $signed(9'd385));

assign add_ln510_1_fu_1610_p2 = ($signed(zext_ln510_1_fu_1607_p1) + $signed(12'd3073));

assign add_ln510_fu_1491_p2 = ($signed(zext_ln510_fu_1488_p1) + $signed(12'd3073));

assign add_ln54_4_fu_3105_p2 = ($signed(sext_ln54_13_fu_3101_p1) + $signed(select_ln1140_1_fu_3026_p3));

assign add_ln54_5_fu_2760_p2 = ($signed(sext_ln54_16_fu_2756_p1) + $signed(select_ln1163_2_fu_2711_p3));

assign add_ln54_6_fu_2476_p2 = ($signed(sext_ln54_17_fu_2472_p1) + $signed(select_ln1192_2_fu_2427_p3));

assign add_ln54_7_fu_2189_p2 = ($signed(sext_ln54_18_fu_2185_p1) + $signed(select_ln1140_3_fu_2110_p3));

assign add_ln54_fu_992_p2 = ($signed(sext_ln54_fu_988_p1) + $signed(sext_ln1115_reg_3391));

assign add_ln9_1_fu_3208_p2 = (indvar_flatten31_reg_822 + 6'd1);

assign add_ln9_fu_3220_p2 = (ap_phi_mux_i_10_phi_fu_837_p4 + 5'd1);

assign and_ln1144_fu_1839_p2 = (icmp_ln1144_fu_1827_p2 & icmp_ln1144_1_fu_1833_p2);

assign and_ln1175_fu_1731_p2 = (icmp_ln1180_fu_1725_p2 & icmp_ln1175_fu_1719_p2);

assign and_ln1247_1_fu_1378_p2 = (grp_fu_877_p2 & and_ln1247_fu_1372_p2);

assign and_ln1247_fu_1372_p2 = (or_ln1247_fu_1364_p2 & or_ln1247_1_fu_1368_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp7_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp7_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

assign ap_return_0 = original_ppl;

assign ap_return_1 = add_ln1215_reg_3740;

assign data_V_10_fu_1271_p1 = dc_9_reg_3486;

assign data_V_11_fu_1295_p1 = grp_fu_881_p1;

assign data_V_12_fu_1439_p1 = grp_fu_881_p1;

assign data_V_13_fu_1457_p1 = grp_fu_885_p1;

assign data_V_fu_1109_p1 = dc_reg_3455;

assign grp_fu_868_p0 = (z_top - apexZ0);

assign grp_fu_871_p0 = add_ln1121_fu_1099_p2;

assign grp_fu_877_p0 = p_Result_9_fu_1282_p3;

assign grp_fu_877_p1 = p_Result_10_fu_1307_p3;

assign grp_fu_885_p0 = (row_list_q0 - zext_ln1224_reg_3541);

assign grp_fu_888_p2 = (($signed(original_ppl) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1115_1_fu_953_p2 = ((ap_phi_mux_row_list_size_phi_fu_526_p4 == trunc_ln54_reg_3386) ? 1'b1 : 1'b0);

assign icmp_ln1115_fu_899_p2 = (($signed(GDn_points_q0) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1144_1_fu_1833_p2 = (($signed(start_value_reg_558) > $signed(64'd10)) ? 1'b1 : 1'b0);

assign icmp_ln1144_fu_1827_p2 = ((start_index_reg_546 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1149_fu_1870_p2 = (($signed(add_ln1149_fu_1859_p2) > $signed(add_ln1149_1_fu_1864_p2)) ? 1'b1 : 1'b0);

assign icmp_ln1151_1_fu_2897_p2 = ((add_ln1151_fu_2881_p2 != sext_ln1151_1_fu_2871_p1) ? 1'b1 : 1'b0);

assign icmp_ln1151_2_fu_2977_p2 = ((indvar_flatten_reg_780 == mul_ln1151_reg_3847) ? 1'b1 : 1'b0);

assign icmp_ln1151_fu_1934_p2 = (($signed(j_3_fu_1929_p2) > $signed(right_bound_reg_606)) ? 1'b1 : 1'b0);

assign icmp_ln1153_fu_2994_p2 = ((z_1_reg_811 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln1163_1_fu_2620_p2 = ((indvar_flatten7_reg_738 == sub_ln1163_reg_3664) ? 1'b1 : 1'b0);

assign icmp_ln1165_fu_2637_p2 = ((z_2_reg_769 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln1175_fu_1719_p2 = ((start_index_reg_546 != add_ln1175_fu_1713_p2) ? 1'b1 : 1'b0);

assign icmp_ln1180_fu_1725_p2 = (($signed(start_value_reg_558) < $signed(64'd18446744073709551606)) ? 1'b1 : 1'b0);

assign icmp_ln1190_fu_1762_p2 = (($signed(j_10_fu_1756_p2) < $signed(j_9_reg_594)) ? 1'b1 : 1'b0);

assign icmp_ln1192_1_fu_2336_p2 = ((indvar_flatten15_reg_696 == sub_ln1192_reg_3641) ? 1'b1 : 1'b0);

assign icmp_ln1194_fu_2353_p2 = ((z_3_reg_727 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln11_fu_3226_p2 = ((z_reg_844 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln1204_1_fu_1981_p2 = ((add_ln1204_1_fu_1965_p2 != sext_ln1204_1_fu_1954_p1) ? 1'b1 : 1'b0);

assign icmp_ln1204_2_fu_2061_p2 = ((indvar_flatten23_reg_654 == mul_ln1204_reg_3690) ? 1'b1 : 1'b0);

assign icmp_ln1204_fu_1768_p2 = (($signed(j_10_fu_1756_p2) > $signed(select_ln1175_fu_1743_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1206_fu_2078_p2 = ((z_4_reg_685 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln1224_fu_1416_p2 = ((ap_phi_mux_j_2_phi_fu_622_p4 == row_list_size_assign_reg_534) ? 1'b1 : 1'b0);

assign icmp_ln1226_fu_1572_p2 = (($signed(val_4_fu_1564_p3) < $signed(lbVal_reg_642)) ? 1'b1 : 1'b0);

assign icmp_ln1232_fu_1691_p2 = (($signed(val_5_fu_1683_p3) < $signed(rbVal_reg_630)) ? 1'b1 : 1'b0);

assign icmp_ln1245_fu_1254_p2 = ((ap_phi_mux_j_1_phi_fu_574_p4 == row_list_size_assign_reg_534) ? 1'b1 : 1'b0);

assign icmp_ln1247_1_fu_1346_p2 = ((trunc_ln1247_fu_1278_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln1247_2_fu_1352_p2 = ((tmp_124_fu_1330_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln1247_3_fu_1358_p2 = ((trunc_ln1247_1_fu_1303_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln1247_fu_1340_p2 = ((tmp_s_fu_1320_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_3214_p2 = ((indvar_flatten31_reg_822 == 6'd48) ? 1'b1 : 1'b0);

assign init_patch1_address0 = init_patch1_addr_reg_3921;

assign init_patch1_d0 = temp_q0;

assign init_patch2_address0 = init_patch2_addr_reg_3926;

assign init_patch2_d0 = temp_q0;

assign init_patch3_address0 = init_patch3_addr_reg_3931;

assign init_patch3_d0 = temp_q0;

assign init_patch4_address0 = init_patch4_addr_reg_3936;

assign init_patch4_d0 = temp_q0;

assign init_patch_address0 = init_patch_addr_reg_3916;

assign init_patch_d0 = temp_q0;

assign isNeg_4_fu_1497_p3 = add_ln510_fu_1491_p2[32'd11];

assign isNeg_5_fu_1616_p3 = add_ln510_1_fu_1610_p2[32'd11];

assign isNeg_fu_1158_p3 = add_ln341_fu_1152_p2[32'd8];

assign j_10_fu_1756_p2 = (sub_ln1190_fu_1751_p2 + 32'd1);

assign j_3_fu_1929_p2 = (add_ln1149_1_fu_1864_p2 - original_ppl);

assign j_4_fu_1851_p3 = ((and_ln1144_fu_1839_p2[0:0] == 1'b1) ? start_index_1_fu_1845_p2 : start_index_reg_546);

assign lbVal_2_fu_1586_p3 = ((icmp_ln1226_fu_1572_p2[0:0] == 1'b1) ? val_4_fu_1564_p3 : lbVal_reg_642);

assign leftRight_offset_read_read_fu_278_p2 = leftRight_offset;

assign lshr_ln1117_fu_1083_p2 = GDarray_q0 >> zext_ln1117_2_fu_1079_p1;

assign lshr_ln1155_fu_3197_p2 = GDarray_q0 >> zext_ln1155_2_fu_3193_p1;

assign lshr_ln1167_fu_2857_p2 = GDarray_q0 >> zext_ln1167_3_fu_2853_p1;

assign lshr_ln1196_fu_2573_p2 = GDarray_q0 >> zext_ln1196_3_fu_2569_p1;

assign lshr_ln1208_fu_2281_p2 = GDarray_q0 >> zext_ln1208_2_fu_2277_p1;

assign mantissa_4_fu_1475_p4 = {{{{1'd1}, {tmp_165_reg_3577}}}, {1'd0}};

assign mantissa_5_fu_1594_p4 = {{{{1'd1}, {tmp_167_reg_3588}}}, {1'd0}};

assign mantissa_fu_1134_p4 = {{{{1'd1}, {tmp_163_fu_1130_p1}}}, {1'd0}};

assign mul_ln1117_fu_1004_p0 = mul_ln1117_fu_1004_p00;

assign mul_ln1117_fu_1004_p00 = $unsigned(sext_ln1117_fu_997_p1);

assign mul_ln1117_fu_1004_p1 = 129'd24595658764946068822;

assign mul_ln1151_fu_2947_p0 = mul_ln1151_fu_2947_p00;

assign mul_ln1151_fu_2947_p00 = $unsigned(sext_ln1151_5_fu_2939_p1);

assign mul_ln1151_fu_2947_p1 = 66'd3;

assign mul_ln1155_fu_3120_p0 = mul_ln1155_fu_3120_p00;

assign mul_ln1155_fu_3120_p00 = add_ln54_4_reg_3876;

assign mul_ln1155_fu_3120_p1 = 129'd24595658764946068822;

assign mul_ln1167_fu_2779_p0 = mul_ln1167_fu_2779_p00;

assign mul_ln1167_fu_2779_p00 = $unsigned(sext_ln1167_fu_2772_p1);

assign mul_ln1167_fu_2779_p1 = 129'd24595658764946068822;

assign mul_ln1196_fu_2495_p0 = mul_ln1196_fu_2495_p00;

assign mul_ln1196_fu_2495_p00 = $unsigned(sext_ln1196_fu_2488_p1);

assign mul_ln1196_fu_2495_p1 = 129'd24595658764946068822;

assign mul_ln1204_fu_2031_p0 = mul_ln1204_fu_2031_p00;

assign mul_ln1204_fu_2031_p00 = $unsigned(sext_ln1204_5_fu_2023_p1);

assign mul_ln1204_fu_2031_p1 = 66'd3;

assign mul_ln1208_fu_2204_p0 = mul_ln1208_fu_2204_p00;

assign mul_ln1208_fu_2204_p00 = add_ln54_7_reg_3719;

assign mul_ln1208_fu_2204_p1 = 129'd24595658764946068822;

assign or_ln1247_1_fu_1368_p2 = (icmp_ln1247_3_reg_3516 | icmp_ln1247_2_reg_3511);

assign or_ln1247_fu_1364_p2 = (icmp_ln1247_reg_3501 | icmp_ln1247_1_reg_3506);

assign or_ln54_fu_937_p2 = (sub_ln54_fu_931_p2 | 17'd16);

assign p_Result_10_fu_1307_p3 = {{1'd0}, {trunc_ln368_1_fu_1299_p1}};

assign p_Result_11_fu_1705_p3 = ((icmp_ln1232_fu_1691_p2[0:0] == 1'b1) ? val_5_fu_1683_p3 : rbVal_reg_630);

assign p_Result_9_fu_1282_p3 = {{1'd0}, {trunc_ln368_fu_1274_p1}};

assign p_Result_s_fu_1112_p3 = data_V_fu_1109_p1[32'd31];

assign p_shl1_fu_1813_p3 = {{trunc_ln1192_fu_1778_p1}, {2'd0}};

assign p_shl2_cast_fu_2134_p3 = {{trunc_ln1208_1_fu_2130_p1}, {2'd0}};

assign p_shl7_fu_1915_p3 = {{trunc_ln1163_fu_1880_p1}, {2'd0}};

assign p_shl_cast_fu_3050_p3 = {{trunc_ln1155_1_fu_3046_p1}, {2'd0}};

assign r_V_10_fu_1530_p2 = zext_ln15_4_fu_1484_p1 >> sh_prom_i_i_i_i_i_i_cast_cast_cast_cast_fu_1526_p1;

assign r_V_11_fu_1536_p2 = zext_ln15_4_fu_1484_p1 << sh_prom_i_i_i_i_i_i_cast_cast_cast_cast_fu_1526_p1;

assign r_V_12_fu_1649_p2 = zext_ln15_5_fu_1603_p1 >> sh_prom_i_i_i_i_i59_i_cast_cast_cast_cast_fu_1645_p1;

assign r_V_13_fu_1655_p2 = zext_ln15_5_fu_1603_p1 << sh_prom_i_i_i_i_i59_i_cast_cast_cast_cast_fu_1645_p1;

assign r_V_9_fu_1198_p2 = zext_ln15_fu_1144_p1 << sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_1188_p1;

assign r_V_fu_1192_p2 = zext_ln15_fu_1144_p1 >> sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_1188_p1;

assign radii_address0 = zext_ln1111_fu_893_p1;

assign result_V_15_fu_1234_p2 = (64'd0 - val_fu_1226_p3);

assign result_V_fu_1240_p3 = ((p_Result_s_fu_1112_p3[0:0] == 1'b1) ? result_V_15_fu_1234_p2 : val_fu_1226_p3);

assign row_list_d0 = lshr_ln1117_fu_1083_p2[63:0];

assign row_list_size_cast9_fu_1067_p1 = row_list_size_reg_522_pp0_iter1_reg;

assign select_ln1140_1_fu_3026_p3 = ((icmp_ln1153_fu_2994_p2[0:0] == 1'b1) ? sub_ln54_14_fu_3020_p2 : sub_ln54_10_fu_2971_p2);

assign select_ln1140_2_fu_2084_p3 = ((icmp_ln1206_fu_2078_p2[0:0] == 1'b1) ? 2'd0 : z_4_reg_685);

assign select_ln1140_3_fu_2110_p3 = ((icmp_ln1206_fu_2078_p2[0:0] == 1'b1) ? sub_ln54_17_fu_2104_p2 : sub_ln54_13_fu_2055_p2);

assign select_ln1140_fu_3000_p3 = ((icmp_ln1153_fu_2994_p2[0:0] == 1'b1) ? 2'd0 : z_1_reg_811);

assign select_ln1151_1_fu_3034_p3 = ((icmp_ln1153_fu_2994_p2[0:0] == 1'b1) ? add_ln1157_fu_2982_p2 : ap_phi_mux_temp_size_phi_fu_795_p4);

assign select_ln1151_2_fu_3064_p3 = ((icmp_ln1153_fu_2994_p2[0:0] == 1'b1) ? add_ln1151_1_fu_2988_p2 : j_5_reg_802);

assign select_ln1151_fu_2903_p3 = ((icmp_ln1151_1_fu_2897_p2[0:0] == 1'b1) ? sub_ln1151_fu_2891_p2 : 34'd1);

assign select_ln1163_1_fu_2651_p3 = ((icmp_ln1165_fu_2637_p2[0:0] == 1'b1) ? add_ln1169_fu_2625_p2 : ap_phi_mux_temp_size_1_phi_fu_753_p4);

assign select_ln1163_2_fu_2711_p3 = ((icmp_ln1165_fu_2637_p2[0:0] == 1'b1) ? sub_ln54_15_fu_2705_p2 : sub_ln54_11_fu_2614_p2);

assign select_ln1163_3_fu_2719_p3 = ((icmp_ln1165_fu_2637_p2[0:0] == 1'b1) ? add_ln1163_fu_2631_p2 : j_6_reg_760);

assign select_ln1163_fu_2643_p3 = ((icmp_ln1165_fu_2637_p2[0:0] == 1'b1) ? 2'd0 : z_2_reg_769);

assign select_ln1175_fu_1743_p3 = ((and_ln1175_fu_1731_p2[0:0] == 1'b1) ? start_index_2_fu_1737_p2 : start_index_reg_546);

assign select_ln1192_1_fu_2367_p3 = ((icmp_ln1194_fu_2353_p2[0:0] == 1'b1) ? add_ln1198_fu_2341_p2 : ap_phi_mux_temp_size_2_phi_fu_711_p4);

assign select_ln1192_2_fu_2427_p3 = ((icmp_ln1194_fu_2353_p2[0:0] == 1'b1) ? sub_ln54_16_fu_2421_p2 : sub_ln54_12_fu_2330_p2);

assign select_ln1192_3_fu_2435_p3 = ((icmp_ln1194_fu_2353_p2[0:0] == 1'b1) ? add_ln1192_fu_2347_p2 : j_7_reg_718);

assign select_ln1192_fu_2359_p3 = ((icmp_ln1194_fu_2353_p2[0:0] == 1'b1) ? 2'd0 : z_3_reg_727);

assign select_ln1204_1_fu_2118_p3 = ((icmp_ln1206_fu_2078_p2[0:0] == 1'b1) ? add_ln1210_fu_2066_p2 : ap_phi_mux_temp_size_3_phi_fu_669_p4);

assign select_ln1204_2_fu_2148_p3 = ((icmp_ln1206_fu_2078_p2[0:0] == 1'b1) ? add_ln1204_2_fu_2072_p2 : j_8_reg_676);

assign select_ln1204_fu_1987_p3 = ((icmp_ln1204_1_fu_1981_p2[0:0] == 1'b1) ? sub_ln1204_fu_1975_p2 : 34'd1);

assign select_ln1226_fu_1578_p3 = ((icmp_ln1226_fu_1572_p2[0:0] == 1'b1) ? j_2_reg_618_pp2_iter2_reg : j_9_reg_594);

assign select_ln1232_fu_1697_p3 = ((icmp_ln1232_fu_1691_p2[0:0] == 1'b1) ? j_2_reg_618_pp2_iter2_reg : right_bound_reg_606);

assign select_ln1247_1_fu_1392_p3 = ((and_ln1247_1_fu_1378_p2[0:0] == 1'b1) ? sub_ln1247_reg_3479 : start_value_reg_558);

assign select_ln1247_2_fu_1399_p3 = ((and_ln1247_1_fu_1378_p2[0:0] == 1'b1) ? sub_ln1247_reg_3479 : p_x_assign_7_reg_582);

assign select_ln1247_fu_1384_p3 = ((and_ln1247_1_fu_1378_p2[0:0] == 1'b1) ? j_1_reg_570_pp1_iter1_reg : start_index_reg_546);

assign select_ln9_1_fu_3240_p3 = ((icmp_ln11_fu_3226_p2[0:0] == 1'b1) ? add_ln9_fu_3220_p2 : ap_phi_mux_i_10_phi_fu_837_p4);

assign select_ln9_fu_3232_p3 = ((icmp_ln11_fu_3226_p2[0:0] == 1'b1) ? 2'd0 : z_reg_844);

assign sext_ln1115_fu_943_p1 = $signed(or_ln54_fu_937_p2);

assign sext_ln1117_fu_997_p1 = $signed(add_ln54_reg_3405);

assign sext_ln1151_1_fu_2871_p1 = j_3_reg_3669;

assign sext_ln1151_2_fu_2874_p1 = j_3_reg_3669;

assign sext_ln1151_3_fu_2877_p1 = right_bound_reg_606;

assign sext_ln1151_4_fu_2887_p1 = add_ln1151_fu_2881_p2;

assign sext_ln1151_5_fu_2939_p1 = $signed(select_ln1151_fu_2903_p3);

assign sext_ln1151_fu_2868_p1 = j_3_reg_3669;

assign sext_ln1163_fu_1876_p1 = j_4_fu_1851_p3;

assign sext_ln1167_fu_2772_p1 = $signed(add_ln54_5_reg_3817);

assign sext_ln1192_fu_1774_p1 = j_9_reg_594;

assign sext_ln1196_fu_2488_p1 = $signed(add_ln54_6_reg_3773);

assign sext_ln1204_1_fu_1954_p1 = add_ln1204_fu_1945_p2;

assign sext_ln1204_2_fu_1958_p1 = add_ln1204_fu_1945_p2;

assign sext_ln1204_3_fu_1962_p1 = select_ln1175_reg_3613;

assign sext_ln1204_4_fu_1971_p1 = add_ln1204_1_fu_1965_p2;

assign sext_ln1204_5_fu_2023_p1 = $signed(select_ln1204_fu_1987_p3);

assign sext_ln1204_fu_1950_p1 = add_ln1204_fu_1945_p2;

assign sext_ln1311_4_fu_1510_p1 = $signed(sub_ln1311_4_fu_1505_p2);

assign sext_ln1311_5_fu_1629_p1 = $signed(sub_ln1311_5_fu_1624_p2);

assign sext_ln1311_fu_1172_p1 = $signed(sub_ln1311_fu_1166_p2);

assign sext_ln13_fu_3284_p1 = $signed(add_ln13_fu_3278_p2);

assign sext_ln54_10_fu_2610_p1 = $signed(shl_ln54_14_fu_2602_p3);

assign sext_ln54_11_fu_2314_p1 = $signed(shl_ln54_15_fu_2306_p3);

assign sext_ln54_12_fu_2326_p1 = $signed(shl_ln54_16_fu_2318_p3);

assign sext_ln54_13_fu_3101_p1 = $signed(tmp1_fu_3091_p4);

assign sext_ln54_14_fu_2689_p1 = $signed(shl_ln54_24_mid1_fu_2681_p3);

assign sext_ln54_15_fu_2701_p1 = $signed(shl_ln54_25_mid1_fu_2693_p3);

assign sext_ln54_16_fu_2756_p1 = $signed(tmp2_fu_2746_p4);

assign sext_ln54_17_fu_2472_p1 = $signed(tmp3_fu_2462_p4);

assign sext_ln54_18_fu_2185_p1 = $signed(tmp4_fu_2175_p4);

assign sext_ln54_19_fu_2405_p1 = $signed(shl_ln54_26_mid1_fu_2397_p3);

assign sext_ln54_20_fu_2417_p1 = $signed(shl_ln54_27_mid1_fu_2409_p3);

assign sext_ln54_9_fu_2598_p1 = $signed(shl_ln54_13_fu_2590_p3);

assign sext_ln54_fu_988_p1 = $signed(sub_ln54_5_fu_982_p2);

assign sh_prom_i_i_i_i_i59_i_cast_cast_cast_cast_fu_1645_p1 = $unsigned(sh_prom_i_i_i_i_i59_i_cast_cast_cast_fu_1641_p1);

assign sh_prom_i_i_i_i_i59_i_cast_cast_cast_fu_1641_p1 = $signed(ush_5_fu_1633_p3);

assign sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_1188_p1 = $unsigned(sh_prom_i_i_i_i_i_cast_cast_cast_fu_1184_p1);

assign sh_prom_i_i_i_i_i_cast_cast_cast_fu_1184_p1 = $signed(ush_fu_1176_p3);

assign sh_prom_i_i_i_i_i_i_cast_cast_cast_cast_fu_1526_p1 = $unsigned(sh_prom_i_i_i_i_i_i_cast_cast_cast_fu_1522_p1);

assign sh_prom_i_i_i_i_i_i_cast_cast_cast_fu_1522_p1 = $signed(ush_4_fu_1514_p3);

assign shl_ln1117_1_fu_1035_p3 = {{tmp_40_fu_1025_p4}, {5'd0}};

assign shl_ln1117_2_fu_1043_p3 = {{tmp_fu_1010_p4}, {3'd0}};

assign shl_ln1155_1_fu_3151_p3 = {{tmp_66_fu_3141_p4}, {5'd0}};

assign shl_ln1155_2_fu_3159_p3 = {{tmp_158_fu_3126_p4}, {3'd0}};

assign shl_ln1167_1_fu_2810_p3 = {{tmp_69_fu_2800_p4}, {5'd0}};

assign shl_ln1167_2_fu_2818_p3 = {{tmp_159_fu_2785_p4}, {3'd0}};

assign shl_ln1196_1_fu_2526_p3 = {{tmp_72_fu_2516_p4}, {5'd0}};

assign shl_ln1196_2_fu_2534_p3 = {{tmp_160_fu_2501_p4}, {3'd0}};

assign shl_ln1208_1_fu_2235_p3 = {{tmp_77_fu_2225_p4}, {5'd0}};

assign shl_ln1208_2_fu_2243_p3 = {{tmp_161_fu_2210_p4}, {3'd0}};

assign shl_ln54_10_fu_1995_p3 = {{i}, {13'd0}};

assign shl_ln54_11_fu_2006_p3 = {{i}, {11'd0}};

assign shl_ln54_12_fu_2965_p2 = j_5_reg_802 << 64'd3;

assign shl_ln54_13_fu_2590_p3 = {{j_6_reg_760}, {5'd0}};

assign shl_ln54_14_fu_2602_p3 = {{j_6_reg_760}, {3'd0}};

assign shl_ln54_15_fu_2306_p3 = {{j_7_reg_718}, {5'd0}};

assign shl_ln54_16_fu_2318_p3 = {{j_7_reg_718}, {3'd0}};

assign shl_ln54_17_fu_2043_p2 = j_8_reg_676 << 64'd5;

assign shl_ln54_18_fu_2049_p2 = j_8_reg_676 << 64'd3;

assign shl_ln54_19_fu_3008_p2 = add_ln1151_1_fu_2988_p2 << 64'd5;

assign shl_ln54_1_fu_920_p3 = {{i}, {11'd0}};

assign shl_ln54_20_fu_3014_p2 = add_ln1151_1_fu_2988_p2 << 64'd3;

assign shl_ln54_21_fu_2092_p2 = add_ln1204_2_fu_2072_p2 << 64'd5;

assign shl_ln54_22_fu_2098_p2 = add_ln1204_2_fu_2072_p2 << 64'd3;

assign shl_ln54_24_mid1_fu_2681_p3 = {{add_ln1163_fu_2631_p2}, {5'd0}};

assign shl_ln54_25_mid1_fu_2693_p3 = {{add_ln1163_fu_2631_p2}, {3'd0}};

assign shl_ln54_26_mid1_fu_2397_p3 = {{add_ln1192_fu_2347_p2}, {5'd0}};

assign shl_ln54_27_mid1_fu_2409_p3 = {{add_ln1192_fu_2347_p2}, {3'd0}};

assign shl_ln54_2_fu_958_p3 = {{ap_phi_mux_row_list_size_phi_fu_526_p4}, {5'd0}};

assign shl_ln54_3_fu_970_p3 = {{ap_phi_mux_row_list_size_phi_fu_526_p4}, {3'd0}};

assign shl_ln54_4_fu_2911_p3 = {{i}, {13'd0}};

assign shl_ln54_5_fu_2922_p3 = {{i}, {11'd0}};

assign shl_ln54_6_fu_1883_p3 = {{i}, {13'd0}};

assign shl_ln54_7_fu_1894_p3 = {{i}, {11'd0}};

assign shl_ln54_8_fu_1781_p3 = {{i}, {13'd0}};

assign shl_ln54_9_fu_1792_p3 = {{i}, {11'd0}};

assign shl_ln54_fu_2959_p2 = j_5_reg_802 << 64'd5;

assign shl_ln54_s_fu_909_p3 = {{i}, {13'd0}};

assign shl_ln5_fu_3186_p3 = {{add_ln1155_reg_3892}, {3'd0}};

assign shl_ln6_fu_2846_p3 = {{add_ln1167_reg_3832}, {3'd0}};

assign shl_ln7_fu_2562_p3 = {{add_ln1196_reg_3788}, {3'd0}};

assign shl_ln8_fu_2270_p3 = {{add_ln1208_reg_3735}, {3'd0}};

assign shl_ln_fu_1072_p3 = {{add_ln1117_reg_3415}, {3'd0}};

assign start_index_1_fu_1845_p2 = ($signed(start_index_reg_546) + $signed(32'd4294967295));

assign start_index_2_fu_1737_p2 = (start_index_reg_546 + 32'd1);

assign sub_ln1117_fu_1055_p2 = (zext_ln1117_1_fu_1051_p1 - shl_ln1117_1_fu_1035_p3);

assign sub_ln1151_fu_2891_p2 = ($signed(sext_ln1151_4_fu_2887_p1) - $signed(sext_ln1151_2_fu_2874_p1));

assign sub_ln1155_1_fu_3058_p2 = (p_shl_cast_fu_3050_p3 - trunc_ln1155_fu_3042_p1);

assign sub_ln1155_fu_3171_p2 = (zext_ln1155_1_fu_3167_p1 - shl_ln1155_1_fu_3151_p3);

assign sub_ln1163_fu_1923_p2 = (p_shl7_fu_1915_p3 - zext_ln1163_fu_1911_p1);

assign sub_ln1167_1_fu_2675_p2 = (tmp_68_cast_fu_2667_p3 - trunc_ln1167_fu_2659_p1);

assign sub_ln1167_fu_2830_p2 = (zext_ln1167_1_fu_2826_p1 - shl_ln1167_1_fu_2810_p3);

assign sub_ln1190_fu_1751_p2 = ($signed(select_ln1175_fu_1743_p3) - $signed(original_ppl));

assign sub_ln1192_fu_1821_p2 = (p_shl1_fu_1813_p3 - zext_ln1192_fu_1809_p1);

assign sub_ln1196_1_fu_2391_p2 = (tmp_71_cast_fu_2383_p3 - trunc_ln1196_fu_2375_p1);

assign sub_ln1196_fu_2546_p2 = (zext_ln1196_1_fu_2542_p1 - shl_ln1196_1_fu_2526_p3);

assign sub_ln1204_1_fu_1940_p2 = (32'd1 - original_ppl);

assign sub_ln1204_fu_1975_p2 = ($signed(sext_ln1204_4_fu_1971_p1) - $signed(sext_ln1204_2_fu_1958_p1));

assign sub_ln1208_1_fu_2142_p2 = (p_shl2_cast_fu_2134_p3 - trunc_ln1208_fu_2126_p1);

assign sub_ln1208_fu_2255_p2 = (zext_ln1208_1_fu_2251_p1 - shl_ln1208_1_fu_2235_p3);

assign sub_ln1247_fu_1265_p2 = (row_list_q0 - result_V_reg_3460);

assign sub_ln1311_4_fu_1505_p2 = (11'd1023 - tmp_164_reg_3571);

assign sub_ln1311_5_fu_1624_p2 = (11'd1023 - tmp_166_reg_3582);

assign sub_ln1311_fu_1166_p2 = (8'd127 - tmp_162_fu_1120_p4);

assign sub_ln13_cast_fu_3270_p1 = $signed(sub_ln13_fu_3264_p2);

assign sub_ln13_fu_3264_p2 = (zext_ln13_1_fu_3260_p1 - zext_ln13_fu_3248_p1);

assign sub_ln54_10_fu_2971_p2 = (shl_ln54_fu_2959_p2 - shl_ln54_12_fu_2965_p2);

assign sub_ln54_11_fu_2614_p2 = ($signed(sext_ln54_9_fu_2598_p1) - $signed(sext_ln54_10_fu_2610_p1));

assign sub_ln54_12_fu_2330_p2 = ($signed(sext_ln54_11_fu_2314_p1) - $signed(sext_ln54_12_fu_2326_p1));

assign sub_ln54_13_fu_2055_p2 = (shl_ln54_17_fu_2043_p2 - shl_ln54_18_fu_2049_p2);

assign sub_ln54_14_fu_3020_p2 = (shl_ln54_19_fu_3008_p2 - shl_ln54_20_fu_3014_p2);

assign sub_ln54_15_fu_2705_p2 = ($signed(sext_ln54_14_fu_2689_p1) - $signed(sext_ln54_15_fu_2701_p1));

assign sub_ln54_16_fu_2421_p2 = ($signed(sext_ln54_19_fu_2405_p1) - $signed(sext_ln54_20_fu_2417_p1));

assign sub_ln54_17_fu_2104_p2 = (shl_ln54_21_fu_2092_p2 - shl_ln54_22_fu_2098_p2);

assign sub_ln54_5_fu_982_p2 = (zext_ln54_3_fu_966_p1 - zext_ln54_4_fu_978_p1);

assign sub_ln54_6_fu_2933_p2 = (zext_ln54_5_fu_2918_p1 - zext_ln54_6_fu_2929_p1);

assign sub_ln54_7_fu_1905_p2 = (zext_ln54_7_fu_1890_p1 - zext_ln54_8_fu_1901_p1);

assign sub_ln54_8_fu_1803_p2 = (zext_ln54_9_fu_1788_p1 - zext_ln54_10_fu_1799_p1);

assign sub_ln54_9_fu_2017_p2 = (zext_ln54_11_fu_2002_p1 - zext_ln54_12_fu_2013_p1);

assign sub_ln54_fu_931_p2 = (zext_ln54_fu_916_p1 - zext_ln54_2_fu_927_p1);

assign tmp1_fu_3091_p4 = {{{tmp_126_fu_3082_p4}, {select_ln1140_fu_3000_p3}}, {3'd0}};

assign tmp2_fu_2746_p4 = {{{tmp_127_fu_2737_p4}, {select_ln1163_fu_2643_p3}}, {3'd0}};

assign tmp3_fu_2462_p4 = {{{tmp_128_fu_2453_p4}, {select_ln1192_fu_2359_p3}}, {3'd0}};

assign tmp4_fu_2175_p4 = {{{tmp_129_fu_2166_p4}, {select_ln1140_2_fu_2084_p3}}, {3'd0}};

assign tmp_124_fu_1330_p4 = {{data_V_11_fu_1295_p1[62:52]}};

assign tmp_126_fu_3082_p4 = {{sub_ln54_6_reg_3842[16:5]}};

assign tmp_127_fu_2737_p4 = {{sub_ln54_7_reg_3659[16:5]}};

assign tmp_128_fu_2453_p4 = {{sub_ln54_8_reg_3636[16:5]}};

assign tmp_129_fu_2166_p4 = {{sub_ln54_9_reg_3685[16:5]}};

assign tmp_149_fu_1204_p3 = r_V_fu_1192_p2[32'd24];

assign tmp_153_fu_1542_p3 = r_V_10_fu_1530_p2[32'd53];

assign tmp_157_fu_1661_p3 = r_V_12_fu_1649_p2[32'd53];

assign tmp_158_fu_3126_p4 = {{mul_ln1155_fu_3120_p2[128:69]}};

assign tmp_159_fu_2785_p4 = {{mul_ln1167_fu_2779_p2[128:69]}};

assign tmp_160_fu_2501_p4 = {{mul_ln1196_fu_2495_p2[128:69]}};

assign tmp_161_fu_2210_p4 = {{mul_ln1208_fu_2204_p2[128:69]}};

assign tmp_162_fu_1120_p4 = {{data_V_fu_1109_p1[30:23]}};

assign tmp_163_fu_1130_p1 = data_V_fu_1109_p1[22:0];

assign tmp_165_fu_1453_p1 = data_V_12_fu_1439_p1[51:0];

assign tmp_167_fu_1471_p1 = data_V_13_fu_1457_p1[51:0];

assign tmp_40_fu_1025_p4 = {{mul_ln1117_fu_1004_p2[127:69]}};

assign tmp_46_fu_1216_p4 = {{r_V_9_fu_1198_p2[87:24]}};

assign tmp_51_fu_1554_p4 = {{r_V_11_fu_1536_p2[116:53]}};

assign tmp_56_fu_1673_p4 = {{r_V_13_fu_1655_p2[116:53]}};

assign tmp_66_fu_3141_p4 = {{mul_ln1155_fu_3120_p2[127:69]}};

assign tmp_68_cast_fu_2667_p3 = {{trunc_ln1167_1_fu_2663_p1}, {2'd0}};

assign tmp_69_fu_2800_p4 = {{mul_ln1167_fu_2779_p2[127:69]}};

assign tmp_71_cast_fu_2383_p3 = {{trunc_ln1196_1_fu_2379_p1}, {2'd0}};

assign tmp_72_fu_2516_p4 = {{mul_ln1196_fu_2495_p2[127:69]}};

assign tmp_77_fu_2225_p4 = {{mul_ln1208_fu_2204_p2[127:69]}};

assign tmp_79_fu_3252_p3 = {{select_ln9_1_fu_3240_p3}, {2'd0}};

assign tmp_fu_1010_p4 = {{mul_ln1117_fu_1004_p2[128:69]}};

assign tmp_s_fu_1320_p4 = {{data_V_10_fu_1271_p1[62:52]}};

assign trapezoid_edges_address0 = zext_ln1111_reg_3324;

assign trunc_ln1155_1_fu_3046_p1 = select_ln1151_1_fu_3034_p3[7:0];

assign trunc_ln1155_2_fu_3203_p1 = lshr_ln1155_fu_3197_p2[63:0];

assign trunc_ln1155_fu_3042_p1 = select_ln1151_1_fu_3034_p3[9:0];

assign trunc_ln1163_fu_1880_p1 = original_ppl[30:0];

assign trunc_ln1167_1_fu_2663_p1 = select_ln1163_1_fu_2651_p3[7:0];

assign trunc_ln1167_2_fu_2863_p1 = lshr_ln1167_fu_2857_p2[63:0];

assign trunc_ln1167_fu_2659_p1 = select_ln1163_1_fu_2651_p3[9:0];

assign trunc_ln1192_fu_1778_p1 = original_ppl[30:0];

assign trunc_ln1196_1_fu_2379_p1 = select_ln1192_1_fu_2367_p3[7:0];

assign trunc_ln1196_2_fu_2579_p1 = lshr_ln1196_fu_2573_p2[63:0];

assign trunc_ln1196_fu_2375_p1 = select_ln1192_1_fu_2367_p3[9:0];

assign trunc_ln1208_1_fu_2130_p1 = select_ln1204_1_fu_2118_p3[7:0];

assign trunc_ln1208_2_fu_2287_p1 = lshr_ln1208_fu_2281_p2[63:0];

assign trunc_ln1208_fu_2126_p1 = select_ln1204_1_fu_2118_p3[9:0];

assign trunc_ln1228_cast_fu_1422_p1 = ap_phi_mux_j_2_phi_fu_622_p4;

assign trunc_ln1247_1_fu_1303_p1 = data_V_11_fu_1295_p1[51:0];

assign trunc_ln1247_fu_1278_p1 = data_V_10_fu_1271_p1[51:0];

assign trunc_ln1249_cast_fu_1260_p1 = ap_phi_mux_j_1_phi_fu_574_p4;

assign trunc_ln13_fu_2297_p1 = p_read1[2:0];

assign trunc_ln368_1_fu_1299_p1 = data_V_11_fu_1295_p1[62:0];

assign trunc_ln368_fu_1274_p1 = data_V_10_fu_1271_p1[62:0];

assign trunc_ln54_fu_905_p1 = GDn_points_q0[30:0];

assign ush_4_fu_1514_p3 = ((isNeg_4_fu_1497_p3[0:0] == 1'b1) ? sext_ln1311_4_fu_1510_p1 : add_ln510_fu_1491_p2);

assign ush_5_fu_1633_p3 = ((isNeg_5_fu_1616_p3[0:0] == 1'b1) ? sext_ln1311_5_fu_1629_p1 : add_ln510_1_fu_1610_p2);

assign ush_fu_1176_p3 = ((isNeg_fu_1158_p3[0:0] == 1'b1) ? sext_ln1311_fu_1172_p1 : add_ln341_fu_1152_p2);

assign val_4_fu_1564_p3 = ((isNeg_4_fu_1497_p3[0:0] == 1'b1) ? zext_ln662_4_fu_1550_p1 : tmp_51_fu_1554_p4);

assign val_5_fu_1683_p3 = ((isNeg_5_fu_1616_p3[0:0] == 1'b1) ? zext_ln662_5_fu_1669_p1 : tmp_56_fu_1673_p4);

assign val_fu_1226_p3 = ((isNeg_fu_1158_p3[0:0] == 1'b1) ? zext_ln662_fu_1212_p1 : tmp_46_fu_1216_p4);

assign zext_ln1111_fu_893_p1 = i;

assign zext_ln1117_1_fu_1051_p1 = shl_ln1117_2_fu_1043_p3;

assign zext_ln1117_2_fu_1079_p1 = shl_ln_fu_1072_p3;

assign zext_ln1117_3_fu_1020_p1 = tmp_fu_1010_p4;

assign zext_ln1155_1_fu_3167_p1 = shl_ln1155_2_fu_3159_p3;

assign zext_ln1155_2_fu_3193_p1 = shl_ln5_fu_3186_p3;

assign zext_ln1155_3_fu_3182_p1 = add_ln1155_1_reg_3871_pp6_iter1_reg;

assign zext_ln1155_5_fu_3136_p1 = tmp_158_fu_3126_p4;

assign zext_ln1155_fu_3072_p1 = select_ln1140_fu_3000_p3;

assign zext_ln1163_fu_1911_p1 = trunc_ln1163_fu_1880_p1;

assign zext_ln1167_1_fu_2826_p1 = shl_ln1167_2_fu_2818_p3;

assign zext_ln1167_2_fu_2842_p1 = add_ln1167_1_reg_3812_pp5_iter1_reg;

assign zext_ln1167_3_fu_2853_p1 = shl_ln6_fu_2846_p3;

assign zext_ln1167_5_fu_2795_p1 = tmp_159_fu_2785_p4;

assign zext_ln1167_fu_2727_p1 = select_ln1163_fu_2643_p3;

assign zext_ln1192_fu_1809_p1 = trunc_ln1192_fu_1778_p1;

assign zext_ln1196_1_fu_2542_p1 = shl_ln1196_2_fu_2534_p3;

assign zext_ln1196_2_fu_2558_p1 = add_ln1196_1_reg_3768_pp4_iter1_reg;

assign zext_ln1196_3_fu_2569_p1 = shl_ln7_fu_2562_p3;

assign zext_ln1196_5_fu_2511_p1 = tmp_160_fu_2501_p4;

assign zext_ln1196_fu_2443_p1 = select_ln1192_fu_2359_p3;

assign zext_ln1208_1_fu_2251_p1 = shl_ln1208_2_fu_2243_p3;

assign zext_ln1208_2_fu_2277_p1 = shl_ln8_fu_2270_p3;

assign zext_ln1208_3_fu_2266_p1 = add_ln1208_1_reg_3714_pp3_iter1_reg;

assign zext_ln1208_5_fu_2220_p1 = tmp_161_fu_2210_p4;

assign zext_ln1208_fu_2156_p1 = select_ln1140_2_fu_2084_p3;

assign zext_ln1224_fu_1406_p1 = trapezoid_edges_q0;

assign zext_ln13_1_fu_3260_p1 = tmp_79_fu_3252_p3;

assign zext_ln13_2_fu_3274_p1 = select_ln9_fu_3232_p3;

assign zext_ln13_fu_3248_p1 = select_ln9_1_fu_3240_p3;

assign zext_ln15_4_fu_1484_p1 = mantissa_4_fu_1475_p4;

assign zext_ln15_5_fu_1603_p1 = mantissa_5_fu_1594_p4;

assign zext_ln15_fu_1144_p1 = mantissa_fu_1134_p4;

assign zext_ln341_fu_1148_p1 = tmp_162_fu_1120_p4;

assign zext_ln510_1_fu_1607_p1 = tmp_166_reg_3582;

assign zext_ln510_fu_1488_p1 = tmp_164_reg_3571;

assign zext_ln54_10_fu_1799_p1 = shl_ln54_9_fu_1792_p3;

assign zext_ln54_11_fu_2002_p1 = shl_ln54_10_fu_1995_p3;

assign zext_ln54_12_fu_2013_p1 = shl_ln54_11_fu_2006_p3;

assign zext_ln54_2_fu_927_p1 = shl_ln54_1_fu_920_p3;

assign zext_ln54_3_fu_966_p1 = shl_ln54_2_fu_958_p3;

assign zext_ln54_4_fu_978_p1 = shl_ln54_3_fu_970_p3;

assign zext_ln54_5_fu_2918_p1 = shl_ln54_4_fu_2911_p3;

assign zext_ln54_6_fu_2929_p1 = shl_ln54_5_fu_2922_p3;

assign zext_ln54_7_fu_1890_p1 = shl_ln54_6_fu_1883_p3;

assign zext_ln54_8_fu_1901_p1 = shl_ln54_7_fu_1894_p3;

assign zext_ln54_9_fu_1788_p1 = shl_ln54_8_fu_1781_p3;

assign zext_ln54_fu_916_p1 = shl_ln54_s_fu_909_p3;

assign zext_ln662_4_fu_1550_p1 = tmp_153_fu_1542_p3;

assign zext_ln662_5_fu_1669_p1 = tmp_157_fu_1661_p3;

assign zext_ln662_fu_1212_p1 = tmp_149_fu_1204_p3;

always @ (posedge ap_clk) begin
    zext_ln1111_reg_3324[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    sext_ln1115_reg_3391[10:0] <= 11'b00000010000;
    add_ln54_reg_3405[2:0] <= 3'b000;
    add_ln1117_reg_3415[2:0] <= 3'b000;
    zext_ln1224_reg_3541[63:26] <= 38'b00000000000000000000000000000000000000;
    sub_ln54_8_reg_3636[10:0] <= 11'b00000000000;
    sub_ln54_7_reg_3659[10:0] <= 11'b00000000000;
    sub_ln54_9_reg_3685[10:0] <= 11'b00000000000;
    add_ln54_7_reg_3719[2:0] <= 3'b000;
    add_ln1208_reg_3735[2:0] <= 3'b000;
    add_ln54_6_reg_3773[2:0] <= 3'b000;
    add_ln1196_reg_3788[2:0] <= 3'b000;
    add_ln54_5_reg_3817[2:0] <= 3'b000;
    add_ln1167_reg_3832[2:0] <= 3'b000;
    sub_ln54_6_reg_3842[10:0] <= 11'b00000000000;
    add_ln54_4_reg_3876[2:0] <= 3'b000;
    add_ln1155_reg_3892[2:0] <= 3'b000;
end

endmodule //makePatches_ShadowQuilt_fromEdges_makeSuperPoint_alignedToLine
